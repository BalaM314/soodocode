Parsing input: PROCEDURE OutputRange()
	"PROCEDURE"         word
	" "                 space
	"OutputRange"       word
	"("                 parentheses.open
	")"                 parentheses.close
Parsing input: DECLARE First, Last, Count, Index, ThisErr : INTEGER
	"DECLARE"           word
	" "                 space
	"First"             word
	","                 punctuation.comma
	" "                 space
	"Last"              word
	","                 punctuation.comma
	" "                 space
	"Count"             word
	","                 punctuation.comma
	" "                 space
	"Index"             word
	","                 punctuation.comma
	" "                 space
	"ThisErr"           word
	" "                 space
	":"                 punctuation.colon
	" "                 space
	"INTEGER"           word
Parsing input: DECLARE ThisMess : STRING
	"DECLARE"           word
	" "                 space
	"ThisMess"          word
	" "                 space
	":"                 punctuation.colon
	" "                 space
	"STRING"            word
Parsing input: DECLARE PastLast: BOOLEAN
	"DECLARE"           word
	" "                 space
	"PastLast"          word
	":"                 punctuation.colon
	" "                 space
	"BOOLEAN"           word
Parsing input: Count <- 0
	"Count"             word
	" "                 space
	"<-"                operator.assignment
	" "                 space
	"0"                 number.decimal
Parsing input: Index <- 1
	"Index"             word
	" "                 space
	"<-"                operator.assignment
	" "                 space
	"1"                 number.decimal
Parsing input: PastLast <- FALSE
	"PastLast"          word
	" "                 space
	"<-"                operator.assignment
	" "                 space
	"FALSE"             word
Parsing input: OUTPUT "Please input first error number: "
	"OUTPUT"            word
	" "                 space
	"""                 quote.double
	"Please"            word
	" "                 space
	"input"             word
	" "                 space
	"first"             word
	" "                 space
	"error"             word
	" "                 space
	"number"            word
	":"                 punctuation.colon
	" "                 space
	"""                 quote.double
Parsing input: INPUT First
	"INPUT"             word
	" "                 space
	"First"             word
Parsing input: OUTPUT "Please input last error number: "
	"OUTPUT"            word
	" "                 space
	"""                 quote.double
	"Please"            word
	" "                 space
	"input"             word
	" "                 space
	"last"              word
	" "                 space
	"error"             word
	" "                 space
	"number"            word
	":"                 punctuation.colon
	" "                 space
	"""                 quote.double
Parsing input: INPUT Last
	"INPUT"             word
	" "                 space
	"Last"              word
Parsing input: OUTPUT "List of error numbers from ", First, " to ",
	"OUTPUT"            word
	" "                 space
	"""                 quote.double
	"List"              word
	" "                 space
	"of"                word
	" "                 space
	"error"             word
	" "                 space
	"numbers"           word
	" "                 space
	"from"              word
	" "                 space
	"""                 quote.double
	","                 punctuation.comma
	" "                 space
	"First"             word
	","                 punctuation.comma
	" "                 space
	"""                 quote.double
	" "                 space
	"to"                word
	" "                 space
	"""                 quote.double
	","                 punctuation.comma
Parsing input: Last
	"Last"              word
Parsing input: WHILE Index < 501 AND NOT PastLast
	"WHILE"             word
	" "                 space
	"Index"             word
	" "                 space
	"<"                 operator.less_than
	" "                 space
	"501"               number.decimal
	" "                 space
	"AND"               operator.and
	" "                 space
	"NOT"               operator.not
	" "                 space
	"PastLast"          word
Parsing input: ThisErr <- ErrCode[Index]
Error: Invalid character "["
Parsing input: IF ThisErr > Last THEN
	"IF"                word
	" "                 space
	"ThisErr"           word
	" "                 space
	">"                 operator.greater_than
	" "                 space
	"Last"              word
	" "                 space
	"THEN"              word
Parsing input: PastLast <- TRUE
	"PastLast"          word
	" "                 space
	"<-"                operator.assignment
	" "                 space
	"TRUE"              word
Parsing input: ELSE
	"ELSE"              word
Parsing input: IF ThisErr >= First THEN
	"IF"                word
	" "                 space
	"ThisErr"           word
	" "                 space
	">="                operator.greater_than_equal
	" "                 space
	"First"             word
	" "                 space
	"THEN"              word
Parsing input: ThisMess <- ErrText[Index]
Error: Invalid character "["
Parsing input: IF ThisMess = "" THEN
	"IF"                word
	" "                 space
	"ThisMess"          word
	" "                 space
	"="                 operator.equal_to
	" "                 space
	"""                 quote.double
	"""                 quote.double
	" "                 space
	"THEN"              word
Parsing input: ThisMess <- "Error Text Missing"
	"ThisMess"          word
	" "                 space
	"<-"                operator.assignment
	" "                 space
	"""                 quote.double
	"Error"             word
	" "                 space
	"Text"              word
	" "                 space
	"Missing"           word
	"""                 quote.double
Parsing input: ENDIF
	"ENDIF"             word
Parsing input: OUTPUT ThisErr, " : ", ThisMess
	"OUTPUT"            word
	" "                 space
	"ThisErr"           word
	","                 punctuation.comma
	" "                 space
	"""                 quote.double
	" "                 space
	":"                 punctuation.colon
	" "                 space
	"""                 quote.double
	","                 punctuation.comma
	" "                 space
	"ThisMess"          word
Parsing input: Count <- Count + 1
	"Count"             word
	" "                 space
	"<-"                operator.assignment
	" "                 space
	"Count"             word
	" "                 space
	"+"                 operator.add
	" "                 space
	"1"                 number.decimal
Parsing input: ENDIF
	"ENDIF"             word
Parsing input: ENDIF
	"ENDIF"             word
Parsing input: Index <- Index + 1
	"Index"             word
	" "                 space
	"<-"                operator.assignment
	" "                 space
	"Index"             word
	" "                 space
	"+"                 operator.add
	" "                 space
	"1"                 number.decimal
Parsing input: ENDWHILE
	"ENDWHILE"          word
Parsing input: OUTPUT Count, " error numbers output"
	"OUTPUT"            word
	" "                 space
	"Count"             word
	","                 punctuation.comma
	" "                 space
	"""                 quote.double
	" "                 space
	"error"             word
	" "                 space
	"numbers"           word
	" "                 space
	"output"            word
	"""                 quote.double
Parsing input: ENDPROCEDURE
	"ENDPROCEDURE"      word
