v8-version,11,3,244,8,-node.19,0
v8-platform,windows,unknown
shared-library,C:\\Users\\mail2_bchn2r7\\AppData\\Local\\pnpm\\node.exe,0x7ff6cb570000,0x7ff6cfa38000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\ntdll.dll,0x7ff863b70000,0x7ff863d68000,0
shared-library,C:\\WINDOWS\\System32\\KERNEL32.DLL,0x7ff863060000,0x7ff86311d000,0
shared-library,C:\\WINDOWS\\System32\\KERNELBASE.dll,0x7ff861600000,0x7ff8618f6000,0
shared-library,C:\\WINDOWS\\System32\\WS2_32.dll,0x7ff862b60000,0x7ff862bcb000,0
shared-library,C:\\WINDOWS\\System32\\RPCRT4.dll,0x7ff862410000,0x7ff862533000,0
shared-library,C:\\WINDOWS\\System32\\ole32.dll,0x7ff8622e0000,0x7ff86240b000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbghelp.dll,0x7ff859ab0000,0x7ff859c94000,0
shared-library,C:\\WINDOWS\\System32\\ucrtbase.dll,0x7ff861220000,0x7ff861320000,0
shared-library,C:\\WINDOWS\\System32\\combase.dll,0x7ff861f40000,0x7ff862293000,0
shared-library,C:\\WINDOWS\\System32\\GDI32.dll,0x7ff863030000,0x7ff86305b000,0
shared-library,C:\\WINDOWS\\System32\\win32u.dll,0x7ff8614e0000,0x7ff861502000,0
shared-library,C:\\WINDOWS\\System32\\gdi32full.dll,0x7ff861350000,0x7ff861467000,0
shared-library,C:\\WINDOWS\\System32\\msvcp_win.dll,0x7ff861560000,0x7ff8615fd000,0
shared-library,C:\\WINDOWS\\System32\\USER32.dll,0x7ff8629c0000,0x7ff862b5f000,0
shared-library,C:\\WINDOWS\\System32\\PSAPI.DLL,0x7ff862bd0000,0x7ff862bd8000,0
shared-library,C:\\WINDOWS\\System32\\SHELL32.dll,0x7ff863270000,0x7ff8639db000,0
shared-library,C:\\WINDOWS\\System32\\ADVAPI32.dll,0x7ff862f70000,0x7ff863020000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\IPHLPAPI.DLL,0x7ff8605c0000,0x7ff8605fb000,0
shared-library,C:\\WINDOWS\\System32\\msvcrt.dll,0x7ff861ba0000,0x7ff861c3e000,0
shared-library,C:\\WINDOWS\\System32\\sechost.dll,0x7ff861c40000,0x7ff861ce0000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\USERENV.dll,0x7ff8610d0000,0x7ff8610fe000,0
shared-library,C:\\WINDOWS\\System32\\bcrypt.dll,0x7ff861320000,0x7ff861347000,0
shared-library,C:\\WINDOWS\\System32\\CRYPT32.dll,0x7ff8619b0000,0x7ff861b0e000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\WINMM.dll,0x7ff85caa0000,0x7ff85cac7000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\dbgcore.DLL,0x7ff858de0000,0x7ff858e14000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\CRYPTBASE.DLL,0x7ff860b50000,0x7ff860b5c000,0
shared-library,C:\\WINDOWS\\System32\\IMM32.DLL,0x7ff8622a0000,0x7ff8622d2000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\powrprof.dll,0x7ff861080000,0x7ff8610cb000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\UMPDC.dll,0x7ff861060000,0x7ff861072000,0
shared-library,C:\\WINDOWS\\system32\\uxtheme.dll,0x7ff85ebc0000,0x7ff85ec5e000,0
shared-library,C:\\WINDOWS\\system32\\mswsock.dll,0x7ff8608e0000,0x7ff86094a000,0
shared-library,C:\\WINDOWS\\System32\\bcryptprimitives.dll,0x7ff861b10000,0x7ff861b92000,0
shared-library,C:\\WINDOWS\\SYSTEM32\\kernel.appcore.dll,0x7ff85f0b0000,0x7ff85f0c2000,0
shared-library-end
tick,0x7ff863c0d064,69839,0,0x0,6
profiler,begin,1000
new,CodeRange,0x7ff64c400000,0
new,MemoryChunk,0x3bc4d500000,262144
new,MemoryChunk,0xa2188c0000,262144
new,MemoryChunk,0x9162000000,262144
new,MemoryChunk,0x29f5c000000,262144
new,MemoryChunk,0x3a24d9c0000,262144
heap-capacity,1030880
heap-available,2198828480
new,MemoryChunk,0x23399c0000,262144
new,MemoryChunk,0x1b932840000,270336
new,MemoryChunk,0x3fcdef80000,262144
tick,0x7ff6cbb6e929,77064,0,0x0,6
new,MemoryChunk,0x220dba80000,262144
new,MemoryChunk,0x2b9baa40000,262144
code-creation,Builtin,2,79460,0x7ff6cc29b7d4,776,DeoptimizationEntry_Eager
code-creation,Builtin,2,79520,0x7ff6cc29bb14,780,DeoptimizationEntry_Lazy
code-creation,Builtin,2,79534,0x7ff6cc29be54,2736,RecordWriteSaveFP
code-creation,Builtin,2,79549,0x7ff6cc29c914,1196,RecordWriteIgnoreFP
code-creation,Builtin,2,79561,0x7ff6cc29cdd4,344,EphemeronKeyBarrierSaveFP
code-creation,Builtin,2,79573,0x7ff6cc29cf54,124,EphemeronKeyBarrierIgnoreFP
code-creation,Builtin,2,79586,0x7ff6cc29cfd4,64,AdaptorWithBuiltinExitFrame
code-creation,Builtin,2,79598,0x7ff6cc29d054,288,CallFunction_ReceiverIsNullOrUndefined
code-creation,Builtin,2,79611,0x7ff6cc29d194,336,CallFunction_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,79705,0x7ff6cc29d314,372,CallFunction_ReceiverIsAny
code-creation,Builtin,2,79721,0x7ff6cc29d494,100,CallBoundFunction
code-creation,Builtin,2,79732,0x7ff6cc29d514,848,CallWrappedFunction
code-creation,Builtin,2,79742,0x7ff6cc29d894,168,Call_ReceiverIsNullOrUndefined
code-creation,Builtin,2,79753,0x7ff6cc29d954,168,Call_ReceiverIsNotNullOrUndefined
code-creation,Builtin,2,79764,0x7ff6cc29da14,168,Call_ReceiverIsAny
code-creation,Builtin,2,79774,0x7ff6cc29dad4,980,Call_ReceiverIsNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,79789,0x7ff6cc29ded4,972,Call_ReceiverIsNullOrUndefined_Baseline
code-creation,Builtin,2,79800,0x7ff6cc29e2d4,1048,Call_ReceiverIsNotNullOrUndefined_Baseline_Compact
code-creation,Builtin,2,79812,0x7ff6cc29e714,1040,Call_ReceiverIsNotNullOrUndefined_Baseline
code-creation,Builtin,2,79823,0x7ff6cc29eb54,1048,Call_ReceiverIsAny_Baseline_Compact
code-creation,Builtin,2,79834,0x7ff6cc29ef94,1040,Call_ReceiverIsAny_Baseline
code-creation,Builtin,2,79845,0x7ff6cc29f3d4,928,Call_ReceiverIsNullOrUndefined_WithFeedback
code-creation,Builtin,2,79856,0x7ff6cc29f794,928,Call_ReceiverIsNotNullOrUndefined_WithFeedback
code-creation,Builtin,2,79868,0x7ff6cc29fb54,928,Call_ReceiverIsAny_WithFeedback
code-creation,Builtin,2,79878,0x7ff6cc29ff14,732,CallProxy
code-creation,Builtin,2,79888,0x7ff6cc2a0214,152,CallVarargs
code-creation,Builtin,2,79897,0x7ff6cc2a02d4,940,CallWithSpread
code-creation,Builtin,2,79907,0x7ff6cc2a0694,1956,CallWithSpread_Baseline
code-creation,Builtin,2,79918,0x7ff6cc2a0e54,1908,CallWithSpread_WithFeedback
code-creation,Builtin,2,79928,0x7ff6cc2a15d4,892,CallWithArrayLike
code-creation,Builtin,2,79938,0x7ff6cc2a1954,1836,CallWithArrayLike_WithFeedback
code-creation,Builtin,2,79949,0x7ff6cc2a2094,156,CallForwardVarargs
code-creation,Builtin,2,79959,0x7ff6cc2a2154,156,CallFunctionForwardVarargs
code-creation,Builtin,2,79970,0x7ff6cc2a2214,128,CallFunctionTemplate_CheckAccess
code-creation,Builtin,2,79981,0x7ff6cc2a22d4,232,CallFunctionTemplate_CheckCompatibleReceiver
code-creation,Builtin,2,79996,0x7ff6cc2a23d4,320,CallFunctionTemplate_CheckAccessAndCompatibleReceiver
code-creation,Builtin,2,80008,0x7ff6cc2a2554,32,ConstructFunction
code-creation,Builtin,2,80018,0x7ff6cc2a2594,100,ConstructBoundFunction
code-creation,Builtin,2,80028,0x7ff6cc2a2614,28,ConstructedNonConstructable
code-creation,Builtin,2,80039,0x7ff6cc2a2654,100,Construct
code-creation,Builtin,2,80049,0x7ff6cc2a26d4,152,ConstructVarargs
code-creation,Builtin,2,80059,0x7ff6cc2a2794,968,ConstructWithSpread
code-creation,Builtin,2,80069,0x7ff6cc2a2b94,1772,ConstructWithSpread_Baseline
code-creation,Builtin,2,80080,0x7ff6cc2a3294,1748,ConstructWithSpread_WithFeedback
code-creation,Builtin,2,80091,0x7ff6cc2a3994,952,ConstructWithArrayLike
code-creation,Builtin,2,80101,0x7ff6cc2a3d54,1696,ConstructWithArrayLike_WithFeedback
code-creation,Builtin,2,80111,0x7ff6cc2a4414,196,ConstructForwardVarargs
code-creation,Builtin,2,80122,0x7ff6cc2a4514,196,ConstructFunctionForwardVarargs
code-creation,Builtin,2,80133,0x7ff6cc2a4614,788,Construct_Baseline
code-creation,Builtin,2,80144,0x7ff6cc2a4954,808,Construct_WithFeedback
code-creation,Builtin,2,80154,0x7ff6cc2a4c94,444,JSConstructStubGeneric
code-creation,Builtin,2,80165,0x7ff6cc2a4e54,340,JSBuiltinsConstructStub
code-creation,Builtin,2,80175,0x7ff6cc2a4fd4,772,FastNewObject
code-creation,Builtin,2,80185,0x7ff6cc2a5314,312,FastNewClosure
code-creation,Builtin,2,80195,0x7ff6cc2a5454,764,ConstructProxy
code-creation,Builtin,2,80205,0x7ff6cc2a5754,360,JSEntry
code-creation,Builtin,2,80215,0x7ff6cc2a58d4,360,JSConstructEntry
code-creation,Builtin,2,80224,0x7ff6cc2a5a54,360,JSRunMicrotasksEntry
code-creation,Builtin,2,80235,0x7ff6cc2a5bd4,100,JSEntryTrampoline
code-creation,Builtin,2,80245,0x7ff6cc2a5c54,100,JSConstructEntryTrampoline
code-creation,Builtin,2,80255,0x7ff6cc2a5cd4,256,ResumeGeneratorTrampoline
code-creation,Builtin,2,80266,0x7ff6cc2a5e14,1268,StringFromCodePointAt
code-creation,Builtin,2,80277,0x7ff6cc2a6314,708,StringEqual
code-creation,Builtin,2,80339,0x7ff6cc2a6614,328,StringGreaterThan
code-creation,Builtin,2,80354,0x7ff6cc2a6794,328,StringGreaterThanOrEqual
code-creation,Builtin,2,80368,0x7ff6cc2a6914,328,StringLessThan
code-creation,Builtin,2,80378,0x7ff6cc2a6a94,328,StringLessThanOrEqual
code-creation,Builtin,2,80389,0x7ff6cc2a6c14,328,StringCompare
code-creation,Builtin,2,80399,0x7ff6cc2a6d94,2392,StringSubstring
code-creation,Builtin,2,80409,0x7ff6cc2a7714,80,OrderedHashTableHealIndex
code-creation,Builtin,2,80419,0x7ff6cc2a7794,876,InterpreterEntryTrampoline
code-creation,Builtin,2,80430,0x7ff6cc2a7b14,888,InterpreterEntryTrampolineForProfiling
code-creation,Builtin,2,80441,0x7ff6cc2a7e94,76,InterpreterPushArgsThenCall
code-creation,Builtin,2,80452,0x7ff6cc2a7f14,84,InterpreterPushUndefinedAndArgsThenCall
code-creation,Builtin,2,80463,0x7ff6cc2a7f94,84,InterpreterPushArgsThenCallWithFinalSpread
code-creation,Builtin,2,80474,0x7ff6cc2a8014,84,InterpreterPushArgsThenConstruct
code-creation,Builtin,2,80484,0x7ff6cc2a8094,84,InterpreterPushArgsThenConstructArrayFunction
code-creation,Builtin,2,80496,0x7ff6cc2a8114,88,InterpreterPushArgsThenConstructWithFinalSpread
code-creation,Builtin,2,80507,0x7ff6cc2a8194,80,InterpreterEnterAtBytecode
code-creation,Builtin,2,80517,0x7ff6cc2a8214,216,InterpreterEnterAtNextBytecode
code-creation,Builtin,2,80528,0x7ff6cc2a8314,96,InterpreterOnStackReplacement
code-creation,Builtin,2,80539,0x7ff6cc2a8394,388,BaselineOutOfLinePrologue
code-creation,Builtin,2,80549,0x7ff6cc2a8554,16,BaselineOutOfLinePrologueDeopt
code-creation,Builtin,2,80560,0x7ff6cc2a8594,100,BaselineOnStackReplacement
code-creation,Builtin,2,80571,0x7ff6cc2a8614,84,BaselineLeaveFrame
code-creation,Builtin,2,80581,0x7ff6cc2a8694,212,BaselineOrInterpreterEnterAtBytecode
code-creation,Builtin,2,80591,0x7ff6cc2a8794,220,BaselineOrInterpreterEnterAtNextBytecode
code-creation,Builtin,2,80605,0x7ff6cc2a8894,184,InterpreterOnStackReplacement_ToBaseline
code-creation,Builtin,2,80620,0x7ff6cc2a8954,36,MaglevOnStackReplacement
code-creation,Builtin,2,80635,0x7ff6cc2a8994,864,CompileLazy
code-creation,Builtin,2,80652,0x7ff6cc2a8d14,68,CompileLazyDeoptimizedCode
code-creation,Builtin,2,80667,0x7ff6cc2a8d94,224,InstantiateAsmJs
code-creation,Builtin,2,80682,0x7ff6cc2a8e94,32,NotifyDeoptimized
code-creation,Builtin,2,80696,0x7ff6cc2a8ed4,52,ContinueToCodeStubBuiltin
code-creation,Builtin,2,80711,0x7ff6cc2a8f14,60,ContinueToCodeStubBuiltinWithResult
code-creation,Builtin,2,80726,0x7ff6cc2a8f54,56,ContinueToJavaScriptBuiltin
code-creation,Builtin,2,80741,0x7ff6cc2a8f94,64,ContinueToJavaScriptBuiltinWithResult
code-creation,Builtin,2,80756,0x7ff6cc2a9014,264,CallApiCallback
code-creation,Builtin,2,80771,0x7ff6cc2a9154,244,CallApiGetter
code-creation,Builtin,2,80786,0x7ff6cc2a9254,12,HandleApiCall
code-creation,Builtin,2,80800,0x7ff6cc2a9294,12,HandleApiCallAsFunction
code-creation,Builtin,2,80815,0x7ff6cc2a92d4,12,HandleApiCallAsConstructor
code-creation,Builtin,2,80830,0x7ff6cc2a9314,64,AllocateInYoungGeneration
code-creation,Builtin,2,80845,0x7ff6cc2a9394,52,AllocateRegularInYoungGeneration
code-creation,Builtin,2,80861,0x7ff6cc2a93d4,64,AllocateInOldGeneration
code-creation,Builtin,2,80876,0x7ff6cc2a9454,52,AllocateRegularInOldGeneration
code-creation,Builtin,2,80891,0x7ff6cc2a9494,144,NewHeapNumber
code-creation,Builtin,2,80905,0x7ff6cc2a9554,508,CopyFastSmiOrObjectElements
code-creation,Builtin,2,80919,0x7ff6cc2a9754,524,GrowFastDoubleElements
code-creation,Builtin,2,80932,0x7ff6cc2a9994,424,GrowFastSmiOrObjectElements
code-creation,Builtin,2,80945,0x7ff6cc2a9b54,444,DebugBreakTrampoline
code-creation,Builtin,2,80958,0x7ff6cc2a9d14,272,RestartFrameTrampoline
code-creation,Builtin,2,80970,0x7ff6cc2a9e54,188,ToNumber
code-creation,Builtin,2,80984,0x7ff6cc2a9f14,88,ToBigInt
code-creation,Builtin,2,80996,0x7ff6cc2a9f94,308,ToNumber_Baseline
code-creation,Builtin,2,81010,0x7ff6cc2aa0d4,372,ToNumeric_Baseline
code-creation,Builtin,2,81024,0x7ff6cc2aa254,104,PlainPrimitiveToNumber
code-creation,Builtin,2,81036,0x7ff6cc2aa2d4,224,ToNumberConvertBigInt
code-creation,Builtin,2,81049,0x7ff6cc2aa3d4,60,ToBigIntConvertNumber
code-creation,Builtin,2,81065,0x7ff6cc2aa414,140,Typeof
code-creation,Builtin,2,81079,0x7ff6cc2aa4d4,112,BigIntToI64
code-creation,Builtin,2,81091,0x7ff6cc2aa554,4,BigIntToI32Pair
code-creation,Builtin,2,81104,0x7ff6cc2aa594,220,I64ToBigInt
code-creation,Builtin,2,81116,0x7ff6cc2aa694,4,I32PairToBigInt
code-creation,Builtin,2,81128,0x7ff6cc2aa6d4,116,ToBooleanLazyDeoptContinuation
code-creation,Builtin,2,81141,0x7ff6cc2aa754,356,MathCeilContinuation
code-creation,Builtin,2,81155,0x7ff6cc2aa8d4,364,MathFloorContinuation
code-creation,Builtin,2,81167,0x7ff6cc2aaa54,408,MathRoundContinuation
code-creation,Builtin,2,81180,0x7ff6cc2aac14,4480,KeyedLoadIC_PolymorphicName
code-creation,Builtin,2,81193,0x7ff6cc2abdd4,16988,KeyedStoreIC_Megamorphic
code-creation,Builtin,2,81207,0x7ff6cc2b0054,13328,DefineKeyedOwnIC_Megamorphic
code-creation,Builtin,2,81220,0x7ff6cc2b3494,608,LoadGlobalIC_NoFeedback
code-creation,Builtin,2,81233,0x7ff6cc2b3714,68,LoadIC_FunctionPrototype
code-creation,Builtin,2,81246,0x7ff6cc2b3794,12,LoadIC_StringLength
code-creation,Builtin,2,81258,0x7ff6cc2b37d4,16,LoadIC_StringWrapperLength
code-creation,Builtin,2,81271,0x7ff6cc2b3814,4448,LoadIC_NoFeedback
code-creation,Builtin,2,81284,0x7ff6cc2b4994,32,StoreGlobalIC_Slow
code-creation,Builtin,2,81297,0x7ff6cc2b49d4,8020,StoreIC_NoFeedback
code-creation,Builtin,2,81310,0x7ff6cc2b6954,4384,DefineNamedOwnIC_NoFeedback
code-creation,Builtin,2,81323,0x7ff6cc2b7a94,188,KeyedLoadIC_SloppyArguments
code-creation,Builtin,2,81336,0x7ff6cc2b7b54,72,LoadIndexedInterceptorIC
code-creation,Builtin,2,81348,0x7ff6cc2b7bd4,244,KeyedStoreIC_SloppyArguments_Standard
code-creation,Builtin,2,81362,0x7ff6cc2b7cd4,244,KeyedStoreIC_SloppyArguments_GrowNoTransitionHandleCOW
code-creation,Builtin,2,81377,0x7ff6cc2b7dd4,244,KeyedStoreIC_SloppyArguments_NoTransitionIgnoreOOB
code-creation,Builtin,2,81391,0x7ff6cc2b7ed4,244,KeyedStoreIC_SloppyArguments_NoTransitionHandleCOW
code-creation,Builtin,2,81405,0x7ff6cc2b7fd4,15076,StoreFastElementIC_Standard
code-creation,Builtin,2,81418,0x7ff6cc2bbad4,10744,StoreFastElementIC_GrowNoTransitionHandleCOW
code-creation,Builtin,2,81432,0x7ff6cc2be4d4,14340,StoreFastElementIC_NoTransitionIgnoreOOB
code-creation,Builtin,2,81446,0x7ff6cc2c1d14,6440,StoreFastElementIC_NoTransitionHandleCOW
code-creation,Builtin,2,81460,0x7ff6cc2c3654,8416,ElementsTransitionAndStore_Standard
code-creation,Builtin,2,81473,0x7ff6cc2c5754,19372,ElementsTransitionAndStore_GrowNoTransitionHandleCOW
code-creation,Builtin,2,81488,0x7ff6cc2ca314,8416,ElementsTransitionAndStore_NoTransitionIgnoreOOB
code-creation,Builtin,2,81502,0x7ff6cc2cc414,11164,ElementsTransitionAndStore_NoTransitionHandleCOW
code-creation,Builtin,2,81516,0x7ff6cc2cefd4,1128,KeyedHasIC_PolymorphicName
code-creation,Builtin,2,81529,0x7ff6cc2cf454,172,KeyedHasIC_SloppyArguments
code-creation,Builtin,2,81542,0x7ff6cc2cf514,72,HasIndexedInterceptorIC
code-creation,Builtin,2,81555,0x7ff6cc2cf594,164,EnqueueMicrotask
code-creation,Builtin,2,81567,0x7ff6cc2cf654,8,RunMicrotasksTrampoline
code-creation,Builtin,2,81580,0x7ff6cc2cf694,3780,RunMicrotasks
code-creation,Builtin,2,81593,0x7ff6cc2d0594,3464,HasProperty
code-creation,Builtin,2,81605,0x7ff6cc2d1354,1324,DeleteProperty
code-creation,Builtin,2,81618,0x7ff6cc2d1894,2596,CopyDataProperties
code-creation,Builtin,2,81632,0x7ff6cc2d22d4,10812,SetDataProperties
code-creation,Builtin,2,81644,0x7ff6cc2d4d14,3316,CopyDataPropertiesWithExcludedPropertiesOnStack
code-creation,Builtin,2,81658,0x7ff6cc2d5a14,56,CopyDataPropertiesWithExcludedProperties
code-creation,Builtin,2,81672,0x7ff6cc2d5a54,28,Abort
code-creation,Builtin,2,81684,0x7ff6cc2d5a94,28,AbortCSADcheck
code-creation,Builtin,2,81697,0x7ff6cc2d5ad4,12,EmptyFunction
code-creation,Builtin,2,81709,0x7ff6cc2d5b14,12,Illegal
code-creation,Builtin,2,81721,0x7ff6cc2d5b54,12,StrictPoisonPillThrower
code-creation,Builtin,2,81734,0x7ff6cc2d5b94,12,UnsupportedThrower
code-creation,Builtin,2,81746,0x7ff6cc2d5bd4,60,ReturnReceiver
code-creation,Builtin,2,81759,0x7ff6cc2d5c14,36,ArrayConstructor
code-creation,Builtin,2,81838,0x7ff6cc2d5c54,380,ArrayConstructorImpl
code-creation,Builtin,2,81857,0x7ff6cc2d5dd4,220,ArrayNoArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,81872,0x7ff6cc2d5ed4,220,ArrayNoArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,81891,0x7ff6cc2d5fd4,184,ArrayNoArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,81906,0x7ff6cc2d6094,184,ArrayNoArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,81920,0x7ff6cc2d6154,184,ArrayNoArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,81935,0x7ff6cc2d6214,184,ArrayNoArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,81950,0x7ff6cc2d62d4,192,ArrayNoArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,81965,0x7ff6cc2d63d4,192,ArrayNoArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,81982,0x7ff6cc2d64d4,272,ArraySingleArgumentConstructor_PackedSmi_DontOverride
code-creation,Builtin,2,81996,0x7ff6cc2d6614,476,ArraySingleArgumentConstructor_HoleySmi_DontOverride
code-creation,Builtin,2,82011,0x7ff6cc2d6814,228,ArraySingleArgumentConstructor_PackedSmi_DisableAllocationSites
code-creation,Builtin,2,82026,0x7ff6cc2d6914,404,ArraySingleArgumentConstructor_HoleySmi_DisableAllocationSites
code-creation,Builtin,2,82041,0x7ff6cc2d6ad4,228,ArraySingleArgumentConstructor_Packed_DisableAllocationSites
code-creation,Builtin,2,82056,0x7ff6cc2d6bd4,404,ArraySingleArgumentConstructor_Holey_DisableAllocationSites
code-creation,Builtin,2,82071,0x7ff6cc2d6d94,228,ArraySingleArgumentConstructor_PackedDouble_DisableAllocationSites
code-creation,Builtin,2,82087,0x7ff6cc2d6e94,408,ArraySingleArgumentConstructor_HoleyDouble_DisableAllocationSites
code-creation,Builtin,2,82104,0x7ff6cc2d7054,48,ArrayNArgumentsConstructor
code-creation,Builtin,2,82118,0x7ff6cc2d7094,12,ArrayConcat
code-creation,Builtin,2,82131,0x7ff6cc2d70d4,12,ArrayPrototypeFill
code-creation,Builtin,2,82143,0x7ff6cc2d7114,1164,ArrayIncludesSmi
code-creation,Builtin,2,82155,0x7ff6cc2d75d4,1164,ArrayIncludesSmiOrObject
code-creation,Builtin,2,82168,0x7ff6cc2d7a94,152,ArrayIncludesPackedDoubles
code-creation,Builtin,2,82182,0x7ff6cc2d7b54,220,ArrayIncludesHoleyDoubles
code-creation,Builtin,2,82196,0x7ff6cc2d7c54,584,ArrayIncludes
code-creation,Builtin,2,82209,0x7ff6cc2d7ed4,1076,ArrayIndexOfSmi
code-creation,Builtin,2,82222,0x7ff6cc2d8314,1076,ArrayIndexOfSmiOrObject
code-creation,Builtin,2,82236,0x7ff6cc2d8754,116,ArrayIndexOfPackedDoubles
code-creation,Builtin,2,82250,0x7ff6cc2d87d4,116,ArrayIndexOfHoleyDoubles
code-creation,Builtin,2,82265,0x7ff6cc2d8854,584,ArrayIndexOf
code-creation,Builtin,2,82279,0x7ff6cc2d8ad4,12,ArrayPop
code-creation,Builtin,2,82291,0x7ff6cc2d8b14,568,ArrayPrototypePop
code-creation,Builtin,2,82305,0x7ff6cc2d8d54,12,ArrayPrototypeGroup
code-creation,Builtin,2,82317,0x7ff6cc2d8d94,12,ArrayPrototypeGroupToMap
code-creation,Builtin,2,82330,0x7ff6cc2d8dd4,12,ArrayPush
code-creation,Builtin,2,82342,0x7ff6cc2d8e14,2428,ArrayPrototypePush
code-creation,Builtin,2,82353,0x7ff6cc2d9794,12,ArrayShift
code-creation,Builtin,2,82366,0x7ff6cc2d97d4,12,ArrayUnshift
code-creation,Builtin,2,82378,0x7ff6cc2d9814,12,ArrayFromAsync
code-creation,Builtin,2,82389,0x7ff6cc2d9854,1088,CloneFastJSArray
code-creation,Builtin,2,82401,0x7ff6cc2d9cd4,2364,CloneFastJSArrayFillingHoles
code-creation,Builtin,2,82413,0x7ff6cc2da614,1112,ExtractFastJSArray
code-creation,Builtin,2,82424,0x7ff6cc2daa94,264,ArrayPrototypeEntries
code-creation,Builtin,2,82436,0x7ff6cc2dabd4,252,ArrayPrototypeKeys
code-creation,Builtin,2,82448,0x7ff6cc2dacd4,264,ArrayPrototypeValues
code-creation,Builtin,2,82459,0x7ff6cc2dae14,4256,ArrayIteratorPrototypeNext
code-creation,Builtin,2,82471,0x7ff6cc2dbed4,4944,FlattenIntoArray
code-creation,Builtin,2,82483,0x7ff6cc2dd254,4836,FlatMapIntoArray
code-creation,Builtin,2,82495,0x7ff6cc2de554,368,ArrayPrototypeFlat
code-creation,Builtin,2,82506,0x7ff6cc2de6d4,428,ArrayPrototypeFlatMap
code-creation,Builtin,2,82584,0x7ff6cc2de894,12,ArrayBufferConstructor
code-creation,Builtin,2,82601,0x7ff6cc2de8d4,12,ArrayBufferConstructor_DoNotInitialize
code-creation,Builtin,2,82614,0x7ff6cc2de914,12,ArrayBufferPrototypeSlice
code-creation,Builtin,2,82626,0x7ff6cc2de954,12,ArrayBufferPrototypeResize
code-creation,Builtin,2,82638,0x7ff6cc2de994,12,ArrayBufferPrototypeTransfer
code-creation,Builtin,2,82651,0x7ff6cc2de9d4,12,ArrayBufferPrototypeTransferToFixedLength
code-creation,Builtin,2,82664,0x7ff6cc2dea14,964,AsyncFunctionEnter
code-creation,Builtin,2,82676,0x7ff6cc2dee14,80,AsyncFunctionReject
code-creation,Builtin,2,82688,0x7ff6cc2dee94,76,AsyncFunctionResolve
code-creation,Builtin,2,82701,0x7ff6cc2def14,12,AsyncFunctionLazyDeoptContinuation
code-creation,Builtin,2,82714,0x7ff6cc2def54,1564,AsyncFunctionAwaitCaught
code-creation,Builtin,2,82725,0x7ff6cc2df594,1564,AsyncFunctionAwaitUncaught
code-creation,Builtin,2,82737,0x7ff6cc2dfbd4,172,AsyncFunctionAwaitRejectClosure
code-creation,Builtin,2,82750,0x7ff6cc2dfc94,168,AsyncFunctionAwaitResolveClosure
code-creation,Builtin,2,82763,0x7ff6cc2dfd54,12,BigIntConstructor
code-creation,Builtin,2,82775,0x7ff6cc2dfd94,12,BigIntAsUintN
code-creation,Builtin,2,82786,0x7ff6cc2dfdd4,12,BigIntAsIntN
code-creation,Builtin,2,82798,0x7ff6cc2dfe14,12,BigIntPrototypeToLocaleString
code-creation,Builtin,2,82810,0x7ff6cc2dfe54,12,BigIntPrototypeToString
code-creation,Builtin,2,82823,0x7ff6cc2dfe94,12,BigIntPrototypeValueOf
code-creation,Builtin,2,82836,0x7ff6cc2dfed4,12,CallSitePrototypeGetColumnNumber
code-creation,Builtin,2,82848,0x7ff6cc2dff14,12,CallSitePrototypeGetEnclosingColumnNumber
code-creation,Builtin,2,82861,0x7ff6cc2dff54,12,CallSitePrototypeGetEnclosingLineNumber
code-creation,Builtin,2,82874,0x7ff6cc2dff94,12,CallSitePrototypeGetEvalOrigin
code-creation,Builtin,2,82887,0x7ff6cc2dffd4,12,CallSitePrototypeGetFileName
code-creation,Builtin,2,82899,0x7ff6cc2e0014,12,CallSitePrototypeGetFunction
code-creation,Builtin,2,82911,0x7ff6cc2e0054,12,CallSitePrototypeGetFunctionName
code-creation,Builtin,2,82924,0x7ff6cc2e0094,12,CallSitePrototypeGetLineNumber
code-creation,Builtin,2,82936,0x7ff6cc2e00d4,12,CallSitePrototypeGetMethodName
code-creation,Builtin,2,82949,0x7ff6cc2e0114,12,CallSitePrototypeGetPosition
code-creation,Builtin,2,82961,0x7ff6cc2e0154,12,CallSitePrototypeGetPromiseIndex
code-creation,Builtin,2,82974,0x7ff6cc2e0194,12,CallSitePrototypeGetScriptHash
code-creation,Builtin,2,82988,0x7ff6cc2e01d4,12,CallSitePrototypeGetScriptNameOrSourceURL
code-creation,Builtin,2,83005,0x7ff6cc2e0214,12,CallSitePrototypeGetThis
code-creation,Builtin,2,83017,0x7ff6cc2e0254,12,CallSitePrototypeGetTypeName
code-creation,Builtin,2,83029,0x7ff6cc2e0294,12,CallSitePrototypeIsAsync
code-creation,Builtin,2,83041,0x7ff6cc2e02d4,12,CallSitePrototypeIsConstructor
code-creation,Builtin,2,83053,0x7ff6cc2e0314,12,CallSitePrototypeIsEval
code-creation,Builtin,2,83065,0x7ff6cc2e0354,12,CallSitePrototypeIsNative
code-creation,Builtin,2,83077,0x7ff6cc2e0394,12,CallSitePrototypeIsPromiseAll
code-creation,Builtin,2,83089,0x7ff6cc2e03d4,12,CallSitePrototypeIsToplevel
code-creation,Builtin,2,83103,0x7ff6cc2e0414,12,CallSitePrototypeToString
code-creation,Builtin,2,83114,0x7ff6cc2e0454,12,ConsoleDebug
code-creation,Builtin,2,83126,0x7ff6cc2e0494,12,ConsoleError
code-creation,Builtin,2,83137,0x7ff6cc2e04d4,12,ConsoleInfo
code-creation,Builtin,2,83149,0x7ff6cc2e0514,12,ConsoleLog
code-creation,Builtin,2,83161,0x7ff6cc2e0554,12,ConsoleWarn
code-creation,Builtin,2,83172,0x7ff6cc2e0594,12,ConsoleDir
code-creation,Builtin,2,83184,0x7ff6cc2e05d4,12,ConsoleDirXml
code-creation,Builtin,2,83196,0x7ff6cc2e0614,12,ConsoleTable
code-creation,Builtin,2,83207,0x7ff6cc2e0654,12,ConsoleTrace
code-creation,Builtin,2,83219,0x7ff6cc2e0694,12,ConsoleGroup
code-creation,Builtin,2,83230,0x7ff6cc2e06d4,12,ConsoleGroupCollapsed
code-creation,Builtin,2,83242,0x7ff6cc2e0714,12,ConsoleGroupEnd
code-creation,Builtin,2,83254,0x7ff6cc2e0754,12,ConsoleClear
code-creation,Builtin,2,83266,0x7ff6cc2e0794,12,ConsoleCount
code-creation,Builtin,2,83278,0x7ff6cc2e07d4,12,ConsoleCountReset
code-creation,Builtin,2,83292,0x7ff6cc2e0814,12,ConsoleAssert
code-creation,Builtin,2,83306,0x7ff6cc2e0854,12,ConsoleProfile
code-creation,Builtin,2,83317,0x7ff6cc2e0894,12,ConsoleProfileEnd
code-creation,Builtin,2,83329,0x7ff6cc2e08d4,12,ConsoleTime
code-creation,Builtin,2,83340,0x7ff6cc2e0914,12,ConsoleTimeLog
code-creation,Builtin,2,83351,0x7ff6cc2e0954,12,ConsoleTimeEnd
code-creation,Builtin,2,83363,0x7ff6cc2e0994,12,ConsoleTimeStamp
code-creation,Builtin,2,83375,0x7ff6cc2e09d4,12,ConsoleContext
code-creation,Builtin,2,83386,0x7ff6cc2e0a14,12,DataViewConstructor
code-creation,Builtin,2,83397,0x7ff6cc2e0a54,12,DateConstructor
code-creation,Builtin,2,83410,0x7ff6cc2e0a94,216,DatePrototypeGetDate
code-creation,Builtin,2,83422,0x7ff6cc2e0b94,216,DatePrototypeGetDay
code-creation,Builtin,2,83433,0x7ff6cc2e0c94,216,DatePrototypeGetFullYear
code-creation,Builtin,2,83446,0x7ff6cc2e0d94,216,DatePrototypeGetHours
code-creation,Builtin,2,83458,0x7ff6cc2e0e94,196,DatePrototypeGetMilliseconds
code-creation,Builtin,2,83470,0x7ff6cc2e0f94,216,DatePrototypeGetMinutes
code-creation,Builtin,2,83482,0x7ff6cc2e1094,216,DatePrototypeGetMonth
code-creation,Builtin,2,83494,0x7ff6cc2e1194,216,DatePrototypeGetSeconds
code-creation,Builtin,2,83506,0x7ff6cc2e1294,128,DatePrototypeGetTime
code-creation,Builtin,2,83518,0x7ff6cc2e1354,196,DatePrototypeGetTimezoneOffset
code-creation,Builtin,2,83530,0x7ff6cc2e1454,196,DatePrototypeGetUTCDate
code-creation,Builtin,2,83542,0x7ff6cc2e1554,196,DatePrototypeGetUTCDay
code-creation,Builtin,2,83554,0x7ff6cc2e1654,196,DatePrototypeGetUTCFullYear
code-creation,Builtin,2,83566,0x7ff6cc2e1754,196,DatePrototypeGetUTCHours
code-creation,Builtin,2,83578,0x7ff6cc2e1854,196,DatePrototypeGetUTCMilliseconds
code-creation,Builtin,2,83591,0x7ff6cc2e1954,196,DatePrototypeGetUTCMinutes
code-creation,Builtin,2,83604,0x7ff6cc2e1a54,196,DatePrototypeGetUTCMonth
code-creation,Builtin,2,83615,0x7ff6cc2e1b54,196,DatePrototypeGetUTCSeconds
code-creation,Builtin,2,83627,0x7ff6cc2e1c54,128,DatePrototypeValueOf
code-creation,Builtin,2,83639,0x7ff6cc2e1d14,436,DatePrototypeToPrimitive
code-creation,Builtin,2,83650,0x7ff6cc2e1ed4,12,DatePrototypeGetYear
code-creation,Builtin,2,83662,0x7ff6cc2e1f14,12,DatePrototypeSetYear
code-creation,Builtin,2,83678,0x7ff6cc2e1f54,12,DateNow
code-creation,Builtin,2,83689,0x7ff6cc2e1f94,12,DateParse
code-creation,Builtin,2,83700,0x7ff6cc2e1fd4,12,DatePrototypeSetDate
code-creation,Builtin,2,83712,0x7ff6cc2e2014,12,DatePrototypeSetFullYear
code-creation,Builtin,2,83724,0x7ff6cc2e2054,12,DatePrototypeSetHours
code-creation,Builtin,2,83735,0x7ff6cc2e2094,12,DatePrototypeSetMilliseconds
code-creation,Builtin,2,83747,0x7ff6cc2e20d4,12,DatePrototypeSetMinutes
code-creation,Builtin,2,83766,0x7ff6cc2e2114,12,DatePrototypeSetMonth
code-creation,Builtin,2,83778,0x7ff6cc2e2154,12,DatePrototypeSetSeconds
code-creation,Builtin,2,83789,0x7ff6cc2e2194,12,DatePrototypeSetTime
code-creation,Builtin,2,83801,0x7ff6cc2e21d4,12,DatePrototypeSetUTCDate
code-creation,Builtin,2,83813,0x7ff6cc2e2214,12,DatePrototypeSetUTCFullYear
code-creation,Builtin,2,83825,0x7ff6cc2e2254,12,DatePrototypeSetUTCHours
code-creation,Builtin,2,83836,0x7ff6cc2e2294,12,DatePrototypeSetUTCMilliseconds
code-creation,Builtin,2,83848,0x7ff6cc2e22d4,12,DatePrototypeSetUTCMinutes
code-creation,Builtin,2,83860,0x7ff6cc2e2314,12,DatePrototypeSetUTCMonth
code-creation,Builtin,2,83872,0x7ff6cc2e2354,12,DatePrototypeSetUTCSeconds
code-creation,Builtin,2,83884,0x7ff6cc2e2394,12,DatePrototypeToDateString
code-creation,Builtin,2,83896,0x7ff6cc2e23d4,12,DatePrototypeToISOString
code-creation,Builtin,2,83907,0x7ff6cc2e2414,12,DatePrototypeToUTCString
code-creation,Builtin,2,83919,0x7ff6cc2e2454,12,DatePrototypeToString
code-creation,Builtin,2,83930,0x7ff6cc2e2494,12,DatePrototypeToTimeString
code-creation,Builtin,2,83942,0x7ff6cc2e24d4,12,DatePrototypeToJson
code-creation,Builtin,2,83954,0x7ff6cc2e2514,12,DateUTC
code-creation,Builtin,2,83965,0x7ff6cc2e2554,12,ErrorConstructor
code-creation,Builtin,2,83976,0x7ff6cc2e2594,12,ErrorCaptureStackTrace
code-creation,Builtin,2,83995,0x7ff6cc2e25d4,12,ErrorPrototypeToString
code-creation,Builtin,2,84008,0x7ff6cc2e2614,12,FunctionConstructor
code-creation,Builtin,2,84020,0x7ff6cc2e2654,80,FunctionPrototypeApply
code-creation,Builtin,2,84031,0x7ff6cc2e26d4,12,FunctionPrototypeBind
code-creation,Builtin,2,84043,0x7ff6cc2e2714,36,FunctionPrototypeCall
code-creation,Builtin,2,84054,0x7ff6cc2e2754,12,FunctionPrototypeToString
code-creation,Builtin,2,84066,0x7ff6cc2e2794,212,CreateIterResultObject
code-creation,Builtin,2,84078,0x7ff6cc2e2894,916,CreateGeneratorObject
code-creation,Builtin,2,84089,0x7ff6cc2e2c54,12,GeneratorFunctionConstructor
code-creation,Builtin,2,84101,0x7ff6cc2e2c94,404,GeneratorPrototypeNext
code-creation,Builtin,2,84113,0x7ff6cc2e2e54,404,GeneratorPrototypeReturn
code-creation,Builtin,2,84125,0x7ff6cc2e3014,408,GeneratorPrototypeThrow
code-creation,Builtin,2,84136,0x7ff6cc2e31d4,12,AsyncFunctionConstructor
code-creation,Builtin,2,84148,0x7ff6cc2e3214,384,SuspendGeneratorBaseline
code-creation,Builtin,2,84160,0x7ff6cc2e33d4,96,ResumeGeneratorBaseline
code-creation,Builtin,2,84171,0x7ff6cc2e3454,36,GetIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,84184,0x7ff6cc2e3494,84,CallIteratorWithFeedbackLazyDeoptContinuation
code-creation,Builtin,2,84197,0x7ff6cc2e3514,12,GlobalDecodeURI
code-creation,Builtin,2,84208,0x7ff6cc2e3554,12,GlobalDecodeURIComponent
code-creation,Builtin,2,84220,0x7ff6cc2e3594,12,GlobalEncodeURI
code-creation,Builtin,2,84231,0x7ff6cc2e35d4,12,GlobalEncodeURIComponent
code-creation,Builtin,2,84243,0x7ff6cc2e3614,12,GlobalEscape
code-creation,Builtin,2,84254,0x7ff6cc2e3654,12,GlobalUnescape
code-creation,Builtin,2,84265,0x7ff6cc2e3694,12,GlobalEval
code-creation,Builtin,2,84276,0x7ff6cc2e36d4,136,GlobalIsFinite
code-creation,Builtin,2,84287,0x7ff6cc2e3794,132,GlobalIsNaN
code-creation,Builtin,2,84298,0x7ff6cc2e3854,12,JsonParse
code-creation,Builtin,2,84309,0x7ff6cc2e3894,12,JsonStringify
code-creation,Builtin,2,84320,0x7ff6cc2e38d4,12,JsonRawJson
code-creation,Builtin,2,84331,0x7ff6cc2e3914,12,JsonIsRawJson
code-creation,Builtin,2,84342,0x7ff6cc2e3954,5084,LoadIC
code-creation,Builtin,2,84354,0x7ff6cc2e4d54,4720,LoadIC_Megamorphic
code-creation,Builtin,2,84365,0x7ff6cc2e5fd4,4932,LoadIC_Noninlined
code-creation,Builtin,2,84377,0x7ff6cc2e7354,44,LoadICTrampoline
code-creation,Builtin,2,84389,0x7ff6cc2e7394,24,LoadICBaseline
code-creation,Builtin,2,84400,0x7ff6cc2e73d4,44,LoadICTrampoline_Megamorphic
code-creation,Builtin,2,84412,0x7ff6cc2e7414,8860,LoadSuperIC
code-creation,Builtin,2,84423,0x7ff6cc2e96d4,24,LoadSuperICBaseline
code-creation,Builtin,2,84434,0x7ff6cc2e9714,8260,KeyedLoadIC
code-creation,Builtin,2,84446,0x7ff6cc2eb794,16288,KeyedLoadIC_Megamorphic
code-creation,Builtin,2,84457,0x7ff6cc2ef754,13348,KeyedLoadIC_MegamorphicStringKey
code-creation,Builtin,2,84469,0x7ff6cc2f2b94,44,KeyedLoadICTrampoline
code-creation,Builtin,2,84481,0x7ff6cc2f2bd4,24,KeyedLoadICBaseline
code-creation,Builtin,2,84492,0x7ff6cc2f2c14,44,KeyedLoadICTrampoline_Megamorphic
code-creation,Builtin,2,84505,0x7ff6cc2f2c54,44,KeyedLoadICTrampoline_MegamorphicStringKey
code-creation,Builtin,2,84517,0x7ff6cc2f2c94,5440,StoreGlobalIC
code-creation,Builtin,2,84528,0x7ff6cc2f4214,44,StoreGlobalICTrampoline
code-creation,Builtin,2,84540,0x7ff6cc2f4254,24,StoreGlobalICBaseline
code-creation,Builtin,2,84552,0x7ff6cc2f4294,5956,StoreIC
code-creation,Builtin,2,84563,0x7ff6cc2f5a14,44,StoreICTrampoline
code-creation,Builtin,2,84574,0x7ff6cc2f5a54,24,StoreICBaseline
code-creation,Builtin,2,84585,0x7ff6cc2f5a94,5748,DefineNamedOwnIC
code-creation,Builtin,2,84597,0x7ff6cc2f7114,44,DefineNamedOwnICTrampoline
code-creation,Builtin,2,84608,0x7ff6cc2f7154,24,DefineNamedOwnICBaseline
code-creation,Builtin,2,84620,0x7ff6cc2f7194,6440,KeyedStoreIC
code-creation,Builtin,2,84631,0x7ff6cc2f8ad4,44,KeyedStoreICTrampoline
code-creation,Builtin,2,84643,0x7ff6cc2f8b14,24,KeyedStoreICBaseline
code-creation,Builtin,2,84654,0x7ff6cc2f8b54,6372,DefineKeyedOwnIC
code-creation,Builtin,2,84666,0x7ff6cc2fa454,52,DefineKeyedOwnICTrampoline
code-creation,Builtin,2,84680,0x7ff6cc2fa494,28,DefineKeyedOwnICBaseline
code-creation,Builtin,2,84693,0x7ff6cc2fa4d4,320,StoreInArrayLiteralIC
code-creation,Builtin,2,84705,0x7ff6cc2fa654,24,StoreInArrayLiteralICBaseline
code-creation,Builtin,2,84717,0x7ff6cc2fa694,144,LookupContextTrampoline
code-creation,Builtin,2,84729,0x7ff6cc2fa754,156,LookupContextBaseline
code-creation,Builtin,2,84740,0x7ff6cc2fa814,144,LookupContextInsideTypeofTrampoline
code-creation,Builtin,2,84753,0x7ff6cc2fa8d4,156,LookupContextInsideTypeofBaseline
code-creation,Builtin,2,84765,0x7ff6cc2fa994,3252,LoadGlobalIC
code-creation,Builtin,2,84776,0x7ff6cc2fb654,3232,LoadGlobalICInsideTypeof
code-creation,Builtin,2,84788,0x7ff6cc2fc314,44,LoadGlobalICTrampoline
code-creation,Builtin,2,84800,0x7ff6cc2fc354,24,LoadGlobalICBaseline
code-creation,Builtin,2,84811,0x7ff6cc2fc394,44,LoadGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,84823,0x7ff6cc2fc3d4,24,LoadGlobalICInsideTypeofBaseline
code-creation,Builtin,2,84835,0x7ff6cc2fc414,140,LookupGlobalIC
code-creation,Builtin,2,84847,0x7ff6cc2fc4d4,176,LookupGlobalICTrampoline
code-creation,Builtin,2,84859,0x7ff6cc2fc594,160,LookupGlobalICBaseline
code-creation,Builtin,2,84870,0x7ff6cc2fc654,140,LookupGlobalICInsideTypeof
code-creation,Builtin,2,84882,0x7ff6cc2fc714,176,LookupGlobalICInsideTypeofTrampoline
code-creation,Builtin,2,84894,0x7ff6cc2fc7d4,160,LookupGlobalICInsideTypeofBaseline
code-creation,Builtin,2,84906,0x7ff6cc2fc894,2692,CloneObjectIC
code-creation,Builtin,2,84918,0x7ff6cc2fd354,24,CloneObjectICBaseline
code-creation,Builtin,2,84929,0x7ff6cc2fd394,2728,CloneObjectIC_Slow
code-creation,Builtin,2,84941,0x7ff6cc2fde54,3108,KeyedHasIC
code-creation,Builtin,2,84952,0x7ff6cc2fea94,24,KeyedHasICBaseline
code-creation,Builtin,2,84963,0x7ff6cc2fead4,3468,KeyedHasIC_Megamorphic
code-creation,Builtin,2,84974,0x7ff6cc2ff894,1720,IterableToList
code-creation,Builtin,2,84987,0x7ff6cc2fff54,1532,IterableToFixedArray
code-creation,Builtin,2,84999,0x7ff6cc300554,728,IterableToListWithSymbolLookup
code-creation,Builtin,2,85011,0x7ff6cc300854,56,IterableToFixedArrayWithSymbolLookupSlow
code-creation,Builtin,2,85023,0x7ff6cc300894,112,IterableToListMayPreserveHoles
code-creation,Builtin,2,85036,0x7ff6cc300914,1232,IterableToFixedArrayForWasm
code-creation,Builtin,2,85048,0x7ff6cc300e14,1668,StringListFromIterable
code-creation,Builtin,2,85059,0x7ff6cc3014d4,1144,FindOrderedHashMapEntry
code-creation,Builtin,2,85071,0x7ff6cc301954,4296,MapConstructor
code-creation,Builtin,2,85082,0x7ff6cc302a54,1888,MapPrototypeSet
code-creation,Builtin,2,85094,0x7ff6cc3031d4,1460,MapPrototypeDelete
code-creation,Builtin,2,85105,0x7ff6cc303794,212,MapPrototypeGet
code-creation,Builtin,2,85117,0x7ff6cc303894,172,MapPrototypeHas
code-creation,Builtin,2,85128,0x7ff6cc303954,12,MapPrototypeClear
code-creation,Builtin,2,85139,0x7ff6cc303994,288,MapPrototypeEntries
code-creation,Builtin,2,85151,0x7ff6cc303ad4,144,MapPrototypeGetSize
code-creation,Builtin,2,85162,0x7ff6cc303b94,488,MapPrototypeForEach
code-creation,Builtin,2,85174,0x7ff6cc303d94,288,MapPrototypeKeys
code-creation,Builtin,2,85185,0x7ff6cc303ed4,288,MapPrototypeValues
code-creation,Builtin,2,85197,0x7ff6cc304014,916,MapIteratorPrototypeNext
code-creation,Builtin,2,85208,0x7ff6cc3043d4,1180,MapIteratorToList
code-creation,Builtin,2,85220,0x7ff6cc304894,12,NumberPrototypeToExponential
code-creation,Builtin,2,85232,0x7ff6cc3048d4,12,NumberPrototypeToFixed
code-creation,Builtin,2,85243,0x7ff6cc304914,12,NumberPrototypeToLocaleString
code-creation,Builtin,2,85255,0x7ff6cc304954,12,NumberPrototypeToPrecision
code-creation,Builtin,2,85267,0x7ff6cc304994,356,SameValue
code-creation,Builtin,2,85278,0x7ff6cc304b14,200,SameValueNumbersOnly
code-creation,Builtin,2,85289,0x7ff6cc304c14,1368,Add_Baseline
code-creation,Builtin,2,85301,0x7ff6cc305194,1072,AddSmi_Baseline
code-creation,Builtin,2,85312,0x7ff6cc3055d4,1340,Subtract_Baseline
code-creation,Builtin,2,85323,0x7ff6cc305b14,1076,SubtractSmi_Baseline
code-creation,Builtin,2,85335,0x7ff6cc305f54,1436,Multiply_Baseline
code-creation,Builtin,2,85349,0x7ff6cc306514,1164,MultiplySmi_Baseline
code-creation,Builtin,2,85362,0x7ff6cc3069d4,1532,Divide_Baseline
code-creation,Builtin,2,85373,0x7ff6cc306fd4,1304,DivideSmi_Baseline
code-creation,Builtin,2,85384,0x7ff6cc307514,1472,Modulus_Baseline
code-creation,Builtin,2,85396,0x7ff6cc307b14,1188,ModulusSmi_Baseline
code-creation,Builtin,2,85407,0x7ff6cc307fd4,812,Exponentiate_Baseline
code-creation,Builtin,2,85419,0x7ff6cc308314,708,ExponentiateSmi_Baseline
code-creation,Builtin,2,85431,0x7ff6cc308614,1520,BitwiseAnd_Baseline
code-creation,Builtin,2,85442,0x7ff6cc308c14,368,BitwiseAndSmi_Baseline
code-creation,Builtin,2,85454,0x7ff6cc308d94,1520,BitwiseOr_Baseline
code-creation,Builtin,2,85465,0x7ff6cc309394,368,BitwiseOrSmi_Baseline
code-creation,Builtin,2,85476,0x7ff6cc309514,1524,BitwiseXor_Baseline
code-creation,Builtin,2,85488,0x7ff6cc309b14,368,BitwiseXorSmi_Baseline
code-creation,Builtin,2,85500,0x7ff6cc309c94,976,ShiftLeft_Baseline
code-creation,Builtin,2,85511,0x7ff6cc30a094,392,ShiftLeftSmi_Baseline
code-creation,Builtin,2,85523,0x7ff6cc30a254,976,ShiftRight_Baseline
code-creation,Builtin,2,85534,0x7ff6cc30a654,376,ShiftRightSmi_Baseline
code-creation,Builtin,2,85546,0x7ff6cc30a7d4,1096,ShiftRightLogical_Baseline
code-creation,Builtin,2,85558,0x7ff6cc30ac54,632,ShiftRightLogicalSmi_Baseline
code-creation,Builtin,2,85570,0x7ff6cc30aed4,1304,Add_WithFeedback
code-creation,Builtin,2,85581,0x7ff6cc30b414,1288,Subtract_WithFeedback
code-creation,Builtin,2,85593,0x7ff6cc30b954,1380,Multiply_WithFeedback
code-creation,Builtin,2,85604,0x7ff6cc30bed4,1488,Divide_WithFeedback
code-creation,Builtin,2,85616,0x7ff6cc30c4d4,1408,Modulus_WithFeedback
code-creation,Builtin,2,85627,0x7ff6cc30ca94,772,Exponentiate_WithFeedback
code-creation,Builtin,2,85639,0x7ff6cc30cdd4,1464,BitwiseAnd_WithFeedback
code-creation,Builtin,2,85651,0x7ff6cc30d394,1464,BitwiseOr_WithFeedback
code-creation,Builtin,2,85663,0x7ff6cc30d954,1464,BitwiseXor_WithFeedback
code-creation,Builtin,2,85674,0x7ff6cc30df14,928,ShiftLeft_WithFeedback
code-creation,Builtin,2,85686,0x7ff6cc30e2d4,928,ShiftRight_WithFeedback
code-creation,Builtin,2,85702,0x7ff6cc30e694,1040,ShiftRightLogical_WithFeedback
code-creation,Builtin,2,85714,0x7ff6cc30ead4,1968,Equal_Baseline
code-creation,Builtin,2,85725,0x7ff6cc30f294,1188,StrictEqual_Baseline
code-creation,Builtin,2,85737,0x7ff6cc30f754,1440,LessThan_Baseline
code-creation,Builtin,2,85748,0x7ff6cc30fd14,1440,GreaterThan_Baseline
code-creation,Builtin,2,85760,0x7ff6cc3102d4,1440,LessThanOrEqual_Baseline
code-creation,Builtin,2,85771,0x7ff6cc310894,1440,GreaterThanOrEqual_Baseline
code-creation,Builtin,2,85783,0x7ff6cc310e54,1868,Equal_WithFeedback
code-creation,Builtin,2,85795,0x7ff6cc3115d4,1188,StrictEqual_WithFeedback
code-creation,Builtin,2,85806,0x7ff6cc311a94,1428,LessThan_WithFeedback
code-creation,Builtin,2,85818,0x7ff6cc312054,1428,GreaterThan_WithFeedback
code-creation,Builtin,2,85830,0x7ff6cc312614,1428,LessThanOrEqual_WithFeedback
code-creation,Builtin,2,85842,0x7ff6cc312bd4,1428,GreaterThanOrEqual_WithFeedback
code-creation,Builtin,2,85854,0x7ff6cc313194,360,BitwiseNot_Baseline
code-creation,Builtin,2,85865,0x7ff6cc313314,456,Decrement_Baseline
code-creation,Builtin,2,85877,0x7ff6cc313514,460,Increment_Baseline
code-creation,Builtin,2,85889,0x7ff6cc313714,488,Negate_Baseline
code-creation,Builtin,2,85900,0x7ff6cc313914,348,BitwiseNot_WithFeedback
code-creation,Builtin,2,85912,0x7ff6cc313a94,440,Decrement_WithFeedback
code-creation,Builtin,2,85923,0x7ff6cc313c54,444,Increment_WithFeedback
code-creation,Builtin,2,85935,0x7ff6cc313e14,468,Negate_WithFeedback
code-creation,Builtin,2,85947,0x7ff6cc314014,256,ObjectAssign
code-creation,Builtin,2,85958,0x7ff6cc314154,932,ObjectCreate
code-creation,Builtin,2,85969,0x7ff6cc314514,12,ObjectDefineGetter
code-creation,Builtin,2,85981,0x7ff6cc314554,12,ObjectDefineProperties
code-creation,Builtin,2,85993,0x7ff6cc314594,12,ObjectDefineProperty
code-creation,Builtin,2,86004,0x7ff6cc3145d4,12,ObjectDefineSetter
code-creation,Builtin,2,86018,0x7ff6cc314614,1484,ObjectEntries
code-creation,Builtin,2,86031,0x7ff6cc314c14,12,ObjectFreeze
code-creation,Builtin,2,86042,0x7ff6cc314c54,4760,ObjectGetOwnPropertyDescriptor
code-creation,Builtin,2,86054,0x7ff6cc315f14,12,ObjectGetOwnPropertyDescriptors
code-creation,Builtin,2,86067,0x7ff6cc315f54,600,ObjectGetOwnPropertyNames
code-creation,Builtin,2,86078,0x7ff6cc3161d4,12,ObjectGetOwnPropertySymbols
code-creation,Builtin,2,86090,0x7ff6cc316214,168,ObjectHasOwn
code-creation,Builtin,2,86101,0x7ff6cc3162d4,416,ObjectIs
code-creation,Builtin,2,86112,0x7ff6cc316494,12,ObjectIsFrozen
code-creation,Builtin,2,86123,0x7ff6cc3164d4,12,ObjectIsSealed
code-creation,Builtin,2,86135,0x7ff6cc316514,532,ObjectKeys
code-creation,Builtin,2,86146,0x7ff6cc316754,12,ObjectLookupGetter
code-creation,Builtin,2,86157,0x7ff6cc316794,12,ObjectLookupSetter
code-creation,Builtin,2,86168,0x7ff6cc3167d4,3056,ObjectPrototypeHasOwnProperty
code-creation,Builtin,2,86180,0x7ff6cc3173d4,240,ObjectPrototypeIsPrototypeOf
code-creation,Builtin,2,86192,0x7ff6cc3174d4,12,ObjectPrototypePropertyIsEnumerable
code-creation,Builtin,2,86204,0x7ff6cc317514,12,ObjectPrototypeGetProto
code-creation,Builtin,2,86216,0x7ff6cc317554,12,ObjectPrototypeSetProto
code-creation,Builtin,2,86228,0x7ff6cc317594,12,ObjectSeal
code-creation,Builtin,2,86239,0x7ff6cc3175d4,1356,ObjectToString
code-creation,Builtin,2,86250,0x7ff6cc317b54,1260,ObjectValues
code-creation,Builtin,2,86261,0x7ff6cc318054,304,OrdinaryHasInstance
code-creation,Builtin,2,86273,0x7ff6cc318194,372,InstanceOf
code-creation,Builtin,2,86284,0x7ff6cc318314,644,InstanceOf_WithFeedback
code-creation,Builtin,2,86296,0x7ff6cc3185d4,664,InstanceOf_Baseline
code-creation,Builtin,2,86307,0x7ff6cc318894,276,ForInEnumerate
code-creation,Builtin,2,86319,0x7ff6cc3189d4,148,ForInPrepare
code-creation,Builtin,2,86330,0x7ff6cc318a94,3408,ForInFilter
code-creation,Builtin,2,86341,0x7ff6cc319814,56,ReflectApply
code-creation,Builtin,2,86352,0x7ff6cc319854,64,ReflectConstruct
code-creation,Builtin,2,86363,0x7ff6cc3198d4,12,ReflectDefineProperty
code-creation,Builtin,2,86375,0x7ff6cc319914,12,ReflectOwnKeys
code-creation,Builtin,2,86386,0x7ff6cc319954,12,ReflectSet
code-creation,Builtin,2,86397,0x7ff6cc319994,12,RegExpCapture1Getter
code-creation,Builtin,2,86408,0x7ff6cc3199d4,12,RegExpCapture2Getter
code-creation,Builtin,2,86420,0x7ff6cc319a14,12,RegExpCapture3Getter
code-creation,Builtin,2,86431,0x7ff6cc319a54,12,RegExpCapture4Getter
code-creation,Builtin,2,86443,0x7ff6cc319a94,12,RegExpCapture5Getter
code-creation,Builtin,2,86454,0x7ff6cc319ad4,12,RegExpCapture6Getter
code-creation,Builtin,2,86466,0x7ff6cc319b14,12,RegExpCapture7Getter
code-creation,Builtin,2,86478,0x7ff6cc319b54,12,RegExpCapture8Getter
code-creation,Builtin,2,86489,0x7ff6cc319b94,12,RegExpCapture9Getter
code-creation,Builtin,2,86501,0x7ff6cc319bd4,2360,RegExpConstructor
code-creation,Builtin,2,86512,0x7ff6cc31a514,12,RegExpInputGetter
code-creation,Builtin,2,86524,0x7ff6cc31a554,12,RegExpInputSetter
code-creation,Builtin,2,86535,0x7ff6cc31a594,12,RegExpLastMatchGetter
code-creation,Builtin,2,86547,0x7ff6cc31a5d4,12,RegExpLastParenGetter
code-creation,Builtin,2,86558,0x7ff6cc31a614,12,RegExpLeftContextGetter
code-creation,Builtin,2,86570,0x7ff6cc31a654,952,RegExpPrototypeCompile
code-creation,Builtin,2,86581,0x7ff6cc31aa14,12,RegExpPrototypeToString
code-creation,Builtin,2,86593,0x7ff6cc31aa54,12,RegExpRightContextGetter
code-creation,Builtin,2,86605,0x7ff6cc31aa94,248,RegExpExecAtom
code-creation,Builtin,2,86616,0x7ff6cc31ab94,1012,RegExpExecInternal
code-creation,Builtin,2,86627,0x7ff6cc31af94,8,RegExpInterpreterTrampoline
code-creation,Builtin,2,86639,0x7ff6cc31afd4,8,RegExpExperimentalTrampoline
code-creation,Builtin,2,86651,0x7ff6cc31b014,1128,FindOrderedHashSetEntry
code-creation,Builtin,2,86664,0x7ff6cc31b494,2972,SetConstructor
code-creation,Builtin,2,86675,0x7ff6cc31c054,172,SetPrototypeHas
code-creation,Builtin,2,86686,0x7ff6cc31c114,1660,SetPrototypeAdd
code-creation,Builtin,2,86697,0x7ff6cc31c794,1424,SetPrototypeDelete
code-creation,Builtin,2,86711,0x7ff6cc31cd54,12,SetPrototypeClear
code-creation,Builtin,2,86724,0x7ff6cc31cd94,288,SetPrototypeEntries
code-creation,Builtin,2,86735,0x7ff6cc31ced4,148,SetPrototypeGetSize
code-creation,Builtin,2,86747,0x7ff6cc31cf94,456,SetPrototypeForEach
code-creation,Builtin,2,86758,0x7ff6cc31d194,288,SetPrototypeValues
code-creation,Builtin,2,86769,0x7ff6cc31d2d4,840,SetIteratorPrototypeNext
code-creation,Builtin,2,86781,0x7ff6cc31d654,1112,SetOrSetIteratorToList
code-creation,Builtin,2,86793,0x7ff6cc31dad4,12,ShadowRealmConstructor
code-creation,Builtin,2,86804,0x7ff6cc31db14,576,ShadowRealmGetWrappedValue
code-creation,Builtin,2,86816,0x7ff6cc31dd94,12,ShadowRealmPrototypeEvaluate
code-creation,Builtin,2,86828,0x7ff6cc31ddd4,1404,ShadowRealmPrototypeImportValue
code-creation,Builtin,2,86840,0x7ff6cc31e354,236,ShadowRealmImportValueFulfilled
code-creation,Builtin,2,86852,0x7ff6cc31e454,76,ShadowRealmImportValueRejected
code-creation,Builtin,2,86864,0x7ff6cc31e4d4,12,SharedArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,86876,0x7ff6cc31e514,12,SharedArrayBufferPrototypeSlice
code-creation,Builtin,2,86888,0x7ff6cc31e554,12,SharedArrayBufferPrototypeGrow
code-creation,Builtin,2,86900,0x7ff6cc31e594,2108,AtomicsLoad
code-creation,Builtin,2,86911,0x7ff6cc31edd4,2240,AtomicsStore
code-creation,Builtin,2,86922,0x7ff6cc31f6d4,2844,AtomicsExchange
code-creation,Builtin,2,86933,0x7ff6cc320214,3128,AtomicsCompareExchange
code-creation,Builtin,2,86945,0x7ff6cc320e54,2868,AtomicsAdd
code-creation,Builtin,2,86956,0x7ff6cc321994,2868,AtomicsSub
code-creation,Builtin,2,86966,0x7ff6cc3224d4,2868,AtomicsAnd
code-creation,Builtin,2,86977,0x7ff6cc323014,2868,AtomicsOr
code-creation,Builtin,2,86990,0x7ff6cc323b54,2868,AtomicsXor
code-creation,Builtin,2,87001,0x7ff6cc324694,12,AtomicsNotify
code-creation,Builtin,2,87012,0x7ff6cc3246d4,12,AtomicsIsLockFree
code-creation,Builtin,2,87023,0x7ff6cc324714,12,AtomicsWait
code-creation,Builtin,2,87034,0x7ff6cc324754,12,AtomicsWaitAsync
code-creation,Builtin,2,87045,0x7ff6cc324794,12,StringFromCodePoint
code-creation,Builtin,2,87057,0x7ff6cc3247d4,1308,StringFromCharCode
code-creation,Builtin,2,87068,0x7ff6cc324d14,12,StringPrototypeLastIndexOf
code-creation,Builtin,2,87080,0x7ff6cc324d54,4612,StringPrototypeMatchAll
code-creation,Builtin,2,87091,0x7ff6cc325f94,12,StringPrototypeLocaleCompare
code-creation,Builtin,2,87103,0x7ff6cc325fd4,1292,StringPrototypeReplace
code-creation,Builtin,2,87114,0x7ff6cc326514,2868,StringPrototypeSplit
code-creation,Builtin,2,87126,0x7ff6cc327054,12,StringRaw
code-creation,Builtin,2,87137,0x7ff6cc327094,12,SymbolConstructor
code-creation,Builtin,2,87148,0x7ff6cc3270d4,12,SymbolFor
code-creation,Builtin,2,87159,0x7ff6cc327114,12,SymbolKeyFor
code-creation,Builtin,2,87170,0x7ff6cc327154,88,TypedArrayBaseConstructor
code-creation,Builtin,2,87182,0x7ff6cc3271d4,252,TypedArrayConstructor
code-creation,Builtin,2,87193,0x7ff6cc3272d4,12,TypedArrayPrototypeBuffer
code-creation,Builtin,2,87205,0x7ff6cc327314,884,TypedArrayPrototypeByteLength
code-creation,Builtin,2,87217,0x7ff6cc327694,364,TypedArrayPrototypeByteOffset
code-creation,Builtin,2,87228,0x7ff6cc327814,596,TypedArrayPrototypeLength
code-creation,Builtin,2,87240,0x7ff6cc327a94,12,TypedArrayPrototypeCopyWithin
code-creation,Builtin,2,87252,0x7ff6cc327ad4,12,TypedArrayPrototypeFill
code-creation,Builtin,2,87263,0x7ff6cc327b14,12,TypedArrayPrototypeIncludes
code-creation,Builtin,2,87275,0x7ff6cc327b54,12,TypedArrayPrototypeIndexOf
code-creation,Builtin,2,87287,0x7ff6cc327b94,12,TypedArrayPrototypeLastIndexOf
code-creation,Builtin,2,87299,0x7ff6cc327bd4,12,TypedArrayPrototypeReverse
code-creation,Builtin,2,87310,0x7ff6cc327c14,432,TypedArrayPrototypeToStringTag
code-creation,Builtin,2,87322,0x7ff6cc327dd4,24556,TypedArrayPrototypeMap
code-creation,Builtin,2,87334,0x7ff6cc32ddd4,992,GenericJSToWasmWrapper
code-creation,Builtin,2,87345,0x7ff6cc32e1d4,1268,WasmReturnPromiseOnSuspend
code-creation,Builtin,2,87358,0x7ff6cc32e6d4,160,WasmSuspend
code-creation,Builtin,2,87369,0x7ff6cc32e794,324,WasmResume
code-creation,Builtin,2,87382,0x7ff6cc32e914,340,WasmReject
code-creation,Builtin,2,87394,0x7ff6cc32ea94,156,WasmCompileLazy
code-creation,Builtin,2,87406,0x7ff6cc32eb54,192,WasmLiftoffFrameSetup
code-creation,Builtin,2,87418,0x7ff6cc32ec54,180,WasmDebugBreak
code-creation,Builtin,2,87429,0x7ff6cc32ed14,16,WasmOnStackReplace
code-creation,Builtin,2,87440,0x7ff6cc32ed54,132,WasmFloat32ToNumber
code-creation,Builtin,2,87452,0x7ff6cc32ee14,144,WasmFloat64ToNumber
code-creation,Builtin,2,87463,0x7ff6cc32eed4,24,JSToWasmLazyDeoptContinuation
code-creation,Builtin,2,87475,0x7ff6cc32ef14,4532,WeakMapConstructor
code-creation,Builtin,2,87486,0x7ff6cc3300d4,264,WeakMapLookupHashIndex
code-creation,Builtin,2,87498,0x7ff6cc330214,224,WeakMapGet
code-creation,Builtin,2,87509,0x7ff6cc330314,184,WeakMapPrototypeHas
code-creation,Builtin,2,87520,0x7ff6cc3303d4,256,WeakMapPrototypeSet
code-creation,Builtin,2,87532,0x7ff6cc330514,156,WeakMapPrototypeDelete
code-creation,Builtin,2,87543,0x7ff6cc3305d4,3156,WeakSetConstructor
code-creation,Builtin,2,87554,0x7ff6cc331254,184,WeakSetPrototypeHas
code-creation,Builtin,2,87566,0x7ff6cc331314,260,WeakSetPrototypeAdd
code-creation,Builtin,2,87577,0x7ff6cc331454,156,WeakSetPrototypeDelete
code-creation,Builtin,2,87589,0x7ff6cc331514,448,WeakCollectionDelete
code-creation,Builtin,2,87601,0x7ff6cc331714,808,WeakCollectionSet
code-creation,Builtin,2,87612,0x7ff6cc331a54,12,SharedStructTypeConstructor
code-creation,Builtin,2,87624,0x7ff6cc331a94,12,SharedStructConstructor
code-creation,Builtin,2,87636,0x7ff6cc331ad4,12,SharedArrayConstructor
code-creation,Builtin,2,87647,0x7ff6cc331b14,12,AtomicsMutexConstructor
code-creation,Builtin,2,87659,0x7ff6cc331b54,12,AtomicsMutexLock
code-creation,Builtin,2,87670,0x7ff6cc331b94,12,AtomicsMutexTryLock
code-creation,Builtin,2,87681,0x7ff6cc331bd4,12,AtomicsConditionConstructor
code-creation,Builtin,2,87693,0x7ff6cc331c14,12,AtomicsConditionWait
code-creation,Builtin,2,87705,0x7ff6cc331c54,12,AtomicsConditionNotify
code-creation,Builtin,2,87716,0x7ff6cc331c94,292,AsyncGeneratorResolve
code-creation,Builtin,2,87728,0x7ff6cc331dd4,104,AsyncGeneratorReject
code-creation,Builtin,2,87740,0x7ff6cc331e54,1624,AsyncGeneratorYieldWithAwait
code-creation,Builtin,2,87752,0x7ff6cc3324d4,1912,AsyncGeneratorReturn
code-creation,Builtin,2,87763,0x7ff6cc332c54,376,AsyncGeneratorResumeNext
code-creation,Builtin,2,87775,0x7ff6cc332dd4,12,AsyncGeneratorFunctionConstructor
code-creation,Builtin,2,87787,0x7ff6cc332e14,1024,AsyncGeneratorPrototypeNext
code-creation,Builtin,2,87799,0x7ff6cc333254,1032,AsyncGeneratorPrototypeReturn
code-creation,Builtin,2,87811,0x7ff6cc333694,1032,AsyncGeneratorPrototypeThrow
code-creation,Builtin,2,87822,0x7ff6cc333ad4,1600,AsyncGeneratorAwaitCaught
code-creation,Builtin,2,87834,0x7ff6cc334154,1600,AsyncGeneratorAwaitUncaught
code-creation,Builtin,2,87846,0x7ff6cc3347d4,176,AsyncGeneratorAwaitResolveClosure
code-creation,Builtin,2,87858,0x7ff6cc334894,172,AsyncGeneratorAwaitRejectClosure
code-creation,Builtin,2,87870,0x7ff6cc334954,124,AsyncGeneratorYieldWithAwaitResolveClosure
code-creation,Builtin,2,87883,0x7ff6cc3349d4,124,AsyncGeneratorReturnClosedResolveClosure
code-creation,Builtin,2,87895,0x7ff6cc334a54,116,AsyncGeneratorReturnClosedRejectClosure
code-creation,Builtin,2,87911,0x7ff6cc334ad4,180,AsyncGeneratorReturnResolveClosure
code-creation,Builtin,2,87923,0x7ff6cc334b94,1656,AsyncFromSyncIteratorPrototypeNext
code-creation,Builtin,2,87935,0x7ff6cc335214,1764,AsyncFromSyncIteratorPrototypeThrow
code-creation,Builtin,2,87948,0x7ff6cc335914,1788,AsyncFromSyncIteratorPrototypeReturn
code-creation,Builtin,2,87960,0x7ff6cc336014,100,AsyncIteratorValueUnwrap
code-creation,Builtin,2,87972,0x7ff6cc336094,200,CEntry_Return1_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,87985,0x7ff6cc336194,208,CEntry_Return1_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,87998,0x7ff6cc336294,208,CEntry_Return1_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,88010,0x7ff6cc336394,212,CEntry_Return2_ArgvInRegister_NoBuiltinExit
code-creation,Builtin,2,88023,0x7ff6cc336494,224,CEntry_Return2_ArgvOnStack_BuiltinExit
code-creation,Builtin,2,88037,0x7ff6cc336594,224,CEntry_Return2_ArgvOnStack_NoBuiltinExit
code-creation,Builtin,2,88051,0x7ff6cc336694,4,DirectCEntry
code-creation,Builtin,2,88062,0x7ff6cc3366d4,1244,StringAdd_CheckNone
code-creation,Builtin,2,88074,0x7ff6cc336bd4,2384,SubString
code-creation,Builtin,2,88085,0x7ff6cc337554,84,DoubleToI
code-creation,Builtin,2,88096,0x7ff6cc3375d4,3100,GetProperty
code-creation,Builtin,2,88107,0x7ff6cc338214,3272,GetPropertyWithReceiver
code-creation,Builtin,2,88118,0x7ff6cc338f14,17132,SetProperty
code-creation,Builtin,2,88132,0x7ff6cc33d214,14220,CreateDataProperty
code-creation,Builtin,2,88144,0x7ff6cc3409d4,52,GetOwnPropertyDescriptor
code-creation,Builtin,2,88156,0x7ff6cc340a14,8,MemCopyUint8Uint8
code-creation,Builtin,2,88169,0x7ff6cc340a54,8,MemMove
code-creation,Builtin,2,88180,0x7ff6cc340a94,180,FindNonDefaultConstructorOrConstruct
code-creation,Builtin,2,88194,0x7ff6cc340b54,2828,OrdinaryGetOwnPropertyDescriptor
code-creation,Builtin,2,88207,0x7ff6cc341694,12,IsTraceCategoryEnabled
code-creation,Builtin,2,88219,0x7ff6cc3416d4,12,Trace
code-creation,Builtin,2,88231,0x7ff6cc341714,12,FinalizationRegistryUnregister
code-creation,Builtin,2,88243,0x7ff6cc341754,408,AsyncModuleEvaluate
code-creation,Builtin,2,88256,0x7ff6cc341914,12,CallAsyncModuleFulfilled
code-creation,Builtin,2,88268,0x7ff6cc341954,12,CallAsyncModuleRejected
code-creation,Builtin,2,88281,0x7ff6cc341994,12,TemporalNowTimeZone
code-creation,Builtin,2,88293,0x7ff6cc3419d4,12,TemporalNowInstant
code-creation,Builtin,2,88305,0x7ff6cc341a14,12,TemporalNowPlainDateTime
code-creation,Builtin,2,88317,0x7ff6cc341a54,12,TemporalNowPlainDateTimeISO
code-creation,Builtin,2,88330,0x7ff6cc341a94,12,TemporalNowZonedDateTime
code-creation,Builtin,2,88342,0x7ff6cc341ad4,12,TemporalNowZonedDateTimeISO
code-creation,Builtin,2,88355,0x7ff6cc341b14,12,TemporalNowPlainDate
code-creation,Builtin,2,88366,0x7ff6cc341b54,12,TemporalNowPlainDateISO
code-creation,Builtin,2,88377,0x7ff6cc341b94,12,TemporalNowPlainTimeISO
code-creation,Builtin,2,88387,0x7ff6cc341bd4,12,TemporalPlainDateConstructor
code-creation,Builtin,2,88398,0x7ff6cc341c14,12,TemporalPlainDateFrom
code-creation,Builtin,2,88408,0x7ff6cc341c54,12,TemporalPlainDateCompare
code-creation,Builtin,2,88419,0x7ff6cc341c94,12,TemporalPlainDatePrototypeCalendar
code-creation,Builtin,2,88430,0x7ff6cc341cd4,12,TemporalPlainDatePrototypeYear
code-creation,Builtin,2,88441,0x7ff6cc341d14,12,TemporalPlainDatePrototypeMonth
code-creation,Builtin,2,88452,0x7ff6cc341d54,12,TemporalPlainDatePrototypeMonthCode
code-creation,Builtin,2,88463,0x7ff6cc341d94,12,TemporalPlainDatePrototypeDay
code-creation,Builtin,2,88474,0x7ff6cc341dd4,12,TemporalPlainDatePrototypeDayOfWeek
code-creation,Builtin,2,88485,0x7ff6cc341e14,12,TemporalPlainDatePrototypeDayOfYear
code-creation,Builtin,2,88496,0x7ff6cc341e54,12,TemporalPlainDatePrototypeWeekOfYear
code-creation,Builtin,2,88507,0x7ff6cc341e94,12,TemporalPlainDatePrototypeDaysInWeek
code-creation,Builtin,2,88518,0x7ff6cc341ed4,12,TemporalPlainDatePrototypeDaysInMonth
code-creation,Builtin,2,88530,0x7ff6cc341f14,12,TemporalPlainDatePrototypeDaysInYear
code-creation,Builtin,2,88541,0x7ff6cc341f54,12,TemporalPlainDatePrototypeMonthsInYear
code-creation,Builtin,2,88552,0x7ff6cc341f94,12,TemporalPlainDatePrototypeInLeapYear
code-creation,Builtin,2,88563,0x7ff6cc341fd4,12,TemporalPlainDatePrototypeToPlainYearMonth
code-creation,Builtin,2,88575,0x7ff6cc342014,12,TemporalPlainDatePrototypeToPlainMonthDay
code-creation,Builtin,2,88586,0x7ff6cc342054,12,TemporalPlainDatePrototypeGetISOFields
code-creation,Builtin,2,88597,0x7ff6cc342094,12,TemporalPlainDatePrototypeAdd
code-creation,Builtin,2,88608,0x7ff6cc3420d4,12,TemporalPlainDatePrototypeSubtract
code-creation,Builtin,2,88619,0x7ff6cc342114,12,TemporalPlainDatePrototypeWith
code-creation,Builtin,2,88630,0x7ff6cc342154,12,TemporalPlainDatePrototypeWithCalendar
code-creation,Builtin,2,88641,0x7ff6cc342194,12,TemporalPlainDatePrototypeUntil
code-creation,Builtin,2,88652,0x7ff6cc3421d4,12,TemporalPlainDatePrototypeSince
code-creation,Builtin,2,88666,0x7ff6cc342214,12,TemporalPlainDatePrototypeEquals
code-creation,Builtin,2,88678,0x7ff6cc342254,12,TemporalPlainDatePrototypeToPlainDateTime
code-creation,Builtin,2,88690,0x7ff6cc342294,12,TemporalPlainDatePrototypeToZonedDateTime
code-creation,Builtin,2,88701,0x7ff6cc3422d4,12,TemporalPlainDatePrototypeToString
code-creation,Builtin,2,88712,0x7ff6cc342314,12,TemporalPlainDatePrototypeToJSON
code-creation,Builtin,2,88723,0x7ff6cc342354,12,TemporalPlainDatePrototypeToLocaleString
code-creation,Builtin,2,88734,0x7ff6cc342394,12,TemporalPlainDatePrototypeValueOf
code-creation,Builtin,2,88745,0x7ff6cc3423d4,12,TemporalPlainTimeConstructor
code-creation,Builtin,2,88756,0x7ff6cc342414,12,TemporalPlainTimeFrom
code-creation,Builtin,2,88766,0x7ff6cc342454,12,TemporalPlainTimeCompare
code-creation,Builtin,2,88777,0x7ff6cc342494,12,TemporalPlainTimePrototypeCalendar
code-creation,Builtin,2,88788,0x7ff6cc3424d4,12,TemporalPlainTimePrototypeHour
code-creation,Builtin,2,88799,0x7ff6cc342514,12,TemporalPlainTimePrototypeMinute
code-creation,Builtin,2,88810,0x7ff6cc342554,12,TemporalPlainTimePrototypeSecond
code-creation,Builtin,2,88821,0x7ff6cc342594,12,TemporalPlainTimePrototypeMillisecond
code-creation,Builtin,2,88832,0x7ff6cc3425d4,12,TemporalPlainTimePrototypeMicrosecond
code-creation,Builtin,2,88844,0x7ff6cc342614,12,TemporalPlainTimePrototypeNanosecond
code-creation,Builtin,2,88856,0x7ff6cc342654,12,TemporalPlainTimePrototypeAdd
code-creation,Builtin,2,88866,0x7ff6cc342694,12,TemporalPlainTimePrototypeSubtract
code-creation,Builtin,2,88878,0x7ff6cc3426d4,12,TemporalPlainTimePrototypeWith
code-creation,Builtin,2,88888,0x7ff6cc342714,12,TemporalPlainTimePrototypeUntil
code-creation,Builtin,2,88899,0x7ff6cc342754,12,TemporalPlainTimePrototypeSince
code-creation,Builtin,2,88910,0x7ff6cc342794,12,TemporalPlainTimePrototypeRound
code-creation,Builtin,2,88921,0x7ff6cc3427d4,12,TemporalPlainTimePrototypeEquals
code-creation,Builtin,2,88932,0x7ff6cc342814,12,TemporalPlainTimePrototypeToPlainDateTime
code-creation,Builtin,2,88943,0x7ff6cc342854,12,TemporalPlainTimePrototypeToZonedDateTime
code-creation,Builtin,2,88955,0x7ff6cc342894,12,TemporalPlainTimePrototypeGetISOFields
code-creation,Builtin,2,88966,0x7ff6cc3428d4,12,TemporalPlainTimePrototypeToString
code-creation,Builtin,2,88977,0x7ff6cc342914,12,TemporalPlainTimePrototypeToJSON
code-creation,Builtin,2,88990,0x7ff6cc342954,12,TemporalPlainTimePrototypeToLocaleString
code-creation,Builtin,2,89001,0x7ff6cc342994,12,TemporalPlainTimePrototypeValueOf
code-creation,Builtin,2,89012,0x7ff6cc3429d4,12,TemporalPlainDateTimeConstructor
code-creation,Builtin,2,89023,0x7ff6cc342a14,12,TemporalPlainDateTimeFrom
code-creation,Builtin,2,89034,0x7ff6cc342a54,12,TemporalPlainDateTimeCompare
code-creation,Builtin,2,89045,0x7ff6cc342a94,12,TemporalPlainDateTimePrototypeCalendar
code-creation,Builtin,2,89056,0x7ff6cc342ad4,12,TemporalPlainDateTimePrototypeYear
code-creation,Builtin,2,89067,0x7ff6cc342b14,12,TemporalPlainDateTimePrototypeMonth
code-creation,Builtin,2,89078,0x7ff6cc342b54,12,TemporalPlainDateTimePrototypeMonthCode
code-creation,Builtin,2,89090,0x7ff6cc342b94,12,TemporalPlainDateTimePrototypeDay
code-creation,Builtin,2,89101,0x7ff6cc342bd4,12,TemporalPlainDateTimePrototypeHour
code-creation,Builtin,2,89112,0x7ff6cc342c14,12,TemporalPlainDateTimePrototypeMinute
code-creation,Builtin,2,89123,0x7ff6cc342c54,12,TemporalPlainDateTimePrototypeSecond
code-creation,Builtin,2,89134,0x7ff6cc342c94,12,TemporalPlainDateTimePrototypeMillisecond
code-creation,Builtin,2,89145,0x7ff6cc342cd4,12,TemporalPlainDateTimePrototypeMicrosecond
code-creation,Builtin,2,89157,0x7ff6cc342d14,12,TemporalPlainDateTimePrototypeNanosecond
code-creation,Builtin,2,89168,0x7ff6cc342d54,12,TemporalPlainDateTimePrototypeDayOfWeek
code-creation,Builtin,2,89179,0x7ff6cc342d94,12,TemporalPlainDateTimePrototypeDayOfYear
code-creation,Builtin,2,89191,0x7ff6cc342dd4,12,TemporalPlainDateTimePrototypeWeekOfYear
code-creation,Builtin,2,89202,0x7ff6cc342e14,12,TemporalPlainDateTimePrototypeDaysInWeek
code-creation,Builtin,2,89215,0x7ff6cc342e54,12,TemporalPlainDateTimePrototypeDaysInMonth
code-creation,Builtin,2,89228,0x7ff6cc342e94,12,TemporalPlainDateTimePrototypeDaysInYear
code-creation,Builtin,2,89240,0x7ff6cc342ed4,12,TemporalPlainDateTimePrototypeMonthsInYear
code-creation,Builtin,2,89251,0x7ff6cc342f14,12,TemporalPlainDateTimePrototypeInLeapYear
code-creation,Builtin,2,89266,0x7ff6cc342f54,12,TemporalPlainDateTimePrototypeWith
code-creation,Builtin,2,89277,0x7ff6cc342f94,12,TemporalPlainDateTimePrototypeWithPlainTime
code-creation,Builtin,2,89289,0x7ff6cc342fd4,12,TemporalPlainDateTimePrototypeWithPlainDate
code-creation,Builtin,2,89300,0x7ff6cc343014,12,TemporalPlainDateTimePrototypeWithCalendar
code-creation,Builtin,2,89311,0x7ff6cc343054,12,TemporalPlainDateTimePrototypeAdd
code-creation,Builtin,2,89322,0x7ff6cc343094,12,TemporalPlainDateTimePrototypeSubtract
code-creation,Builtin,2,89334,0x7ff6cc3430d4,12,TemporalPlainDateTimePrototypeUntil
code-creation,Builtin,2,89345,0x7ff6cc343114,12,TemporalPlainDateTimePrototypeSince
code-creation,Builtin,2,89356,0x7ff6cc343154,12,TemporalPlainDateTimePrototypeRound
code-creation,Builtin,2,89367,0x7ff6cc343194,12,TemporalPlainDateTimePrototypeEquals
code-creation,Builtin,2,89378,0x7ff6cc3431d4,12,TemporalPlainDateTimePrototypeToString
code-creation,Builtin,2,89390,0x7ff6cc343214,12,TemporalPlainDateTimePrototypeToJSON
code-creation,Builtin,2,89401,0x7ff6cc343254,12,TemporalPlainDateTimePrototypeToLocaleString
code-creation,Builtin,2,89412,0x7ff6cc343294,12,TemporalPlainDateTimePrototypeValueOf
code-creation,Builtin,2,89424,0x7ff6cc3432d4,12,TemporalPlainDateTimePrototypeToZonedDateTime
code-creation,Builtin,2,89435,0x7ff6cc343314,12,TemporalPlainDateTimePrototypeToPlainDate
code-creation,Builtin,2,89446,0x7ff6cc343354,12,TemporalPlainDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,89458,0x7ff6cc343394,12,TemporalPlainDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,89469,0x7ff6cc3433d4,12,TemporalPlainDateTimePrototypeToPlainTime
code-creation,Builtin,2,89481,0x7ff6cc343414,12,TemporalPlainDateTimePrototypeGetISOFields
code-creation,Builtin,2,89492,0x7ff6cc343454,12,TemporalZonedDateTimeConstructor
code-creation,Builtin,2,89503,0x7ff6cc343494,12,TemporalZonedDateTimeFrom
code-creation,Builtin,2,89514,0x7ff6cc3434d4,12,TemporalZonedDateTimeCompare
code-creation,Builtin,2,89524,0x7ff6cc343514,12,TemporalZonedDateTimePrototypeCalendar
code-creation,Builtin,2,89536,0x7ff6cc343554,12,TemporalZonedDateTimePrototypeTimeZone
code-creation,Builtin,2,89547,0x7ff6cc343594,12,TemporalZonedDateTimePrototypeYear
code-creation,Builtin,2,89558,0x7ff6cc3435d4,12,TemporalZonedDateTimePrototypeMonth
code-creation,Builtin,2,89569,0x7ff6cc343614,12,TemporalZonedDateTimePrototypeMonthCode
code-creation,Builtin,2,89580,0x7ff6cc343654,12,TemporalZonedDateTimePrototypeDay
code-creation,Builtin,2,89591,0x7ff6cc343694,12,TemporalZonedDateTimePrototypeHour
code-creation,Builtin,2,89602,0x7ff6cc3436d4,12,TemporalZonedDateTimePrototypeMinute
code-creation,Builtin,2,89614,0x7ff6cc343714,12,TemporalZonedDateTimePrototypeSecond
code-creation,Builtin,2,89625,0x7ff6cc343754,12,TemporalZonedDateTimePrototypeMillisecond
code-creation,Builtin,2,89636,0x7ff6cc343794,12,TemporalZonedDateTimePrototypeMicrosecond
code-creation,Builtin,2,89647,0x7ff6cc3437d4,12,TemporalZonedDateTimePrototypeNanosecond
code-creation,Builtin,2,89659,0x7ff6cc343814,12,TemporalZonedDateTimePrototypeEpochSeconds
code-creation,Builtin,2,89670,0x7ff6cc343854,12,TemporalZonedDateTimePrototypeEpochMilliseconds
code-creation,Builtin,2,89682,0x7ff6cc343894,12,TemporalZonedDateTimePrototypeEpochMicroseconds
code-creation,Builtin,2,89693,0x7ff6cc3438d4,12,TemporalZonedDateTimePrototypeEpochNanoseconds
code-creation,Builtin,2,89704,0x7ff6cc343914,12,TemporalZonedDateTimePrototypeDayOfWeek
code-creation,Builtin,2,89715,0x7ff6cc343954,12,TemporalZonedDateTimePrototypeDayOfYear
code-creation,Builtin,2,89726,0x7ff6cc343994,12,TemporalZonedDateTimePrototypeWeekOfYear
code-creation,Builtin,2,89810,0x7ff6cc3439d4,12,TemporalZonedDateTimePrototypeHoursInDay
code-creation,Builtin,2,89826,0x7ff6cc343a14,12,TemporalZonedDateTimePrototypeDaysInWeek
code-creation,Builtin,2,89835,0x7ff6cc343a54,12,TemporalZonedDateTimePrototypeDaysInMonth
code-creation,Builtin,2,89844,0x7ff6cc343a94,12,TemporalZonedDateTimePrototypeDaysInYear
code-creation,Builtin,2,89853,0x7ff6cc343ad4,12,TemporalZonedDateTimePrototypeMonthsInYear
code-creation,Builtin,2,89862,0x7ff6cc343b14,12,TemporalZonedDateTimePrototypeInLeapYear
code-creation,Builtin,2,89871,0x7ff6cc343b54,12,TemporalZonedDateTimePrototypeOffsetNanoseconds
code-creation,Builtin,2,89881,0x7ff6cc343b94,12,TemporalZonedDateTimePrototypeOffset
code-creation,Builtin,2,89889,0x7ff6cc343bd4,12,TemporalZonedDateTimePrototypeWith
code-creation,Builtin,2,89898,0x7ff6cc343c14,12,TemporalZonedDateTimePrototypeWithPlainTime
code-creation,Builtin,2,89908,0x7ff6cc343c54,12,TemporalZonedDateTimePrototypeWithPlainDate
code-creation,Builtin,2,89917,0x7ff6cc343c94,12,TemporalZonedDateTimePrototypeWithTimeZone
code-creation,Builtin,2,89926,0x7ff6cc343cd4,12,TemporalZonedDateTimePrototypeWithCalendar
code-creation,Builtin,2,89935,0x7ff6cc343d14,12,TemporalZonedDateTimePrototypeAdd
code-creation,Builtin,2,89944,0x7ff6cc343d54,12,TemporalZonedDateTimePrototypeSubtract
code-creation,Builtin,2,89953,0x7ff6cc343d94,12,TemporalZonedDateTimePrototypeUntil
code-creation,Builtin,2,89962,0x7ff6cc343dd4,12,TemporalZonedDateTimePrototypeSince
code-creation,Builtin,2,89971,0x7ff6cc343e14,12,TemporalZonedDateTimePrototypeRound
code-creation,Builtin,2,89979,0x7ff6cc343e54,12,TemporalZonedDateTimePrototypeEquals
code-creation,Builtin,2,89990,0x7ff6cc343e94,12,TemporalZonedDateTimePrototypeToString
code-creation,Builtin,2,89999,0x7ff6cc343ed4,12,TemporalZonedDateTimePrototypeToJSON
code-creation,Builtin,2,90008,0x7ff6cc343f14,12,TemporalZonedDateTimePrototypeToLocaleString
code-creation,Builtin,2,90017,0x7ff6cc343f54,12,TemporalZonedDateTimePrototypeValueOf
code-creation,Builtin,2,90026,0x7ff6cc343f94,12,TemporalZonedDateTimePrototypeStartOfDay
code-creation,Builtin,2,90035,0x7ff6cc343fd4,12,TemporalZonedDateTimePrototypeToInstant
code-creation,Builtin,2,90044,0x7ff6cc344014,12,TemporalZonedDateTimePrototypeToPlainDate
code-creation,Builtin,2,90053,0x7ff6cc344054,12,TemporalZonedDateTimePrototypeToPlainTime
code-creation,Builtin,2,90062,0x7ff6cc344094,12,TemporalZonedDateTimePrototypeToPlainDateTime
code-creation,Builtin,2,90072,0x7ff6cc3440d4,12,TemporalZonedDateTimePrototypeToPlainYearMonth
code-creation,Builtin,2,90082,0x7ff6cc344114,12,TemporalZonedDateTimePrototypeToPlainMonthDay
code-creation,Builtin,2,90091,0x7ff6cc344154,12,TemporalZonedDateTimePrototypeGetISOFields
code-creation,Builtin,2,90100,0x7ff6cc344194,12,TemporalDurationConstructor
code-creation,Builtin,2,90109,0x7ff6cc3441d4,12,TemporalDurationFrom
code-creation,Builtin,2,90118,0x7ff6cc344214,12,TemporalDurationCompare
code-creation,Builtin,2,90126,0x7ff6cc344254,12,TemporalDurationPrototypeYears
code-creation,Builtin,2,90135,0x7ff6cc344294,12,TemporalDurationPrototypeMonths
code-creation,Builtin,2,90144,0x7ff6cc3442d4,12,TemporalDurationPrototypeWeeks
code-creation,Builtin,2,90153,0x7ff6cc344314,12,TemporalDurationPrototypeDays
code-creation,Builtin,2,90161,0x7ff6cc344354,12,TemporalDurationPrototypeHours
code-creation,Builtin,2,90170,0x7ff6cc344394,12,TemporalDurationPrototypeMinutes
code-creation,Builtin,2,90179,0x7ff6cc3443d4,12,TemporalDurationPrototypeSeconds
code-creation,Builtin,2,90188,0x7ff6cc344414,12,TemporalDurationPrototypeMilliseconds
code-creation,Builtin,2,90197,0x7ff6cc344454,12,TemporalDurationPrototypeMicroseconds
code-creation,Builtin,2,90206,0x7ff6cc344494,12,TemporalDurationPrototypeNanoseconds
code-creation,Builtin,2,90215,0x7ff6cc3444d4,12,TemporalDurationPrototypeSign
code-creation,Builtin,2,90224,0x7ff6cc344514,12,TemporalDurationPrototypeBlank
code-creation,Builtin,2,90232,0x7ff6cc344554,12,TemporalDurationPrototypeWith
code-creation,Builtin,2,90241,0x7ff6cc344594,12,TemporalDurationPrototypeNegated
code-creation,Builtin,2,90252,0x7ff6cc3445d4,12,TemporalDurationPrototypeAbs
code-creation,Builtin,2,90262,0x7ff6cc344614,12,TemporalDurationPrototypeAdd
code-creation,Builtin,2,90272,0x7ff6cc344654,12,TemporalDurationPrototypeSubtract
code-creation,Builtin,2,90281,0x7ff6cc344694,12,TemporalDurationPrototypeRound
code-creation,Builtin,2,90290,0x7ff6cc3446d4,12,TemporalDurationPrototypeTotal
code-creation,Builtin,2,90299,0x7ff6cc344714,12,TemporalDurationPrototypeToString
code-creation,Builtin,2,90308,0x7ff6cc344754,12,TemporalDurationPrototypeToJSON
code-creation,Builtin,2,90317,0x7ff6cc344794,12,TemporalDurationPrototypeToLocaleString
code-creation,Builtin,2,90326,0x7ff6cc3447d4,12,TemporalDurationPrototypeValueOf
code-creation,Builtin,2,90338,0x7ff6cc344814,12,TemporalInstantConstructor
code-creation,Builtin,2,90347,0x7ff6cc344854,12,TemporalInstantFrom
code-creation,Builtin,2,90356,0x7ff6cc344894,12,TemporalInstantFromEpochSeconds
code-creation,Builtin,2,90365,0x7ff6cc3448d4,12,TemporalInstantFromEpochMilliseconds
code-creation,Builtin,2,90374,0x7ff6cc344914,12,TemporalInstantFromEpochMicroseconds
code-creation,Builtin,2,90383,0x7ff6cc344954,12,TemporalInstantFromEpochNanoseconds
code-creation,Builtin,2,90392,0x7ff6cc344994,12,TemporalInstantCompare
code-creation,Builtin,2,90400,0x7ff6cc3449d4,12,TemporalInstantPrototypeEpochSeconds
code-creation,Builtin,2,90409,0x7ff6cc344a14,12,TemporalInstantPrototypeEpochMilliseconds
code-creation,Builtin,2,90418,0x7ff6cc344a54,12,TemporalInstantPrototypeEpochMicroseconds
code-creation,Builtin,2,90427,0x7ff6cc344a94,12,TemporalInstantPrototypeEpochNanoseconds
code-creation,Builtin,2,90437,0x7ff6cc344ad4,12,TemporalInstantPrototypeAdd
code-creation,Builtin,2,90445,0x7ff6cc344b14,12,TemporalInstantPrototypeSubtract
code-creation,Builtin,2,90454,0x7ff6cc344b54,12,TemporalInstantPrototypeUntil
code-creation,Builtin,2,90463,0x7ff6cc344b94,12,TemporalInstantPrototypeSince
code-creation,Builtin,2,90472,0x7ff6cc344bd4,12,TemporalInstantPrototypeRound
code-creation,Builtin,2,90480,0x7ff6cc344c14,12,TemporalInstantPrototypeEquals
code-creation,Builtin,2,90489,0x7ff6cc344c54,12,TemporalInstantPrototypeToString
code-creation,Builtin,2,90498,0x7ff6cc344c94,12,TemporalInstantPrototypeToJSON
code-creation,Builtin,2,90507,0x7ff6cc344cd4,12,TemporalInstantPrototypeToLocaleString
code-creation,Builtin,2,90516,0x7ff6cc344d14,12,TemporalInstantPrototypeValueOf
code-creation,Builtin,2,90525,0x7ff6cc344d54,12,TemporalInstantPrototypeToZonedDateTime
code-creation,Builtin,2,90534,0x7ff6cc344d94,12,TemporalInstantPrototypeToZonedDateTimeISO
code-creation,Builtin,2,90543,0x7ff6cc344dd4,12,TemporalPlainYearMonthConstructor
code-creation,Builtin,2,90552,0x7ff6cc344e14,12,TemporalPlainYearMonthFrom
code-creation,Builtin,2,90560,0x7ff6cc344e54,12,TemporalPlainYearMonthCompare
code-creation,Builtin,2,90569,0x7ff6cc344e94,12,TemporalPlainYearMonthPrototypeCalendar
code-creation,Builtin,2,90578,0x7ff6cc344ed4,12,TemporalPlainYearMonthPrototypeYear
code-creation,Builtin,2,90587,0x7ff6cc344f14,12,TemporalPlainYearMonthPrototypeMonth
code-creation,Builtin,2,90596,0x7ff6cc344f54,12,TemporalPlainYearMonthPrototypeMonthCode
code-creation,Builtin,2,90605,0x7ff6cc344f94,12,TemporalPlainYearMonthPrototypeDaysInYear
code-creation,Builtin,2,90614,0x7ff6cc344fd4,12,TemporalPlainYearMonthPrototypeDaysInMonth
code-creation,Builtin,2,90624,0x7ff6cc345014,12,TemporalPlainYearMonthPrototypeMonthsInYear
code-creation,Builtin,2,90633,0x7ff6cc345054,12,TemporalPlainYearMonthPrototypeInLeapYear
code-creation,Builtin,2,90642,0x7ff6cc345094,12,TemporalPlainYearMonthPrototypeWith
code-creation,Builtin,2,90651,0x7ff6cc3450d4,12,TemporalPlainYearMonthPrototypeAdd
code-creation,Builtin,2,90660,0x7ff6cc345114,12,TemporalPlainYearMonthPrototypeSubtract
code-creation,Builtin,2,90669,0x7ff6cc345154,12,TemporalPlainYearMonthPrototypeUntil
code-creation,Builtin,2,90678,0x7ff6cc345194,12,TemporalPlainYearMonthPrototypeSince
code-creation,Builtin,2,90686,0x7ff6cc3451d4,12,TemporalPlainYearMonthPrototypeEquals
code-creation,Builtin,2,90695,0x7ff6cc345214,12,TemporalPlainYearMonthPrototypeToString
code-creation,Builtin,2,90706,0x7ff6cc345254,12,TemporalPlainYearMonthPrototypeToJSON
code-creation,Builtin,2,90717,0x7ff6cc345294,12,TemporalPlainYearMonthPrototypeToLocaleString
code-creation,Builtin,2,90726,0x7ff6cc3452d4,12,TemporalPlainYearMonthPrototypeValueOf
code-creation,Builtin,2,90735,0x7ff6cc345314,12,TemporalPlainYearMonthPrototypeToPlainDate
code-creation,Builtin,2,90745,0x7ff6cc345354,12,TemporalPlainYearMonthPrototypeGetISOFields
code-creation,Builtin,2,90754,0x7ff6cc345394,12,TemporalPlainMonthDayConstructor
code-creation,Builtin,2,90763,0x7ff6cc3453d4,12,TemporalPlainMonthDayFrom
code-creation,Builtin,2,90771,0x7ff6cc345414,12,TemporalPlainMonthDayPrototypeCalendar
code-creation,Builtin,2,90780,0x7ff6cc345454,12,TemporalPlainMonthDayPrototypeMonthCode
code-creation,Builtin,2,90789,0x7ff6cc345494,12,TemporalPlainMonthDayPrototypeDay
code-creation,Builtin,2,90798,0x7ff6cc3454d4,12,TemporalPlainMonthDayPrototypeWith
code-creation,Builtin,2,90807,0x7ff6cc345514,12,TemporalPlainMonthDayPrototypeEquals
code-creation,Builtin,2,90816,0x7ff6cc345554,12,TemporalPlainMonthDayPrototypeToString
code-creation,Builtin,2,90825,0x7ff6cc345594,12,TemporalPlainMonthDayPrototypeToJSON
code-creation,Builtin,2,90834,0x7ff6cc3455d4,12,TemporalPlainMonthDayPrototypeToLocaleString
code-creation,Builtin,2,90843,0x7ff6cc345614,12,TemporalPlainMonthDayPrototypeValueOf
code-creation,Builtin,2,90852,0x7ff6cc345654,12,TemporalPlainMonthDayPrototypeToPlainDate
code-creation,Builtin,2,90861,0x7ff6cc345694,12,TemporalPlainMonthDayPrototypeGetISOFields
code-creation,Builtin,2,90870,0x7ff6cc3456d4,12,TemporalTimeZoneConstructor
code-creation,Builtin,2,90878,0x7ff6cc345714,12,TemporalTimeZoneFrom
code-creation,Builtin,2,90887,0x7ff6cc345754,12,TemporalTimeZonePrototypeId
code-creation,Builtin,2,90895,0x7ff6cc345794,12,TemporalTimeZonePrototypeGetOffsetNanosecondsFor
code-creation,Builtin,2,90905,0x7ff6cc3457d4,12,TemporalTimeZonePrototypeGetOffsetStringFor
code-creation,Builtin,2,90914,0x7ff6cc345814,12,TemporalTimeZonePrototypeGetPlainDateTimeFor
code-creation,Builtin,2,90923,0x7ff6cc345854,12,TemporalTimeZonePrototypeGetInstantFor
code-creation,Builtin,2,90932,0x7ff6cc345894,12,TemporalTimeZonePrototypeGetPossibleInstantsFor
code-creation,Builtin,2,90941,0x7ff6cc3458d4,12,TemporalTimeZonePrototypeGetNextTransition
code-creation,Builtin,2,90950,0x7ff6cc345914,12,TemporalTimeZonePrototypeGetPreviousTransition
code-creation,Builtin,2,90960,0x7ff6cc345954,12,TemporalTimeZonePrototypeToString
code-creation,Builtin,2,90968,0x7ff6cc345994,12,TemporalTimeZonePrototypeToJSON
code-creation,Builtin,2,90977,0x7ff6cc3459d4,12,TemporalCalendarConstructor
code-creation,Builtin,2,90987,0x7ff6cc345a14,12,TemporalCalendarFrom
code-creation,Builtin,2,90996,0x7ff6cc345a54,12,TemporalCalendarPrototypeId
code-creation,Builtin,2,91004,0x7ff6cc345a94,12,TemporalCalendarPrototypeDateFromFields
code-creation,Builtin,2,91013,0x7ff6cc345ad4,12,TemporalCalendarPrototypeYearMonthFromFields
code-creation,Builtin,2,91023,0x7ff6cc345b14,12,TemporalCalendarPrototypeMonthDayFromFields
code-creation,Builtin,2,91032,0x7ff6cc345b54,12,TemporalCalendarPrototypeDateAdd
code-creation,Builtin,2,91041,0x7ff6cc345b94,12,TemporalCalendarPrototypeDateUntil
code-creation,Builtin,2,91049,0x7ff6cc345bd4,12,TemporalCalendarPrototypeYear
code-creation,Builtin,2,91058,0x7ff6cc345c14,12,TemporalCalendarPrototypeMonth
code-creation,Builtin,2,91067,0x7ff6cc345c54,12,TemporalCalendarPrototypeMonthCode
code-creation,Builtin,2,91076,0x7ff6cc345c94,12,TemporalCalendarPrototypeDay
code-creation,Builtin,2,91084,0x7ff6cc345cd4,12,TemporalCalendarPrototypeDayOfWeek
code-creation,Builtin,2,91093,0x7ff6cc345d14,12,TemporalCalendarPrototypeDayOfYear
code-creation,Builtin,2,91102,0x7ff6cc345d54,12,TemporalCalendarPrototypeWeekOfYear
code-creation,Builtin,2,91111,0x7ff6cc345d94,12,TemporalCalendarPrototypeDaysInWeek
code-creation,Builtin,2,91121,0x7ff6cc345dd4,12,TemporalCalendarPrototypeDaysInMonth
code-creation,Builtin,2,91131,0x7ff6cc345e14,12,TemporalCalendarPrototypeDaysInYear
code-creation,Builtin,2,91142,0x7ff6cc345e54,12,TemporalCalendarPrototypeMonthsInYear
code-creation,Builtin,2,91152,0x7ff6cc345e94,12,TemporalCalendarPrototypeInLeapYear
code-creation,Builtin,2,91161,0x7ff6cc345ed4,3460,TemporalCalendarPrototypeFields
code-creation,Builtin,2,91170,0x7ff6cc346c94,12,TemporalCalendarPrototypeMergeFields
code-creation,Builtin,2,91180,0x7ff6cc346cd4,12,TemporalCalendarPrototypeToString
code-creation,Builtin,2,91189,0x7ff6cc346d14,12,TemporalCalendarPrototypeToJSON
code-creation,Builtin,2,91197,0x7ff6cc346d54,12,DatePrototypeToTemporalInstant
code-creation,Builtin,2,91206,0x7ff6cc346d94,1724,StringFixedArrayFromIterable
code-creation,Builtin,2,91215,0x7ff6cc347454,1724,TemporalInstantFixedArrayFromIterable
code-creation,Builtin,2,91224,0x7ff6cc347b14,260,AggregateErrorConstructor
code-creation,Builtin,2,91233,0x7ff6cc347c54,808,ArrayPrototypeAt
code-creation,Builtin,2,91242,0x7ff6cc347f94,552,ArrayPrototypeConcat
code-creation,Builtin,2,91250,0x7ff6cc3481d4,4980,ArrayPrototypeCopyWithin
code-creation,Builtin,2,91259,0x7ff6cc349554,212,ArrayEveryLoopEagerDeoptContinuation
code-creation,Builtin,2,91268,0x7ff6cc349654,568,ArrayEveryLoopLazyDeoptContinuation
code-creation,Builtin,2,91277,0x7ff6cc349894,4028,ArrayEveryLoopContinuation
code-creation,Builtin,2,91286,0x7ff6cc34a854,1452,ArrayEvery
code-creation,Builtin,2,91294,0x7ff6cc34ae14,276,ArrayFilterLoopEagerDeoptContinuation
code-creation,Builtin,2,91303,0x7ff6cc34af54,860,ArrayFilterLoopLazyDeoptContinuation
code-creation,Builtin,2,91315,0x7ff6cc34b2d4,4288,ArrayFilterLoopContinuation
code-creation,Builtin,2,91324,0x7ff6cc34c3d4,4284,ArrayFilter
code-creation,Builtin,2,91332,0x7ff6cc34d494,204,ArrayFindLoopEagerDeoptContinuation
code-creation,Builtin,2,91341,0x7ff6cc34d594,32,ArrayFindLoopLazyDeoptContinuation
code-creation,Builtin,2,91350,0x7ff6cc34d5d4,308,ArrayFindLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,91360,0x7ff6cc34d714,496,ArrayFindLoopContinuation
code-creation,Builtin,2,91369,0x7ff6cc34d914,1428,ArrayPrototypeFind
code-creation,Builtin,2,91377,0x7ff6cc34ded4,204,ArrayFindIndexLoopEagerDeoptContinuation
code-creation,Builtin,2,91386,0x7ff6cc34dfd4,32,ArrayFindIndexLoopLazyDeoptContinuation
code-creation,Builtin,2,91396,0x7ff6cc34e014,308,ArrayFindIndexLoopAfterCallbackLazyDeoptContinuation
code-creation,Builtin,2,91405,0x7ff6cc34e154,492,ArrayFindIndexLoopContinuation
code-creation,Builtin,2,91414,0x7ff6cc34e354,1432,ArrayPrototypeFindIndex
code-creation,Builtin,2,91423,0x7ff6cc34e914,428,ArrayFindLastLoopContinuation
code-creation,Builtin,2,91433,0x7ff6cc34ead4,1624,ArrayPrototypeFindLast
code-creation,Builtin,2,91441,0x7ff6cc34f154,424,ArrayFindLastIndexLoopContinuation
code-creation,Builtin,2,91450,0x7ff6cc34f314,1620,ArrayPrototypeFindLastIndex
code-creation,Builtin,2,91459,0x7ff6cc34f994,212,ArrayForEachLoopEagerDeoptContinuation
code-creation,Builtin,2,91468,0x7ff6cc34fa94,212,ArrayForEachLoopLazyDeoptContinuation
code-creation,Builtin,2,91477,0x7ff6cc34fb94,3892,ArrayForEachLoopContinuation
code-creation,Builtin,2,91486,0x7ff6cc350ad4,1292,ArrayForEach
code-creation,Builtin,2,91495,0x7ff6cc351014,4300,ArrayFrom
code-creation,Builtin,2,91503,0x7ff6cc352114,168,ArrayIsArray
code-creation,Builtin,2,91511,0x7ff6cc3521d4,388,LoadJoinElement_DictionaryElements_0
code-creation,Builtin,2,91521,0x7ff6cc352394,40,LoadJoinElement_FastSmiOrObjectElements_0
code-creation,Builtin,2,91530,0x7ff6cc3523d4,132,LoadJoinElement_FastDoubleElements_0
code-creation,Builtin,2,91539,0x7ff6cc352494,208,ConvertToLocaleString
code-creation,Builtin,2,91547,0x7ff6cc352594,732,JoinStackPush
code-creation,Builtin,2,91556,0x7ff6cc352894,276,JoinStackPop
code-creation,Builtin,2,91564,0x7ff6cc3529d4,9116,ArrayPrototypeJoin
code-creation,Builtin,2,91572,0x7ff6cc354d94,5880,ArrayPrototypeToLocaleString
code-creation,Builtin,2,91581,0x7ff6cc356494,236,ArrayPrototypeToString
code-creation,Builtin,2,91590,0x7ff6cc356594,8948,TypedArrayPrototypeJoin
code-creation,Builtin,2,91598,0x7ff6cc358894,5664,TypedArrayPrototypeToLocaleString
code-creation,Builtin,2,91609,0x7ff6cc359ed4,4256,ArrayPrototypeLastIndexOf
code-creation,Builtin,2,91619,0x7ff6cc35af94,256,ArrayMapPreLoopLazyDeoptContinuation
code-creation,Builtin,2,91629,0x7ff6cc35b0d4,244,ArrayMapLoopEagerDeoptContinuation
code-creation,Builtin,2,91638,0x7ff6cc35b1d4,468,ArrayMapLoopLazyDeoptContinuation
code-creation,Builtin,2,91647,0x7ff6cc35b3d4,3924,ArrayMapLoopContinuation
code-creation,Builtin,2,91656,0x7ff6cc35c354,3704,ArrayMap
code-creation,Builtin,2,91664,0x7ff6cc35d1d4,1412,ArrayOf
code-creation,Builtin,2,91672,0x7ff6cc35d794,412,ArrayReduceRightPreLoopEagerDeoptContinuation
code-creation,Builtin,2,91682,0x7ff6cc35d954,204,ArrayReduceRightLoopEagerDeoptContinuation
code-creation,Builtin,2,91691,0x7ff6cc35da54,204,ArrayReduceRightLoopLazyDeoptContinuation
code-creation,Builtin,2,91700,0x7ff6cc35db54,3944,ArrayReduceRightLoopContinuation
code-creation,Builtin,2,91709,0x7ff6cc35ead4,1880,ArrayReduceRight
code-creation,Builtin,2,91718,0x7ff6cc35f254,180,ArrayReducePreLoopEagerDeoptContinuation
code-creation,Builtin,2,91727,0x7ff6cc35f314,204,ArrayReduceLoopEagerDeoptContinuation
code-creation,Builtin,2,91736,0x7ff6cc35f414,204,ArrayReduceLoopLazyDeoptContinuation
code-creation,Builtin,2,91746,0x7ff6cc35f514,3984,ArrayReduceLoopContinuation
code-creation,Builtin,2,91755,0x7ff6cc3604d4,1516,ArrayReduce
code-creation,Builtin,2,91763,0x7ff6cc360ad4,3484,ArrayPrototypeReverse
code-creation,Builtin,2,91772,0x7ff6cc361894,3744,ArrayPrototypeShift
code-creation,Builtin,2,91780,0x7ff6cc362754,5420,ArrayPrototypeSlice
code-creation,Builtin,2,91789,0x7ff6cc363c94,212,ArraySomeLoopEagerDeoptContinuation
code-creation,Builtin,2,91798,0x7ff6cc363d94,532,ArraySomeLoopLazyDeoptContinuation
code-creation,Builtin,2,91807,0x7ff6cc363fd4,4012,ArraySomeLoopContinuation
code-creation,Builtin,2,91816,0x7ff6cc364f94,1436,ArraySome
code-creation,Builtin,2,91824,0x7ff6cc365554,14240,ArrayPrototypeSplice
code-creation,Builtin,2,91832,0x7ff6cc368d14,1624,GenericArrayToReversed
code-creation,Builtin,2,91841,0x7ff6cc369394,2768,ArrayPrototypeToReversed
code-creation,Builtin,2,91850,0x7ff6cc369e94,5060,ArrayTimSortIntoCopy
code-creation,Builtin,2,91858,0x7ff6cc36b294,2148,ArrayPrototypeToSorted
code-creation,Builtin,2,91867,0x7ff6cc36bb14,8468,ArrayPrototypeToSpliced
code-creation,Builtin,2,91876,0x7ff6cc36dc54,2980,ArrayPrototypeUnshift
code-creation,Builtin,2,91885,0x7ff6cc36e814,1004,GenericArrayWith
code-creation,Builtin,2,91893,0x7ff6cc36ec14,1104,ArrayPrototypeWith
code-creation,Builtin,2,91902,0x7ff6cc36f094,324,ArrayBufferPrototypeGetByteLength
code-creation,Builtin,2,91911,0x7ff6cc36f214,484,ArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,91920,0x7ff6cc36f414,216,ArrayBufferPrototypeGetResizable
code-creation,Builtin,2,91929,0x7ff6cc36f514,216,ArrayBufferPrototypeGetDetached
code-creation,Builtin,2,91938,0x7ff6cc36f614,324,SharedArrayBufferPrototypeGetMaxByteLength
code-creation,Builtin,2,91947,0x7ff6cc36f794,216,SharedArrayBufferPrototypeGetGrowable
code-creation,Builtin,2,91957,0x7ff6cc36f894,100,ArrayBufferIsView
code-creation,Builtin,2,91965,0x7ff6cc36f914,388,ToInteger
code-creation,Builtin,2,91973,0x7ff6cc36fad4,3096,FastCreateDataProperty
code-creation,Builtin,2,91983,0x7ff6cc370714,640,CheckSameObject
code-creation,Builtin,2,91991,0x7ff6cc3709d4,1048,BooleanConstructor
code-creation,Builtin,2,92000,0x7ff6cc370e14,164,BooleanPrototypeToString
code-creation,Builtin,2,92008,0x7ff6cc370ed4,160,BooleanPrototypeValueOf
code-creation,Builtin,2,92017,0x7ff6cc370f94,1072,BigIntAddNoThrow
code-creation,Builtin,2,92026,0x7ff6cc3713d4,1148,BigIntAdd
code-creation,Builtin,2,92034,0x7ff6cc371854,1072,BigIntSubtractNoThrow
code-creation,Builtin,2,92043,0x7ff6cc371c94,1144,BigIntSubtract
code-creation,Builtin,2,92051,0x7ff6cc372114,324,BigIntMultiplyNoThrow
code-creation,Builtin,2,92059,0x7ff6cc372294,444,BigIntMultiply
code-creation,Builtin,2,92068,0x7ff6cc372454,552,BigIntDivideNoThrow
code-creation,Builtin,2,92076,0x7ff6cc372694,656,BigIntDivide
code-creation,Builtin,2,92085,0x7ff6cc372954,464,BigIntModulusNoThrow
code-creation,Builtin,2,92095,0x7ff6cc372b54,572,BigIntModulus
code-creation,Builtin,2,92104,0x7ff6cc372d94,960,BigIntBitwiseAndNoThrow
code-creation,Builtin,2,92113,0x7ff6cc373194,1116,BigIntBitwiseAnd
code-creation,Builtin,2,92121,0x7ff6cc373614,940,BigIntBitwiseOrNoThrow
code-creation,Builtin,2,92130,0x7ff6cc3739d4,1064,BigIntBitwiseOr
code-creation,Builtin,2,92138,0x7ff6cc373e14,976,BigIntBitwiseXorNoThrow
code-creation,Builtin,2,92147,0x7ff6cc374214,1132,BigIntBitwiseXor
code-creation,Builtin,2,92155,0x7ff6cc374694,1280,BigIntShiftLeftNoThrow
code-creation,Builtin,2,92164,0x7ff6cc374bd4,1388,BigIntShiftLeft
code-creation,Builtin,2,92172,0x7ff6cc375154,1280,BigIntShiftRightNoThrow
code-creation,Builtin,2,92181,0x7ff6cc375694,1388,BigIntShiftRight
code-creation,Builtin,2,92189,0x7ff6cc375c14,108,BigIntEqual
code-creation,Builtin,2,92201,0x7ff6cc375c94,168,BigIntLessThan
code-creation,Builtin,2,92209,0x7ff6cc375d54,168,BigIntGreaterThan
code-creation,Builtin,2,92220,0x7ff6cc375e14,168,BigIntLessThanOrEqual
code-creation,Builtin,2,92229,0x7ff6cc375ed4,168,BigIntGreaterThanOrEqual
code-creation,Builtin,2,92237,0x7ff6cc375f94,264,BigIntUnaryMinus
code-creation,Builtin,2,92246,0x7ff6cc3760d4,1992,ToString
code-creation,Builtin,2,92254,0x7ff6cc3768d4,160,StringPrototypeToString
code-creation,Builtin,2,92262,0x7ff6cc376994,160,StringPrototypeValueOf
code-creation,Builtin,2,92271,0x7ff6cc376a54,2232,StringToList
code-creation,Builtin,2,92279,0x7ff6cc377314,788,StringPrototypeCharAt
code-creation,Builtin,2,92288,0x7ff6cc377654,680,StringPrototypeCharCodeAt
code-creation,Builtin,2,92297,0x7ff6cc377914,1188,StringPrototypeCodePointAt
code-creation,Builtin,2,92306,0x7ff6cc377dd4,416,StringPrototypeConcat
code-creation,Builtin,2,92314,0x7ff6cc377f94,1048,StringConstructor
code-creation,Builtin,2,92323,0x7ff6cc3783d4,2060,StringAddConvertLeft
code-creation,Builtin,2,92332,0x7ff6cc378c14,2084,StringAddConvertRight
code-creation,Builtin,2,92340,0x7ff6cc379454,572,StringCharAt
code-creation,Builtin,2,92348,0x7ff6cc379694,16,FastNewClosureBaseline
code-creation,Builtin,2,92357,0x7ff6cc3796d4,228,FastNewFunctionContextEval
code-creation,Builtin,2,92366,0x7ff6cc3797d4,228,FastNewFunctionContextFunction
code-creation,Builtin,2,92387,0x7ff6cc3798d4,240,CreateRegExpLiteral
code-creation,Builtin,2,92401,0x7ff6cc3799d4,1188,CreateShallowArrayLiteral
code-creation,Builtin,2,92413,0x7ff6cc379e94,480,CreateEmptyArrayLiteral
code-creation,Builtin,2,92422,0x7ff6cc37a094,2020,CreateShallowObjectLiteral
code-creation,Builtin,2,92431,0x7ff6cc37a894,392,ObjectConstructor
code-creation,Builtin,2,92440,0x7ff6cc37aa54,188,CreateEmptyLiteralObject
code-creation,Builtin,2,92449,0x7ff6cc37ab14,540,NumberConstructor
code-creation,Builtin,2,92457,0x7ff6cc37ad54,60,GenericLazyDeoptContinuation
code-creation,Builtin,2,92466,0x7ff6cc37ad94,60,StringToNumber
code-creation,Builtin,2,92474,0x7ff6cc37add4,188,NonNumberToNumber
code-creation,Builtin,2,92483,0x7ff6cc37ae94,244,NonNumberToNumeric
code-creation,Builtin,2,92491,0x7ff6cc37af94,36,ToNumeric
code-creation,Builtin,2,92500,0x7ff6cc37afd4,1272,NumberToString
code-creation,Builtin,2,92508,0x7ff6cc37b4d4,108,ToBoolean
code-creation,Builtin,2,92516,0x7ff6cc37b554,104,ToBooleanForBaselineJump
code-creation,Builtin,2,92525,0x7ff6cc37b5d4,600,ToLength
code-creation,Builtin,2,92533,0x7ff6cc37b854,1312,ToName
code-creation,Builtin,2,92542,0x7ff6cc37bd94,864,ToObject
code-creation,Builtin,2,92550,0x7ff6cc37c114,236,NonPrimitiveToPrimitive_Default
code-creation,Builtin,2,92559,0x7ff6cc37c214,236,NonPrimitiveToPrimitive_Number
code-creation,Builtin,2,92568,0x7ff6cc37c314,584,NonPrimitiveToPrimitive_String
code-creation,Builtin,2,92577,0x7ff6cc37c594,20,OrdinaryToPrimitive_Number
code-creation,Builtin,2,92586,0x7ff6cc37c5d4,380,OrdinaryToPrimitive_Number_Inline
code-creation,Builtin,2,92595,0x7ff6cc37c754,380,OrdinaryToPrimitive_String
code-creation,Builtin,2,92604,0x7ff6cc37c8d4,224,FastConsoleAssert
code-creation,Builtin,2,92613,0x7ff6cc37c9d4,184,DataViewPrototypeGetBuffer
code-creation,Builtin,2,92621,0x7ff6cc37ca94,764,DataViewPrototypeGetByteLength
code-creation,Builtin,2,92634,0x7ff6cc37cd94,440,DataViewPrototypeGetByteOffset
code-creation,Builtin,2,92645,0x7ff6cc37cf54,848,DataViewPrototypeGetUint8
code-creation,Builtin,2,92654,0x7ff6cc37d2d4,848,DataViewPrototypeGetInt8
code-creation,Builtin,2,92663,0x7ff6cc37d654,932,DataViewPrototypeGetUint16
code-creation,Builtin,2,92672,0x7ff6cc37da14,928,DataViewPrototypeGetInt16
code-creation,Builtin,2,92685,0x7ff6cc37ddd4,1076,DataViewPrototypeGetUint32
code-creation,Builtin,2,92694,0x7ff6cc37e214,964,DataViewPrototypeGetInt32
code-creation,Builtin,2,92703,0x7ff6cc37e614,1108,DataViewPrototypeGetFloat32
code-creation,Builtin,2,92711,0x7ff6cc37ea94,1172,DataViewPrototypeGetFloat64
code-creation,Builtin,2,92720,0x7ff6cc37ef54,1228,DataViewPrototypeGetBigUint64
code-creation,Builtin,2,92729,0x7ff6cc37f454,1252,DataViewPrototypeGetBigInt64
code-creation,Builtin,2,92738,0x7ff6cc37f954,1268,DataViewPrototypeSetUint8
code-creation,Builtin,2,92747,0x7ff6cc37fe54,1268,DataViewPrototypeSetInt8
code-creation,Builtin,2,92756,0x7ff6cc380354,1356,DataViewPrototypeSetUint16
code-creation,Builtin,2,92764,0x7ff6cc3808d4,1356,DataViewPrototypeSetInt16
code-creation,Builtin,2,92773,0x7ff6cc380e54,1392,DataViewPrototypeSetUint32
code-creation,Builtin,2,92782,0x7ff6cc3813d4,1392,DataViewPrototypeSetInt32
code-creation,Builtin,2,92791,0x7ff6cc381954,1356,DataViewPrototypeSetFloat32
code-creation,Builtin,2,92799,0x7ff6cc381ed4,1420,DataViewPrototypeSetFloat64
code-creation,Builtin,2,92808,0x7ff6cc382494,1268,DataViewPrototypeSetBigUint64
code-creation,Builtin,2,92817,0x7ff6cc382994,1268,DataViewPrototypeSetBigInt64
code-creation,Builtin,2,92826,0x7ff6cc382e94,928,FinalizationRegistryConstructor
code-creation,Builtin,2,92835,0x7ff6cc383254,1236,FinalizationRegistryRegister
code-creation,Builtin,2,92844,0x7ff6cc383754,672,FinalizationRegistryPrototypeCleanupSome
code-creation,Builtin,2,92853,0x7ff6cc383a14,340,FunctionPrototypeHasInstance
code-creation,Builtin,2,92862,0x7ff6cc383b94,940,FastFunctionPrototypeBind
code-creation,Builtin,2,92871,0x7ff6cc383f54,92,IncBlockCounter
code-creation,Builtin,2,92880,0x7ff6cc383fd4,236,GetTemplateObject
code-creation,Builtin,2,92888,0x7ff6cc3840d4,92,ForInNext
code-creation,Builtin,2,92897,0x7ff6cc384154,136,GetImportMetaObjectBaseline
code-creation,Builtin,2,92905,0x7ff6cc384214,112,GetIteratorWithFeedback
code-creation,Builtin,2,92914,0x7ff6cc384294,100,GetIteratorBaseline
code-creation,Builtin,2,92923,0x7ff6cc384314,296,CreateAsyncFromSyncIteratorBaseline
code-creation,Builtin,2,92932,0x7ff6cc384454,1072,CallIteratorWithFeedback
code-creation,Builtin,2,92940,0x7ff6cc384894,916,IteratorConstructor
code-creation,Builtin,2,92949,0x7ff6cc384c54,1012,IteratorFrom
code-creation,Builtin,2,92957,0x7ff6cc385054,160,WrapForValidIteratorPrototypeNext
code-creation,Builtin,2,92966,0x7ff6cc385114,408,WrapForValidIteratorPrototypeReturn
code-creation,Builtin,2,92975,0x7ff6cc3852d4,256,IteratorHelperPrototypeNext
code-creation,Builtin,2,92986,0x7ff6cc385414,400,IteratorHelperPrototypeReturn
code-creation,Builtin,2,92999,0x7ff6cc3855d4,440,IteratorPrototypeMap
code-creation,Builtin,2,93064,0x7ff6cc385794,1204,IteratorMapHelperNext
code-creation,Builtin,2,93081,0x7ff6cc385c54,440,IteratorPrototypeFilter
code-creation,Builtin,2,93094,0x7ff6cc385e14,1352,IteratorFilterHelperNext
code-creation,Builtin,2,93108,0x7ff6cc386394,568,IteratorPrototypeTake
code-creation,Builtin,2,93121,0x7ff6cc3865d4,1356,IteratorTakeHelperNext
code-creation,Builtin,2,93135,0x7ff6cc386b54,568,IteratorPrototypeDrop
code-creation,Builtin,2,93148,0x7ff6cc386d94,1540,IteratorDropHelperNext
code-creation,Builtin,2,93161,0x7ff6cc3873d4,272,MathAbs
code-creation,Builtin,2,93174,0x7ff6cc387514,420,MathCeil
code-creation,Builtin,2,93186,0x7ff6cc3876d4,424,MathFloor
code-creation,Builtin,2,93200,0x7ff6cc387894,472,MathRound
code-creation,Builtin,2,93212,0x7ff6cc387a94,420,MathTrunc
code-creation,Builtin,2,93225,0x7ff6cc387c54,364,MathPow
code-creation,Builtin,2,93237,0x7ff6cc387dd4,408,MathMax
code-creation,Builtin,2,93253,0x7ff6cc387f94,412,MathMin
code-creation,Builtin,2,93267,0x7ff6cc388154,312,MathAcos
code-creation,Builtin,2,93281,0x7ff6cc388294,312,MathAcosh
code-creation,Builtin,2,93293,0x7ff6cc3883d4,312,MathAsin
code-creation,Builtin,2,93305,0x7ff6cc388514,312,MathAsinh
code-creation,Builtin,2,93315,0x7ff6cc388654,312,MathAtan
code-creation,Builtin,2,93324,0x7ff6cc388794,408,MathAtan2
code-creation,Builtin,2,93334,0x7ff6cc388954,312,MathAtanh
code-creation,Builtin,2,93343,0x7ff6cc388a94,312,MathCbrt
code-creation,Builtin,2,93353,0x7ff6cc388bd4,168,MathClz32
code-creation,Builtin,2,93362,0x7ff6cc388c94,312,MathCos
code-creation,Builtin,2,93372,0x7ff6cc388dd4,312,MathCosh
code-creation,Builtin,2,93381,0x7ff6cc388f14,312,MathExp
code-creation,Builtin,2,93390,0x7ff6cc389054,312,MathExpm1
code-creation,Builtin,2,93399,0x7ff6cc389194,264,MathFround
code-creation,Builtin,2,93409,0x7ff6cc3892d4,304,MathImul
code-creation,Builtin,2,93418,0x7ff6cc389414,312,MathLog
code-creation,Builtin,2,93427,0x7ff6cc389554,312,MathLog1p
code-creation,Builtin,2,93437,0x7ff6cc389694,312,MathLog10
code-creation,Builtin,2,93446,0x7ff6cc3897d4,312,MathLog2
code-creation,Builtin,2,93455,0x7ff6cc389914,312,MathSin
code-creation,Builtin,2,93464,0x7ff6cc389a54,176,MathSign
code-creation,Builtin,2,93474,0x7ff6cc389b14,312,MathSinh
code-creation,Builtin,2,93483,0x7ff6cc389c54,260,MathSqrt
code-creation,Builtin,2,93492,0x7ff6cc389d94,312,MathTan
code-creation,Builtin,2,93501,0x7ff6cc389ed4,312,MathTanh
code-creation,Builtin,2,93511,0x7ff6cc38a014,1016,MathHypot
code-creation,Builtin,2,93520,0x7ff6cc38a414,324,MathRandom
code-creation,Builtin,2,93529,0x7ff6cc38a594,2536,NumberPrototypeToString
code-creation,Builtin,2,93539,0x7ff6cc38af94,132,NumberIsFinite
code-creation,Builtin,2,93549,0x7ff6cc38b054,332,NumberIsInteger
code-creation,Builtin,2,93558,0x7ff6cc38b1d4,128,NumberIsNaN
code-creation,Builtin,2,93567,0x7ff6cc38b294,364,NumberIsSafeInteger
code-creation,Builtin,2,93577,0x7ff6cc38b414,160,NumberPrototypeValueOf
code-creation,Builtin,2,93587,0x7ff6cc38b4d4,200,NumberParseFloat
code-creation,Builtin,2,93596,0x7ff6cc38b5d4,248,ParseInt
code-creation,Builtin,2,93605,0x7ff6cc38b6d4,84,NumberParseInt
code-creation,Builtin,2,93615,0x7ff6cc38b754,816,Add
code-creation,Builtin,2,93624,0x7ff6cc38ba94,428,Subtract
code-creation,Builtin,2,93634,0x7ff6cc38bc54,556,Multiply
code-creation,Builtin,2,93643,0x7ff6cc38be94,500,Divide
code-creation,Builtin,2,93652,0x7ff6cc38c094,548,Modulus
code-creation,Builtin,2,93662,0x7ff6cc38c2d4,520,Exponentiate
code-creation,Builtin,2,93671,0x7ff6cc38c514,336,Negate
code-creation,Builtin,2,93681,0x7ff6cc38c694,160,BitwiseNot
code-creation,Builtin,2,93690,0x7ff6cc38c754,112,Decrement
code-creation,Builtin,2,93699,0x7ff6cc38c7d4,112,Increment
code-creation,Builtin,2,93709,0x7ff6cc38c854,516,ShiftLeft
code-creation,Builtin,2,93718,0x7ff6cc38ca94,516,ShiftRight
code-creation,Builtin,2,93728,0x7ff6cc38ccd4,588,ShiftRightLogical
code-creation,Builtin,2,93737,0x7ff6cc38cf54,304,BitwiseAnd
code-creation,Builtin,2,93747,0x7ff6cc38d094,304,BitwiseOr
code-creation,Builtin,2,93756,0x7ff6cc38d1d4,304,BitwiseXor
code-creation,Builtin,2,93765,0x7ff6cc38d314,948,LessThan
code-creation,Builtin,2,93775,0x7ff6cc38d6d4,948,LessThanOrEqual
code-creation,Builtin,2,93784,0x7ff6cc38da94,948,GreaterThan
code-creation,Builtin,2,93794,0x7ff6cc38de54,948,GreaterThanOrEqual
code-creation,Builtin,2,93803,0x7ff6cc38e214,1060,Equal
code-creation,Builtin,2,93813,0x7ff6cc38e654,512,StrictEqual
code-creation,Builtin,2,93822,0x7ff6cc38e894,3236,ObjectFromEntries
code-creation,Builtin,2,93832,0x7ff6cc38f554,820,CreateObjectWithoutProperties
code-creation,Builtin,2,93842,0x7ff6cc38f894,144,ObjectIsExtensible
code-creation,Builtin,2,93852,0x7ff6cc38f954,152,ObjectPreventExtensions
code-creation,Builtin,2,93862,0x7ff6cc38fa14,148,ObjectGetPrototypeOf
code-creation,Builtin,2,93871,0x7ff6cc38fad4,304,ObjectSetPrototypeOf
code-creation,Builtin,2,93881,0x7ff6cc38fc14,80,ObjectPrototypeToString
code-creation,Builtin,2,93891,0x7ff6cc38fc94,100,ObjectPrototypeValueOf
code-creation,Builtin,2,93904,0x7ff6cc38fd14,176,ObjectPrototypeToLocaleString
code-creation,Builtin,2,93915,0x7ff6cc38fdd4,884,FulfillPromise
code-creation,Builtin,2,93925,0x7ff6cc390154,1024,RejectPromise
code-creation,Builtin,2,93934,0x7ff6cc390594,2500,NewPromiseCapability
code-creation,Builtin,2,93944,0x7ff6cc390f94,192,PromiseCapabilityDefaultReject
code-creation,Builtin,2,93954,0x7ff6cc391094,172,PromiseCapabilityDefaultResolve
code-creation,Builtin,2,93964,0x7ff6cc391154,1332,PerformPromiseThen
code-creation,Builtin,2,93974,0x7ff6cc391694,668,PromiseReject
code-creation,Builtin,2,93985,0x7ff6cc391954,292,PromiseGetCapabilitiesExecutor
code-creation,Builtin,2,93995,0x7ff6cc391a94,108,PromiseConstructorLazyDeoptContinuation
code-creation,Builtin,2,94006,0x7ff6cc391b14,4524,PromiseAll
code-creation,Builtin,2,94015,0x7ff6cc392cd4,4860,PromiseAllSettled
code-creation,Builtin,2,94025,0x7ff6cc393fd4,1096,PromiseAllResolveElementClosure
code-creation,Builtin,2,94035,0x7ff6cc394454,1444,PromiseAllSettledResolveElementClosure
code-creation,Builtin,2,94045,0x7ff6cc394a14,1452,PromiseAllSettledRejectElementClosure
code-creation,Builtin,2,94056,0x7ff6cc394fd4,1172,PromiseAnyRejectElementClosure
code-creation,Builtin,2,94066,0x7ff6cc395494,2724,PromiseAny
code-creation,Builtin,2,94075,0x7ff6cc395f54,3040,PromiseConstructor
code-creation,Builtin,2,94085,0x7ff6cc396b54,292,PromisePrototypeCatch
code-creation,Builtin,2,94094,0x7ff6cc396c94,92,PromiseValueThunkFinally
code-creation,Builtin,2,94104,0x7ff6cc396d14,84,PromiseThrowerFinally
code-creation,Builtin,2,94114,0x7ff6cc396d94,988,PromiseCatchFinally
code-creation,Builtin,2,94124,0x7ff6cc397194,988,PromiseThenFinally
code-creation,Builtin,2,94133,0x7ff6cc397594,1676,PromisePrototypeFinally
code-creation,Builtin,2,94143,0x7ff6cc397c54,1524,PromiseRace
code-creation,Builtin,2,94152,0x7ff6cc398254,348,PromiseFulfillReactionJob
code-creation,Builtin,2,94162,0x7ff6cc3983d4,468,PromiseRejectReactionJob
code-creation,Builtin,2,94172,0x7ff6cc3985d4,156,PromiseResolveTrampoline
code-creation,Builtin,2,94182,0x7ff6cc398694,704,PromiseResolve
code-creation,Builtin,2,94191,0x7ff6cc398994,716,ResolvePromise
code-creation,Builtin,2,94201,0x7ff6cc398c94,2288,PromisePrototypeThen
code-creation,Builtin,2,94211,0x7ff6cc399594,1260,PromiseResolveThenableJob
code-creation,Builtin,2,94221,0x7ff6cc399a94,440,ProxyConstructor
code-creation,Builtin,2,94230,0x7ff6cc399c54,2484,ProxyDeleteProperty
code-creation,Builtin,2,94240,0x7ff6cc39a614,2800,ProxyGetProperty
code-creation,Builtin,2,94249,0x7ff6cc39b114,1088,ProxyGetPrototypeOf
code-creation,Builtin,2,94259,0x7ff6cc39b594,2432,ProxyHasProperty
code-creation,Builtin,2,94268,0x7ff6cc39bf54,776,ProxyIsExtensible
code-creation,Builtin,2,94278,0x7ff6cc39c294,828,ProxyPreventExtensions
code-creation,Builtin,2,94288,0x7ff6cc39c5d4,1136,ProxyRevocable
code-creation,Builtin,2,94297,0x7ff6cc39ca54,136,ProxyRevoke
code-creation,Builtin,2,94307,0x7ff6cc39cb14,2996,ProxySetProperty
code-creation,Builtin,2,94316,0x7ff6cc39d6d4,1344,ProxySetPrototypeOf
code-creation,Builtin,2,94326,0x7ff6cc39dc54,208,ReflectIsExtensible
code-creation,Builtin,2,94335,0x7ff6cc39dd54,216,ReflectPreventExtensions
code-creation,Builtin,2,94345,0x7ff6cc39de54,188,ReflectGetPrototypeOf
code-creation,Builtin,2,94355,0x7ff6cc39df14,332,ReflectSetPrototypeOf
code-creation,Builtin,2,94365,0x7ff6cc39e094,288,ReflectGet
code-creation,Builtin,2,94375,0x7ff6cc39e1d4,156,ReflectDeleteProperty
code-creation,Builtin,2,94384,0x7ff6cc39e294,144,ReflectHas
code-creation,Builtin,2,94394,0x7ff6cc39e354,4680,ReflectGetOwnPropertyDescriptor
code-creation,Builtin,2,94404,0x7ff6cc39f5d4,5156,RegExpPrototypeExecSlow
code-creation,Builtin,2,94414,0x7ff6cc3a0a14,5212,RegExpPrototypeExec
code-creation,Builtin,2,94424,0x7ff6cc3a1e94,2596,RegExpPrototypeMatchAll
code-creation,Builtin,2,94433,0x7ff6cc3a28d4,9276,RegExpStringIteratorPrototypeNext
code-creation,Builtin,2,94444,0x7ff6cc3a4d14,8732,RegExpMatchFast
code-creation,Builtin,2,94453,0x7ff6cc3a6f54,3668,RegExpPrototypeMatch
code-creation,Builtin,2,94463,0x7ff6cc3a7dd4,5916,RegExpReplace
code-creation,Builtin,2,94475,0x7ff6cc3a9514,508,RegExpPrototypeReplace
code-creation,Builtin,2,94486,0x7ff6cc3a9714,1364,RegExpSearchFast
code-creation,Builtin,2,94496,0x7ff6cc3a9c94,1660,RegExpPrototypeSearch
code-creation,Builtin,2,94505,0x7ff6cc3aa314,200,RegExpPrototypeSourceGetter
code-creation,Builtin,2,94515,0x7ff6cc3aa414,5884,RegExpSplit
code-creation,Builtin,2,94525,0x7ff6cc3abb14,468,RegExpPrototypeSplit
code-creation,Builtin,2,94535,0x7ff6cc3abd14,2252,RegExpPrototypeTest
code-creation,Builtin,2,94545,0x7ff6cc3ac614,1288,RegExpPrototypeTestFast
code-creation,Builtin,2,94555,0x7ff6cc3acb54,236,RegExpPrototypeGlobalGetter
code-creation,Builtin,2,94565,0x7ff6cc3acc54,252,RegExpPrototypeIgnoreCaseGetter
code-creation,Builtin,2,94575,0x7ff6cc3acd54,252,RegExpPrototypeMultilineGetter
code-creation,Builtin,2,94585,0x7ff6cc3ace54,252,RegExpPrototypeHasIndicesGetter
code-creation,Builtin,2,94596,0x7ff6cc3acf54,252,RegExpPrototypeLinearGetter
code-creation,Builtin,2,94606,0x7ff6cc3ad054,252,RegExpPrototypeDotAllGetter
code-creation,Builtin,2,94616,0x7ff6cc3ad154,284,RegExpPrototypeStickyGetter
code-creation,Builtin,2,94626,0x7ff6cc3ad294,284,RegExpPrototypeUnicodeGetter
code-creation,Builtin,2,94636,0x7ff6cc3ad3d4,252,RegExpPrototypeUnicodeSetsGetter
code-creation,Builtin,2,94646,0x7ff6cc3ad4d4,2556,RegExpPrototypeFlagsGetter
code-creation,Builtin,2,94656,0x7ff6cc3aded4,1236,StringPrototypeAt
code-creation,Builtin,2,94666,0x7ff6cc3ae3d4,3020,StringPrototypeEndsWith
code-creation,Builtin,2,94675,0x7ff6cc3aefd4,496,CreateHTML
code-creation,Builtin,2,94685,0x7ff6cc3af1d4,140,StringPrototypeAnchor
code-creation,Builtin,2,94694,0x7ff6cc3af294,120,StringPrototypeBig
code-creation,Builtin,2,94710,0x7ff6cc3af314,120,StringPrototypeBlink
code-creation,Builtin,2,94720,0x7ff6cc3af394,120,StringPrototypeBold
code-creation,Builtin,2,94730,0x7ff6cc3af414,148,StringPrototypeFontcolor
code-creation,Builtin,2,94740,0x7ff6cc3af4d4,148,StringPrototypeFontsize
code-creation,Builtin,2,94750,0x7ff6cc3af594,120,StringPrototypeFixed
code-creation,Builtin,2,94760,0x7ff6cc3af614,120,StringPrototypeItalics
code-creation,Builtin,2,94770,0x7ff6cc3af694,148,StringPrototypeLink
code-creation,Builtin,2,94780,0x7ff6cc3af754,120,StringPrototypeSmall
code-creation,Builtin,2,94790,0x7ff6cc3af7d4,120,StringPrototypeStrike
code-creation,Builtin,2,94800,0x7ff6cc3af854,120,StringPrototypeSub
code-creation,Builtin,2,94810,0x7ff6cc3af8d4,120,StringPrototypeSup
code-creation,Builtin,2,94819,0x7ff6cc3af954,1024,StringPrototypeIncludes
code-creation,Builtin,2,94829,0x7ff6cc3afd94,648,StringPrototypeIndexOf
code-creation,Builtin,2,94839,0x7ff6cc3b0054,632,StringPrototypeIsWellFormed
code-creation,Builtin,2,94850,0x7ff6cc3b02d4,348,StringPrototypeIterator
code-creation,Builtin,2,94859,0x7ff6cc3b0454,1692,StringIteratorPrototypeNext
code-creation,Builtin,2,94870,0x7ff6cc3b0b14,1372,StringPrototypeMatch
code-creation,Builtin,2,94880,0x7ff6cc3b1094,1372,StringPrototypeSearch
code-creation,Builtin,2,94889,0x7ff6cc3b1614,768,StringPrototypePadStart
code-creation,Builtin,2,94899,0x7ff6cc3b1954,772,StringPrototypePadEnd
code-creation,Builtin,2,94909,0x7ff6cc3b1c94,120,StringRepeat
code-creation,Builtin,2,94919,0x7ff6cc3b1d14,408,StringPrototypeRepeat
code-creation,Builtin,2,94929,0x7ff6cc3b1ed4,10736,StringPrototypeReplaceAll
code-creation,Builtin,2,94939,0x7ff6cc3b48d4,3212,StringPrototypeSlice
code-creation,Builtin,2,94948,0x7ff6cc3b5594,3020,StringPrototypeStartsWith
code-creation,Builtin,2,94958,0x7ff6cc3b6194,3140,StringPrototypeSubstr
code-creation,Builtin,2,94968,0x7ff6cc3b6e14,3064,StringPrototypeSubstring
code-creation,Builtin,2,94978,0x7ff6cc3b7a14,928,StringPrototypeToWellFormed
code-creation,Builtin,2,94989,0x7ff6cc3b7dd4,6452,StringPrototypeTrim
code-creation,Builtin,2,94999,0x7ff6cc3b9714,5940,StringPrototypeTrimStart
code-creation,Builtin,2,95009,0x7ff6cc3bae54,5512,StringPrototypeTrimEnd
code-creation,Builtin,2,95019,0x7ff6cc3bc414,164,SymbolPrototypeDescriptionGetter
code-creation,Builtin,2,95029,0x7ff6cc3bc4d4,160,SymbolPrototypeToPrimitive
code-creation,Builtin,2,95040,0x7ff6cc3bc594,180,SymbolPrototypeToString
code-creation,Builtin,2,95052,0x7ff6cc3bc654,160,SymbolPrototypeValueOf
code-creation,Builtin,2,95062,0x7ff6cc3bc714,1120,TypedArrayPrototypeAt
code-creation,Builtin,2,95071,0x7ff6cc3bcb94,10544,CreateTypedArray
code-creation,Builtin,2,95081,0x7ff6cc3bf4d4,1740,TypedArrayPrototypeEvery
code-creation,Builtin,2,95091,0x7ff6cc3bfbd4,412,TypedArrayPrototypeEntries
code-creation,Builtin,2,95101,0x7ff6cc3bfd94,4448,TypedArrayPrototypeFilter
code-creation,Builtin,2,95111,0x7ff6cc3c0f14,1740,TypedArrayPrototypeFind
code-creation,Builtin,2,95121,0x7ff6cc3c1614,1744,TypedArrayPrototypeFindIndex
code-creation,Builtin,2,95131,0x7ff6cc3c1d14,1744,TypedArrayPrototypeFindLast
code-creation,Builtin,2,95142,0x7ff6cc3c2414,1752,TypedArrayPrototypeFindLastIndex
code-creation,Builtin,2,95152,0x7ff6cc3c2b14,1604,TypedArrayPrototypeForEach
code-creation,Builtin,2,95162,0x7ff6cc3c3194,3052,TypedArrayFrom
code-creation,Builtin,2,95172,0x7ff6cc3c3d94,404,TypedArrayPrototypeKeys
code-creation,Builtin,2,95183,0x7ff6cc3c3f54,1392,TypedArrayOf
code-creation,Builtin,2,95192,0x7ff6cc3c44d4,1700,TypedArrayPrototypeReduce
code-creation,Builtin,2,95202,0x7ff6cc3c4b94,1688,TypedArrayPrototypeReduceRight
code-creation,Builtin,2,95212,0x7ff6cc3c5254,3320,TypedArrayPrototypeSet
code-creation,Builtin,2,95223,0x7ff6cc3c5f54,4068,TypedArrayPrototypeSlice
code-creation,Builtin,2,95233,0x7ff6cc3c6f54,1740,TypedArrayPrototypeSome
code-creation,Builtin,2,95243,0x7ff6cc3c7654,896,TypedArrayMergeSort
code-creation,Builtin,2,95253,0x7ff6cc3c7a14,2260,TypedArrayPrototypeSort
code-creation,Builtin,2,95263,0x7ff6cc3c8314,3084,TypedArrayPrototypeSubArray
code-creation,Builtin,2,95273,0x7ff6cc3c8f54,1736,TypedArrayPrototypeToReversed
code-creation,Builtin,2,95283,0x7ff6cc3c9654,3252,TypedArrayPrototypeToSorted
code-creation,Builtin,2,95293,0x7ff6cc3ca314,412,TypedArrayPrototypeValues
code-creation,Builtin,2,95303,0x7ff6cc3ca4d4,3136,TypedArrayPrototypeWith
code-creation,Builtin,2,95313,0x7ff6cc3cb154,1096,WeakRefConstructor
code-creation,Builtin,2,95323,0x7ff6cc3cb5d4,188,WeakRefDeref
code-creation,Builtin,2,95332,0x7ff6cc3cb694,644,NewSloppyArgumentsElements
code-creation,Builtin,2,95342,0x7ff6cc3cb954,296,NewStrictArgumentsElements
code-creation,Builtin,2,95352,0x7ff6cc3cba94,320,NewRestArgumentsElements
code-creation,Builtin,2,95362,0x7ff6cc3cbc14,1400,FastNewSloppyArguments
code-creation,Builtin,2,95372,0x7ff6cc3cc194,508,FastNewStrictArguments
code-creation,Builtin,2,95382,0x7ff6cc3cc394,552,FastNewRestArguments
code-creation,Builtin,2,95392,0x7ff6cc3cc5d4,664,StringSlowFlatten
code-creation,Builtin,2,95402,0x7ff6cc3cc894,2036,StringIndexOf
code-creation,Builtin,2,95412,0x7ff6cc3cd094,2028,TestTurbofanType
code-creation,Builtin,2,95421,0x7ff6cc3cd894,192,CheckTurbofanType
code-creation,Builtin,2,95431,0x7ff6cc3cd994,520,CheckTurboshaftWord32Type
code-creation,Builtin,2,95441,0x7ff6cc3cdbd4,952,CheckTurboshaftWord64Type
code-creation,Builtin,2,95451,0x7ff6cc3cdf94,652,CheckTurboshaftFloat32Type
code-creation,Builtin,2,95461,0x7ff6cc3ce254,620,CheckTurboshaftFloat64Type
code-creation,Builtin,2,95471,0x7ff6cc3ce4d4,4,GenericBuiltinTest_JSAny_0
code-creation,Builtin,2,95481,0x7ff6cc3ce514,20,TestHelperPlus1
code-creation,Builtin,2,95491,0x7ff6cc3ce554,20,TestHelperPlus2
code-creation,Builtin,2,95500,0x7ff6cc3ce594,92,NewSmiBox
code-creation,Builtin,2,95509,0x7ff6cc3ce614,24,ReturnTwoValues
code-creation,Builtin,2,95519,0x7ff6cc3ce654,28,Load_FastSmiElements_0
code-creation,Builtin,2,95529,0x7ff6cc3ce694,28,Load_FastObjectElements_0
code-creation,Builtin,2,95539,0x7ff6cc3ce6d4,140,Load_FastDoubleElements_0
code-creation,Builtin,2,95549,0x7ff6cc3ce794,28,Store_FastSmiElements_0
code-creation,Builtin,2,95559,0x7ff6cc3ce7d4,92,Store_FastObjectElements_0
code-creation,Builtin,2,95569,0x7ff6cc3ce854,44,Store_FastDoubleElements_0
code-creation,Builtin,2,95578,0x7ff6cc3ce894,36,Delete_FastSmiElements_0
code-creation,Builtin,2,95588,0x7ff6cc3ce8d4,36,Delete_FastObjectElements_0
code-creation,Builtin,2,95600,0x7ff6cc3ce914,40,Delete_FastDoubleElements_0
code-creation,Builtin,2,95611,0x7ff6cc3ce954,200,SortCompareDefault
code-creation,Builtin,2,95623,0x7ff6cc3cea54,96,SortCompareUserFn
code-creation,Builtin,2,95633,0x7ff6cc3cead4,12,CanUseSameAccessor_GenericElementsAccessor_0
code-creation,Builtin,2,95644,0x7ff6cc3ceb14,300,Copy
code-creation,Builtin,2,95653,0x7ff6cc3cec54,5732,MergeAt
code-creation,Builtin,2,95663,0x7ff6cc3d02d4,824,GallopLeft
code-creation,Builtin,2,95672,0x7ff6cc3d0614,868,GallopRight
code-creation,Builtin,2,95682,0x7ff6cc3d0994,3728,ArrayTimSort
code-creation,Builtin,2,95691,0x7ff6cc3d1854,2020,ArrayPrototypeSort
code-creation,Builtin,2,95702,0x7ff6cc3d2054,3560,StringFastLocaleCompare
code-creation,Builtin,2,95712,0x7ff6cc3d2e54,92,WasmInt32ToHeapNumber
code-creation,Builtin,2,95722,0x7ff6cc3d2ed4,32,WasmFuncRefToJS
code-creation,Builtin,2,95732,0x7ff6cc3d2f14,124,WasmTaggedNonSmiToInt32
code-creation,Builtin,2,95742,0x7ff6cc3d2f94,76,WasmTaggedToFloat64
code-creation,Builtin,2,95752,0x7ff6cc3d3014,72,WasmMemoryGrow
code-creation,Builtin,2,95762,0x7ff6cc3d3094,88,WasmTableInit
code-creation,Builtin,2,95772,0x7ff6cc3d3114,88,WasmTableCopy
code-creation,Builtin,2,95781,0x7ff6cc3d3194,76,WasmTableFill
code-creation,Builtin,2,95791,0x7ff6cc3d3214,68,WasmTableGrow
code-creation,Builtin,2,95800,0x7ff6cc3d3294,76,WasmTableGet
code-creation,Builtin,2,95810,0x7ff6cc3d3314,148,WasmTableSet
code-creation,Builtin,2,95820,0x7ff6cc3d33d4,144,WasmTableGetFuncRef
code-creation,Builtin,2,95830,0x7ff6cc3d3494,104,WasmTableSetFuncRef
code-creation,Builtin,2,95840,0x7ff6cc3d3514,80,WasmRefFunc
code-creation,Builtin,2,95849,0x7ff6cc3d3594,136,WasmAllocateFixedArray
code-creation,Builtin,2,95859,0x7ff6cc3d3654,44,WasmThrow
code-creation,Builtin,2,95869,0x7ff6cc3d3694,56,WasmRethrow
code-creation,Builtin,2,95878,0x7ff6cc3d36d4,44,WasmRethrowExplicitContext
code-creation,Builtin,2,95888,0x7ff6cc3d3714,44,WasmTriggerTierUp
code-creation,Builtin,2,95898,0x7ff6cc3d3754,32,WasmStackGuard
code-creation,Builtin,2,95908,0x7ff6cc3d3794,32,WasmStackOverflow
code-creation,Builtin,2,95918,0x7ff6cc3d37d4,40,WasmTraceMemory
code-creation,Builtin,2,95927,0x7ff6cc3d3814,32,WasmTraceEnter
code-creation,Builtin,2,95937,0x7ff6cc3d3854,40,WasmTraceExit
code-creation,Builtin,2,95947,0x7ff6cc3d3894,340,WasmAllocateJSArray
code-creation,Builtin,2,95956,0x7ff6cc3d3a14,100,WasmAllocateStructWithRtt
code-creation,Builtin,2,95967,0x7ff6cc3d3a94,128,WasmAllocateArray_Uninitialized
code-creation,Builtin,2,95977,0x7ff6cc3d3b54,84,WasmArrayNewSegment
code-creation,Builtin,2,95988,0x7ff6cc3d3bd4,136,WasmArrayCopyWithChecks
code-creation,Builtin,2,95998,0x7ff6cc3d3c94,100,WasmArrayCopy
code-creation,Builtin,2,96008,0x7ff6cc3d3d14,260,WasmAllocateObjectWrapper
code-creation,Builtin,2,96018,0x7ff6cc3d3e54,48,WasmSubtypeCheck
code-creation,Builtin,2,96027,0x7ff6cc3d3e94,8,WasmInt32ToNumber
code-creation,Builtin,2,96037,0x7ff6cc3d3ed4,108,WasmUint32ToNumber
code-creation,Builtin,2,96047,0x7ff6cc3d3f54,140,UintPtr53ToNumber
code-creation,Builtin,2,96057,0x7ff6cc3d4014,92,WasmAtomicNotify
code-creation,Builtin,2,96067,0x7ff6cc3d4094,100,WasmI32AtomicWait
code-creation,Builtin,2,96076,0x7ff6cc3d4114,88,WasmI64AtomicWait
code-creation,Builtin,2,96086,0x7ff6cc3d4194,1224,CallRefIC
code-creation,Builtin,2,96096,0x7ff6cc3d4694,1580,WasmGetOwnProperty
code-creation,Builtin,2,96106,0x7ff6cc3d4cd4,76,WasmTrap
code-creation,Builtin,2,96115,0x7ff6cc3d4d54,16,ThrowWasmTrapUnreachable
code-creation,Builtin,2,96125,0x7ff6cc3d4d94,16,ThrowWasmTrapMemOutOfBounds
code-creation,Builtin,2,96135,0x7ff6cc3d4dd4,16,ThrowWasmTrapUnalignedAccess
code-creation,Builtin,2,96146,0x7ff6cc3d4e14,16,ThrowWasmTrapDivByZero
code-creation,Builtin,2,96156,0x7ff6cc3d4e54,16,ThrowWasmTrapDivUnrepresentable
code-creation,Builtin,2,96166,0x7ff6cc3d4e94,16,ThrowWasmTrapRemByZero
code-creation,Builtin,2,96176,0x7ff6cc3d4ed4,16,ThrowWasmTrapFloatUnrepresentable
code-creation,Builtin,2,96186,0x7ff6cc3d4f14,16,ThrowWasmTrapFuncSigMismatch
code-creation,Builtin,2,96197,0x7ff6cc3d4f54,16,ThrowWasmTrapDataSegmentOutOfBounds
code-creation,Builtin,2,96209,0x7ff6cc3d4f94,16,ThrowWasmTrapElementSegmentOutOfBounds
code-creation,Builtin,2,96221,0x7ff6cc3d4fd4,16,ThrowWasmTrapTableOutOfBounds
code-creation,Builtin,2,96231,0x7ff6cc3d5014,16,ThrowWasmTrapRethrowNull
code-creation,Builtin,2,96241,0x7ff6cc3d5054,16,ThrowWasmTrapNullDereference
code-creation,Builtin,2,96252,0x7ff6cc3d5094,16,ThrowWasmTrapIllegalCast
code-creation,Builtin,2,96262,0x7ff6cc3d50d4,16,ThrowWasmTrapArrayOutOfBounds
code-creation,Builtin,2,96272,0x7ff6cc3d5114,16,ThrowWasmTrapArrayTooLarge
code-creation,Builtin,2,96282,0x7ff6cc3d5154,16,ThrowWasmTrapStringOffsetOutOfBounds
code-creation,Builtin,2,96292,0x7ff6cc3d5194,1016,ExperimentalWasmConvertArrayToString
code-creation,Builtin,2,96303,0x7ff6cc3d5594,832,ExperimentalWasmConvertStringToArray
code-creation,Builtin,2,96313,0x7ff6cc3d5914,148,WasmStringNewWtf8
code-creation,Builtin,2,96323,0x7ff6cc3d59d4,104,WasmStringNewWtf8Array
code-creation,Builtin,2,96333,0x7ff6cc3d5a54,140,WasmStringNewWtf16
code-creation,Builtin,2,96343,0x7ff6cc3d5b14,868,WasmStringNewWtf16Array
code-creation,Builtin,2,96353,0x7ff6cc3d5e94,52,WasmStringAsWtf16
code-creation,Builtin,2,96362,0x7ff6cc3d5ed4,48,WasmStringConst
code-creation,Builtin,2,96372,0x7ff6cc3d5f14,108,WasmStringMeasureUtf8
code-creation,Builtin,2,96382,0x7ff6cc3d5f94,108,WasmStringMeasureWtf8
code-creation,Builtin,2,96392,0x7ff6cc3d6014,156,WasmStringEncodeWtf8
code-creation,Builtin,2,96402,0x7ff6cc3d60d4,148,WasmStringEncodeWtf8Array
code-creation,Builtin,2,96412,0x7ff6cc3d6194,104,WasmStringEncodeWtf16
code-creation,Builtin,2,96422,0x7ff6cc3d6214,724,WasmStringEncodeWtf16Array
code-creation,Builtin,2,96432,0x7ff6cc3d6514,68,ThrowToLowerCaseCalledOnNull
code-creation,Builtin,2,96442,0x7ff6cc3d6594,20,WasmStringConcat
code-creation,Builtin,2,96452,0x7ff6cc3d65d4,60,WasmStringEqual
code-creation,Builtin,2,96463,0x7ff6cc3d6614,140,WasmStringIsUSVSequence
code-creation,Builtin,2,96473,0x7ff6cc3d66d4,40,WasmStringAsWtf8
code-creation,Builtin,2,96483,0x7ff6cc3d6714,224,WasmStringViewWtf8Advance
code-creation,Builtin,2,96493,0x7ff6cc3d6814,168,WasmStringViewWtf8Encode
code-creation,Builtin,2,96503,0x7ff6cc3d68d4,172,WasmStringViewWtf8Slice
code-creation,Builtin,2,96513,0x7ff6cc3d6994,512,WasmStringViewWtf16GetCodeUnit
code-creation,Builtin,2,96523,0x7ff6cc3d6bd4,140,WasmStringViewWtf16Encode
code-creation,Builtin,2,96533,0x7ff6cc3d6c94,2420,WasmStringViewWtf16Slice
code-creation,Builtin,2,96543,0x7ff6cc3d7614,100,WasmStringAsIter
code-creation,Builtin,2,96553,0x7ff6cc3d7694,1124,WasmStringViewIterNext
code-creation,Builtin,2,96563,0x7ff6cc3d7b14,1224,WasmStringViewIterAdvance
code-creation,Builtin,2,96573,0x7ff6cc3d8014,1204,WasmStringViewIterRewind
code-creation,Builtin,2,96584,0x7ff6cc3d84d4,3252,WasmStringViewIterSlice
code-creation,Builtin,2,96594,0x7ff6cc3d9194,80,WasmStringFromCodePoint
code-creation,Builtin,2,96604,0x7ff6cc3d9214,36,WasmStringHash
code-creation,Builtin,2,96614,0x7ff6cc3d9254,60,WasmExternInternalize
code-creation,Builtin,2,96624,0x7ff6cc3d9294,164,LoadJoinElement_GenericElementsAccessor_0
code-creation,Builtin,2,96634,0x7ff6cc3d9354,24,LoadJoinTypedElement_Int32Elements_0
code-creation,Builtin,2,96645,0x7ff6cc3d9394,108,LoadJoinTypedElement_Float32Elements_0
code-creation,Builtin,2,96656,0x7ff6cc3d9414,104,LoadJoinTypedElement_Float64Elements_0
code-creation,Builtin,2,96666,0x7ff6cc3d9494,24,LoadJoinTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,96677,0x7ff6cc3d94d4,208,LoadJoinTypedElement_BigUint64Elements_0
code-creation,Builtin,2,96688,0x7ff6cc3d95d4,236,LoadJoinTypedElement_BigInt64Elements_0
code-creation,Builtin,2,96698,0x7ff6cc3d96d4,24,LoadJoinTypedElement_Uint8Elements_0
code-creation,Builtin,2,96709,0x7ff6cc3d9714,24,LoadJoinTypedElement_Int8Elements_0
code-creation,Builtin,2,96719,0x7ff6cc3d9754,24,LoadJoinTypedElement_Uint16Elements_0
code-creation,Builtin,2,96730,0x7ff6cc3d9794,24,LoadJoinTypedElement_Int16Elements_0
code-creation,Builtin,2,96740,0x7ff6cc3d97d4,124,LoadJoinTypedElement_Uint32Elements_0
code-creation,Builtin,2,96752,0x7ff6cc3d9854,12,GenericBuiltinTest_Smi_0
code-creation,Builtin,2,96763,0x7ff6cc3d9894,40,CanUseSameAccessor_FastDoubleElements_0
code-creation,Builtin,2,96774,0x7ff6cc3d98d4,40,CanUseSameAccessor_FastSmiElements_0
code-creation,Builtin,2,96785,0x7ff6cc3d9914,40,CanUseSameAccessor_FastObjectElements_0
code-creation,Builtin,2,96795,0x7ff6cc3d9954,24,LoadNoHasPropertyCheck_GenericElementsAccessor_0
code-creation,Builtin,2,96806,0x7ff6cc3d9994,3508,Load_GenericElementsAccessor_0
code-creation,Builtin,2,96816,0x7ff6cc3da754,24,Store_GenericElementsAccessor_0
code-creation,Builtin,2,96826,0x7ff6cc3da794,36,Delete_GenericElementsAccessor_0
code-creation,Builtin,2,96837,0x7ff6cc3da7d4,24,LoadTypedElement_Int32Elements_0
code-creation,Builtin,2,96847,0x7ff6cc3da814,176,StoreTypedElementNumeric_Int32Elements_0
code-creation,Builtin,2,96857,0x7ff6cc3da8d4,544,StoreTypedElementJSAny_Int32Elements_0
code-creation,Builtin,2,96868,0x7ff6cc3dab14,108,LoadTypedElement_Float32Elements_0
code-creation,Builtin,2,96878,0x7ff6cc3dab94,32,StoreTypedElementNumeric_Float32Elements_0
code-creation,Builtin,2,96889,0x7ff6cc3dabd4,516,StoreTypedElementJSAny_Float32Elements_0
code-creation,Builtin,2,96900,0x7ff6cc3dae14,104,LoadTypedElement_Float64Elements_0
code-creation,Builtin,2,96910,0x7ff6cc3dae94,28,StoreTypedElementNumeric_Float64Elements_0
code-creation,Builtin,2,96921,0x7ff6cc3daed4,512,StoreTypedElementJSAny_Float64Elements_0
code-creation,Builtin,2,96935,0x7ff6cc3db114,24,LoadTypedElement_Uint8ClampedElements_0
code-creation,Builtin,2,96945,0x7ff6cc3db154,24,StoreTypedElementNumeric_Uint8ClampedElements_0
code-creation,Builtin,2,96956,0x7ff6cc3db194,972,StoreTypedElementJSAny_Uint8ClampedElements_0
code-creation,Builtin,2,96967,0x7ff6cc3db594,208,LoadTypedElement_BigUint64Elements_0
code-creation,Builtin,2,96977,0x7ff6cc3db694,56,StoreTypedElementNumeric_BigUint64Elements_0
code-creation,Builtin,2,96988,0x7ff6cc3db6d4,548,StoreTypedElementJSAny_BigUint64Elements_0
code-creation,Builtin,2,96999,0x7ff6cc3db914,236,LoadTypedElement_BigInt64Elements_0
code-creation,Builtin,2,97009,0x7ff6cc3dba14,56,StoreTypedElementNumeric_BigInt64Elements_0
code-creation,Builtin,2,97020,0x7ff6cc3dba54,548,StoreTypedElementJSAny_BigInt64Elements_0
code-creation,Builtin,2,97030,0x7ff6cc3dbc94,24,LoadTypedElement_Uint8Elements_0
code-creation,Builtin,2,97041,0x7ff6cc3dbcd4,24,StoreTypedElementNumeric_Uint8Elements_0
code-creation,Builtin,2,97051,0x7ff6cc3dbd14,544,StoreTypedElementJSAny_Uint8Elements_0
code-creation,Builtin,2,97062,0x7ff6cc3dbf54,24,LoadTypedElement_Int8Elements_0
code-creation,Builtin,2,97072,0x7ff6cc3dbf94,24,StoreTypedElementNumeric_Int8Elements_0
code-creation,Builtin,2,97083,0x7ff6cc3dbfd4,544,StoreTypedElementJSAny_Int8Elements_0
code-creation,Builtin,2,97093,0x7ff6cc3dc214,24,LoadTypedElement_Uint16Elements_0
code-creation,Builtin,2,97104,0x7ff6cc3dc254,24,StoreTypedElementNumeric_Uint16Elements_0
code-creation,Builtin,2,97114,0x7ff6cc3dc294,544,StoreTypedElementJSAny_Uint16Elements_0
code-creation,Builtin,2,97125,0x7ff6cc3dc4d4,24,LoadTypedElement_Int16Elements_0
code-creation,Builtin,2,97135,0x7ff6cc3dc514,24,StoreTypedElementNumeric_Int16Elements_0
code-creation,Builtin,2,97146,0x7ff6cc3dc554,544,StoreTypedElementJSAny_Int16Elements_0
code-creation,Builtin,2,97156,0x7ff6cc3dc794,124,LoadTypedElement_Uint32Elements_0
code-creation,Builtin,2,97166,0x7ff6cc3dc814,176,StoreTypedElementNumeric_Uint32Elements_0
code-creation,Builtin,2,97177,0x7ff6cc3dc8d4,544,StoreTypedElementJSAny_Uint32Elements_0
code-creation,Builtin,2,97188,0x7ff6cc3dcb14,12,CollatorConstructor
code-creation,Builtin,2,97197,0x7ff6cc3dcb54,12,CollatorInternalCompare
code-creation,Builtin,2,97207,0x7ff6cc3dcb94,12,CollatorPrototypeCompare
code-creation,Builtin,2,97218,0x7ff6cc3dcbd4,12,CollatorSupportedLocalesOf
code-creation,Builtin,2,97228,0x7ff6cc3dcc14,12,CollatorPrototypeResolvedOptions
code-creation,Builtin,2,97238,0x7ff6cc3dcc54,12,DatePrototypeToLocaleDateString
code-creation,Builtin,2,97248,0x7ff6cc3dcc94,12,DatePrototypeToLocaleString
code-creation,Builtin,2,97261,0x7ff6cc3dccd4,12,DatePrototypeToLocaleTimeString
code-creation,Builtin,2,97272,0x7ff6cc3dcd14,12,DateTimeFormatConstructor
code-creation,Builtin,2,97282,0x7ff6cc3dcd54,12,DateTimeFormatInternalFormat
code-creation,Builtin,2,97293,0x7ff6cc3dcd94,12,DateTimeFormatPrototypeFormat
code-creation,Builtin,2,97303,0x7ff6cc3dcdd4,12,DateTimeFormatPrototypeFormatRange
code-creation,Builtin,2,97313,0x7ff6cc3dce14,12,DateTimeFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,97324,0x7ff6cc3dce54,12,DateTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,97334,0x7ff6cc3dce94,12,DateTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,97345,0x7ff6cc3dced4,12,DateTimeFormatSupportedLocalesOf
code-creation,Builtin,2,97355,0x7ff6cc3dcf14,12,DisplayNamesConstructor
code-creation,Builtin,2,97365,0x7ff6cc3dcf54,12,DisplayNamesPrototypeOf
code-creation,Builtin,2,97376,0x7ff6cc3dcf94,12,DisplayNamesPrototypeResolvedOptions
code-creation,Builtin,2,97386,0x7ff6cc3dcfd4,12,DisplayNamesSupportedLocalesOf
code-creation,Builtin,2,97396,0x7ff6cc3dd014,12,DurationFormatConstructor
code-creation,Builtin,2,97406,0x7ff6cc3dd054,12,DurationFormatPrototypeFormat
code-creation,Builtin,2,97417,0x7ff6cc3dd094,12,DurationFormatPrototypeFormatToParts
code-creation,Builtin,2,97427,0x7ff6cc3dd0d4,12,DurationFormatPrototypeResolvedOptions
code-creation,Builtin,2,97438,0x7ff6cc3dd114,12,DurationFormatSupportedLocalesOf
code-creation,Builtin,2,97448,0x7ff6cc3dd154,12,IntlGetCanonicalLocales
code-creation,Builtin,2,97458,0x7ff6cc3dd194,12,IntlSupportedValuesOf
code-creation,Builtin,2,97468,0x7ff6cc3dd1d4,12,ListFormatConstructor
code-creation,Builtin,2,97478,0x7ff6cc3dd214,200,ListFormatPrototypeFormat
code-creation,Builtin,2,97488,0x7ff6cc3dd314,200,ListFormatPrototypeFormatToParts
code-creation,Builtin,2,97498,0x7ff6cc3dd414,12,ListFormatPrototypeResolvedOptions
code-creation,Builtin,2,97509,0x7ff6cc3dd454,12,ListFormatSupportedLocalesOf
code-creation,Builtin,2,97519,0x7ff6cc3dd494,12,LocaleConstructor
code-creation,Builtin,2,97529,0x7ff6cc3dd4d4,12,LocalePrototypeBaseName
code-creation,Builtin,2,97539,0x7ff6cc3dd514,12,LocalePrototypeCalendar
code-creation,Builtin,2,97549,0x7ff6cc3dd554,12,LocalePrototypeCalendars
code-creation,Builtin,2,97559,0x7ff6cc3dd594,12,LocalePrototypeCaseFirst
code-creation,Builtin,2,97569,0x7ff6cc3dd5d4,12,LocalePrototypeCollation
code-creation,Builtin,2,97579,0x7ff6cc3dd614,12,LocalePrototypeCollations
code-creation,Builtin,2,97589,0x7ff6cc3dd654,12,LocalePrototypeHourCycle
code-creation,Builtin,2,97599,0x7ff6cc3dd694,12,LocalePrototypeHourCycles
code-creation,Builtin,2,97609,0x7ff6cc3dd6d4,12,LocalePrototypeLanguage
code-creation,Builtin,2,97619,0x7ff6cc3dd714,12,LocalePrototypeMaximize
code-creation,Builtin,2,97629,0x7ff6cc3dd754,12,LocalePrototypeMinimize
code-creation,Builtin,2,97639,0x7ff6cc3dd794,12,LocalePrototypeNumeric
code-creation,Builtin,2,97649,0x7ff6cc3dd7d4,12,LocalePrototypeNumberingSystem
code-creation,Builtin,2,97659,0x7ff6cc3dd814,12,LocalePrototypeNumberingSystems
code-creation,Builtin,2,97669,0x7ff6cc3dd854,12,LocalePrototypeRegion
code-creation,Builtin,2,97679,0x7ff6cc3dd894,12,LocalePrototypeScript
code-creation,Builtin,2,97689,0x7ff6cc3dd8d4,12,LocalePrototypeTextInfo
code-creation,Builtin,2,97699,0x7ff6cc3dd914,12,LocalePrototypeTimeZones
code-creation,Builtin,2,97709,0x7ff6cc3dd954,12,LocalePrototypeToString
code-creation,Builtin,2,97719,0x7ff6cc3dd994,12,LocalePrototypeWeekInfo
code-creation,Builtin,2,97729,0x7ff6cc3dd9d4,12,NumberFormatConstructor
code-creation,Builtin,2,97739,0x7ff6cc3dda14,12,NumberFormatInternalFormatNumber
code-creation,Builtin,2,97749,0x7ff6cc3dda54,12,NumberFormatPrototypeFormatNumber
code-creation,Builtin,2,97759,0x7ff6cc3dda94,12,NumberFormatPrototypeFormatRange
code-creation,Builtin,2,97770,0x7ff6cc3ddad4,12,NumberFormatPrototypeFormatRangeToParts
code-creation,Builtin,2,97780,0x7ff6cc3ddb14,12,NumberFormatPrototypeFormatToParts
code-creation,Builtin,2,97792,0x7ff6cc3ddb54,12,NumberFormatPrototypeResolvedOptions
code-creation,Builtin,2,97804,0x7ff6cc3ddb94,12,NumberFormatSupportedLocalesOf
code-creation,Builtin,2,97815,0x7ff6cc3ddbd4,12,PluralRulesConstructor
code-creation,Builtin,2,97825,0x7ff6cc3ddc14,12,PluralRulesPrototypeResolvedOptions
code-creation,Builtin,2,97836,0x7ff6cc3ddc54,12,PluralRulesPrototypeSelect
code-creation,Builtin,2,97846,0x7ff6cc3ddc94,12,PluralRulesPrototypeSelectRange
code-creation,Builtin,2,97856,0x7ff6cc3ddcd4,12,PluralRulesSupportedLocalesOf
code-creation,Builtin,2,97866,0x7ff6cc3ddd14,12,RelativeTimeFormatConstructor
code-creation,Builtin,2,97876,0x7ff6cc3ddd54,12,RelativeTimeFormatPrototypeFormat
code-creation,Builtin,2,97887,0x7ff6cc3ddd94,12,RelativeTimeFormatPrototypeFormatToParts
code-creation,Builtin,2,97897,0x7ff6cc3dddd4,12,RelativeTimeFormatPrototypeResolvedOptions
code-creation,Builtin,2,97908,0x7ff6cc3dde14,12,RelativeTimeFormatSupportedLocalesOf
code-creation,Builtin,2,97919,0x7ff6cc3dde54,12,SegmenterConstructor
code-creation,Builtin,2,97929,0x7ff6cc3dde94,12,SegmenterPrototypeResolvedOptions
code-creation,Builtin,2,97939,0x7ff6cc3dded4,12,SegmenterPrototypeSegment
code-creation,Builtin,2,97949,0x7ff6cc3ddf14,12,SegmenterSupportedLocalesOf
code-creation,Builtin,2,97959,0x7ff6cc3ddf54,12,SegmentIteratorPrototypeNext
code-creation,Builtin,2,97969,0x7ff6cc3ddf94,12,SegmentsPrototypeContaining
code-creation,Builtin,2,97979,0x7ff6cc3ddfd4,12,SegmentsPrototypeIterator
code-creation,Builtin,2,97993,0x7ff6cc3de014,12,StringPrototypeNormalizeIntl
code-creation,Builtin,2,98003,0x7ff6cc3de054,1160,StringPrototypeToLocaleLowerCase
code-creation,Builtin,2,98012,0x7ff6cc3de514,12,StringPrototypeToLocaleUpperCase
code-creation,Builtin,2,98021,0x7ff6cc3de554,200,StringPrototypeToLowerCaseIntl
code-creation,Builtin,2,98030,0x7ff6cc3de654,12,StringPrototypeToUpperCaseIntl
code-creation,Builtin,2,98039,0x7ff6cc3de694,648,StringToLowerCaseIntl
code-creation,Builtin,2,98050,0x7ff6cc3de954,12,TemporalCalendarPrototypeEra
code-creation,Builtin,2,98060,0x7ff6cc3de994,12,TemporalCalendarPrototypeEraYear
code-creation,Builtin,2,98070,0x7ff6cc3de9d4,12,TemporalPlainDatePrototypeEra
code-creation,Builtin,2,98080,0x7ff6cc3dea14,12,TemporalPlainDatePrototypeEraYear
code-creation,Builtin,2,98091,0x7ff6cc3dea54,12,TemporalPlainDateTimePrototypeEra
code-creation,Builtin,2,98101,0x7ff6cc3dea94,12,TemporalPlainDateTimePrototypeEraYear
code-creation,Builtin,2,98112,0x7ff6cc3dead4,12,TemporalPlainYearMonthPrototypeEra
code-creation,Builtin,2,98122,0x7ff6cc3deb14,12,TemporalPlainYearMonthPrototypeEraYear
code-creation,Builtin,2,98133,0x7ff6cc3deb54,12,TemporalZonedDateTimePrototypeEra
code-creation,Builtin,2,98146,0x7ff6cc3deb94,12,TemporalZonedDateTimePrototypeEraYear
code-creation,Builtin,2,98157,0x7ff6cc3debd4,12,V8BreakIteratorConstructor
code-creation,Builtin,2,98167,0x7ff6cc3dec14,12,V8BreakIteratorInternalAdoptText
code-creation,Builtin,2,98177,0x7ff6cc3dec54,12,V8BreakIteratorInternalBreakType
code-creation,Builtin,2,98188,0x7ff6cc3dec94,12,V8BreakIteratorInternalCurrent
code-creation,Builtin,2,98198,0x7ff6cc3decd4,12,V8BreakIteratorInternalFirst
code-creation,Builtin,2,98208,0x7ff6cc3ded14,12,V8BreakIteratorInternalNext
code-creation,Builtin,2,98219,0x7ff6cc3ded54,12,V8BreakIteratorPrototypeAdoptText
code-creation,Builtin,2,98229,0x7ff6cc3ded94,12,V8BreakIteratorPrototypeBreakType
code-creation,Builtin,2,98239,0x7ff6cc3dedd4,12,V8BreakIteratorPrototypeCurrent
code-creation,Builtin,2,98250,0x7ff6cc3dee14,12,V8BreakIteratorPrototypeFirst
code-creation,Builtin,2,98260,0x7ff6cc3dee54,12,V8BreakIteratorPrototypeNext
code-creation,Builtin,2,98270,0x7ff6cc3dee94,12,V8BreakIteratorPrototypeResolvedOptions
code-creation,Builtin,2,98281,0x7ff6cc3deed4,12,V8BreakIteratorSupportedLocalesOf
code-creation,BytecodeHandler,0,98292,0x7ff6cc3def14,24,Wide
code-creation,BytecodeHandler,0,98302,0x7ff6cc3def54,24,ExtraWide
code-creation,BytecodeHandler,0,98312,0x7ff6cc3def94,104,DebugBreakWide
code-creation,BytecodeHandler,0,98322,0x7ff6cc3df014,104,DebugBreakExtraWide
code-creation,BytecodeHandler,0,98332,0x7ff6cc3df094,164,DebugBreak0
code-creation,BytecodeHandler,0,98424,0x7ff6cc3df154,104,DebugBreak1
code-creation,BytecodeHandler,0,98439,0x7ff6cc3df1d4,104,DebugBreak2
code-creation,BytecodeHandler,0,98449,0x7ff6cc3df254,104,DebugBreak3
code-creation,BytecodeHandler,0,98459,0x7ff6cc3df2d4,104,DebugBreak4
code-creation,BytecodeHandler,0,98469,0x7ff6cc3df354,104,DebugBreak5
code-creation,BytecodeHandler,0,98478,0x7ff6cc3df3d4,104,DebugBreak6
code-creation,BytecodeHandler,0,98488,0x7ff6cc3df454,32,Ldar
code-creation,BytecodeHandler,0,98498,0x7ff6cc3df494,56,LdaZero
code-creation,BytecodeHandler,0,98507,0x7ff6cc3df4d4,64,LdaSmi
code-creation,BytecodeHandler,0,98516,0x7ff6cc3df554,64,LdaUndefined
code-creation,BytecodeHandler,0,98526,0x7ff6cc3df5d4,64,LdaNull
code-creation,BytecodeHandler,0,98535,0x7ff6cc3df654,64,LdaTheHole
code-creation,BytecodeHandler,0,98545,0x7ff6cc3df6d4,24,LdaTrue
code-creation,BytecodeHandler,0,98554,0x7ff6cc3df714,24,LdaFalse
code-creation,BytecodeHandler,0,98564,0x7ff6cc3df754,64,LdaConstant
code-creation,BytecodeHandler,0,98574,0x7ff6cc3df7d4,124,LdaContextSlot
code-creation,BytecodeHandler,0,98583,0x7ff6cc3df854,124,LdaImmutableContextSlot
code-creation,BytecodeHandler,0,98594,0x7ff6cc3df8d4,72,LdaCurrentContextSlot
code-creation,BytecodeHandler,0,98604,0x7ff6cc3df954,72,LdaImmutableCurrentContextSlot
code-creation,BytecodeHandler,0,98614,0x7ff6cc3df9d4,32,Star
code-creation,BytecodeHandler,0,98624,0x7ff6cc3dfa14,48,Mov
code-creation,BytecodeHandler,0,98633,0x7ff6cc3dfa54,40,PushContext
code-creation,BytecodeHandler,0,98643,0x7ff6cc3dfa94,36,PopContext
code-creation,BytecodeHandler,0,98653,0x7ff6cc3dfad4,56,TestReferenceEqual
code-creation,BytecodeHandler,0,98663,0x7ff6cc3dfb14,60,TestUndetectable
code-creation,BytecodeHandler,0,98672,0x7ff6cc3dfb54,44,TestNull
code-creation,BytecodeHandler,0,98684,0x7ff6cc3dfb94,44,TestUndefined
code-creation,BytecodeHandler,0,98694,0x7ff6cc3dfbd4,368,TestTypeOf
code-creation,BytecodeHandler,0,98704,0x7ff6cc3dfd54,5588,LdaGlobal
code-creation,BytecodeHandler,0,98714,0x7ff6cc3e1354,4388,LdaGlobalInsideTypeof
code-creation,BytecodeHandler,0,98723,0x7ff6cc3e2494,160,StaGlobal
code-creation,BytecodeHandler,0,98733,0x7ff6cc3e2554,160,StaContextSlot
code-creation,BytecodeHandler,0,98742,0x7ff6cc3e2614,112,StaCurrentContextSlot
code-creation,BytecodeHandler,0,98752,0x7ff6cc3e2694,124,LdaLookupSlot
code-creation,BytecodeHandler,0,98762,0x7ff6cc3e2714,256,LdaLookupContextSlot
code-creation,BytecodeHandler,0,98772,0x7ff6cc3e2854,4692,LdaLookupGlobalSlot
code-creation,BytecodeHandler,0,98781,0x7ff6cc3e3ad4,124,LdaLookupSlotInsideTypeof
code-creation,BytecodeHandler,0,98791,0x7ff6cc3e3b54,256,LdaLookupContextSlotInsideTypeof
code-creation,BytecodeHandler,0,98802,0x7ff6cc3e3c94,4644,LdaLookupGlobalSlotInsideTypeof
code-creation,BytecodeHandler,0,98812,0x7ff6cc3e4ed4,220,StaLookupSlot
code-creation,BytecodeHandler,0,98821,0x7ff6cc3e4fd4,5244,GetNamedProperty
code-creation,BytecodeHandler,0,98831,0x7ff6cc3e6454,184,GetNamedPropertyFromSuper
code-creation,BytecodeHandler,0,98841,0x7ff6cc3e6514,200,GetKeyedProperty
code-creation,BytecodeHandler,0,98850,0x7ff6cc3e6614,168,LdaModuleVariable
code-creation,BytecodeHandler,0,98860,0x7ff6cc3e66d4,300,StaModuleVariable
code-creation,BytecodeHandler,0,98870,0x7ff6cc3e6814,176,SetNamedProperty
code-creation,BytecodeHandler,0,98879,0x7ff6cc3e68d4,176,DefineNamedOwnProperty
code-creation,BytecodeHandler,0,98889,0x7ff6cc3e6994,168,SetKeyedProperty
code-creation,BytecodeHandler,0,98899,0x7ff6cc3e6a54,184,DefineKeyedOwnProperty
code-creation,BytecodeHandler,0,98908,0x7ff6cc3e6b14,168,StaInArrayLiteral
code-creation,BytecodeHandler,0,98918,0x7ff6cc3e6bd4,200,DefineKeyedOwnPropertyInLiteral
code-creation,BytecodeHandler,0,98928,0x7ff6cc3e6cd4,1504,Add
code-creation,BytecodeHandler,0,98936,0x7ff6cc3e72d4,1472,Sub
code-creation,BytecodeHandler,0,98946,0x7ff6cc3e78d4,1592,Mul
code-creation,BytecodeHandler,0,98955,0x7ff6cc3e7f14,1660,Div
code-creation,BytecodeHandler,0,98964,0x7ff6cc3e8594,1608,Mod
code-creation,BytecodeHandler,0,98974,0x7ff6cc3e8c14,960,Exp
code-creation,BytecodeHandler,0,98985,0x7ff6cc3e9014,1796,BitwiseOr
code-creation,BytecodeHandler,0,98996,0x7ff6cc3e9754,1800,BitwiseXor
code-creation,BytecodeHandler,0,99007,0x7ff6cc3e9e94,1796,BitwiseAnd
code-creation,BytecodeHandler,0,99017,0x7ff6cc3ea5d4,1216,ShiftLeft
code-creation,BytecodeHandler,0,99027,0x7ff6cc3eaad4,1216,ShiftRight
code-creation,BytecodeHandler,0,99036,0x7ff6cc3eafd4,1288,ShiftRightLogical
code-creation,BytecodeHandler,0,99047,0x7ff6cc3eb514,1388,AddSmi
code-creation,BytecodeHandler,0,99057,0x7ff6cc3eba94,1356,SubSmi
code-creation,BytecodeHandler,0,99066,0x7ff6cc3ec014,1432,MulSmi
code-creation,BytecodeHandler,0,99075,0x7ff6cc3ec5d4,1572,DivSmi
code-creation,BytecodeHandler,0,99085,0x7ff6cc3ecc14,1440,ModSmi
code-creation,BytecodeHandler,0,99094,0x7ff6cc3ed1d4,848,ExpSmi
code-creation,BytecodeHandler,0,99104,0x7ff6cc3ed554,488,BitwiseOrSmi
code-creation,BytecodeHandler,0,99113,0x7ff6cc3ed754,488,BitwiseXorSmi
code-creation,BytecodeHandler,0,99123,0x7ff6cc3ed954,488,BitwiseAndSmi
code-creation,BytecodeHandler,0,99133,0x7ff6cc3edb54,508,ShiftLeftSmi
code-creation,BytecodeHandler,0,99142,0x7ff6cc3edd54,496,ShiftRightSmi
code-creation,BytecodeHandler,0,99152,0x7ff6cc3edf54,784,ShiftRightLogicalSmi
code-creation,BytecodeHandler,0,99162,0x7ff6cc3ee294,644,Inc
code-creation,BytecodeHandler,0,99171,0x7ff6cc3ee554,644,Dec
code-creation,BytecodeHandler,0,99181,0x7ff6cc3ee814,632,Negate
code-creation,BytecodeHandler,0,99190,0x7ff6cc3eea94,504,BitwiseNot
code-creation,BytecodeHandler,0,99200,0x7ff6cc3eec94,124,ToBooleanLogicalNot
code-creation,BytecodeHandler,0,99209,0x7ff6cc3eed14,44,LogicalNot
code-creation,BytecodeHandler,0,99219,0x7ff6cc3eed54,204,TypeOf
code-creation,BytecodeHandler,0,99228,0x7ff6cc3eee54,124,DeletePropertyStrict
code-creation,BytecodeHandler,0,99238,0x7ff6cc3eeed4,116,DeletePropertySloppy
code-creation,BytecodeHandler,0,99248,0x7ff6cc3eef54,40,GetSuperConstructor
code-creation,BytecodeHandler,0,99258,0x7ff6cc3eef94,352,FindNonDefaultConstructorOrConstruct
code-creation,BytecodeHandler,0,99269,0x7ff6cc3ef114,1108,CallAnyReceiver
code-creation,BytecodeHandler,0,99279,0x7ff6cc3ef594,1108,CallProperty
code-creation,BytecodeHandler,0,99288,0x7ff6cc3efa14,1016,CallProperty0
code-creation,BytecodeHandler,0,99298,0x7ff6cc3efe14,1028,CallProperty1
code-creation,BytecodeHandler,0,99308,0x7ff6cc3f0254,1040,CallProperty2
code-creation,BytecodeHandler,0,99317,0x7ff6cc3f0694,1000,CallUndefinedReceiver
code-creation,BytecodeHandler,0,99327,0x7ff6cc3f0a94,1040,CallUndefinedReceiver0
code-creation,BytecodeHandler,0,99338,0x7ff6cc3f0ed4,1028,CallUndefinedReceiver1
code-creation,BytecodeHandler,0,99348,0x7ff6cc3f1314,1048,CallUndefinedReceiver2
code-creation,BytecodeHandler,0,99358,0x7ff6cc3f1754,1108,CallWithSpread
code-creation,BytecodeHandler,0,99368,0x7ff6cc3f1bd4,128,CallRuntime
code-creation,BytecodeHandler,0,99377,0x7ff6cc3f1c94,164,CallRuntimeForPair
code-creation,BytecodeHandler,0,99387,0x7ff6cc3f1d54,80,CallJSRuntime
code-creation,BytecodeHandler,0,99397,0x7ff6cc3f1dd4,1328,InvokeIntrinsic
code-creation,BytecodeHandler,0,99406,0x7ff6cc3f2314,1016,Construct
code-creation,BytecodeHandler,0,99416,0x7ff6cc3f2714,512,ConstructWithSpread
code-creation,BytecodeHandler,0,99426,0x7ff6cc3f2954,2180,TestEqual
code-creation,BytecodeHandler,0,99435,0x7ff6cc3f3214,1336,TestEqualStrict
code-creation,BytecodeHandler,0,99445,0x7ff6cc3f3754,1808,TestLessThan
code-creation,BytecodeHandler,0,99455,0x7ff6cc3f3e94,1808,TestGreaterThan
code-creation,BytecodeHandler,0,99464,0x7ff6cc3f45d4,1808,TestLessThanOrEqual
code-creation,BytecodeHandler,0,99474,0x7ff6cc3f4d14,1808,TestGreaterThanOrEqual
code-creation,BytecodeHandler,0,99484,0x7ff6cc3f5454,884,TestInstanceOf
code-creation,BytecodeHandler,0,99494,0x7ff6cc3f57d4,156,TestIn
code-creation,BytecodeHandler,0,99504,0x7ff6cc3f5894,116,ToName
code-creation,BytecodeHandler,0,99513,0x7ff6cc3f5914,220,ToNumber
code-creation,BytecodeHandler,0,99523,0x7ff6cc3f5a14,244,ToNumeric
code-creation,BytecodeHandler,0,99532,0x7ff6cc3f5b14,116,ToObject
code-creation,BytecodeHandler,0,99542,0x7ff6cc3f5b94,124,ToString
code-creation,BytecodeHandler,0,99553,0x7ff6cc3f5c14,396,CreateRegExpLiteral
code-creation,BytecodeHandler,0,99564,0x7ff6cc3f5dd4,1568,CreateArrayLiteral
code-creation,BytecodeHandler,0,99574,0x7ff6cc3f6414,92,CreateArrayFromIterable
code-creation,BytecodeHandler,0,99585,0x7ff6cc3f6494,764,CreateEmptyArrayLiteral
code-creation,BytecodeHandler,0,99595,0x7ff6cc3f6794,2376,CreateObjectLiteral
code-creation,BytecodeHandler,0,99605,0x7ff6cc3f7114,236,CreateEmptyObjectLiteral
code-creation,BytecodeHandler,0,99615,0x7ff6cc3f7214,172,CloneObject
code-creation,BytecodeHandler,0,99625,0x7ff6cc3f72d4,204,GetTemplateObject
code-creation,BytecodeHandler,0,99634,0x7ff6cc3f73d4,336,CreateClosure
code-creation,BytecodeHandler,0,99644,0x7ff6cc3f7554,116,CreateBlockContext
code-creation,BytecodeHandler,0,99654,0x7ff6cc3f75d4,132,CreateCatchContext
code-creation,BytecodeHandler,0,99664,0x7ff6cc3f7694,292,CreateFunctionContext
code-creation,BytecodeHandler,0,99674,0x7ff6cc3f77d4,292,CreateEvalContext
code-creation,BytecodeHandler,0,99684,0x7ff6cc3f7914,132,CreateWithContext
code-creation,BytecodeHandler,0,99694,0x7ff6cc3f79d4,1556,CreateMappedArguments
code-creation,BytecodeHandler,0,99704,0x7ff6cc3f8014,572,CreateUnmappedArguments
code-creation,BytecodeHandler,0,99714,0x7ff6cc3f8254,624,CreateRestParameter
code-creation,BytecodeHandler,0,99724,0x7ff6cc3f84d4,868,JumpLoop
code-creation,BytecodeHandler,0,99733,0x7ff6cc3f8854,44,Jump
code-creation,BytecodeHandler,0,99743,0x7ff6cc3f8894,56,JumpConstant
code-creation,BytecodeHandler,0,99753,0x7ff6cc3f88d4,80,JumpIfNullConstant
code-creation,BytecodeHandler,0,99762,0x7ff6cc3f8954,80,JumpIfNotNullConstant
code-creation,BytecodeHandler,0,99773,0x7ff6cc3f89d4,80,JumpIfUndefinedConstant
code-creation,BytecodeHandler,0,99783,0x7ff6cc3f8a54,80,JumpIfNotUndefinedConstant
code-creation,BytecodeHandler,0,99793,0x7ff6cc3f8ad4,92,JumpIfUndefinedOrNullConstant
code-creation,BytecodeHandler,0,99803,0x7ff6cc3f8b54,80,JumpIfTrueConstant
code-creation,BytecodeHandler,0,99813,0x7ff6cc3f8bd4,80,JumpIfFalseConstant
code-creation,BytecodeHandler,0,99823,0x7ff6cc3f8c54,92,JumpIfJSReceiverConstant
code-creation,BytecodeHandler,0,99833,0x7ff6cc3f8cd4,164,JumpIfToBooleanTrueConstant
code-creation,BytecodeHandler,0,99843,0x7ff6cc3f8d94,160,JumpIfToBooleanFalseConstant
code-creation,BytecodeHandler,0,99854,0x7ff6cc3f8e54,148,JumpIfToBooleanTrue
code-creation,BytecodeHandler,0,99864,0x7ff6cc3f8f14,148,JumpIfToBooleanFalse
code-creation,BytecodeHandler,0,99874,0x7ff6cc3f8fd4,68,JumpIfTrue
code-creation,BytecodeHandler,0,99883,0x7ff6cc3f9054,68,JumpIfFalse
code-creation,BytecodeHandler,0,99893,0x7ff6cc3f90d4,68,JumpIfNull
code-creation,BytecodeHandler,0,99903,0x7ff6cc3f9154,68,JumpIfNotNull
code-creation,BytecodeHandler,0,99912,0x7ff6cc3f91d4,68,JumpIfUndefined
code-creation,BytecodeHandler,0,99922,0x7ff6cc3f9254,68,JumpIfNotUndefined
code-creation,BytecodeHandler,0,99932,0x7ff6cc3f92d4,76,JumpIfUndefinedOrNull
code-creation,BytecodeHandler,0,99942,0x7ff6cc3f9354,80,JumpIfJSReceiver
code-creation,BytecodeHandler,0,99952,0x7ff6cc3f93d4,108,SwitchOnSmiNoFeedback
code-creation,BytecodeHandler,0,99962,0x7ff6cc3f9454,472,ForInEnumerate
code-creation,BytecodeHandler,0,99972,0x7ff6cc3f9654,260,ForInPrepare
code-creation,BytecodeHandler,0,99983,0x7ff6cc3f9794,64,ForInContinue
code-creation,BytecodeHandler,0,99992,0x7ff6cc3f9814,260,ForInNext
code-creation,BytecodeHandler,0,100002,0x7ff6cc3f9954,48,ForInStep
code-creation,BytecodeHandler,0,100012,0x7ff6cc3f9994,36,SetPendingMessage
code-creation,BytecodeHandler,0,100022,0x7ff6cc3f99d4,116,Throw
code-creation,BytecodeHandler,0,100031,0x7ff6cc3f9a54,116,ReThrow
code-creation,BytecodeHandler,0,100041,0x7ff6cc3f9ad4,112,Return
code-creation,BytecodeHandler,0,100050,0x7ff6cc3f9b54,188,ThrowReferenceErrorIfHole
code-creation,BytecodeHandler,0,100061,0x7ff6cc3f9c14,136,ThrowSuperNotCalledIfHole
code-creation,BytecodeHandler,0,100072,0x7ff6cc3f9cd4,136,ThrowSuperAlreadyCalledIfNotHole
code-creation,BytecodeHandler,0,100082,0x7ff6cc3f9d94,156,ThrowIfNotSuperConstructor
code-creation,BytecodeHandler,0,100092,0x7ff6cc3f9e54,124,SwitchOnGeneratorState
code-creation,BytecodeHandler,0,100104,0x7ff6cc3f9ed4,520,SuspendGenerator
code-creation,BytecodeHandler,0,100115,0x7ff6cc3fa114,140,ResumeGenerator
code-creation,BytecodeHandler,0,100125,0x7ff6cc3fa1d4,164,GetIterator
code-creation,BytecodeHandler,0,100138,0x7ff6cc3fa294,116,Debugger
code-creation,BytecodeHandler,0,100148,0x7ff6cc3fa314,124,IncBlockCounter
code-creation,BytecodeHandler,0,100158,0x7ff6cc3fa394,56,Abort
code-creation,BytecodeHandler,0,100168,0x7ff6cc3fa3d4,32,Star0
code-creation,BytecodeHandler,0,100177,0x7ff6cc3fa414,60,Illegal
code-creation,BytecodeHandler,0,100188,0x7ff6cc3fa454,108,DebugBreak1.Wide
code-creation,BytecodeHandler,0,100198,0x7ff6cc3fa4d4,108,DebugBreak2.Wide
code-creation,BytecodeHandler,0,100208,0x7ff6cc3fa554,108,DebugBreak3.Wide
code-creation,BytecodeHandler,0,100218,0x7ff6cc3fa5d4,108,DebugBreak4.Wide
code-creation,BytecodeHandler,0,100228,0x7ff6cc3fa654,108,DebugBreak5.Wide
code-creation,BytecodeHandler,0,100238,0x7ff6cc3fa6d4,108,DebugBreak6.Wide
code-creation,BytecodeHandler,0,100247,0x7ff6cc3fa754,32,Ldar.Wide
code-creation,BytecodeHandler,0,100257,0x7ff6cc3fa794,32,LdaSmi.Wide
code-creation,BytecodeHandler,0,100267,0x7ff6cc3fa7d4,32,LdaConstant.Wide
code-creation,BytecodeHandler,0,100277,0x7ff6cc3fa814,96,LdaContextSlot.Wide
code-creation,BytecodeHandler,0,100287,0x7ff6cc3fa894,96,LdaImmutableContextSlot.Wide
code-creation,BytecodeHandler,0,100297,0x7ff6cc3fa914,44,LdaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,100308,0x7ff6cc3fa954,44,LdaImmutableCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,100318,0x7ff6cc3fa994,32,Star.Wide
code-creation,BytecodeHandler,0,100328,0x7ff6cc3fa9d4,48,Mov.Wide
code-creation,BytecodeHandler,0,100338,0x7ff6cc3faa14,40,PushContext.Wide
code-creation,BytecodeHandler,0,100348,0x7ff6cc3faa54,36,PopContext.Wide
code-creation,BytecodeHandler,0,100358,0x7ff6cc3faa94,56,TestReferenceEqual.Wide
code-creation,BytecodeHandler,0,100368,0x7ff6cc3faad4,4536,LdaGlobal.Wide
code-creation,BytecodeHandler,0,100378,0x7ff6cc3fbc94,4460,LdaGlobalInsideTypeof.Wide
code-creation,BytecodeHandler,0,100388,0x7ff6cc3fce14,164,StaGlobal.Wide
code-creation,BytecodeHandler,0,100398,0x7ff6cc3fced4,160,StaContextSlot.Wide
code-creation,BytecodeHandler,0,100408,0x7ff6cc3fcf94,112,StaCurrentContextSlot.Wide
code-creation,BytecodeHandler,0,100418,0x7ff6cc3fd014,128,LdaLookupSlot.Wide
code-creation,BytecodeHandler,0,100428,0x7ff6cc3fd0d4,260,LdaLookupContextSlot.Wide
code-creation,BytecodeHandler,0,100439,0x7ff6cc3fd214,4716,LdaLookupGlobalSlot.Wide
code-creation,BytecodeHandler,0,100449,0x7ff6cc3fe494,128,LdaLookupSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,100459,0x7ff6cc3fe554,260,LdaLookupContextSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,100470,0x7ff6cc3fe694,4660,LdaLookupGlobalSlotInsideTypeof.Wide
code-creation,BytecodeHandler,0,100481,0x7ff6cc3ff8d4,220,StaLookupSlot.Wide
code-creation,BytecodeHandler,0,100491,0x7ff6cc3ff9d4,5300,GetNamedProperty.Wide
code-creation,BytecodeHandler,0,100501,0x7ff6cc400e94,192,GetNamedPropertyFromSuper.Wide
code-creation,BytecodeHandler,0,100511,0x7ff6cc400f94,156,GetKeyedProperty.Wide
code-creation,BytecodeHandler,0,100521,0x7ff6cc401054,168,LdaModuleVariable.Wide
code-creation,BytecodeHandler,0,100532,0x7ff6cc401114,308,StaModuleVariable.Wide
code-creation,BytecodeHandler,0,100542,0x7ff6cc401254,180,SetNamedProperty.Wide
code-creation,BytecodeHandler,0,100553,0x7ff6cc401314,180,DefineNamedOwnProperty.Wide
code-creation,BytecodeHandler,0,100563,0x7ff6cc4013d4,172,SetKeyedProperty.Wide
code-creation,BytecodeHandler,0,100573,0x7ff6cc401494,188,DefineKeyedOwnProperty.Wide
code-creation,BytecodeHandler,0,100583,0x7ff6cc401554,172,StaInArrayLiteral.Wide
code-creation,BytecodeHandler,0,100594,0x7ff6cc401614,204,DefineKeyedOwnPropertyInLiteral.Wide
code-creation,BytecodeHandler,0,100604,0x7ff6cc401714,1476,Add.Wide
code-creation,BytecodeHandler,0,100614,0x7ff6cc401d14,1440,Sub.Wide
code-creation,BytecodeHandler,0,100623,0x7ff6cc4022d4,1560,Mul.Wide
code-creation,BytecodeHandler,0,100635,0x7ff6cc402914,1672,Div.Wide
code-creation,BytecodeHandler,0,100646,0x7ff6cc402fd4,1624,Mod.Wide
code-creation,BytecodeHandler,0,100655,0x7ff6cc403654,984,Exp.Wide
code-creation,BytecodeHandler,0,100665,0x7ff6cc403a54,1848,BitwiseOr.Wide
code-creation,BytecodeHandler,0,100675,0x7ff6cc404194,1852,BitwiseXor.Wide
code-creation,BytecodeHandler,0,100684,0x7ff6cc4048d4,1848,BitwiseAnd.Wide
code-creation,BytecodeHandler,0,100694,0x7ff6cc405014,1272,ShiftLeft.Wide
code-creation,BytecodeHandler,0,100704,0x7ff6cc405514,1272,ShiftRight.Wide
code-creation,BytecodeHandler,0,100714,0x7ff6cc405a14,1344,ShiftRightLogical.Wide
code-creation,BytecodeHandler,0,100724,0x7ff6cc405f94,1368,AddSmi.Wide
code-creation,BytecodeHandler,0,100734,0x7ff6cc406514,1332,SubSmi.Wide
code-creation,BytecodeHandler,0,100744,0x7ff6cc406a54,1444,MulSmi.Wide
code-creation,BytecodeHandler,0,100753,0x7ff6cc407014,1588,DivSmi.Wide
code-creation,BytecodeHandler,0,100763,0x7ff6cc407654,1456,ModSmi.Wide
code-creation,BytecodeHandler,0,100772,0x7ff6cc407c14,844,ExpSmi.Wide
code-creation,BytecodeHandler,0,100782,0x7ff6cc407f94,496,BitwiseOrSmi.Wide
code-creation,BytecodeHandler,0,100792,0x7ff6cc408194,496,BitwiseXorSmi.Wide
code-creation,BytecodeHandler,0,100803,0x7ff6cc408394,496,BitwiseAndSmi.Wide
code-creation,BytecodeHandler,0,100813,0x7ff6cc408594,516,ShiftLeftSmi.Wide
code-creation,BytecodeHandler,0,100823,0x7ff6cc4087d4,500,ShiftRightSmi.Wide
code-creation,BytecodeHandler,0,100833,0x7ff6cc4089d4,792,ShiftRightLogicalSmi.Wide
code-creation,BytecodeHandler,0,100843,0x7ff6cc408d14,616,Inc.Wide
code-creation,BytecodeHandler,0,100853,0x7ff6cc408f94,616,Dec.Wide
code-creation,BytecodeHandler,0,100862,0x7ff6cc409214,636,Negate.Wide
code-creation,BytecodeHandler,0,100872,0x7ff6cc409494,516,BitwiseNot.Wide
code-creation,BytecodeHandler,0,100882,0x7ff6cc4096d4,128,DeletePropertyStrict.Wide
code-creation,BytecodeHandler,0,100893,0x7ff6cc409794,120,DeletePropertySloppy.Wide
code-creation,BytecodeHandler,0,100903,0x7ff6cc409814,40,GetSuperConstructor.Wide
code-creation,BytecodeHandler,0,100914,0x7ff6cc409854,356,FindNonDefaultConstructorOrConstruct.Wide
code-creation,BytecodeHandler,0,100925,0x7ff6cc4099d4,1108,CallAnyReceiver.Wide
code-creation,BytecodeHandler,0,100935,0x7ff6cc409e54,1108,CallProperty.Wide
code-creation,BytecodeHandler,0,100945,0x7ff6cc40a2d4,1020,CallProperty0.Wide
code-creation,BytecodeHandler,0,100955,0x7ff6cc40a6d4,1032,CallProperty1.Wide
code-creation,BytecodeHandler,0,100965,0x7ff6cc40ab14,1044,CallProperty2.Wide
code-creation,BytecodeHandler,0,100975,0x7ff6cc40af54,1004,CallUndefinedReceiver.Wide
code-creation,BytecodeHandler,0,100986,0x7ff6cc40b354,1044,CallUndefinedReceiver0.Wide
code-creation,BytecodeHandler,0,100996,0x7ff6cc40b794,1032,CallUndefinedReceiver1.Wide
code-creation,BytecodeHandler,0,101007,0x7ff6cc40bbd4,1052,CallUndefinedReceiver2.Wide
code-creation,BytecodeHandler,0,101017,0x7ff6cc40c014,1108,CallWithSpread.Wide
code-creation,BytecodeHandler,0,101027,0x7ff6cc40c494,132,CallRuntime.Wide
code-creation,BytecodeHandler,0,101038,0x7ff6cc40c554,172,CallRuntimeForPair.Wide
code-creation,BytecodeHandler,0,101048,0x7ff6cc40c614,84,CallJSRuntime.Wide
code-creation,BytecodeHandler,0,101058,0x7ff6cc40c694,1332,InvokeIntrinsic.Wide
code-creation,BytecodeHandler,0,101068,0x7ff6cc40cbd4,972,Construct.Wide
code-creation,BytecodeHandler,0,101078,0x7ff6cc40cfd4,460,ConstructWithSpread.Wide
code-creation,BytecodeHandler,0,101088,0x7ff6cc40d1d4,2212,TestEqual.Wide
code-creation,BytecodeHandler,0,101098,0x7ff6cc40da94,1344,TestEqualStrict.Wide
code-creation,BytecodeHandler,0,101108,0x7ff6cc40e014,1788,TestLessThan.Wide
code-creation,BytecodeHandler,0,101119,0x7ff6cc40e714,1788,TestGreaterThan.Wide
code-creation,BytecodeHandler,0,101129,0x7ff6cc40ee14,1788,TestLessThanOrEqual.Wide
code-creation,BytecodeHandler,0,101139,0x7ff6cc40f514,1788,TestGreaterThanOrEqual.Wide
code-creation,BytecodeHandler,0,101149,0x7ff6cc40fc14,892,TestInstanceOf.Wide
code-creation,BytecodeHandler,0,101159,0x7ff6cc40ff94,156,TestIn.Wide
code-creation,BytecodeHandler,0,101171,0x7ff6cc410054,120,ToName.Wide
code-creation,BytecodeHandler,0,101182,0x7ff6cc4100d4,224,ToNumber.Wide
code-creation,BytecodeHandler,0,101192,0x7ff6cc4101d4,248,ToNumeric.Wide
code-creation,BytecodeHandler,0,101202,0x7ff6cc4102d4,120,ToObject.Wide
code-creation,BytecodeHandler,0,101211,0x7ff6cc410354,400,CreateRegExpLiteral.Wide
code-creation,BytecodeHandler,0,101222,0x7ff6cc410514,1500,CreateArrayLiteral.Wide
code-creation,BytecodeHandler,0,101232,0x7ff6cc410b14,764,CreateEmptyArrayLiteral.Wide
code-creation,BytecodeHandler,0,101242,0x7ff6cc410e14,2312,CreateObjectLiteral.Wide
code-creation,BytecodeHandler,0,101252,0x7ff6cc411754,176,CloneObject.Wide
code-creation,BytecodeHandler,0,101262,0x7ff6cc411814,164,GetTemplateObject.Wide
code-creation,BytecodeHandler,0,101273,0x7ff6cc4118d4,336,CreateClosure.Wide
code-creation,BytecodeHandler,0,101283,0x7ff6cc411a54,120,CreateBlockContext.Wide
code-creation,BytecodeHandler,0,101293,0x7ff6cc411ad4,136,CreateCatchContext.Wide
code-creation,BytecodeHandler,0,101303,0x7ff6cc411b94,292,CreateFunctionContext.Wide
code-creation,BytecodeHandler,0,101313,0x7ff6cc411cd4,292,CreateEvalContext.Wide
code-creation,BytecodeHandler,0,101324,0x7ff6cc411e14,136,CreateWithContext.Wide
code-creation,BytecodeHandler,0,101334,0x7ff6cc411ed4,900,JumpLoop.Wide
code-creation,BytecodeHandler,0,101344,0x7ff6cc412294,44,Jump.Wide
code-creation,BytecodeHandler,0,101353,0x7ff6cc4122d4,56,JumpConstant.Wide
code-creation,BytecodeHandler,0,101363,0x7ff6cc412314,80,JumpIfNullConstant.Wide
code-creation,BytecodeHandler,0,101373,0x7ff6cc412394,80,JumpIfNotNullConstant.Wide
code-creation,BytecodeHandler,0,101384,0x7ff6cc412414,80,JumpIfUndefinedConstant.Wide
code-creation,BytecodeHandler,0,101394,0x7ff6cc412494,80,JumpIfNotUndefinedConstant.Wide
code-creation,BytecodeHandler,0,101405,0x7ff6cc412514,92,JumpIfUndefinedOrNullConstant.Wide
code-creation,BytecodeHandler,0,101415,0x7ff6cc412594,80,JumpIfTrueConstant.Wide
code-creation,BytecodeHandler,0,101426,0x7ff6cc412614,80,JumpIfFalseConstant.Wide
code-creation,BytecodeHandler,0,101436,0x7ff6cc412694,92,JumpIfJSReceiverConstant.Wide
code-creation,BytecodeHandler,0,101446,0x7ff6cc412714,164,JumpIfToBooleanTrueConstant.Wide
code-creation,BytecodeHandler,0,101457,0x7ff6cc4127d4,160,JumpIfToBooleanFalseConstant.Wide
code-creation,BytecodeHandler,0,101468,0x7ff6cc412894,148,JumpIfToBooleanTrue.Wide
code-creation,BytecodeHandler,0,101478,0x7ff6cc412954,148,JumpIfToBooleanFalse.Wide
code-creation,BytecodeHandler,0,101488,0x7ff6cc412a14,68,JumpIfTrue.Wide
code-creation,BytecodeHandler,0,101498,0x7ff6cc412a94,68,JumpIfFalse.Wide
code-creation,BytecodeHandler,0,101508,0x7ff6cc412b14,68,JumpIfNull.Wide
code-creation,BytecodeHandler,0,101518,0x7ff6cc412b94,68,JumpIfNotNull.Wide
code-creation,BytecodeHandler,0,101528,0x7ff6cc412c14,68,JumpIfUndefined.Wide
code-creation,BytecodeHandler,0,101538,0x7ff6cc412c94,68,JumpIfNotUndefined.Wide
code-creation,BytecodeHandler,0,101548,0x7ff6cc412d14,76,JumpIfUndefinedOrNull.Wide
code-creation,BytecodeHandler,0,101559,0x7ff6cc412d94,80,JumpIfJSReceiver.Wide
code-creation,BytecodeHandler,0,101569,0x7ff6cc412e14,108,SwitchOnSmiNoFeedback.Wide
code-creation,BytecodeHandler,0,101579,0x7ff6cc412e94,476,ForInEnumerate.Wide
code-creation,BytecodeHandler,0,101589,0x7ff6cc413094,260,ForInPrepare.Wide
code-creation,BytecodeHandler,0,101600,0x7ff6cc4131d4,64,ForInContinue.Wide
code-creation,BytecodeHandler,0,101610,0x7ff6cc413254,264,ForInNext.Wide
code-creation,BytecodeHandler,0,101620,0x7ff6cc413394,48,ForInStep.Wide
code-creation,BytecodeHandler,0,101630,0x7ff6cc4133d4,160,ThrowReferenceErrorIfHole.Wide
code-creation,BytecodeHandler,0,101640,0x7ff6cc413494,160,ThrowIfNotSuperConstructor.Wide
code-creation,BytecodeHandler,0,101651,0x7ff6cc413554,124,SwitchOnGeneratorState.Wide
code-creation,BytecodeHandler,0,101661,0x7ff6cc4135d4,528,SuspendGenerator.Wide
code-creation,BytecodeHandler,0,101671,0x7ff6cc413814,140,ResumeGenerator.Wide
code-creation,BytecodeHandler,0,101681,0x7ff6cc4138d4,168,GetIterator.Wide
code-creation,BytecodeHandler,0,101693,0x7ff6cc413994,128,IncBlockCounter.Wide
code-creation,BytecodeHandler,0,101704,0x7ff6cc413a54,56,Abort.Wide
code-creation,BytecodeHandler,0,101714,0x7ff6cc413a94,108,DebugBreak1.ExtraWide
code-creation,BytecodeHandler,0,101725,0x7ff6cc413b14,108,DebugBreak2.ExtraWide
code-creation,BytecodeHandler,0,101735,0x7ff6cc413b94,108,DebugBreak3.ExtraWide
code-creation,BytecodeHandler,0,101745,0x7ff6cc413c14,108,DebugBreak4.ExtraWide
code-creation,BytecodeHandler,0,101755,0x7ff6cc413c94,108,DebugBreak5.ExtraWide
code-creation,BytecodeHandler,0,101765,0x7ff6cc413d14,108,DebugBreak6.ExtraWide
code-creation,BytecodeHandler,0,101775,0x7ff6cc413d94,32,Ldar.ExtraWide
code-creation,BytecodeHandler,0,101785,0x7ff6cc413dd4,28,LdaSmi.ExtraWide
code-creation,BytecodeHandler,0,101795,0x7ff6cc413e14,32,LdaConstant.ExtraWide
code-creation,BytecodeHandler,0,101805,0x7ff6cc413e54,92,LdaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,101815,0x7ff6cc413ed4,92,LdaImmutableContextSlot.ExtraWide
code-creation,BytecodeHandler,0,101826,0x7ff6cc413f54,44,LdaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,101836,0x7ff6cc413f94,44,LdaImmutableCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,101847,0x7ff6cc413fd4,32,Star.ExtraWide
code-creation,BytecodeHandler,0,101857,0x7ff6cc414014,44,Mov.ExtraWide
code-creation,BytecodeHandler,0,101866,0x7ff6cc414054,40,PushContext.ExtraWide
code-creation,BytecodeHandler,0,101876,0x7ff6cc414094,36,PopContext.ExtraWide
code-creation,BytecodeHandler,0,101887,0x7ff6cc4140d4,52,TestReferenceEqual.ExtraWide
code-creation,BytecodeHandler,0,101897,0x7ff6cc414114,4524,LdaGlobal.ExtraWide
code-creation,BytecodeHandler,0,101907,0x7ff6cc4152d4,4448,LdaGlobalInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,101917,0x7ff6cc416454,164,StaGlobal.ExtraWide
code-creation,BytecodeHandler,0,101927,0x7ff6cc416514,156,StaContextSlot.ExtraWide
code-creation,BytecodeHandler,0,101937,0x7ff6cc4165d4,112,StaCurrentContextSlot.ExtraWide
code-creation,BytecodeHandler,0,101948,0x7ff6cc416654,128,LdaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,101958,0x7ff6cc416714,260,LdaLookupContextSlot.ExtraWide
code-creation,BytecodeHandler,0,101968,0x7ff6cc416854,4700,LdaLookupGlobalSlot.ExtraWide
code-creation,BytecodeHandler,0,101979,0x7ff6cc417ad4,128,LdaLookupSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,101992,0x7ff6cc417b94,260,LdaLookupContextSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,102003,0x7ff6cc417cd4,4648,LdaLookupGlobalSlotInsideTypeof.ExtraWide
code-creation,BytecodeHandler,0,102014,0x7ff6cc418f14,220,StaLookupSlot.ExtraWide
code-creation,BytecodeHandler,0,102024,0x7ff6cc419014,5280,GetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,102034,0x7ff6cc41a4d4,188,GetNamedPropertyFromSuper.ExtraWide
code-creation,BytecodeHandler,0,102045,0x7ff6cc41a594,156,GetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,102055,0x7ff6cc41a654,164,LdaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,102066,0x7ff6cc41a714,304,StaModuleVariable.ExtraWide
code-creation,BytecodeHandler,0,102076,0x7ff6cc41a854,176,SetNamedProperty.ExtraWide
code-creation,BytecodeHandler,0,102087,0x7ff6cc41a914,176,DefineNamedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,102098,0x7ff6cc41a9d4,168,SetKeyedProperty.ExtraWide
code-creation,BytecodeHandler,0,102108,0x7ff6cc41aa94,184,DefineKeyedOwnProperty.ExtraWide
code-creation,BytecodeHandler,0,102119,0x7ff6cc41ab54,168,StaInArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,102128,0x7ff6cc41ac14,200,DefineKeyedOwnPropertyInLiteral.ExtraWide
code-creation,BytecodeHandler,0,102138,0x7ff6cc41ad14,1472,Add.ExtraWide
code-creation,BytecodeHandler,0,102147,0x7ff6cc41b314,1436,Sub.ExtraWide
code-creation,BytecodeHandler,0,102156,0x7ff6cc41b8d4,1556,Mul.ExtraWide
code-creation,BytecodeHandler,0,102166,0x7ff6cc41bf14,1668,Div.ExtraWide
code-creation,BytecodeHandler,0,102176,0x7ff6cc41c5d4,1620,Mod.ExtraWide
code-creation,BytecodeHandler,0,102185,0x7ff6cc41cc54,980,Exp.ExtraWide
code-creation,BytecodeHandler,0,102195,0x7ff6cc41d054,1836,BitwiseOr.ExtraWide
code-creation,BytecodeHandler,0,102207,0x7ff6cc41d794,1840,BitwiseXor.ExtraWide
code-creation,BytecodeHandler,0,102219,0x7ff6cc41ded4,1836,BitwiseAnd.ExtraWide
code-creation,BytecodeHandler,0,102229,0x7ff6cc41e614,1268,ShiftLeft.ExtraWide
code-creation,BytecodeHandler,0,102239,0x7ff6cc41eb14,1268,ShiftRight.ExtraWide
code-creation,BytecodeHandler,0,102249,0x7ff6cc41f014,1332,ShiftRightLogical.ExtraWide
code-creation,BytecodeHandler,0,102260,0x7ff6cc41f554,1360,AddSmi.ExtraWide
code-creation,BytecodeHandler,0,102270,0x7ff6cc41fad4,1328,SubSmi.ExtraWide
code-creation,BytecodeHandler,0,102280,0x7ff6cc420014,1440,MulSmi.ExtraWide
code-creation,BytecodeHandler,0,102290,0x7ff6cc4205d4,1584,DivSmi.ExtraWide
code-creation,BytecodeHandler,0,102301,0x7ff6cc420c14,1452,ModSmi.ExtraWide
code-creation,BytecodeHandler,0,102310,0x7ff6cc4211d4,844,ExpSmi.ExtraWide
code-creation,BytecodeHandler,0,102321,0x7ff6cc421554,492,BitwiseOrSmi.ExtraWide
code-creation,BytecodeHandler,0,102331,0x7ff6cc421754,492,BitwiseXorSmi.ExtraWide
code-creation,BytecodeHandler,0,102341,0x7ff6cc421954,492,BitwiseAndSmi.ExtraWide
code-creation,BytecodeHandler,0,102351,0x7ff6cc421b54,516,ShiftLeftSmi.ExtraWide
code-creation,BytecodeHandler,0,102361,0x7ff6cc421d94,500,ShiftRightSmi.ExtraWide
code-creation,BytecodeHandler,0,102371,0x7ff6cc421f94,788,ShiftRightLogicalSmi.ExtraWide
code-creation,BytecodeHandler,0,102382,0x7ff6cc4222d4,616,Inc.ExtraWide
code-creation,BytecodeHandler,0,102392,0x7ff6cc422554,616,Dec.ExtraWide
code-creation,BytecodeHandler,0,102402,0x7ff6cc4227d4,636,Negate.ExtraWide
code-creation,BytecodeHandler,0,102412,0x7ff6cc422a54,516,BitwiseNot.ExtraWide
code-creation,BytecodeHandler,0,102422,0x7ff6cc422c94,124,DeletePropertyStrict.ExtraWide
code-creation,BytecodeHandler,0,102432,0x7ff6cc422d14,116,DeletePropertySloppy.ExtraWide
code-creation,BytecodeHandler,0,102442,0x7ff6cc422d94,40,GetSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,102453,0x7ff6cc422dd4,352,FindNonDefaultConstructorOrConstruct.ExtraWide
code-creation,BytecodeHandler,0,102464,0x7ff6cc422f54,1100,CallAnyReceiver.ExtraWide
code-creation,BytecodeHandler,0,102474,0x7ff6cc4233d4,1100,CallProperty.ExtraWide
code-creation,BytecodeHandler,0,102484,0x7ff6cc423854,1016,CallProperty0.ExtraWide
code-creation,BytecodeHandler,0,102494,0x7ff6cc423c54,1028,CallProperty1.ExtraWide
code-creation,BytecodeHandler,0,102505,0x7ff6cc424094,1036,CallProperty2.ExtraWide
code-creation,BytecodeHandler,0,102515,0x7ff6cc4244d4,1000,CallUndefinedReceiver.ExtraWide
code-creation,BytecodeHandler,0,102525,0x7ff6cc4248d4,1044,CallUndefinedReceiver0.ExtraWide
code-creation,BytecodeHandler,0,102536,0x7ff6cc424d14,1028,CallUndefinedReceiver1.ExtraWide
code-creation,BytecodeHandler,0,102547,0x7ff6cc425154,1048,CallUndefinedReceiver2.ExtraWide
code-creation,BytecodeHandler,0,102557,0x7ff6cc425594,1100,CallWithSpread.ExtraWide
code-creation,BytecodeHandler,0,102568,0x7ff6cc425a14,128,CallRuntime.ExtraWide
code-creation,BytecodeHandler,0,102578,0x7ff6cc425ad4,168,CallRuntimeForPair.ExtraWide
code-creation,BytecodeHandler,0,102588,0x7ff6cc425b94,80,CallJSRuntime.ExtraWide
code-creation,BytecodeHandler,0,102599,0x7ff6cc425c14,1328,InvokeIntrinsic.ExtraWide
code-creation,BytecodeHandler,0,102609,0x7ff6cc426154,964,Construct.ExtraWide
code-creation,BytecodeHandler,0,102619,0x7ff6cc426554,456,ConstructWithSpread.ExtraWide
code-creation,BytecodeHandler,0,102629,0x7ff6cc426754,2212,TestEqual.ExtraWide
code-creation,BytecodeHandler,0,102639,0x7ff6cc427014,1340,TestEqualStrict.ExtraWide
code-creation,BytecodeHandler,0,102650,0x7ff6cc427554,1788,TestLessThan.ExtraWide
code-creation,BytecodeHandler,0,102660,0x7ff6cc427c54,1788,TestGreaterThan.ExtraWide
code-creation,BytecodeHandler,0,102670,0x7ff6cc428354,1788,TestLessThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,102681,0x7ff6cc428a54,1788,TestGreaterThanOrEqual.ExtraWide
code-creation,BytecodeHandler,0,102691,0x7ff6cc429154,888,TestInstanceOf.ExtraWide
code-creation,BytecodeHandler,0,102701,0x7ff6cc4294d4,156,TestIn.ExtraWide
code-creation,BytecodeHandler,0,102713,0x7ff6cc429594,116,ToName.ExtraWide
code-creation,BytecodeHandler,0,102724,0x7ff6cc429614,220,ToNumber.ExtraWide
code-creation,BytecodeHandler,0,102734,0x7ff6cc429714,244,ToNumeric.ExtraWide
code-creation,BytecodeHandler,0,102745,0x7ff6cc429814,116,ToObject.ExtraWide
code-creation,BytecodeHandler,0,102755,0x7ff6cc429894,396,CreateRegExpLiteral.ExtraWide
code-creation,BytecodeHandler,0,102765,0x7ff6cc429a54,1500,CreateArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,102776,0x7ff6cc42a054,764,CreateEmptyArrayLiteral.ExtraWide
code-creation,BytecodeHandler,0,102786,0x7ff6cc42a354,2312,CreateObjectLiteral.ExtraWide
code-creation,BytecodeHandler,0,102797,0x7ff6cc42ac94,172,CloneObject.ExtraWide
code-creation,BytecodeHandler,0,102807,0x7ff6cc42ad54,164,GetTemplateObject.ExtraWide
code-creation,BytecodeHandler,0,102817,0x7ff6cc42ae14,332,CreateClosure.ExtraWide
code-creation,BytecodeHandler,0,102827,0x7ff6cc42af94,120,CreateBlockContext.ExtraWide
code-creation,BytecodeHandler,0,102838,0x7ff6cc42b014,132,CreateCatchContext.ExtraWide
code-creation,BytecodeHandler,0,102848,0x7ff6cc42b0d4,288,CreateFunctionContext.ExtraWide
code-creation,BytecodeHandler,0,102859,0x7ff6cc42b214,288,CreateEvalContext.ExtraWide
code-creation,BytecodeHandler,0,102869,0x7ff6cc42b354,132,CreateWithContext.ExtraWide
code-creation,BytecodeHandler,0,102879,0x7ff6cc42b414,896,JumpLoop.ExtraWide
code-creation,BytecodeHandler,0,102889,0x7ff6cc42b7d4,44,Jump.ExtraWide
code-creation,BytecodeHandler,0,102899,0x7ff6cc42b814,56,JumpConstant.ExtraWide
code-creation,BytecodeHandler,0,102909,0x7ff6cc42b854,80,JumpIfNullConstant.ExtraWide
code-creation,BytecodeHandler,0,102920,0x7ff6cc42b8d4,80,JumpIfNotNullConstant.ExtraWide
code-creation,BytecodeHandler,0,102930,0x7ff6cc42b954,80,JumpIfUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,102941,0x7ff6cc42b9d4,80,JumpIfNotUndefinedConstant.ExtraWide
code-creation,BytecodeHandler,0,102952,0x7ff6cc42ba54,88,JumpIfUndefinedOrNullConstant.ExtraWide
code-creation,BytecodeHandler,0,102963,0x7ff6cc42bad4,80,JumpIfTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,102974,0x7ff6cc42bb54,80,JumpIfFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,102985,0x7ff6cc42bbd4,92,JumpIfJSReceiverConstant.ExtraWide
code-creation,BytecodeHandler,0,102996,0x7ff6cc42bc54,164,JumpIfToBooleanTrueConstant.ExtraWide
code-creation,BytecodeHandler,0,103007,0x7ff6cc42bd14,160,JumpIfToBooleanFalseConstant.ExtraWide
code-creation,BytecodeHandler,0,103018,0x7ff6cc42bdd4,144,JumpIfToBooleanTrue.ExtraWide
code-creation,BytecodeHandler,0,103028,0x7ff6cc42be94,144,JumpIfToBooleanFalse.ExtraWide
code-creation,BytecodeHandler,0,103038,0x7ff6cc42bf54,68,JumpIfTrue.ExtraWide
code-creation,BytecodeHandler,0,103048,0x7ff6cc42bfd4,68,JumpIfFalse.ExtraWide
code-creation,BytecodeHandler,0,103059,0x7ff6cc42c054,68,JumpIfNull.ExtraWide
code-creation,BytecodeHandler,0,103069,0x7ff6cc42c0d4,68,JumpIfNotNull.ExtraWide
code-creation,BytecodeHandler,0,103079,0x7ff6cc42c154,68,JumpIfUndefined.ExtraWide
code-creation,BytecodeHandler,0,103089,0x7ff6cc42c1d4,68,JumpIfNotUndefined.ExtraWide
code-creation,BytecodeHandler,0,103099,0x7ff6cc42c254,76,JumpIfUndefinedOrNull.ExtraWide
code-creation,BytecodeHandler,0,103109,0x7ff6cc42c2d4,76,JumpIfJSReceiver.ExtraWide
code-creation,BytecodeHandler,0,103119,0x7ff6cc42c354,104,SwitchOnSmiNoFeedback.ExtraWide
code-creation,BytecodeHandler,0,103130,0x7ff6cc42c3d4,476,ForInEnumerate.ExtraWide
code-creation,BytecodeHandler,0,103140,0x7ff6cc42c5d4,256,ForInPrepare.ExtraWide
code-creation,BytecodeHandler,0,103150,0x7ff6cc42c714,64,ForInContinue.ExtraWide
code-creation,BytecodeHandler,0,103160,0x7ff6cc42c794,260,ForInNext.ExtraWide
code-creation,BytecodeHandler,0,103170,0x7ff6cc42c8d4,44,ForInStep.ExtraWide
code-creation,BytecodeHandler,0,103182,0x7ff6cc42c914,160,ThrowReferenceErrorIfHole.ExtraWide
code-creation,BytecodeHandler,0,103193,0x7ff6cc42c9d4,160,ThrowIfNotSuperConstructor.ExtraWide
code-creation,BytecodeHandler,0,103204,0x7ff6cc42ca94,124,SwitchOnGeneratorState.ExtraWide
code-creation,BytecodeHandler,0,103216,0x7ff6cc42cb14,524,SuspendGenerator.ExtraWide
code-creation,BytecodeHandler,0,103228,0x7ff6cc42cd54,136,ResumeGenerator.ExtraWide
code-creation,BytecodeHandler,0,103238,0x7ff6cc42ce14,164,GetIterator.ExtraWide
code-creation,BytecodeHandler,0,103248,0x7ff6cc42ced4,124,IncBlockCounter.ExtraWide
code-creation,BytecodeHandler,0,103259,0x7ff6cc42cf54,56,Abort.ExtraWide
tick,0x7ff863c0d0e4,103287,0,0x0,6
new,MemoryChunk,0x23fb6a00000,262144
new,MemoryChunk,0x2334a1c0000,262144
new,MemoryChunk,0xcb002c0000,262144
new,MemoryChunk,0xea2f00000,262144
new,MemoryChunk,0x2bcf6ac0000,262144
tick,0x7ff6cb6ac90a,109080,0,0x0,6
code-creation,Eval,10,109600,0x2bcf6affc5e,5, node:internal/main/run_main_module:1:1,0x2bcf6affb18,~
script-source,79,node:internal/main/run_main_module,'use strict';\x0d\n\x0d\nconst { RegExpPrototypeExec } = primordials;\x0d\n\x0d\nconst {\x0d\n  prepareMainThreadExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\nconst mainEntry = prepareMainThreadExecution(true);\x0d\n\x0d\nmarkBootstrapComplete();\x0d\n\x0d\n// Necessary to reset RegExp statics before user code runs.\x0d\nRegExpPrototypeExec(/^/\x2C '');\x0d\n\x0d\nif (getOptionValue('--experimental-default-type') === 'module') {\x0d\n  require('internal/modules/run_main').executeUserEntryPoint(mainEntry);\x0d\n} else {\x0d\n  /**\x0d\n   * To support legacy monkey-patching of `Module.runMain`\x2C we call `runMain` here to have the CommonJS loader begin\x0d\n   * the execution of the main entry point\x2C even if the ESM loader immediately takes over because the main entry is an\x0d\n   * ES module or one of the other opt-in conditions (such as the use of `--import`) are met. Users can monkey-patch\x0d\n   * before the main entry point is loaded by doing so via scripts loaded through `--require`. This monkey-patchability\x0d\n   * is undesirable and is removed in `--experimental-default-type=module` mode.\x0d\n   */\x0d\n  require('internal/modules/cjs/loader').Module.runMain(mainEntry);\x0d\n}\x0d\n
code-source-info,0x2bcf6affc5e,79,0,1211,C0O0C4O1211,,
code-creation,JS,10,109840,0x2bcf6affd4e,120, node:internal/main/run_main_module:1:1,0x2bcf6affbd8,~
code-source-info,0x2bcf6affd4e,79,0,1211,C0O25C5O135C8O135C13O76C18O107C23O206C26O206C31O187C36O256C38O256C43O293C46O382C55O382C60O415C63O419C70O465C75O484C78O484C83O520C88O521C95O1141C98O1141C103O1179C108O1186C113O1187C119O1210,,
new,MemoryChunk,0x1c66f8c0000,262144
code-creation,JS,10,110852,0xea2f3f126,45,prepareMainThreadExecution node:internal/process/pre_execution:53:36,0x3fcdefbed00,~
script-source,67,node:internal/process/pre_execution,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  Date\x2C\x0d\n  DatePrototypeGetDate\x2C\x0d\n  DatePrototypeGetFullYear\x2C\x0d\n  DatePrototypeGetHours\x2C\x0d\n  DatePrototypeGetMinutes\x2C\x0d\n  DatePrototypeGetMonth\x2C\x0d\n  DatePrototypeGetSeconds\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  SafeMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolDispose\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n  refreshOptions\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n} = require('internal/options');\x0d\nconst { reconnectZeroFillToggle } = require('internal/buffer');\x0d\nconst {\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_MANIFEST_ASSERT_INTEGRITY\x2C\x0d\n  ERR_NO_CRYPTO\x2C\x0d\n  ERR_MISSING_OPTION\x2C\x0d\n  ERR_ACCESS_DENIED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction prepareMainThreadExecution(expandArgv1 = false\x2C initializeModules = true) {\x0d\n  return prepareExecution({\x0d\n    expandArgv1\x2C\x0d\n    initializeModules\x2C\x0d\n    isMainThread: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareWorkerThreadExecution() {\x0d\n  prepareExecution({\x0d\n    expandArgv1: false\x2C\x0d\n    initializeModules: false\x2C  // Will need to initialize it after policy setup\x0d\n    isMainThread: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction prepareShadowRealmExecution() {\x0d\n  // Patch the process object with legacy properties and normalizations.\x0d\n  // Do not expand argv1 as it is not available in ShadowRealm.\x0d\n  patchProcessObject(false);\x0d\n  setupDebugEnv();\x0d\n\x0d\n  // Disable custom loaders in ShadowRealm.\x0d\n  setupUserModules(true);\x0d\n  const {\x0d\n    privateSymbols: {\x0d\n      host_defined_option_symbol\x2C\x0d\n    }\x2C\x0d\n  } = internalBinding('util');\x0d\n  const {\x0d\n    vm_dynamic_import_default_internal\x2C\x0d\n  } = internalBinding('symbols');\x0d\n\x0d\n  // For ShadowRealm.prototype.importValue()\x2C the referrer name is\x0d\n  // always null\x2C so the native ImportModuleDynamically() callback would\x0d\n  // always fallback to look up the host-defined option from the\x0d\n  // global object using host_defined_option_symbol. Using\x0d\n  // vm_dynamic_import_default_internal as the host-defined option\x0d\n  // instructs the JS-land importModuleDynamicallyCallback() to\x0d\n  // proxy the request to defaultImportModuleDynamically().\x0d\n  globalThis[host_defined_option_symbol] =\x0d\n    vm_dynamic_import_default_internal;\x0d\n}\x0d\n\x0d\nfunction prepareExecution(options) {\x0d\n  const { expandArgv1\x2C initializeModules\x2C isMainThread } = options;\x0d\n\x0d\n  refreshRuntimeOptions();\x0d\n  reconnectZeroFillToggle();\x0d\n\x0d\n  // Patch the process object and get the resolved main entry point.\x0d\n  const mainEntry = patchProcessObject(expandArgv1);\x0d\n  setupTraceCategoryState();\x0d\n  setupInspectorHooks();\x0d\n  setupWarningHandler();\x0d\n  setupUndici();\x0d\n  setupWebCrypto();\x0d\n  setupCustomEvent();\x0d\n  setupCodeCoverage();\x0d\n  setupDebugEnv();\x0d\n  // Process initial diagnostic reporting configuration\x2C if present.\x0d\n  initializeReport();\x0d\n\x0d\n  // Load permission system API\x0d\n  initializePermission();\x0d\n\x0d\n  initializeSourceMapsHandlers();\x0d\n  initializeDeprecations();\x0d\n\x0d\n  require('internal/dns/utils').initializeDns();\x0d\n\x0d\n  setupSymbolDisposePolyfill();\x0d\n\x0d\n  if (isMainThread) {\x0d\n    assert(internalBinding('worker').isMainThread);\x0d\n    // Worker threads will get the manifest in the message handler.\x0d\n    const policy = readPolicyFromDisk();\x0d\n    if (policy) {\x0d\n      require('internal/process/policy')\x0d\n        .setup(policy.manifestSrc\x2C policy.manifestURL);\x0d\n    }\x0d\n\x0d\n    // Print stack trace on `SIGINT` if option `--trace-sigint` presents.\x0d\n    setupStacktracePrinterOnSigint();\x0d\n    initializeReportSignalHandlers();  // Main-thread-only.\x0d\n    initializeHeapSnapshotSignalHandlers();\x0d\n    // If the process is spawned with env NODE_CHANNEL_FD\x2C it's probably\x0d\n    // spawned by our child_process module\x2C then initialize IPC.\x0d\n    // This attaches some internal event listeners and creates:\x0d\n    // process.send()\x2C process.channel\x2C process.connected\x2C\x0d\n    // process.disconnect().\x0d\n    setupChildProcessIpcChannel();\x0d\n    // If this is a worker in cluster mode\x2C start up the communication\x0d\n    // channel. This needs to be done before any user code gets executed\x0d\n    // (including preload modules).\x0d\n    initializeClusterIPC();\x0d\n\x0d\n    // TODO(joyeecheung): do this for worker threads as well.\x0d\n    require('internal/v8/startup_snapshot').runDeserializeCallbacks();\x0d\n  } else {\x0d\n    assert(!internalBinding('worker').isMainThread);\x0d\n    // The setup should be called in LOAD_SCRIPT message handler.\x0d\n    assert(!initializeModules);\x0d\n  }\x0d\n\x0d\n  if (initializeModules) {\x0d\n    setupUserModules();\x0d\n  }\x0d\n\x0d\n  return mainEntry;\x0d\n}\x0d\n\x0d\nfunction setupSymbolDisposePolyfill() {\x0d\n  // TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\x0d\n  // eslint-disable-next-line node-core/prefer-primordials\x0d\n  if (typeof Symbol.dispose !== 'symbol') {\x0d\n    ObjectDefineProperty(Symbol\x2C 'dispose'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: SymbolDispose\x2C\x0d\n      writable: false\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // eslint-disable-next-line node-core/prefer-primordials\x0d\n  if (typeof Symbol.asyncDispose !== 'symbol') {\x0d\n    ObjectDefineProperty(Symbol\x2C 'asyncDispose'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      value: SymbolAsyncDispose\x2C\x0d\n      writable: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupUserModules(forceDefaultLoader = false) {\x0d\n  initializeCJSLoader();\x0d\n  initializeESMLoader(forceDefaultLoader);\x0d\n  const {\x0d\n    hasStartedUserCJSExecution\x2C\x0d\n    hasStartedUserESMExecution\x2C\x0d\n  } = require('internal/modules/helpers');\x0d\n  assert(!hasStartedUserCJSExecution());\x0d\n  assert(!hasStartedUserESMExecution());\x0d\n  // Do not enable preload modules if custom loaders are disabled.\x0d\n  // For example\x2C loader workers are responsible for doing this themselves.\x0d\n  // And preload modules are not supported in ShadowRealm as well.\x0d\n  if (!forceDefaultLoader) {\x0d\n    loadPreloadModules();\x0d\n  }\x0d\n  // Need to be done after --require setup.\x0d\n  initializeFrozenIntrinsics();\x0d\n}\x0d\n\x0d\nfunction refreshRuntimeOptions() {\x0d\n  refreshOptions();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Patch the process object with legacy properties and normalizations.\x0d\n * Replace `process.argv[0]` with `process.execPath`\x2C preserving the original `argv[0]` value as `process.argv0`.\x0d\n * Replace `process.argv[1]` with the resolved absolute file path of the entry point\x2C if found.\x0d\n * @param {boolean} expandArgv1 - Whether to replace `process.argv[1]` with the resolved absolute file path of\x0d\n * the main entry point.\x0d\n */\x0d\nfunction patchProcessObject(expandArgv1) {\x0d\n  const binding = internalBinding('process_methods');\x0d\n  binding.patchProcessObject(process);\x0d\n\x0d\n  // Since we replace process.argv[0] below\x2C preserve the original value in case the user needs it.\x0d\n  ObjectDefineProperty(process\x2C 'argv0'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    // Only set it to true during snapshot building.\x0d\n    configurable: isBuildingSnapshot()\x2C\x0d\n    value: process.argv[0]\x2C\x0d\n  });\x0d\n\x0d\n  process.exitCode = undefined;\x0d\n  process._exiting = false;\x0d\n  process.argv[0] = process.execPath;\x0d\n\x0d\n  /** @type {string} */\x0d\n  let mainEntry;\x0d\n  // If requested\x2C update process.argv[1] to replace whatever the user provided with the resolved absolute file path of\x0d\n  // the entry point.\x0d\n  if (expandArgv1 && process.argv[1] &&\x0d\n      !StringPrototypeStartsWith(process.argv[1]\x2C '-')) {\x0d\n    // Expand process.argv[1] into a full path.\x0d\n    const path = require('path');\x0d\n    try {\x0d\n      mainEntry = path.resolve(process.argv[1]);\x0d\n      process.argv[1] = mainEntry;\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // We need to initialize the global console here again with process.stdout\x0d\n  // and friends for snapshot deserialization.\x0d\n  const globalConsole = require('internal/console/global');\x0d\n  const { initializeGlobalConsole } = require('internal/console/constructor');\x0d\n  initializeGlobalConsole(globalConsole);\x0d\n\x0d\n  // TODO(joyeecheung): most of these should be deprecated and removed\x2C\x0d\n  // except some that we need to be able to mutate during run time.\x0d\n  addReadOnlyProcessAlias('_eval'\x2C '--eval');\x0d\n  addReadOnlyProcessAlias('_print_eval'\x2C '--print');\x0d\n  addReadOnlyProcessAlias('_syntax_check_only'\x2C '--check');\x0d\n  addReadOnlyProcessAlias('_forceRepl'\x2C '--interactive');\x0d\n  addReadOnlyProcessAlias('_preload_modules'\x2C '--require');\x0d\n  addReadOnlyProcessAlias('noDeprecation'\x2C '--no-deprecation');\x0d\n  addReadOnlyProcessAlias('noProcessWarnings'\x2C '--no-warnings');\x0d\n  addReadOnlyProcessAlias('traceProcessWarnings'\x2C '--trace-warnings');\x0d\n  addReadOnlyProcessAlias('throwDeprecation'\x2C '--throw-deprecation');\x0d\n  addReadOnlyProcessAlias('profProcess'\x2C '--prof-process');\x0d\n  addReadOnlyProcessAlias('traceDeprecation'\x2C '--trace-deprecation');\x0d\n  addReadOnlyProcessAlias('_breakFirstLine'\x2C '--inspect-brk'\x2C false);\x0d\n  addReadOnlyProcessAlias('_breakNodeFirstLine'\x2C '--inspect-brk-node'\x2C false);\x0d\n\x0d\n  return mainEntry;\x0d\n}\x0d\n\x0d\nfunction addReadOnlyProcessAlias(name\x2C option\x2C enumerable = true) {\x0d\n  const value = getOptionValue(option);\x0d\n  if (value) {\x0d\n    ObjectDefineProperty(process\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      value\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupWarningHandler() {\x0d\n  const {\x0d\n    onWarning\x2C\x0d\n    resetForSerialization\x2C\x0d\n  } = require('internal/process/warning');\x0d\n  if (getOptionValue('--warnings') &&\x0d\n    process.env.NODE_NO_WARNINGS !== '1') {\x0d\n    process.on('warning'\x2C onWarning);\x0d\n\x0d\n    // The code above would add the listener back during deserialization\x2C\x0d\n    // if applicable.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      addSerializeCallback(() => {\x0d\n        process.removeListener('warning'\x2C onWarning);\x0d\n        resetForSerialization();\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://fetch.spec.whatwg.org/\x0d\n// https://websockets.spec.whatwg.org/\x0d\nfunction setupUndici() {\x0d\n  if (getOptionValue('--no-experimental-fetch')) {\x0d\n    delete globalThis.fetch;\x0d\n    delete globalThis.FormData;\x0d\n    delete globalThis.Headers;\x0d\n    delete globalThis.Request;\x0d\n    delete globalThis.Response;\x0d\n  }\x0d\n\x0d\n  if (!getEmbedderOptions().noBrowserGlobals && getOptionValue('--experimental-websocket')) {\x0d\n    exposeLazyInterfaces(globalThis\x2C 'internal/deps/undici/undici'\x2C ['WebSocket']);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(aduh95): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//               removed.\x0d\nfunction setupWebCrypto() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-webcrypto')) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (internalBinding('config').hasOpenSSL) {\x0d\n    defineReplaceableLazyAttribute(\x0d\n      globalThis\x2C\x0d\n      'internal/crypto/webcrypto'\x2C\x0d\n      ['crypto']\x2C\x0d\n      false\x2C\x0d\n      function cryptoThisCheck() {\x0d\n        if (this !== globalThis && this != null)\x0d\n          throw new ERR_INVALID_THIS(\x0d\n            'nullish or must be the global object');\x0d\n      }\x2C\x0d\n    );\x0d\n    exposeLazyInterfaces(\x0d\n      globalThis\x2C 'internal/crypto/webcrypto'\x2C\x0d\n      ['Crypto'\x2C 'CryptoKey'\x2C 'SubtleCrypto']\x2C\x0d\n    );\x0d\n  } else {\x0d\n    ObjectDefineProperty(globalThis\x2C 'crypto'\x2C\x0d\n                         { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor({\x0d\n                           get crypto() {\x0d\n                             throw new ERR_NO_CRYPTO();\x0d\n                           }\x2C\x0d\n                         }\x2C 'crypto') });\x0d\n\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupCodeCoverage() {\x0d\n  // Resolve the coverage directory to an absolute path\x2C and\x0d\n  // overwrite process.env so that the original path gets passed\x0d\n  // to child processes even when they switch cwd. Don't do anything if the\x0d\n  // --experimental-test-coverage flag is present\x2C as the test runner will\x0d\n  // handle coverage.\x0d\n  if (process.env.NODE_V8_COVERAGE &&\x0d\n      !getOptionValue('--experimental-test-coverage')) {\x0d\n    process.env.NODE_V8_COVERAGE =\x0d\n      setupCoverageHooks(process.env.NODE_V8_COVERAGE);\x0d\n  }\x0d\n}\x0d\n\x0d\n// TODO(daeyeon): move this to internal/bootstrap/web/* when the CLI flag is\x0d\n//                removed.\x0d\nfunction setupCustomEvent() {\x0d\n  if (getEmbedderOptions().noBrowserGlobals ||\x0d\n      getOptionValue('--no-experimental-global-customevent')) {\x0d\n    return;\x0d\n  }\x0d\n  const { CustomEvent } = require('internal/event_target');\x0d\n  exposeInterface(globalThis\x2C 'CustomEvent'\x2C CustomEvent);\x0d\n}\x0d\n\x0d\nfunction setupStacktracePrinterOnSigint() {\x0d\n  if (!getOptionValue('--trace-sigint')) {\x0d\n    return;\x0d\n  }\x0d\n  const { SigintWatchdog } = require('internal/watchdog');\x0d\n\x0d\n  const watchdog = new SigintWatchdog();\x0d\n  watchdog.start();\x0d\n}\x0d\n\x0d\nfunction initializeReport() {\x0d\n  ObjectDefineProperty(process\x2C 'report'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      const { report } = require('internal/process/report');\x0d\n      return report;\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupDebugEnv() {\x0d\n  require('internal/util/debuglog').initializeDebugEnv(process.env.NODE_DEBUG);\x0d\n  if (getOptionValue('--expose-internals')) {\x0d\n    require('internal/bootstrap/realm').BuiltinModule.exposeInternals();\x0d\n  }\x0d\n}\x0d\n\x0d\n// This has to be called after initializeReport() is called\x0d\nfunction initializeReportSignalHandlers() {\x0d\n  if (getOptionValue('--report-on-signal')) {\x0d\n    const { addSignalHandler } = require('internal/process/report');\x0d\n    addSignalHandler();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeHeapSnapshotSignalHandlers() {\x0d\n  const signal = getOptionValue('--heapsnapshot-signal');\x0d\n  const diagnosticDir = getOptionValue('--diagnostic-dir');\x0d\n\x0d\n  if (!signal)\x0d\n    return;\x0d\n\x0d\n  require('internal/validators').validateSignalName(signal);\x0d\n  const { writeHeapSnapshot } = require('v8');\x0d\n\x0d\n  function doWriteHeapSnapshot() {\x0d\n    const heapSnapshotFilename = getHeapSnapshotFilename(diagnosticDir);\x0d\n    writeHeapSnapshot(heapSnapshotFilename);\x0d\n  }\x0d\n  process.on(signal\x2C doWriteHeapSnapshot);\x0d\n\x0d\n  // The code above would add the listener back during deserialization\x2C\x0d\n  // if applicable.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(() => {\x0d\n      process.removeListener(signal\x2C doWriteHeapSnapshot);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupTraceCategoryState() {\x0d\n  const { isTraceCategoryEnabled } = internalBinding('trace_events');\x0d\n  const { toggleTraceCategoryState } = require('internal/process/per_thread');\x0d\n  toggleTraceCategoryState(isTraceCategoryEnabled('node.async_hooks'));\x0d\n}\x0d\n\x0d\nfunction setupInspectorHooks() {\x0d\n  // If Debugger.setAsyncCallStackDepth is sent during bootstrap\x2C\x0d\n  // we cannot immediately call into JS to enable the hooks\x2C which could\x0d\n  // interrupt the JS execution of bootstrap. So instead we save the\x0d\n  // notification in the inspector agent if it's sent in the middle of\x0d\n  // bootstrap\x2C and process the notification later here.\x0d\n  if (internalBinding('config').hasInspector) {\x0d\n    const {\x0d\n      enable\x2C\x0d\n      disable\x2C\x0d\n    } = require('internal/inspector_async_hook');\x0d\n    internalBinding('inspector').registerAsyncHook(enable\x2C disable);\x0d\n  }\x0d\n}\x0d\n\x0d\n// In general deprecations are initialized wherever the APIs are implemented\x2C\x0d\n// this is used to deprecate APIs implemented in C++ where the deprecation\x0d\n// utilities are not easily accessible.\x0d\nfunction initializeDeprecations() {\x0d\n  const { deprecate } = require('internal/util');\x0d\n  const pendingDeprecation = getOptionValue('--pending-deprecation');\x0d\n\x0d\n  // DEP0103: access to `process.binding('util').isX` type checkers\x0d\n  // TODO(addaleax): Turn into a full runtime deprecation.\x0d\n  const utilBinding = internalBinding('util');\x0d\n  const types = require('internal/util/types');\x0d\n  for (const name of [\x0d\n    'isArrayBuffer'\x2C\x0d\n    'isArrayBufferView'\x2C\x0d\n    'isAsyncFunction'\x2C\x0d\n    'isDataView'\x2C\x0d\n    'isDate'\x2C\x0d\n    'isExternal'\x2C\x0d\n    'isMap'\x2C\x0d\n    'isMapIterator'\x2C\x0d\n    'isNativeError'\x2C\x0d\n    'isPromise'\x2C\x0d\n    'isRegExp'\x2C\x0d\n    'isSet'\x2C\x0d\n    'isSetIterator'\x2C\x0d\n    'isTypedArray'\x2C\x0d\n    'isUint8Array'\x2C\x0d\n    'isAnyArrayBuffer'\x2C\x0d\n  ]) {\x0d\n    utilBinding[name] = pendingDeprecation ?\x0d\n      deprecate(types[name]\x2C\x0d\n                'Accessing native typechecking bindings of Node ' +\x0d\n                'directly is deprecated. ' +\x0d\n                `Please use \\`util.types.${name}\\` instead.`\x2C\x0d\n                'DEP0103') :\x0d\n      types[name];\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): this is a legacy property exposed to process.\x0d\n  // Now that we use the config binding to carry this information\x2C remove\x0d\n  // it from the process. We may consider exposing it properly in\x0d\n  // process.features.\x0d\n  const { noBrowserGlobals } = internalBinding('config');\x0d\n  if (noBrowserGlobals) {\x0d\n    ObjectDefineProperty(process\x2C '_noBrowserGlobals'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      value: noBrowserGlobals\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (pendingDeprecation) {\x0d\n    process.binding = deprecate(process.binding\x2C\x0d\n                                'process.binding() is deprecated. ' +\x0d\n                                'Please use public APIs instead.'\x2C 'DEP0111');\x0d\n\x0d\n    process._tickCallback = deprecate(process._tickCallback\x2C\x0d\n                                      'process._tickCallback() is deprecated'\x2C\x0d\n                                      'DEP0134');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setupChildProcessIpcChannel() {\x0d\n  if (process.env.NODE_CHANNEL_FD) {\x0d\n    const assert = require('internal/assert');\x0d\n\x0d\n    const fd = NumberParseInt(process.env.NODE_CHANNEL_FD\x2C 10);\x0d\n    assert(fd >= 0);\x0d\n\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_CHANNEL_FD;\x0d\n\x0d\n    const serializationMode =\x0d\n      process.env.NODE_CHANNEL_SERIALIZATION_MODE || 'json';\x0d\n    delete process.env.NODE_CHANNEL_SERIALIZATION_MODE;\x0d\n\x0d\n    require('child_process')._forkChild(fd\x2C serializationMode);\x0d\n    assert(process.send);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeClusterIPC() {\x0d\n  if (process.argv[1] && process.env.NODE_UNIQUE_ID) {\x0d\n    const cluster = require('cluster');\x0d\n    cluster._setupWorker();\x0d\n    // Make sure it's not accidentally inherited by child processes.\x0d\n    delete process.env.NODE_UNIQUE_ID;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializePermission() {\x0d\n  const experimentalPermission = getOptionValue('--experimental-permission');\x0d\n  if (experimentalPermission) {\x0d\n    process.binding = function binding(_module) {\x0d\n      throw new ERR_ACCESS_DENIED('process.binding');\x0d\n    };\x0d\n    // Guarantee path module isn't monkey-patched to bypass permission model\x0d\n    ObjectFreeze(require('path'));\x0d\n    process.emitWarning('Permission is an experimental feature'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { has\x2C deny } = require('internal/process/permission');\x0d\n    const warnFlags = [\x0d\n      '--allow-addons'\x2C\x0d\n      '--allow-child-process'\x2C\x0d\n      '--allow-worker'\x2C\x0d\n    ];\x0d\n    for (const flag of warnFlags) {\x0d\n      if (getOptionValue(flag)) {\x0d\n        process.emitWarning(\x0d\n          `The flag ${flag} must be used with extreme caution. ` +\x0d\n        'It could invalidate the permission model.'\x2C 'SecurityWarning');\x0d\n      }\x0d\n    }\x0d\n    const warnCommaFlags = [\x0d\n      '--allow-fs-read'\x2C\x0d\n      '--allow-fs-write'\x2C\x0d\n    ];\x0d\n    for (const flag of warnCommaFlags) {\x0d\n      const value = getOptionValue(flag);\x0d\n      if (value.length === 1 && value[0].includes('\x2C')) {\x0d\n        process.emitWarning(\x0d\n          `The ${flag} CLI flag has changed. ` +\x0d\n        'Passing a comma-separated list of paths is no longer valid. ' +\x0d\n        'Documentation can be found at ' +\x0d\n        'https://nodejs.org/api/permissions.html#file-system-permissions'\x2C\x0d\n          'Warning'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(process\x2C 'permission'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: false\x2C\x0d\n      value: {\x0d\n        has\x2C\x0d\n        deny\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  } else {\x0d\n    const availablePermissionFlags = [\x0d\n      '--allow-fs-read'\x2C\x0d\n      '--allow-fs-write'\x2C\x0d\n      '--allow-addons'\x2C\x0d\n      '--allow-child-process'\x2C\x0d\n      '--allow-worker'\x2C\x0d\n    ];\x0d\n    ArrayPrototypeForEach(availablePermissionFlags\x2C (flag) => {\x0d\n      const value = getOptionValue(flag);\x0d\n      if (value.length) {\x0d\n        throw new ERR_MISSING_OPTION('--experimental-permission');\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction readPolicyFromDisk() {\x0d\n  const experimentalPolicy = getOptionValue('--experimental-policy');\x0d\n  if (experimentalPolicy) {\x0d\n    process.emitWarning('Policies are experimental.'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    const { pathToFileURL\x2C URL } = require('internal/url');\x0d\n    // URL here as it is slightly different parsing\x0d\n    // no bare specifiers for now\x0d\n    let manifestURL;\x0d\n    if (require('path').isAbsolute(experimentalPolicy)) {\x0d\n      manifestURL = pathToFileURL(experimentalPolicy);\x0d\n    } else {\x0d\n      const cwdURL = pathToFileURL(process.cwd());\x0d\n      cwdURL.pathname += '/';\x0d\n      manifestURL = new URL(experimentalPolicy\x2C cwdURL);\x0d\n    }\x0d\n    const fs = require('fs');\x0d\n    const src = fs.readFileSync(manifestURL\x2C 'utf8');\x0d\n    const experimentalPolicyIntegrity = getOptionValue('--policy-integrity');\x0d\n    if (experimentalPolicyIntegrity) {\x0d\n      const SRI = require('internal/policy/sri');\x0d\n      const { createHash\x2C timingSafeEqual } = require('crypto');\x0d\n      const realIntegrities = new SafeMap();\x0d\n      const integrityEntries = SRI.parse(experimentalPolicyIntegrity);\x0d\n      let foundMatch = false;\x0d\n      for (let i = 0; i < integrityEntries.length; i++) {\x0d\n        const {\x0d\n          algorithm\x2C\x0d\n          value: expected\x2C\x0d\n        } = integrityEntries[i];\x0d\n        const hash = createHash(algorithm);\x0d\n        hash.update(src);\x0d\n        const digest = hash.digest();\x0d\n        if (digest.length === expected.length &&\x0d\n          timingSafeEqual(digest\x2C expected)) {\x0d\n          foundMatch = true;\x0d\n          break;\x0d\n        }\x0d\n        realIntegrities.set(algorithm\x2C digest.toString('base64'));\x0d\n      }\x0d\n      if (!foundMatch) {\x0d\n        throw new ERR_MANIFEST_ASSERT_INTEGRITY(manifestURL\x2C realIntegrities);\x0d\n      }\x0d\n    }\x0d\n    return {\x0d\n      manifestSrc: src\x2C manifestURL: manifestURL.href\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeCJSLoader() {\x0d\n  const { initializeCJS } = require('internal/modules/cjs/loader');\x0d\n  initializeCJS();\x0d\n}\x0d\n\x0d\nfunction initializeESMLoader(forceDefaultLoader) {\x0d\n  const { initializeESM } = require('internal/modules/esm/utils');\x0d\n  initializeESM(forceDefaultLoader);\x0d\n\x0d\n  // Patch the vm module when --experimental-vm-modules is on.\x0d\n  // Please update the comments in vm.js when this block changes.\x0d\n  if (getOptionValue('--experimental-vm-modules')) {\x0d\n    const {\x0d\n      Module\x2C SourceTextModule\x2C SyntheticModule\x2C\x0d\n    } = require('internal/vm/module');\x0d\n    const vm = require('vm');\x0d\n    vm.Module = Module;\x0d\n    vm.SourceTextModule = SourceTextModule;\x0d\n    vm.SyntheticModule = SyntheticModule;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initializeSourceMapsHandlers() {\x0d\n  const {\x0d\n    setSourceMapsEnabled\x2C\x0d\n  } = require('internal/source_map/source_map_cache');\x0d\n  setSourceMapsEnabled(getOptionValue('--enable-source-maps'));\x0d\n}\x0d\n\x0d\nfunction initializeFrozenIntrinsics() {\x0d\n  if (getOptionValue('--frozen-intrinsics')) {\x0d\n    process.emitWarning('The --frozen-intrinsics flag is experimental'\x2C\x0d\n                        'ExperimentalWarning');\x0d\n    require('internal/freeze_intrinsics')();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction loadPreloadModules() {\x0d\n  // For user code\x2C we preload modules if `-r` is passed\x0d\n  const preloadModules = getOptionValue('--require');\x0d\n  if (preloadModules && preloadModules.length > 0) {\x0d\n    const {\x0d\n      Module: {\x0d\n        _preloadModules\x2C\x0d\n      }\x2C\x0d\n    } = require('internal/modules/cjs/loader');\x0d\n    _preloadModules(preloadModules);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markBootstrapComplete() {\x0d\n  internalBinding('performance').markBootstrapComplete();\x0d\n}\x0d\n\x0d\n// Sequence number for diagnostic filenames\x0d\nlet sequenceNumOfheapSnapshot = 0;\x0d\n\x0d\n// To generate the HeapSnapshotFilename while using custom diagnosticDir\x0d\nfunction getHeapSnapshotFilename(diagnosticDir) {\x0d\n  if (!diagnosticDir) return undefined;\x0d\n\x0d\n  const date = new Date();\x0d\n\x0d\n  const year = DatePrototypeGetFullYear(date);\x0d\n  const month = String(DatePrototypeGetMonth(date) + 1).padStart(2\x2C '0');\x0d\n  const day = String(DatePrototypeGetDate(date)).padStart(2\x2C '0');\x0d\n  const hours = String(DatePrototypeGetHours(date)).padStart(2\x2C '0');\x0d\n  const minutes = String(DatePrototypeGetMinutes(date)).padStart(2\x2C '0');\x0d\n  const seconds = String(DatePrototypeGetSeconds(date)).padStart(2\x2C '0');\x0d\n\x0d\n  const dateString = `${year}${month}${day}`;\x0d\n  const timeString = `${hours}${minutes}${seconds}`;\x0d\n  const pid = process.pid;\x0d\n  const threadId = internalBinding('worker').threadId;\x0d\n  const fileSequence = (++sequenceNumOfheapSnapshot).toString().padStart(3\x2C '0');\x0d\n\x0d\n  return `${diagnosticDir}/Heap.${dateString}.${timeString}.${pid}.${threadId}.${fileSequence}.heapsnapshot`;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupUserModules\x2C\x0d\n  prepareMainThreadExecution\x2C\x0d\n  prepareWorkerThreadExecution\x2C\x0d\n  prepareShadowRealmExecution\x2C\x0d\n  markBootstrapComplete\x2C\x0d\n  loadPreloadModules\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n};\x0d\n
code-source-info,0xea2f3f126,67,1149,1304,C20O1202C30O1233C36O1251C40O1209C44O1301,,
code-creation,JS,10,113400,0x1c66f8c2cbe,309,prepareExecution node:internal/process/pre_execution:97:26,0x3fcdefbf278,~
code-source-info,0x1c66f8c2cbe
code-creation,JS,10,113589,0x1c66f8c2fae,10,refreshRuntimeOptions node:internal/process/pre_execution:209:31,0x3fcdefbf368,~
code-source-info,0x1c66f8c2fae,67,6318,6346,C0O6326C5O6326C9O6345,,
code-creation,JS,10,113788,0x1c66f8c3096,22,refreshOptions node:internal/options:39:24,0x3fcdef89868,~
script-source,17,node:internal/options,'use strict';\x0d\n\x0d\nconst {\x0d\n  getCLIOptions\x2C\x0d\n  getEmbedderOptions: getEmbedderOptionsFromBinding\x2C\x0d\n} = internalBinding('options');\x0d\n\x0d\nlet warnOnAllowUnauthorized = true;\x0d\n\x0d\nlet optionsMap;\x0d\nlet aliasesMap;\x0d\nlet embedderOptions;\x0d\n\x0d\n// getCLIOptions() would serialize the option values from C++ land.\x0d\n// It would error if the values are queried before bootstrap is\x0d\n// complete so that we don't accidentally include runtime-dependent\x0d\n// states into a runtime-independent snapshot.\x0d\nfunction getCLIOptionsFromBinding() {\x0d\n  if (!optionsMap) {\x0d\n    ({ options: optionsMap } = getCLIOptions());\x0d\n  }\x0d\n  return optionsMap;\x0d\n}\x0d\n\x0d\nfunction getAliasesFromBinding() {\x0d\n  if (!aliasesMap) {\x0d\n    ({ aliases: aliasesMap } = getCLIOptions());\x0d\n  }\x0d\n  return aliasesMap;\x0d\n}\x0d\n\x0d\nfunction getEmbedderOptions() {\x0d\n  if (!embedderOptions) {\x0d\n    embedderOptions = getEmbedderOptionsFromBinding();\x0d\n  }\x0d\n  return embedderOptions;\x0d\n}\x0d\n\x0d\nfunction refreshOptions() {\x0d\n  optionsMap = undefined;\x0d\n  aliasesMap = undefined;\x0d\n}\x0d\n\x0d\nfunction getOptionValue(optionName) {\x0d\n  const options = getCLIOptionsFromBinding();\x0d\n  if (optionName.startsWith('--no-')) {\x0d\n    const option = options.get('--' + optionName.slice(5));\x0d\n    return option && !option.value;\x0d\n  }\x0d\n  return options.get(optionName)?.value;\x0d\n}\x0d\n\x0d\nfunction getAllowUnauthorized() {\x0d\n  const allowUnauthorized = process.env.NODE_TLS_REJECT_UNAUTHORIZED === '0';\x0d\n\x0d\n  if (allowUnauthorized && warnOnAllowUnauthorized) {\x0d\n    warnOnAllowUnauthorized = false;\x0d\n    process.emitWarning(\x0d\n      'Setting the NODE_TLS_REJECT_UNAUTHORIZED ' +\x0d\n      'environment variable to \\'0\\' makes TLS connections ' +\x0d\n      'and HTTPS requests insecure by disabling ' +\x0d\n      'certificate verification.');\x0d\n  }\x0d\n  return allowUnauthorized;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  get options() {\x0d\n    return getCLIOptionsFromBinding();\x0d\n  }\x2C\x0d\n  get aliases() {\x0d\n    return getAliasesFromBinding();\x0d\n  }\x2C\x0d\n  getOptionValue\x2C\x0d\n  getAllowUnauthorized\x2C\x0d\n  getEmbedderOptions\x2C\x0d\n  refreshOptions\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8c3096,17,940,1001,C0O948C4O959C10O975C14O986C21O1000,,
code-creation,JS,10,114196,0x1c66f8c33fe,19,reconnectZeroFillToggle node:internal/buffer:1074:33,0x3fcdef9aa48,~
script-source,25,node:internal/buffer,'use strict';\x0d\n\x0d\nconst {\x0d\n  BigInt\x2C\x0d\n  Float32Array\x2C\x0d\n  Float64Array\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_OUT_OF_RANGE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { validateNumber } = require('internal/validators');\x0d\nconst {\x0d\n  asciiSlice\x2C\x0d\n  base64Slice\x2C\x0d\n  base64urlSlice\x2C\x0d\n  latin1Slice\x2C\x0d\n  hexSlice\x2C\x0d\n  ucs2Slice\x2C\x0d\n  utf8Slice\x2C\x0d\n  asciiWrite\x2C\x0d\n  base64Write\x2C\x0d\n  base64urlWrite\x2C\x0d\n  latin1Write\x2C\x0d\n  hexWrite\x2C\x0d\n  ucs2Write\x2C\x0d\n  utf8Write\x2C\x0d\n  getZeroFillToggle\x2C\x0d\n} = internalBinding('buffer');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    untransferable_object_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n// Temporary buffers to convert numbers.\x0d\nconst float32Array = new Float32Array(1);\x0d\nconst uInt8Float32Array = new Uint8Array(float32Array.buffer);\x0d\nconst float64Array = new Float64Array(1);\x0d\nconst uInt8Float64Array = new Uint8Array(float64Array.buffer);\x0d\n\x0d\n// Check endianness.\x0d\nfloat32Array[0] = -1; // 0xBF800000\x0d\n// Either it is [0\x2C 0\x2C 128\x2C 191] or [191\x2C 128\x2C 0\x2C 0]. It is not possible to\x0d\n// check this with `os.endianness()` because that is determined at compile time.\x0d\nconst bigEndian = uInt8Float32Array[3] === 0;\x0d\n\x0d\nfunction checkBounds(buf\x2C offset\x2C byteLength) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined)\x0d\n    boundsError(offset\x2C buf.length - (byteLength + 1));\x0d\n}\x0d\n\x0d\nfunction checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C byteLength) {\x0d\n  if (value > max || value < min) {\x0d\n    const n = typeof min === 'bigint' ? 'n' : '';\x0d\n    let range;\x0d\n    if (byteLength > 3) {\x0d\n      if (min === 0 || min === 0n) {\x0d\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`;\x0d\n      } else {\x0d\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and ` +\x0d\n                `< 2${n} ** ${(byteLength + 1) * 8 - 1}${n}`;\x0d\n      }\x0d\n    } else {\x0d\n      range = `>= ${min}${n} and <= ${max}${n}`;\x0d\n    }\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C range\x2C value);\x0d\n  }\x0d\n  checkBounds(buf\x2C offset\x2C byteLength);\x0d\n}\x0d\n\x0d\nfunction boundsError(value\x2C length\x2C type) {\x0d\n  if (MathFloor(value) !== value) {\x0d\n    validateNumber(value\x2C type);\x0d\n    throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n\x0d\n  if (length < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n  throw new ERR_OUT_OF_RANGE(type || 'offset'\x2C\x0d\n                             `>= ${type ? 1 : 0} and <= ${length}`\x2C\x0d\n                             value);\x0d\n}\x0d\n\x0d\n// Read integers.\x0d\nfunction readBigUInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const lo = first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24;\x0d\n\x0d\n  const hi = this[++offset] +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n\x0d\n  return BigInt(lo) + (BigInt(hi) << 32n);\x0d\n}\x0d\n\x0d\nfunction readBigUInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const hi = first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n\x0d\n  const lo = this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n\x0d\n  return (BigInt(hi) << 32n) + BigInt(lo);\x0d\n}\x0d\n\x0d\nfunction readBigInt64LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = this[offset + 4] +\x0d\n    this[offset + 5] * 2 ** 8 +\x0d\n    this[offset + 6] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 24);\x0d\n}\x0d\n\x0d\nfunction readBigInt64BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  const val = (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset];\x0d\n  return (BigInt(val) << 32n) +\x0d\n    BigInt(this[++offset] * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last);\x0d\n}\x0d\n\x0d\nfunction readUIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    (buf[++offset] + last * 2 ** 8) * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    last * 2 ** 32;\x0d\n}\x0d\n\x0d\nfunction readUInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    last * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readUInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n}\x0d\n\x0d\nfunction readUInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first + last * 2 ** 8;\x0d\n}\x0d\n\x0d\nfunction readUInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val;\x0d\n}\x0d\n\x0d\nfunction readUIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readUInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readUInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readUInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readUInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readUInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readUInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readUInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  return (first * 2 ** 8 + buf[++offset]) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return first * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first * 2 ** 24 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readUInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  return first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readUInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  return first * 2 ** 8 + last;\x0d\n}\x0d\n\x0d\nfunction readIntLE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48LE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40LE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24LE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32LE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16LE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[offset + 4] + last * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt40LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (last | (last & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    first +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 24;\x0d\n}\x0d\n\x0d\nfunction readInt32LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return first +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    (last << 24); // Overflow\x0d\n}\x0d\n\x0d\nfunction readInt24LE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first + buf[++offset] * 2 ** 8 + last * 2 ** 16;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16LE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first + last * 2 ** 8;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\nfunction readInt8(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const val = this[offset];\x0d\n  if (val === undefined)\x0d\n    boundsError(offset\x2C this.length - 1);\x0d\n\x0d\n  return val | (val & 2 ** 7) * 0x1fffffe;\x0d\n}\x0d\n\x0d\nfunction readIntBE(offset\x2C byteLength) {\x0d\n  if (offset === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('offset'\x2C 'number'\x2C offset);\x0d\n  if (byteLength === 6)\x0d\n    return readInt48BE(this\x2C offset);\x0d\n  if (byteLength === 5)\x0d\n    return readInt40BE(this\x2C offset);\x0d\n  if (byteLength === 3)\x0d\n    return readInt24BE(this\x2C offset);\x0d\n  if (byteLength === 4)\x0d\n    return this.readInt32BE(offset);\x0d\n  if (byteLength === 2)\x0d\n    return this.readInt16BE(offset);\x0d\n  if (byteLength === 1)\x0d\n    return this.readInt8(offset);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction readInt48BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 5];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 6);\x0d\n\x0d\n  const val = buf[++offset] + first * 2 ** 8;\x0d\n  return (val | (val & 2 ** 15) * 0x1fffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt40BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 4];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 5);\x0d\n\x0d\n  return (first | (first & 2 ** 7) * 0x1fffffe) * 2 ** 32 +\x0d\n    buf[++offset] * 2 ** 24 +\x0d\n    buf[++offset] * 2 ** 16 +\x0d\n    buf[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt32BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  return (first << 24) + // Overflow\x0d\n    this[++offset] * 2 ** 16 +\x0d\n    this[++offset] * 2 ** 8 +\x0d\n    last;\x0d\n}\x0d\n\x0d\nfunction readInt24BE(buf\x2C offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = buf[offset];\x0d\n  const last = buf[offset + 2];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C buf.length - 3);\x0d\n\x0d\n  const val = first * 2 ** 16 + buf[++offset] * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 23) * 0x1fe;\x0d\n}\x0d\n\x0d\nfunction readInt16BE(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 1];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 2);\x0d\n\x0d\n  const val = first * 2 ** 8 + last;\x0d\n  return val | (val & 2 ** 15) * 0x1fffe;\x0d\n}\x0d\n\x0d\n// Read floats\x0d\nfunction readFloatBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[3] = first;\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[0] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readFloatForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 3];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 4);\x0d\n\x0d\n  uInt8Float32Array[0] = first;\x0d\n  uInt8Float32Array[1] = this[++offset];\x0d\n  uInt8Float32Array[2] = this[++offset];\x0d\n  uInt8Float32Array[3] = last;\x0d\n  return float32Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleBackwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[7] = first;\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[0] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\nfunction readDoubleForwards(offset = 0) {\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  const first = this[offset];\x0d\n  const last = this[offset + 7];\x0d\n  if (first === undefined || last === undefined)\x0d\n    boundsError(offset\x2C this.length - 8);\x0d\n\x0d\n  uInt8Float64Array[0] = first;\x0d\n  uInt8Float64Array[1] = this[++offset];\x0d\n  uInt8Float64Array[2] = this[++offset];\x0d\n  uInt8Float64Array[3] = this[++offset];\x0d\n  uInt8Float64Array[4] = this[++offset];\x0d\n  uInt8Float64Array[5] = this[++offset];\x0d\n  uInt8Float64Array[6] = this[++offset];\x0d\n  uInt8Float64Array[7] = last;\x0d\n  return float64Array[0];\x0d\n}\x0d\n\x0d\n// Write integers.\x0d\nfunction writeBigU_Int64LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset++] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset++] = hi;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigU_Int64BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 7);\x0d\n\x0d\n  let lo = Number(value & 0xffffffffn);\x0d\n  buf[offset + 7] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 6] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 5] = lo;\x0d\n  lo = lo >> 8;\x0d\n  buf[offset + 4] = lo;\x0d\n  let hi = Number(value >> 32n & 0xffffffffn);\x0d\n  buf[offset + 3] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 2] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset + 1] = hi;\x0d\n  hi = hi >> 8;\x0d\n  buf[offset] = hi;\x0d\n  return offset + 8;\x0d\n}\x0d\n\x0d\nfunction writeBigUInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(this\x2C value\x2C offset\x2C 0n\x2C 0xffffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64LE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64LE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeBigInt64BE(value\x2C offset = 0) {\x0d\n  return writeBigU_Int64BE(\x0d\n    this\x2C value\x2C offset\x2C -0x8000000000000000n\x2C 0x7fffffffffffffffn);\x0d\n}\x0d\n\x0d\nfunction writeUIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  const newVal = value;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = MathFloor(newVal * 2 ** -32);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16LE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = value;\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int8(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  // `checkInt()` can not be used here because it checks two entries.\x0d\n  validateNumber(offset\x2C 'offset');\x0d\n  if (value > max || value < min) {\x0d\n    throw new ERR_OUT_OF_RANGE('value'\x2C `>= ${min} and <= ${max}`\x2C value);\x0d\n  }\x0d\n  if (buf[offset] === undefined)\x0d\n    boundsError(offset\x2C buf.length - 1);\x0d\n\x0d\n  buf[offset] = value;\x0d\n  return offset + 1;\x0d\n}\x0d\n\x0d\nfunction writeUInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n}\x0d\n\x0d\nfunction writeUIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C 0\x2C 0xff);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeU_Int48BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 5);\x0d\n\x0d\n  const newVal = MathFloor(value * 2 ** -32);\x0d\n  buf[offset++] = (newVal >>> 8);\x0d\n  buf[offset++] = newVal;\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int40BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 4);\x0d\n\x0d\n  buf[offset++] = MathFloor(value * 2 ** -32);\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeU_Int32BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 3);\x0d\n\x0d\n  buf[offset + 3] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 4;\x0d\n}\x0d\n\x0d\nfunction writeUInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C 0\x2C 0xffffffff);\x0d\n}\x0d\n\x0d\nfunction writeU_Int24BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 2);\x0d\n\x0d\n  buf[offset + 2] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset + 1] = value;\x0d\n  value = value >>> 8;\x0d\n  buf[offset] = value;\x0d\n  return offset + 3;\x0d\n}\x0d\n\x0d\nfunction writeU_Int16BE(buf\x2C value\x2C offset\x2C min\x2C max) {\x0d\n  value = +value;\x0d\n  checkInt(value\x2C min\x2C max\x2C buf\x2C offset\x2C 1);\x0d\n\x0d\n  buf[offset++] = (value >>> 8);\x0d\n  buf[offset++] = value;\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeUInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C 0\x2C 0xffff);\x0d\n}\x0d\n\x0d\nfunction writeIntLE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48LE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40LE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24LE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32LE(value\x2C offset = 0) {\x0d\n  return writeU_Int32LE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16LE(value\x2C offset = 0) {\x0d\n  return writeU_Int16LE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\nfunction writeInt8(value\x2C offset = 0) {\x0d\n  return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n}\x0d\n\x0d\nfunction writeIntBE(value\x2C offset\x2C byteLength) {\x0d\n  if (byteLength === 6)\x0d\n    return writeU_Int48BE(this\x2C value\x2C offset\x2C -0x800000000000\x2C 0x7fffffffffff);\x0d\n  if (byteLength === 5)\x0d\n    return writeU_Int40BE(this\x2C value\x2C offset\x2C -0x8000000000\x2C 0x7fffffffff);\x0d\n  if (byteLength === 3)\x0d\n    return writeU_Int24BE(this\x2C value\x2C offset\x2C -0x800000\x2C 0x7fffff);\x0d\n  if (byteLength === 4)\x0d\n    return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n  if (byteLength === 2)\x0d\n    return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n  if (byteLength === 1)\x0d\n    return writeU_Int8(this\x2C value\x2C offset\x2C -0x80\x2C 0x7f);\x0d\n\x0d\n  boundsError(byteLength\x2C 6\x2C 'byteLength');\x0d\n}\x0d\n\x0d\nfunction writeInt32BE(value\x2C offset = 0) {\x0d\n  return writeU_Int32BE(this\x2C value\x2C offset\x2C -0x80000000\x2C 0x7fffffff);\x0d\n}\x0d\n\x0d\nfunction writeInt16BE(value\x2C offset = 0) {\x0d\n  return writeU_Int16BE(this\x2C value\x2C offset\x2C -0x8000\x2C 0x7fff);\x0d\n}\x0d\n\x0d\n// Write floats.\x0d\nfunction writeDoubleForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeDoubleBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 7);\x0d\n\x0d\n  float64Array[0] = val;\x0d\n  this[offset++] = uInt8Float64Array[7];\x0d\n  this[offset++] = uInt8Float64Array[6];\x0d\n  this[offset++] = uInt8Float64Array[5];\x0d\n  this[offset++] = uInt8Float64Array[4];\x0d\n  this[offset++] = uInt8Float64Array[3];\x0d\n  this[offset++] = uInt8Float64Array[2];\x0d\n  this[offset++] = uInt8Float64Array[1];\x0d\n  this[offset++] = uInt8Float64Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatForwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nfunction writeFloatBackwards(val\x2C offset = 0) {\x0d\n  val = +val;\x0d\n  checkBounds(this\x2C offset\x2C 3);\x0d\n\x0d\n  float32Array[0] = val;\x0d\n  this[offset++] = uInt8Float32Array[3];\x0d\n  this[offset++] = uInt8Float32Array[2];\x0d\n  this[offset++] = uInt8Float32Array[1];\x0d\n  this[offset++] = uInt8Float32Array[0];\x0d\n  return offset;\x0d\n}\x0d\n\x0d\nclass FastBuffer extends Uint8Array {\x0d\n  // Using an explicit constructor here is necessary to avoid relying on\x0d\n  // `Array.prototype[Symbol.iterator]`\x2C which can be mutated by users.\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(bufferOrLength\x2C byteOffset\x2C length) {\x0d\n    super(bufferOrLength\x2C byteOffset\x2C length);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addBufferPrototypeMethods(proto) {\x0d\n  proto.readBigUInt64LE = readBigUInt64LE;\x0d\n  proto.readBigUInt64BE = readBigUInt64BE;\x0d\n  proto.readBigUint64LE = readBigUInt64LE;\x0d\n  proto.readBigUint64BE = readBigUInt64BE;\x0d\n  proto.readBigInt64LE = readBigInt64LE;\x0d\n  proto.readBigInt64BE = readBigInt64BE;\x0d\n  proto.writeBigUInt64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUInt64BE = writeBigUInt64BE;\x0d\n  proto.writeBigUint64LE = writeBigUInt64LE;\x0d\n  proto.writeBigUint64BE = writeBigUInt64BE;\x0d\n  proto.writeBigInt64LE = writeBigInt64LE;\x0d\n  proto.writeBigInt64BE = writeBigInt64BE;\x0d\n\x0d\n  proto.readUIntLE = readUIntLE;\x0d\n  proto.readUInt32LE = readUInt32LE;\x0d\n  proto.readUInt16LE = readUInt16LE;\x0d\n  proto.readUInt8 = readUInt8;\x0d\n  proto.readUIntBE = readUIntBE;\x0d\n  proto.readUInt32BE = readUInt32BE;\x0d\n  proto.readUInt16BE = readUInt16BE;\x0d\n  proto.readUintLE = readUIntLE;\x0d\n  proto.readUint32LE = readUInt32LE;\x0d\n  proto.readUint16LE = readUInt16LE;\x0d\n  proto.readUint8 = readUInt8;\x0d\n  proto.readUintBE = readUIntBE;\x0d\n  proto.readUint32BE = readUInt32BE;\x0d\n  proto.readUint16BE = readUInt16BE;\x0d\n  proto.readIntLE = readIntLE;\x0d\n  proto.readInt32LE = readInt32LE;\x0d\n  proto.readInt16LE = readInt16LE;\x0d\n  proto.readInt8 = readInt8;\x0d\n  proto.readIntBE = readIntBE;\x0d\n  proto.readInt32BE = readInt32BE;\x0d\n  proto.readInt16BE = readInt16BE;\x0d\n\x0d\n  proto.writeUIntLE = writeUIntLE;\x0d\n  proto.writeUInt32LE = writeUInt32LE;\x0d\n  proto.writeUInt16LE = writeUInt16LE;\x0d\n  proto.writeUInt8 = writeUInt8;\x0d\n  proto.writeUIntBE = writeUIntBE;\x0d\n  proto.writeUInt32BE = writeUInt32BE;\x0d\n  proto.writeUInt16BE = writeUInt16BE;\x0d\n  proto.writeUintLE = writeUIntLE;\x0d\n  proto.writeUint32LE = writeUInt32LE;\x0d\n  proto.writeUint16LE = writeUInt16LE;\x0d\n  proto.writeUint8 = writeUInt8;\x0d\n  proto.writeUintBE = writeUIntBE;\x0d\n  proto.writeUint32BE = writeUInt32BE;\x0d\n  proto.writeUint16BE = writeUInt16BE;\x0d\n  proto.writeIntLE = writeIntLE;\x0d\n  proto.writeInt32LE = writeInt32LE;\x0d\n  proto.writeInt16LE = writeInt16LE;\x0d\n  proto.writeInt8 = writeInt8;\x0d\n  proto.writeIntBE = writeIntBE;\x0d\n  proto.writeInt32BE = writeInt32BE;\x0d\n  proto.writeInt16BE = writeInt16BE;\x0d\n\x0d\n  proto.readFloatLE = bigEndian ? readFloatBackwards : readFloatForwards;\x0d\n  proto.readFloatBE = bigEndian ? readFloatForwards : readFloatBackwards;\x0d\n  proto.readDoubleLE = bigEndian ? readDoubleBackwards : readDoubleForwards;\x0d\n  proto.readDoubleBE = bigEndian ? readDoubleForwards : readDoubleBackwards;\x0d\n  proto.writeFloatLE = bigEndian ? writeFloatBackwards : writeFloatForwards;\x0d\n  proto.writeFloatBE = bigEndian ? writeFloatForwards : writeFloatBackwards;\x0d\n  proto.writeDoubleLE = bigEndian ? writeDoubleBackwards : writeDoubleForwards;\x0d\n  proto.writeDoubleBE = bigEndian ? writeDoubleForwards : writeDoubleBackwards;\x0d\n\x0d\n  proto.asciiSlice = asciiSlice;\x0d\n  proto.base64Slice = base64Slice;\x0d\n  proto.base64urlSlice = base64urlSlice;\x0d\n  proto.latin1Slice = latin1Slice;\x0d\n  proto.hexSlice = hexSlice;\x0d\n  proto.ucs2Slice = ucs2Slice;\x0d\n  proto.utf8Slice = utf8Slice;\x0d\n  proto.asciiWrite = asciiWrite;\x0d\n  proto.base64Write = base64Write;\x0d\n  proto.base64urlWrite = base64urlWrite;\x0d\n  proto.latin1Write = latin1Write;\x0d\n  proto.hexWrite = hexWrite;\x0d\n  proto.ucs2Write = ucs2Write;\x0d\n  proto.utf8Write = utf8Write;\x0d\n}\x0d\n\x0d\n// This would better be placed in internal/worker/io.js\x2C but that doesn't work\x0d\n// because Buffer needs this and that would introduce a cyclic dependency.\x0d\nfunction markAsUntransferable(obj) {\x0d\n  if ((typeof obj !== 'object' && typeof obj !== 'function') || obj === null)\x0d\n    return;  // This object is a primitive and therefore already untransferable.\x0d\n  obj[untransferable_object_private_symbol] = true;\x0d\n}\x0d\n\x0d\n// A toggle used to access the zero fill setting of the array buffer allocator\x0d\n// in C++.\x0d\n// |zeroFill| can be undefined when running inside an isolate where we\x0d\n// do not own the ArrayBuffer allocator.  Zero fill is always on in that case.\x0d\nlet zeroFill = getZeroFillToggle();\x0d\nfunction createUnsafeBuffer(size) {\x0d\n  zeroFill[0] = 0;\x0d\n  try {\x0d\n    return new FastBuffer(size);\x0d\n  } finally {\x0d\n    zeroFill[0] = 1;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The connection between the JS land zero fill toggle and the\x0d\n// C++ one in the NodeArrayBufferAllocator gets lost if the toggle\x0d\n// is deserialized from the snapshot\x2C because V8 owns the underlying\x0d\n// memory of this toggle. This resets the connection.\x0d\nfunction reconnectZeroFillToggle() {\x0d\n  zeroFill = getZeroFillToggle();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FastBuffer\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n  readUInt16BE\x2C\x0d\n  readUInt32BE\x2C\x0d\n  reconnectZeroFillToggle\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8c33fe,25,31787,31829,C0O31795C5O31806C11O31804C18O31828,,
code-creation,JS,10,117433,0x1c66f8c5cd6,442,patchProcessObject node:internal/process/pre_execution:220:28,0x3fcdefbf3b8,~
code-source-info,0x1c66f8c5cd
code-creation,JS,10,117812,0x1c66f8c6236,134,set node:internal/bootstrap/node:116:8,0x3fcdef820e0,~
script-source,12,node:internal/bootstrap/node,// Hello\x2C and welcome to hacking node.js!\x0d\n//\x0d\n// This file is invoked by `Realm::BootstrapRealm()` in `src/node_realm.cc`\x2C\x0d\n// and is responsible for setting up Node.js core before main scripts\x0d\n// under `lib/internal/main/` are executed.\x0d\n//\x0d\n// By default\x2C Node.js binaries come with an embedded V8 startup snapshot\x0d\n// that is generated at build-time with a `node_mksnapshot` executable.\x0d\n// The snapshot generation code can be found in `SnapshotBuilder::Generate()`\x0d\n// from `src/node_snapshotable.cc`.\x0d\n// This snapshot captures the V8 heap initialized by scripts under\x0d\n// `lib/internal/bootstrap/`\x2C including this file. When initializing the main\x0d\n// thread\x2C Node.js deserializes the heap from the snapshot\x2C instead of actually\x0d\n// running this script and others in `lib/internal/bootstrap/`. To disable this\x0d\n// behavior\x2C pass `--no-node-snapshot` when starting the process so that\x0d\n// Node.js actually runs this script to initialize the heap.\x0d\n//\x0d\n// This script is expected not to perform any asynchronous operations itself\x0d\n// when being executed - those should be done in either\x0d\n// `lib/internal/process/pre_execution.js` or in main scripts. It should not\x0d\n// query any run-time states (e.g. command line arguments\x2C environment\x0d\n// variables) when being executed - functions in this script that are invoked\x0d\n// at a later time can\x2C however\x2C query those states lazily.\x0d\n// The majority of the code here focuses on setting up the global object and\x0d\n// the process object in a synchronous\x2C environment-independent manner.\x0d\n//\x0d\n// Scripts run before this file:\x0d\n// - `lib/internal/per_context/primordials.js`: this saves copies of JavaScript\x0d\n//   builtins that won't be affected by user land monkey-patching for internal\x0d\n//   modules to use.\x0d\n// - `lib/internal/per_context/domexception.js`: implementation of the\x0d\n//   `DOMException` class.\x0d\n// - `lib/internal/per_context/messageport.js`: JS-side components of the\x0d\n//   `MessagePort` implementation.\x0d\n// - `lib/internal/bootstrap/realm.js`: this sets up internal binding and\x0d\n//   module loaders\x2C including `process.binding()`\x2C `process._linkedBinding()`\x2C\x0d\n//   `internalBinding()` and `BuiltinModule`\x2C and per-realm internal states\x0d\n//   and bindings\x2C including `prepare_stack_trace_callback`.\x0d\n//\x0d\n// The initialization done in this script is included in both the main thread\x0d\n// and the worker threads. After this\x2C further initialization is done based\x0d\n// on the configuration of the Node.js instance by executing the scripts in\x0d\n// `lib/internal/bootstrap/switches/`.\x0d\n//\x0d\n// Then\x2C depending on how the Node.js instance is launched\x2C one of the main\x0d\n// scripts in `lib/internal/main` will be selected by C++ to start the actual\x0d\n// execution. They may run additional setups exported by\x0d\n// `lib/internal/process/pre_execution.js` depending on the run-time states.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by `BuiltinLoader::CompileAndCall()`.\x0d\n/* global process\x2C require\x2C internalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONParse\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  globalThis\x2C\x0d\n} = primordials;\x0d\nconst config = internalBinding('config');\x0d\nconst internalTimers = require('internal/timers');\x0d\nconst {\x0d\n  defineOperation\x2C\x0d\n  deprecate\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  constants: {\x0d\n    kExitCode\x2C\x0d\n    kExiting\x2C\x0d\n    kHasExitCode\x2C\x0d\n  }\x2C\x0d\n  privateSymbols: {\x0d\n    exit_info_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nsetupProcessObject();\x0d\n\x0d\nsetupGlobalProxy();\x0d\nsetupBuffer();\x0d\n\x0d\nprocess.domain = null;\x0d\n\x0d\n// process._exiting and process.exitCode\x0d\n{\x0d\n  const fields = process[exit_info_private_symbol];\x0d\n  ObjectDefineProperty(process\x2C '_exiting'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return fields[kExiting] === 1;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      fields[kExiting] = value ? 1 : 0;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  let exitCode;\x0d\n  ObjectDefineProperty(process\x2C 'exitCode'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return exitCode;\x0d\n    }\x2C\x0d\n    set(code) {\x0d\n      if (code !== null && code !== undefined) {\x0d\n        let value = code;\x0d\n        if (typeof code === 'string' && code !== '' &&\x0d\n          NumberIsNaN((value = Number(code)))) {\x0d\n          value = code;\x0d\n        }\x0d\n        validateInteger(value\x2C 'code');\x0d\n        fields[kExitCode] = value;\x0d\n        fields[kHasExitCode] = 1;\x0d\n      } else {\x0d\n        fields[kHasExitCode] = 0;\x0d\n      }\x0d\n      exitCode = code;\x0d\n    }\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: false\x2C\x0d\n  });\x0d\n}\x0d\nprocess._exiting = false;\x0d\n\x0d\n// process.config is serialized config.gypi\x0d\nconst binding = internalBinding('builtins');\x0d\n\x0d\nconst processConfig = JSONParse(binding.config\x2C (_key\x2C value) => {\x0d\n  // The `reviver` argument of the JSONParse method will visit all the values of\x0d\n  // the parsed config\x2C including the "root" object\x2C so there is no need to\x0d\n  // explicitly freeze the config outside of this method\x0d\n  return ObjectFreeze(value);\x0d\n});\x0d\n\x0d\nObjectDefineProperty(process\x2C 'config'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n  value: processConfig\x2C\x0d\n});\x0d\n\x0d\nrequire('internal/worker/js_transferable').setup();\x0d\n\x0d\n// Bootstrappers for all threads\x2C including worker threads and main thread\x0d\nconst perThreadSetup = require('internal/process/per_thread');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\n\x0d\n// Set up methods on the process object for all threads\x0d\n{\x0d\n  process.dlopen = rawMethods.dlopen;\x0d\n  process.uptime = rawMethods.uptime;\x0d\n\x0d\n  // TODO(joyeecheung): either remove them or make them public\x0d\n  process._getActiveRequests = rawMethods._getActiveRequests;\x0d\n  process._getActiveHandles = rawMethods._getActiveHandles;\x0d\n  process.getActiveResourcesInfo = rawMethods.getActiveResourcesInfo;\x0d\n\x0d\n  // TODO(joyeecheung): remove these\x0d\n  process.reallyExit = rawMethods.reallyExit;\x0d\n  process._kill = rawMethods._kill;\x0d\n\x0d\n  const wrapped = perThreadSetup.wrapProcessMethods(rawMethods);\x0d\n  process.loadEnvFile = wrapped.loadEnvFile;\x0d\n  process._rawDebug = wrapped._rawDebug;\x0d\n  process.cpuUsage = wrapped.cpuUsage;\x0d\n  process.resourceUsage = wrapped.resourceUsage;\x0d\n  process.memoryUsage = wrapped.memoryUsage;\x0d\n  process.constrainedMemory = rawMethods.constrainedMemory;\x0d\n  process.kill = wrapped.kill;\x0d\n  process.exit = wrapped.exit;\x0d\n\x0d\n  process.hrtime = perThreadSetup.hrtime;\x0d\n  process.hrtime.bigint = perThreadSetup.hrtimeBigInt;\x0d\n\x0d\n  process.openStdin = function() {\x0d\n    process.stdin.resume();\x0d\n    return process.stdin;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  process.getuid = credentials.getuid;\x0d\n  process.geteuid = credentials.geteuid;\x0d\n  process.getgid = credentials.getgid;\x0d\n  process.getegid = credentials.getegid;\x0d\n  process.getgroups = credentials.getgroups;\x0d\n}\x0d\n\x0d\n// Setup the callbacks that node::AsyncWrap will call when there are hooks to\x0d\n// process. They use the same functions as the JS embedder API. These callbacks\x0d\n// are setup immediately to prevent async_wrap.setupHooks() from being hijacked\x0d\n// and the cost of doing so is negligible.\x0d\nconst { nativeHooks } = require('internal/async_hooks');\x0d\ninternalBinding('async_wrap').setupHooks(nativeHooks);\x0d\n\x0d\nconst {\x0d\n  setupTaskQueue\x2C\x0d\n} = require('internal/process/task_queues');\x0d\nconst timers = require('timers');\x0d\n// Non-standard extensions:\x0d\ndefineOperation(globalThis\x2C 'clearImmediate'\x2C timers.clearImmediate);\x0d\ndefineOperation(globalThis\x2C 'setImmediate'\x2C timers.setImmediate);\x0d\n\x0d\n// Set the per-Environment callback that will be called\x0d\n// when the TrackingTraceStateObserver updates trace state.\x0d\n// Note that when NODE_USE_V8_PLATFORM is true\x2C the observer is\x0d\n// attached to the per-process TracingController.\x0d\nconst { setTraceCategoryStateUpdateHandler } = internalBinding('trace_events');\x0d\nsetTraceCategoryStateUpdateHandler(perThreadSetup.toggleTraceCategoryState);\x0d\n\x0d\n// process.allowedNodeEnvironmentFlags\x0d\nObjectDefineProperty(process\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    const flags = perThreadSetup.buildAllowedFlags();\x0d\n    process.allowedNodeEnvironmentFlags = flags;\x0d\n    return process.allowedNodeEnvironmentFlags;\x0d\n  }\x2C\x0d\n  // If the user tries to set this to another value\x2C override\x0d\n  // this completely to that value.\x0d\n  set(value) {\x0d\n    ObjectDefineProperty(this\x2C 'allowedNodeEnvironmentFlags'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      writable: true\x2C\x0d\n    });\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n// process.assert\x0d\nprocess.assert = deprecate(\x0d\n  perThreadSetup.assert\x2C\x0d\n  'process.assert() is deprecated. Please use the `assert` module instead.'\x2C\x0d\n  'DEP0100');\x0d\n\x0d\n// TODO(joyeecheung): this property has not been well-maintained\x2C should we\x0d\n// deprecate it in favor of a better API?\x0d\nconst { isDebugBuild\x2C hasOpenSSL\x2C hasInspector } = config;\x0d\nconst features = {\x0d\n  inspector: hasInspector\x2C\x0d\n  debug: isDebugBuild\x2C\x0d\n  uv: true\x2C\x0d\n  ipv6: true\x2C  // TODO(bnoordhuis) ping libuv\x0d\n  tls_alpn: hasOpenSSL\x2C\x0d\n  tls_sni: hasOpenSSL\x2C\x0d\n  tls_ocsp: hasOpenSSL\x2C\x0d\n  tls: hasOpenSSL\x2C\x0d\n  // This needs to be dynamic because --no-node-snapshot disables the\x0d\n  // code cache even if the binary is built with embedded code cache.\x0d\n  get cached_builtins() {\x0d\n    return binding.hasCachedBuiltins();\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(process\x2C 'features'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n  configurable: false\x2C\x0d\n  value: features\x2C\x0d\n});\x0d\n\x0d\n{\x0d\n  const {\x0d\n    onGlobalUncaughtException\x2C\x0d\n    setUncaughtExceptionCaptureCallback\x2C\x0d\n    hasUncaughtExceptionCaptureCallback\x2C\x0d\n  } = require('internal/process/execution');\x0d\n\x0d\n  // For legacy reasons this is still called `_fatalException`\x2C even\x0d\n  // though it is now a global uncaught exception handler.\x0d\n  // The C++ land node::errors::TriggerUncaughtException grabs it\x0d\n  // from the process object because it has been monkey-patchable.\x0d\n  // TODO(joyeecheung): investigate whether process._fatalException\x0d\n  // can be deprecated.\x0d\n  process._fatalException = onGlobalUncaughtException;\x0d\n  process.setUncaughtExceptionCaptureCallback =\x0d\n    setUncaughtExceptionCaptureCallback;\x0d\n  process.hasUncaughtExceptionCaptureCallback =\x0d\n    hasUncaughtExceptionCaptureCallback;\x0d\n}\x0d\n\x0d\nconst { emitWarning } = require('internal/process/warning');\x0d\nprocess.emitWarning = emitWarning;\x0d\n\x0d\n// We initialize the tick callbacks and the timer callbacks last during\x0d\n// bootstrap to make sure that any operation done before this are synchronous.\x0d\n// If any ticks or timers are scheduled before this they are unlikely to work.\x0d\n{\x0d\n  const { nextTick\x2C runNextTicks } = setupTaskQueue();\x0d\n  process.nextTick = nextTick;\x0d\n  // Used to emulate a tick manually in the JS land.\x0d\n  // A better name for this function would be `runNextTicks` but\x0d\n  // it has been exposed to the process object so we keep this legacy name\x0d\n  // TODO(joyeecheung): either remove it or make it public\x0d\n  process._tickCallback = runNextTicks;\x0d\n\x0d\n  const { setupTimers } = internalBinding('timers');\x0d\n  const {\x0d\n    processImmediate\x2C\x0d\n    processTimers\x2C\x0d\n  } = internalTimers.getTimerCallbacks(runNextTicks);\x0d\n  // Sets two per-Environment callbacks that will be run from libuv:\x0d\n  // - processImmediate will be run in the callback of the per-Environment\x0d\n  //   check handle.\x0d\n  // - processTimers will be run in the callback of the per-Environment timer.\x0d\n  setupTimers(processImmediate\x2C processTimers);\x0d\n  // Note: only after this point are the timers effective\x0d\n}\x0d\n\x0d\n{\x0d\n  const {\x0d\n    getSourceMapsEnabled\x2C\x0d\n    setSourceMapsEnabled\x2C\x0d\n    maybeCacheGeneratedSourceMap\x2C\x0d\n  } = require('internal/source_map/source_map_cache');\x0d\n  const {\x0d\n    setMaybeCacheGeneratedSourceMap\x2C\x0d\n  } = internalBinding('errors');\x0d\n\x0d\n  ObjectDefineProperty(process\x2C 'sourceMapsEnabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    get() {\x0d\n      return getSourceMapsEnabled();\x0d\n    }\x2C\x0d\n  });\x0d\n  process.setSourceMapsEnabled = setSourceMapsEnabled;\x0d\n  // The C++ land calls back to maybeCacheGeneratedSourceMap()\x0d\n  // when code is generated by user with eval() or new Function()\x0d\n  // to cache the source maps from the evaluated code\x2C if any.\x0d\n  setMaybeCacheGeneratedSourceMap(maybeCacheGeneratedSourceMap);\x0d\n}\x0d\n\x0d\nfunction setupProcessObject() {\x0d\n  const EventEmitter = require('events');\x0d\n  const origProcProto = ObjectGetPrototypeOf(process);\x0d\n  ObjectSetPrototypeOf(origProcProto\x2C EventEmitter.prototype);\x0d\n  FunctionPrototypeCall(EventEmitter\x2C process);\x0d\n  ObjectDefineProperty(process\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: false\x2C\x0d\n    value: 'process'\x2C\x0d\n  });\x0d\n\x0d\n  // Create global.process as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _process = process;\x0d\n  ObjectDefineProperty(globalThis\x2C 'process'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _process;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _process = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction setupGlobalProxy() {\x0d\n  ObjectDefineProperty(globalThis\x2C SymbolToStringTag\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: 'global'\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  globalThis.global = globalThis;\x0d\n}\x0d\n\x0d\nfunction setupBuffer() {\x0d\n  const {\x0d\n    Buffer\x2C\x0d\n  } = require('buffer');\x0d\n  const bufferBinding = internalBinding('buffer');\x0d\n\x0d\n  // Only after this point can C++ use Buffer::New()\x0d\n  bufferBinding.setBufferPrototype(Buffer.prototype);\x0d\n  delete bufferBinding.setBufferPrototype;\x0d\n\x0d\n  // Create global.Buffer as getters so that we have a\x0d\n  // deprecation path for these in ES Modules.\x0d\n  // See https://github.com/nodejs/node/pull/26334.\x0d\n  let _Buffer = Buffer;\x0d\n  ObjectDefineProperty(globalThis\x2C 'Buffer'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return _Buffer;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      _Buffer = value;\x0d\n    }\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n}\x0d\n
code-source-info,0x1c66f8c6236,12,4246,4676,C0O4262C8O4326C11O4341C19O4378C28O4399C35O4420C38O4420C43O4399C49O4449C54O4483C64O4483C69O4524C78O4531C83O4542C87O4560C96O4567C101O4581C107O4611C116O4618C120O4632C124O4653C126O4662C133O4675,,
code-creation,JS,10,119490,0x1c66f8c729e,852,resolve node:path:162:10,0x3fcdef9f3b0,~
script-source,30,node:path,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  CHAR_UPPERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_UPPERCASE_Z\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_QUESTION_MARK\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst platformIsWin32 = (process.platform === 'win32');\x0d\n\x0d\nfunction isPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isPosixPathSeparator(code) {\x0d\n  return code === CHAR_FORWARD_SLASH;\x0d\n}\x0d\n\x0d\nfunction isWindowsDeviceRoot(code) {\x0d\n  return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\x0d\n         (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\x0d\n}\x0d\n\x0d\n// Resolves . and .. elements in a path with directory names\x0d\nfunction normalizeString(path\x2C allowAboveRoot\x2C separator\x2C isPathSeparator) {\x0d\n  let res = '';\x0d\n  let lastSegmentLength = 0;\x0d\n  let lastSlash = -1;\x0d\n  let dots = 0;\x0d\n  let code = 0;\x0d\n  for (let i = 0; i <= path.length; ++i) {\x0d\n    if (i < path.length)\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n    else if (isPathSeparator(code))\x0d\n      break;\x0d\n    else\x0d\n      code = CHAR_FORWARD_SLASH;\x0d\n\x0d\n    if (isPathSeparator(code)) {\x0d\n      if (lastSlash === i - 1 || dots === 1) {\x0d\n        // NOOP\x0d\n      } else if (dots === 2) {\x0d\n        if (res.length < 2 || lastSegmentLength !== 2 ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 1) !== CHAR_DOT ||\x0d\n            StringPrototypeCharCodeAt(res\x2C res.length - 2) !== CHAR_DOT) {\x0d\n          if (res.length > 2) {\x0d\n            const lastSlashIndex = StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            if (lastSlashIndex === -1) {\x0d\n              res = '';\x0d\n              lastSegmentLength = 0;\x0d\n            } else {\x0d\n              res = StringPrototypeSlice(res\x2C 0\x2C lastSlashIndex);\x0d\n              lastSegmentLength =\x0d\n                res.length - 1 - StringPrototypeLastIndexOf(res\x2C separator);\x0d\n            }\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          } else if (res.length !== 0) {\x0d\n            res = '';\x0d\n            lastSegmentLength = 0;\x0d\n            lastSlash = i;\x0d\n            dots = 0;\x0d\n            continue;\x0d\n          }\x0d\n        }\x0d\n        if (allowAboveRoot) {\x0d\n          res += res.length > 0 ? `${separator}..` : '..';\x0d\n          lastSegmentLength = 2;\x0d\n        }\x0d\n      } else {\x0d\n        if (res.length > 0)\x0d\n          res += `${separator}${StringPrototypeSlice(path\x2C lastSlash + 1\x2C i)}`;\x0d\n        else\x0d\n          res = StringPrototypeSlice(path\x2C lastSlash + 1\x2C i);\x0d\n        lastSegmentLength = i - lastSlash - 1;\x0d\n      }\x0d\n      lastSlash = i;\x0d\n      dots = 0;\x0d\n    } else if (code === CHAR_DOT && dots !== -1) {\x0d\n      ++dots;\x0d\n    } else {\x0d\n      dots = -1;\x0d\n    }\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction formatExt(ext) {\x0d\n  return ext ? `${ext[0] === '.' ? '' : '.'}${ext}` : '';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} sep\x0d\n * @param {{\x0d\n *  dir?: string;\x0d\n *  root?: string;\x0d\n *  base?: string;\x0d\n *  name?: string;\x0d\n *  ext?: string;\x0d\n *  }} pathObject\x0d\n * @returns {string}\x0d\n */\x0d\nfunction _format(sep\x2C pathObject) {\x0d\n  validateObject(pathObject\x2C 'pathObject');\x0d\n  const dir = pathObject.dir || pathObject.root;\x0d\n  const base = pathObject.base ||\x0d\n    `${pathObject.name || ''}${formatExt(pathObject.ext)}`;\x0d\n  if (!dir) {\x0d\n    return base;\x0d\n  }\x0d\n  return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\x0d\n}\x0d\n\x0d\nconst win32 = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedDevice = '';\x0d\n    let resolvedTail = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1; i--) {\x0d\n      let path;\x0d\n      if (i >= 0) {\x0d\n        path = args[i];\x0d\n        validateString(path\x2C `paths[${i}]`);\x0d\n\x0d\n        // Skip empty entries\x0d\n        if (path.length === 0) {\x0d\n          continue;\x0d\n        }\x0d\n      } else if (resolvedDevice.length === 0) {\x0d\n        path = process.cwd();\x0d\n      } else {\x0d\n        // Windows has the concept of drive-specific current working\x0d\n        // directories. If we've resolved a drive letter but not yet an\x0d\n        // absolute path\x2C get cwd for that drive\x2C or the process cwd if\x0d\n        // the drive cwd is not available. We're sure the device is not\x0d\n        // a UNC path at this points\x2C because UNC paths are always absolute.\x0d\n        path = process.env[`=${resolvedDevice}`] || process.cwd();\x0d\n\x0d\n        // Verify that a cwd was found and that it actually points\x0d\n        // to our drive. If not\x2C default to the drive's root.\x0d\n        if (path === undefined ||\x0d\n            (StringPrototypeToLowerCase(StringPrototypeSlice(path\x2C 0\x2C 2)) !==\x0d\n            StringPrototypeToLowerCase(resolvedDevice) &&\x0d\n            StringPrototypeCharCodeAt(path\x2C 2) === CHAR_BACKWARD_SLASH)) {\x0d\n          path = `${resolvedDevice}\\\\`;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      const len = path.length;\x0d\n      let rootEnd = 0;\x0d\n      let device = '';\x0d\n      let isAbsolute = false;\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n      // Try to match a root\x0d\n      if (len === 1) {\x0d\n        if (isPathSeparator(code)) {\x0d\n          // `path` contains just a path separator\x0d\n          rootEnd = 1;\x0d\n          isAbsolute = true;\x0d\n        }\x0d\n      } else if (isPathSeparator(code)) {\x0d\n        // Possible UNC root\x0d\n\x0d\n        // If we started with a separator\x2C we know we at least have an\x0d\n        // absolute path of some kind (UNC or otherwise)\x0d\n        isAbsolute = true;\x0d\n\x0d\n        if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n          // Matched double path separator at beginning\x0d\n          let j = 2;\x0d\n          let last = j;\x0d\n          // Match 1 or more non-path separators\x0d\n          while (j < len &&\x0d\n                 !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more path separators\x0d\n            while (j < len &&\x0d\n                   isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j < len && j !== last) {\x0d\n              // Matched!\x0d\n              last = j;\x0d\n              // Match 1 or more non-path separators\x0d\n              while (j < len &&\x0d\n                     !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n                j++;\x0d\n              }\x0d\n              if (j === len || j !== last) {\x0d\n                // We matched a UNC root\x0d\n                device =\x0d\n                  `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n                rootEnd = j;\x0d\n              }\x0d\n            }\x0d\n          }\x0d\n        } else {\x0d\n          rootEnd = 1;\x0d\n        }\x0d\n      } else if (isWindowsDeviceRoot(code) &&\x0d\n                  StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n        // Possible device root\x0d\n        device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n        rootEnd = 2;\x0d\n        if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n          // Treat separator following drive name as an absolute path\x0d\n          // indicator\x0d\n          isAbsolute = true;\x0d\n          rootEnd = 3;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (device.length > 0) {\x0d\n        if (resolvedDevice.length > 0) {\x0d\n          if (StringPrototypeToLowerCase(device) !==\x0d\n              StringPrototypeToLowerCase(resolvedDevice))\x0d\n            // This path points to another device so it is not applicable\x0d\n            continue;\x0d\n        } else {\x0d\n          resolvedDevice = device;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (resolvedAbsolute) {\x0d\n        if (resolvedDevice.length > 0)\x0d\n          break;\x0d\n      } else {\x0d\n        resolvedTail =\x0d\n          `${StringPrototypeSlice(path\x2C rootEnd)}\\\\${resolvedTail}`;\x0d\n        resolvedAbsolute = isAbsolute;\x0d\n        if (isAbsolute && resolvedDevice.length > 0) {\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C\x0d\n    // but handle relative paths to be safe (might happen when process.cwd()\x0d\n    // fails)\x0d\n\x0d\n    // Normalize the tail path\x0d\n    resolvedTail = normalizeString(resolvedTail\x2C !resolvedAbsolute\x2C '\\\\'\x2C\x0d\n                                   isPathSeparator);\x0d\n\x0d\n    return resolvedAbsolute ?\x0d\n      `${resolvedDevice}\\\\${resolvedTail}` :\x0d\n      `${resolvedDevice}${resolvedTail}` || '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = 0;\x0d\n    let device;\x0d\n    let isAbsolute = false;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    // Try to match a root\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a single char\x2C exit early to avoid\x0d\n      // unnecessary work\x0d\n      return isPosixPathSeparator(code) ? '\\\\' : path;\x0d\n    }\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      // If we started with a separator\x2C we know we at least have an absolute\x0d\n      // path of some kind (UNC or otherwise)\x0d\n      isAbsolute = true;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          const firstPart = StringPrototypeSlice(path\x2C last\x2C j);\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              // Return the normalized version of the UNC root since there\x0d\n              // is nothing left to process\x0d\n              return `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last)}\\\\`;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              device =\x0d\n                `\\\\\\\\${firstPart}\\\\${StringPrototypeSlice(path\x2C last\x2C j)}`;\x0d\n              rootEnd = j;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        rootEnd = 1;\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      device = StringPrototypeSlice(path\x2C 0\x2C 2);\x0d\n      rootEnd = 2;\x0d\n      if (len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        // Treat separator following drive name as an absolute path\x0d\n        // indicator\x0d\n        isAbsolute = true;\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let tail = rootEnd < len ?\x0d\n      normalizeString(StringPrototypeSlice(path\x2C rootEnd)\x2C\x0d\n                      !isAbsolute\x2C '\\\\'\x2C isPathSeparator) :\x0d\n      '';\x0d\n    if (tail.length === 0 && !isAbsolute)\x0d\n      tail = '.';\x0d\n    if (tail.length > 0 &&\x0d\n        isPathSeparator(StringPrototypeCharCodeAt(path\x2C len - 1)))\x0d\n      tail += '\\\\';\x0d\n    if (device === undefined) {\x0d\n      return isAbsolute ? `\\\\${tail}` : tail;\x0d\n    }\x0d\n    return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return false;\x0d\n\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n    return isPathSeparator(code) ||\x0d\n      // Possible device root\x0d\n      (len > 2 &&\x0d\n      isWindowsDeviceRoot(code) &&\x0d\n      StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n      isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)));\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    let joined;\x0d\n    let firstPart;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = firstPart = arg;\x0d\n        else\x0d\n          joined += `\\\\${arg}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n\x0d\n    // Make sure that the joined path doesn't start with two slashes\x2C because\x0d\n    // normalize() will mistake it for a UNC path then.\x0d\n    //\x0d\n    // This step is skipped when it is very clear that the user actually\x0d\n    // intended to point at a UNC path. This is assumed when the first\x0d\n    // non-empty string arguments starts with exactly two slashes followed by\x0d\n    // at least one more non-slash character.\x0d\n    //\x0d\n    // Note that for normalize() to treat a path as a UNC path it needs to\x0d\n    // have at least 2 components\x2C so we don't filter for that here.\x0d\n    // This means that the user can use join to construct UNC paths from\x0d\n    // a server name and a share name; for example:\x0d\n    //   path.join('//server'\x2C 'share') -> '\\\\\\\\server\\\\share\\\\')\x0d\n    let needsReplace = true;\x0d\n    let slashCount = 0;\x0d\n    if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 0))) {\x0d\n      ++slashCount;\x0d\n      const firstLen = firstPart.length;\x0d\n      if (firstLen > 1 &&\x0d\n          isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 1))) {\x0d\n        ++slashCount;\x0d\n        if (firstLen > 2) {\x0d\n          if (isPathSeparator(StringPrototypeCharCodeAt(firstPart\x2C 2)))\x0d\n            ++slashCount;\x0d\n          else {\x0d\n            // We matched a UNC path in the first part\x0d\n            needsReplace = false;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (needsReplace) {\x0d\n      // Find any more consecutive slashes we need to replace\x0d\n      while (slashCount < joined.length &&\x0d\n             isPathSeparator(StringPrototypeCharCodeAt(joined\x2C slashCount))) {\x0d\n        slashCount++;\x0d\n      }\x0d\n\x0d\n      // Replace the slashes if needed\x0d\n      if (slashCount >= 2)\x0d\n        joined = `\\\\${StringPrototypeSlice(joined\x2C slashCount)}`;\x0d\n    }\x0d\n\x0d\n    return win32.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * It will solve the relative path from `from` to `to`\x2C for instance\x0d\n   * from = 'C:\\\\orandea\\\\test\\\\aaa'\x0d\n   * to = 'C:\\\\orandea\\\\impl\\\\bbb'\x0d\n   * The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromOrig = win32.resolve(from);\x0d\n    const toOrig = win32.resolve(to);\x0d\n\x0d\n    if (fromOrig === toOrig)\x0d\n      return '';\x0d\n\x0d\n    from = StringPrototypeToLowerCase(fromOrig);\x0d\n    to = StringPrototypeToLowerCase(toOrig);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let fromStart = 0;\x0d\n    while (fromStart < from.length &&\x0d\n           StringPrototypeCharCodeAt(from\x2C fromStart) === CHAR_BACKWARD_SLASH) {\x0d\n      fromStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let fromEnd = from.length;\x0d\n    while (\x0d\n      fromEnd - 1 > fromStart &&\x0d\n      StringPrototypeCharCodeAt(from\x2C fromEnd - 1) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      fromEnd--;\x0d\n    }\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n\x0d\n    // Trim any leading backslashes\x0d\n    let toStart = 0;\x0d\n    while (toStart < to.length &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toStart) === CHAR_BACKWARD_SLASH) {\x0d\n      toStart++;\x0d\n    }\x0d\n    // Trim trailing backslashes (applicable to UNC paths only)\x0d\n    let toEnd = to.length;\x0d\n    while (toEnd - 1 > toStart &&\x0d\n           StringPrototypeCharCodeAt(to\x2C toEnd - 1) === CHAR_BACKWARD_SLASH) {\x0d\n      toEnd--;\x0d\n    }\x0d\n    const toLen = toEnd - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = fromLen < toLen ? fromLen : toLen;\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_BACKWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n\x0d\n    // We found a mismatch before the first common path separator was seen\x2C so\x0d\n    // return the original `to`.\x0d\n    if (i !== length) {\x0d\n      if (lastCommonSep === -1)\x0d\n        return toOrig;\x0d\n    } else {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 2) {\x0d\n          // We get here if `from` is the device root.\x0d\n          // For example: from='C:\\\\'; to='C:\\\\foo'\x0d\n          return StringPrototypeSlice(toOrig\x2C toStart + i);\x0d\n        }\x0d\n      }\x0d\n      if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_BACKWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 2) {\x0d\n          // We get here if `to` is the device root.\x0d\n          // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\x0d\n          lastCommonSep = 3;\x0d\n        }\x0d\n      }\x0d\n      if (lastCommonSep === -1)\x0d\n        lastCommonSep = 0;\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to` and\x0d\n    // `from`\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_BACKWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '\\\\..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    toStart += lastCommonSep;\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts\x0d\n    if (out.length > 0)\x0d\n      return `${out}${StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd)}`;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(toOrig\x2C toStart) === CHAR_BACKWARD_SLASH)\x0d\n      ++toStart;\x0d\n    return StringPrototypeSlice(toOrig\x2C toStart\x2C toEnd);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Note: this will *probably* throw somewhere.\x0d\n    if (typeof path !== 'string' || path.length === 0)\x0d\n      return path;\x0d\n\x0d\n    const resolvedPath = win32.resolve(path);\x0d\n\x0d\n    if (resolvedPath.length <= 2)\x0d\n      return path;\x0d\n\x0d\n    if (StringPrototypeCharCodeAt(resolvedPath\x2C 0) === CHAR_BACKWARD_SLASH) {\x0d\n      // Possible UNC root\x0d\n      if (StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_BACKWARD_SLASH) {\x0d\n        const code = StringPrototypeCharCodeAt(resolvedPath\x2C 2);\x0d\n        if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\x0d\n          // Matched non-long UNC root\x2C convert the path to a long UNC path\x0d\n          return `\\\\\\\\?\\\\UNC\\\\${StringPrototypeSlice(resolvedPath\x2C 2)}`;\x0d\n        }\x0d\n      }\x0d\n    } else if (\x0d\n      isWindowsDeviceRoot(StringPrototypeCharCodeAt(resolvedPath\x2C 0)) &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 1) === CHAR_COLON &&\x0d\n      StringPrototypeCharCodeAt(resolvedPath\x2C 2) === CHAR_BACKWARD_SLASH\x0d\n    ) {\x0d\n      // Matched device root\x2C convert the path to a long UNC path\x0d\n      return `\\\\\\\\?\\\\${resolvedPath}`;\x0d\n    }\x0d\n\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    const len = path.length;\x0d\n    if (len === 0)\x0d\n      return '.';\x0d\n    let rootEnd = -1;\x0d\n    let offset = 0;\x0d\n    const code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      // `path` contains just a path separator\x2C exit early to avoid\x0d\n      // unnecessary work or a dot.\x0d\n      return isPathSeparator(code) ? path : '.';\x0d\n    }\x0d\n\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = offset = 1;\x0d\n\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              return path;\x0d\n            }\x0d\n            if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n\x0d\n              // Offset by 1 to include the separator after the UNC root to\x0d\n              // treat it as a "normal root" on top of a (UNC) root\x0d\n              rootEnd = offset = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    // Possible device root\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      rootEnd =\x0d\n        len > 2 && isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2)) ? 3 : 2;\x0d\n      offset = rootEnd;\x0d\n    }\x0d\n\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = len - 1; i >= offset; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1) {\x0d\n      if (rootEnd === -1)\x0d\n        return '.';\x0d\n\x0d\n      end = rootEnd;\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n    if (path.length >= 2 &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0)) &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      start = 2;\x0d\n    }\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= start; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (isPathSeparator(code)) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C i))) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let start = 0;\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Check for a drive letter prefix so as not to mistake the following\x0d\n    // path separator as an extra separator at the end of the path that can be\x0d\n    // disregarded\x0d\n\x0d\n    if (path.length >= 2 &&\x0d\n        StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON &&\x0d\n        isWindowsDeviceRoot(StringPrototypeCharCodeAt(path\x2C 0))) {\x0d\n      start = startPart = 2;\x0d\n    }\x0d\n\x0d\n    for (let i = path.length - 1; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '\\\\')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *  dir: string;\x0d\n   *  root: string;\x0d\n   *  base: string;\x0d\n   *  name: string;\x0d\n   *  ext: string;\x0d\n   *  }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n\x0d\n    const len = path.length;\x0d\n    let rootEnd = 0;\x0d\n    let code = StringPrototypeCharCodeAt(path\x2C 0);\x0d\n\x0d\n    if (len === 1) {\x0d\n      if (isPathSeparator(code)) {\x0d\n        // `path` contains just a path separator\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      ret.base = ret.name = path;\x0d\n      return ret;\x0d\n    }\x0d\n    // Try to match a root\x0d\n    if (isPathSeparator(code)) {\x0d\n      // Possible UNC root\x0d\n\x0d\n      rootEnd = 1;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 1))) {\x0d\n        // Matched double path separator at beginning\x0d\n        let j = 2;\x0d\n        let last = j;\x0d\n        // Match 1 or more non-path separators\x0d\n        while (j < len &&\x0d\n               !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n          j++;\x0d\n        }\x0d\n        if (j < len && j !== last) {\x0d\n          // Matched!\x0d\n          last = j;\x0d\n          // Match 1 or more path separators\x0d\n          while (j < len &&\x0d\n                 isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n            j++;\x0d\n          }\x0d\n          if (j < len && j !== last) {\x0d\n            // Matched!\x0d\n            last = j;\x0d\n            // Match 1 or more non-path separators\x0d\n            while (j < len &&\x0d\n                   !isPathSeparator(StringPrototypeCharCodeAt(path\x2C j))) {\x0d\n              j++;\x0d\n            }\x0d\n            if (j === len) {\x0d\n              // We matched a UNC root only\x0d\n              rootEnd = j;\x0d\n            } else if (j !== last) {\x0d\n              // We matched a UNC root with leftovers\x0d\n              rootEnd = j + 1;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (isWindowsDeviceRoot(code) &&\x0d\n               StringPrototypeCharCodeAt(path\x2C 1) === CHAR_COLON) {\x0d\n      // Possible device root\x0d\n      if (len <= 2) {\x0d\n        // `path` contains just a drive root\x2C exit early to avoid\x0d\n        // unnecessary work\x0d\n        ret.root = ret.dir = path;\x0d\n        return ret;\x0d\n      }\x0d\n      rootEnd = 2;\x0d\n      if (isPathSeparator(StringPrototypeCharCodeAt(path\x2C 2))) {\x0d\n        if (len === 3) {\x0d\n          // `path` contains just a drive root\x2C exit early to avoid\x0d\n          // unnecessary work\x0d\n          ret.root = ret.dir = path;\x0d\n          return ret;\x0d\n        }\x0d\n        rootEnd = 3;\x0d\n      }\x0d\n    }\x0d\n    if (rootEnd > 0)\x0d\n      ret.root = StringPrototypeSlice(path\x2C 0\x2C rootEnd);\x0d\n\x0d\n    let startDot = -1;\x0d\n    let startPart = rootEnd;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= rootEnd; --i) {\x0d\n      code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (isPathSeparator(code)) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n           startDot === end - 1 &&\x0d\n           startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C startPart\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C startPart\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // If the directory is the root\x2C use the entire root as the `dir` including\x0d\n    // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise\x2C strip out the\x0d\n    // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\x0d\n    if (startPart > 0 && startPart !== rootEnd)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else\x0d\n      ret.dir = ret.root;\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '\\\\'\x2C\x0d\n  delimiter: ';'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nconst posixCwd = (() => {\x0d\n  if (platformIsWin32) {\x0d\n    // Converts Windows' backslash path separators to POSIX forward slashes\x0d\n    // and truncates any drive indicator\x0d\n    const regexp = /\\\\/g;\x0d\n    return () => {\x0d\n      const cwd = StringPrototypeReplace(process.cwd()\x2C regexp\x2C '/');\x0d\n      return StringPrototypeSlice(cwd\x2C StringPrototypeIndexOf(cwd\x2C '/'));\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // We're already on POSIX\x2C no need for any transformations\x0d\n  return () => process.cwd();\x0d\n})();\x0d\n\x0d\nconst posix = {\x0d\n  /**\x0d\n   * path.resolve([from ...]\x2C to)\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  resolve(...args) {\x0d\n    let resolvedPath = '';\x0d\n    let resolvedAbsolute = false;\x0d\n\x0d\n    for (let i = args.length - 1; i >= -1 && !resolvedAbsolute; i--) {\x0d\n      const path = i >= 0 ? args[i] : posixCwd();\x0d\n      validateString(path\x2C `paths[${i}]`);\x0d\n\x0d\n      // Skip empty entries\x0d\n      if (path.length === 0) {\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      resolvedPath = `${path}/${resolvedPath}`;\x0d\n      resolvedAbsolute =\x0d\n        StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    }\x0d\n\x0d\n    // At this point the path should be resolved to a full absolute path\x2C but\x0d\n    // handle relative paths to be safe (might happen when process.cwd() fails)\x0d\n\x0d\n    // Normalize the path\x0d\n    resolvedPath = normalizeString(resolvedPath\x2C !resolvedAbsolute\x2C '/'\x2C\x0d\n                                   isPosixPathSeparator);\x0d\n\x0d\n    if (resolvedAbsolute) {\x0d\n      return `/${resolvedPath}`;\x0d\n    }\x0d\n    return resolvedPath.length > 0 ? resolvedPath : '.';\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  normalize(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    const trailingSeparator =\x0d\n      StringPrototypeCharCodeAt(path\x2C path.length - 1) === CHAR_FORWARD_SLASH;\x0d\n\x0d\n    // Normalize the path\x0d\n    path = normalizeString(path\x2C !isAbsolute\x2C '/'\x2C isPosixPathSeparator);\x0d\n\x0d\n    if (path.length === 0) {\x0d\n      if (isAbsolute)\x0d\n        return '/';\x0d\n      return trailingSeparator ? './' : '.';\x0d\n    }\x0d\n    if (trailingSeparator)\x0d\n      path += '/';\x0d\n\x0d\n    return isAbsolute ? `/${path}` : path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  isAbsolute(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    return path.length > 0 &&\x0d\n           StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {...string} args\x0d\n   * @returns {string}\x0d\n   */\x0d\n  join(...args) {\x0d\n    if (args.length === 0)\x0d\n      return '.';\x0d\n    let joined;\x0d\n    for (let i = 0; i < args.length; ++i) {\x0d\n      const arg = args[i];\x0d\n      validateString(arg\x2C 'path');\x0d\n      if (arg.length > 0) {\x0d\n        if (joined === undefined)\x0d\n          joined = arg;\x0d\n        else\x0d\n          joined += `/${arg}`;\x0d\n      }\x0d\n    }\x0d\n    if (joined === undefined)\x0d\n      return '.';\x0d\n    return posix.normalize(joined);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} from\x0d\n   * @param {string} to\x0d\n   * @returns {string}\x0d\n   */\x0d\n  relative(from\x2C to) {\x0d\n    validateString(from\x2C 'from');\x0d\n    validateString(to\x2C 'to');\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    // Trim leading forward slashes.\x0d\n    from = posix.resolve(from);\x0d\n    to = posix.resolve(to);\x0d\n\x0d\n    if (from === to)\x0d\n      return '';\x0d\n\x0d\n    const fromStart = 1;\x0d\n    const fromEnd = from.length;\x0d\n    const fromLen = fromEnd - fromStart;\x0d\n    const toStart = 1;\x0d\n    const toLen = to.length - toStart;\x0d\n\x0d\n    // Compare paths to find the longest common path from root\x0d\n    const length = (fromLen < toLen ? fromLen : toLen);\x0d\n    let lastCommonSep = -1;\x0d\n    let i = 0;\x0d\n    for (; i < length; i++) {\x0d\n      const fromCode = StringPrototypeCharCodeAt(from\x2C fromStart + i);\x0d\n      if (fromCode !== StringPrototypeCharCodeAt(to\x2C toStart + i))\x0d\n        break;\x0d\n      else if (fromCode === CHAR_FORWARD_SLASH)\x0d\n        lastCommonSep = i;\x0d\n    }\x0d\n    if (i === length) {\x0d\n      if (toLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(to\x2C toStart + i) === CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `from` is the exact base path for `to`.\x0d\n          // For example: from='/foo/bar'; to='/foo/bar/baz'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i + 1);\x0d\n        }\x0d\n        if (i === 0) {\x0d\n          // We get here if `from` is the root\x0d\n          // For example: from='/'; to='/foo'\x0d\n          return StringPrototypeSlice(to\x2C toStart + i);\x0d\n        }\x0d\n      } else if (fromLen > length) {\x0d\n        if (StringPrototypeCharCodeAt(from\x2C fromStart + i) ===\x0d\n            CHAR_FORWARD_SLASH) {\x0d\n          // We get here if `to` is the exact base path for `from`.\x0d\n          // For example: from='/foo/bar/baz'; to='/foo/bar'\x0d\n          lastCommonSep = i;\x0d\n        } else if (i === 0) {\x0d\n          // We get here if `to` is the root.\x0d\n          // For example: from='/foo/bar'; to='/'\x0d\n          lastCommonSep = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    let out = '';\x0d\n    // Generate the relative path based on the path difference between `to`\x0d\n    // and `from`.\x0d\n    for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\x0d\n      if (i === fromEnd ||\x0d\n          StringPrototypeCharCodeAt(from\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        out += out.length === 0 ? '..' : '/..';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Lastly\x2C append the rest of the destination (`to`) path that comes after\x0d\n    // the common path parts.\x0d\n    return `${out}${StringPrototypeSlice(to\x2C toStart + lastCommonSep)}`;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  toNamespacedPath(path) {\x0d\n    // Non-op on posix systems\x0d\n    return path;\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  dirname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    if (path.length === 0)\x0d\n      return '.';\x0d\n    const hasRoot = StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    for (let i = path.length - 1; i >= 1; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        if (!matchedSlash) {\x0d\n          end = i;\x0d\n          break;\x0d\n        }\x0d\n      } else {\x0d\n        // We saw the first non-path separator\x0d\n        matchedSlash = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return hasRoot ? '/' : '.';\x0d\n    if (hasRoot && end === 1)\x0d\n      return '//';\x0d\n    return StringPrototypeSlice(path\x2C 0\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @param {string} [suffix]\x0d\n   * @returns {string}\x0d\n   */\x0d\n  basename(path\x2C suffix) {\x0d\n    if (suffix !== undefined)\x0d\n      validateString(suffix\x2C 'ext');\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    let start = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n\x0d\n    if (suffix !== undefined && suffix.length > 0 && suffix.length <= path.length) {\x0d\n      if (suffix === path)\x0d\n        return '';\x0d\n      let extIdx = suffix.length - 1;\x0d\n      let firstNonSlashEnd = -1;\x0d\n      for (let i = path.length - 1; i >= 0; --i) {\x0d\n        const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n        if (code === CHAR_FORWARD_SLASH) {\x0d\n          // If we reached a path separator that was not part of a set of path\x0d\n          // separators at the end of the string\x2C stop now\x0d\n          if (!matchedSlash) {\x0d\n            start = i + 1;\x0d\n            break;\x0d\n          }\x0d\n        } else {\x0d\n          if (firstNonSlashEnd === -1) {\x0d\n            // We saw the first non-path separator\x2C remember this index in case\x0d\n            // we need it if the extension ends up not matching\x0d\n            matchedSlash = false;\x0d\n            firstNonSlashEnd = i + 1;\x0d\n          }\x0d\n          if (extIdx >= 0) {\x0d\n            // Try to match the explicit extension\x0d\n            if (code === StringPrototypeCharCodeAt(suffix\x2C extIdx)) {\x0d\n              if (--extIdx === -1) {\x0d\n                // We matched the extension\x2C so mark this as the end of our path\x0d\n                // component\x0d\n                end = i;\x0d\n              }\x0d\n            } else {\x0d\n              // Extension does not match\x2C so our result is the entire path\x0d\n              // component\x0d\n              extIdx = -1;\x0d\n              end = firstNonSlashEnd;\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (start === end)\x0d\n        end = firstNonSlashEnd;\x0d\n      else if (end === -1)\x0d\n        end = path.length;\x0d\n      return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n    }\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      if (StringPrototypeCharCodeAt(path\x2C i) === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          start = i + 1;\x0d\n          break;\x0d\n        }\x0d\n      } else if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // path component\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end === -1)\x0d\n      return '';\x0d\n    return StringPrototypeSlice(path\x2C start\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {string}\x0d\n   */\x0d\n  extname(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n    for (let i = path.length - 1; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startDot === -1 ||\x0d\n        end === -1 ||\x0d\n        // We saw a non-dot character immediately before the dot\x0d\n        preDotState === 0 ||\x0d\n        // The (right-most) trimmed path component is exactly '..'\x0d\n        (preDotState === 1 &&\x0d\n         startDot === end - 1 &&\x0d\n         startDot === startPart + 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n  }\x2C\x0d\n\x0d\n  format: FunctionPrototypeBind(_format\x2C null\x2C '/')\x2C\x0d\n\x0d\n  /**\x0d\n   * @param {string} path\x0d\n   * @returns {{\x0d\n   *   dir: string;\x0d\n   *   root: string;\x0d\n   *   base: string;\x0d\n   *   name: string;\x0d\n   *   ext: string;\x0d\n   *   }}\x0d\n   */\x0d\n  parse(path) {\x0d\n    validateString(path\x2C 'path');\x0d\n\x0d\n    const ret = { root: ''\x2C dir: ''\x2C base: ''\x2C ext: ''\x2C name: '' };\x0d\n    if (path.length === 0)\x0d\n      return ret;\x0d\n    const isAbsolute =\x0d\n      StringPrototypeCharCodeAt(path\x2C 0) === CHAR_FORWARD_SLASH;\x0d\n    let start;\x0d\n    if (isAbsolute) {\x0d\n      ret.root = '/';\x0d\n      start = 1;\x0d\n    } else {\x0d\n      start = 0;\x0d\n    }\x0d\n    let startDot = -1;\x0d\n    let startPart = 0;\x0d\n    let end = -1;\x0d\n    let matchedSlash = true;\x0d\n    let i = path.length - 1;\x0d\n\x0d\n    // Track the state of characters (if any) we see before our first dot and\x0d\n    // after any path separator we find\x0d\n    let preDotState = 0;\x0d\n\x0d\n    // Get non-dir info\x0d\n    for (; i >= start; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(path\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        // If we reached a path separator that was not part of a set of path\x0d\n        // separators at the end of the string\x2C stop now\x0d\n        if (!matchedSlash) {\x0d\n          startPart = i + 1;\x0d\n          break;\x0d\n        }\x0d\n        continue;\x0d\n      }\x0d\n      if (end === -1) {\x0d\n        // We saw the first non-path separator\x2C mark this as the end of our\x0d\n        // extension\x0d\n        matchedSlash = false;\x0d\n        end = i + 1;\x0d\n      }\x0d\n      if (code === CHAR_DOT) {\x0d\n        // If this is our first dot\x2C mark it as the start of our extension\x0d\n        if (startDot === -1)\x0d\n          startDot = i;\x0d\n        else if (preDotState !== 1)\x0d\n          preDotState = 1;\x0d\n      } else if (startDot !== -1) {\x0d\n        // We saw a non-dot and non-path separator before our dot\x2C so we should\x0d\n        // have a good chance at having a non-empty extension\x0d\n        preDotState = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end !== -1) {\x0d\n      const start = startPart === 0 && isAbsolute ? 1 : startPart;\x0d\n      if (startDot === -1 ||\x0d\n          // We saw a non-dot character immediately before the dot\x0d\n          preDotState === 0 ||\x0d\n          // The (right-most) trimmed path component is exactly '..'\x0d\n          (preDotState === 1 &&\x0d\n          startDot === end - 1 &&\x0d\n          startDot === startPart + 1)) {\x0d\n        ret.base = ret.name = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n      } else {\x0d\n        ret.name = StringPrototypeSlice(path\x2C start\x2C startDot);\x0d\n        ret.base = StringPrototypeSlice(path\x2C start\x2C end);\x0d\n        ret.ext = StringPrototypeSlice(path\x2C startDot\x2C end);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (startPart > 0)\x0d\n      ret.dir = StringPrototypeSlice(path\x2C 0\x2C startPart - 1);\x0d\n    else if (isAbsolute)\x0d\n      ret.dir = '/';\x0d\n\x0d\n    return ret;\x0d\n  }\x2C\x0d\n\x0d\n  sep: '/'\x2C\x0d\n  delimiter: ':'\x2C\x0d\n  win32: null\x2C\x0d\n  posix: null\x2C\x0d\n};\x0d\n\x0d\nposix.win32 = win32.win32 = win32;\x0d\nposix.posix = win32.posix = posix;\x0d\n\x0d\n// Legacy internal API\x2C docs-only deprecated: DEP0080\x0d\nwin32._makeLong = win32.toNamespacedPath;\x0d\nposix._makeLong = posix.toNamespacedPath;\x0d\n\x0d\nmodule.exports = platformIsWin32 ? win32 : posix;\x0d\n
code-source-info,0x1c66f8c729e
code-creation,JS,10,123092,0x1c66f8ca8f6,17,isPathSeparator node:path:52:25,0x3fcdef9efd8,~
code-source-info,0x1c66f8ca8f6,30,1794,1876,C0O1806C2O1822C4O1818C11O1853C13O1849C16O1873,,
code-creation,JS,10,123156,0x1c66f8ca9f6,35,isWindowsDeviceRoot node:path:60:29,0x3fcdef9f270,~
code-source-info,0x1c66f8ca9f6,30,1991,2136,C0O2003C2O2019C4O2016C11O2047C13O2044C20O2087C22O2084C29O2115C31O2112C34O2133,,
code-creation,JS,10,123243,0x1c66f8cab16,40,wrappedCwd node:internal/bootstrap/switches/does_own_process_state:142:20,0x220dba82ad8,~
script-source,72,node:internal/bootstrap/switches/does_own_process_state,'use strict';\x0d\n\x0d\nconst credentials = internalBinding('credentials');\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nprocess.abort = rawMethods.abort;\x0d\nprocess.umask = wrappedUmask;\x0d\nprocess.chdir = wrappedChdir;\x0d\nprocess.cwd = wrappedCwd;\x0d\n\x0d\nif (credentials.implementsPosixCredentials) {\x0d\n  const wrapped = wrapPosixCredentialSetters(credentials);\x0d\n\x0d\n  process.initgroups = wrapped.initgroups;\x0d\n  process.setgroups = wrapped.setgroups;\x0d\n  process.setegid = wrapped.setegid;\x0d\n  process.seteuid = wrapped.seteuid;\x0d\n  process.setgid = wrapped.setgid;\x0d\n  process.setuid = wrapped.setuid;\x0d\n}\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nfunction wrapPosixCredentialSetters(credentials) {\x0d\n  const {\x0d\n    codes: {\x0d\n      ERR_INVALID_ARG_TYPE\x2C\x0d\n      ERR_UNKNOWN_CREDENTIAL\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/errors');\x0d\n  const {\x0d\n    validateUint32\x2C\x0d\n  } = require('internal/validators');\x0d\n\x0d\n  const {\x0d\n    initgroups: _initgroups\x2C\x0d\n    setgroups: _setgroups\x2C\x0d\n    setegid: _setegid\x2C\x0d\n    seteuid: _seteuid\x2C\x0d\n    setgid: _setgid\x2C\x0d\n    setuid: _setuid\x2C\x0d\n  } = credentials;\x0d\n\x0d\n  function initgroups(user\x2C extraGroup) {\x0d\n    validateId(user\x2C 'user');\x0d\n    validateId(extraGroup\x2C 'extraGroup');\x0d\n    // Result is 0 on success\x2C 1 if user is unknown\x2C 2 if group is unknown.\x0d\n    const result = _initgroups(user\x2C extraGroup);\x0d\n    if (result === 1) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('User'\x2C user);\x0d\n    } else if (result === 2) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C extraGroup);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function setgroups(groups) {\x0d\n    validateArray(groups\x2C 'groups');\x0d\n    for (let i = 0; i < groups.length; i++) {\x0d\n      validateId(groups[i]\x2C `groups[${i}]`);\x0d\n    }\x0d\n    // Result is 0 on success. A positive integer indicates that the\x0d\n    // corresponding group was not found.\x0d\n    const result = _setgroups(groups);\x0d\n    if (result > 0) {\x0d\n      throw new ERR_UNKNOWN_CREDENTIAL('Group'\x2C groups[result - 1]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function wrapIdSetter(type\x2C method) {\x0d\n    return function(id) {\x0d\n      validateId(id\x2C 'id');\x0d\n      if (typeof id === 'number') id >>>= 0;\x0d\n      // Result is 0 on success\x2C 1 if credential is unknown.\x0d\n      const result = method(id);\x0d\n      if (result === 1) {\x0d\n        throw new ERR_UNKNOWN_CREDENTIAL(type\x2C id);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  function validateId(id\x2C name) {\x0d\n    if (typeof id === 'number') {\x0d\n      validateUint32(id\x2C name);\x0d\n    } else if (typeof id !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C ['number'\x2C 'string']\x2C id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    initgroups\x2C\x0d\n    setgroups\x2C\x0d\n    setegid: wrapIdSetter('Group'\x2C _setegid)\x2C\x0d\n    seteuid: wrapIdSetter('User'\x2C _seteuid)\x2C\x0d\n    setgid: wrapIdSetter('Group'\x2C _setgid)\x2C\x0d\n    setuid: wrapIdSetter('User'\x2C _setuid)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Cache the working directory to prevent lots of lookups. If the working\x0d\n// directory is changed by `chdir`\x2C it'll be updated.\x0d\nlet cachedCwd = '';\x0d\n\x0d\nif (isBuildingSnapshot()) {\x0d\n  // Reset the cwd on both serialization and deserialization so it's fine\x0d\n  // for process.cwd() to be accessed inside of serialization callbacks.\x0d\n  addSerializeCallback(() => {\x0d\n    cachedCwd = '';\x0d\n    addDeserializeCallback(() => {\x0d\n      cachedCwd = '';\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction wrappedChdir(directory) {\x0d\n  validateString(directory\x2C 'directory');\x0d\n  rawMethods.chdir(directory);\x0d\n  // Mark cache that it requires an update.\x0d\n  cachedCwd = '';\x0d\n}\x0d\n\x0d\nfunction wrappedUmask(mask) {\x0d\n  if (mask !== undefined) {\x0d\n    mask = parseFileMode(mask\x2C 'mask');\x0d\n  }\x0d\n  return rawMethods.umask(mask);\x0d\n}\x0d\n\x0d\nfunction wrappedCwd() {\x0d\n  if (cachedCwd === '')\x0d\n    cachedCwd = rawMethods.cwd();\x0d\n  return cachedCwd;\x0d\n}\x0d\n
code-source-info,0x1c66f8cab16,72,3941,4029,C0O3949C7O3963C12O3976C17O3999C22O3999C29O3986C35O4009C39O4026,,
code-creation,JS,10,123658,0x1c66f8cb20e,444,normalizeString node:path:66:25,0x3fcdef9f2c0,~
code-source-info,0x1c66f8cb20e
code-creation,JS,10,123957,0x1c66f8cb7c6,352,initializeGlobalConsole node:internal/console/constructor:690:33,0x3fcdefabe00,~
script-source,46,node:internal/console/constructor,'use strict';\x0d\n\x0d\n// The Console constructor is not actually used to construct the global\x0d\n// console. It's exported for backwards compatibility.\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberPrototypeToFixed\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { trace } = internalBinding('trace_events');\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n  codes: {\x0d\n    ERR_CONSOLE_WRITABLE_STREAM\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { previewEntries } = internalBinding('util');\x0d\nconst { Buffer: { isBuffer } } = require('buffer');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  formatWithOptions\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst {\x0d\n  isTypedArray\x2C isSet\x2C isMap\x2C isSetIterator\x2C isMapIterator\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  CHAR_LOWERCASE_B: kTraceBegin\x2C\x0d\n  CHAR_LOWERCASE_E: kTraceEnd\x2C\x0d\n  CHAR_LOWERCASE_N: kTraceInstant\x2C\x0d\n  CHAR_UPPERCASE_C: kTraceCount\x2C\x0d\n} = require('internal/constants');\x0d\nconst kCounts = Symbol('counts');\x0d\n\x0d\nconst kTraceConsoleCategory = 'node\x2Cnode.console';\x0d\n\x0d\nconst kSecond = 1000;\x0d\nconst kMinute = 60 * kSecond;\x0d\nconst kHour = 60 * kMinute;\x0d\nconst kMaxGroupIndentation = 1000;\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet cliTable;\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\n// Track amount of indentation required via `console.group()`.\x0d\nconst kGroupIndent = Symbol('kGroupIndent');\x0d\nconst kGroupIndentationWidth = Symbol('kGroupIndentWidth');\x0d\nconst kFormatForStderr = Symbol('kFormatForStderr');\x0d\nconst kFormatForStdout = Symbol('kFormatForStdout');\x0d\nconst kGetInspectOptions = Symbol('kGetInspectOptions');\x0d\nconst kColorMode = Symbol('kColorMode');\x0d\nconst kIsConsole = Symbol('kIsConsole');\x0d\nconst kWriteToConsole = Symbol('kWriteToConsole');\x0d\nconst kBindProperties = Symbol('kBindProperties');\x0d\nconst kBindStreamsEager = Symbol('kBindStreamsEager');\x0d\nconst kBindStreamsLazy = Symbol('kBindStreamsLazy');\x0d\nconst kUseStdout = Symbol('kUseStdout');\x0d\nconst kUseStderr = Symbol('kUseStderr');\x0d\n\x0d\nconst optionsMap = new SafeWeakMap();\x0d\nfunction Console(options /* or: stdout\x2C stderr\x2C ignoreErrors = true */) {\x0d\n  // We have to test new.target here to see if this function is called\x0d\n  // with new\x2C because we need to define a custom instanceof to accommodate\x0d\n  // the global console.\x0d\n  if (new.target === undefined) {\x0d\n    return ReflectConstruct(Console\x2C arguments);\x0d\n  }\x0d\n\x0d\n  if (!options || typeof options.write === 'function') {\x0d\n    options = {\x0d\n      stdout: options\x2C\x0d\n      stderr: arguments[1]\x2C\x0d\n      ignoreErrors: arguments[2]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    stdout\x2C\x0d\n    stderr = stdout\x2C\x0d\n    ignoreErrors = true\x2C\x0d\n    colorMode = 'auto'\x2C\x0d\n    inspectOptions\x2C\x0d\n    groupIndentation\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (!stdout || typeof stdout.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stdout');\x0d\n  }\x0d\n  if (!stderr || typeof stderr.write !== 'function') {\x0d\n    throw new ERR_CONSOLE_WRITABLE_STREAM('stderr');\x0d\n  }\x0d\n\x0d\n  if (typeof colorMode !== 'boolean' && colorMode !== 'auto')\x0d\n    throw new ERR_INVALID_ARG_VALUE('colorMode'\x2C colorMode);\x0d\n\x0d\n  if (groupIndentation !== undefined) {\x0d\n    validateInteger(groupIndentation\x2C 'groupIndentation'\x2C\x0d\n                    0\x2C kMaxGroupIndentation);\x0d\n  }\x0d\n\x0d\n  if (inspectOptions !== undefined) {\x0d\n    validateObject(inspectOptions\x2C 'options.inspectOptions');\x0d\n\x0d\n    if (inspectOptions.colors !== undefined &&\x0d\n        options.colorMode !== undefined) {\x0d\n      throw new ERR_INCOMPATIBLE_OPTION_PAIR(\x0d\n        'options.inspectOptions.color'\x2C 'colorMode');\x0d\n    }\x0d\n    optionsMap.set(this\x2C inspectOptions);\x0d\n  }\x0d\n\x0d\n  // Bind the prototype functions to this Console instance\x0d\n  ArrayPrototypeForEach(ObjectKeys(Console.prototype)\x2C (key) => {\x0d\n    // We have to bind the methods grabbed from the instance instead of from\x0d\n    // the prototype so that users extending the Console can override them\x0d\n    // from the prototype chain of the subclass.\x0d\n    this[key] = FunctionPrototypeBind(this[key]\x2C this);\x0d\n    ObjectDefineProperty(this[key]\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: key\x2C\x0d\n    });\x0d\n  });\x0d\n\x0d\n  this[kBindStreamsEager](stdout\x2C stderr);\x0d\n  this[kBindProperties](ignoreErrors\x2C colorMode\x2C groupIndentation);\x0d\n}\x0d\n\x0d\nconst consolePropAttributes = {\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n};\x0d\n\x0d\n// Fixup global.console instanceof global.console.Console\x0d\nObjectDefineProperty(Console\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value(instance) {\x0d\n    return instance[kIsConsole];\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst kColorInspectOptions = { colors: true };\x0d\nconst kNoColorInspectOptions = {};\x0d\n\x0d\nObjectDefineProperties(Console.prototype\x2C {\x0d\n  [kBindStreamsEager]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Eager version for the Console constructor\x0d\n    value: function(stdout\x2C stderr) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': { __proto__: null\x2C ...consolePropAttributes\x2C value: stdout }\x2C\x0d\n        '_stderr': { __proto__: null\x2C ...consolePropAttributes\x2C value: stderr }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindStreamsLazy]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    // Lazily load the stdout and stderr from an object so we don't\x0d\n    // create the stdio streams when they are not even accessed\x0d\n    value: function(object) {\x0d\n      let stdout;\x0d\n      let stderr;\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdout': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stdout) stdout = object.stdout;\x0d\n            return stdout;\x0d\n          }\x2C\x0d\n          set(value) { stdout = value; }\x2C\x0d\n        }\x2C\x0d\n        '_stderr': {\x0d\n          __proto__: null\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          get() {\x0d\n            if (!stderr) { stderr = object.stderr; }\x0d\n            return stderr;\x0d\n          }\x2C\x0d\n          set(value) { stderr = value; }\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kBindProperties]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(ignoreErrors\x2C colorMode\x2C groupIndentation = 2) {\x0d\n      ObjectDefineProperties(this\x2C {\x0d\n        '_stdoutErrorHandler': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStdout)\x2C\x0d\n        }\x2C\x0d\n        '_stderrErrorHandler': {\x0d\n          ...consolePropAttributes\x2C\x0d\n          __proto__: null\x2C\x0d\n          value: createWriteErrorHandler(this\x2C kUseStderr)\x2C\x0d\n        }\x2C\x0d\n        '_ignoreErrors': {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: Boolean(ignoreErrors)\x2C\x0d\n        }\x2C\x0d\n        '_times': { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        // Corresponds to https://console.spec.whatwg.org/#count-map\x0d\n        [kCounts]: { __proto__: null\x2C ...consolePropAttributes\x2C value: new SafeMap() }\x2C\x0d\n        [kColorMode]: { __proto__: null\x2C ...consolePropAttributes\x2C value: colorMode }\x2C\x0d\n        [kIsConsole]: { __proto__: null\x2C ...consolePropAttributes\x2C value: true }\x2C\x0d\n        [kGroupIndent]: { __proto__: null\x2C ...consolePropAttributes\x2C value: '' }\x2C\x0d\n        [kGroupIndentationWidth]: {\x0d\n          __proto__: null\x2C\x0d\n          ...consolePropAttributes\x2C\x0d\n          value: groupIndentation\x2C\x0d\n        }\x2C\x0d\n        [SymbolToStringTag]: {\x0d\n          __proto__: null\x2C\x0d\n          writable: false\x2C\x0d\n          enumerable: false\x2C\x0d\n          configurable: true\x2C\x0d\n          value: 'console'\x2C\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kWriteToConsole]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(streamSymbol\x2C string) {\x0d\n      const ignoreErrors = this._ignoreErrors;\x0d\n      const groupIndent = this[kGroupIndent];\x0d\n\x0d\n      const useStdout = streamSymbol === kUseStdout;\x0d\n      const stream = useStdout ? this._stdout : this._stderr;\x0d\n      const errorHandler = useStdout ?\x0d\n        this._stdoutErrorHandler : this._stderrErrorHandler;\x0d\n\x0d\n      if (groupIndent.length !== 0) {\x0d\n        if (StringPrototypeIncludes(string\x2C '\\n')) {\x0d\n          string = RegExpPrototypeSymbolReplace(/\\n/g\x2C string\x2C `\\n${groupIndent}`);\x0d\n        }\x0d\n        string = groupIndent + string;\x0d\n      }\x0d\n      string += '\\n';\x0d\n\x0d\n      if (ignoreErrors === false) return stream.write(string);\x0d\n\x0d\n      // There may be an error occurring synchronously (e.g. for files or TTYs\x0d\n      // on POSIX systems) or asynchronously (e.g. pipes on POSIX systems)\x2C so\x0d\n      // handle both situations.\x0d\n      try {\x0d\n        // Add and later remove a noop error handler to catch synchronous\x0d\n        // errors.\x0d\n        if (stream.listenerCount('error') === 0)\x0d\n          stream.once('error'\x2C noop);\x0d\n\x0d\n        stream.write(string\x2C errorHandler);\x0d\n      } catch (e) {\x0d\n        // Console is a debugging utility\x2C so it swallowing errors is not\x0d\n        // desirable even in edge cases such as low stack space.\x0d\n        if (isStackOverflowError(e))\x0d\n          throw e;\x0d\n        // Sorry\x2C there's no proper way to pass along the error here.\x0d\n      } finally {\x0d\n        stream.removeListener('error'\x2C noop);\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kGetInspectOptions]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(stream) {\x0d\n      let color = this[kColorMode];\x0d\n      if (color === 'auto') {\x0d\n        color = lazyUtilColors().shouldColorize(stream);\x0d\n      }\x0d\n\x0d\n      const options = optionsMap.get(this);\x0d\n      if (options) {\x0d\n        if (options.colors === undefined) {\x0d\n          options.colors = color;\x0d\n        }\x0d\n        return options;\x0d\n      }\x0d\n\x0d\n      return color ? kColorInspectOptions : kNoColorInspectOptions;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStdout]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stdout);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  [kFormatForStderr]: {\x0d\n    __proto__: null\x2C\x0d\n    ...consolePropAttributes\x2C\x0d\n    value: function(args) {\x0d\n      const opts = this[kGetInspectOptions](this._stderr);\x0d\n      ArrayPrototypeUnshift(args\x2C opts);\x0d\n      return ReflectApply(formatWithOptions\x2C null\x2C args);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Make a function that can serve as the callback passed to `stream.write()`.\x0d\nfunction createWriteErrorHandler(instance\x2C streamSymbol) {\x0d\n  return (err) => {\x0d\n    // This conditional evaluates to true if and only if there was an error\x0d\n    // that was not already emitted (which happens when the _write callback\x0d\n    // is invoked asynchronously).\x0d\n    const stream = streamSymbol === kUseStdout ?\x0d\n      instance._stdout : instance._stderr;\x0d\n    if (err !== null && !stream._writableState.errorEmitted) {\x0d\n      // If there was an error\x2C it will be emitted on `stream` as\x0d\n      // an `error` event. Adding a `once` listener will keep that error\x0d\n      // from becoming an uncaught exception\x2C but since the handler is\x0d\n      // removed after the event\x2C non-console.* writes won't be affected.\x0d\n      // we are only adding noop if there is no one else listening for 'error'\x0d\n      if (stream.listenerCount('error') === 0) {\x0d\n        stream.once('error'\x2C noop);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nconst consoleMethods = {\x0d\n  log(...args) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C this[kFormatForStdout](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  warn(...args) {\x0d\n    this[kWriteToConsole](kUseStderr\x2C this[kFormatForStderr](args));\x0d\n  }\x2C\x0d\n\x0d\n\x0d\n  dir(object\x2C options) {\x0d\n    this[kWriteToConsole](kUseStdout\x2C inspect(object\x2C {\x0d\n      customInspect: false\x2C\x0d\n      ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      ...options\x2C\x0d\n    }));\x0d\n  }\x2C\x0d\n\x0d\n  time(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    if (this._times.has(label)) {\x0d\n      process.emitWarning(`Label '${label}' already exists for console.time()`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceBegin\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    this._times.set(label\x2C process.hrtime());\x0d\n  }\x2C\x0d\n\x0d\n  timeEnd(label = 'default') {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    const found = timeLogImpl(this\x2C 'timeEnd'\x2C label);\x0d\n    trace(kTraceEnd\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n    if (found) {\x0d\n      this._times.delete(label);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  timeLog(label = 'default'\x2C ...data) {\x0d\n    // Coerces everything other than Symbol to a string\x0d\n    label = `${label}`;\x0d\n    timeLogImpl(this\x2C 'timeLog'\x2C label\x2C data);\x0d\n    trace(kTraceInstant\x2C kTraceConsoleCategory\x2C `time::${label}`\x2C 0);\x0d\n  }\x2C\x0d\n\x0d\n  trace: function trace(...args) {\x0d\n    const err = {\x0d\n      name: 'Trace'\x2C\x0d\n      message: this[kFormatForStderr](args)\x2C\x0d\n    };\x0d\n    ErrorCaptureStackTrace(err\x2C trace);\x0d\n    this.error(err.stack);\x0d\n  }\x2C\x0d\n\x0d\n  assert(expression\x2C ...args) {\x0d\n    if (!expression) {\x0d\n      args[0] = `Assertion failed${args.length === 0 ? '' : `: ${args[0]}`}`;\x0d\n      // The arguments will be formatted in warn() again\x0d\n      ReflectApply(this.warn\x2C this\x2C args);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#clear\x0d\n  clear() {\x0d\n    // It only makes sense to clear if _stdout is a TTY.\x0d\n    // Otherwise\x2C do nothing.\x0d\n    if (this._stdout.isTTY && process.env.TERM !== 'dumb') {\x0d\n      // The require is here intentionally to avoid readline being\x0d\n      // required too early when console is first loaded.\x0d\n      const {\x0d\n        cursorTo\x2C\x0d\n        clearScreenDown\x2C\x0d\n      } = require('internal/readline/callbacks');\x0d\n      cursorTo(this._stdout\x2C 0\x2C 0);\x0d\n      clearScreenDown(this._stdout);\x0d\n    }\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#count\x0d\n  count(label = 'default') {\x0d\n    // Ensures that label is a string\x2C and only things that can be\x0d\n    // coerced to strings. e.g. Symbol is not allowed\x0d\n    label = `${label}`;\x0d\n    const counts = this[kCounts];\x0d\n    let count = counts.get(label);\x0d\n    if (count === undefined)\x0d\n      count = 1;\x0d\n    else\x0d\n      count++;\x0d\n    counts.set(label\x2C count);\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C count);\x0d\n    this.log(`${label}: ${count}`);\x0d\n  }\x2C\x0d\n\x0d\n  // Defined by: https://console.spec.whatwg.org/#countreset\x0d\n  countReset(label = 'default') {\x0d\n    const counts = this[kCounts];\x0d\n    if (!counts.has(label)) {\x0d\n      process.emitWarning(`Count for '${label}' does not exist`);\x0d\n      return;\x0d\n    }\x0d\n    trace(kTraceCount\x2C kTraceConsoleCategory\x2C `count::${label}`\x2C 0\x2C 0);\x0d\n    counts.delete(`${label}`);\x0d\n  }\x2C\x0d\n\x0d\n  group(...data) {\x0d\n    if (data.length > 0) {\x0d\n      ReflectApply(this.log\x2C this\x2C data);\x0d\n    }\x0d\n    this[kGroupIndent] +=\x0d\n      StringPrototypeRepeat(' '\x2C this[kGroupIndentationWidth]);\x0d\n  }\x2C\x0d\n\x0d\n  groupEnd() {\x0d\n    this[kGroupIndent] = StringPrototypeSlice(\x0d\n      this[kGroupIndent]\x2C\x0d\n      0\x2C\x0d\n      this[kGroupIndent].length - this[kGroupIndentationWidth]\x2C\x0d\n    );\x0d\n  }\x2C\x0d\n\x0d\n  // https://console.spec.whatwg.org/#table\x0d\n  table(tabularData\x2C properties) {\x0d\n    if (properties !== undefined)\x0d\n      validateArray(properties\x2C 'properties');\x0d\n\x0d\n    if (tabularData === null || typeof tabularData !== 'object')\x0d\n      return this.log(tabularData);\x0d\n\x0d\n    cliTable ??= require('internal/cli_table');\x0d\n    const final = (k\x2C v) => this.log(cliTable(k\x2C v));\x0d\n\x0d\n    const _inspect = (v) => {\x0d\n      const depth = v !== null &&\x0d\n                    typeof v === 'object' &&\x0d\n                    !isArray(v) &&\x0d\n                    ObjectKeys(v).length > 2 ? -1 : 0;\x0d\n      const opt = {\x0d\n        depth\x2C\x0d\n        maxArrayLength: 3\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        ...this[kGetInspectOptions](this._stdout)\x2C\x0d\n      };\x0d\n      return inspect(v\x2C opt);\x0d\n    };\x0d\n    const getIndexArray = (length) => ArrayFrom(\x0d\n      { length }\x2C (_\x2C i) => _inspect(i));\x0d\n\x0d\n    const mapIter = isMapIterator(tabularData);\x0d\n    let isKeyValue = false;\x0d\n    let i = 0;\x0d\n    if (mapIter) {\x0d\n      const res = previewEntries(tabularData\x2C true);\x0d\n      tabularData = res[0];\x0d\n      isKeyValue = res[1];\x0d\n    }\x0d\n\x0d\n    if (isKeyValue || isMap(tabularData)) {\x0d\n      const keys = [];\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      if (mapIter) {\x0d\n        for (; i < tabularData.length / 2; ++i) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(tabularData[i * 2]));\x0d\n          ArrayPrototypePush(values\x2C _inspect(tabularData[i * 2 + 1]));\x0d\n          length++;\x0d\n        }\x0d\n      } else {\x0d\n        for (const { 0: k\x2C 1: v } of tabularData) {\x0d\n          ArrayPrototypePush(keys\x2C _inspect(k));\x0d\n          ArrayPrototypePush(values\x2C _inspect(v));\x0d\n          length++;\x0d\n        }\x0d\n      }\x0d\n      return final([\x0d\n        iterKey\x2C keyKey\x2C valuesKey\x2C\x0d\n      ]\x2C [\x0d\n        getIndexArray(length)\x2C\x0d\n        keys\x2C\x0d\n        values\x2C\x0d\n      ]);\x0d\n    }\x0d\n\x0d\n    const setIter = isSetIterator(tabularData);\x0d\n    if (setIter)\x0d\n      tabularData = previewEntries(tabularData);\x0d\n\x0d\n    const setlike = setIter || mapIter || isSet(tabularData);\x0d\n    if (setlike) {\x0d\n      const values = [];\x0d\n      let length = 0;\x0d\n      for (const v of tabularData) {\x0d\n        ArrayPrototypePush(values\x2C _inspect(v));\x0d\n        length++;\x0d\n      }\x0d\n      return final([iterKey\x2C valuesKey]\x2C [getIndexArray(length)\x2C values]);\x0d\n    }\x0d\n\x0d\n    const map = { __proto__: null };\x0d\n    let hasPrimitives = false;\x0d\n    const valuesKeyArray = [];\x0d\n    const indexKeyArray = ObjectKeys(tabularData);\x0d\n\x0d\n    for (; i < indexKeyArray.length; i++) {\x0d\n      const item = tabularData[indexKeyArray[i]];\x0d\n      const primitive = item === null ||\x0d\n          (typeof item !== 'function' && typeof item !== 'object');\x0d\n      if (properties === undefined && primitive) {\x0d\n        hasPrimitives = true;\x0d\n        valuesKeyArray[i] = _inspect(item);\x0d\n      } else {\x0d\n        const keys = properties || ObjectKeys(item);\x0d\n        for (const key of keys) {\x0d\n          map[key] ??= [];\x0d\n          if ((primitive && properties) ||\x0d\n               !ObjectPrototypeHasOwnProperty(item\x2C key))\x0d\n            map[key][i] = '';\x0d\n          else\x0d\n            map[key][i] = _inspect(item[key]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const keys = ObjectKeys(map);\x0d\n    const values = ObjectValues(map);\x0d\n    if (hasPrimitives) {\x0d\n      ArrayPrototypePush(keys\x2C valuesKey);\x0d\n      ArrayPrototypePush(values\x2C valuesKeyArray);\x0d\n    }\x0d\n    ArrayPrototypeUnshift(keys\x2C indexKey);\x0d\n    ArrayPrototypeUnshift(values\x2C indexKeyArray);\x0d\n\x0d\n    return final(keys\x2C values);\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\n// Returns true if label was found\x0d\nfunction timeLogImpl(self\x2C name\x2C label\x2C data) {\x0d\n  const time = self._times.get(label);\x0d\n  if (time === undefined) {\x0d\n    process.emitWarning(`No such label '${label}' for console.${name}()`);\x0d\n    return false;\x0d\n  }\x0d\n  const duration = process.hrtime(time);\x0d\n  const ms = duration[0] * 1000 + duration[1] / 1e6;\x0d\n\x0d\n  const formatted = formatTime(ms);\x0d\n\x0d\n  if (data === undefined) {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted);\x0d\n  } else {\x0d\n    self.log('%s: %s'\x2C label\x2C formatted\x2C ...new SafeArrayIterator(data));\x0d\n  }\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction pad(value) {\x0d\n  return StringPrototypePadStart(`${value}`\x2C 2\x2C '0');\x0d\n}\x0d\n\x0d\nfunction formatTime(ms) {\x0d\n  let hours = 0;\x0d\n  let minutes = 0;\x0d\n  let seconds = 0;\x0d\n\x0d\n  if (ms >= kSecond) {\x0d\n    if (ms >= kMinute) {\x0d\n      if (ms >= kHour) {\x0d\n        hours = MathFloor(ms / kHour);\x0d\n        ms = ms % kHour;\x0d\n      }\x0d\n      minutes = MathFloor(ms / kMinute);\x0d\n      ms = ms % kMinute;\x0d\n    }\x0d\n    seconds = ms / kSecond;\x0d\n  }\x0d\n\x0d\n  if (hours !== 0 || minutes !== 0) {\x0d\n    ({ 0: seconds\x2C 1: ms } = StringPrototypeSplit(\x0d\n      NumberPrototypeToFixed(seconds\x2C 3)\x2C\x0d\n      '.'\x2C\x0d\n    ));\x0d\n    const res = hours !== 0 ? `${hours}:${pad(minutes)}` : minutes;\x0d\n    return `${res}:${pad(seconds)}.${ms} (${hours !== 0 ? 'h:m' : ''}m:ss.mmm)`;\x0d\n  }\x0d\n\x0d\n  if (seconds !== 0) {\x0d\n    return `${NumberPrototypeToFixed(seconds\x2C 3)}s`;\x0d\n  }\x0d\n\x0d\n  return `${Number(NumberPrototypeToFixed(ms\x2C 3))}ms`;\x0d\n}\x0d\n\x0d\nconst keyKey = 'Key';\x0d\nconst valuesKey = 'Values';\x0d\nconst indexKey = '(index)';\x0d\nconst iterKey = '(iteration index)';\x0d\n\x0d\nconst isArray = (v) => ArrayIsArray(v) || isTypedArray(v) || isBuffer(v);\x0d\n\x0d\nfunction noop() {}\x0d\n\x0d\nfor (const method of ReflectOwnKeys(consoleMethods))\x0d\n  Console.prototype[method] = consoleMethods[method];\x0d\n\x0d\nConsole.prototype.debug = Console.prototype.log;\x0d\nConsole.prototype.info = Console.prototype.log;\x0d\nConsole.prototype.dirxml = Console.prototype.log;\x0d\nConsole.prototype.error = Console.prototype.warn;\x0d\nConsole.prototype.groupCollapsed = Console.prototype.group;\x0d\n\x0d\nfunction initializeGlobalConsole(globalConsole) {\x0d\n  globalConsole[kBindStreamsLazy](process);\x0d\n  const {\x0d\n    namespace: {\x0d\n      addSerializeCallback\x2C\x0d\n      isBuildingSnapshot\x2C\x0d\n    }\x2C\x0d\n  } = require('internal/v8/startup_snapshot');\x0d\n\x0d\n  if (!internalBinding('config').hasInspector || !isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n  const { console: consoleFromVM } = internalBinding('inspector');\x0d\n  const nodeConsoleKeys = ObjectKeys(Console.prototype);\x0d\n  const vmConsoleKeys = ObjectKeys(consoleFromVM);\x0d\n  const originalKeys = new SafeSet(vmConsoleKeys.concat(nodeConsoleKeys));\x0d\n  const inspectorConsoleKeys = new SafeSet();\x0d\n  for (const key of ObjectKeys(globalConsole)) {\x0d\n    if (!originalKeys.has(key)) {\x0d\n      inspectorConsoleKeys.add(key);\x0d\n    }\x0d\n  }\x0d\n  // During deserialization these should be reinstalled to console by\x0d\n  // V8 when the inspector client is created.\x0d\n  addSerializeCallback(() => {\x0d\n    for (const key of inspectorConsoleKeys) {\x0d\n      globalConsole[key] = undefined;\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Console\x2C\x0d\n  kBindStreamsLazy\x2C\x0d\n  kBindProperties\x2C\x0d\n  initializeGlobalConsole\x2C\x0d\n  formatTime\x2C // exported for tests\x0d\n};\x0d\n
code-source-info,0x1c66f8cb7c6,46,21146,22133,C0O21146C12O21167C19O21181C21O21180C30O21198C35O21309C43O21309C48O21236C53O21245C58O21274C63O21355C71O21360C76O21385C82O21403C87O21432C88O21439C89O21483C97O21483C102O21465C107O21540C119O21559C124O21540C129O21596C136O21596C141O21647C148O21673C153O21673C161O21647C167O21731C174O21731C179O21731C181O21767C191O21767C213O21760C243O21760C246O21819C252O21819C259O21838C263O21859C269O21859C274O21749C341O22002C346O22002C351O22132,,
tick,0x7ff6cb62059c,126081,0,0x0,3,0x7ff6cbdbb8d0,0x1c66f8c5dcf,0x1c66f8c2cde,0xea2f3f14e,0x2bcf6affd74
code-creation,JS,10,126211,0x1c66f8cd46e,94,value node:internal/console/constructor:205:20,0x3fcdefaaee0,~
code-source-info,0x1c66f8cd46e,46,6044,6706,C0O6044C15O6066C16O6066C18O6085C19O6085C21O6100C33O6151C38O6253C46O6364C60O6428C65O6530C73O6645C87O6100C93O6705,,
code-creation,JS,10,126472,0x1c66f8cd8a6,63,addReadOnlyProcessAlias node:internal/process/pre_execution:278:33,0x3fcdefbf408,~
code-source-info,0x1c66f8cd8a6,67,9239,9499,C16O9292C21O9292C26O9319C28O9337C36O9367C43O9457C49O9476C56O9337C62O9498,,
code-creation,JS,10,126624,0x1c66f8cda46,82,getOptionValue node:internal/options:44:24,0x3fcdef898b8,~
code-source-info,0x1c66f8cda46,17,1028,1278,C0O1062C3O1062C7O1108C15O1108C22O1159C30O1181C38O1181C43O1168C47O1159C53O1197C55O1222C60O1228C61O1252C66O1252C74O1267C81O1275,,
code-creation,JS,10,126751,0x1c66f8cdb9e,33,getCLIOptionsFromBinding node:internal/options:18:34,0x3fcdef896a0,~
code-source-info,0x1c66f8cdb9e,17,514,620,C0O522C6O546C11O573C15O558C28O599C32O617,,
code-creation,JS,10,127615,0x1c66f8ce22e,46,setupTraceCategoryState node:internal/process/pre_execution:448:33,0x3fcdefbf7f0,~
code-source-info,0x1c66f8ce22e,67,14367,14598,C0O14410C6O14410C11O14383C16O14483C22O14483C27O14454C32O14526C35O14551C40O14526C45O14597,,
code-creation,JS,10,127776,0x1c66f8ce3c6,77,toggleTraceCategoryState node:internal/process/per_thread:418:34,0x3fcdef9bdb8,~
script-source,27,node:internal/process/per_thread,'use strict';\x0d\n\x0d\n// This files contains process bootstrappers that can be\x0d\n// run when setting up each thread\x2C including the main\x0d\n// thread and the worker threads.\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeEvery\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  BigUint64Array\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Set\x2C\x0d\n  SetPrototypeEntries\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n  codes: {\x0d\n    ERR_ASSERTION\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst format = require('internal/util/inspect').format;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst { toNamespacedPath } = require('path');\x0d\nconst constants = internalBinding('constants').os.signals;\x0d\n\x0d\nconst kInternal = Symbol('internal properties');\x0d\n\x0d\nfunction assert(x\x2C msg) {\x0d\n  if (!x) throw new ERR_ASSERTION(msg || 'assertion error');\x0d\n}\x0d\nconst { exitCodes: { kNoFailure } } = internalBinding('errors');\x0d\n\x0d\nconst binding = internalBinding('process_methods');\x0d\n\x0d\n// The 3 entries filled in by the original process.hrtime contains\x0d\n// the upper/lower 32 bits of the second part of the value\x2C\x0d\n// and the remaining nanoseconds of the value.\x0d\nconst hrValues = binding.hrtimeBuffer;\x0d\n// Use a BigUint64Array because this is actually a bit\x0d\n// faster than simply returning a BigInt from C++ in V8 7.1.\x0d\nconst hrBigintValues = new BigUint64Array(binding.hrtimeBuffer.buffer\x2C 0\x2C 1);\x0d\n\x0d\nfunction hrtime(time) {\x0d\n  binding.hrtime();\x0d\n\x0d\n  if (time !== undefined) {\x0d\n    validateArray(time\x2C 'time');\x0d\n    if (time.length !== 2) {\x0d\n      throw new ERR_OUT_OF_RANGE('time'\x2C 2\x2C time.length);\x0d\n    }\x0d\n\x0d\n    const sec = (hrValues[0] * 0x100000000 + hrValues[1]) - time[0];\x0d\n    const nsec = hrValues[2] - time[1];\x0d\n    const needsBorrow = nsec < 0;\x0d\n    return [needsBorrow ? sec - 1 : sec\x2C needsBorrow ? nsec + 1e9 : nsec];\x0d\n  }\x0d\n\x0d\n  return [\x0d\n    hrValues[0] * 0x100000000 + hrValues[1]\x2C\x0d\n    hrValues[2]\x2C\x0d\n  ];\x0d\n}\x0d\n\x0d\nfunction hrtimeBigInt() {\x0d\n  binding.hrtimeBigInt();\x0d\n  return hrBigintValues[0];\x0d\n}\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\n// The execution of this function itself should not cause any side effects.\x0d\nfunction wrapProcessMethods(binding) {\x0d\n  const {\x0d\n    cpuUsage: _cpuUsage\x2C\x0d\n    memoryUsage: _memoryUsage\x2C\x0d\n    rss\x2C\x0d\n    resourceUsage: _resourceUsage\x2C\x0d\n    loadEnvFile: _loadEnvFile\x2C\x0d\n  } = binding;\x0d\n\x0d\n  function _rawDebug(...args) {\x0d\n    binding._rawDebug(ReflectApply(format\x2C null\x2C args));\x0d\n  }\x0d\n\x0d\n  // Create the argument array that will be passed to the native function.\x0d\n  const cpuValues = new Float64Array(2);\x0d\n\x0d\n  // Replace the native function with the JS version that calls the native\x0d\n  // function.\x0d\n  function cpuUsage(prevValue) {\x0d\n    // If a previous value was passed in\x2C ensure it has the correct shape.\x0d\n    if (prevValue) {\x0d\n      if (!previousValueIsValid(prevValue.user)) {\x0d\n        validateObject(prevValue\x2C 'prevValue');\x0d\n\x0d\n        validateNumber(prevValue.user\x2C 'prevValue.user');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.user'\x2C\x0d\n                                                   prevValue.user);\x0d\n      }\x0d\n\x0d\n      if (!previousValueIsValid(prevValue.system)) {\x0d\n        validateNumber(prevValue.system\x2C 'prevValue.system');\x0d\n        throw new ERR_INVALID_ARG_VALUE.RangeError('prevValue.system'\x2C\x0d\n                                                   prevValue.system);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Call the native function to get the current values.\x0d\n    _cpuUsage(cpuValues);\x0d\n\x0d\n    // If a previous value was passed in\x2C return diff of current from previous.\x0d\n    if (prevValue) {\x0d\n      return {\x0d\n        user: cpuValues[0] - prevValue.user\x2C\x0d\n        system: cpuValues[1] - prevValue.system\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    // If no previous value passed in\x2C return current value.\x0d\n    return {\x0d\n      user: cpuValues[0]\x2C\x0d\n      system: cpuValues[1]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // Ensure that a previously passed in value is valid. Currently\x2C the native\x0d\n  // implementation always returns numbers <= Number.MAX_SAFE_INTEGER.\x0d\n  function previousValueIsValid(num) {\x0d\n    return typeof num === 'number' &&\x0d\n        num <= NumberMAX_SAFE_INTEGER &&\x0d\n        num >= 0;\x0d\n  }\x0d\n\x0d\n  const memValues = new Float64Array(5);\x0d\n  function memoryUsage() {\x0d\n    _memoryUsage(memValues);\x0d\n    return {\x0d\n      rss: memValues[0]\x2C\x0d\n      heapTotal: memValues[1]\x2C\x0d\n      heapUsed: memValues[2]\x2C\x0d\n      external: memValues[3]\x2C\x0d\n      arrayBuffers: memValues[4]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  memoryUsage.rss = rss;\x0d\n\x0d\n  function exit(code) {\x0d\n    const {\x0d\n      handleProcessExit\x2C\x0d\n    } = require('internal/modules/esm/handle_process_exit');\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n\x0d\n    if (arguments.length !== 0) {\x0d\n      process.exitCode = code;\x0d\n    }\x0d\n\x0d\n    if (!process._exiting) {\x0d\n      process._exiting = true;\x0d\n      process.emit('exit'\x2C process.exitCode || kNoFailure);\x0d\n    }\x0d\n    // FIXME(joyeecheung): This is an undocumented API that gets monkey-patched\x0d\n    // in the user land. Either document it\x2C or deprecate it in favor of a\x0d\n    // better public alternative.\x0d\n    process.reallyExit(process.exitCode || kNoFailure);\x0d\n\x0d\n    // If this is a worker\x2C v8::Isolate::TerminateExecution() is called above.\x0d\n    // That function spoofs the stack pointer to cause the stack guard\x0d\n    // check to throw the termination exception. Because v8 performs\x0d\n    // stack guard check upon every function call\x2C we give it a chance.\x0d\n    //\x0d\n    // Without this\x2C user code after `process.exit()` would take effect.\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-addition.js\x0d\n    // test/parallel/test-worker-voluntarily-exit-followed-by-throw.js\x0d\n    nop();\x0d\n  }\x0d\n\x0d\n  function kill(pid\x2C sig) {\x0d\n    let err;\x0d\n\x0d\n    // eslint-disable-next-line eqeqeq\x0d\n    if (pid != (pid | 0)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('pid'\x2C 'number'\x2C pid);\x0d\n    }\x0d\n\x0d\n    // Preserve null signal\x0d\n    if (sig === (sig | 0)) {\x0d\n      // XXX(joyeecheung): we have to use process._kill here because\x0d\n      // it's monkey-patched by tests.\x0d\n      err = process._kill(pid\x2C sig);\x0d\n    } else {\x0d\n      sig = sig || 'SIGTERM';\x0d\n      if (constants[sig]) {\x0d\n        err = process._kill(pid\x2C constants[sig]);\x0d\n      } else {\x0d\n        throw new ERR_UNKNOWN_SIGNAL(sig);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (err)\x0d\n      throw new ErrnoException(err\x2C 'kill');\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const resourceValues = new Float64Array(16);\x0d\n  function resourceUsage() {\x0d\n    _resourceUsage(resourceValues);\x0d\n    return {\x0d\n      userCPUTime: resourceValues[0]\x2C\x0d\n      systemCPUTime: resourceValues[1]\x2C\x0d\n      maxRSS: resourceValues[2]\x2C\x0d\n      sharedMemorySize: resourceValues[3]\x2C\x0d\n      unsharedDataSize: resourceValues[4]\x2C\x0d\n      unsharedStackSize: resourceValues[5]\x2C\x0d\n      minorPageFault: resourceValues[6]\x2C\x0d\n      majorPageFault: resourceValues[7]\x2C\x0d\n      swappedOut: resourceValues[8]\x2C\x0d\n      fsRead: resourceValues[9]\x2C\x0d\n      fsWrite: resourceValues[10]\x2C\x0d\n      ipcSent: resourceValues[11]\x2C\x0d\n      ipcReceived: resourceValues[12]\x2C\x0d\n      signalsCount: resourceValues[13]\x2C\x0d\n      voluntaryContextSwitches: resourceValues[14]\x2C\x0d\n      involuntaryContextSwitches: resourceValues[15]\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Loads the `.env` file to process.env.\x0d\n   * @param {string | URL | Buffer | undefined} path\x0d\n   */\x0d\n  function loadEnvFile(path = undefined) { // Provide optional value so that `loadEnvFile.length` returns 0\x0d\n    if (path != null) {\x0d\n      path = getValidatedPath(path);\x0d\n      _loadEnvFile(toNamespacedPath(path));\x0d\n    } else {\x0d\n      _loadEnvFile();\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  return {\x0d\n    _rawDebug\x2C\x0d\n    cpuUsage\x2C\x0d\n    resourceUsage\x2C\x0d\n    memoryUsage\x2C\x0d\n    kill\x2C\x0d\n    exit\x2C\x0d\n    loadEnvFile\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nconst replaceUnderscoresRegex = /_/g;\x0d\nconst leadingDashesRegex = /^--?/;\x0d\nconst trailingValuesRegex = /=.*$/;\x0d\n\x0d\n// This builds the initial process.allowedNodeEnvironmentFlags\x0d\n// from data in the config binding.\x0d\nfunction buildAllowedFlags() {\x0d\n  const {\x0d\n    envSettings: { kAllowedInEnvvar }\x2C\x0d\n    types: { kBoolean }\x2C\x0d\n  } = internalBinding('options');\x0d\n  const { options\x2C aliases } = require('internal/options');\x0d\n\x0d\n  const allowedNodeEnvironmentFlags = [];\x0d\n  for (const { 0: name\x2C 1: info } of options) {\x0d\n    if (info.envVarSettings === kAllowedInEnvvar) {\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C name);\x0d\n      if (info.type === kBoolean) {\x0d\n        const negatedName = `--no-${name.slice(2)}`;\x0d\n        ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C negatedName);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function isAccepted(to) {\x0d\n    if (!StringPrototypeStartsWith(to\x2C '-') || to === '--') return true;\x0d\n    const recursiveExpansion = aliases.get(to);\x0d\n    if (recursiveExpansion) {\x0d\n      if (recursiveExpansion[0] === to)\x0d\n        ArrayPrototypeSplice(recursiveExpansion\x2C 0\x2C 1);\x0d\n      return ArrayPrototypeEvery(recursiveExpansion\x2C isAccepted);\x0d\n    }\x0d\n    return options.get(to).envVarSettings === kAllowedInEnvvar;\x0d\n  }\x0d\n  for (const { 0: from\x2C 1: expansion } of aliases) {\x0d\n    if (ArrayPrototypeEvery(expansion\x2C isAccepted)) {\x0d\n      let canonical = from;\x0d\n      if (StringPrototypeEndsWith(canonical\x2C '='))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 1);\x0d\n      if (StringPrototypeEndsWith(canonical\x2C ' <arg>'))\x0d\n        canonical = StringPrototypeSlice(canonical\x2C 0\x2C canonical.length - 4);\x0d\n      ArrayPrototypePush(allowedNodeEnvironmentFlags\x2C canonical);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const trimLeadingDashes =\x0d\n    (flag) => StringPrototypeReplace(flag\x2C leadingDashesRegex\x2C '');\x0d\n\x0d\n  // Save these for comparison against flags provided to\x0d\n  // process.allowedNodeEnvironmentFlags.has() which lack leading dashes.\x0d\n  const nodeFlags = ArrayPrototypeMap(allowedNodeEnvironmentFlags\x2C\x0d\n                                      trimLeadingDashes);\x0d\n\x0d\n  class NodeEnvironmentFlagsSet extends Set {\x0d\n    constructor(array) {\x0d\n      super();\x0d\n      this[kInternal] = { array };\x0d\n    }\x0d\n\x0d\n    add() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    delete() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    clear() {\x0d\n      // No-op\x2C `Set` API compatible\x0d\n    }\x0d\n\x0d\n    has(key) {\x0d\n      // This will return `true` based on various possible\x0d\n      // permutations of a flag\x2C including present/missing leading\x0d\n      // dash(es) and/or underscores-for-dashes.\x0d\n      // Strips any values after `=`\x2C inclusive.\x0d\n      // TODO(addaleax): It might be more flexible to run the option parser\x0d\n      // on a dummy option set and see whether it rejects the argument or\x0d\n      // not.\x0d\n      if (typeof key === 'string') {\x0d\n        key = StringPrototypeReplace(key\x2C replaceUnderscoresRegex\x2C '-');\x0d\n        if (RegExpPrototypeExec(leadingDashesRegex\x2C key) !== null) {\x0d\n          key = StringPrototypeReplace(key\x2C trailingValuesRegex\x2C '');\x0d\n          return ArrayPrototypeIncludes(this[kInternal].array\x2C key);\x0d\n        }\x0d\n        return ArrayPrototypeIncludes(nodeFlags\x2C key);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    entries() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeEntries(this[kInternal].set);\x0d\n    }\x0d\n\x0d\n    forEach(callback\x2C thisArg = undefined) {\x0d\n      ArrayPrototypeForEach(\x0d\n        this[kInternal].array\x2C\x0d\n        (v) => ReflectApply(callback\x2C thisArg\x2C [v\x2C v\x2C this])\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    get size() {\x0d\n      return this[kInternal].array.length;\x0d\n    }\x0d\n\x0d\n    values() {\x0d\n      this[kInternal].set ??=\x0d\n        new Set(new SafeArrayIterator(this[kInternal].array));\x0d\n      return SetPrototypeValues(this[kInternal].set);\x0d\n    }\x0d\n  }\x0d\n  const flagSetValues = NodeEnvironmentFlagsSet.prototype.values;\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C SymbolIterator\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(NodeEnvironmentFlagsSet.prototype\x2C 'keys'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: flagSetValues\x2C\x0d\n  });\x0d\n\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype.constructor);\x0d\n  ObjectFreeze(NodeEnvironmentFlagsSet.prototype);\x0d\n\x0d\n  return ObjectFreeze(new NodeEnvironmentFlagsSet(\x0d\n    allowedNodeEnvironmentFlags\x2C\x0d\n  ));\x0d\n}\x0d\n\x0d\n// Lazy load internal/trace_events_async_hooks only if the async_hooks\x0d\n// trace event category is enabled.\x0d\nlet traceEventsAsyncHook;\x0d\n// Dynamically enable/disable the traceEventsAsyncHook\x0d\nfunction toggleTraceCategoryState(asyncHooksEnabled) {\x0d\n  if (asyncHooksEnabled) {\x0d\n    if (!traceEventsAsyncHook) {\x0d\n      traceEventsAsyncHook =\x0d\n        require('internal/trace_events_async_hooks').createHook();\x0d\n    }\x0d\n    traceEventsAsyncHook.enable();\x0d\n  } else if (traceEventsAsyncHook) {\x0d\n    traceEventsAsyncHook.disable();\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  toggleTraceCategoryState\x2C\x0d\n  assert\x2C\x0d\n  buildAllowedFlags\x2C\x0d\n  wrapProcessMethods\x2C\x0d\n  hrtime\x2C\x0d\n  hrtimeBigInt\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8ce3c6,27,12795,13102,C0O12820C4O12850C10O12886C16O12918C21O12962C26O12963C33O12907C39O12989C44O13010C49O13010C55O13030C61O13063C66O13084C71O13084C76O13101,,
code-creation,JS,10,129088,0x1c66f8cf32e,62,setupInspectorHooks node:internal/process/pre_execution:454:29,0x3fcdefbf840,~
code-source-info,0x1c66f8cf32e,67,14630,15197,C0O14979C6O14983C11O15008C17O15078C23O15078C28O15045C33O15060C38O15125C44O15125C49O15153C54O15154C61O15196,,
code-creation,JS,10,129238,0x1c66f8cf5be,126,setupWarningHandler node:internal/process/pre_execution:291:29,0x3fcdefbf458,~
code-source-info,0x1c66f8cf5be,67,9531,10041,C0O9531C11O9598C19O9598C24O9552C30O9568C36O9638C46O9642C57O9687C62O9691C69O9708C74O9724C79O9732C90O9732C96O9863C103O9867C108O9898C120O9898C125O10040,,
code-creation,JS,10,129409,0x1c66f8cf8f6,113,setupUndici node:internal/process/pre_execution:313:21,0x3fcdefbf4a8,~
code-source-info,0x1c66f8cf8f6,67,10140,10551,C0O10148C8O10152C14O10202C23O10232C32O10265C41O10297C50O10329C59O10367C64O10372C68O10392C76O10413C82O10413C88O10464C95O10485C106O10464C112O10550,,
code-creation,JS,10,129519,0x1c66f8cfb46,28,getEmbedderOptions node:internal/options:32:28,0x3fcdef89818,~
code-source-info,0x1c66f8cfb46,17,791,913,C0O799C6O828C11O846C17O844C23O887C27O910,,
code-creation,JS,10,129682,0x1c66f8d007e,174,setupWebCrypto node:internal/process/pre_execution:329:24,0x3fcdefbf4f8,~
code-source-info,0x1c66f8d007e,67,10682,11642,C0O10690C5O10694C9O10714C17O10742C23O10742C29O10803C30O10810C31O10821C37O10825C42O10850C48O10870C55O10909C73O10870C78O11192C85O11221C96O11192C103O11335C110O11356C123O11426C154O11426C167O11335C173O11641,,
new,MemoryChunk,0x8c1d140000,262144
new,MemoryChunk,0x7ff64c440000,262144
code-creation,JS,11,130097,0x7ff64c443040,2536,defineLazyProperties node:internal/util:588:30,0x3fcdef88150,^
script-source,16,node:internal/util,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferPrototypeGetByteLength\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  Promise\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n    ERR_UNKNOWN_SIGNAL\x2C\x0d\n  }\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  overrideStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\nconst {\x0d\n  isArrayBufferDetached: _isArrayBufferDetached\x2C\x0d\n  guessHandleType: _guessHandleType\x2C\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n    decorated_private_symbol\x2C\x0d\n  }\x2C\x0d\n  sleep: _sleep\x2C\x0d\n} = internalBinding('util');\x0d\nconst { isNativeError } = internalBinding('types');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { encodings } = internalBinding('string_decoder');\x0d\n\x0d\nconst noCrypto = !process.versions.openssl;\x0d\n\x0d\nconst experimentalWarnings = new SafeSet();\x0d\n\x0d\nconst colorRegExp = /\\u001b\\[\\d\\d?m/g; // eslint-disable-line no-control-regex\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nfunction removeColors(str) {\x0d\n  return StringPrototypeReplace(str\x2C colorRegExp\x2C '');\x0d\n}\x0d\n\x0d\nfunction isError(e) {\x0d\n  // An error could be an instance of Error while not being a native error\x0d\n  // or could be from a different realm and not be instance of Error but still\x0d\n  // be a native error.\x0d\n  return isNativeError(e) || e instanceof Error;\x0d\n}\x0d\n\x0d\n// Keep a list of deprecation codes that have been warned on so we only warn on\x0d\n// each one once.\x0d\nconst codesWarned = new SafeSet();\x0d\n\x0d\nlet validateString;\x0d\n\x0d\nfunction getDeprecationWarningEmitter(\x0d\n  code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\x0d\n  shouldEmitWarning = () => true\x2C\x0d\n) {\x0d\n  let warned = false;\x0d\n  return function() {\x0d\n    if (!warned && shouldEmitWarning()) {\x0d\n      warned = true;\x0d\n      if (code !== undefined) {\x0d\n        if (!codesWarned.has(code)) {\x0d\n          const emitWarning = useEmitSync ?\x0d\n            require('internal/process/warning').emitWarningSync :\x0d\n            process.emitWarning;\x0d\n          emitWarning(msg\x2C 'DeprecationWarning'\x2C code\x2C deprecated);\x0d\n          codesWarned.add(code);\x0d\n        }\x0d\n      } else {\x0d\n        process.emitWarning(msg\x2C 'DeprecationWarning'\x2C deprecated);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction isPendingDeprecation() {\x0d\n  return getOptionValue('--pending-deprecation') &&\x0d\n    !getOptionValue('--no-deprecation');\x0d\n}\x0d\n\x0d\n// Internal deprecator for pending --pending-deprecation. This can be invoked\x0d\n// at snapshot building time as the warning permission is only queried at\x0d\n// run time.\x0d\nfunction pendingDeprecate(fn\x2C msg\x2C code) {\x0d\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\x0d\n    code\x2C msg\x2C deprecated\x2C false\x2C isPendingDeprecation\x2C\x0d\n  );\x0d\n  function deprecated(...args) {\x0d\n    emitDeprecationWarning();\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\n// Mark that a method should not be used.\x0d\n// Returns a modified function which warns once by default.\x0d\n// If --no-deprecation is set\x2C then it is a no-op.\x0d\nfunction deprecate(fn\x2C msg\x2C code\x2C useEmitSync) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateString === undefined)\x0d\n    ({ validateString } = require('internal/validators'));\x0d\n\x0d\n  if (code !== undefined)\x0d\n    validateString(code\x2C 'code');\x0d\n\x0d\n  const emitDeprecationWarning = getDeprecationWarningEmitter(\x0d\n    code\x2C msg\x2C deprecated\x2C useEmitSync\x2C\x0d\n  );\x0d\n\x0d\n  function deprecated(...args) {\x0d\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\x0d\n    if (!process.noDeprecation) {\x0d\n      emitDeprecationWarning();\x0d\n    }\x0d\n    if (new.target) {\x0d\n      return ReflectConstruct(fn\x2C args\x2C new.target);\x0d\n    }\x0d\n    return ReflectApply(fn\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  // The wrapper will keep the same prototype as fn to maintain prototype chain\x0d\n  ObjectSetPrototypeOf(deprecated\x2C fn);\x0d\n  if (fn.prototype) {\x0d\n    // Setting this (rather than using Object.setPrototype\x2C as above) ensures\x0d\n    // that calling the unwrapped constructor gives an instanceof the wrapped\x0d\n    // constructor.\x0d\n    deprecated.prototype = fn.prototype;\x0d\n  }\x0d\n\x0d\n  return deprecated;\x0d\n}\x0d\n\x0d\nfunction decorateErrorStack(err) {\x0d\n  if (!(isError(err) && err.stack) || err[decorated_private_symbol])\x0d\n    return;\x0d\n\x0d\n  const arrow = err[arrow_message_private_symbol];\x0d\n\x0d\n  if (arrow) {\x0d\n    err.stack = arrow + err.stack;\x0d\n    err[decorated_private_symbol] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction assertCrypto() {\x0d\n  if (noCrypto)\x0d\n    throw new ERR_NO_CRYPTO();\x0d\n}\x0d\n\x0d\n// Return undefined if there is no match.\x0d\n// Move the "slow cases" to a separate function to make sure this function gets\x0d\n// inlined properly. That prioritizes the common case.\x0d\nfunction normalizeEncoding(enc) {\x0d\n  if (enc == null || enc === 'utf8' || enc === 'utf-8') return 'utf8';\x0d\n  return slowCases(enc);\x0d\n}\x0d\n\x0d\nfunction slowCases(enc) {\x0d\n  switch (enc.length) {\x0d\n    case 4:\x0d\n      if (enc === 'UTF8') return 'utf8';\x0d\n      if (enc === 'ucs2' || enc === 'UCS2') return 'utf16le';\x0d\n      enc = StringPrototypeToLowerCase(enc);\x0d\n      if (enc === 'utf8') return 'utf8';\x0d\n      if (enc === 'ucs2') return 'utf16le';\x0d\n      break;\x0d\n    case 3:\x0d\n      if (enc === 'hex' || enc === 'HEX' ||\x0d\n      StringPrototypeToLowerCase(enc) === 'hex')\x0d\n        return 'hex';\x0d\n      break;\x0d\n    case 5:\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      if (enc === 'UTF-8') return 'utf8';\x0d\n      if (enc === 'ASCII') return 'ascii';\x0d\n      if (enc === 'UCS-2') return 'utf16le';\x0d\n      enc = StringPrototypeToLowerCase(enc);\x0d\n      if (enc === 'utf-8') return 'utf8';\x0d\n      if (enc === 'ascii') return 'ascii';\x0d\n      if (enc === 'ucs-2') return 'utf16le';\x0d\n      break;\x0d\n    case 6:\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      if (enc === 'BASE64') return 'base64';\x0d\n      if (enc === 'LATIN1' || enc === 'BINARY') return 'latin1';\x0d\n      enc = StringPrototypeToLowerCase(enc);\x0d\n      if (enc === 'base64') return 'base64';\x0d\n      if (enc === 'latin1' || enc === 'binary') return 'latin1';\x0d\n      break;\x0d\n    case 7:\x0d\n      if (enc === 'utf16le' || enc === 'UTF16LE' ||\x0d\n      StringPrototypeToLowerCase(enc) === 'utf16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 8:\x0d\n      if (enc === 'utf-16le' || enc === 'UTF-16LE' ||\x0d\n      StringPrototypeToLowerCase(enc) === 'utf-16le')\x0d\n        return 'utf16le';\x0d\n      break;\x0d\n    case 9:\x0d\n      if (enc === 'base64url' || enc === 'BASE64URL' ||\x0d\n      StringPrototypeToLowerCase(enc) === 'base64url')\x0d\n        return 'base64url';\x0d\n      break;\x0d\n    default:\x0d\n      if (enc === '') return 'utf8';\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitExperimentalWarning(feature) {\x0d\n  if (experimentalWarnings.has(feature)) return;\x0d\n  const msg = `${feature} is an experimental feature and might change at any time`;\x0d\n  experimentalWarnings.add(feature);\x0d\n  process.emitWarning(msg\x2C 'ExperimentalWarning');\x0d\n}\x0d\n\x0d\nfunction filterDuplicateStrings(items\x2C low) {\x0d\n  const map = new SafeMap();\x0d\n  for (let i = 0; i < items.length; i++) {\x0d\n    const item = items[i];\x0d\n    const key = StringPrototypeToLowerCase(item);\x0d\n    if (low) {\x0d\n      map.set(key\x2C key);\x0d\n    } else {\x0d\n      map.set(key\x2C item);\x0d\n    }\x0d\n  }\x0d\n  return ArrayPrototypeSort(ArrayFrom(map.values()));\x0d\n}\x0d\n\x0d\nfunction cachedResult(fn) {\x0d\n  let result;\x0d\n  return () => {\x0d\n    if (result === undefined)\x0d\n      result = fn();\x0d\n    return ArrayPrototypeSlice(result);\x0d\n  };\x0d\n}\x0d\n\x0d\n// Useful for Wrapping an ES6 Class with a constructor Function that\x0d\n// does not require the new keyword. For instance:\x0d\n//   class A { constructor(x) {this.x = x;}}\x0d\n//   const B = createClassWrapper(A);\x0d\n//   B() instanceof A // true\x0d\n//   B() instanceof B // true\x0d\nfunction createClassWrapper(type) {\x0d\n  function fn(...args) {\x0d\n    return ReflectConstruct(type\x2C args\x2C new.target || type);\x0d\n  }\x0d\n  // Mask the wrapper function name and length values\x0d\n  ObjectDefineProperties(fn\x2C {\x0d\n    name: { __proto__: null\x2C value: type.name }\x2C\x0d\n    length: { __proto__: null\x2C value: type.length }\x2C\x0d\n  });\x0d\n  ObjectSetPrototypeOf(fn\x2C type);\x0d\n  fn.prototype = type.prototype;\x0d\n  return fn;\x0d\n}\x0d\n\x0d\nlet signalsToNamesMapping;\x0d\nfunction getSignalsToNamesMapping() {\x0d\n  if (signalsToNamesMapping !== undefined)\x0d\n    return signalsToNamesMapping;\x0d\n\x0d\n  signalsToNamesMapping = { __proto__: null };\x0d\n  for (const key in signals) {\x0d\n    signalsToNamesMapping[signals[key]] = key;\x0d\n  }\x0d\n\x0d\n  return signalsToNamesMapping;\x0d\n}\x0d\n\x0d\nfunction convertToValidSignal(signal) {\x0d\n  if (typeof signal === 'number' && getSignalsToNamesMapping()[signal])\x0d\n    return signal;\x0d\n\x0d\n  if (typeof signal === 'string') {\x0d\n    const signalName = signals[StringPrototypeToUpperCase(signal)];\x0d\n    if (signalName) return signalName;\x0d\n  }\x0d\n\x0d\n  throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n}\x0d\n\x0d\nfunction getConstructorOf(obj) {\x0d\n  while (obj) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '') {\x0d\n      return descriptor.value;\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nlet cachedURL;\x0d\nlet cachedCWD;\x0d\n\x0d\n/**\x0d\n * Get the current working directory while accounting for the possibility that it has been deleted.\x0d\n * `process.cwd()` can fail if the parent directory is deleted while the process runs.\x0d\n * @returns {URL} The current working directory or the volume root if it cannot be determined.\x0d\n */\x0d\nfunction getCWDURL() {\x0d\n  const { sep } = require('path');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n\x0d\n  let cwd;\x0d\n\x0d\n  try {\x0d\n    // The implementation of `process.cwd()` already uses proper cache when it can.\x0d\n    // It's a relatively cheap call performance-wise for the most common use case.\x0d\n    cwd = process.cwd();\x0d\n  } catch {\x0d\n    cachedURL ??= pathToFileURL(sep);\x0d\n  }\x0d\n\x0d\n  if (cwd != null && cwd !== cachedCWD) {\x0d\n    cachedURL = pathToFileURL(cwd + sep);\x0d\n    cachedCWD = cwd;\x0d\n  }\x0d\n\x0d\n  return cachedURL;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorName(err) {\x0d\n  const entry = uvErrmapGet(err);\x0d\n  return entry ? entry[0] : `Unknown system error ${err}`;\x0d\n}\x0d\n\x0d\nfunction getSystemErrorMap() {\x0d\n  return lazyUv().getErrorMap();\x0d\n}\x0d\n\x0d\nconst kCustomPromisifiedSymbol = SymbolFor('nodejs.util.promisify.custom');\x0d\nconst kCustomPromisifyArgsSymbol = Symbol('customPromisifyArgs');\x0d\n\x0d\nlet validateFunction;\x0d\n\x0d\nfunction promisify(original) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateFunction === undefined)\x0d\n    ({ validateFunction } = require('internal/validators'));\x0d\n\x0d\n  validateFunction(original\x2C 'original');\x0d\n\x0d\n  if (original[kCustomPromisifiedSymbol]) {\x0d\n    const fn = original[kCustomPromisifiedSymbol];\x0d\n\x0d\n    validateFunction(fn\x2C 'util.promisify.custom');\x0d\n\x0d\n    return ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  // Names to create an object from in case the callback receives multiple\x0d\n  // arguments\x2C e.g. ['bytesRead'\x2C 'buffer'] for fs.read.\x0d\n  const argumentNames = original[kCustomPromisifyArgsSymbol];\x0d\n\x0d\n  function fn(...args) {\x0d\n    return new Promise((resolve\x2C reject) => {\x0d\n      ArrayPrototypePush(args\x2C (err\x2C ...values) => {\x0d\n        if (err) {\x0d\n          return reject(err);\x0d\n        }\x0d\n        if (argumentNames !== undefined && values.length > 1) {\x0d\n          const obj = {};\x0d\n          for (let i = 0; i < argumentNames.length; i++)\x0d\n            obj[argumentNames[i]] = values[i];\x0d\n          resolve(obj);\x0d\n        } else {\x0d\n          resolve(values[0]);\x0d\n        }\x0d\n      });\x0d\n      ReflectApply(original\x2C this\x2C args);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ObjectSetPrototypeOf(fn\x2C ObjectGetPrototypeOf(original));\x0d\n\x0d\n  ObjectDefineProperty(fn\x2C kCustomPromisifiedSymbol\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C enumerable: false\x2C writable: false\x2C configurable: true\x2C\x0d\n  });\x0d\n\x0d\n  const descriptors = ObjectGetOwnPropertyDescriptors(original);\x0d\n  const propertiesValues = ObjectValues(descriptors);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  return ObjectDefineProperties(fn\x2C descriptors);\x0d\n}\x0d\n\x0d\npromisify.custom = kCustomPromisifiedSymbol;\x0d\n\x0d\n// The built-in Array#join is slower in v8 6.0\x0d\nfunction join(output\x2C separator) {\x0d\n  let str = '';\x0d\n  if (output.length !== 0) {\x0d\n    const lastIndex = output.length - 1;\x0d\n    for (let i = 0; i < lastIndex; i++) {\x0d\n      // It is faster not to use a template string here\x0d\n      str += output[i];\x0d\n      str += separator;\x0d\n    }\x0d\n    str += output[lastIndex];\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// As of V8 6.6\x2C depending on the size of the array\x2C this is anywhere\x0d\n// between 1.5-10x faster than the two-arg version of Array#splice()\x0d\nfunction spliceOne(list\x2C index) {\x0d\n  for (; index + 1 < list.length; index++)\x0d\n    list[index] = list[index + 1];\x0d\n  list.pop();\x0d\n}\x0d\n\x0d\nconst kNodeModulesRE = /^(.*)[\\\\/]node_modules[\\\\/]/;\x0d\n\x0d\nlet getStructuredStack;\x0d\n\x0d\nfunction isInsideNodeModules() {\x0d\n  if (getStructuredStack === undefined) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    // Use `runInNewContext()` to get something tamper-proof and\x0d\n    // side-effect-free. Since this is currently only used for a deprecated API\x2C\x0d\n    // the perf implications should be okay.\x0d\n    getStructuredStack = runInNewContext(`(function() {\x0d\n      try { Error.stackTraceLimit = Infinity; } catch {}\x0d\n      return function structuredStack() {\x0d\n        const e = new Error();\x0d\n        overrideStackTrace.set(e\x2C (err\x2C trace) => trace);\x0d\n        return e.stack;\x0d\n      };\x0d\n    })()`\x2C { overrideStackTrace }\x2C { filename: 'structured-stack' });\x0d\n  }\x0d\n\x0d\n  const stack = getStructuredStack();\x0d\n\x0d\n  // Iterate over all stack frames and look for the first one not coming\x0d\n  // from inside Node.js itself:\x0d\n  if (ArrayIsArray(stack)) {\x0d\n    for (const frame of stack) {\x0d\n      const filename = frame.getFileName();\x0d\n      // If a filename does not start with / or contain \\\x2C\x0d\n      // it's likely from Node.js core.\x0d\n      if (RegExpPrototypeExec(/^\\/|\\\\/\x2C filename) === null)\x0d\n        continue;\x0d\n      return RegExpPrototypeExec(kNodeModulesRE\x2C filename) !== null;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nfunction once(callback) {\x0d\n  let called = false;\x0d\n  return function(...args) {\x0d\n    if (called) return;\x0d\n    called = true;\x0d\n    return ReflectApply(callback\x2C this\x2C args);\x0d\n  };\x0d\n}\x0d\n\x0d\nlet validateUint32;\x0d\n\x0d\nfunction sleep(msec) {\x0d\n  // Lazy-load to avoid a circular dependency.\x0d\n  if (validateUint32 === undefined)\x0d\n    ({ validateUint32 } = require('internal/validators'));\x0d\n\x0d\n  validateUint32(msec\x2C 'msec');\x0d\n  _sleep(msec);\x0d\n}\x0d\n\x0d\nfunction createDeferredPromise() {\x0d\n  let resolve;\x0d\n  let reject;\x0d\n  const promise = new Promise((res\x2C rej) => {\x0d\n    resolve = res;\x0d\n    reject = rej;\x0d\n  });\x0d\n\x0d\n  return { promise\x2C resolve\x2C reject };\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#define-the-operations\x0d\nfunction defineOperation(target\x2C name\x2C method) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    configurable: true\x2C\x0d\n    value: method\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-interfaces\x0d\nfunction exposeInterface(target\x2C name\x2C interfaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: interfaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#es-namespaces\x0d\nfunction exposeNamespace(target\x2C name\x2C namespaceObject) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: namespaceObject\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction exposeGetterAndSetter(target\x2C name\x2C getter\x2C setter = undefined) {\x0d\n  ObjectDefineProperty(target\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    get: getter\x2C\x0d\n    set: setter\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction defineLazyProperties(target\x2C id\x2C keys\x2C enumerable = true) {\x0d\n  const descriptors = { __proto__: null };\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let lazyLoadedValue;\x0d\n    function set(value) {\x0d\n      ObjectDefineProperty(target\x2C key\x2C {\x0d\n        __proto__: null\x2C\x0d\n        writable: true\x2C\x0d\n        value\x2C\x0d\n      });\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n    function get() {\x0d\n      mod ??= require(id);\x0d\n      if (lazyLoadedValue === undefined) {\x0d\n        lazyLoadedValue = mod[key];\x0d\n        set(lazyLoadedValue);\x0d\n      }\x0d\n      return lazyLoadedValue;\x0d\n    }\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n    descriptors[key] = {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable\x2C\x0d\n      get\x2C\x0d\n      set\x2C\x0d\n    };\x0d\n  }\x0d\n  ObjectDefineProperties(target\x2C descriptors);\x0d\n}\x0d\n\x0d\nfunction defineReplaceableLazyAttribute(target\x2C id\x2C keys\x2C writable = true\x2C check) {\x0d\n  let mod;\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    let value;\x0d\n    let setterCalled = false;\x0d\n\x0d\n    function get() {\x0d\n      if (check !== undefined) {\x0d\n        FunctionPrototypeCall(check\x2C this);\x0d\n      }\x0d\n      if (setterCalled) {\x0d\n        return value;\x0d\n      }\x0d\n      mod ??= require(id);\x0d\n      value ??= mod[key];\x0d\n      return value;\x0d\n    }\x0d\n\x0d\n    ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `get ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    function set(val) {\x0d\n      setterCalled = true;\x0d\n      value = val;\x0d\n    }\x0d\n    ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: `set ${key}`\x2C\x0d\n    });\x0d\n\x0d\n    ObjectDefineProperty(target\x2C key\x2C {\x0d\n      __proto__: null\x2C\x0d\n      enumerable: true\x2C\x0d\n      configurable: true\x2C\x0d\n      get\x2C\x0d\n      set: writable ? set : undefined\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction exposeLazyInterfaces(target\x2C id\x2C keys) {\x0d\n  defineLazyProperties(target\x2C id\x2C keys\x2C false);\x0d\n}\x0d\n\x0d\nlet _DOMException;\x0d\nconst lazyDOMExceptionClass = () => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  return _DOMException;\x0d\n};\x0d\n\x0d\nconst lazyDOMException = (message\x2C name) => {\x0d\n  _DOMException ??= internalBinding('messaging').DOMException;\x0d\n  if (isErrorStackTraceLimitWritable()) {\x0d\n    const limit = Error.stackTraceLimit;\x0d\n    Error.stackTraceLimit = 0;\x0d\n    const ex = new _DOMException(message\x2C name);\x0d\n    Error.stackTraceLimit = limit;\x0d\n    ErrorCaptureStackTrace(ex\x2C lazyDOMException);\x0d\n    return ex;\x0d\n  }\x0d\n  return new _DOMException(message\x2C name);\x0d\n\x0d\n};\x0d\n\x0d\nconst kEnumerableProperty = { __proto__: null };\x0d\nkEnumerableProperty.enumerable = true;\x0d\nObjectFreeze(kEnumerableProperty);\x0d\n\x0d\nconst kEmptyObject = ObjectFreeze({ __proto__: null });\x0d\n\x0d\nfunction filterOwnProperties(source\x2C keys) {\x0d\n  const filtered = { __proto__: null };\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    if (ObjectPrototypeHasOwnProperty(source\x2C key)) {\x0d\n      filtered[key] = source[key];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return filtered;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Mimics `obj[key] = value` but ignoring potential prototype inheritance.\x0d\n * @param {any} obj\x0d\n * @param {string} key\x0d\n * @param {any} value\x0d\n * @returns {any}\x0d\n */\x0d\nfunction setOwnProperty(obj\x2C key\x2C value) {\x0d\n  return ObjectDefineProperty(obj\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    value\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nlet internalGlobal;\x0d\nfunction getInternalGlobal() {\x0d\n  if (internalGlobal == null) {\x0d\n    // Lazy-load to avoid a circular dependency.\x0d\n    const { runInNewContext } = require('vm');\x0d\n    internalGlobal = runInNewContext('this'\x2C undefined\x2C { contextName: 'internal' });\x0d\n  }\x0d\n  return internalGlobal;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeExec(regex\x2C string) {\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  return FunctionPrototypeCall(RegExpFromAnotherRealm.prototype.exec\x2C regex\x2C string);\x0d\n}\x0d\n\x0d\nconst crossRelmRegexes = new SafeWeakMap();\x0d\nfunction getCrossRelmRegex(regex) {\x0d\n  const cached = crossRelmRegexes.get(regex);\x0d\n  if (cached) return cached;\x0d\n\x0d\n  let flagString = '';\x0d\n  if (RegExpPrototypeGetHasIndices(regex)) flagString += 'd';\x0d\n  if (RegExpPrototypeGetGlobal(regex)) flagString += 'g';\x0d\n  if (RegExpPrototypeGetIgnoreCase(regex)) flagString += 'i';\x0d\n  if (RegExpPrototypeGetMultiline(regex)) flagString += 'm';\x0d\n  if (RegExpPrototypeGetDotAll(regex)) flagString += 's';\x0d\n  if (RegExpPrototypeGetUnicode(regex)) flagString += 'u';\x0d\n  if (RegExpPrototypeGetSticky(regex)) flagString += 'y';\x0d\n\x0d\n  const { RegExp: RegExpFromAnotherRealm } = getInternalGlobal();\x0d\n  const crossRelmRegex = new RegExpFromAnotherRealm(RegExpPrototypeGetSource(regex)\x2C flagString);\x0d\n  crossRelmRegexes.set(regex\x2C crossRelmRegex);\x0d\n  return crossRelmRegex;\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolReplace(regex\x2C string\x2C replacement) {\x0d\n  return getCrossRelmRegex(regex)[SymbolReplace](string\x2C replacement);\x0d\n}\x0d\n\x0d\nfunction SideEffectFreeRegExpPrototypeSymbolSplit(regex\x2C string\x2C limit = undefined) {\x0d\n  return getCrossRelmRegex(regex)[SymbolSplit](string\x2C limit);\x0d\n}\x0d\n\x0d\n\x0d\nfunction isArrayBufferDetached(value) {\x0d\n  if (ArrayBufferPrototypeGetByteLength(value) === 0) {\x0d\n    return _isArrayBufferDetached(value);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Helper function to lazy-load an initialize-once value.\x0d\n * @template T Return value of initializer\x0d\n * @param {()=>T} initializer Initializer of the lazily loaded value.\x0d\n * @returns {()=>T}\x0d\n */\x0d\nfunction getLazy(initializer) {\x0d\n  let value;\x0d\n  let initialized = false;\x0d\n  return function() {\x0d\n    if (initialized === false) {\x0d\n      value = initializer();\x0d\n      initialized = true;\x0d\n    }\x0d\n    return value;\x0d\n  };\x0d\n}\x0d\n\x0d\n// Setup user-facing NODE_V8_COVERAGE environment variable that writes\x0d\n// ScriptCoverage objects to a specified directory.\x0d\nfunction setupCoverageHooks(dir) {\x0d\n  const cwd = require('internal/process/execution').tryGetCwd();\x0d\n  const { resolve } = require('path');\x0d\n  const coverageDirectory = resolve(cwd\x2C dir);\x0d\n  const { sourceMapCacheToObject } =\x0d\n    require('internal/source_map/source_map_cache');\x0d\n\x0d\n  if (process.features.inspector) {\x0d\n    internalBinding('profiler').setCoverageDirectory(coverageDirectory);\x0d\n    internalBinding('profiler').setSourceMapCacheGetter(sourceMapCacheToObject);\x0d\n  } else {\x0d\n    process.emitWarning('The inspector is disabled\x2C ' +\x0d\n                        'coverage could not be collected'\x2C\x0d\n                        'Warning');\x0d\n    return '';\x0d\n  }\x0d\n  return coverageDirectory;\x0d\n}\x0d\n\x0d\n\x0d\nconst handleTypes = ['TCP'\x2C 'TTY'\x2C 'UDP'\x2C 'FILE'\x2C 'PIPE'\x2C 'UNKNOWN'];\x0d\nfunction guessHandleType(fd) {\x0d\n  const type = _guessHandleType(fd);\x0d\n  return handleTypes[type];\x0d\n}\x0d\n\x0d\nclass WeakReference {\x0d\n  #weak = null;\x0d\n  #strong = null;\x0d\n  #refCount = 0;\x0d\n  constructor(object) {\x0d\n    this.#weak = new SafeWeakRef(object);\x0d\n  }\x0d\n\x0d\n  incRef() {\x0d\n    this.#refCount++;\x0d\n    if (this.#refCount === 1) {\x0d\n      const derefed = this.#weak.deref();\x0d\n      if (derefed !== undefined) {\x0d\n        this.#strong = derefed;\x0d\n      }\x0d\n    }\x0d\n    return this.#refCount;\x0d\n  }\x0d\n\x0d\n  decRef() {\x0d\n    this.#refCount--;\x0d\n    if (this.#refCount === 0) {\x0d\n      this.#strong = null;\x0d\n    }\x0d\n    return this.#refCount;\x0d\n  }\x0d\n\x0d\n  get() {\x0d\n    return this.#weak.deref();\x0d\n  }\x0d\n}\x0d\n\x0d\nconst encodingsMap = { __proto__: null };\x0d\nfor (let i = 0; i < encodings.length; ++i)\x0d\n  encodingsMap[encodings[i]] = i;\x0d\n\x0d\nmodule.exports = {\x0d\n  getLazy\x2C\x0d\n  assertCrypto\x2C\x0d\n  cachedResult\x2C\x0d\n  convertToValidSignal\x2C\x0d\n  createClassWrapper\x2C\x0d\n  createDeferredPromise\x2C\x0d\n  decorateErrorStack\x2C\x0d\n  defineOperation\x2C\x0d\n  defineLazyProperties\x2C\x0d\n  defineReplaceableLazyAttribute\x2C\x0d\n  deprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  encodingsMap\x2C\x0d\n  exposeInterface\x2C\x0d\n  exposeLazyInterfaces\x2C\x0d\n  exposeNamespace\x2C\x0d\n  exposeGetterAndSetter\x2C\x0d\n  filterDuplicateStrings\x2C\x0d\n  filterOwnProperties\x2C\x0d\n  getConstructorOf\x2C\x0d\n  getCWDURL\x2C\x0d\n  getInternalGlobal\x2C\x0d\n  getSystemErrorMap\x2C\x0d\n  getSystemErrorName\x2C\x0d\n  guessHandleType\x2C\x0d\n  isArrayBufferDetached\x2C\x0d\n  isError\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  join\x2C\x0d\n  lazyDOMException\x2C\x0d\n  lazyDOMExceptionClass\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  once\x2C\x0d\n  promisify\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolSplit\x2C\x0d\n  sleep\x2C\x0d\n  spliceOne\x2C\x0d\n  setupCoverageHooks\x2C\x0d\n  removeColors\x2C\x0d\n\x0d\n  // Symbol used to customize promisify conversion\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n\x0d\n  // Symbol used to provide a custom inspect function for an object as an\x0d\n  // alternative to using 'inspect'\x0d\n  customInspectSymbol: SymbolFor('nodejs.util.inspect.custom')\x2C\x0d\n\x0d\n  // Used by the buffer module to capture an internal reference to the\x0d\n  // default isEncoding implementation\x2C just in case userland overrides it.\x0d\n  kIsEncodingSymbol: Symbol('kIsEncodingSymbol')\x2C\x0d\n  kVmBreakFirstLineSymbol: Symbol('kVmBreakFirstLineSymbol')\x2C\x0d\n\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  setOwnProperty\x2C\x0d\n  pendingDeprecate\x2C\x0d\n  WeakReference\x2C\x0d\n};\x0d\n
code-source-info,0x7ff64c443040,16,16986,17928,,,
code-creation,JS,11,132467,0x7ff64c443a40,628,requireBuiltin node:internal/bootstrap/realm:420:24,0x23399fb538,^
script-source,9,node:internal/bootstrap/realm,// This file is executed in every realm that is created by Node.js\x2C including\x0d\n// the context of main thread\x2C worker threads\x2C and ShadowRealms.\x0d\n// Only per-realm internal states and bindings should be bootstrapped in this\x0d\n// file and no globals should be exposed to the user code.\x0d\n//\x0d\n// This file creates the internal module & binding loaders used by built-in\x0d\n// modules. In contrast\x2C user land modules are loaded using\x0d\n// lib/internal/modules/cjs/loader.js (CommonJS Modules) or\x0d\n// lib/internal/modules/esm/* (ES Modules).\x0d\n//\x0d\n// This file is compiled and run by node.cc before bootstrap/node.js\x0d\n// was called\x2C therefore the loaders are bootstrapped before we start to\x0d\n// actually bootstrap Node.js. It creates the following objects:\x0d\n//\x0d\n// C++ binding loaders:\x0d\n// - process.binding(): the legacy C++ binding loader\x2C accessible from user land\x0d\n//   because it is an object attached to the global process object.\x0d\n//   These C++ bindings are created using NODE_BUILTIN_MODULE_CONTEXT_AWARE()\x0d\n//   and have their nm_flags set to NM_F_BUILTIN. We do not make any guarantees\x0d\n//   about the stability of these bindings\x2C but still have to take care of\x0d\n//   compatibility issues caused by them from time to time.\x0d\n// - process._linkedBinding(): intended to be used by embedders to add\x0d\n//   additional C++ bindings in their applications. These C++ bindings\x0d\n//   can be created using NODE_BINDING_CONTEXT_AWARE_CPP() with the flag\x0d\n//   NM_F_LINKED.\x0d\n// - internalBinding(): the private internal C++ binding loader\x2C inaccessible\x0d\n//   from user land unless through `require('internal/test/binding')`.\x0d\n//   These C++ bindings are created using NODE_BINDING_CONTEXT_AWARE_INTERNAL()\x0d\n//   and have their nm_flags set to NM_F_INTERNAL.\x0d\n//\x0d\n// Internal JavaScript module loader:\x0d\n// - BuiltinModule: a minimal module system used to load the JavaScript core\x0d\n//   modules found in lib/**/*.js and deps/**/*.js. All core modules are\x0d\n//   compiled into the node binary via node_javascript.cc generated by js2c.py\x2C\x0d\n//   so they can be loaded faster without the cost of I/O. This class makes the\x0d\n//   lib/internal/*\x2C deps/internal/* modules and internalBinding() available by\x0d\n//   default to core modules\x2C and lets the core modules require itself via\x0d\n//   require('internal/bootstrap/realm') even when this file is not written in\x0d\n//   CommonJS style.\x0d\n//\x0d\n// Other objects:\x0d\n// - process.moduleLoadList: an array recording the bindings and the modules\x0d\n//   loaded in the process and the order in which they are loaded.\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// This file is compiled as if it's wrapped in a function with arguments\x0d\n// passed by node::RunBootstrapping()\x0d\n/* global process\x2C getLinkedBinding\x2C getInternalBinding\x2C primordials */\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGet\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  TypeError\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Set up process.moduleLoadList.\x0d\nconst moduleLoadList = [];\x0d\nObjectDefineProperty(process\x2C 'moduleLoadList'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: moduleLoadList\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  writable: false\x2C\x0d\n});\x0d\n\x0d\n\x0d\n// processBindingAllowList contains the name of bindings that are allowed\x0d\n// for access via process.binding(). This is used to provide a transition\x0d\n// path for modules that are being moved over to internalBinding.\x0d\n// Certain bindings may not actually correspond to an internalBinding any\x0d\n// more\x2C we just implement them as legacy wrappers instead. See the\x0d\n// legacyWrapperList.\x0d\nconst processBindingAllowList = new SafeSet([\x0d\n  'buffer'\x2C\x0d\n  'cares_wrap'\x2C\x0d\n  'config'\x2C\x0d\n  'constants'\x2C\x0d\n  'contextify'\x2C\x0d\n  'fs'\x2C\x0d\n  'fs_event_wrap'\x2C\x0d\n  'icu'\x2C\x0d\n  'inspector'\x2C\x0d\n  'js_stream'\x2C\x0d\n  'os'\x2C\x0d\n  'pipe_wrap'\x2C\x0d\n  'process_wrap'\x2C\x0d\n  'spawn_sync'\x2C\x0d\n  'stream_wrap'\x2C\x0d\n  'tcp_wrap'\x2C\x0d\n  'tls_wrap'\x2C\x0d\n  'tty_wrap'\x2C\x0d\n  'udp_wrap'\x2C\x0d\n  'uv'\x2C\x0d\n  'zlib'\x2C\x0d\n]);\x0d\n\x0d\nconst runtimeDeprecatedList = new SafeSet([\x0d\n  'async_wrap'\x2C\x0d\n  'crypto'\x2C\x0d\n  'http_parser'\x2C\x0d\n  'signal_wrap'\x2C\x0d\n  'url'\x2C\x0d\n  'v8'\x2C\x0d\n]);\x0d\n\x0d\nconst legacyWrapperList = new SafeSet([\x0d\n  'natives'\x2C\x0d\n  'util'\x2C\x0d\n]);\x0d\n\x0d\n// The code bellow assumes that the two lists must not contain any modules\x0d\n// beginning with "internal/".\x0d\n// Modules that can only be imported via the node: scheme.\x0d\nconst schemelessBlockList = new SafeSet([\x0d\n  'sea'\x2C\x0d\n  'test'\x2C\x0d\n  'test/reporters'\x2C\x0d\n]);\x0d\n// Modules that will only be enabled at run time.\x0d\nconst experimentalModuleList = new SafeSet();\x0d\n\x0d\n// Set up process.binding() and process._linkedBinding().\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n\x0d\n  process.binding = function binding(module) {\x0d\n    module = String(module);\x0d\n    const mod = bindingObj[module];\x0d\n    if (typeof mod === 'object') {\x0d\n      return mod;\x0d\n    }\x0d\n    // Deprecated specific process.binding() modules\x2C but not all\x2C allow\x0d\n    // selective fallback to internalBinding for the deprecated ones.\x0d\n    if (runtimeDeprecatedList.has(module)) {\x0d\n      process.emitWarning(\x0d\n        `Access to process.binding('${module}') is deprecated.`\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0111');\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    if (legacyWrapperList.has(module)) {\x0d\n      return requireBuiltin('internal/legacy/processbinding')[module]();\x0d\n    }\x0d\n    if (processBindingAllowList.has(module)) {\x0d\n      return internalBinding(module);\x0d\n    }\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    throw new Error(`No such module: ${module}`);\x0d\n  };\x0d\n\x0d\n  process._linkedBinding = function _linkedBinding(module) {\x0d\n    module = String(module);\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object')\x0d\n      mod = bindingObj[module] = getLinkedBinding(module);\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Set up internalBinding() in the closure.\x0d\n * @type {import('typings/globals').internalBinding}\x0d\n */\x0d\nlet internalBinding;\x0d\n{\x0d\n  const bindingObj = { __proto__: null };\x0d\n  // eslint-disable-next-line no-global-assign\x0d\n  internalBinding = function internalBinding(module) {\x0d\n    let mod = bindingObj[module];\x0d\n    if (typeof mod !== 'object') {\x0d\n      mod = bindingObj[module] = getInternalBinding(module);\x0d\n      ArrayPrototypePush(moduleLoadList\x2C `Internal Binding ${module}`);\x0d\n    }\x0d\n    return mod;\x0d\n  };\x0d\n}\x0d\n\x0d\nconst selfId = 'internal/bootstrap/realm';\x0d\nconst {\x0d\n  builtinIds\x2C\x0d\n  compileFunction\x2C\x0d\n  setInternalLoaders\x2C\x0d\n} = internalBinding('builtins');\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\nObjectSetPrototypeOf(ModuleWrap.prototype\x2C null);\x0d\n\x0d\nconst getOwn = (target\x2C property\x2C receiver) => {\x0d\n  return ObjectPrototypeHasOwnProperty(target\x2C property) ?\x0d\n    ReflectGet(target\x2C property\x2C receiver) :\x0d\n    undefined;\x0d\n};\x0d\n\x0d\nconst publicBuiltinIds = builtinIds\x0d\n  .filter((id) =>\x0d\n    !StringPrototypeStartsWith(id\x2C 'internal/') &&\x0d\n      !experimentalModuleList.has(id)\x2C\x0d\n  );\x0d\n// Do not expose the loaders to user land even with --expose-internals.\x0d\nconst internalBuiltinIds = builtinIds\x0d\n  .filter((id) => StringPrototypeStartsWith(id\x2C 'internal/') && id !== selfId);\x0d\n\x0d\n// When --expose-internals is on we'll add the internal builtin ids to these.\x0d\nlet canBeRequiredByUsersList = new SafeSet(publicBuiltinIds);\x0d\nlet canBeRequiredByUsersWithoutSchemeList =\x0d\n  new SafeSet(publicBuiltinIds.filter((id) => !schemelessBlockList.has(id)));\x0d\n\x0d\n/**\x0d\n * An internal abstraction for the built-in JavaScript modules of Node.js.\x0d\n * Be careful not to expose this to user land unless --expose-internals is\x0d\n * used\x2C in which case there is no compatibility guarantee about this class.\x0d\n */\x0d\nclass BuiltinModule {\x0d\n  /**\x0d\n   * A map from the module IDs to the module instances.\x0d\n   * @type {Map<string\x2C BuiltinModule>}\x0d\n   */\x0d\n  static map = new SafeMap(\x0d\n    ArrayPrototypeMap(builtinIds\x2C (id) => [id\x2C new BuiltinModule(id)])\x2C\x0d\n  );\x0d\n\x0d\n  constructor(id) {\x0d\n    this.filename = `${id}.js`;\x0d\n    this.id = id;\x0d\n\x0d\n    // The CJS exports object of the module.\x0d\n    this.exports = {};\x0d\n    // States used to work around circular dependencies.\x0d\n    this.loaded = false;\x0d\n    this.loading = false;\x0d\n\x0d\n    // The following properties are used by the ESM implementation and only\x0d\n    // initialized when the built-in module is loaded by users.\x0d\n    /**\x0d\n     * The C++ ModuleWrap binding used to interface with the ESM implementation.\x0d\n     * @type {ModuleWrap|undefined}\x0d\n     */\x0d\n    this.module = undefined;\x0d\n    /**\x0d\n     * Exported names for the ESM imports.\x0d\n     * @type {string[]|undefined}\x0d\n     */\x0d\n    this.exportKeys = undefined;\x0d\n  }\x0d\n\x0d\n  static allowRequireByUsers(id) {\x0d\n    if (id === selfId) {\x0d\n      // No code because this is an assertion against bugs.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not allow ${id}`);\x0d\n    }\x0d\n    canBeRequiredByUsersList.add(id);\x0d\n    if (!schemelessBlockList.has(id)) {\x0d\n      canBeRequiredByUsersWithoutSchemeList.add(id);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static setRealmAllowRequireByUsers(ids) {\x0d\n    canBeRequiredByUsersList =\x0d\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => ArrayPrototypeIncludes(publicBuiltinIds\x2C id)));\x0d\n    canBeRequiredByUsersWithoutSchemeList =\x0d\n      new SafeSet(ArrayPrototypeFilter(ids\x2C (id) => !schemelessBlockList.has(id)));\x0d\n  }\x0d\n\x0d\n  // To be called during pre-execution when --expose-internals is on.\x0d\n  // Enables the user-land module loader to access internal modules.\x0d\n  static exposeInternals() {\x0d\n    for (let i = 0; i < internalBuiltinIds.length; ++i) {\x0d\n      BuiltinModule.allowRequireByUsers(internalBuiltinIds[i]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  static exists(id) {\x0d\n    return BuiltinModule.map.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredByUsers(id) {\x0d\n    return canBeRequiredByUsersList.has(id);\x0d\n  }\x0d\n\x0d\n  static canBeRequiredWithoutScheme(id) {\x0d\n    return canBeRequiredByUsersWithoutSchemeList.has(id);\x0d\n  }\x0d\n\x0d\n  static normalizeRequirableId(id) {\x0d\n    if (StringPrototypeStartsWith(id\x2C 'node:')) {\x0d\n      const normalizedId = StringPrototypeSlice(id\x2C 5);\x0d\n      if (BuiltinModule.canBeRequiredByUsers(normalizedId)) {\x0d\n        return normalizedId;\x0d\n      }\x0d\n    } else if (BuiltinModule.canBeRequiredWithoutScheme(id)) {\x0d\n      return id;\x0d\n    }\x0d\n\x0d\n    return undefined;\x0d\n  }\x0d\n\x0d\n  static isBuiltin(id) {\x0d\n    return BuiltinModule.canBeRequiredWithoutScheme(id) || (\x0d\n      typeof id === 'string' &&\x0d\n        StringPrototypeStartsWith(id\x2C 'node:') &&\x0d\n        BuiltinModule.canBeRequiredByUsers(StringPrototypeSlice(id\x2C 5))\x0d\n    );\x0d\n  }\x0d\n\x0d\n  static getCanBeRequiredByUsersWithoutSchemeList() {\x0d\n    return ArrayFrom(canBeRequiredByUsersWithoutSchemeList);\x0d\n  }\x0d\n\x0d\n  static getSchemeOnlyModuleNames() {\x0d\n    return ArrayFrom(schemelessBlockList);\x0d\n  }\x0d\n\x0d\n  // Used by user-land module loaders to compile and load builtins.\x0d\n  compileForPublicLoader() {\x0d\n    if (!BuiltinModule.canBeRequiredByUsers(this.id)) {\x0d\n      // No code because this is an assertion against bugs\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      throw new Error(`Should not compile ${this.id} for public use`);\x0d\n    }\x0d\n    this.compileForInternalLoader();\x0d\n    if (!this.exportKeys) {\x0d\n      // When using --expose-internals\x2C we do not want to reflect the named\x0d\n      // exports from core modules as this can trigger unnecessary getters.\x0d\n      const internal = StringPrototypeStartsWith(this.id\x2C 'internal/');\x0d\n      this.exportKeys = internal ? [] : ObjectKeys(this.exports);\x0d\n    }\x0d\n    return this.exports;\x0d\n  }\x0d\n\x0d\n  getESMFacade() {\x0d\n    if (this.module) return this.module;\x0d\n    const url = `node:${this.id}`;\x0d\n    const builtin = this;\x0d\n    const exportsKeys = ArrayPrototypeSlice(this.exportKeys);\x0d\n    if (!ArrayPrototypeIncludes(exportsKeys\x2C 'default')) {\x0d\n      ArrayPrototypePush(exportsKeys\x2C 'default');\x0d\n    }\x0d\n    this.module = new ModuleWrap(\x0d\n      url\x2C undefined\x2C exportsKeys\x2C\x0d\n      function() {\x0d\n        builtin.syncExports();\x0d\n        this.setExport('default'\x2C builtin.exports);\x0d\n      });\x0d\n    // Ensure immediate sync execution to capture exports now\x0d\n    this.module.instantiate();\x0d\n    this.module.evaluate(-1\x2C false);\x0d\n    return this.module;\x0d\n  }\x0d\n\x0d\n  // Provide named exports for all builtin libraries so that the libraries\x0d\n  // may be imported in a nicer way for ESM users. The default export is left\x0d\n  // as the entire namespace (module.exports) and updates when this function is\x0d\n  // called so that APMs and other behavior are supported.\x0d\n  syncExports() {\x0d\n    const names = this.exportKeys;\x0d\n    if (this.module) {\x0d\n      for (let i = 0; i < names.length; i++) {\x0d\n        const exportName = names[i];\x0d\n        if (exportName === 'default') continue;\x0d\n        this.module.setExport(exportName\x2C\x0d\n                              getOwn(this.exports\x2C exportName\x2C this.exports));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  compileForInternalLoader() {\x0d\n    if (this.loaded || this.loading) {\x0d\n      return this.exports;\x0d\n    }\x0d\n\x0d\n    const id = this.id;\x0d\n    this.loading = true;\x0d\n\x0d\n    try {\x0d\n      const requireFn = StringPrototypeStartsWith(this.id\x2C 'internal/deps/') ?\x0d\n        requireWithFallbackInDeps : requireBuiltin;\x0d\n\x0d\n      const fn = compileFunction(id);\x0d\n      // Arguments must match the parameters specified in\x0d\n      // BuiltinLoader::LookupAndCompile().\x0d\n      fn(this.exports\x2C requireFn\x2C this\x2C process\x2C internalBinding\x2C primordials);\x0d\n\x0d\n      this.loaded = true;\x0d\n    } finally {\x0d\n      this.loading = false;\x0d\n    }\x0d\n\x0d\n    // "NativeModule" is a legacy name of "BuiltinModule". We keep it\x0d\n    // here to avoid breaking users who parse process.moduleLoadList.\x0d\n    ArrayPrototypePush(moduleLoadList\x2C `NativeModule ${id}`);\x0d\n    return this.exports;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Think of this as module.exports in this file even though it is not\x0d\n// written in CommonJS style.\x0d\nconst loaderExports = {\x0d\n  internalBinding\x2C\x0d\n  BuiltinModule\x2C\x0d\n  require: requireBuiltin\x2C\x0d\n};\x0d\n\x0d\nfunction requireBuiltin(id) {\x0d\n  if (id === selfId) {\x0d\n    return loaderExports;\x0d\n  }\x0d\n\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  // Can't load the internal errors module from here\x2C have to use a raw error.\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  if (!mod) throw new TypeError(`Missing internal module '${id}'`);\x0d\n  return mod.compileForInternalLoader();\x0d\n}\x0d\n\x0d\n// Allow internal modules from dependencies to require\x0d\n// other modules from dependencies by providing fallbacks.\x0d\nfunction requireWithFallbackInDeps(request) {\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    request = StringPrototypeSlice(request\x2C 5);\x0d\n  } else if (!BuiltinModule.map.has(request)) {\x0d\n    request = `internal/deps/${request}`;\x0d\n  }\x0d\n  return requireBuiltin(request);\x0d\n}\x0d\n\x0d\nfunction setupPrepareStackTrace() {\x0d\n  const {\x0d\n    setEnhanceStackForFatalException\x2C\x0d\n    setPrepareStackTraceCallback\x2C\x0d\n  } = internalBinding('errors');\x0d\n  const {\x0d\n    prepareStackTraceCallback\x2C\x0d\n    ErrorPrepareStackTrace\x2C\x0d\n    fatalExceptionStackEnhancers: {\x0d\n      beforeInspector\x2C\x0d\n      afterInspector\x2C\x0d\n    }\x2C\x0d\n  } = requireBuiltin('internal/errors');\x0d\n  // Tell our PrepareStackTraceCallback passed to the V8 API\x0d\n  // to call prepareStackTrace().\x0d\n  setPrepareStackTraceCallback(prepareStackTraceCallback);\x0d\n  // Set the function used to enhance the error stack for printing\x0d\n  setEnhanceStackForFatalException(beforeInspector\x2C afterInspector);\x0d\n  // Setup the default Error.prepareStackTrace.\x0d\n  ObjectDefineProperty(Error\x2C 'prepareStackTrace'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: ErrorPrepareStackTrace\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// Store the internal loaders in C++.\x0d\nsetInternalLoaders(internalBinding\x2C requireBuiltin);\x0d\n\x0d\n// Setup per-realm bindings.\x0d\nsetupPrepareStackTrace();\x0d\n
code-source-info,0x7ff64c443a40,9,13946,14298,,,
code-creation,JS,11,133900,0x7ff64c443d00,1228,compileForInternalLoader node:internal/bootstrap/realm:383:27,0x23399fb2c0,^
code-source-info,0x7ff64c443d00,9,12893,13717,,,
code-creation,JS,11,133952,0x7ff64c444200,536,internalBinding node:internal/bootstrap/realm:184:45,0x23399faa98,^
code-source-info,0x7ff64c444200,9,6188,6433,,,
code-creation,JS,11,134002,0x7ff64c444440,204,isPathSeparator node:path:52:25,0x3fcdef9efd8,^
code-source-info,0x7ff64c444440,30,1794,1876,,,
code-creation,JS,11,134055,0x7ff64c444540,556,getOptionValue node:internal/options:44:24,0x3fcdef898b8,^
code-source-info,0x7ff64c444540,17,1028,1278,,,
code-creation,JS,11,134096,0x7ff64c444780,132,exposeLazyInterfaces node:internal/util:671:30,0x3fcdef88b48,^
code-source-info,0x7ff64c444780,16,18906,18979,,,
code-creation,JS,10,134286,0x1c66f8d381e,70,setupCustomEvent node:internal/process/pre_execution:377:26,0x3fcdefbf5c0,~
code-source-info,0x1c66f8d381e,67,12313,12572,C0O12321C5O12325C9O12345C17O12373C23O12373C29O12436C30O12443C31O12476C37O12476C42O12460C47O12513C54O12529C63O12513C69O12571,,
code-creation,JS,10,134425,0x1c66f8d39ee,64,setupCodeCoverage node:internal/process/pre_execution:362:27,0x3fcdefbf570,~
code-source-info,0x1c66f8d39ee,67,11672,12178,C0O11984C3O11996C8O12000C16O12028C22O12028C28O12083C31O12091C38O12121C44O12148C49O12152C54O12121C58O12112C63O12177,,
code-creation,JS,10,134547,0x1c66f8d3bce,75,setupDebugEnv node:internal/process/pre_execution:408:23,0x3fcdefbf6d8,~
code-source-info,0x1c66f8d3bce,67,13098,13312,C0O13106C6O13106C11O13139C19O13167C24O13171C29O13140C34O13187C42O13191C48O13236C54O13236C59O13271C64O13285C69O13286C74O13311,,
code-creation,JS,10,134731,0x1c66f8d3f36,153,initializeDebugEnv node:internal/util/debuglog:21:28,0x3fcdef8f390,~
script-source,22,node:internal/util/debuglog,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect\x2C format\x2C formatWithOptions } = require('internal/util/inspect');\x0d\n\x0d\n// `debugImpls` and `testEnabled` are deliberately not initialized so any call\x0d\n// to `debuglog()` before `initializeDebugEnv()` is called will throw.\x0d\nlet debugImpls;\x0d\nlet testEnabled;\x0d\n\x0d\n\x0d\n// `debugEnv` is initial value of process.env.NODE_DEBUG\x0d\nfunction initializeDebugEnv(debugEnv) {\x0d\n  debugImpls = { __proto__: null };\x0d\n  if (debugEnv) {\x0d\n    // This is run before any user code\x2C it's OK not to use primordials.\x0d\n    debugEnv = debugEnv.replace(/[|\\\\{}()[\\]^$+?.]/g\x2C '\\\\$&')\x0d\n      .replaceAll('*'\x2C '.*')\x0d\n      .replaceAll('\x2C'\x2C '$|^');\x0d\n    const debugEnvRegex = new RegExp(`^${debugEnv}$`\x2C 'i');\x0d\n    testEnabled = (str) => RegExpPrototypeExec(debugEnvRegex\x2C str) !== null;\x0d\n  } else {\x0d\n    testEnabled = () => false;\x0d\n  }\x0d\n}\x0d\n\x0d\n// Emits warning when user sets\x0d\n// NODE_DEBUG=http or NODE_DEBUG=http2.\x0d\nfunction emitWarningIfNeeded(set) {\x0d\n  if ('HTTP' === set || 'HTTP2' === set) {\x0d\n    process.emitWarning('Setting the NODE_DEBUG environment variable ' +\x0d\n      'to \\'' + StringPrototypeToLowerCase(set) + '\\' can expose sensitive ' +\x0d\n      'data (such as passwords\x2C tokens and authentication headers) ' +\x0d\n      'in the resulting log.');\x0d\n  }\x0d\n}\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\nfunction debuglogImpl(enabled\x2C set) {\x0d\n  if (debugImpls[set] === undefined) {\x0d\n    if (enabled) {\x0d\n      const pid = process.pid;\x0d\n      emitWarningIfNeeded(set);\x0d\n      debugImpls[set] = function debug(...args) {\x0d\n        const colors = lazyUtilColors().shouldColorize(process.stderr);\x0d\n        const msg = formatWithOptions({ colors }\x2C ...args);\x0d\n        const coloredPID = inspect(pid\x2C { colors });\x0d\n        process.stderr.write(format('%s %s: %s\\n'\x2C set\x2C coloredPID\x2C msg));\x0d\n      };\x0d\n    } else {\x0d\n      debugImpls[set] = noop;\x0d\n    }\x0d\n  }\x0d\n  return debugImpls[set];\x0d\n}\x0d\n\x0d\n// debuglogImpl depends on process.pid and process.env.NODE_DEBUG\x2C\x0d\n// so it needs to be called lazily in top scopes of internal modules\x0d\n// that may be loaded before these run time states are allowed to\x0d\n// be accessed.\x0d\nfunction debuglog(set\x2C cb) {\x0d\n  function init() {\x0d\n    set = StringPrototypeToUpperCase(set);\x0d\n    enabled = testEnabled(set);\x0d\n  }\x0d\n  let debug = (...args) => {\x0d\n    init();\x0d\n    // Only invokes debuglogImpl() when the debug function is\x0d\n    // called for the first time.\x0d\n    debug = debuglogImpl(enabled\x2C set);\x0d\n    if (typeof cb === 'function')\x0d\n      cb(debug);\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  let enabled;\x0d\n  let test = () => {\x0d\n    init();\x0d\n    test = () => enabled;\x0d\n    return enabled;\x0d\n  };\x0d\n  const logger = (...args) => {\x0d\n    switch (args.length) {\x0d\n      case 1: return debug(args[0]);\x0d\n      case 2: return debug(args[0]\x2C args[1]);\x0d\n      default: return debug(...new SafeArrayIterator(args));\x0d\n    }\x0d\n  };\x0d\n  ObjectDefineProperty(logger\x2C 'enabled'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return test();\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n  return logger;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  debuglog\x2C\x0d\n  initializeDebugEnv\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8d3f36,22,550,1008,C0O566C7O577C13O603C24O718C38O718C45O763C56O764C63O793C74O794C82O845C94O860C110O845C115O845C117O884C126O896C138O974C145O986C152O1007,,
code-creation,JS,10,135131,0x1c66f8d45ce,31,initializeReport node:internal/process/pre_execution:396:26,0x3fcdefbf660,~
code-source-info,0x1c66f8d45ce,67,12838,13072,C0O12846C11O12867C16O12963C24O12846C30O13071,,
code-creation,JS,10,135335,0x1c66f8d4e5e,577,initializePermission node:internal/process/pre_execution:561:30,0x3fcdefbf980,~
code-source-info,0x1c66f8d4e5e
code-creation,JS,10,135482,0x1c66f8d529e,34, node:internal/process/pre_execution:618:53,0x1c66f8d4af8,~
code-source-info,0x1c66f8d529e,67,20211,20376,C0O20244C5O20244C10O20283C16O20302C26O20308C31O20302C33O20375,,
code-creation,JS,10,135564,0x1c66f8d546e,35,initializeSourceMapsHandlers node:internal/process/pre_execution:699:38,0x3fcdefbfaf8,~
code-source-info,0x1c66f8d546e,67,23028,23194,C0O23078C6O23078C11O23049C16O23130C18O23151C24O23151C29O23130C34O23193,,
code-creation,JS,10,135686,0x1c66f8d5656,94,setSourceMapsEnabled node:internal/source_map/source_map_cache:55:30,0x3fcdefa8fd0,~
script-source,43,node:internal/source_map/source_map_cache,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectKeys\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n} = primordials;\x0d\n\x0d\n// See https://sourcemaps.info/spec.html for SourceMap V3 specification.\x0d\nconst { Buffer } = require('buffer');\x0d\nlet debug = require('internal/util/debuglog').debuglog('source_map'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nconst { validateBoolean } = require('internal/validators');\x0d\nconst {\x0d\n  setSourceMapsEnabled: setSourceMapsNative\x2C\x0d\n} = internalBinding('errors');\x0d\nconst {\x0d\n  setInternalPrepareStackTrace\x2C\x0d\n} = require('internal/errors');\x0d\nconst { getLazy } = require('internal/util');\x0d\n\x0d\n// Since the CJS module cache is mutable\x2C which leads to memory leaks when\x0d\n// modules are deleted\x2C we use a WeakMap so that the source map cache will\x0d\n// be purged automatically:\x0d\nconst getCjsSourceMapCache = getLazy(() => {\x0d\n  const { IterableWeakMap } = require('internal/util/iterable_weak_map');\x0d\n  return new IterableWeakMap();\x0d\n});\x0d\n\x0d\n// The esm cache is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst esmSourceMapCache = new SafeMap();\x0d\n// The generated sources is not mutable\x2C so we can use a Map without memory concerns:\x0d\nconst generatedSourceMapCache = new SafeMap();\x0d\nconst kLeadingProtocol = /^\\w+:\\/\\//;\x0d\nconst kSourceMappingURLMagicComment = /\\/[*/]#\\s+sourceMappingURL=(?<sourceMappingURL>[^\\s]+)/g;\x0d\nconst kSourceURLMagicComment = /\\/[*/]#\\s+sourceURL=(?<sourceURL>[^\\s]+)/g;\x0d\n\x0d\nconst { isAbsolute } = require('path');\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\n\x0d\nlet SourceMap;\x0d\n\x0d\n// This is configured with --enable-source-maps during pre-execution.\x0d\nlet sourceMapsEnabled = false;\x0d\nfunction getSourceMapsEnabled() {\x0d\n  return sourceMapsEnabled;\x0d\n}\x0d\n\x0d\nfunction setSourceMapsEnabled(val) {\x0d\n  validateBoolean(val\x2C 'val');\x0d\n\x0d\n  setSourceMapsNative(val);\x0d\n  if (val) {\x0d\n    const {\x0d\n      prepareStackTraceWithSourceMaps\x2C\x0d\n    } = require('internal/source_map/prepare_stack_trace');\x0d\n    setInternalPrepareStackTrace(prepareStackTraceWithSourceMaps);\x0d\n  } else if (sourceMapsEnabled !== undefined) {\x0d\n    // Reset prepare stack trace callback only when disabling source maps.\x0d\n    const {\x0d\n      defaultPrepareStackTrace\x2C\x0d\n    } = require('internal/errors');\x0d\n    setInternalPrepareStackTrace(defaultPrepareStackTrace);\x0d\n  }\x0d\n\x0d\n  sourceMapsEnabled = val;\x0d\n}\x0d\n\x0d\nfunction extractSourceURLMagicComment(content) {\x0d\n  let match;\x0d\n  let matchSourceURL;\x0d\n  // A while loop is used here to get the last occurrence of sourceURL.\x0d\n  // This is needed so that we don't match sourceURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceURLMagicComment\x2C content))) {\x0d\n    matchSourceURL = match;\x0d\n  }\x0d\n  if (matchSourceURL == null) {\x0d\n    return null;\x0d\n  }\x0d\n  let sourceURL = matchSourceURL.groups.sourceURL;\x0d\n  if (sourceURL != null && RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  return sourceURL;\x0d\n}\x0d\n\x0d\nfunction extractSourceMapURLMagicComment(content) {\x0d\n  let match;\x0d\n  let lastMatch;\x0d\n  // A while loop is used here to get the last occurrence of sourceMappingURL.\x0d\n  // This is needed so that we don't match sourceMappingURL in string literals.\x0d\n  while ((match = RegExpPrototypeExec(kSourceMappingURLMagicComment\x2C content))) {\x0d\n    lastMatch = match;\x0d\n  }\x0d\n  if (lastMatch == null) {\x0d\n    return null;\x0d\n  }\x0d\n  return lastMatch.groups.sourceMappingURL;\x0d\n}\x0d\n\x0d\nfunction maybeCacheSourceMap(filename\x2C content\x2C cjsModuleInstance\x2C isGeneratedSource\x2C sourceURL\x2C sourceMapURL) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n  const { normalizeReferrerURL } = require('internal/modules/helpers');\x0d\n  filename = normalizeReferrerURL(filename);\x0d\n  if (filename === undefined) {\x0d\n    // This is most likely an invalid filename in sourceURL of [eval]-wrapper.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (sourceMapURL === undefined) {\x0d\n    sourceMapURL = extractSourceMapURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  // Bail out when there is no source map url.\x0d\n  if (typeof sourceMapURL !== 'string') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // FIXME: callers should obtain sourceURL from v8 and pass it\x0d\n  // rather than leaving it undefined and extract by regex.\x0d\n  if (sourceURL === undefined) {\x0d\n    sourceURL = extractSourceURLMagicComment(content);\x0d\n  }\x0d\n\x0d\n  const data = dataFromUrl(filename\x2C sourceMapURL);\x0d\n  const url = data ? null : sourceMapURL;\x0d\n  if (cjsModuleInstance) {\x0d\n    getCjsSourceMapCache().set(cjsModuleInstance\x2C {\x0d\n      __proto__: null\x2C\x0d\n      filename\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    });\x0d\n  } else if (isGeneratedSource) {\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    generatedSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      generatedSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  } else {\x0d\n    // If there is no cjsModuleInstance and is not generated source assume we are in a\x0d\n    // "modules/esm" context.\x0d\n    const entry = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: lineLengths(content)\x2C\x0d\n      data\x2C\x0d\n      url\x2C\x0d\n      sourceURL\x2C\x0d\n    };\x0d\n    esmSourceMapCache.set(filename\x2C entry);\x0d\n    if (sourceURL) {\x0d\n      esmSourceMapCache.set(sourceURL\x2C entry);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCacheGeneratedSourceMap(content) {\x0d\n  const sourceMapsEnabled = getSourceMapsEnabled();\x0d\n  if (!(process.env.NODE_V8_COVERAGE || sourceMapsEnabled)) return;\x0d\n\x0d\n  const sourceURL = extractSourceURLMagicComment(content);\x0d\n  if (sourceURL === null) {\x0d\n    return;\x0d\n  }\x0d\n  try {\x0d\n    maybeCacheSourceMap(sourceURL\x2C content\x2C null\x2C true\x2C sourceURL);\x0d\n  } catch (err) {\x0d\n    // This can happen if the filename is not a valid URL.\x0d\n    // If we fail to cache the source map\x2C we should not fail the whole process.\x0d\n    debug(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction dataFromUrl(sourceURL\x2C sourceMappingURL) {\x0d\n  try {\x0d\n    const url = new URL(sourceMappingURL);\x0d\n    switch (url.protocol) {\x0d\n      case 'data:':\x0d\n        return sourceMapFromDataUrl(sourceURL\x2C url.pathname);\x0d\n      default:\x0d\n        debug(`unknown protocol ${url.protocol}`);\x0d\n        return null;\x0d\n    }\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    // If no scheme is present\x2C we assume we are dealing with a file path.\x0d\n    const mapURL = new URL(sourceMappingURL\x2C sourceURL).href;\x0d\n    return sourceMapFromFile(mapURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Cache the length of each line in the file that a source map was extracted\x0d\n// from. This allows translation from byte offset V8 coverage reports\x2C\x0d\n// to line/column offset Source Map V3.\x0d\nfunction lineLengths(content) {\x0d\n  const contentLength = content.length;\x0d\n  const output = [];\x0d\n  let lineLength = 0;\x0d\n  for (let i = 0; i < contentLength; i++\x2C lineLength++) {\x0d\n    const codePoint = StringPrototypeCodePointAt(content\x2C i);\x0d\n\x0d\n    // We purposefully keep \\r as part of the line-length calculation\x2C in\x0d\n    // cases where there is a \\r\\n separator\x2C so that this can be taken into\x0d\n    // account in coverage calculations.\x0d\n    // codepoints for \\n (new line)\x2C \\u2028 (line separator) and \\u2029 (paragraph separator)\x0d\n    if (codePoint === 10 || codePoint === 0x2028 || codePoint === 0x2029) {\x0d\n      ArrayPrototypePush(output\x2C lineLength);\x0d\n      lineLength = -1; // To not count the matched codePoint such as \\n character\x0d\n    }\x0d\n  }\x0d\n  ArrayPrototypePush(output\x2C lineLength);\x0d\n  return output;\x0d\n}\x0d\n\x0d\n\x0d\nfunction sourceMapFromFile(mapURL) {\x0d\n  try {\x0d\n    const fs = require('fs');\x0d\n    const content = fs.readFileSync(fileURLToPath(mapURL)\x2C 'utf8');\x0d\n    const data = JSONParse(content);\x0d\n    return sourcesToAbsolute(mapURL\x2C data);\x0d\n  } catch (err) {\x0d\n    debug(err);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// data:[<mediatype>][;base64]\x2C<data> see:\x0d\n// https://tools.ietf.org/html/rfc2397#section-2\x0d\nfunction sourceMapFromDataUrl(sourceURL\x2C url) {\x0d\n  const { 0: format\x2C 1: data } = StringPrototypeSplit(url\x2C '\x2C');\x0d\n  const splitFormat = StringPrototypeSplit(format\x2C ';');\x0d\n  const contentType = splitFormat[0];\x0d\n  const base64 = splitFormat[splitFormat.length - 1] === 'base64';\x0d\n  if (contentType === 'application/json') {\x0d\n    const decodedData = base64 ?\x0d\n      Buffer.from(data\x2C 'base64').toString('utf8') : data;\x0d\n    try {\x0d\n      const parsedData = JSONParse(decodedData);\x0d\n      return sourcesToAbsolute(sourceURL\x2C parsedData);\x0d\n    } catch (err) {\x0d\n      debug(err);\x0d\n      return null;\x0d\n    }\x0d\n  } else {\x0d\n    debug(`unknown content-type ${contentType}`);\x0d\n    return null;\x0d\n  }\x0d\n}\x0d\n\x0d\n// If the sources are not absolute URLs after prepending of the "sourceRoot"\x2C\x0d\n// the sources are resolved relative to the SourceMap (like resolving script\x0d\n// src in a html document).\x0d\n// If the sources are absolute paths\x2C the sources are converted to absolute file URLs.\x0d\nfunction sourcesToAbsolute(baseURL\x2C data) {\x0d\n  data.sources = data.sources.map((source) => {\x0d\n    source = (data.sourceRoot || '') + source;\x0d\n    if (isAbsolute(source)) {\x0d\n      return pathToFileURL(source).href;\x0d\n    }\x0d\n    return new URL(source\x2C baseURL).href;\x0d\n  });\x0d\n  // The sources array is now resolved to absolute URLs\x2C sourceRoot should\x0d\n  // be updated to noop.\x0d\n  data.sourceRoot = '';\x0d\n  return data;\x0d\n}\x0d\n\x0d\n// WARNING: The `sourceMapCacheToObject` and `appendCJSCache` run during\x0d\n// shutdown. In particular\x2C they also run when Workers are terminated\x2C making\x0d\n// it important that they do not call out to any user-provided code\x2C including\x0d\n// built-in prototypes that might have been tampered with.\x0d\n\x0d\n// Get serialized representation of source-map cache\x2C this is used\x0d\n// to persist a cache of source-maps to disk when NODE_V8_COVERAGE is enabled.\x0d\nfunction sourceMapCacheToObject() {\x0d\n  const obj = { __proto__: null };\x0d\n\x0d\n  for (const { 0: k\x2C 1: v } of esmSourceMapCache) {\x0d\n    obj[k] = v;\x0d\n  }\x0d\n\x0d\n  appendCJSCache(obj);\x0d\n\x0d\n  if (ObjectKeys(obj).length === 0) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return obj;\x0d\n}\x0d\n\x0d\nfunction appendCJSCache(obj) {\x0d\n  for (const value of getCjsSourceMapCache()) {\x0d\n    obj[value.filename] = {\x0d\n      __proto__: null\x2C\x0d\n      lineLengths: value.lineLengths\x2C\x0d\n      data: value.data\x2C\x0d\n      url: value.url\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction findSourceMap(sourceURL) {\x0d\n  if (RegExpPrototypeExec(kLeadingProtocol\x2C sourceURL) === null) {\x0d\n    sourceURL = pathToFileURL(sourceURL).href;\x0d\n  }\x0d\n  if (!SourceMap) {\x0d\n    SourceMap = require('internal/source_map/source_map').SourceMap;\x0d\n  }\x0d\n  let entry = esmSourceMapCache.get(sourceURL) ?? generatedSourceMapCache.get(sourceURL);\x0d\n  if (entry === undefined) {\x0d\n    for (const value of getCjsSourceMapCache()) {\x0d\n      const filename = value.filename;\x0d\n      const cachedSourceURL = value.sourceURL;\x0d\n      if (sourceURL === filename || sourceURL === cachedSourceURL) {\x0d\n        entry = value;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (entry === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  let sourceMap = entry.sourceMap;\x0d\n  if (sourceMap === undefined) {\x0d\n    sourceMap = new SourceMap(entry.data\x2C { lineLengths: entry.lineLengths });\x0d\n    entry.sourceMap = sourceMap;\x0d\n  }\x0d\n  return sourceMap;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  findSourceMap\x2C\x0d\n  getSourceMapsEnabled\x2C\x0d\n  setSourceMapsEnabled\x2C\x0d\n  maybeCacheSourceMap\x2C\x0d\n  maybeCacheGeneratedSourceMap\x2C\x0d\n  sourceMapCacheToObject\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8d5656,43,1825,2398,C0O1836C8O1836C13O1870C18O1870C22O1899C26O1972C32O1972C37O1930C42O2029C47O2029C53O2102C59O2272C65O2272C70O2237C75O2305C80O2305C84O2371C86O2389C93O2397,,
code-creation,JS,10,136562,0x1c66f8d62de,30, node:internal/validators:216:41,0x3fcdef855e0,~
script-source,15,node:internal/validators,/* eslint jsdoc/require-jsdoc: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeToUpperCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  hideStackFrames\x2C\x0d\n  codes: {\x0d\n    ERR_SOCKET_BAD_PORT: { HideStackFramesError: ERR_SOCKET_BAD_PORT }\x2C\x0d\n    ERR_INVALID_ARG_TYPE: { HideStackFramesError: ERR_INVALID_ARG_TYPE }\x2C\x0d\n    ERR_INVALID_ARG_VALUE: { HideStackFramesError: ERR_INVALID_ARG_VALUE }\x2C\x0d\n    ERR_OUT_OF_RANGE: { HideStackFramesError: ERR_OUT_OF_RANGE }\x2C\x0d\n    ERR_UNKNOWN_SIGNAL: { HideStackFramesError: ERR_UNKNOWN_SIGNAL }\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { normalizeEncoding } = require('internal/util');\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isArrayBufferView\x2C\x0d\n} = require('internal/util/types');\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isInt32(value) {\x0d\n  return value === (value | 0);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} value\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isUint32(value) {\x0d\n  return value === (value >>> 0);\x0d\n}\x0d\n\x0d\nconst octalReg = /^[0-7]+$/;\x0d\nconst modeDesc = 'must be a 32-bit unsigned integer or an octal string';\x0d\n\x0d\n/**\x0d\n * Parse and validate values that will be converted into mode_t (the S_*\x0d\n * constants). Only valid numbers and octal strings are allowed. They could be\x0d\n * converted to 32-bit unsigned integers or non-negative signed integers in the\x0d\n * C++ land\x2C but any value higher than 0o777 will result in platform-specific\x0d\n * behaviors.\x0d\n * @param {*} value Values to be validated\x0d\n * @param {string} name Name of the argument\x0d\n * @param {number} [def] If specified\x2C will be returned for invalid values\x0d\n * @returns {number}\x0d\n */\x0d\nfunction parseFileMode(value\x2C name\x2C def) {\x0d\n  value ??= def;\x0d\n  if (typeof value === 'string') {\x0d\n    if (RegExpPrototypeExec(octalReg\x2C value) === null) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C modeDesc);\x0d\n    }\x0d\n    value = NumberParseInt(value\x2C 8);\x0d\n  }\x0d\n\x0d\n  validateUint32(value\x2C name);\x0d\n  return value;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback validateInteger\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInteger} */\x0d\nconst validateInteger = hideStackFrames(\x0d\n  (value\x2C name\x2C min = NumberMIN_SAFE_INTEGER\x2C max = NumberMAX_SAFE_INTEGER) => {\x0d\n    if (typeof value !== 'number')\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    if (!NumberIsInteger(value))\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    if (value < min || value > max)\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateInt32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateInt32} */\x0d\nconst validateInt32 = hideStackFrames(\x0d\n  (value\x2C name\x2C min = -2147483648\x2C max = 2147483647) => {\x0d\n    // The defaults for min and max correspond to the limits of 32-bit integers.\x0d\n    if (typeof value !== 'number') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n    }\x0d\n    if (!NumberIsInteger(value)) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n    }\x0d\n    if (value < min || value > max) {\x0d\n      throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * @callback validateUint32\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number|boolean} [positive=false]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateUint32} */\x0d\nconst validateUint32 = hideStackFrames((value\x2C name\x2C positive = false) => {\x0d\n  if (typeof value !== 'number') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n  }\x0d\n  if (!NumberIsInteger(value)) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C 'an integer'\x2C value);\x0d\n  }\x0d\n  const min = positive ? 1 : 0;\x0d\n  // 2 ** 32 === 4294967296\x0d\n  const max = 4_294_967_295;\x0d\n  if (value < min || value > max) {\x0d\n    throw new ERR_OUT_OF_RANGE(name\x2C `>= ${min} && <= ${max}`\x2C value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateString\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string}\x0d\n */\x0d\n\x0d\n/** @type {validateString} */\x0d\nconst validateString = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'string')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'string'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateNumber\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [min]\x0d\n * @param {number} [max]\x0d\n * @returns {asserts value is number}\x0d\n */\x0d\n\x0d\n/** @type {validateNumber} */\x0d\nconst validateNumber = hideStackFrames((value\x2C name\x2C min = undefined\x2C max) => {\x0d\n  if (typeof value !== 'number')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'number'\x2C value);\x0d\n\x0d\n  if ((min != null && value < min) || (max != null && value > max) ||\x0d\n    ((min != null || max != null) && NumberIsNaN(value))) {\x0d\n    throw new ERR_OUT_OF_RANGE(\x0d\n      name\x2C\x0d\n      `${min != null ? `>= ${min}` : ''}${min != null && max != null ? ' && ' : ''}${max != null ? `<= ${max}` : ''}`\x2C\x0d\n      value);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateOneOf\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} oneOf\x0d\n */\x0d\n\x0d\n/** @type {validateOneOf} */\x0d\nconst validateOneOf = hideStackFrames((value\x2C name\x2C oneOf) => {\x0d\n  if (!ArrayPrototypeIncludes(oneOf\x2C value)) {\x0d\n    const allowed = ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(oneOf\x2C (v) =>\x0d\n        (typeof v === 'string' ? `'${v}'` : String(v)))\x2C\x0d\n      '\x2C ');\x0d\n    const reason = 'must be one of: ' + allowed;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBoolean\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean}\x0d\n */\x0d\n\x0d\n/** @type {validateBoolean} */\x0d\nconst validateBoolean = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'boolean')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'boolean'\x2C value);\x0d\n});\x0d\n\x0d\nconst kValidateObjectNone = 0;\x0d\nconst kValidateObjectAllowNullable = 1 << 0;\x0d\nconst kValidateObjectAllowArray = 1 << 1;\x0d\nconst kValidateObjectAllowFunction = 1 << 2;\x0d\n\x0d\n/**\x0d\n * @callback validateObject\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [options]\x0d\n */\x0d\n\x0d\n/** @type {validateObject} */\x0d\nconst validateObject = hideStackFrames(\x0d\n  (value\x2C name\x2C options = kValidateObjectNone) => {\x0d\n    if (options === kValidateObjectNone) {\x0d\n      if (value === null || ArrayIsArray(value)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      if (typeof value !== 'object') {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n    } else {\x0d\n      const throwOnNullable = (kValidateObjectAllowNullable & options) === 0;\x0d\n\x0d\n      if (throwOnNullable && value === null) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      const throwOnArray = (kValidateObjectAllowArray & options) === 0;\x0d\n\x0d\n      if (throwOnArray && ArrayIsArray(value)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n\x0d\n      const throwOnFunction = (kValidateObjectAllowFunction & options) === 0;\x0d\n      const typeofValue = typeof value;\x0d\n\x0d\n      if (typeofValue !== 'object' && (throwOnFunction || typeofValue !== 'function')) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(name\x2C 'Object'\x2C value);\x0d\n      }\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateDictionary - We are using the Web IDL Standard definition\x0d\n *                                of "dictionary" here\x2C which means any value\x0d\n *                                whose Type is either Undefined\x2C Null\x2C or\x0d\n *                                Object (which includes functions).\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @see https://webidl.spec.whatwg.org/#es-dictionary\x0d\n * @see https://tc39.es/ecma262/#table-typeof-operator-results\x0d\n */\x0d\n\x0d\n/** @type {validateDictionary} */\x0d\nconst validateDictionary = hideStackFrames(\x0d\n  (value\x2C name) => {\x0d\n    if (value != null && typeof value !== 'object' && typeof value !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(name\x2C 'a dictionary'\x2C value);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @callback validateArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @param {number} [minLength]\x0d\n * @returns {asserts value is any[]}\x0d\n */\x0d\n\x0d\n/** @type {validateArray} */\x0d\nconst validateArray = hideStackFrames((value\x2C name\x2C minLength = 0) => {\x0d\n  if (!ArrayIsArray(value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Array'\x2C value);\x0d\n  }\x0d\n  if (value.length < minLength) {\x0d\n    const reason = `must be longer than ${minLength}`;\x0d\n    throw new ERR_INVALID_ARG_VALUE(name\x2C value\x2C reason);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateStringArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is string[]}\x0d\n */\x0d\n\x0d\n/** @type {validateStringArray} */\x0d\nconst validateStringArray = hideStackFrames((value\x2C name) => {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; ++i) {\x0d\n    // Don't use validateString here for performance reasons\x2C as\x0d\n    // we would generate intermediate strings for the name.\x0d\n    if (typeof value[i] !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'string'\x2C value[i]);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBooleanArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is boolean[]}\x0d\n */\x0d\n\x0d\n/** @type {validateBooleanArray} */\x0d\nconst validateBooleanArray = hideStackFrames((value\x2C name) => {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; ++i) {\x0d\n    // Don't use validateBoolean here for performance reasons\x2C as\x0d\n    // we would generate intermediate strings for the name.\x0d\n    if (value[i] !== true && value[i] !== false) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(`${name}[${i}]`\x2C 'boolean'\x2C value[i]);\x0d\n    }\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignalArray\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is AbortSignal[]}\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignalArray} */\x0d\nfunction validateAbortSignalArray(value\x2C name) {\x0d\n  validateArray(value\x2C name);\x0d\n  for (let i = 0; i < value.length; i++) {\x0d\n    const signal = value[i];\x0d\n    const indexedName = `${name}[${i}]`;\x0d\n    if (signal == null) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(indexedName\x2C 'AbortSignal'\x2C signal);\x0d\n    }\x0d\n    validateAbortSignal(signal\x2C indexedName);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {*} signal\x0d\n * @param {string} [name='signal']\x0d\n * @returns {asserts signal is keyof signals}\x0d\n */\x0d\nconst validateSignalName = hideStackFrames((signal\x2C name = 'signal') => {\x0d\n  validateString(signal\x2C name);\x0d\n\x0d\n  if (signals[signal] === undefined) {\x0d\n    if (signals[StringPrototypeToUpperCase(signal)] !== undefined) {\x0d\n      throw new ERR_UNKNOWN_SIGNAL(signal +\x0d\n                                   ' (signals must use all capital letters)');\x0d\n    }\x0d\n\x0d\n    throw new ERR_UNKNOWN_SIGNAL(signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateBuffer\x0d\n * @param {*} buffer\x0d\n * @param {string} [name='buffer']\x0d\n * @returns {asserts buffer is ArrayBufferView}\x0d\n */\x0d\n\x0d\n/** @type {validateBuffer} */\x0d\nconst validateBuffer = hideStackFrames((buffer\x2C name = 'buffer') => {\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buffer);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {string} data\x0d\n * @param {string} encoding\x0d\n */\x0d\nconst validateEncoding = hideStackFrames((data\x2C encoding) => {\x0d\n  const normalizedEncoding = normalizeEncoding(encoding);\x0d\n  const length = data.length;\x0d\n\x0d\n  if (normalizedEncoding === 'hex' && length % 2 !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('encoding'\x2C encoding\x2C\x0d\n                                    `is invalid for data of length ${length}`);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * Check that the port number is not NaN when coerced to a number\x2C\x0d\n * is an integer and that it falls within the legal range of port numbers.\x0d\n * @param {*} port\x0d\n * @param {string} [name='Port']\x0d\n * @param {boolean} [allowZero=true]\x0d\n * @returns {number}\x0d\n */\x0d\nconst validatePort = hideStackFrames((port\x2C name = 'Port'\x2C allowZero = true) => {\x0d\n  if ((typeof port !== 'number' && typeof port !== 'string') ||\x0d\n      (typeof port === 'string' && StringPrototypeTrim(port).length === 0) ||\x0d\n      +port !== (+port >>> 0) ||\x0d\n      port > 0xFFFF ||\x0d\n      (port === 0 && !allowZero)) {\x0d\n    throw new ERR_SOCKET_BAD_PORT(name\x2C port\x2C allowZero);\x0d\n  }\x0d\n  return port | 0;\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateAbortSignal\x0d\n * @param {*} signal\x0d\n * @param {string} name\x0d\n */\x0d\n\x0d\n/** @type {validateAbortSignal} */\x0d\nconst validateAbortSignal = hideStackFrames((signal\x2C name) => {\x0d\n  if (signal !== undefined &&\x0d\n      (signal === null ||\x0d\n       typeof signal !== 'object' ||\x0d\n       !('aborted' in signal))) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validateFunction} */\x0d\nconst validateFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function')\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validatePlainFunction\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is Function}\x0d\n */\x0d\n\x0d\n/** @type {validatePlainFunction} */\x0d\nconst validatePlainFunction = hideStackFrames((value\x2C name) => {\x0d\n  if (typeof value !== 'function' || isAsyncFunction(value))\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'Function'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @callback validateUndefined\x0d\n * @param {*} value\x0d\n * @param {string} name\x0d\n * @returns {asserts value is undefined}\x0d\n */\x0d\n\x0d\n/** @type {validateUndefined} */\x0d\nconst validateUndefined = hideStackFrames((value\x2C name) => {\x0d\n  if (value !== undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'undefined'\x2C value);\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template T\x0d\n * @param {T} value\x0d\n * @param {string} name\x0d\n * @param {T[]} union\x0d\n */\x0d\nfunction validateUnion(value\x2C name\x2C union) {\x0d\n  if (!ArrayPrototypeIncludes(union\x2C value)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C `('${ArrayPrototypeJoin(union\x2C '|')}')`\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\n/*\x0d\n  The rules for the Link header field are described here:\x0d\n  https://www.rfc-editor.org/rfc/rfc8288.html#section-3\x0d\n\x0d\n  This regex validates any string surrounded by angle brackets\x0d\n  (not necessarily a valid URI reference) followed by zero or more\x0d\n  link-params separated by semicolons.\x0d\n*/\x0d\nconst linkValueRegExp = /^(?:<[^>]*>)(?:\\s*;\\s*[^;"\\s]+(?:=(")?[^;"\\s]*\\1)?)*$/;\x0d\n\x0d\n/**\x0d\n * @param {any} value\x0d\n * @param {string} name\x0d\n */\x0d\nconst validateLinkHeaderFormat = hideStackFrames((value\x2C name) => {\x0d\n  if (\x0d\n    typeof value === 'undefined' ||\x0d\n    !RegExpPrototypeExec(linkValueRegExp\x2C value)\x0d\n  ) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      name\x2C\x0d\n      value\x2C\x0d\n      'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validateInternalField = hideStackFrames((object\x2C fieldKey\x2C className) => {\x0d\n  if (typeof object !== 'object' || object === null || !ObjectPrototypeHasOwnProperty(object\x2C fieldKey)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('this'\x2C className\x2C object);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @param {any} hints\x0d\n * @return {string}\x0d\n */\x0d\nconst validateLinkHeaderValue = hideStackFrames((hints) => {\x0d\n  if (typeof hints === 'string') {\x0d\n    validateLinkHeaderFormat.withoutStackTrace(hints\x2C 'hints');\x0d\n    return hints;\x0d\n  } else if (ArrayIsArray(hints)) {\x0d\n    const hintsLength = hints.length;\x0d\n    let result = '';\x0d\n\x0d\n    if (hintsLength === 0) {\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < hintsLength; i++) {\x0d\n      const link = hints[i];\x0d\n      validateLinkHeaderFormat.withoutStackTrace(link\x2C 'hints');\x0d\n      result += link;\x0d\n\x0d\n      if (i !== hintsLength - 1) {\x0d\n        result += '\x2C ';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE(\x0d\n    'hints'\x2C\x0d\n    hints\x2C\x0d\n    'must be an array or string of format "</styles.css>; rel=preload; as=style"'\x2C\x0d\n  );\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  isInt32\x2C\x0d\n  isUint32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateArray\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateBooleanArray\x2C\x0d\n  validateAbortSignalArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateDictionary\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  kValidateObjectNone\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n  validateOneOf\x2C\x0d\n  validatePlainFunction\x2C\x0d\n  validatePort\x2C\x0d\n  validateSignalName\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n  validateUndefined\x2C\x0d\n  validateUnion\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateLinkHeaderValue\x2C\x0d\n  validateInternalField\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8d62de,15,6102,6219,C0O6124C6O6161C22O6167C27O6161C29O6218,,
code-creation,JS,10,137663,0x1c66f8d7696,10,setInternalPrepareStackTrace node:internal/errors:113:38,0x23399fc868,~
script-source,10,node:internal/errors,/* eslint node-core/documented-errors: "error" */\x0d\n/* eslint node-core/alphabetize-errors: "error" */\x0d\n/* eslint node-core/prefer-util-format-errors: "error" */\x0d\n\x0d\n'use strict';\x0d\n\x0d\n// The whole point behind this internal module is to allow Node.js to no\x0d\n// longer be forced to treat every error message change as a semver-major\x0d\n// change. The NodeError classes here all expose a `code` property whose\x0d\n// value statically and permanently identifies the error. While the error\x0d\n// message may change\x2C the code should not.\x0d\n\x0d\nconst {\x0d\n  AggregateError\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGet\x2C\x0d\n  MathAbs\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectIsExtensible\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RangeError\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SyntaxError\x2C\x0d\n  TypeError\x2C\x0d\n  URIError\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kIsNodeError = Symbol('kIsNodeError');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst messages = new SafeMap();\x0d\nconst codes = {};\x0d\n\x0d\nconst classRegExp = /^[A-Z][a-zA-Z0-9]*$/;\x0d\n\x0d\n// Sorted by a rough estimate on most frequently used entries.\x0d\nconst kTypes = [\x0d\n  'string'\x2C\x0d\n  'function'\x2C\x0d\n  'number'\x2C\x0d\n  'object'\x2C\x0d\n  // Accept 'Function' and 'Object' as alternative to the lower cased version.\x0d\n  'Function'\x2C\x0d\n  'Object'\x2C\x0d\n  'boolean'\x2C\x0d\n  'bigint'\x2C\x0d\n  'symbol'\x2C\x0d\n];\x0d\n\x0d\nconst MainContextError = Error;\x0d\nconst overrideStackTrace = new SafeWeakMap();\x0d\nlet internalPrepareStackTrace = defaultPrepareStackTrace;\x0d\n\x0d\n/**\x0d\n * The default implementation of `Error.prepareStackTrace` with simple\x0d\n * concatenation of stack frames.\x0d\n * Read more about `Error.prepareStackTrace` at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\x0d\n */\x0d\nfunction defaultPrepareStackTrace(error\x2C trace) {\x0d\n  // Normal error formatting:\x0d\n  //\x0d\n  // Error: Message\x0d\n  //     at function (file)\x0d\n  //     at file\x0d\n  let errorString;\x0d\n  if (kIsNodeError in error) {\x0d\n    errorString = `${error.name} [${error.code}]: ${error.message}`;\x0d\n  } else {\x0d\n    errorString = ErrorPrototypeToString(error);\x0d\n  }\x0d\n  if (trace.length === 0) {\x0d\n    return errorString;\x0d\n  }\x0d\n  return `${errorString}\\n    at ${ArrayPrototypeJoin(trace\x2C '\\n    at ')}`;\x0d\n}\x0d\n\x0d\nfunction setInternalPrepareStackTrace(callback) {\x0d\n  internalPrepareStackTrace = callback;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Every realm has its own prepareStackTraceCallback. When `error.stack` is\x0d\n * accessed\x2C if the error is created in a shadow realm\x2C the shadow realm's\x0d\n * prepareStackTraceCallback is invoked. Otherwise\x2C the principal realm's\x0d\n * prepareStackTraceCallback is invoked. Note that accessing `error.stack`\x0d\n * of error objects created in a VM Context will always invoke the\x0d\n * prepareStackTraceCallback of the principal realm.\x0d\n * @param {object} globalThis The global object of the realm that the error was\x0d\n *   created in. When the error object is created in a VM Context\x2C this is the\x0d\n *   global object of that VM Context.\x0d\n * @param {object} error The error object.\x0d\n * @param {CallSite[]} trace An array of CallSite objects\x2C read more at https://v8.dev/docs/stack-trace-api#customizing-stack-traces.\x0d\n * @returns {string}\x0d\n */\x0d\nfunction prepareStackTraceCallback(globalThis\x2C error\x2C trace) {\x0d\n  // API for node internals to override error stack formatting\x0d\n  // without interfering with userland code.\x0d\n  if (overrideStackTrace.has(error)) {\x0d\n    const f = overrideStackTrace.get(error);\x0d\n    overrideStackTrace.delete(error);\x0d\n    return f(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  // Polyfill of V8's Error.prepareStackTrace API.\x0d\n  // https://crbug.com/v8/7848\x0d\n  // `globalThis` is the global that contains the constructor which\x0d\n  // created `error`.\x0d\n  if (typeof globalThis.Error?.prepareStackTrace === 'function') {\x0d\n    return globalThis.Error.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n  // We still have legacy usage that depends on the main context's `Error`\x0d\n  // being used\x2C even when the error is from a different context.\x0d\n  // TODO(devsnek): evaluate if this can be eventually deprecated/removed.\x0d\n  if (typeof MainContextError.prepareStackTrace === 'function') {\x0d\n    return MainContextError.prepareStackTrace(error\x2C trace);\x0d\n  }\x0d\n\x0d\n  // If the Error.prepareStackTrace was not a function\x2C fallback to the\x0d\n  // internal implementation.\x0d\n  return internalPrepareStackTrace(error\x2C trace);\x0d\n}\x0d\n\x0d\n/**\x0d\n * The default Error.prepareStackTrace implementation.\x0d\n */\x0d\nfunction ErrorPrepareStackTrace(error\x2C trace) {\x0d\n  return internalPrepareStackTrace(error\x2C trace);\x0d\n}\x0d\n\x0d\nconst aggregateTwoErrors = (innerError\x2C outerError) => {\x0d\n  if (innerError && outerError && innerError !== outerError) {\x0d\n    if (ArrayIsArray(outerError.errors)) {\x0d\n      // If `outerError` is already an `AggregateError`.\x0d\n      ArrayPrototypePush(outerError.errors\x2C innerError);\x0d\n      return outerError;\x0d\n    }\x0d\n    let err;\x0d\n    if (isErrorStackTraceLimitWritable()) {\x0d\n      const limit = Error.stackTraceLimit;\x0d\n      Error.stackTraceLimit = 0;\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      err = new AggregateError(new SafeArrayIterator([\x0d\n        outerError\x2C\x0d\n        innerError\x2C\x0d\n      ])\x2C outerError.message);\x0d\n      Error.stackTraceLimit = limit;\x0d\n      ErrorCaptureStackTrace(err\x2C aggregateTwoErrors);\x0d\n    } else {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      err = new AggregateError(new SafeArrayIterator([\x0d\n        outerError\x2C\x0d\n        innerError\x2C\x0d\n      ])\x2C outerError.message);\x0d\n    }\x0d\n    err.code = outerError.code;\x0d\n    return err;\x0d\n  }\x0d\n  return innerError || outerError;\x0d\n};\x0d\n\x0d\nclass NodeAggregateError extends AggregateError {\x0d\n  constructor(errors\x2C message) {\x0d\n    super(new SafeArrayIterator(errors)\x2C message);\x0d\n    this.code = errors[0]?.code;\x0d\n  }\x0d\n\x0d\n  get [kIsNodeError]() {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return AggregateError;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\n// Lazily loaded\x0d\nlet util;\x0d\n\x0d\nlet internalUtil = null;\x0d\nfunction lazyInternalUtil() {\x0d\n  internalUtil ??= require('internal/util');\x0d\n  return internalUtil;\x0d\n}\x0d\n\x0d\nlet internalUtilInspect = null;\x0d\nfunction lazyInternalUtilInspect() {\x0d\n  internalUtilInspect ??= require('internal/util/inspect');\x0d\n  return internalUtilInspect;\x0d\n}\x0d\n\x0d\nlet utilColors;\x0d\nfunction lazyUtilColors() {\x0d\n  utilColors ??= require('internal/util/colors');\x0d\n  return utilColors;\x0d\n}\x0d\n\x0d\nlet buffer;\x0d\nfunction lazyBuffer() {\x0d\n  buffer ??= require('buffer').Buffer;\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction isErrorStackTraceLimitWritable() {\x0d\n  // Do no touch Error.stackTraceLimit as V8 would attempt to install\x0d\n  // it again during deserialization.\x0d\n  if (require('internal/v8/startup_snapshot').namespace.isBuildingSnapshot()) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const desc = ObjectGetOwnPropertyDescriptor(Error\x2C 'stackTraceLimit');\x0d\n  if (desc === undefined) {\x0d\n    return ObjectIsExtensible(Error);\x0d\n  }\x0d\n\x0d\n  return ObjectPrototypeHasOwnProperty(desc\x2C 'writable') ?\x0d\n    desc.writable :\x0d\n    desc.set !== undefined;\x0d\n}\x0d\n\x0d\nfunction inspectWithNoCustomRetry(obj\x2C options) {\x0d\n  const utilInspect = lazyInternalUtilInspect();\x0d\n\x0d\n  try {\x0d\n    return utilInspect.inspect(obj\x2C options);\x0d\n  } catch {\x0d\n    return utilInspect.inspect(obj\x2C { ...options\x2C customInspect: false });\x0d\n  }\x0d\n}\x0d\n\x0d\n// A specialized Error that includes an additional info property with\x0d\n// additional information about the error condition.\x0d\n// It has the properties present in a UVException but with a custom error\x0d\n// message followed by the uv error code and uv error message.\x0d\n// It also has its own error code with the original uv error context put into\x0d\n// `err.info`.\x0d\n// The context passed into this error must have .code\x2C .syscall and .message\x2C\x0d\n// and may have .path and .dest.\x0d\nclass SystemError extends Error {\x0d\n  constructor(key\x2C context) {\x0d\n    super();\x0d\n    const prefix = getMessage(key\x2C []\x2C this);\x0d\n    let message = `${prefix}: ${context.syscall} returned ` +\x0d\n                  `${context.code} (${context.message})`;\x0d\n\x0d\n    if (context.path !== undefined)\x0d\n      message += ` ${context.path}`;\x0d\n    if (context.dest !== undefined)\x0d\n      message += ` => ${context.dest}`;\x0d\n\x0d\n    this.code = key;\x0d\n\x0d\n    ObjectDefineProperties(this\x2C {\x0d\n      [kIsNodeError]: {\x0d\n        __proto__: null\x2C\x0d\n        value: true\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: false\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      name: {\x0d\n        __proto__: null\x2C\x0d\n        value: 'SystemError'\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      message: {\x0d\n        __proto__: null\x2C\x0d\n        value: message\x2C\x0d\n        enumerable: false\x2C\x0d\n        writable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      info: {\x0d\n        __proto__: null\x2C\x0d\n        value: context\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        writable: false\x2C\x0d\n      }\x2C\x0d\n      errno: {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.errno;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.errno = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n      syscall: {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.syscall;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.syscall = value;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n\x0d\n    if (context.path !== undefined) {\x0d\n      // TODO(BridgeAR): Investigate why and when the `.toString()` was\x0d\n      // introduced. The `path` and `dest` properties in the context seem to\x0d\n      // always be of type string. We should probably just remove the\x0d\n      // `.toString()` and `Buffer.from()` operations and set the value on the\x0d\n      // context as the user did.\x0d\n      ObjectDefineProperty(this\x2C 'path'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.path != null ?\x0d\n            context.path.toString() : context.path;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.path = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    if (context.dest !== undefined) {\x0d\n      ObjectDefineProperty(this\x2C 'dest'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        get() {\x0d\n          return context.dest != null ?\x0d\n            context.dest.toString() : context.dest;\x0d\n        }\x2C\x0d\n        set: (value) => {\x0d\n          context.dest = value ?\x0d\n            lazyBuffer().from(value.toString()) : undefined;\x0d\n        }\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    return `${this.name} [${this.code}]: ${this.message}`;\x0d\n  }\x0d\n\x0d\n  [SymbolFor('nodejs.util.inspect.custom')](recurseTimes\x2C ctx) {\x0d\n    return lazyInternalUtilInspect().inspect(this\x2C {\x0d\n      ...ctx\x2C\x0d\n      getters: true\x2C\x0d\n      customInspect: false\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction makeSystemErrorWithCode(key) {\x0d\n  return class NodeError extends SystemError {\x0d\n    constructor(ctx) {\x0d\n      super(key\x2C ctx);\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n// This is a special error type that is only used for the E function.\x0d\nclass HideStackFramesError extends Error {\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorForHideStackFrame(Base\x2C clazz) {\x0d\n  class HideStackFramesError extends Base {\x0d\n    constructor(...args) {\x0d\n      if (isErrorStackTraceLimitWritable()) {\x0d\n        const limit = Error.stackTraceLimit;\x0d\n        Error.stackTraceLimit = 0;\x0d\n        super(...args);\x0d\n        Error.stackTraceLimit = limit;\x0d\n      } else {\x0d\n        super(...args);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // This is a workaround for wpt tests that expect that the error\x0d\n    // constructor has a `name` property of the base class.\x0d\n    get ['constructor']() {\x0d\n      return clazz;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return HideStackFramesError;\x0d\n}\x0d\n\x0d\nfunction makeNodeErrorWithCode(Base\x2C key) {\x0d\n  const msg = messages.get(key);\x0d\n  const expectedLength = typeof msg !== 'string' ? -1 : getExpectedArgumentLength(msg);\x0d\n\x0d\n  switch (expectedLength) {\x0d\n    case 0: {\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          assert(\x0d\n            args.length === 0\x2C\x0d\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n              `match the required ones (${expectedLength}).`\x2C\x0d\n          );\x0d\n          super(msg);\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n    case -1: {\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          super();\x0d\n          ObjectDefineProperty(this\x2C 'message'\x2C {\x0d\n            __proto__: null\x2C\x0d\n            value: getMessage(key\x2C args\x2C this)\x2C\x0d\n            enumerable: false\x2C\x0d\n            writable: true\x2C\x0d\n            configurable: true\x2C\x0d\n          });\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n    default: {\x0d\n\x0d\n      class NodeError extends Base {\x0d\n        code = key;\x0d\n\x0d\n        constructor(...args) {\x0d\n          assert(\x0d\n            args.length === expectedLength\x2C\x0d\n            `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n              `match the required ones (${expectedLength}).`\x2C\x0d\n          );\x0d\n\x0d\n          ArrayPrototypeUnshift(args\x2C msg);\x0d\n          super(ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args));\x0d\n        }\x0d\n\x0d\n        // This is a workaround for wpt tests that expect that the error\x0d\n        // constructor has a `name` property of the base class.\x0d\n        get ['constructor']() {\x0d\n          return Base;\x0d\n        }\x0d\n\x0d\n        get [kIsNodeError]() {\x0d\n          return true;\x0d\n        }\x0d\n\x0d\n        toString() {\x0d\n          return `${this.name} [${key}]: ${this.message}`;\x0d\n        }\x0d\n      }\x0d\n      return NodeError;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This function removes unnecessary frames from Node.js core errors.\x0d\n * @template {(...args: unknown[]) => unknown} T\x0d\n * @param {T} fn\x0d\n * @returns {T}\x0d\n */\x0d\nfunction hideStackFrames(fn) {\x0d\n  function wrappedFn(...args) {\x0d\n    try {\x0d\n      return ReflectApply(fn\x2C this\x2C args);\x0d\n    } catch (error) {\x0d\n      Error.stackTraceLimit && ErrorCaptureStackTrace(error\x2C wrappedFn);\x0d\n      throw error;\x0d\n    }\x0d\n  }\x0d\n  wrappedFn.withoutStackTrace = fn;\x0d\n  return wrappedFn;\x0d\n}\x0d\n\x0d\n// Utility function for registering the error codes. Only used here. Exported\x0d\n// *only* to allow for testing.\x0d\nfunction E(sym\x2C val\x2C def\x2C ...otherClasses) {\x0d\n  // Special case for SystemError that formats the error message differently\x0d\n  // The SystemErrors only have SystemError as their base classes.\x0d\n  messages.set(sym\x2C val);\x0d\n\x0d\n  const ErrClass = def === SystemError ?\x0d\n    makeSystemErrorWithCode(sym) :\x0d\n    makeNodeErrorWithCode(def\x2C sym);\x0d\n\x0d\n  if (otherClasses.length !== 0) {\x0d\n    if (otherClasses.includes(HideStackFramesError)) {\x0d\n      if (otherClasses.length !== 1) {\x0d\n        otherClasses.forEach((clazz) => {\x0d\n          if (clazz !== HideStackFramesError) {\x0d\n            ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n            ErrClass[clazz.name].HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass[clazz.name]\x2C clazz);\x0d\n          }\x0d\n        });\x0d\n      }\x0d\n    } else {\x0d\n      otherClasses.forEach((clazz) => {\x0d\n        ErrClass[clazz.name] = makeNodeErrorWithCode(clazz\x2C sym);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (otherClasses.includes(HideStackFramesError)) {\x0d\n    ErrClass.HideStackFramesError = makeNodeErrorForHideStackFrame(ErrClass\x2C def);\x0d\n  }\x0d\n\x0d\n  codes[sym] = ErrClass;\x0d\n}\x0d\n\x0d\nfunction getExpectedArgumentLength(msg) {\x0d\n  let expectedLength = 0;\x0d\n  const regex = /%[dfijoOs]/g;\x0d\n  while (RegExpPrototypeExec(regex\x2C msg) !== null) expectedLength++;\x0d\n  return expectedLength;\x0d\n}\x0d\n\x0d\nfunction getMessage(key\x2C args\x2C self) {\x0d\n  const msg = messages.get(key);\x0d\n\x0d\n  if (typeof msg === 'function') {\x0d\n    assert(\x0d\n      msg.length <= args.length\x2C // Default options do not count.\x0d\n      `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n        `match the required ones (${msg.length}).`\x2C\x0d\n    );\x0d\n    return ReflectApply(msg\x2C self\x2C args);\x0d\n  }\x0d\n\x0d\n  const expectedLength = getExpectedArgumentLength(msg);\x0d\n  assert(\x0d\n    expectedLength === args.length\x2C\x0d\n    `Code: ${key}; The provided arguments length (${args.length}) does not ` +\x0d\n      `match the required ones (${expectedLength}).`\x2C\x0d\n  );\x0d\n  if (args.length === 0)\x0d\n    return msg;\x0d\n\x0d\n  ArrayPrototypeUnshift(args\x2C msg);\x0d\n  return ReflectApply(lazyInternalUtilInspect().format\x2C null\x2C args);\x0d\n}\x0d\n\x0d\nlet uvBinding;\x0d\n\x0d\nfunction lazyUv() {\x0d\n  uvBinding ??= internalBinding('uv');\x0d\n  return uvBinding;\x0d\n}\x0d\n\x0d\nconst uvUnmappedError = ['UNKNOWN'\x2C 'unknown error'];\x0d\n\x0d\nfunction uvErrmapGet(name) {\x0d\n  uvBinding = lazyUv();\x0d\n  uvBinding.errmap ??= uvBinding.getErrorMap();\x0d\n  return MapPrototypeGet(uvBinding.errmap\x2C name);\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * function UVException using a context object with data assembled in C++.\x0d\n * The goal is to migrate them to ERR_* errors later when compatibility is\x0d\n * not a concern.\x0d\n */\x0d\nclass UVException extends Error {\x0d\n  /**\x0d\n   * @param {object} ctx\x0d\n   */\x0d\n  constructor(ctx) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(ctx.errno) || uvUnmappedError;\x0d\n    let message = `${code}: ${ctx.message || uvmsg}\x2C ${ctx.syscall}`;\x0d\n\x0d\n    let path;\x0d\n    let dest;\x0d\n    if (ctx.path) {\x0d\n      path = ctx.path.toString();\x0d\n      message += ` '${path}'`;\x0d\n    }\x0d\n    if (ctx.dest) {\x0d\n      dest = ctx.dest.toString();\x0d\n      message += ` -> '${dest}'`;\x0d\n    }\x0d\n\x0d\n    super(message);\x0d\n\x0d\n    for (const prop of ObjectKeys(ctx)) {\x0d\n      if (prop === 'message' || prop === 'path' || prop === 'dest') {\x0d\n        continue;\x0d\n      }\x0d\n      this[prop] = ctx[prop];\x0d\n    }\x0d\n\x0d\n    this.code = code;\x0d\n    if (path) {\x0d\n      this.path = path;\x0d\n    }\x0d\n    if (dest) {\x0d\n      this.dest = dest;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates an error compatible with errors produced in the C++\x0d\n * This function should replace the deprecated\x0d\n * `exceptionWithHostPort()` function.\x0d\n */\x0d\nclass UVExceptionWithHostPort extends Error {\x0d\n  /**\x0d\n   * @param {number} err - A libuv error number\x0d\n   * @param {string} syscall\x0d\n   * @param {string} address\x0d\n   * @param {number} [port]\x0d\n   */\x0d\n  constructor(err\x2C syscall\x2C address\x2C port) {\x0d\n    const { 0: code\x2C 1: uvmsg } = uvErrmapGet(err) || uvUnmappedError;\x0d\n    const message = `${syscall} ${code}: ${uvmsg}`;\x0d\n    let details = '';\x0d\n\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n\x0d\n    super(`${message}${details}`);\x0d\n\x0d\n    this.code = code;\x0d\n    this.errno = err;\x0d\n    this.syscall = syscall;\x0d\n    this.address = address;\x0d\n    if (port) {\x0d\n      this.port = port;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This used to be util._errnoException().\x0d\n */\x0d\nclass ErrnoException extends Error {\x0d\n  /**\x0d\n   * @param {number} err - A libuv error number\x0d\n   * @param {string} syscall\x0d\n   * @param {string} [original] err\x0d\n   */\x0d\n  constructor(err\x2C syscall\x2C original) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    util ??= require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    const message = original ?\x0d\n      `${syscall} ${code} ${original}` : `${syscall} ${code}`;\x0d\n\x0d\n    super(message);\x0d\n\x0d\n    this.errno = err;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Deprecated\x2C new Error is `UVExceptionWithHostPort()`\x0d\n * New function added the error description directly\x0d\n * from C++. this method for backwards compatibility\x0d\n * @param {number} err - A libuv error number\x0d\n * @param {string} syscall\x0d\n * @param {string} address\x0d\n * @param {number} [port]\x0d\n * @param {string} [additional]\x0d\n * @returns {Error}\x0d\n */\x0d\nclass ExceptionWithHostPort extends Error {\x0d\n  constructor(err\x2C syscall\x2C address\x2C port\x2C additional) {\x0d\n    // TODO(joyeecheung): We have to use the type-checked\x0d\n    // getSystemErrorName(err) to guard against invalid arguments from users.\x0d\n    // This can be replaced with [ code ] = errmap.get(err) when this method\x0d\n    // is no longer exposed to user land.\x0d\n    util ??= require('util');\x0d\n    const code = util.getSystemErrorName(err);\x0d\n    let details = '';\x0d\n    if (port && port > 0) {\x0d\n      details = ` ${address}:${port}`;\x0d\n    } else if (address) {\x0d\n      details = ` ${address}`;\x0d\n    }\x0d\n    if (additional) {\x0d\n      details += ` - Local (${additional})`;\x0d\n    }\x0d\n\x0d\n    super(`${syscall} ${code}${details}`);\x0d\n\x0d\n    this.errno = err;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n    this.address = address;\x0d\n    if (port) {\x0d\n      this.port = port;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DNSException extends Error {\x0d\n  /**\x0d\n   * @param {number|string} code - A libuv error number or a c-ares error code\x0d\n   * @param {string} syscall\x0d\n   * @param {string} [hostname]\x0d\n   */\x0d\n  constructor(code\x2C syscall\x2C hostname) {\x0d\n    let errno;\x0d\n    // If `code` is of type number\x2C it is a libuv error number\x2C else it is a\x0d\n    // c-ares error code.\x0d\n    // TODO(joyeecheung): translate c-ares error codes into numeric ones and\x0d\n    // make them available in a property that's not error.errno (since they\x0d\n    // can be in conflict with libuv error codes). Also make sure\x0d\n    // util.getSystemErrorName() can understand them when an being informed that\x0d\n    // the number is a c-ares error code.\x0d\n    if (typeof code === 'number') {\x0d\n      errno = code;\x0d\n      // ENOTFOUND is not a proper POSIX error\x2C but this error has been in place\x0d\n      // long enough that it's not practical to remove it.\x0d\n      if (code === lazyUv().UV_EAI_NODATA || code === lazyUv().UV_EAI_NONAME) {\x0d\n        code = 'ENOTFOUND'; // Fabricated error name.\x0d\n      } else {\x0d\n        code = lazyInternalUtil().getSystemErrorName(code);\x0d\n      }\x0d\n    }\x0d\n    super(`${syscall} ${code}${hostname ? ` ${hostname}` : ''}`);\x0d\n    this.errno = errno;\x0d\n    this.code = code;\x0d\n    this.syscall = syscall;\x0d\n    if (hostname) {\x0d\n      this.hostname = hostname;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass ConnResetException extends Error {\x0d\n  constructor(msg) {\x0d\n    super(msg);\x0d\n    this.code = 'ECONNRESET';\x0d\n  }\x0d\n\x0d\n  get ['constructor']() {\x0d\n    return Error;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet maxStack_ErrorName;\x0d\nlet maxStack_ErrorMessage;\x0d\n\x0d\n/**\x0d\n * Returns true if `err.name` and `err.message` are equal to engine-specific\x0d\n * values indicating max call stack size has been exceeded.\x0d\n * "Maximum call stack size exceeded" in V8.\x0d\n * @param {Error} err\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isStackOverflowError(err) {\x0d\n  if (maxStack_ErrorMessage === undefined) {\x0d\n    try {\x0d\n      function overflowStack() { overflowStack(); }\x0d\n      overflowStack();\x0d\n    } catch (err) {\x0d\n      maxStack_ErrorMessage = err.message;\x0d\n      maxStack_ErrorName = err.name;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return err && err.name === maxStack_ErrorName &&\x0d\n         err.message === maxStack_ErrorMessage;\x0d\n}\x0d\n\x0d\n// Only use this for integers! Decimal numbers do not work with this function.\x0d\nfunction addNumericalSeparator(val) {\x0d\n  let res = '';\x0d\n  let i = val.length;\x0d\n  const start = val[0] === '-' ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    res = `_${StringPrototypeSlice(val\x2C i - 3\x2C i)}${res}`;\x0d\n  }\x0d\n  return `${StringPrototypeSlice(val\x2C 0\x2C i)}${res}`;\x0d\n}\x0d\n\x0d\n// Used to enhance the stack that will be picked up by the inspector\x0d\nconst kEnhanceStackBeforeInspector = Symbol('kEnhanceStackBeforeInspector');\x0d\n\x0d\n// These are supposed to be called only on fatal exceptions before\x0d\n// the process exits.\x0d\nconst fatalExceptionStackEnhancers = {\x0d\n  beforeInspector(error) {\x0d\n    if (typeof error[kEnhanceStackBeforeInspector] !== 'function') {\x0d\n      return error.stack;\x0d\n    }\x0d\n\x0d\n    try {\x0d\n      // Set the error.stack here so it gets picked up by the\x0d\n      // inspector.\x0d\n      error.stack = error[kEnhanceStackBeforeInspector]();\x0d\n    } catch {\x0d\n      // We are just enhancing the error. If it fails\x2C ignore it.\x0d\n    }\x0d\n    return error.stack;\x0d\n  }\x2C\x0d\n  afterInspector(error) {\x0d\n    const originalStack = error.stack;\x0d\n    let useColors = true;\x0d\n    // Some consoles do not convert ANSI escape sequences to colors\x2C\x0d\n    // rather display them directly to the stdout. On those consoles\x2C\x0d\n    // libuv emulates colors by intercepting stdout stream and calling\x0d\n    // corresponding Windows API functions for setting console colors.\x0d\n    // However\x2C fatal error are handled differently and we cannot easily\x0d\n    // highlight them. On Windows\x2C detecting whether a console supports\x0d\n    // ANSI escape sequences is not reliable.\x0d\n    if (isWindows) {\x0d\n      const info = internalBinding('os').getOSInformation();\x0d\n      const ver = ArrayPrototypeMap(StringPrototypeSplit(info[2]\x2C '.')\x2C\x0d\n                                    Number);\x0d\n      if (ver[0] !== 10 || ver[2] < 14393) {\x0d\n        useColors = false;\x0d\n      }\x0d\n    }\x0d\n    const {\x0d\n      inspect\x2C\x0d\n      inspectDefaultOptions: {\x0d\n        colors: defaultColors\x2C\x0d\n      }\x2C\x0d\n    } = lazyInternalUtilInspect();\x0d\n    const colors = useColors && (lazyUtilColors().shouldColorize(process.stderr) || defaultColors);\x0d\n    try {\x0d\n      return inspect(error\x2C {\x0d\n        colors\x2C\x0d\n        customInspect: false\x2C\x0d\n        depth: MathMax(inspect.defaultOptions.depth\x2C 5)\x2C\x0d\n      });\x0d\n    } catch {\x0d\n      return originalStack;\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    arrow_message_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n// Ensures the printed error line is from user code.\x0d\nfunction setArrowMessage(err\x2C arrowMessage) {\x0d\n  err[arrow_message_private_symbol] = arrowMessage;\x0d\n}\x0d\n\x0d\n// Hide stack lines before the first user code line.\x0d\nfunction hideInternalStackFrames(error) {\x0d\n  overrideStackTrace.set(error\x2C (error\x2C stackFrames) => {\x0d\n    let frames = stackFrames;\x0d\n    if (typeof stackFrames === 'object') {\x0d\n      frames = ArrayPrototypeFilter(\x0d\n        stackFrames\x2C\x0d\n        (frm) => !StringPrototypeStartsWith(frm.getFileName() || ''\x2C\x0d\n                                            'node:internal')\x2C\x0d\n      );\x0d\n    }\x0d\n    ArrayPrototypeUnshift(frames\x2C error);\x0d\n    return ArrayPrototypeJoin(frames\x2C '\\n    at ');\x0d\n  });\x0d\n}\x0d\n\x0d\n// Node uses an AbortError that isn't exactly the same as the DOMException\x0d\n// to make usage of the error in userland and readable-stream easier.\x0d\n// It is a regular error with `.code` and `.name`.\x0d\nclass AbortError extends Error {\x0d\n  constructor(message = 'The operation was aborted'\x2C options = undefined) {\x0d\n    if (options !== undefined && typeof options !== 'object') {\x0d\n      throw new codes.ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n    }\x0d\n    super(message\x2C options);\x0d\n    this.code = 'ABORT_ERR';\x0d\n    this.name = 'AbortError';\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This creates a generic Node.js error.\x0d\n * @param {string} message The error message.\x0d\n * @param {object} errorProperties Object with additional properties to be added to the error.\x0d\n * @returns {Error}\x0d\n */\x0d\nconst genericNodeError = hideStackFrames(function genericNodeError(message\x2C errorProperties) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  ObjectAssign(err\x2C errorProperties);\x0d\n  return err;\x0d\n});\x0d\n\x0d\n/**\x0d\n * Determine the specific type of a value for type-mismatch errors.\x0d\n * @param {*} value\x0d\n * @returns {string}\x0d\n */\x0d\nfunction determineSpecificType(value) {\x0d\n  if (value === null) {\x0d\n    return 'null';\x0d\n  } else if (value === undefined) {\x0d\n    return 'undefined';\x0d\n  }\x0d\n\x0d\n  const type = typeof value;\x0d\n\x0d\n  switch (type) {\x0d\n    case 'bigint':\x0d\n      return `type bigint (${value}n)`;\x0d\n    case 'number':\x0d\n      if (value === 0) {\x0d\n        return 1 / value === -Infinity ? 'type number (-0)' : 'type number (0)';\x0d\n      } else if (value !== value) { // eslint-disable-line no-self-compare\x0d\n        return 'type number (NaN)';\x0d\n      } else if (value === Infinity) {\x0d\n        return 'type number (Infinity)';\x0d\n      } else if (value === -Infinity) {\x0d\n        return 'type number (-Infinity)';\x0d\n      }\x0d\n      return `type number (${value})`;\x0d\n    case 'boolean':\x0d\n      return value ? 'type boolean (true)' : 'type boolean (false)';\x0d\n    case 'symbol':\x0d\n      return `type symbol (${String(value)})`;\x0d\n    case 'function':\x0d\n      return `function ${value.name}`;\x0d\n    case 'object':\x0d\n      if (value.constructor && 'name' in value.constructor) {\x0d\n        return `an instance of ${value.constructor.name}`;\x0d\n      }\x0d\n      return `${lazyInternalUtilInspect().inspect(value\x2C { depth: -1 })}`;\x0d\n    case 'string':\x0d\n      value.length > 28 && (value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`);\x0d\n      if (StringPrototypeIndexOf(value\x2C "'") === -1) {\x0d\n        return `type string ('${value}')`;\x0d\n      }\x0d\n      return `type string (${JSONStringify(value)})`;\x0d\n    default:\x0d\n      value = lazyInternalUtilInspect().inspect(value\x2C { colors: false });\x0d\n      if (value.length > 28) {\x0d\n        value = `${StringPrototypeSlice(value\x2C 0\x2C 25)}...`;\x0d\n      }\x0d\n\x0d\n      return `type ${type} (${value})`;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Create a list string in the form like 'A and B' or 'A\x2C B\x2C ...\x2C and Z'.\x0d\n * We cannot use Intl.ListFormat because it's not available in\x0d\n * --without-intl builds.\x0d\n * @param {string[]} array An array of strings.\x0d\n * @param {string} [type] The list type to be inserted before the last element.\x0d\n * @returns {string}\x0d\n */\x0d\nfunction formatList(array\x2C type = 'and') {\x0d\n  switch (array.length) {\x0d\n    case 0: return '';\x0d\n    case 1: return `${array[0]}`;\x0d\n    case 2: return `${array[0]} ${type} ${array[1]}`;\x0d\n    case 3: return `${array[0]}\x2C ${array[1]}\x2C ${type} ${array[2]}`;\x0d\n    default:\x0d\n      return `${ArrayPrototypeJoin(ArrayPrototypeSlice(array\x2C 0\x2C -1)\x2C '\x2C ')}\x2C ${type} ${array[array.length - 1]}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n  NodeAggregateError\x2C\x0d\n  codes\x2C\x0d\n  ConnResetException\x2C\x0d\n  DNSException\x2C\x0d\n  // This is exported only to facilitate testing.\x0d\n  determineSpecificType\x2C\x0d\n  E\x2C\x0d\n  ErrnoException\x2C\x0d\n  ExceptionWithHostPort\x2C\x0d\n  fatalExceptionStackEnhancers\x2C\x0d\n  formatList\x2C\x0d\n  genericNodeError\x2C\x0d\n  getMessage\x2C\x0d\n  hideInternalStackFrames\x2C\x0d\n  hideStackFrames\x2C\x0d\n  inspectWithNoCustomRetry\x2C\x0d\n  isErrorStackTraceLimitWritable\x2C\x0d\n  isStackOverflowError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  kIsNodeError\x2C\x0d\n  defaultPrepareStackTrace\x2C\x0d\n  setInternalPrepareStackTrace\x2C\x0d\n  overrideStackTrace\x2C\x0d\n  prepareStackTraceCallback\x2C\x0d\n  ErrorPrepareStackTrace\x2C\x0d\n  setArrowMessage\x2C\x0d\n  SystemError\x2C\x0d\n  uvErrmapGet\x2C\x0d\n  UVException\x2C\x0d\n  UVExceptionWithHostPort\x2C\x0d\n};\x0d\n\x0d\n// To declare an error message\x2C use the E(sym\x2C val\x2C def) function above. The sym\x0d\n// must be an upper case string. The val can be either a function or a string.\x0d\n// The def must be an error class.\x0d\n// The return value of the function must be a string.\x0d\n// Examples:\x0d\n// E('EXAMPLE_KEY1'\x2C 'This is the error value'\x2C Error);\x0d\n// E('EXAMPLE_KEY2'\x2C (a\x2C b) => return `${a} ${b}`\x2C RangeError);\x0d\n//\x0d\n// Once an error code has been assigned\x2C the code itself MUST NOT change and\x0d\n// any given error code must never be reused to identify a different error.\x0d\n//\x0d\n// Any error code added here should also be added to the documentation\x0d\n//\x0d\n// Note: Please try to keep these in alphabetical order\x0d\n//\x0d\n// Note: Node.js specific errors must begin with the prefix ERR_\x0d\n\x0d\nE('ERR_ACCESS_DENIED'\x2C\x0d\n  'Access to this API has been restricted. Permission: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_AMBIGUOUS_ARGUMENT'\x2C 'The "%s" argument is ambiguous. %s'\x2C TypeError);\x0d\nE('ERR_ARG_NOT_ITERABLE'\x2C '%s must be iterable'\x2C TypeError);\x0d\nE('ERR_ASSERTION'\x2C '%s'\x2C Error);\x0d\nE('ERR_ASYNC_CALLBACK'\x2C '%s must be a function'\x2C TypeError);\x0d\nE('ERR_ASYNC_TYPE'\x2C 'Invalid name for async "type": %s'\x2C TypeError);\x0d\nE('ERR_BROTLI_INVALID_PARAM'\x2C '%s is not a valid Brotli parameter'\x2C RangeError);\x0d\nE('ERR_BUFFER_OUT_OF_BOUNDS'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name = undefined) => {\x0d\n    if (name) {\x0d\n      return `"${name}" is outside of buffer bounds`;\x0d\n    }\x0d\n    return 'Attempt to access memory outside buffer bounds';\x0d\n  }\x2C RangeError);\x0d\nE('ERR_BUFFER_TOO_LARGE'\x2C\x0d\n  'Cannot create a Buffer larger than %s bytes'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CANNOT_WATCH_SIGINT'\x2C 'Cannot watch for SIGINT signals'\x2C Error);\x0d\nE('ERR_CHILD_CLOSED_BEFORE_REPLY'\x2C\x0d\n  'Child closed before reply received'\x2C Error);\x0d\nE('ERR_CHILD_PROCESS_IPC_REQUIRED'\x2C\x0d\n  "Forked processes must have an IPC channel\x2C missing value 'ipc' in %s"\x2C\x0d\n  Error);\x0d\nE('ERR_CHILD_PROCESS_STDIO_MAXBUFFER'\x2C '%s maxBuffer length exceeded'\x2C\x0d\n  RangeError);\x0d\nE('ERR_CONSOLE_WRITABLE_STREAM'\x2C\x0d\n  'Console expects a writable stream instance for %s'\x2C TypeError);\x0d\nE('ERR_CONTEXT_NOT_INITIALIZED'\x2C 'context used is not initialized'\x2C Error);\x0d\nE('ERR_CRYPTO_CUSTOM_ENGINE_NOT_SUPPORTED'\x2C\x0d\n  'Custom engines not supported by this OpenSSL'\x2C Error);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_FORMAT'\x2C 'Invalid ECDH format: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_ECDH_INVALID_PUBLIC_KEY'\x2C\x0d\n  'Public key is not valid for specified curve'\x2C Error);\x0d\nE('ERR_CRYPTO_ENGINE_UNKNOWN'\x2C 'Engine "%s" was not found'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_FORCED'\x2C\x0d\n  'Cannot set FIPS mode\x2C it was forced with --force-fips at startup.'\x2C Error);\x0d\nE('ERR_CRYPTO_FIPS_UNAVAILABLE'\x2C 'Cannot set FIPS mode in a non-FIPS build.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_HASH_FINALIZED'\x2C 'Digest already called'\x2C Error);\x0d\nE('ERR_CRYPTO_HASH_UPDATE_FAILED'\x2C 'Hash update failed'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY'\x2C 'Incompatible %s: %s'\x2C Error);\x0d\nE('ERR_CRYPTO_INCOMPATIBLE_KEY_OPTIONS'\x2C 'The selected key encoding %s %s.'\x2C\x0d\n  Error);\x0d\nE('ERR_CRYPTO_INVALID_DIGEST'\x2C 'Invalid digest: %s'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_JWK'\x2C 'Invalid JWK data'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_KEY_OBJECT_TYPE'\x2C\x0d\n  'Invalid key object type %s\x2C expected %s.'\x2C TypeError);\x0d\nE('ERR_CRYPTO_INVALID_STATE'\x2C 'Invalid state for operation %s'\x2C Error);\x0d\nE('ERR_CRYPTO_PBKDF2_ERROR'\x2C 'PBKDF2 error'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_INVALID_PARAMETER'\x2C 'Invalid scrypt parameter'\x2C Error);\x0d\nE('ERR_CRYPTO_SCRYPT_NOT_SUPPORTED'\x2C 'Scrypt algorithm not supported'\x2C Error);\x0d\n// Switch to TypeError. The current implementation does not seem right.\x0d\nE('ERR_CRYPTO_SIGN_KEY_REQUIRED'\x2C 'No key provided to sign'\x2C Error);\x0d\nE('ERR_DEBUGGER_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DEBUGGER_STARTUP_ERROR'\x2C '%s'\x2C Error);\x0d\nE('ERR_DIR_CLOSED'\x2C 'Directory handle was closed'\x2C Error);\x0d\nE('ERR_DIR_CONCURRENT_OPERATION'\x2C\x0d\n  'Cannot do synchronous work on directory handle with concurrent ' +\x0d\n  'asynchronous operations'\x2C Error);\x0d\nE('ERR_DNS_SET_SERVERS_FAILED'\x2C 'c-ares failed to set servers: "%s" [%s]'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CALLBACK_NOT_AVAILABLE'\x2C\x0d\n  'A callback was registered through ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()\x2C which is mutually ' +\x0d\n     'exclusive with using the `domain` module'\x2C\x0d\n  Error);\x0d\nE('ERR_DOMAIN_CANNOT_SET_UNCAUGHT_EXCEPTION_CAPTURE'\x2C\x0d\n  'The `domain` module is in use\x2C which is mutually exclusive with calling ' +\x0d\n     'process.setUncaughtExceptionCaptureCallback()'\x2C\x0d\n  Error);\x0d\nE('ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION'\x2C\x0d\n  'Deserialize main function is already configured.'\x2C Error);\x0d\nE('ERR_ENCODING_INVALID_ENCODED_DATA'\x2C function(encoding\x2C ret) {\x0d\n  this.errno = ret;\x0d\n  return `The encoded data was not valid for encoding ${encoding}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_ENCODING_NOT_SUPPORTED'\x2C 'The "%s" encoding is not supported'\x2C\x0d\n  RangeError);\x0d\nE('ERR_EVAL_ESM_CANNOT_PRINT'\x2C '--print cannot be used with ESM input'\x2C Error);\x0d\nE('ERR_EVENT_RECURSION'\x2C 'The event "%s" is already being dispatched'\x2C Error);\x0d\nE('ERR_FALSY_VALUE_REJECTION'\x2C function(reason) {\x0d\n  this.reason = reason;\x0d\n  return 'Promise was rejected with falsy value';\x0d\n}\x2C Error\x2C HideStackFramesError);\x0d\nE('ERR_FEATURE_UNAVAILABLE_ON_PLATFORM'\x2C\x0d\n  'The feature %s is unavailable on the current platform' +\x0d\n  '\x2C which is being used to run Node.js'\x2C\x0d\n  TypeError);\x0d\nE('ERR_FS_CP_DIR_TO_NON_DIR'\x2C\x0d\n  'Cannot overwrite directory with non-directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_EEXIST'\x2C 'Target already exists'\x2C SystemError);\x0d\nE('ERR_FS_CP_EINVAL'\x2C 'Invalid src or dest'\x2C SystemError);\x0d\nE('ERR_FS_CP_FIFO_PIPE'\x2C 'Cannot copy a FIFO pipe'\x2C SystemError);\x0d\nE('ERR_FS_CP_NON_DIR_TO_DIR'\x2C\x0d\n  'Cannot overwrite non-directory with directory'\x2C SystemError);\x0d\nE('ERR_FS_CP_SOCKET'\x2C 'Cannot copy a socket file'\x2C SystemError);\x0d\nE('ERR_FS_CP_SYMLINK_TO_SUBDIRECTORY'\x2C\x0d\n  'Cannot overwrite symlink in subdirectory of self'\x2C SystemError);\x0d\nE('ERR_FS_CP_UNKNOWN'\x2C 'Cannot copy an unknown file type'\x2C SystemError);\x0d\nE('ERR_FS_EISDIR'\x2C 'Path is a directory'\x2C SystemError\x2C HideStackFramesError);\x0d\nE('ERR_FS_FILE_TOO_LARGE'\x2C 'File size (%s) is greater than 2 GiB'\x2C RangeError);\x0d\nE('ERR_FS_INVALID_SYMLINK_TYPE'\x2C\x0d\n  'Symlink type must be one of "dir"\x2C "file"\x2C or "junction". Received "%s"'\x2C\x0d\n  Error); // Switch to TypeError. The current implementation does not seem right\x0d\nE('ERR_HTTP2_ALTSVC_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ALTSVC frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_ALTSVC_LENGTH'\x2C\x0d\n  'HTTP/2 ALTSVC frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_CONNECT_AUTHORITY'\x2C\x0d\n  ':authority header is required for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_PATH'\x2C\x0d\n  'The :path header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_CONNECT_SCHEME'\x2C\x0d\n  'The :scheme header is forbidden for CONNECT requests'\x2C Error);\x0d\nE('ERR_HTTP2_GOAWAY_SESSION'\x2C\x0d\n  'New streams cannot be created after receiving a GOAWAY'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_AFTER_RESPOND'\x2C\x0d\n  'Cannot specify additional headers after response initiated'\x2C Error);\x0d\nE('ERR_HTTP2_HEADERS_SENT'\x2C 'Response has already been initiated.'\x2C Error);\x0d\nE('ERR_HTTP2_HEADER_SINGLE_VALUE'\x2C\x0d\n  'Header field "%s" must only have a single value'\x2C TypeError);\x0d\nE('ERR_HTTP2_INFO_STATUS_NOT_ALLOWED'\x2C\x0d\n  'Informational status codes cannot be used'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_CONNECTION_HEADERS'\x2C\x0d\n  'HTTP/1 Connection specific headers are forbidden: "%s"'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_INFO_STATUS'\x2C\x0d\n  'Invalid informational status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_ORIGIN'\x2C\x0d\n  'HTTP/2 ORIGIN frames require a valid origin'\x2C TypeError);\x0d\nE('ERR_HTTP2_INVALID_PACKED_SETTINGS_LENGTH'\x2C\x0d\n  'Packed settings length must be a multiple of six'\x2C RangeError);\x0d\nE('ERR_HTTP2_INVALID_PSEUDOHEADER'\x2C\x0d\n  '"%s" is an invalid pseudoheader or is used incorrectly'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_SESSION'\x2C 'The session has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_INVALID_SETTING_VALUE'\x2C\x0d\n  // Using default arguments here is important so the arguments are not counted\x0d\n  // towards `Function#length`.\x0d\n  function(name\x2C actual\x2C min = undefined\x2C max = undefined) {\x0d\n    this.actual = actual;\x0d\n    if (min !== undefined) {\x0d\n      this.min = min;\x0d\n      this.max = max;\x0d\n    }\x0d\n    return `Invalid value for setting "${name}": ${actual}`;\x0d\n  }\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_INVALID_STREAM'\x2C 'The stream has been destroyed'\x2C Error);\x0d\nE('ERR_HTTP2_MAX_PENDING_SETTINGS_ACK'\x2C\x0d\n  'Maximum number of pending settings acknowledgements'\x2C Error);\x0d\nE('ERR_HTTP2_NESTED_PUSH'\x2C\x0d\n  'A push stream cannot initiate another push stream.'\x2C Error);\x0d\nE('ERR_HTTP2_NO_MEM'\x2C 'Out of memory'\x2C Error);\x0d\nE('ERR_HTTP2_NO_SOCKET_MANIPULATION'\x2C\x0d\n  'HTTP/2 sockets should not be directly manipulated (e.g. read and written)'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_ORIGIN_LENGTH'\x2C\x0d\n  'HTTP/2 ORIGIN frames are limited to 16382 bytes'\x2C TypeError);\x0d\nE('ERR_HTTP2_OUT_OF_STREAMS'\x2C\x0d\n  'No stream ID is available because maximum stream ID has been reached'\x2C\x0d\n  Error);\x0d\nE('ERR_HTTP2_PAYLOAD_FORBIDDEN'\x2C\x0d\n  'Responses with %s status must not have a payload'\x2C Error);\x0d\nE('ERR_HTTP2_PING_CANCEL'\x2C 'HTTP2 ping cancelled'\x2C Error);\x0d\nE('ERR_HTTP2_PING_LENGTH'\x2C 'HTTP2 ping payload must be 8 bytes'\x2C RangeError);\x0d\nE('ERR_HTTP2_PSEUDOHEADER_NOT_ALLOWED'\x2C\x0d\n  'Cannot set HTTP/2 pseudo-headers'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP2_PUSH_DISABLED'\x2C 'HTTP/2 client has disabled push streams'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE'\x2C 'Directories cannot be sent'\x2C Error);\x0d\nE('ERR_HTTP2_SEND_FILE_NOSEEK'\x2C\x0d\n  'Offset or length can only be specified for regular files'\x2C Error);\x0d\nE('ERR_HTTP2_SESSION_ERROR'\x2C 'Session closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_SETTINGS_CANCEL'\x2C 'HTTP2 session settings canceled'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_BOUND'\x2C\x0d\n  'The socket is already bound to an Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_SOCKET_UNBOUND'\x2C\x0d\n  'The socket has been disconnected from the Http2Session'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_101'\x2C\x0d\n  'HTTP status code 101 (Switching Protocols) is forbidden in HTTP/2'\x2C Error);\x0d\nE('ERR_HTTP2_STATUS_INVALID'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP2_STREAM_CANCEL'\x2C function(error) {\x0d\n  let msg = 'The pending stream has been canceled';\x0d\n  if (error) {\x0d\n    this.cause = error;\x0d\n    if (typeof error.message === 'string')\x0d\n      msg += ` (caused by: ${error.message})`;\x0d\n  }\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_ERROR'\x2C 'Stream closed with error code %s'\x2C Error);\x0d\nE('ERR_HTTP2_STREAM_SELF_DEPENDENCY'\x2C\x0d\n  'A stream cannot depend on itself'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_CUSTOM_SETTINGS'\x2C\x0d\n  'Number of custom settings exceeds MAX_ADDITIONAL_SETTINGS'\x2C Error);\x0d\nE('ERR_HTTP2_TOO_MANY_INVALID_FRAMES'\x2C 'Too many invalid HTTP/2 frames'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_ALREADY_SENT'\x2C\x0d\n  'Trailing headers have already been sent'\x2C Error);\x0d\nE('ERR_HTTP2_TRAILERS_NOT_READY'\x2C\x0d\n  'Trailing headers cannot be sent until after the wantTrailers event is ' +\x0d\n  'emitted'\x2C Error);\x0d\nE('ERR_HTTP2_UNSUPPORTED_PROTOCOL'\x2C 'protocol "%s" is unsupported.'\x2C Error);\x0d\nE('ERR_HTTP_BODY_NOT_ALLOWED'\x2C\x0d\n  'Adding content for this request method or response status is not allowed.'\x2C Error);\x0d\nE('ERR_HTTP_CONTENT_LENGTH_MISMATCH'\x2C\x0d\n  'Response body\\'s content-length of %s byte(s) does not match the content-length of %s byte(s) set in header'\x2C Error);\x0d\nE('ERR_HTTP_HEADERS_SENT'\x2C\x0d\n  'Cannot %s headers after they are sent to the client'\x2C Error);\x0d\nE('ERR_HTTP_INVALID_HEADER_VALUE'\x2C\x0d\n  'Invalid value "%s" for header "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_HTTP_INVALID_STATUS_CODE'\x2C 'Invalid status code: %s'\x2C RangeError);\x0d\nE('ERR_HTTP_REQUEST_TIMEOUT'\x2C 'Request timeout'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ASSIGNED'\x2C\x0d\n  'ServerResponse has an already assigned socket'\x2C Error);\x0d\nE('ERR_HTTP_SOCKET_ENCODING'\x2C\x0d\n  'Changing the socket encoding is not allowed per RFC7230 Section 3.'\x2C Error);\x0d\nE('ERR_HTTP_TRAILER_INVALID'\x2C\x0d\n  'Trailers are invalid with this transfer encoding'\x2C Error);\x0d\nE('ERR_ILLEGAL_CONSTRUCTOR'\x2C 'Illegal constructor'\x2C TypeError);\x0d\n// TODO(aduh95): change the error to mention import attributes instead of import assertions.\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_FAILED'\x2C\x0d\n  'Module "%s" is not of type "%s"'\x2C TypeError);\x0d\n// TODO(aduh95): change the error to mention import attributes instead of import assertions.\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_MISSING'\x2C\x0d\n  'Module "%s" needs an import attribute of type "%s"'\x2C TypeError);\x0d\n// TODO(aduh95): change the error to mention import attributes instead of import assertions.\x0d\nE('ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED'\x2C\x0d\n  'Import attribute type "%s" is unsupported'\x2C TypeError);\x0d\nE('ERR_IMPORT_ATTRIBUTE_UNSUPPORTED'\x2C\x0d\n  'Import attribute "%s" with value "%s" is not supported'\x2C TypeError);\x0d\nE('ERR_INCOMPATIBLE_OPTION_PAIR'\x2C\x0d\n  'Option "%s" cannot be used in combination with option "%s"'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INPUT_TYPE_NOT_ALLOWED'\x2C '--input-type can only be used with string ' +\x0d\n  'input via --eval\x2C --print\x2C or STDIN'\x2C Error);\x0d\nE('ERR_INSPECTOR_ALREADY_ACTIVATED'\x2C\x0d\n  'Inspector is already activated. Close it with inspector.close() ' +\x0d\n  'before activating it again.'\x2C\x0d\n  Error);\x0d\nE('ERR_INSPECTOR_ALREADY_CONNECTED'\x2C '%s is already connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_CLOSED'\x2C 'Session was closed'\x2C Error);\x0d\nE('ERR_INSPECTOR_COMMAND'\x2C 'Inspector error %d: %s'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_ACTIVE'\x2C 'Inspector is not active'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_AVAILABLE'\x2C 'Inspector is not available'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_CONNECTED'\x2C 'Session is not connected'\x2C Error);\x0d\nE('ERR_INSPECTOR_NOT_WORKER'\x2C 'Current thread is not a worker'\x2C Error);\x0d\nE('ERR_INTERNAL_ASSERTION'\x2C (message) => {\x0d\n  const suffix = 'This is caused by either a bug in Node.js ' +\x0d\n    'or incorrect usage of Node.js internals.\\n' +\x0d\n    'Please open an issue with this stack trace at ' +\x0d\n    'https://github.com/nodejs/node/issues\\n';\x0d\n  return message === undefined ? suffix : `${message}\\n${suffix}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_ADDRESS_FAMILY'\x2C function(addressType\x2C host\x2C port) {\x0d\n  this.host = host;\x0d\n  this.port = port;\x0d\n  return `Invalid address family: ${addressType} ${host}:${port}`;\x0d\n}\x2C RangeError);\x0d\nE('ERR_INVALID_ARG_TYPE'\x2C\x0d\n  (name\x2C expected\x2C actual) => {\x0d\n    assert(typeof name === 'string'\x2C "'name' must be a string");\x0d\n    if (!ArrayIsArray(expected)) {\x0d\n      expected = [expected];\x0d\n    }\x0d\n\x0d\n    let msg = 'The ';\x0d\n    if (StringPrototypeEndsWith(name\x2C ' argument')) {\x0d\n      // For cases like 'first argument'\x0d\n      msg += `${name} `;\x0d\n    } else {\x0d\n      const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n      msg += `"${name}" ${type} `;\x0d\n    }\x0d\n    msg += 'must be ';\x0d\n\x0d\n    const types = [];\x0d\n    const instances = [];\x0d\n    const other = [];\x0d\n\x0d\n    for (const value of expected) {\x0d\n      assert(typeof value === 'string'\x2C\x0d\n             'All expected entries have to be of type string');\x0d\n      if (ArrayPrototypeIncludes(kTypes\x2C value)) {\x0d\n        ArrayPrototypePush(types\x2C StringPrototypeToLowerCase(value));\x0d\n      } else if (RegExpPrototypeExec(classRegExp\x2C value) !== null) {\x0d\n        ArrayPrototypePush(instances\x2C value);\x0d\n      } else {\x0d\n        assert(value !== 'object'\x2C\x0d\n               'The value "object" should be written as "Object"');\x0d\n        ArrayPrototypePush(other\x2C value);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Special handle `object` in case other instances are allowed to outline\x0d\n    // the differences between each other.\x0d\n    if (instances.length > 0) {\x0d\n      const pos = ArrayPrototypeIndexOf(types\x2C 'object');\x0d\n      if (pos !== -1) {\x0d\n        ArrayPrototypeSplice(types\x2C pos\x2C 1);\x0d\n        ArrayPrototypePush(instances\x2C 'Object');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (types.length > 0) {\x0d\n      msg += `${types.length > 1 ? 'one of type' : 'of type'} ${formatList(types\x2C 'or')}`;\x0d\n      if (instances.length > 0 || other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (instances.length > 0) {\x0d\n      msg += `an instance of ${formatList(instances\x2C 'or')}`;\x0d\n      if (other.length > 0)\x0d\n        msg += ' or ';\x0d\n    }\x0d\n\x0d\n    if (other.length > 0) {\x0d\n      if (other.length > 1) {\x0d\n        msg += `one of ${formatList(other\x2C 'or')}`;\x0d\n      } else {\x0d\n        if (StringPrototypeToLowerCase(other[0]) !== other[0])\x0d\n          msg += 'an ';\x0d\n        msg += `${other[0]}`;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    msg += `. Received ${determineSpecificType(actual)}`;\x0d\n\x0d\n    return msg;\x0d\n  }\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_ARG_VALUE'\x2C (name\x2C value\x2C reason = 'is invalid') => {\x0d\n  let inspected = lazyInternalUtilInspect().inspect(value);\x0d\n  if (inspected.length > 128) {\x0d\n    inspected = `${StringPrototypeSlice(inspected\x2C 0\x2C 128)}...`;\x0d\n  }\x0d\n  const type = StringPrototypeIncludes(name\x2C '.') ? 'property' : 'argument';\x0d\n  return `The ${type} '${name}' ${reason}. Received ${inspected}`;\x0d\n}\x2C TypeError\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_ASYNC_ID'\x2C 'Invalid %s value: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_INVALID_CHAR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (name\x2C field = undefined) => {\x0d\n    let msg = `Invalid character in ${name}`;\x0d\n    if (field !== undefined) {\x0d\n      msg += ` ["${field}"]`;\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_CURSOR_POS'\x2C\x0d\n  'Cannot set cursor row without setting its column'\x2C TypeError);\x0d\nE('ERR_INVALID_FD'\x2C\x0d\n  '"fd" must be a positive integer: %s'\x2C RangeError);\x0d\nE('ERR_INVALID_FD_TYPE'\x2C 'Unsupported fd type: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_HOST'\x2C\x0d\n  'File URL host must be "localhost" or empty on %s'\x2C TypeError);\x0d\nE('ERR_INVALID_FILE_URL_PATH'\x2C 'File URL path %s'\x2C TypeError);\x0d\nE('ERR_INVALID_HANDLE_TYPE'\x2C 'This handle type cannot be sent'\x2C TypeError);\x0d\nE('ERR_INVALID_HTTP_TOKEN'\x2C '%s must be a valid HTTP token ["%s"]'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_INVALID_IP_ADDRESS'\x2C 'Invalid IP address: %s'\x2C TypeError);\x0d\nE('ERR_INVALID_MIME_SYNTAX'\x2C (production\x2C str\x2C invalidIndex) => {\x0d\n  const msg = invalidIndex !== -1 ? ` at ${invalidIndex}` : '';\x0d\n  return `The MIME syntax for a ${production} in "${str}" is invalid` + msg;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_MODULE_SPECIFIER'\x2C (request\x2C reason\x2C base = undefined) => {\x0d\n  return `Invalid module "${request}" ${reason}${base ?\x0d\n    ` imported from ${base}` : ''}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_PACKAGE_CONFIG'\x2C (path\x2C base\x2C message) => {\x0d\n  return `Invalid package config ${path}${base ? ` while importing ${base}` :\x0d\n    ''}${message ? `. ${message}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_INVALID_PACKAGE_TARGET'\x2C\x0d\n  (pkgPath\x2C key\x2C target\x2C isImport = false\x2C base = undefined) => {\x0d\n    const relError = typeof target === 'string' && !isImport &&\x0d\n      target.length && !StringPrototypeStartsWith(target\x2C './');\x0d\n    if (key === '.') {\x0d\n      assert(isImport === false);\x0d\n      return `Invalid "exports" main target ${JSONStringify(target)} defined ` +\x0d\n        `in the package config ${pkgPath}package.json${base ?\x0d\n          ` imported from ${base}` : ''}${relError ?\x0d\n          '; targets must start with "./"' : ''}`;\x0d\n    }\x0d\n    return `Invalid "${isImport ? 'imports' : 'exports'}" target ${\x0d\n      JSONStringify(target)} defined for '${key}' in the package config ${\x0d\n      pkgPath}package.json${base ? ` imported from ${base}` : ''}${relError ?\x0d\n      '; targets must start with "./"' : ''}`;\x0d\n  }\x2C Error);\x0d\nE('ERR_INVALID_PROTOCOL'\x2C\x0d\n  'Protocol "%s" not supported. Expected "%s"'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_REPL_EVAL_CONFIG'\x2C\x0d\n  'Cannot specify both "breakEvalOnSigint" and "eval" for REPL'\x2C TypeError);\x0d\nE('ERR_INVALID_REPL_INPUT'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected a valid ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_PROPERTY_VALUE'\x2C (input\x2C name\x2C prop\x2C value) => {\x0d\n  return `Expected ${input} to be returned for the "${prop}" from the` +\x0d\n         ` "${name}" hook but got ${determineSpecificType(value)}.`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_RETURN_VALUE'\x2C (input\x2C name\x2C value) => {\x0d\n  const type = determineSpecificType(value);\x0d\n\x0d\n  return `Expected ${input} to be returned from the "${name}"` +\x0d\n         ` function but got ${type}.`;\x0d\n}\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_STATE'\x2C 'Invalid state: %s'\x2C Error\x2C TypeError\x2C RangeError);\x0d\nE('ERR_INVALID_SYNC_FORK_INPUT'\x2C\x0d\n  'Asynchronous forks do not support ' +\x0d\n    'Buffer\x2C TypedArray\x2C DataView or string input: %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_INVALID_THIS'\x2C 'Value of "this" must be of type %s'\x2C TypeError);\x0d\nE('ERR_INVALID_TUPLE'\x2C '%s must be an iterable %s tuple'\x2C TypeError);\x0d\nE('ERR_INVALID_URI'\x2C 'URI malformed'\x2C URIError);\x0d\nE('ERR_INVALID_URL'\x2C function(input\x2C base = null) {\x0d\n  this.input = input;\x0d\n\x0d\n  if (base != null) {\x0d\n    this.base = base;\x0d\n  }\x0d\n\x0d\n  // Don't include URL in message.\x0d\n  // (See https://github.com/nodejs/node/pull/38614)\x0d\n  return 'Invalid URL';\x0d\n}\x2C TypeError);\x0d\nE('ERR_INVALID_URL_SCHEME'\x2C\x0d\n  (expected) => {\x0d\n    if (typeof expected === 'string')\x0d\n      expected = [expected];\x0d\n    assert(expected.length <= 2);\x0d\n    const res = expected.length === 2 ?\x0d\n      `one of scheme ${expected[0]} or ${expected[1]}` :\x0d\n      `of scheme ${expected[0]}`;\x0d\n    return `The URL must be ${res}`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_IPC_CHANNEL_CLOSED'\x2C 'Channel closed'\x2C Error);\x0d\nE('ERR_IPC_DISCONNECTED'\x2C 'IPC channel is already disconnected'\x2C Error);\x0d\nE('ERR_IPC_ONE_PIPE'\x2C 'Child process can have only one IPC pipe'\x2C Error);\x0d\nE('ERR_IPC_SYNC_FORK'\x2C 'IPC cannot be used with synchronous forks'\x2C Error);\x0d\nE(\x0d\n  'ERR_LOADER_CHAIN_INCOMPLETE'\x2C\x0d\n  '"%s" did not call the next hook in its chain and did not' +\x0d\n  ' explicitly signal a short circuit. If this is intentional\x2C include' +\x0d\n  ' `shortCircuit: true` in the hook\\'s return.'\x2C\x0d\n  Error\x2C\x0d\n);\x0d\nE('ERR_MANIFEST_ASSERT_INTEGRITY'\x2C\x0d\n  (moduleURL\x2C realIntegrities) => {\x0d\n    let msg = `The content of "${\x0d\n      moduleURL\x0d\n    }" does not match the expected integrity.`;\x0d\n    if (realIntegrities.size) {\x0d\n      const sri = ArrayPrototypeJoin(\x0d\n        ArrayFrom(realIntegrities.entries()\x2C\x0d\n                  ({ 0: alg\x2C 1: dgs }) => `${alg}-${dgs}`)\x2C\x0d\n        ' '\x2C\x0d\n      );\x0d\n      msg += ` Integrities found are: ${sri}`;\x0d\n    } else {\x0d\n      msg += ' The resource was not found in the policy.';\x0d\n    }\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_MANIFEST_DEPENDENCY_MISSING'\x2C\x0d\n  'Manifest resource %s does not list %s as a dependency specifier for ' +\x0d\n  'conditions: %s'\x2C\x0d\n  Error);\x0d\nE('ERR_MANIFEST_INTEGRITY_MISMATCH'\x2C\x0d\n  'Manifest resource %s has multiple entries but integrity lists do not match'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_MANIFEST_INVALID_RESOURCE_FIELD'\x2C\x0d\n  'Manifest resource %s has invalid property value for %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_INVALID_SPECIFIER'\x2C\x0d\n  'Manifest resource %s has invalid dependency mapping %s'\x2C\x0d\n  TypeError);\x0d\nE('ERR_MANIFEST_TDZ'\x2C 'Manifest initialization has not yet run'\x2C Error);\x0d\nE('ERR_MANIFEST_UNKNOWN_ONERROR'\x2C\x0d\n  'Manifest specified unknown error behavior "%s".'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_METHOD_NOT_IMPLEMENTED'\x2C 'The %s method is not implemented'\x2C Error);\x0d\nE('ERR_MISSING_ARGS'\x2C\x0d\n  (...args) => {\x0d\n    assert(args.length > 0\x2C 'At least one arg needs to be specified');\x0d\n    let msg = 'The ';\x0d\n    const len = args.length;\x0d\n    const wrap = (a) => `"${a}"`;\x0d\n    args = ArrayPrototypeMap(\x0d\n      args\x2C\x0d\n      (a) => (ArrayIsArray(a) ?\x0d\n        ArrayPrototypeJoin(ArrayPrototypeMap(a\x2C wrap)\x2C ' or ') :\x0d\n        wrap(a))\x2C\x0d\n    );\x0d\n    msg += `${formatList(args)} argument${len > 1 ? 's' : ''}`;\x0d\n    return `${msg} must be specified`;\x0d\n  }\x2C TypeError);\x0d\nE('ERR_MISSING_OPTION'\x2C '%s is required'\x2C TypeError);\x0d\nE('ERR_MODULE_NOT_FOUND'\x2C function(path\x2C base\x2C exactUrl) {\x0d\n  if (exactUrl) {\x0d\n    lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C `${exactUrl}`);\x0d\n  }\x0d\n  return `Cannot find ${\x0d\n    exactUrl ? 'module' : 'package'} '${path}' imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_MULTIPLE_CALLBACK'\x2C 'Callback called multiple times'\x2C Error);\x0d\nE('ERR_NAPI_CONS_FUNCTION'\x2C 'Constructor must be a function'\x2C TypeError);\x0d\nE('ERR_NAPI_INVALID_DATAVIEW_ARGS'\x2C\x0d\n  'byte_offset + byte_length should be less than or equal to the size in ' +\x0d\n    'bytes of the array passed in'\x2C\x0d\n  RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_ALIGNMENT'\x2C\x0d\n  'start offset of %s should be a multiple of %s'\x2C RangeError);\x0d\nE('ERR_NAPI_INVALID_TYPEDARRAY_LENGTH'\x2C\x0d\n  'Invalid typed array length'\x2C RangeError);\x0d\nE('ERR_NETWORK_IMPORT_BAD_RESPONSE'\x2C\x0d\n  "import '%s' received a bad response: %s"\x2C Error);\x0d\nE('ERR_NETWORK_IMPORT_DISALLOWED'\x2C\x0d\n  "import of '%s' by %s is not supported: %s"\x2C Error);\x0d\nE('ERR_NOT_BUILDING_SNAPSHOT'\x2C\x0d\n  'Operation cannot be invoked when not building startup snapshot'\x2C Error);\x0d\nE('ERR_NOT_IN_SINGLE_EXECUTABLE_APPLICATION'\x2C\x0d\n  'Operation cannot be invoked when not in a single-executable application'\x2C Error);\x0d\nE('ERR_NOT_SUPPORTED_IN_SNAPSHOT'\x2C '%s is not supported in startup snapshot'\x2C Error);\x0d\nE('ERR_NO_CRYPTO'\x2C\x0d\n  'Node.js is not compiled with OpenSSL crypto support'\x2C Error);\x0d\nE('ERR_NO_ICU'\x2C\x0d\n  '%s is not supported on Node.js compiled without ICU'\x2C TypeError);\x0d\nE('ERR_OPERATION_FAILED'\x2C 'Operation failed: %s'\x2C Error\x2C TypeError);\x0d\nE('ERR_OUT_OF_RANGE'\x2C\x0d\n  (str\x2C range\x2C input\x2C replaceDefaultBoolean = false) => {\x0d\n    assert(range\x2C 'Missing "range" argument');\x0d\n    let msg = replaceDefaultBoolean ? str :\x0d\n      `The value of "${str}" is out of range.`;\x0d\n    let received;\x0d\n    if (NumberIsInteger(input) && MathAbs(input) > 2 ** 32) {\x0d\n      received = addNumericalSeparator(String(input));\x0d\n    } else if (typeof input === 'bigint') {\x0d\n      received = String(input);\x0d\n      if (input > 2n ** 32n || input < -(2n ** 32n)) {\x0d\n        received = addNumericalSeparator(received);\x0d\n      }\x0d\n      received += 'n';\x0d\n    } else {\x0d\n      received = lazyInternalUtilInspect().inspect(input);\x0d\n    }\x0d\n    msg += ` It must be ${range}. Received ${received}`;\x0d\n    return msg;\x0d\n  }\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_PACKAGE_IMPORT_NOT_DEFINED'\x2C (specifier\x2C packagePath\x2C base) => {\x0d\n  return `Package import specifier "${specifier}" is not defined${packagePath ?\x0d\n    ` in package ${packagePath}package.json` : ''} imported from ${base}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PACKAGE_PATH_NOT_EXPORTED'\x2C (pkgPath\x2C subpath\x2C base = undefined) => {\x0d\n  if (subpath === '.')\x0d\n    return `No "exports" main defined in ${pkgPath}package.json${base ?\x0d\n      ` imported from ${base}` : ''}`;\x0d\n  return `Package subpath '${subpath}' is not defined by "exports" in ${\x0d\n    pkgPath}package.json${base ? ` imported from ${base}` : ''}`;\x0d\n}\x2C Error);\x0d\nE('ERR_PARSE_ARGS_INVALID_OPTION_VALUE'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_PARSE_ARGS_UNEXPECTED_POSITIONAL'\x2C "Unexpected argument '%s'. This " +\x0d\n  'command does not take positional arguments'\x2C TypeError);\x0d\nE('ERR_PARSE_ARGS_UNKNOWN_OPTION'\x2C (option\x2C allowPositionals) => {\x0d\n  const suggestDashDash = allowPositionals ? '. To specify a positional ' +\x0d\n    "argument starting with a '-'\x2C place it at the end of the command after " +\x0d\n    `'--'\x2C as in '-- ${JSONStringify(option)}` : '';\x0d\n  return `Unknown option '${option}'${suggestDashDash}`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_INVALID_TIMESTAMP'\x2C\x0d\n  '%d is not a valid timestamp'\x2C TypeError);\x0d\nE('ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS'\x2C '%s'\x2C TypeError);\x0d\nE('ERR_REQUIRE_ESM'\x2C\x0d\n  function(filename\x2C hasEsmSyntax\x2C parentPath = null\x2C packageJsonPath = null) {\x0d\n    hideInternalStackFrames(this);\x0d\n    let msg = `require() of ES Module ${filename}${parentPath ? ` from ${\x0d\n      parentPath}` : ''} not supported.`;\x0d\n    if (!packageJsonPath) {\x0d\n      if (StringPrototypeEndsWith(filename\x2C '.mjs'))\x0d\n        msg += `\\nInstead change the require of ${filename} to a dynamic ` +\x0d\n            'import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    const path = require('path');\x0d\n    const basename = parentPath && path.basename(filename) ===\x0d\n      path.basename(parentPath) ? filename : path.basename(filename);\x0d\n    if (hasEsmSyntax) {\x0d\n      msg += `\\nInstead change the require of ${basename} in ${parentPath} to` +\x0d\n        ' a dynamic import() which is available in all CommonJS modules.';\x0d\n      return msg;\x0d\n    }\x0d\n    msg += `\\n${basename} is treated as an ES module file as it is a .js ` +\x0d\n      'file whose nearest parent package.json contains "type": "module" ' +\x0d\n      'which declares all .js files in that package scope as ES modules.' +\x0d\n      `\\nInstead either rename ${basename} to end in .cjs\x2C change the requiring ` +\x0d\n      'code to use dynamic import() which is available in all CommonJS ' +\x0d\n      'modules\x2C or change "type": "module" to "type": "commonjs" in ' +\x0d\n      `${packageJsonPath} to treat all .js files as CommonJS (using .mjs for ` +\x0d\n      'all ES modules instead).\\n';\x0d\n    return msg;\x0d\n  }\x2C Error);\x0d\nE('ERR_SCRIPT_EXECUTION_INTERRUPTED'\x2C\x0d\n  'Script execution was interrupted by `SIGINT`'\x2C Error);\x0d\nE('ERR_SERVER_ALREADY_LISTEN'\x2C\x0d\n  'Listen method has been called more than once without closing.'\x2C Error);\x0d\nE('ERR_SERVER_NOT_RUNNING'\x2C 'Server is not running.'\x2C Error);\x0d\nE('ERR_SINGLE_EXECUTABLE_APPLICATION_ASSET_NOT_FOUND'\x2C\x0d\n  'Cannot find asset %s for the single executable application'\x2C Error);\x0d\nE('ERR_SOCKET_ALREADY_BOUND'\x2C 'Socket is already bound'\x2C Error);\x0d\nE('ERR_SOCKET_BAD_BUFFER_SIZE'\x2C\x0d\n  'Buffer size must be a positive integer'\x2C TypeError);\x0d\nE('ERR_SOCKET_BAD_PORT'\x2C (name\x2C port\x2C allowZero = true) => {\x0d\n  assert(typeof allowZero === 'boolean'\x2C\x0d\n         "The 'allowZero' argument must be of type boolean.");\x0d\n  const operator = allowZero ? '>=' : '>';\x0d\n  return `${name} should be ${operator} 0 and < 65536. Received ${determineSpecificType(port)}.`;\x0d\n}\x2C RangeError\x2C HideStackFramesError);\x0d\nE('ERR_SOCKET_BAD_TYPE'\x2C\x0d\n  'Bad socket type specified. Valid types are: udp4\x2C udp6'\x2C TypeError);\x0d\nE('ERR_SOCKET_BUFFER_SIZE'\x2C\x0d\n  'Could not get or set buffer size'\x2C\x0d\n  SystemError);\x0d\nE('ERR_SOCKET_CLOSED'\x2C 'Socket is closed'\x2C Error);\x0d\nE('ERR_SOCKET_CLOSED_BEFORE_CONNECTION'\x2C\x0d\n  'Socket closed before the connection was established'\x2C\x0d\n  Error);\x0d\nE('ERR_SOCKET_CONNECTION_TIMEOUT'\x2C\x0d\n  'Socket connection timeout'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_IS_CONNECTED'\x2C 'Already connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_CONNECTED'\x2C 'Not connected'\x2C Error);\x0d\nE('ERR_SOCKET_DGRAM_NOT_RUNNING'\x2C 'Not running'\x2C Error);\x0d\nE('ERR_SRI_PARSE'\x2C\x0d\n  'Subresource Integrity string %j had an unexpected %j at position %d'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_STREAM_ALREADY_FINISHED'\x2C\x0d\n  'Cannot call %s after a stream was finished'\x2C\x0d\n  Error);\x0d\nE('ERR_STREAM_CANNOT_PIPE'\x2C 'Cannot pipe\x2C not readable'\x2C Error);\x0d\nE('ERR_STREAM_DESTROYED'\x2C 'Cannot call %s after a stream was destroyed'\x2C Error);\x0d\nE('ERR_STREAM_NULL_VALUES'\x2C 'May not write null values to stream'\x2C TypeError);\x0d\nE('ERR_STREAM_PREMATURE_CLOSE'\x2C 'Premature close'\x2C Error);\x0d\nE('ERR_STREAM_PUSH_AFTER_EOF'\x2C 'stream.push() after EOF'\x2C Error);\x0d\nE('ERR_STREAM_UNSHIFT_AFTER_END_EVENT'\x2C\x0d\n  'stream.unshift() after end event'\x2C Error);\x0d\nE('ERR_STREAM_WRAP'\x2C 'Stream has StringDecoder set or is in objectMode'\x2C Error);\x0d\nE('ERR_STREAM_WRITE_AFTER_END'\x2C 'write after end'\x2C Error);\x0d\nE('ERR_SYNTHETIC'\x2C 'JavaScript Callstack'\x2C Error);\x0d\nE('ERR_SYSTEM_ERROR'\x2C 'A system error occurred'\x2C SystemError\x2C HideStackFramesError);\x0d\nE('ERR_TAP_LEXER_ERROR'\x2C function(errorMsg) {\x0d\n  hideInternalStackFrames(this);\x0d\n  return errorMsg;\x0d\n}\x2C Error);\x0d\nE('ERR_TAP_PARSER_ERROR'\x2C function(errorMsg\x2C details\x2C tokenCausedError\x2C source) {\x0d\n  hideInternalStackFrames(this);\x0d\n  this.cause = tokenCausedError;\x0d\n  const { column\x2C line\x2C start\x2C end } = tokenCausedError.location;\x0d\n  const errorDetails = `${details} at line ${line}\x2C column ${column} (start ${start}\x2C end ${end})`;\x0d\n  return errorMsg + errorDetails;\x0d\n}\x2C SyntaxError);\x0d\nE('ERR_TAP_VALIDATION_ERROR'\x2C function(errorMsg) {\x0d\n  hideInternalStackFrames(this);\x0d\n  return errorMsg;\x0d\n}\x2C Error);\x0d\nE('ERR_TEST_FAILURE'\x2C function(error\x2C failureType) {\x0d\n  hideInternalStackFrames(this);\x0d\n  assert(typeof failureType === 'string' || typeof failureType === 'symbol'\x2C\x0d\n         "The 'failureType' argument must be of type string or symbol.");\x0d\n\x0d\n  let msg = error?.message ?? error;\x0d\n\x0d\n  if (typeof msg !== 'string') {\x0d\n    msg = inspectWithNoCustomRetry(msg);\x0d\n  }\x0d\n\x0d\n  this.failureType = failureType;\x0d\n  this.cause = error;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_ALPN_CALLBACK_INVALID_RESULT'\x2C (value\x2C protocols) => {\x0d\n  return `ALPN callback returned a value (${\x0d\n    value\x0d\n  }) that did not match any of the client's offered protocols (${\x0d\n    protocols.join('\x2C ')\x0d\n  })`;\x0d\n}\x2C TypeError);\x0d\nE('ERR_TLS_ALPN_CALLBACK_WITH_PROTOCOLS'\x2C\x0d\n  'The ALPNCallback and ALPNProtocols TLS options are mutually exclusive'\x2C\x0d\n  TypeError);\x0d\nE('ERR_TLS_CERT_ALTNAME_FORMAT'\x2C 'Invalid subject alternative name string'\x2C\x0d\n  SyntaxError);\x0d\nE('ERR_TLS_CERT_ALTNAME_INVALID'\x2C function(reason\x2C host\x2C cert) {\x0d\n  this.reason = reason;\x0d\n  this.host = host;\x0d\n  this.cert = cert;\x0d\n  return `Hostname/IP does not match certificate's altnames: ${reason}`;\x0d\n}\x2C Error);\x0d\nE('ERR_TLS_DH_PARAM_SIZE'\x2C 'DH parameter size %s is less than 2048'\x2C Error);\x0d\nE('ERR_TLS_HANDSHAKE_TIMEOUT'\x2C 'TLS handshake timeout'\x2C Error);\x0d\nE('ERR_TLS_INVALID_CONTEXT'\x2C '%s must be a SecureContext'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_PROTOCOL_VERSION'\x2C\x0d\n  '%j is not a valid %s TLS protocol version'\x2C TypeError);\x0d\nE('ERR_TLS_INVALID_STATE'\x2C 'TLS socket connection must be securely established'\x2C\x0d\n  Error);\x0d\nE('ERR_TLS_PROTOCOL_VERSION_CONFLICT'\x2C\x0d\n  'TLS protocol version %j conflicts with secureProtocol %j'\x2C TypeError);\x0d\nE('ERR_TLS_RENEGOTIATION_DISABLED'\x2C\x0d\n  'TLS session renegotiation disabled for this socket'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_TLS_REQUIRED_SERVER_NAME'\x2C\x0d\n  '"servername" is required parameter for Server.addContext'\x2C Error);\x0d\nE('ERR_TLS_SESSION_ATTACK'\x2C 'TLS session renegotiation attack detected'\x2C Error);\x0d\nE('ERR_TLS_SNI_FROM_SERVER'\x2C\x0d\n  'Cannot issue SNI from a TLS server-side socket'\x2C Error);\x0d\nE('ERR_TRACE_EVENTS_CATEGORY_REQUIRED'\x2C\x0d\n  'At least one category is required'\x2C TypeError);\x0d\nE('ERR_TRACE_EVENTS_UNAVAILABLE'\x2C 'Trace events are unavailable'\x2C Error);\x0d\n\x0d\n// This should probably be a `RangeError`.\x0d\nE('ERR_TTY_INIT_FAILED'\x2C 'TTY initialization failed'\x2C SystemError);\x0d\nE('ERR_UNAVAILABLE_DURING_EXIT'\x2C 'Cannot call function in process exit ' +\x0d\n  'handler'\x2C Error);\x0d\nE('ERR_UNCAUGHT_EXCEPTION_CAPTURE_ALREADY_SET'\x2C\x0d\n  '`process.setupUncaughtExceptionCapture()` was called while a capture ' +\x0d\n    'callback was already active'\x2C\x0d\n  Error);\x0d\nE('ERR_UNESCAPED_CHARACTERS'\x2C '%s contains unescaped characters'\x2C TypeError);\x0d\nE('ERR_UNHANDLED_ERROR'\x2C\x0d\n  // Using a default argument here is important so the argument is not counted\x0d\n  // towards `Function#length`.\x0d\n  (err = undefined) => {\x0d\n    const msg = 'Unhandled error.';\x0d\n    if (err === undefined) return msg;\x0d\n    return `${msg} (${err})`;\x0d\n  }\x2C Error);\x0d\nE('ERR_UNKNOWN_BUILTIN_MODULE'\x2C 'No such built-in module: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_CREDENTIAL'\x2C '%s identifier does not exist: %s'\x2C Error);\x0d\nE('ERR_UNKNOWN_ENCODING'\x2C 'Unknown encoding: %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_FILE_EXTENSION'\x2C 'Unknown file extension "%s" for %s'\x2C TypeError);\x0d\nE('ERR_UNKNOWN_MODULE_FORMAT'\x2C 'Unknown module format: %s for URL %s'\x2C\x0d\n  RangeError);\x0d\nE('ERR_UNKNOWN_SIGNAL'\x2C 'Unknown signal: %s'\x2C TypeError\x2C HideStackFramesError);\x0d\nE('ERR_UNSUPPORTED_DIR_IMPORT'\x2C function(path\x2C base\x2C exactUrl) {\x0d\n  lazyInternalUtil().setOwnProperty(this\x2C 'url'\x2C exactUrl);\x0d\n  return `Directory import '${path}' is not supported ` +\x0d\n    `resolving ES modules imported from ${base}`;\x0d\n}\x2C Error);\x0d\nE('ERR_UNSUPPORTED_ESM_URL_SCHEME'\x2C (url\x2C supported) => {\x0d\n  let msg = `Only URLs with a scheme in: ${formatList(supported)} are supported by the default ESM loader`;\x0d\n  if (isWindows && url.protocol.length === 2) {\x0d\n    msg +=\x0d\n      '. On Windows\x2C absolute paths must be valid file:// URLs';\x0d\n  }\x0d\n  msg += `. Received protocol '${url.protocol}'`;\x0d\n  return msg;\x0d\n}\x2C Error);\x0d\nE('ERR_UNSUPPORTED_RESOLVE_REQUEST'\x2C\x0d\n  'Failed to resolve module specifier "%s" from "%s": Invalid relative URL or base scheme is not hierarchical.'\x2C\x0d\n  TypeError);\x0d\nE('ERR_USE_AFTER_CLOSE'\x2C '%s was closed'\x2C Error);\x0d\n\x0d\n// This should probably be a `TypeError`.\x0d\nE('ERR_VALID_PERFORMANCE_ENTRY_TYPE'\x2C\x0d\n  'At least one valid performance entry type is required'\x2C Error);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING'\x2C\x0d\n  'A dynamic import callback was not specified.'\x2C TypeError);\x0d\nE('ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG'\x2C\x0d\n  'A dynamic import callback was invoked without --experimental-vm-modules'\x2C\x0d\n  TypeError);\x0d\nE('ERR_VM_MODULE_ALREADY_LINKED'\x2C 'Module has already been linked'\x2C Error);\x0d\nE('ERR_VM_MODULE_CANNOT_CREATE_CACHED_DATA'\x2C\x0d\n  'Cached data cannot be created for a module which has been evaluated'\x2C Error);\x0d\nE('ERR_VM_MODULE_DIFFERENT_CONTEXT'\x2C\x0d\n  'Linked modules must use the same context'\x2C Error);\x0d\nE('ERR_VM_MODULE_LINK_FAILURE'\x2C function(message\x2C cause) {\x0d\n  this.cause = cause;\x0d\n  return message;\x0d\n}\x2C Error);\x0d\nE('ERR_VM_MODULE_NOT_MODULE'\x2C\x0d\n  'Provided module is not an instance of Module'\x2C Error);\x0d\nE('ERR_VM_MODULE_STATUS'\x2C 'Module status %s'\x2C Error);\x0d\nE('ERR_WASI_ALREADY_STARTED'\x2C 'WASI instance has already started'\x2C Error);\x0d\nE('ERR_WEBASSEMBLY_RESPONSE'\x2C 'WebAssembly response %s'\x2C TypeError);\x0d\nE('ERR_WORKER_INIT_FAILED'\x2C 'Worker initialization failure: %s'\x2C Error);\x0d\nE('ERR_WORKER_INVALID_EXEC_ARGV'\x2C (errors\x2C msg = 'invalid execArgv flags') =>\x0d\n  `Initiated Worker with ${msg}: ${ArrayPrototypeJoin(errors\x2C '\x2C ')}`\x2C\x0d\n  Error);\x0d\nE('ERR_WORKER_NOT_RUNNING'\x2C 'Worker instance not running'\x2C Error);\x0d\nE('ERR_WORKER_OUT_OF_MEMORY'\x2C\x0d\n  'Worker terminated due to reaching memory limit: %s'\x2C Error);\x0d\nE('ERR_WORKER_PATH'\x2C (filename) =>\x0d\n  'The worker script or module filename must be an absolute path or a ' +\x0d\n  'relative path starting with \\'./\\' or \\'../\\'.' +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'file://') ?\x0d\n    ' Wrap file:// URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  (StringPrototypeStartsWith(filename\x2C 'data:text/javascript') ?\x0d\n    ' Wrap data: URLs with `new URL`.' : ''\x0d\n  ) +\x0d\n  ` Received "${filename}"`\x2C\x0d\n  TypeError);\x0d\nE('ERR_WORKER_UNSERIALIZABLE_ERROR'\x2C\x0d\n  'Serializing an uncaught exception failed'\x2C Error);\x0d\nE('ERR_WORKER_UNSUPPORTED_OPERATION'\x2C\x0d\n  '%s is not supported in workers'\x2C TypeError);\x0d\nE('ERR_ZLIB_INITIALIZATION_FAILED'\x2C 'Initialization failed'\x2C Error);\x0d\n
code-source-info,0x1c66f8d7696,10,2920,2976,C0O2936C2O2962C9O2975,,
tick,0x7ff6cca9b84f,141641,0,0x0,3,0x7ff6cbdbb8d0,0x1c66f8d56a6,0x1c66f8d548b,0x1c66f8c2d22,0xea2f3f14e,0x2bcf6affd74
code-creation,JS,10,141796,0x1c66f8db85e,348,initializeDeprecations node:internal/process/pre_execution:472:32,0x3fcdefbf890,~
code-source-info,0x1c66f8db85e,67,15428,17408,C0O15458C6O15458C11O15444C16O15514C24O15514C29O15709C35O15709C40O15751C46O15751C51O15805C73O15797C101O15797C104O16141C112O16161C116O16204C127O16279C138O16371C149O16325C158O16189C167O16432C170O16159C174O15786C239O16716C245O16716C250O16695C255O16746C257O16775C268O16796C275O16942C279O16775C284O16979C288O17010C294O17046C304O17124C311O17028C316O17026C320O17213C326O17255C337O17237C342O17235C347O17407,,
code-creation,JS,10,141991,0x1c66f8dbbfe,72,initializeDns node:internal/dns/utils:204:23,0x220dba81fd0,~
script-source,70,node:internal/dns/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  NumberParseInt\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst errors = require('internal/errors');\x0d\nconst { isIP } = require('internal/net');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nlet binding;\x0d\nfunction lazyBinding() {\x0d\n  binding ??= internalBinding('cares_wrap');\x0d\n  return binding;\x0d\n}\x0d\nconst IANA_DNS_PORT = 53;\x0d\nconst IPv6RE = /^\\[([^[\\]]*)\\]/;\x0d\nconst addrSplitRE = /(^.+?)(?::(\\d+))?$/;\x0d\nconst {\x0d\n  ERR_DNS_SET_SERVERS_FAILED\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_INVALID_IP_ADDRESS\x2C\x0d\n} = errors.codes;\x0d\n\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    addDeserializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n\x0d\nfunction validateTimeout(options) {\x0d\n  const { timeout = -1 } = { ...options };\x0d\n  validateInt32(timeout\x2C 'options.timeout'\x2C -1);\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nfunction validateTries(options) {\x0d\n  const { tries = 4 } = { ...options };\x0d\n  validateInt32(tries\x2C 'options.tries'\x2C 1);\x0d\n  return tries;\x0d\n}\x0d\n\x0d\nconst kSerializeResolver = Symbol('dns:resolver:serialize');\x0d\nconst kDeserializeResolver = Symbol('dns:resolver:deserialize');\x0d\nconst kSnapshotStates = Symbol('dns:resolver:config');\x0d\nconst kInitializeHandle = Symbol('dns:resolver:initializeHandle');\x0d\nconst kSetServersInteral = Symbol('dns:resolver:setServers');\x0d\n\x0d\n// Resolver instances correspond 1:1 to c-ares channels.\x0d\n\x0d\nclass ResolverBase {\x0d\n  constructor(options = undefined) {\x0d\n    const timeout = validateTimeout(options);\x0d\n    const tries = validateTries(options);\x0d\n    // If we are building snapshot\x2C save the states of the resolver along\x0d\n    // the way.\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates] = { timeout\x2C tries };\x0d\n    }\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  [kInitializeHandle](timeout\x2C tries) {\x0d\n    const { ChannelWrap } = lazyBinding();\x0d\n    this._handle = new ChannelWrap(timeout\x2C tries);\x0d\n  }\x0d\n\x0d\n  cancel() {\x0d\n    this._handle.cancel();\x0d\n  }\x0d\n\x0d\n  getServers() {\x0d\n    return ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\x0d\n      if (!val[1] || val[1] === IANA_DNS_PORT)\x0d\n        return val[0];\x0d\n\x0d\n      const host = isIP(val[0]) === 6 ? `[${val[0]}]` : val[0];\x0d\n      return `${host}:${val[1]}`;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  setServers(servers) {\x0d\n    validateArray(servers\x2C 'servers');\x0d\n\x0d\n    // Cache the original servers because in the event of an error while\x0d\n    // setting the servers\x2C c-ares won't have any servers available for\x0d\n    // resolution.\x0d\n    const newSet = [];\x0d\n    ArrayPrototypeForEach(servers\x2C (serv\x2C index) => {\x0d\n      validateString(serv\x2C `servers[${index}]`);\x0d\n      let ipVersion = isIP(serv);\x0d\n\x0d\n      if (ipVersion !== 0)\x0d\n        return ArrayPrototypePush(newSet\x2C [ipVersion\x2C serv\x2C IANA_DNS_PORT]);\x0d\n\x0d\n      const match = RegExpPrototypeExec(IPv6RE\x2C serv);\x0d\n\x0d\n      // Check for an IPv6 in brackets.\x0d\n      if (match) {\x0d\n        ipVersion = isIP(match[1]);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          const port = NumberParseInt(\x0d\n            RegExpPrototypeSymbolReplace(addrSplitRE\x2C serv\x2C '$2')) || IANA_DNS_PORT;\x0d\n          return ArrayPrototypePush(newSet\x2C [ipVersion\x2C match[1]\x2C port]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // addr::port\x0d\n      const addrSplitMatch = RegExpPrototypeExec(addrSplitRE\x2C serv);\x0d\n\x0d\n      if (addrSplitMatch) {\x0d\n        const hostIP = addrSplitMatch[1];\x0d\n        const port = addrSplitMatch[2] || IANA_DNS_PORT;\x0d\n\x0d\n        ipVersion = isIP(hostIP);\x0d\n\x0d\n        if (ipVersion !== 0) {\x0d\n          return ArrayPrototypePush(\x0d\n            newSet\x2C [ipVersion\x2C hostIP\x2C NumberParseInt(port)]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      throw new ERR_INVALID_IP_ADDRESS(serv);\x0d\n    });\x0d\n\x0d\n    this[kSetServersInteral](newSet\x2C servers);\x0d\n  }\x0d\n\x0d\n  [kSetServersInteral](newSet\x2C servers) {\x0d\n    const orig = ArrayPrototypeMap(this._handle.getServers() || []\x2C (val) => {\x0d\n      val.unshift(isIP(val[0]));\x0d\n      return val;\x0d\n    });\x0d\n    const errorNumber = this._handle.setServers(newSet);\x0d\n\x0d\n    if (errorNumber !== 0) {\x0d\n      // Reset the servers to the old servers\x2C because ares probably unset them.\x0d\n      this._handle.setServers(orig);\x0d\n      const { strerror } = lazyBinding();\x0d\n      const err = strerror(errorNumber);\x0d\n      throw new ERR_DNS_SET_SERVERS_FAILED(err\x2C servers);\x0d\n    }\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].servers = newSet;\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  setLocalAddress(ipv4\x2C ipv6) {\x0d\n    validateString(ipv4\x2C 'ipv4');\x0d\n\x0d\n    if (ipv6 !== undefined) {\x0d\n      validateString(ipv6\x2C 'ipv6');\x0d\n    }\x0d\n\x0d\n    this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n\x0d\n    if (isBuildingSnapshot()) {\x0d\n      this[kSnapshotStates].localAddress = { ipv4\x2C ipv6 };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): consider exposing this if custom DNS resolvers\x0d\n  // end up being useful for snapshot users.\x0d\n  [kSerializeResolver]() {\x0d\n    this._handle = null;  // We'll restore it during deserialization.\x0d\n    addDeserializeCallback(function deserializeResolver(resolver) {\x0d\n      resolver[kDeserializeResolver]();\x0d\n    }\x2C this);\x0d\n  }\x0d\n\x0d\n  [kDeserializeResolver]() {\x0d\n    const { timeout\x2C tries\x2C localAddress\x2C servers } = this[kSnapshotStates];\x0d\n    this[kInitializeHandle](timeout\x2C tries);\x0d\n    if (localAddress) {\x0d\n      const { ipv4\x2C ipv6 } = localAddress;\x0d\n      this._handle.setLocalAddress(ipv4\x2C ipv6);\x0d\n    }\x0d\n    if (servers) {\x0d\n      this[kSetServersInteral](servers\x2C servers);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nlet defaultResolver;\x0d\nlet dnsOrder;\x0d\n\x0d\nfunction initializeDns() {\x0d\n  const orderFromCLI = getOptionValue('--dns-result-order');\x0d\n  if (!orderFromCLI) {\x0d\n    dnsOrder ??= 'verbatim';\x0d\n  } else {\x0d\n    // Allow the deserialized application to override order from CLI.\x0d\n    dnsOrder = orderFromCLI;\x0d\n  }\x0d\n\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  addSerializeCallback(() => {\x0d\n    defaultResolver?.[kSerializeResolver]();\x0d\n  });\x0d\n}\x0d\n\x0d\nconst resolverKeys = [\x0d\n  'getServers'\x2C\x0d\n  'resolve'\x2C\x0d\n  'resolve4'\x2C\x0d\n  'resolve6'\x2C\x0d\n  'resolveAny'\x2C\x0d\n  'resolveCaa'\x2C\x0d\n  'resolveCname'\x2C\x0d\n  'resolveMx'\x2C\x0d\n  'resolveNaptr'\x2C\x0d\n  'resolveNs'\x2C\x0d\n  'resolvePtr'\x2C\x0d\n  'resolveSoa'\x2C\x0d\n  'resolveSrv'\x2C\x0d\n  'resolveTxt'\x2C\x0d\n  'reverse'\x2C\x0d\n];\x0d\n\x0d\nfunction getDefaultResolver() {\x0d\n  // We do this here instead of pre-execution so that the default resolver is\x0d\n  // only ever created when the user loads any dns module.\x0d\n  if (defaultResolver === undefined) {\x0d\n    defaultResolver = new ResolverBase();\x0d\n  }\x0d\n  return defaultResolver;\x0d\n}\x0d\n\x0d\nfunction setDefaultResolver(resolver) {\x0d\n  defaultResolver = resolver;\x0d\n}\x0d\n\x0d\nfunction bindDefaultResolver(target\x2C source) {\x0d\n  const defaultResolver = getDefaultResolver();\x0d\n  ArrayPrototypeForEach(resolverKeys\x2C (key) => {\x0d\n    target[key] = FunctionPrototypeBind(source[key]\x2C defaultResolver);\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction validateHints(hints) {\x0d\n  const { AI_ADDRCONFIG\x2C AI_ALL\x2C AI_V4MAPPED } = lazyBinding();\x0d\n  if ((hints & ~(AI_ADDRCONFIG | AI_ALL | AI_V4MAPPED)) !== 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('hints'\x2C hints);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet invalidHostnameWarningEmitted = false;\x0d\nfunction emitInvalidHostnameWarning(hostname) {\x0d\n  if (!invalidHostnameWarningEmitted) {\x0d\n    process.emitWarning(\x0d\n      `The provided hostname "${hostname}" is not a valid ` +\x0d\n      'hostname\x2C and is supported in the dns module solely for compatibility.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0118'\x2C\x0d\n    );\x0d\n    invalidHostnameWarningEmitted = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDefaultVerbatim() {\x0d\n  return dnsOrder !== 'ipv4first';\x0d\n}\x0d\n\x0d\nfunction setDefaultResultOrder(value) {\x0d\n  validateOneOf(value\x2C 'dnsOrder'\x2C ['verbatim'\x2C 'ipv4first']);\x0d\n  dnsOrder = value;\x0d\n}\x0d\n\x0d\nfunction getDefaultResultOrder() {\x0d\n  return dnsOrder;\x0d\n}\x0d\n\x0d\nfunction createResolverClass(resolver) {\x0d\n  const resolveMap = { __proto__: null };\x0d\n\x0d\n  class Resolver extends ResolverBase {}\x0d\n\x0d\n  Resolver.prototype.resolveAny = resolveMap.ANY = resolver('queryAny');\x0d\n  Resolver.prototype.resolve4 = resolveMap.A = resolver('queryA');\x0d\n  Resolver.prototype.resolve6 = resolveMap.AAAA = resolver('queryAaaa');\x0d\n  Resolver.prototype.resolveCaa = resolveMap.CAA = resolver('queryCaa');\x0d\n  Resolver.prototype.resolveCname = resolveMap.CNAME = resolver('queryCname');\x0d\n  Resolver.prototype.resolveMx = resolveMap.MX = resolver('queryMx');\x0d\n  Resolver.prototype.resolveNs = resolveMap.NS = resolver('queryNs');\x0d\n  Resolver.prototype.resolveTxt = resolveMap.TXT = resolver('queryTxt');\x0d\n  Resolver.prototype.resolveSrv = resolveMap.SRV = resolver('querySrv');\x0d\n  Resolver.prototype.resolvePtr = resolveMap.PTR = resolver('queryPtr');\x0d\n  Resolver.prototype.resolveNaptr = resolveMap.NAPTR = resolver('queryNaptr');\x0d\n  Resolver.prototype.resolveSoa = resolveMap.SOA = resolver('querySoa');\x0d\n  Resolver.prototype.reverse = resolver('getHostByAddr');\x0d\n\x0d\n  return {\x0d\n    resolveMap\x2C\x0d\n    Resolver\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// ERROR CODES\x0d\nconst errorCodes = {\x0d\n  NODATA: 'ENODATA'\x2C\x0d\n  FORMERR: 'EFORMERR'\x2C\x0d\n  SERVFAIL: 'ESERVFAIL'\x2C\x0d\n  NOTFOUND: 'ENOTFOUND'\x2C\x0d\n  NOTIMP: 'ENOTIMP'\x2C\x0d\n  REFUSED: 'EREFUSED'\x2C\x0d\n  BADQUERY: 'EBADQUERY'\x2C\x0d\n  BADNAME: 'EBADNAME'\x2C\x0d\n  BADFAMILY: 'EBADFAMILY'\x2C\x0d\n  BADRESP: 'EBADRESP'\x2C\x0d\n  CONNREFUSED: 'ECONNREFUSED'\x2C\x0d\n  TIMEOUT: 'ETIMEOUT'\x2C\x0d\n  EOF: 'EOF'\x2C\x0d\n  FILE: 'EFILE'\x2C\x0d\n  NOMEM: 'ENOMEM'\x2C\x0d\n  DESTRUCTION: 'EDESTRUCTION'\x2C\x0d\n  BADSTR: 'EBADSTR'\x2C\x0d\n  BADFLAGS: 'EBADFLAGS'\x2C\x0d\n  NONAME: 'ENONAME'\x2C\x0d\n  BADHINTS: 'EBADHINTS'\x2C\x0d\n  NOTINITIALIZED: 'ENOTINITIALIZED'\x2C\x0d\n  LOADIPHLPAPI: 'ELOADIPHLPAPI'\x2C\x0d\n  ADDRGETNETWORKPARAMS: 'EADDRGETNETWORKPARAMS'\x2C\x0d\n  CANCELLED: 'ECANCELLED'\x2C\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  bindDefaultResolver\x2C\x0d\n  getDefaultResolver\x2C\x0d\n  setDefaultResolver\x2C\x0d\n  validateHints\x2C\x0d\n  validateTimeout\x2C\x0d\n  validateTries\x2C\x0d\n  emitInvalidHostnameWarning\x2C\x0d\n  getDefaultVerbatim\x2C\x0d\n  getDefaultResultOrder\x2C\x0d\n  setDefaultResultOrder\x2C\x0d\n  errorCodes\x2C\x0d\n  createResolverClass\x2C\x0d\n  initializeDns\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8dbbfe,70,5693,6073,C0O5722C8O5722C13O5763C15O5789C28O5798C36O5902C38O5911C44O5937C49O5942C54O5971C55O5978C56O5989C66O5989C71O6072,,
code-creation,JS,10,142613,0x1c66f8dc9e6,90,setupSymbolDisposePolyfill node:internal/process/pre_execution:165:36,0x3fcdefbf2c8,~
code-source-info,0x1c66f8dc9e6,67,4871,5594,C0O5044C5O5062C13O5091C20O5112C33O5225C39O5091C44O5343C49O5361C57O5395C64O5416C77O5534C83O5395C89O5593,,
code-creation,JS,10,142710,0x1c66f8dcbae,21,assert node:internal/assert:11:16,0x3fcdef81a90,~
script-source,11,node:internal/assert,'use strict';\x0d\n\x0d\nlet error;\x0d\nfunction lazyError() {\x0d\n  if (!error) {\x0d\n    error = require('internal/errors').codes.ERR_INTERNAL_ASSERTION;\x0d\n  }\x0d\n  return error;\x0d\n}\x0d\n\x0d\nfunction assert(value\x2C message) {\x0d\n  if (!value) {\x0d\n    const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n    throw new ERR_INTERNAL_ASSERTION(message);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction fail(message) {\x0d\n  const ERR_INTERNAL_ASSERTION = lazyError();\x0d\n  throw new ERR_INTERNAL_ASSERTION(message);\x0d\n}\x0d\n\x0d\nassert.fail = fail;\x0d\n\x0d\nmodule.exports = assert;\x0d\n
code-source-info,0x1c66f8dcbae,11,182,322,C0O204C4O254C7O254C11O272C13O278C18O272C20O321,,
code-creation,JS,10,142897,0x1c66f8dd11e,432,readPolicyFromDisk node:internal/process/pre_execution:627:28,0x3fcdefbfa08,~
code-source-info,0x1c66f8dd11e
code-creation,JS,10,143065,0x1c66f8dd52e,49,setupStacktracePrinterOnSigint node:internal/process/pre_execution:386:40,0x3fcdefbf610,~
code-source-info,0x1c66f8dd52e,67,12615,12809,C0O12623C8O12628C14O12669C15O12676C16O12712C22O12712C27O12693C32O12764C38O12798C43O12798C48O12808,,
code-creation,JS,10,143128,0x1c66f8dd6ce,35,initializeReportSignalHandlers node:internal/process/pre_execution:416:40,0x3fcdefbf728,~
code-source-info,0x1c66f8dd6ce,67,13416,13570,C0O13424C8O13428C14O13502C20O13502C25O13481C30O13543C34O13569,,
code-creation,JS,10,143206,0x1c66f8dd9ce,155,initializeHeapSnapshotSignalHandlers node:internal/process/pre_execution:423:46,0x3fcdefbf778,~
code-source-info,0x1c66f8dd9ce,67,13619,14331,C0O13619C20O13642C30O13642C34O13642C36O13708C46O13708C50O13708C52O13749C56O13767C57O13774C58O13780C66O13780C71O13810C79O13811C84O13872C92O13872C97O13850C103O14053C108O14061C119O14061C125O14193C132O14197C137O14226C149O14226C154O14330,,
code-creation,JS,10,143304,0x1c66f8ddd16,138,setupChildProcessIpcChannel node:internal/process/pre_execution:533:37,0x3fcdefbf8e0,~
code-source-info,0x1c66f8ddd16,67,17448,17994,C0O17456C3O17468C8O17472C14O17511C20O17511C25O17557C33O17580C38O17584C46O17557C52O17611C53O17621C57O17611C61O17705C64O17720C73O17781C76O17789C81O17793C90O17841C93O17856C102O17900C108O17900C113O17924C118O17925C124O17965C127O17980C132O17965C137O17993,,
code-creation,JS,10,143400,0x1c66f8ddf36,63,initializeClusterIPC node:internal/process/pre_execution:552:30,0x3fcdefbf930,~
code-source-info,0x1c66f8ddf36,67,18027,18275,C0O18035C3O18047C10O18051C18O18066C23O18070C29O18109C35O18109C40O18142C45O18142C49O18233C52O18248C62O18274,,
code-creation,JS,10,143487,0x1c66f8de076,54,runDeserializeCallbacks node:internal/v8/startup_snapshot:39:33,0x3fcdefb1c70,~
script-source,54,node:internal/v8/startup_snapshot,'use strict';\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_NOT_BUILDING_SNAPSHOT\x2C\x0d\n    ERR_NOT_SUPPORTED_IN_SNAPSHOT\x2C\x0d\n    ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  setSerializeCallback\x2C\x0d\n  setDeserializeCallback\x2C\x0d\n  setDeserializeMainFunction: _setDeserializeMainFunction\x2C\x0d\n  isBuildingSnapshotBuffer\x2C\x0d\n} = internalBinding('mksnapshot');\x0d\n\x0d\nfunction isBuildingSnapshot() {\x0d\n  return isBuildingSnapshotBuffer[0];\x0d\n}\x0d\n\x0d\nfunction throwIfNotBuildingSnapshot() {\x0d\n  if (!isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_BUILDING_SNAPSHOT();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction throwIfBuildingSnapshot(reason) {\x0d\n  if (isBuildingSnapshot()) {\x0d\n    throw new ERR_NOT_SUPPORTED_IN_SNAPSHOT(reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst deserializeCallbacks = [];\x0d\nlet deserializeCallbackIsSet = false;\x0d\nfunction runDeserializeCallbacks() {\x0d\n  while (deserializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = deserializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addDeserializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (!deserializeCallbackIsSet) {\x0d\n    // TODO(joyeecheung): when the main function handling is done in JS\x2C\x0d\n    // the deserialize callbacks can always be invoked. For now only\x0d\n    // store it in C++ when it's actually used to avoid unnecessary\x0d\n    // C++ -> JS costs.\x0d\n    setDeserializeCallback(runDeserializeCallbacks);\x0d\n    deserializeCallbackIsSet = true;\x0d\n  }\x0d\n  deserializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nconst serializeCallbacks = [];\x0d\nfunction runSerializeCallbacks() {\x0d\n  while (serializeCallbacks.length > 0) {\x0d\n    const { 0: callback\x2C 1: data } = serializeCallbacks.shift();\x0d\n    callback(data);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addSerializeCallback(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  serializeCallbacks.push([callback\x2C data]);\x0d\n}\x0d\n\x0d\nfunction initializeCallbacks() {\x0d\n  // Only run the serialize callbacks in snapshot building mode\x2C otherwise\x0d\n  // they throw.\x0d\n  if (isBuildingSnapshot()) {\x0d\n    setSerializeCallback(runSerializeCallbacks);\x0d\n  }\x0d\n}\x0d\n\x0d\nlet deserializeMainIsSet = false;\x0d\nfunction setDeserializeMainFunction(callback\x2C data) {\x0d\n  throwIfNotBuildingSnapshot();\x0d\n  // TODO(joyeecheung): In lib/internal/bootstrap/node.js\x2C create a default\x0d\n  // main function to run the lib/internal/main scripts and make sure that\x0d\n  // the main function set in the snapshot building process takes precedence.\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  if (deserializeMainIsSet) {\x0d\n    throw new ERR_DUPLICATE_STARTUP_SNAPSHOT_MAIN_FUNCTION();\x0d\n  }\x0d\n  deserializeMainIsSet = true;\x0d\n\x0d\n  _setDeserializeMainFunction(function deserializeMain() {\x0d\n    const {\x0d\n      prepareMainThreadExecution\x2C\x0d\n      markBootstrapComplete\x2C\x0d\n    } = require('internal/process/pre_execution');\x0d\n\x0d\n    // This should be in sync with run_main_module.js until we make that\x0d\n    // a built-in main function.\x0d\n    // TODO(joyeecheung): make a copy of argv[0] and insert it as argv[1].\x0d\n    prepareMainThreadExecution(false);\x0d\n    markBootstrapComplete();\x0d\n    callback(data);\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  initializeCallbacks\x2C\x0d\n  runDeserializeCallbacks\x2C\x0d\n  throwIfBuildingSnapshot\x2C\x0d\n  // Exposed to require('v8').startupSnapshot\x0d\n  namespace: {\x0d\n    addDeserializeCallback\x2C\x0d\n    addSerializeCallback\x2C\x0d\n    setDeserializeMainFunction\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8de076,54,901,1047,C0O944C5O937C11O944C16O989C21O1010C26O1010C33O967C40O980C44O1024C48O909C53O1046,,
code-creation,JS,10,143762,0x1c66f8de5b6,90,setupUserModules node:internal/process/pre_execution:190:26,0x3fcdefbf318,~
code-source-info,0x1c66f8de5b6,67,5623,6284,C10O5657C13O5657C16O5683C19O5683C23O5808C29O5808C34O5740C39O5773C44O5848C49O5856C54O5848C58O5890C63O5898C68O5890C72O6145C76O6177C79O6177C82O6252C85O6252C89O6283,,
code-creation,JS,10,143832,0x1c66f8de71e,21,initializeCJSLoader node:internal/process/pre_execution:677:29,0x3fcdefbfa58,~
code-source-info,0x1c66f8de71e,67,22289,22385,C0O22323C6O22323C11O22305C16O22366C20O22384,,
code-creation,JS,10,143983,0x1c66f8de87e,90,initializeCJS node:internal/modules/cjs/loader:382:23,0x3fcdefbc4a8,~
script-source,63,node:internal/modules/cjs/loader,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  ArrayPrototypeUnshiftApply\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototype\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Proxy\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectSet\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Map used to store CJS parsing data.\x0d\nconst cjsParseCache = new SafeWeakMap();\x0d\n/**\x0d\n * Map of already-loaded CJS modules to use.\x0d\n */\x0d\nconst cjsExportsCache = new SafeWeakMap();\x0d\n\x0d\n// Set first due to cycle with ESM loader functions.\x0d\nmodule.exports = {\x0d\n  cjsExportsCache\x2C\x0d\n  cjsParseCache\x2C\x0d\n  initializeCJS\x2C\x0d\n  Module\x2C\x0d\n  wrapSafe\x2C\x0d\n};\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst {\x0d\n  maybeCacheSourceMap\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst { pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\x0d\nconst {\x0d\n  pendingDeprecate\x2C\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  setOwnProperty\x2C\x0d\n  getLazy\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  internalCompileFunction\x2C\x0d\n  makeContextifyScript\x2C\x0d\n  runScriptInThisContext\x2C\x0d\n} = require('internal/vm');\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\nconst fs = require('fs');\x0d\nconst path = require('path');\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  setHasStartedUserCJSExecution\x2C\x0d\n  stripBOM\x2C\x0d\n  toRealPath\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { getOptionValue\x2C getEmbedderOptions } = require('internal/options');\x0d\nconst policy = getLazy(\x0d\n  () => (getOptionValue('--experimental-policy') ? require('internal/process/policy') : null)\x2C\x0d\n);\x0d\nconst shouldReportRequiredModules = getLazy(() => process.env.WATCH_REPORT_DEPENDENCIES);\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\nconst {\x0d\n  vm_dynamic_import_default_internal\x2C\x0d\n} = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n    ERR_REQUIRE_ESM\x2C\x0d\n    ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  }\x2C\x0d\n  setArrowMessage\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_COLON\x2C\x0d\n  CHAR_DOT\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\n\x0d\nconst {\x0d\n  isProxy\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst relativeResolveCache = { __proto__: null };\x0d\n\x0d\nlet requireDepth = 0;\x0d\nlet isPreloading = false;\x0d\nlet statCache = null;\x0d\n\x0d\n/**\x0d\n * Our internal implementation of `require`.\x0d\n * @param {Module} module Parent module of what is being required\x0d\n * @param {string} id Specifier of the child module being imported\x0d\n */\x0d\nfunction internalRequire(module\x2C id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C module\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get a path's properties\x2C using an in-memory cache to minimize lookups.\x0d\n * @param {string} filename Absolute path to the file\x0d\n */\x0d\nfunction stat(filename) {\x0d\n  filename = path.toNamespacedPath(filename);\x0d\n  if (statCache !== null) {\x0d\n    const result = statCache.get(filename);\x0d\n    if (result !== undefined) { return result; }\x0d\n  }\x0d\n  const result = internalModuleStat(filename);\x0d\n  if (statCache !== null && result >= 0) {\x0d\n    // Only set cache when `internalModuleStat(filename)` succeeds.\x0d\n    statCache.set(filename\x2C result);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nlet _stat = stat;\x0d\nObjectDefineProperty(Module\x2C '_stat'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _stat; }\x2C\x0d\n  set(stat) {\x0d\n    emitExperimentalWarning('Module._stat');\x0d\n    _stat = stat;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Update the parent's children array with the child module.\x0d\n * @param {Module} parent Module requiring the children\x0d\n * @param {Module} child Module being required\x0d\n * @param {boolean} scan Add the child to the parent's children if not already present\x0d\n */\x0d\nfunction updateChildren(parent\x2C child\x2C scan) {\x0d\n  const children = parent?.children;\x0d\n  if (children && !(scan && ArrayPrototypeIncludes(children\x2C child))) {\x0d\n    ArrayPrototypePush(children\x2C child);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tell the watch mode that a module was required.\x0d\n * @param {string} filename Absolute path of the module\x0d\n */\x0d\nfunction reportModuleToWatchMode(filename) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': [filename] });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tell the watch mode that a module was not found.\x0d\n * @param {string} basePath The absolute path that errored\x0d\n * @param {string[]} extensions The extensions that were tried\x0d\n */\x0d\nfunction reportModuleNotFoundToWatchMode(basePath\x2C extensions) {\x0d\n  if (shouldReportRequiredModules() && process.send) {\x0d\n    process.send({ 'watch:require': ArrayPrototypeMap(extensions\x2C (ext) => path.resolve(`${basePath}${ext}`)) });\x0d\n  }\x0d\n}\x0d\n\x0d\n/** @type {Map<Module\x2C Module>} */\x0d\nconst moduleParentCache = new SafeWeakMap();\x0d\n/**\x0d\n * Create a new module instance.\x0d\n * @param {string} id\x0d\n * @param {Module} parent\x0d\n */\x0d\nfunction Module(id = ''\x2C parent) {\x0d\n  this.id = id;\x0d\n  this.path = path.dirname(id);\x0d\n  setOwnProperty(this\x2C 'exports'\x2C {});\x0d\n  moduleParentCache.set(this\x2C parent);\x0d\n  updateChildren(parent\x2C this\x2C false);\x0d\n  this.filename = null;\x0d\n  this.loaded = false;\x0d\n  this.children = [];\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(id);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    // TODO(rafaelgss): remove the necessity of this branch\x0d\n    setOwnProperty(this\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n    // eslint-disable-next-line no-proto\x0d\n    setOwnProperty(this.__proto__\x2C 'require'\x2C makeRequireFunction(this\x2C redirects));\x0d\n  }\x0d\n  this[require_private_symbol] = internalRequire;\x0d\n}\x0d\n\x0d\n/** @type {Record<string\x2C Module>} */\x0d\nModule._cache = { __proto__: null };\x0d\n/** @type {Record<string\x2C string>} */\x0d\nModule._pathCache = { __proto__: null };\x0d\n/** @type {Record<string\x2C (module: Module\x2C filename: string) => void>} */\x0d\nModule._extensions = { __proto__: null };\x0d\n/** @type {string[]} */\x0d\nlet modulePaths = [];\x0d\n/** @type {string[]} */\x0d\nModule.globalPaths = [];\x0d\n\x0d\nlet patched = false;\x0d\n\x0d\n/**\x0d\n * Add the CommonJS wrapper around a module's source code.\x0d\n * @param {string} script Module source code\x0d\n */\x0d\nlet wrap = function(script) { // eslint-disable-line func-style\x0d\n  return Module.wrapper[0] + script + Module.wrapper[1];\x0d\n};\x0d\n\x0d\nconst wrapper = [\x0d\n  '(function (exports\x2C require\x2C module\x2C __filename\x2C __dirname) { '\x2C\x0d\n  '\\n});'\x2C\x0d\n];\x0d\n\x0d\nlet wrapperProxy = new Proxy(wrapper\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  set(target\x2C property\x2C value\x2C receiver) {\x0d\n    patched = true;\x0d\n    return ReflectSet(target\x2C property\x2C value\x2C receiver);\x0d\n  }\x2C\x0d\n\x0d\n  defineProperty(target\x2C property\x2C descriptor) {\x0d\n    patched = true;\x0d\n    return ObjectDefineProperty(target\x2C property\x2C descriptor);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrap'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrap;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrap = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module\x2C 'wrapper'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return wrapperProxy;\x0d\n  }\x2C\x0d\n\x0d\n  set(value) {\x0d\n    patched = true;\x0d\n    wrapperProxy = value;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst isPreloadingDesc = { get() { return isPreloading; } };\x0d\nObjectDefineProperty(Module.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\nObjectDefineProperty(BuiltinModule.prototype\x2C 'isPreloading'\x2C isPreloadingDesc);\x0d\n\x0d\n/**\x0d\n * Get the parent of the current module from our cache.\x0d\n */\x0d\nfunction getModuleParent() {\x0d\n  return moduleParentCache.get(this);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Set the parent of the current module in our cache.\x0d\n * @param {Module} value\x0d\n */\x0d\nfunction setModuleParent(value) {\x0d\n  moduleParentCache.set(this\x2C value);\x0d\n}\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: pendingDeprecate(\x0d\n    getModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x2C\x0d\n  )\x2C\x0d\n  set: pendingDeprecate(\x0d\n    setModuleParent\x2C\x0d\n    'module.parent is deprecated due to accuracy issues. Please use ' +\x0d\n      'require.main to find program entry point instead.'\x2C\x0d\n    'DEP0144'\x2C\x0d\n  )\x2C\x0d\n});\x0d\nModule._debug = pendingDeprecate(debug\x2C 'Module._debug is deprecated.'\x2C 'DEP0077');\x0d\nModule.isBuiltin = BuiltinModule.isBuiltin;\x0d\n\x0d\n/**\x0d\n * Prepare to run CommonJS code.\x0d\n * This function is called during pre-execution\x2C before any user code is run.\x0d\n */\x0d\nfunction initializeCJS() {\x0d\n  // This need to be done at runtime in case --expose-internals is set.\x0d\n  const builtinModules = BuiltinModule.getCanBeRequiredByUsersWithoutSchemeList();\x0d\n  Module.builtinModules = ObjectFreeze(builtinModules);\x0d\n\x0d\n  initializeCjsConditions();\x0d\n\x0d\n  if (!getEmbedderOptions().noGlobalSearchPaths) {\x0d\n    Module._initPaths();\x0d\n  }\x0d\n\x0d\n  // TODO(joyeecheung): deprecate this in favor of a proper hook?\x0d\n  Module.runMain =\x0d\n    require('internal/modules/run_main').executeUserEntryPoint;\x0d\n}\x0d\n\x0d\n// Given a module name\x2C and a list of paths to test\x2C returns the first\x0d\n// matching file in the following precedence.\x0d\n//\x0d\n// require("a.<ext>")\x0d\n//   -> a.<ext>\x0d\n//\x0d\n// require("a")\x0d\n//   -> a\x0d\n//   -> a.<ext>\x0d\n//   -> a/index.<ext>\x0d\n\x0d\nlet _readPackage = packageJsonReader.readPackage;\x0d\nObjectDefineProperty(Module\x2C '_readPackage'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return _readPackage; }\x2C\x0d\n  set(readPackage) {\x0d\n    emitExperimentalWarning('Module._readPackage');\x0d\n    _readPackage = readPackage;\x0d\n    return true;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Try to load a specifier as a package.\x0d\n * @param {string} requestPath The path to what we are trying to load\x0d\n * @param {string[]} exts File extensions to try appending in order to resolve the file\x0d\n * @param {boolean} isMain Whether the file is the main entry point of the app\x0d\n * @param {string} originalPath The specifier passed to `require`\x0d\n */\x0d\nfunction tryPackage(requestPath\x2C exts\x2C isMain\x2C originalPath) {\x0d\n  const pkg = _readPackage(requestPath).main;\x0d\n\x0d\n  if (!pkg) {\x0d\n    return tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n  }\x0d\n\x0d\n  const filename = path.resolve(requestPath\x2C pkg);\x0d\n  let actual = tryFile(filename\x2C isMain) ||\x0d\n    tryExtensions(filename\x2C exts\x2C isMain) ||\x0d\n    tryExtensions(path.resolve(filename\x2C 'index')\x2C exts\x2C isMain);\x0d\n  if (actual === false) {\x0d\n    actual = tryExtensions(path.resolve(requestPath\x2C 'index')\x2C exts\x2C isMain);\x0d\n    if (!actual) {\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const err = new Error(\x0d\n        `Cannot find module '${filename}'. ` +\x0d\n        'Please verify that the package.json has a valid "main" entry'\x2C\x0d\n      );\x0d\n      err.code = 'MODULE_NOT_FOUND';\x0d\n      err.path = path.resolve(requestPath\x2C 'package.json');\x0d\n      err.requestPath = originalPath;\x0d\n      // TODO(BridgeAR): Add the requireStack as well.\x0d\n      throw err;\x0d\n    } else {\x0d\n      const jsonPath = path.resolve(requestPath\x2C 'package.json');\x0d\n      process.emitWarning(\x0d\n        `Invalid 'main' field in '${jsonPath}' of '${pkg}'. ` +\x0d\n          'Please either fix that or report it to the module author'\x2C\x0d\n        'DeprecationWarning'\x2C\x0d\n        'DEP0128'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  return actual;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Check if the file exists and is not a directory if using `--preserve-symlinks` and `isMain` is false or\x0d\n * `--preserve-symlinks-main` and `isMain` is true \x2C keep symlinks intact\x2C otherwise resolve to the absolute realpath.\x0d\n * @param {string} requestPath The path to the file to load.\x0d\n * @param {boolean} isMain Whether the file is the main module.\x0d\n */\x0d\nfunction tryFile(requestPath\x2C isMain) {\x0d\n  const rc = _stat(requestPath);\x0d\n  if (rc !== 0) { return; }\x0d\n  if (getOptionValue(isMain ? '--preserve-symlinks-main' : '--preserve-symlinks')) {\x0d\n    return path.resolve(requestPath);\x0d\n  }\x0d\n  return toRealPath(requestPath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Given a path\x2C check if the file exists with any of the set extensions.\x0d\n * @param {string} basePath The path and filename without extension\x0d\n * @param {string[]} exts The extensions to try\x0d\n * @param {boolean} isMain Whether the module is the main module\x0d\n */\x0d\nfunction tryExtensions(basePath\x2C exts\x2C isMain) {\x0d\n  for (let i = 0; i < exts.length; i++) {\x0d\n    const filename = tryFile(basePath + exts[i]\x2C isMain);\x0d\n\x0d\n    if (filename) {\x0d\n      return filename;\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Find the longest (possibly multi-dot) extension registered in `Module._extensions`.\x0d\n * @param {string} filename The filename to find the longest registered extension for.\x0d\n */\x0d\nfunction findLongestRegisteredExtension(filename) {\x0d\n  const name = path.basename(filename);\x0d\n  let currentExtension;\x0d\n  let index;\x0d\n  let startIndex = 0;\x0d\n  while ((index = StringPrototypeIndexOf(name\x2C '.'\x2C startIndex)) !== -1) {\x0d\n    startIndex = index + 1;\x0d\n    if (index === 0) { continue; } // Skip dotfiles like .gitignore\x0d\n    currentExtension = StringPrototypeSlice(name\x2C index);\x0d\n    if (Module._extensions[currentExtension]) { return currentExtension; }\x0d\n  }\x0d\n  return '.js';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tries to get the absolute file path of the parent module.\x0d\n * @param {Module} parent The parent module object.\x0d\n */\x0d\nfunction trySelfParentPath(parent) {\x0d\n  if (!parent) { return false; }\x0d\n\x0d\n  if (parent.filename) {\x0d\n    return parent.filename;\x0d\n  } else if (parent.id === '<repl>' || parent.id === 'internal/preload') {\x0d\n    try {\x0d\n      return process.cwd() + path.sep;\x0d\n    } catch {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Attempt to resolve a module request using the parent module package metadata.\x0d\n * @param {string} parentPath The path of the parent module\x0d\n * @param {string} request The module request to resolve\x0d\n */\x0d\nfunction trySelf(parentPath\x2C request) {\x0d\n  if (!parentPath) { return false; }\x0d\n\x0d\n  const { data: pkg\x2C path: pkgPath } = packageJsonReader.readPackageScope(parentPath);\x0d\n  if (!pkg || pkg.exports == null || pkg.name === undefined) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  let expansion;\x0d\n  if (request === pkg.name) {\x0d\n    expansion = '.';\x0d\n  } else if (StringPrototypeStartsWith(request\x2C `${pkg.name}/`)) {\x0d\n    expansion = '.' + StringPrototypeSlice(request\x2C pkg.name.length);\x0d\n  } else {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n    return finalizeEsmResolution(packageExportsResolve(\x0d\n      pathToFileURL(pkgPath + '/package.json')\x2C expansion\x2C pkg\x2C\x0d\n      pathToFileURL(parentPath)\x2C getCjsConditions())\x2C parentPath\x2C pkgPath);\x0d\n  } catch (e) {\x0d\n    if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n      throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n    }\x0d\n    throw e;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * This only applies to requests of a specific form:\x0d\n * 1. `name/.*`\x0d\n * 2. `@scope/name/.*`\x0d\n */\x0d\nconst EXPORTS_PATTERN = /^((?:@[^/\\\\%]+\\/)?[^./\\\\%][^/\\\\%]*)(\\/.*)?$/;\x0d\n\x0d\n/**\x0d\n * Resolves the exports for a given module path and request.\x0d\n * @param {string} nmPath The path to the module.\x0d\n * @param {string} request The request for the module.\x0d\n */\x0d\nfunction resolveExports(nmPath\x2C request) {\x0d\n  // The implementation's behavior is meant to mirror resolution in ESM.\x0d\n  const { 1: name\x2C 2: expansion = '' } =\x0d\n    RegExpPrototypeExec(EXPORTS_PATTERN\x2C request) || kEmptyObject;\x0d\n  if (!name) { return; }\x0d\n  const pkgPath = path.resolve(nmPath\x2C name);\x0d\n  const pkg = _readPackage(pkgPath);\x0d\n  if (pkg.exists && pkg.exports != null) {\x0d\n    try {\x0d\n      const { packageExportsResolve } = require('internal/modules/esm/resolve');\x0d\n      return finalizeEsmResolution(packageExportsResolve(\x0d\n        pathToFileURL(pkgPath + '/package.json')\x2C '.' + expansion\x2C pkg\x2C null\x2C\x0d\n        getCjsConditions())\x2C null\x2C pkgPath);\x0d\n    } catch (e) {\x0d\n      if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n        throw createEsmNotFoundErr(request\x2C pkgPath + '/package.json');\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the absolute path to a module.\x0d\n * @param {string} request Relative or absolute file path\x0d\n * @param {Array<string>} paths Folders to search as file paths\x0d\n * @param {boolean} isMain Whether the request is the main app entry point\x0d\n * @returns {string | false}\x0d\n */\x0d\nModule._findPath = function(request\x2C paths\x2C isMain) {\x0d\n  const absoluteRequest = path.isAbsolute(request);\x0d\n  if (absoluteRequest) {\x0d\n    paths = [''];\x0d\n  } else if (!paths || paths.length === 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  const cacheKey = request + '\\x00' + ArrayPrototypeJoin(paths\x2C '\\x00');\x0d\n  const entry = Module._pathCache[cacheKey];\x0d\n  if (entry) {\x0d\n    return entry;\x0d\n  }\x0d\n\x0d\n  let exts;\x0d\n  const trailingSlash = request.length > 0 &&\x0d\n    (StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_FORWARD_SLASH || (\x0d\n      StringPrototypeCharCodeAt(request\x2C request.length - 1) === CHAR_DOT &&\x0d\n      (\x0d\n        request.length === 1 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_FORWARD_SLASH ||\x0d\n        (StringPrototypeCharCodeAt(request\x2C request.length - 2) === CHAR_DOT && (\x0d\n          request.length === 2 ||\x0d\n          StringPrototypeCharCodeAt(request\x2C request.length - 3) === CHAR_FORWARD_SLASH\x0d\n        ))\x0d\n      )\x0d\n    ));\x0d\n\x0d\n  const isRelative = StringPrototypeCharCodeAt(request\x2C 0) === CHAR_DOT &&\x0d\n    (\x0d\n      request.length === 1 ||\x0d\n      StringPrototypeCharCodeAt(request\x2C 1) === CHAR_FORWARD_SLASH ||\x0d\n      (isWindows && StringPrototypeCharCodeAt(request\x2C 1) === CHAR_BACKWARD_SLASH) ||\x0d\n      (StringPrototypeCharCodeAt(request\x2C 1) === CHAR_DOT && ((\x0d\n        request.length === 2 ||\x0d\n        StringPrototypeCharCodeAt(request\x2C 2) === CHAR_FORWARD_SLASH) ||\x0d\n        (isWindows && StringPrototypeCharCodeAt(request\x2C 2) === CHAR_BACKWARD_SLASH)))\x0d\n    );\x0d\n  let insidePath = true;\x0d\n  if (isRelative) {\x0d\n    const normalizedRequest = path.normalize(request);\x0d\n    if (StringPrototypeStartsWith(normalizedRequest\x2C '..')) {\x0d\n      insidePath = false;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For each path\x0d\n  for (let i = 0; i < paths.length; i++) {\x0d\n    // Don't search further if path doesn't exist\x0d\n    // or doesn't have permission to it\x0d\n    const curPath = paths[i];\x0d\n    if (insidePath && curPath &&\x0d\n      ((permission.isEnabled() && !permission.has('fs.read'\x2C curPath)) || _stat(curPath) < 1)\x0d\n    ) {\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    if (!absoluteRequest) {\x0d\n      const exportsResolved = resolveExports(curPath\x2C request);\x0d\n      if (exportsResolved) {\x0d\n        return exportsResolved;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const basePath = path.resolve(curPath\x2C request);\x0d\n    let filename;\x0d\n\x0d\n    const rc = _stat(basePath);\x0d\n    if (!trailingSlash) {\x0d\n      if (rc === 0) {  // File.\x0d\n        if (!isMain) {\x0d\n          if (getOptionValue('--preserve-symlinks')) {\x0d\n            filename = path.resolve(basePath);\x0d\n          } else {\x0d\n            filename = toRealPath(basePath);\x0d\n          }\x0d\n        } else if (getOptionValue('--preserve-symlinks-main')) {\x0d\n          // For the main module\x2C we use the --preserve-symlinks-main flag instead\x0d\n          // mainly for backward compatibility\x2C as the preserveSymlinks flag\x0d\n          // historically has not applied to the main module.  Most likely this\x0d\n          // was intended to keep .bin/ binaries working\x2C as following those\x0d\n          // symlinks is usually required for the imports in the corresponding\x0d\n          // files to resolve; that said\x2C in some use cases following symlinks\x0d\n          // causes bigger problems which is why the --preserve-symlinks-main option\x0d\n          // is needed.\x0d\n          filename = path.resolve(basePath);\x0d\n        } else {\x0d\n          filename = toRealPath(basePath);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (!filename) {\x0d\n        // Try it with each of the extensions\x0d\n        if (exts === undefined) {\x0d\n          exts = ObjectKeys(Module._extensions);\x0d\n        }\x0d\n        filename = tryExtensions(basePath\x2C exts\x2C isMain);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (!filename && rc === 1) {  // Directory.\x0d\n      // try it with each of the extensions at "index"\x0d\n      if (exts === undefined) {\x0d\n        exts = ObjectKeys(Module._extensions);\x0d\n      }\x0d\n      filename = tryPackage(basePath\x2C exts\x2C isMain\x2C request);\x0d\n    }\x0d\n\x0d\n    if (filename) {\x0d\n      Module._pathCache[cacheKey] = filename;\x0d\n      return filename;\x0d\n    }\x0d\n\x0d\n    const extensions = [''];\x0d\n    if (exts !== undefined) {\x0d\n      ArrayPrototypePushApply(extensions\x2C exts);\x0d\n    }\x0d\n    reportModuleNotFoundToWatchMode(basePath\x2C extensions);\x0d\n  }\x0d\n\x0d\n  return false;\x0d\n};\x0d\n\x0d\n/** `node_modules` character codes reversed */\x0d\nconst nmChars = [ 115\x2C 101\x2C 108\x2C 117\x2C 100\x2C 111\x2C 109\x2C 95\x2C 101\x2C 100\x2C 111\x2C 110 ];\x0d\nconst nmLen = nmChars.length;\x0d\nif (isWindows) {\x0d\n  /**\x0d\n   * Get the paths to the `node_modules` folder for a given path.\x0d\n   * @param {string} from `__dirname` of the module\x0d\n   */\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n\x0d\n    // return root node_modules when path is 'D:\\\\'.\x0d\n    // path.resolve will make sure from.length >=3 in Windows.\x0d\n    if (StringPrototypeCharCodeAt(from\x2C from.length - 1) ===\x0d\n          CHAR_BACKWARD_SLASH &&\x0d\n        StringPrototypeCharCodeAt(from\x2C from.length - 2) === CHAR_COLON) {\x0d\n      return [from + 'node_modules'];\x0d\n    }\x0d\n\x0d\n    /** @type {string[]} */\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      // The path segment separator check ('\\' and '/') was used to get\x0d\n      // node_modules path for every path segment.\x0d\n      // Use colon as an extra condition since we can get node_modules\x0d\n      // path for drive root like 'C:\\node_modules' and don't need to\x0d\n      // parse drive name.\x0d\n      if (code === CHAR_BACKWARD_SLASH ||\x0d\n          code === CHAR_FORWARD_SLASH ||\x0d\n          code === CHAR_COLON) {\x0d\n        if (p !== nmLen) {\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '\\\\node_modules'\x2C\x0d\n          );\x0d\n        }\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n} else { // posix\x0d\n  /**\x0d\n   * Get the paths to the `node_modules` folder for a given path.\x0d\n   * @param {string} from `__dirname` of the module\x0d\n   */\x0d\n  Module._nodeModulePaths = function(from) {\x0d\n    // Guarantee that 'from' is absolute.\x0d\n    from = path.resolve(from);\x0d\n    // Return early not only to avoid unnecessary work\x2C but to *avoid* returning\x0d\n    // an array of two items for a root: [ '//node_modules'\x2C '/node_modules' ]\x0d\n    if (from === '/') {\x0d\n      return ['/node_modules'];\x0d\n    }\x0d\n\x0d\n    // note: this approach *only* works when the path is guaranteed\x0d\n    // to be absolute.  Doing a fully-edge-case-correct path.split\x0d\n    // that works on both Windows and Posix is non-trivial.\x0d\n    /** @type {string[]} */\x0d\n    const paths = [];\x0d\n    for (let i = from.length - 1\x2C p = 0\x2C last = from.length; i >= 0; --i) {\x0d\n      const code = StringPrototypeCharCodeAt(from\x2C i);\x0d\n      if (code === CHAR_FORWARD_SLASH) {\x0d\n        if (p !== nmLen) {\x0d\n          ArrayPrototypePush(\x0d\n            paths\x2C\x0d\n            StringPrototypeSlice(from\x2C 0\x2C last) + '/node_modules'\x2C\x0d\n          );\x0d\n        }\x0d\n        last = i;\x0d\n        p = 0;\x0d\n      } else if (p !== -1) {\x0d\n        if (nmChars[p] === code) {\x0d\n          ++p;\x0d\n        } else {\x0d\n          p = -1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Append /node_modules to handle root paths.\x0d\n    ArrayPrototypePush(paths\x2C '/node_modules');\x0d\n\x0d\n    return paths;\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the paths for module resolution.\x0d\n * @param {string} request\x0d\n * @param {Module} parent\x0d\n */\x0d\nModule._resolveLookupPaths = function(request\x2C parent) {\x0d\n  if (BuiltinModule.normalizeRequirableId(request)) {\x0d\n    debug('looking for %j in []'\x2C request);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // Check for node modules paths.\x0d\n  if (StringPrototypeCharAt(request\x2C 0) !== '.' ||\x0d\n      (request.length > 1 &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '.' &&\x0d\n      StringPrototypeCharAt(request\x2C 1) !== '/' &&\x0d\n      (!isWindows || StringPrototypeCharAt(request\x2C 1) !== '\\\\'))) {\x0d\n\x0d\n    /** @type {string[]} */\x0d\n    let paths;\x0d\n    if (parent?.paths?.length) {\x0d\n      paths = ArrayPrototypeSlice(modulePaths);\x0d\n      ArrayPrototypeUnshiftApply(paths\x2C parent.paths);\x0d\n    } else {\x0d\n      paths = modulePaths;\x0d\n    }\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C paths);\x0d\n    return paths.length > 0 ? paths : null;\x0d\n  }\x0d\n\x0d\n  // In REPL\x2C parent.filename is null.\x0d\n  if (!parent || !parent.id || !parent.filename) {\x0d\n    // Make require('./path/to/foo') work - normally the path is taken\x0d\n    // from realpath(__filename) but in REPL there is no filename\x0d\n    const mainPaths = ['.'];\x0d\n\x0d\n    debug('looking for %j in %j'\x2C request\x2C mainPaths);\x0d\n    return mainPaths;\x0d\n  }\x0d\n\x0d\n  debug('RELATIVE: requested: %s from parent.id %s'\x2C request\x2C parent.id);\x0d\n\x0d\n  const parentDir = [path.dirname(parent.filename)];\x0d\n  debug('looking for %j'\x2C parentDir);\x0d\n  return parentDir;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Emits a warning when a non-existent property of module exports is accessed inside a circular dependency.\x0d\n * @param {string} prop The name of the non-existent property.\x0d\n */\x0d\nfunction emitCircularRequireWarning(prop) {\x0d\n  process.emitWarning(\x0d\n    `Accessing non-existent property '${String(prop)}' of module exports ` +\x0d\n    'inside circular dependency'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n// A Proxy that can be used as the prototype of a module.exports object and\x0d\n// warns when non-existent properties are accessed.\x0d\nconst CircularRequirePrototypeWarningProxy = new Proxy({}\x2C {\x0d\n  __proto__: null\x2C\x0d\n\x0d\n  get(target\x2C prop) {\x0d\n    // Allow __esModule access in any case because it is used in the output\x0d\n    // of transpiled code to determine whether something comes from an\x0d\n    // ES module\x2C and is not used as a regular key of `module.exports`.\x0d\n    if (prop in target || prop === '__esModule') { return target[prop]; }\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n\x0d\n  getOwnPropertyDescriptor(target\x2C prop) {\x0d\n    if (ObjectPrototypeHasOwnProperty(target\x2C prop) || prop === '__esModule') {\x0d\n      return ObjectGetOwnPropertyDescriptor(target\x2C prop);\x0d\n    }\x0d\n    emitCircularRequireWarning(prop);\x0d\n    return undefined;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Returns the exports object for a module that has a circular `require`.\x0d\n * If the exports object is a plain object\x2C it is wrapped in a proxy that warns\x0d\n * about circular dependencies.\x0d\n * @param {Module} module The module instance\x0d\n */\x0d\nfunction getExportsForCircularRequire(module) {\x0d\n  if (module.exports &&\x0d\n      !isProxy(module.exports) &&\x0d\n      ObjectGetPrototypeOf(module.exports) === ObjectPrototype &&\x0d\n      // Exclude transpiled ES6 modules / TypeScript code because those may\x0d\n      // employ unusual patterns for accessing 'module.exports'. That should\x0d\n      // be okay because ES6 modules have a different approach to circular\x0d\n      // dependencies anyway.\x0d\n      !module.exports.__esModule) {\x0d\n    // This is later unset once the module is done loading.\x0d\n    ObjectSetPrototypeOf(\x0d\n      module.exports\x2C CircularRequirePrototypeWarningProxy);\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Load a module from cache if it exists\x2C otherwise create a new module instance.\x0d\n * 1. If a module already exists in the cache: return its exports object.\x0d\n * 2. If the module is native: call\x0d\n *    `BuiltinModule.prototype.compileForPublicLoader()` and return the exports.\x0d\n * 3. Otherwise\x2C create a new module for the file and save it to the cache.\x0d\n *    Then have it load the file contents before returning its exports object.\x0d\n * @param {string} request Specifier of module to load via `require`\x0d\n * @param {string} parent Absolute path of the module importing the child\x0d\n * @param {boolean} isMain Whether the module is the main entry point\x0d\n */\x0d\nModule._load = function(request\x2C parent\x2C isMain) {\x0d\n  let relResolveCacheIdentifier;\x0d\n  if (parent) {\x0d\n    debug('Module._load REQUEST %s parent: %s'\x2C request\x2C parent.id);\x0d\n    // Fast path for (lazy loaded) modules in the same directory. The indirect\x0d\n    // caching is required to allow cache invalidation without changing the old\x0d\n    // cache key names.\x0d\n    relResolveCacheIdentifier = `${parent.path}\\x00${request}`;\x0d\n    const filename = relativeResolveCache[relResolveCacheIdentifier];\x0d\n    reportModuleToWatchMode(filename);\x0d\n    if (filename !== undefined) {\x0d\n      const cachedModule = Module._cache[filename];\x0d\n      if (cachedModule !== undefined) {\x0d\n        updateChildren(parent\x2C cachedModule\x2C true);\x0d\n        if (!cachedModule.loaded) {\x0d\n          return getExportsForCircularRequire(cachedModule);\x0d\n        }\x0d\n        return cachedModule.exports;\x0d\n      }\x0d\n      delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (StringPrototypeStartsWith(request\x2C 'node:')) {\x0d\n    // Slice 'node:' prefix\x0d\n    const id = StringPrototypeSlice(request\x2C 5);\x0d\n\x0d\n    if (!BuiltinModule.canBeRequiredByUsers(id)) {\x0d\n      throw new ERR_UNKNOWN_BUILTIN_MODULE(request);\x0d\n    }\x0d\n\x0d\n    const module = loadBuiltinModule(id\x2C request);\x0d\n    return module.exports;\x0d\n  }\x0d\n\x0d\n  const filename = Module._resolveFilename(request\x2C parent\x2C isMain);\x0d\n  const cachedModule = Module._cache[filename];\x0d\n  if (cachedModule !== undefined) {\x0d\n    updateChildren(parent\x2C cachedModule\x2C true);\x0d\n    if (!cachedModule.loaded) {\x0d\n      const parseCachedModule = cjsParseCache.get(cachedModule);\x0d\n      if (!parseCachedModule || parseCachedModule.loaded) {\x0d\n        return getExportsForCircularRequire(cachedModule);\x0d\n      }\x0d\n      parseCachedModule.loaded = true;\x0d\n    } else {\x0d\n      return cachedModule.exports;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (BuiltinModule.canBeRequiredWithoutScheme(filename)) {\x0d\n    const mod = loadBuiltinModule(filename\x2C request);\x0d\n    return mod.exports;\x0d\n  }\x0d\n\x0d\n  // Don't call updateChildren()\x2C Module constructor already does.\x0d\n  const module = cachedModule || new Module(filename\x2C parent);\x0d\n\x0d\n  if (isMain) {\x0d\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\x0d\n    setOwnProperty(module.require\x2C 'main'\x2C process.mainModule);\x0d\n    module.id = '.';\x0d\n  }\x0d\n\x0d\n  reportModuleToWatchMode(filename);\x0d\n\x0d\n  Module._cache[filename] = module;\x0d\n  if (parent !== undefined) {\x0d\n    relativeResolveCache[relResolveCacheIdentifier] = filename;\x0d\n  }\x0d\n\x0d\n  let threw = true;\x0d\n  try {\x0d\n    module.load(filename);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw) {\x0d\n      delete Module._cache[filename];\x0d\n      if (parent !== undefined) {\x0d\n        delete relativeResolveCache[relResolveCacheIdentifier];\x0d\n        const children = parent?.children;\x0d\n        if (ArrayIsArray(children)) {\x0d\n          const index = ArrayPrototypeIndexOf(children\x2C module);\x0d\n          if (index !== -1) {\x0d\n            ArrayPrototypeSplice(children\x2C index\x2C 1);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (module.exports &&\x0d\n               !isProxy(module.exports) &&\x0d\n               ObjectGetPrototypeOf(module.exports) ===\x0d\n                 CircularRequirePrototypeWarningProxy) {\x0d\n      ObjectSetPrototypeOf(module.exports\x2C ObjectPrototype);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return module.exports;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Given a `require` string and its context\x2C get its absolute file path.\x0d\n * @param {string} request The specifier to resolve\x0d\n * @param {Module} parent The module containing the `require` call\x0d\n * @param {boolean} isMain Whether the module is the main entry point\x0d\n * @param {ResolveFilenameOptions} options Options object\x0d\n * @typedef {object} ResolveFilenameOptions\x0d\n * @property {string[]} paths Paths to search for modules in\x0d\n */\x0d\nModule._resolveFilename = function(request\x2C parent\x2C isMain\x2C options) {\x0d\n  if (BuiltinModule.normalizeRequirableId(request)) {\x0d\n    return request;\x0d\n  }\x0d\n\x0d\n  let paths;\x0d\n\x0d\n  if (typeof options === 'object' && options !== null) {\x0d\n    if (ArrayIsArray(options.paths)) {\x0d\n      const isRelative = StringPrototypeStartsWith(request\x2C './') ||\x0d\n          StringPrototypeStartsWith(request\x2C '../') ||\x0d\n          ((isWindows && StringPrototypeStartsWith(request\x2C '.\\\\')) ||\x0d\n          StringPrototypeStartsWith(request\x2C '..\\\\'));\x0d\n\x0d\n      if (isRelative) {\x0d\n        paths = options.paths;\x0d\n      } else {\x0d\n        const fakeParent = new Module(''\x2C null);\x0d\n\x0d\n        paths = [];\x0d\n\x0d\n        for (let i = 0; i < options.paths.length; i++) {\x0d\n          const path = options.paths[i];\x0d\n          fakeParent.paths = Module._nodeModulePaths(path);\x0d\n          const lookupPaths = Module._resolveLookupPaths(request\x2C fakeParent);\x0d\n\x0d\n          for (let j = 0; j < lookupPaths.length; j++) {\x0d\n            if (!ArrayPrototypeIncludes(paths\x2C lookupPaths[j])) {\x0d\n              ArrayPrototypePush(paths\x2C lookupPaths[j]);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else if (options.paths === undefined) {\x0d\n      paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.paths'\x2C options.paths);\x0d\n    }\x0d\n  } else {\x0d\n    paths = Module._resolveLookupPaths(request\x2C parent);\x0d\n  }\x0d\n\x0d\n  if (request[0] === '#' && (parent?.filename || parent?.id === '<repl>')) {\x0d\n    const parentPath = parent?.filename ?? process.cwd() + path.sep;\x0d\n    const pkg = packageJsonReader.readPackageScope(parentPath) || { __proto__: null };\x0d\n    if (pkg.data?.imports != null) {\x0d\n      try {\x0d\n        const { packageImportsResolve } = require('internal/modules/esm/resolve');\x0d\n        return finalizeEsmResolution(\x0d\n          packageImportsResolve(request\x2C pathToFileURL(parentPath)\x2C\x0d\n                                getCjsConditions())\x2C parentPath\x2C\x0d\n          pkg.path);\x0d\n      } catch (e) {\x0d\n        if (e.code === 'ERR_MODULE_NOT_FOUND') {\x0d\n          throw createEsmNotFoundErr(request);\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Try module self resolution first\x0d\n  const parentPath = trySelfParentPath(parent);\x0d\n  const selfResolved = trySelf(parentPath\x2C request);\x0d\n  if (selfResolved) {\x0d\n    const cacheKey = request + '\\x00' +\x0d\n         (paths.length === 1 ? paths[0] : ArrayPrototypeJoin(paths\x2C '\\x00'));\x0d\n    Module._pathCache[cacheKey] = selfResolved;\x0d\n    return selfResolved;\x0d\n  }\x0d\n\x0d\n  // Look up the filename first\x2C since that's the cache key.\x0d\n  const filename = Module._findPath(request\x2C paths\x2C isMain);\x0d\n  if (filename) { return filename; }\x0d\n  const requireStack = [];\x0d\n  for (let cursor = parent;\x0d\n    cursor;\x0d\n    cursor = moduleParentCache.get(cursor)) {\x0d\n    ArrayPrototypePush(requireStack\x2C cursor.filename || cursor.id);\x0d\n  }\x0d\n  let message = `Cannot find module '${request}'`;\x0d\n  if (requireStack.length > 0) {\x0d\n    message = message + '\\nRequire stack:\\n- ' +\x0d\n              ArrayPrototypeJoin(requireStack\x2C '\\n- ');\x0d\n  }\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  err.requireStack = requireStack;\x0d\n  throw err;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Finishes resolving an ES module specifier into an absolute file path.\x0d\n * @param {string} resolved The resolved module specifier\x0d\n * @param {string} parentPath The path of the parent module\x0d\n * @param {string} pkgPath The path of the package.json file\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the resolved module specifier contains encoded `/` or `\\\\` characters\x0d\n * @throws {Error} If the module cannot be found\x0d\n */\x0d\nfunction finalizeEsmResolution(resolved\x2C parentPath\x2C pkgPath) {\x0d\n  const { encodedSepRegEx } = require('internal/modules/esm/resolve');\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved) !== null) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved\x2C 'must not include encoded "/" or "\\\\" characters'\x2C parentPath);\x0d\n  }\x0d\n  const filename = fileURLToPath(resolved);\x0d\n  const actual = tryFile(filename);\x0d\n  if (actual) {\x0d\n    return actual;\x0d\n  }\x0d\n  const err = createEsmNotFoundErr(filename\x2C\x0d\n                                   path.resolve(pkgPath\x2C 'package.json'));\x0d\n  throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an error object for when a requested ES module cannot be found.\x0d\n * @param {string} request The name of the requested module\x0d\n * @param {string} [path] The path to the requested module\x0d\n */\x0d\nfunction createEsmNotFoundErr(request\x2C path) {\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(`Cannot find module '${request}'`);\x0d\n  err.code = 'MODULE_NOT_FOUND';\x0d\n  if (path) {\x0d\n    err.path = path;\x0d\n  }\x0d\n  // TODO(BridgeAR): Add the requireStack as well.\x0d\n  return err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Given a file name\x2C pass it to the proper extension handler.\x0d\n * @param {string} filename The `require` specifier\x0d\n */\x0d\nModule.prototype.load = function(filename) {\x0d\n  debug('load %j for module %j'\x2C filename\x2C this.id);\x0d\n\x0d\n  assert(!this.loaded);\x0d\n  this.filename = filename;\x0d\n  this.paths = Module._nodeModulePaths(path.dirname(filename));\x0d\n\x0d\n  const extension = findLongestRegisteredExtension(filename);\x0d\n  // allow .mjs to be overridden\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.mjs') && !Module._extensions['.mjs']) {\x0d\n    throw new ERR_REQUIRE_ESM(filename\x2C true);\x0d\n  }\x0d\n\x0d\n  Module._extensions[extension](this\x2C filename);\x0d\n  this.loaded = true;\x0d\n\x0d\n  // Create module entry at load time to snapshot exports correctly\x0d\n  const exports = this.exports;\x0d\n  // Preemptively cache for ESM loader.\x0d\n  if (!cjsExportsCache.has(this)) {\x0d\n    cjsExportsCache.set(this\x2C exports);\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Loads a module at the given file path. Returns that module's `exports` property.\x0d\n * Note: when using the experimental policy mechanism this function is overridden.\x0d\n * @param {string} id\x0d\n * @throws {ERR_INVALID_ARG_TYPE} When `id` is not a string\x0d\n */\x0d\nModule.prototype.require = function(id) {\x0d\n  validateString(id\x2C 'id');\x0d\n  if (id === '') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('id'\x2C id\x2C\x0d\n                                    'must be a non-empty string');\x0d\n  }\x0d\n  requireDepth++;\x0d\n  try {\x0d\n    return Module._load(id\x2C this\x2C /* isMain */ false);\x0d\n  } finally {\x0d\n    requireDepth--;\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Resolved path to `process.argv[1]` will be lazily placed here\x0d\n * (needed for setting breakpoint when called with `--inspect-brk`).\x0d\n * @type {string | undefined}\x0d\n */\x0d\nlet resolvedArgv;\x0d\nlet hasPausedEntry = false;\x0d\n/** @type {import('vm').Script} */\x0d\n\x0d\n/**\x0d\n * Wraps the given content in a script and runs it in a new context.\x0d\n * @param {string} filename The name of the file being loaded\x0d\n * @param {string} content The content of the file being loaded\x0d\n * @param {Module} cjsModuleInstance The CommonJS loader instance\x0d\n * @param {object} codeCache The SEA code cache\x0d\n */\x0d\nfunction wrapSafe(filename\x2C content\x2C cjsModuleInstance\x2C codeCache) {\x0d\n  const hostDefinedOptionId = vm_dynamic_import_default_internal;\x0d\n  const importModuleDynamically = vm_dynamic_import_default_internal;\x0d\n  if (patched) {\x0d\n    const wrapped = Module.wrap(content);\x0d\n    const script = makeContextifyScript(\x0d\n      wrapped\x2C                 // code\x0d\n      filename\x2C                // filename\x0d\n      0\x2C                       // lineOffset\x0d\n      0\x2C                       // columnOffset\x0d\n      undefined\x2C               // cachedData\x0d\n      false\x2C                   // produceCachedData\x0d\n      undefined\x2C               // parsingContext\x0d\n      hostDefinedOptionId\x2C     // hostDefinedOptionId\x0d\n      importModuleDynamically\x2C // importModuleDynamically\x0d\n    );\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (script.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C script.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return runScriptInThisContext(script\x2C true\x2C false);\x0d\n  }\x0d\n\x0d\n  const params = [ 'exports'\x2C 'require'\x2C 'module'\x2C '__filename'\x2C '__dirname' ];\x0d\n  try {\x0d\n    const result = internalCompileFunction(\x0d\n      content\x2C                           // code\x2C\x0d\n      filename\x2C                          // filename\x0d\n      0\x2C                                 // lineOffset\x0d\n      0\x2C                                 // columnOffset\x2C\x0d\n      codeCache\x2C                         // cachedData\x0d\n      false\x2C                             // produceCachedData\x0d\n      undefined\x2C                         // parsingContext\x0d\n      undefined\x2C                         // contextExtensions\x0d\n      params\x2C                            // params\x0d\n      hostDefinedOptionId\x2C               // hostDefinedOptionId\x0d\n      importModuleDynamically\x2C           // importModuleDynamically\x0d\n    );\x0d\n\x0d\n    // The code cache is used for SEAs only.\x0d\n    if (codeCache &&\x0d\n        result.cachedDataRejected !== false &&\x0d\n        internalBinding('sea').isSea()) {\x0d\n      process.emitWarning('Code cache data rejected.');\x0d\n    }\x0d\n\x0d\n    // Cache the source map for the module if present.\x0d\n    if (result.sourceMapURL) {\x0d\n      maybeCacheSourceMap(filename\x2C content\x2C this\x2C false\x2C undefined\x2C result.sourceMapURL);\x0d\n    }\x0d\n\x0d\n    return result.function;\x0d\n  } catch (err) {\x0d\n    if (process.mainModule === cjsModuleInstance) {\x0d\n      const { enrichCJSError } = require('internal/modules/esm/translators');\x0d\n      enrichCJSError(err\x2C content\x2C filename);\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Run the file contents in the correct scope or sandbox. Expose the correct helper variables (`require`\x2C `module`\x2C\x0d\n * `exports`) to the file. Returns exception\x2C if any.\x0d\n * @param {string} content The source code of the module\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule.prototype._compile = function(content\x2C filename) {\x0d\n  let moduleURL;\x0d\n  let redirects;\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    moduleURL = pathToFileURL(filename);\x0d\n    redirects = manifest.getDependencyMapper(moduleURL);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  const compiledWrapper = wrapSafe(filename\x2C content\x2C this);\x0d\n\x0d\n  let inspectorWrapper = null;\x0d\n  if (getOptionValue('--inspect-brk') && process._eval == null) {\x0d\n    if (!resolvedArgv) {\x0d\n      // We enter the repl if we're not given a filename argument.\x0d\n      if (process.argv[1]) {\x0d\n        try {\x0d\n          resolvedArgv = Module._resolveFilename(process.argv[1]\x2C null\x2C false);\x0d\n        } catch {\x0d\n          // We only expect this codepath to be reached in the case of a\x0d\n          // preloaded module (it will fail earlier with the main entry)\x0d\n          assert(ArrayIsArray(getOptionValue('--require')));\x0d\n        }\x0d\n      } else {\x0d\n        resolvedArgv = 'repl';\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Set breakpoint on module start\x0d\n    if (resolvedArgv && !hasPausedEntry && filename === resolvedArgv) {\x0d\n      hasPausedEntry = true;\x0d\n      inspectorWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n    }\x0d\n  }\x0d\n  const dirname = path.dirname(filename);\x0d\n  const require = makeRequireFunction(this\x2C redirects);\x0d\n  let result;\x0d\n  const exports = this.exports;\x0d\n  const thisValue = exports;\x0d\n  const module = this;\x0d\n  if (requireDepth === 0) { statCache = new SafeMap(); }\x0d\n  setHasStartedUserCJSExecution();\x0d\n  if (inspectorWrapper) {\x0d\n    result = inspectorWrapper(compiledWrapper\x2C thisValue\x2C exports\x2C\x0d\n                              require\x2C module\x2C filename\x2C dirname);\x0d\n  } else {\x0d\n    result = ReflectApply(compiledWrapper\x2C thisValue\x2C\x0d\n                          [exports\x2C require\x2C module\x2C filename\x2C dirname]);\x0d\n  }\x0d\n  if (requireDepth === 0) { statCache = null; }\x0d\n  return result;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.js` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.js'] = function(module\x2C filename) {\x0d\n  // If already analyzed the source\x2C then it will be cached.\x0d\n  const cached = cjsParseCache.get(module);\x0d\n  let content;\x0d\n  if (cached?.source) {\x0d\n    content = cached.source;\x0d\n    cached.source = undefined;\x0d\n  } else {\x0d\n    content = fs.readFileSync(filename\x2C 'utf8');\x0d\n  }\x0d\n  if (StringPrototypeEndsWith(filename\x2C '.js')) {\x0d\n    const pkg = packageJsonReader.readPackageScope(filename) || { __proto__: null };\x0d\n    // Function require shouldn't be used in ES modules.\x0d\n    if (pkg.data?.type === 'module') {\x0d\n      // This is an error path because `require` of a `.js` file in a `"type": "module"` scope is not allowed.\x0d\n      const parent = moduleParentCache.get(module);\x0d\n      const parentPath = parent?.filename;\x0d\n      const packageJsonPath = path.resolve(pkg.path\x2C 'package.json');\x0d\n      const usesEsm = containsModuleSyntax(content\x2C filename);\x0d\n      const err = new ERR_REQUIRE_ESM(filename\x2C usesEsm\x2C parentPath\x2C\x0d\n                                      packageJsonPath);\x0d\n      // Attempt to reconstruct the parent require frame.\x0d\n      if (Module._cache[parentPath]) {\x0d\n        let parentSource;\x0d\n        try {\x0d\n          parentSource = fs.readFileSync(parentPath\x2C 'utf8');\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n        if (parentSource) {\x0d\n          const errLine = StringPrototypeSplit(\x0d\n            StringPrototypeSlice(err.stack\x2C StringPrototypeIndexOf(\x0d\n              err.stack\x2C '    at '))\x2C '\\n'\x2C 1)[0];\x0d\n          const { 1: line\x2C 2: col } =\x0d\n              RegExpPrototypeExec(/(\\d+):(\\d+)\\)/\x2C errLine) || [];\x0d\n          if (line && col) {\x0d\n            const srcLine = StringPrototypeSplit(parentSource\x2C '\\n')[line - 1];\x0d\n            const frame = `${parentPath}:${line}\\n${srcLine}\\n${\x0d\n              StringPrototypeRepeat(' '\x2C col - 1)}^\\n`;\x0d\n            setArrowMessage(err\x2C frame);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n  module._compile(content\x2C filename);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.json` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.json'] = function(module\x2C filename) {\x0d\n  const content = fs.readFileSync(filename\x2C 'utf8');\x0d\n\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    setOwnProperty(module\x2C 'exports'\x2C JSONParse(stripBOM(content)));\x0d\n  } catch (err) {\x0d\n    err.message = filename + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n};\x0d\n\x0d\n/**\x0d\n * Native handler for `.node` files.\x0d\n * @param {Module} module The module to compile\x0d\n * @param {string} filename The file path of the module\x0d\n */\x0d\nModule._extensions['.node'] = function(module\x2C filename) {\x0d\n  const manifest = policy()?.manifest;\x0d\n  if (manifest) {\x0d\n    const content = fs.readFileSync(filename);\x0d\n    const moduleURL = pathToFileURL(filename);\x0d\n    manifest.assertIntegrity(moduleURL\x2C content);\x0d\n  }\x0d\n  // Be aware this doesn't use `content`\x0d\n  return process.dlopen(module\x2C path.toNamespacedPath(filename));\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a `require` function that can be used to load modules from the specified path.\x0d\n * @param {string} filename The path to the module\x0d\n */\x0d\nfunction createRequireFromPath(filename) {\x0d\n  // Allow a directory to be passed as the filename\x0d\n  const trailingSlash =\x0d\n    StringPrototypeEndsWith(filename\x2C '/') ||\x0d\n    (isWindows && StringPrototypeEndsWith(filename\x2C '\\\\'));\x0d\n\x0d\n  const proxyPath = trailingSlash ?\x0d\n    path.join(filename\x2C 'noop.js') :\x0d\n    filename;\x0d\n\x0d\n  const m = new Module(proxyPath);\x0d\n  m.filename = proxyPath;\x0d\n\x0d\n  m.paths = Module._nodeModulePaths(m.path);\x0d\n  return makeRequireFunction(m\x2C null);\x0d\n}\x0d\n\x0d\nconst createRequireError = 'must be a file URL object\x2C file URL string\x2C or ' +\x0d\n  'absolute path string';\x0d\n\x0d\n/**\x0d\n * Creates a new `require` function that can be used to load modules.\x0d\n * @param {string | URL} filename The path or URL to the module context for this `require`\x0d\n * @throws {ERR_INVALID_ARG_VALUE} If `filename` is not a string or URL\x2C or if it is a relative path that cannot be\x0d\n * resolved to an absolute path.\x0d\n */\x0d\nfunction createRequire(filename) {\x0d\n  let filepath;\x0d\n\x0d\n  if (isURL(filename) ||\x0d\n      (typeof filename === 'string' && !path.isAbsolute(filename))) {\x0d\n    try {\x0d\n      filepath = fileURLToPath(filename);\x0d\n    } catch {\x0d\n      throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C\x0d\n                                      createRequireError);\x0d\n    }\x0d\n  } else if (typeof filename !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('filename'\x2C filename\x2C createRequireError);\x0d\n  } else {\x0d\n    filepath = filename;\x0d\n  }\x0d\n  return createRequireFromPath(filepath);\x0d\n}\x0d\n\x0d\nModule.createRequire = createRequire;\x0d\n\x0d\n/**\x0d\n * Define the paths to use for resolving a module.\x0d\n */\x0d\nModule._initPaths = function() {\x0d\n  const homeDir = isWindows ? process.env.USERPROFILE : safeGetenv('HOME');\x0d\n  const nodePath = isWindows ? process.env.NODE_PATH : safeGetenv('NODE_PATH');\x0d\n\x0d\n  // process.execPath is $PREFIX/bin/node except on Windows where it is\x0d\n  // $PREFIX\\node.exe where $PREFIX is the root of the Node.js installation.\x0d\n  const prefixDir = isWindows ?\x0d\n    path.resolve(process.execPath\x2C '..') :\x0d\n    path.resolve(process.execPath\x2C '..'\x2C '..');\x0d\n\x0d\n  const paths = [path.resolve(prefixDir\x2C 'lib'\x2C 'node')];\x0d\n\x0d\n  if (homeDir) {\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_libraries'));\x0d\n    ArrayPrototypeUnshift(paths\x2C path.resolve(homeDir\x2C '.node_modules'));\x0d\n  }\x0d\n\x0d\n  if (nodePath) {\x0d\n    ArrayPrototypeUnshiftApply(paths\x2C ArrayPrototypeFilter(\x0d\n      StringPrototypeSplit(nodePath\x2C path.delimiter)\x2C\x0d\n      Boolean\x2C\x0d\n    ));\x0d\n  }\x0d\n\x0d\n  modulePaths = paths;\x0d\n\x0d\n  // Clone as a shallow copy\x2C for introspection.\x0d\n  Module.globalPaths = ArrayPrototypeSlice(modulePaths);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Handle modules loaded via `--require`.\x0d\n * @param {string[]} requests The values of `--require`\x0d\n */\x0d\nModule._preloadModules = function(requests) {\x0d\n  if (!ArrayIsArray(requests)) { return; }\x0d\n\x0d\n  isPreloading = true;\x0d\n\x0d\n  // Preloaded modules have a dummy parent module which is deemed to exist\x0d\n  // in the current working directory. This seeds the search path for\x0d\n  // preloaded modules.\x0d\n  const parent = new Module('internal/preload'\x2C null);\x0d\n  try {\x0d\n    parent.paths = Module._nodeModulePaths(process.cwd());\x0d\n  } catch (e) {\x0d\n    if (e.code !== 'ENOENT') {\x0d\n      isPreloading = false;\x0d\n      throw e;\x0d\n    }\x0d\n  }\x0d\n  for (let n = 0; n < requests.length; n++) {\x0d\n    internalRequire(parent\x2C requests[n]);\x0d\n  }\x0d\n  isPreloading = false;\x0d\n};\x0d\n\x0d\n/**\x0d\n * If the user has overridden an export from a builtin module\x2C this function can ensure that the override is used in\x0d\n * both CommonJS and ES module contexts.\x0d\n */\x0d\nModule.syncBuiltinESMExports = function syncBuiltinESMExports() {\x0d\n  for (const mod of BuiltinModule.map.values()) {\x0d\n    if (BuiltinModule.canBeRequiredWithoutScheme(mod.id)) {\x0d\n      mod.syncExports();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nObjectDefineProperty(Module.prototype\x2C 'constructor'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return policy() ? undefined : Module;\x0d\n  }\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n// Backwards compatibility\x0d\nModule.Module = Module;\x0d\n
code-source-info,0x1c66f8de87e,63,10924,11416,C0O11028C5O11042C10O11042C15O11089C20O11113C23O11113C27O11111C31O11148C36O11148C39O11180C44O11185C48O11205C54O11234C57O11241C62O11241C66O11332C75O11354C80O11390C84O11347C89O11415,,
code-creation,JS,10,146897,0x1c66f8e1c06,19,getCanBeRequiredByUsersWithoutSchemeList node:internal/bootstrap/realm:322:50,0x23399fb108,~
code-source-info,0x1c66f8e1c06,9,10636,10707,C0O10646C11O10663C14O10653C18O10702,,
code-creation,JS,10,147039,0x1c66f8e201e,158,initializeCjsConditions node:internal/modules/helpers:68:33,0x3fcdefbd8f8,~
script-source,64,node:internal/modules/helpers,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\n\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst fs = require('fs'); // Import all of `fs` so that it can be monkey-patched.\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst path = require('path');\x0d\nconst { pathToFileURL\x2C fileURLToPath } = require('internal/url');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { setOwnProperty } = require('internal/util');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    require_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst { canParse: URLCanParse } = internalBinding('url');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('module'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\n\x0d\n/** @typedef {import('internal/modules/cjs/loader.js').Module} Module */\x0d\n\x0d\n/**\x0d\n * Cache for storing resolved real paths of modules.\x0d\n * In order to minimize unnecessary lstat() calls\x2C this cache is a list of known-real paths.\x0d\n * Set to an empty Map to reset.\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst realpathCache = new SafeMap();\x0d\n/**\x0d\n * Resolves the path of a given `require` specifier\x2C following symlinks.\x0d\n * @param {string} requestPath The `require` specifier\x0d\n */\x0d\nfunction toRealPath(requestPath) {\x0d\n  return fs.realpathSync(requestPath\x2C {\x0d\n    [internalFS.realpathCacheKey]: realpathCache\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n/** @type {Set<string>} */\x0d\nlet cjsConditions;\x0d\n/**\x0d\n * Define the conditions that apply to the CommonJS loader.\x0d\n */\x0d\nfunction initializeCjsConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n  // TODO: Use this set when resolving pkg#exports conditions in loader.js.\x0d\n  cjsConditions = new SafeSet([\x0d\n    'require'\x2C\x0d\n    'node'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the conditions that apply to the CommonJS loader.\x0d\n */\x0d\nfunction getCjsConditions() {\x0d\n  if (cjsConditions === undefined) {\x0d\n    initializeCjsConditions();\x0d\n  }\x0d\n  return cjsConditions;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Provide one of Node.js' public modules to user code.\x0d\n * @param {string} id - The identifier/specifier of the builtin module to load\x0d\n * @param {string} request - The module requiring or importing the builtin module\x0d\n */\x0d\nfunction loadBuiltinModule(id\x2C request) {\x0d\n  if (!BuiltinModule.canBeRequiredByUsers(id)) {\x0d\n    return;\x0d\n  }\x0d\n  /** @type {import('internal/bootstrap/realm.js').BuiltinModule} */\x0d\n  const mod = BuiltinModule.map.get(id);\x0d\n  debug('load built-in module %s'\x2C request);\x0d\n  // compileForPublicLoader() throws if canBeRequiredByUsers is false:\x0d\n  mod.compileForPublicLoader();\x0d\n  return mod;\x0d\n}\x0d\n\x0d\n/** @type {Module} */\x0d\nlet $Module = null;\x0d\n/**\x0d\n * Import the Module class on first use.\x0d\n */\x0d\nfunction lazyModule() {\x0d\n  $Module = $Module || require('internal/modules/cjs/loader').Module;\x0d\n  return $Module;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invoke with `makeRequireFunction(module)` where `module` is the `Module` object to use as the context for the\x0d\n * `require()` function.\x0d\n * Use redirects to set up a mapping from a policy and restrict dependencies.\x0d\n */\x0d\nconst urlToFileCache = new SafeMap();\x0d\n/**\x0d\n * Create the module-scoped `require` function to pass into CommonJS modules.\x0d\n * @param {Module} mod - The module to create the `require` function for.\x0d\n * @param {ReturnType<import('internal/policy/manifest.js').Manifest['getDependencyMapper']>} redirects\x0d\n * @typedef {(specifier: string) => unknown} RequireFunction\x0d\n */\x0d\nfunction makeRequireFunction(mod\x2C redirects) {\x0d\n  // lazy due to cycle\x0d\n  const Module = lazyModule();\x0d\n  if (mod instanceof Module !== true) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('mod'\x2C 'Module'\x2C mod);\x0d\n  }\x0d\n\x0d\n  /** @type {RequireFunction} */\x0d\n  let require;\x0d\n  if (redirects) {\x0d\n    const id = mod.filename || mod.id;\x0d\n    const conditions = getCjsConditions();\x0d\n    const { resolve\x2C reaction } = redirects;\x0d\n    require = function require(specifier) {\x0d\n      let missing = true;\x0d\n      const destination = resolve(specifier\x2C conditions);\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const { href\x2C protocol } = destination;\x0d\n        if (protocol === 'node:') {\x0d\n          const specifier = destination.pathname;\x0d\n\x0d\n          if (BuiltinModule.canBeRequiredByUsers(specifier)) {\x0d\n            const mod = loadBuiltinModule(specifier\x2C href);\x0d\n            return mod.exports;\x0d\n          }\x0d\n          throw new ERR_UNKNOWN_BUILTIN_MODULE(specifier);\x0d\n        } else if (protocol === 'file:') {\x0d\n          let filepath = urlToFileCache.get(href);\x0d\n          if (!filepath) {\x0d\n            filepath = fileURLToPath(destination);\x0d\n            urlToFileCache.set(href\x2C filepath);\x0d\n          }\x0d\n          return mod[require_private_symbol](mod\x2C filepath);\x0d\n        }\x0d\n      }\x0d\n      if (missing) {\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          id\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C ')\x2C\x0d\n        ));\x0d\n      }\x0d\n      return mod[require_private_symbol](mod\x2C specifier);\x0d\n    };\x0d\n  } else {\x0d\n    require = function require(path) {\x0d\n      // When no policy manifest\x2C the original prototype.require is sustained\x0d\n      return mod.require(path);\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * The `resolve` method that gets attached to module-scope `require`.\x0d\n   * @param {string} request\x0d\n   * @param {Parameters<Module['_resolveFilename']>[3]} options\x0d\n   */\x0d\n  function resolve(request\x2C options) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveFilename(request\x2C mod\x2C false\x2C options);\x0d\n  }\x0d\n\x0d\n  require.resolve = resolve;\x0d\n\x0d\n  /**\x0d\n   * The `paths` method that gets attached to module-scope `require`.\x0d\n   * @param {string} request\x0d\n   */\x0d\n  function paths(request) {\x0d\n    validateString(request\x2C 'request');\x0d\n    return Module._resolveLookupPaths(request\x2C mod);\x0d\n  }\x0d\n\x0d\n  resolve.paths = paths;\x0d\n\x0d\n  setOwnProperty(require\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  // Enable support to add extra extension types.\x0d\n  require.extensions = Module._extensions;\x0d\n\x0d\n  require.cache = Module._cache;\x0d\n\x0d\n  return require;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\x0d\n * because the buffer-to-string conversion in `fs.readFileSync()`\x0d\n * translates it to FEFF\x2C the UTF-16 BOM.\x0d\n * @param {string} content\x0d\n */\x0d\nfunction stripBOM(content) {\x0d\n  if (StringPrototypeCharCodeAt(content) === 0xFEFF) {\x0d\n    content = StringPrototypeSlice(content\x2C 1);\x0d\n  }\x0d\n  return content;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add built-in modules to a global or REPL scope object.\x0d\n * @param {Record<string\x2C unknown>} object - The object such as `globalThis` to add the built-in modules to.\x0d\n * @param {string} dummyModuleName - The label representing the set of built-in modules to add.\x0d\n */\x0d\nfunction addBuiltinLibsToObject(object\x2C dummyModuleName) {\x0d\n  // Make built-in modules available directly (loaded lazily).\x0d\n  const Module = require('internal/modules/cjs/loader').Module;\x0d\n  const { builtinModules } = Module;\x0d\n\x0d\n  // To require built-in modules in user-land and ignore modules whose\x0d\n  // `canBeRequiredByUsers` is false. So we create a dummy module object and not\x0d\n  // use `require()` directly.\x0d\n  const dummyModule = new Module(dummyModuleName);\x0d\n\x0d\n  ArrayPrototypeForEach(builtinModules\x2C (name) => {\x0d\n    // Neither add underscored modules\x2C nor ones that contain slashes (e.g.\x2C\x0d\n    // 'fs/promises') or ones that are already defined.\x0d\n    if (StringPrototypeStartsWith(name\x2C '_') ||\x0d\n        StringPrototypeIncludes(name\x2C '/') ||\x0d\n        ObjectPrototypeHasOwnProperty(object\x2C name)) {\x0d\n      return;\x0d\n    }\x0d\n    // Goals of this mechanism are:\x0d\n    // - Lazy loading of built-in modules\x0d\n    // - Having all built-in modules available as non-enumerable properties\x0d\n    // - Allowing the user to re-assign these variables as if there were no\x0d\n    //   pre-existing globals with the same name.\x0d\n\x0d\n    const setReal = (val) => {\x0d\n      // Deleting the property before re-assigning it disables the\x0d\n      // getter/setter mechanism.\x0d\n      delete object[name];\x0d\n      object[name] = val;\x0d\n    };\x0d\n\x0d\n    ObjectDefineProperty(object\x2C name\x2C {\x0d\n      __proto__: null\x2C\x0d\n      get: () => {\x0d\n        const lib = dummyModule.require(name);\x0d\n\x0d\n        try {\x0d\n          // Override the current getter/setter and set up a new\x0d\n          // non-enumerable property.\x0d\n          ObjectDefineProperty(object\x2C name\x2C {\x0d\n            __proto__: null\x2C\x0d\n            get: () => lib\x2C\x0d\n            set: setReal\x2C\x0d\n            configurable: true\x2C\x0d\n            enumerable: false\x2C\x0d\n          });\x0d\n        } catch {\x0d\n          // If the property is no longer configurable\x2C ignore the error.\x0d\n        }\x0d\n\x0d\n        return lib;\x0d\n      }\x2C\x0d\n      set: setReal\x2C\x0d\n      configurable: true\x2C\x0d\n      enumerable: false\x2C\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Normalize the referrer name as a URL.\x0d\n * If it's a string containing an absolute path or a URL it's normalized as\x0d\n * a URL string.\x0d\n * Otherwise it's returned as undefined.\x0d\n * @param {string | null | undefined} referrerName\x0d\n * @returns {string | undefined}\x0d\n */\x0d\nfunction normalizeReferrerURL(referrerName) {\x0d\n  if (referrerName === null || referrerName === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n\x0d\n  if (typeof referrerName === 'string') {\x0d\n    if (path.isAbsolute(referrerName)) {\x0d\n      return pathToFileURL(referrerName).href;\x0d\n    }\x0d\n\x0d\n    if (StringPrototypeStartsWith(referrerName\x2C 'file://') ||\x0d\n        URLCanParse(referrerName)) {\x0d\n      return referrerName;\x0d\n    }\x0d\n\x0d\n    return undefined;\x0d\n  }\x0d\n\x0d\n  assert.fail('Unreachable code reached by ' + inspect(referrerName));\x0d\n}\x0d\n\x0d\n\x0d\n// Whether we have started executing any user-provided CJS code.\x0d\n// This is set right before we call the wrapped CJS code (not after\x2C\x0d\n// in case we are half-way in the execution when internals check this).\x0d\n// Used for internal assertions.\x0d\nlet _hasStartedUserCJSExecution = false;\x0d\n// Similar to _hasStartedUserCJSExecution but for ESM. This is set\x0d\n// right before ESM evaluation in the default ESM loader. We do not\x0d\n// update this during vm SourceTextModule execution because at that point\x0d\n// some user code must already have been run to execute code via vm\x0d\n// there is little value checking whether any user JS code is run anyway.\x0d\nlet _hasStartedUserESMExecution = false;\x0d\n\x0d\nmodule.exports = {\x0d\n  addBuiltinLibsToObject\x2C\x0d\n  getCjsConditions\x2C\x0d\n  initializeCjsConditions\x2C\x0d\n  loadBuiltinModule\x2C\x0d\n  makeRequireFunction\x2C\x0d\n  normalizeReferrerURL\x2C\x0d\n  stripBOM\x2C\x0d\n  toRealPath\x2C\x0d\n  hasStartedUserCJSExecution() {\x0d\n    return _hasStartedUserCJSExecution;\x0d\n  }\x2C\x0d\n  setHasStartedUserCJSExecution() {\x0d\n    _hasStartedUserCJSExecution = true;\x0d\n  }\x2C\x0d\n  hasStartedUserESMExecution() {\x0d\n    return _hasStartedUserESMExecution;\x0d\n  }\x2C\x0d\n  setHasStartedUserESMExecution() {\x0d\n    _hasStartedUserESMExecution = true;\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8e201e,64,2023,2394,C0O2054C8O2054C13O2106C21O2106C26O2164C37O2277C50O2344C95O2369C142O2293C150O2291C157O2393,,
code-creation,JS,10,147763,0x1c66f8e2f26,315,Module._initPaths node:internal/modules/cjs/loader:1522:29,0x3fcdefbd128,~
code-source-info,0x1c66f8e2f26,63,50810,51795,C0O50834C9O50854C14O50858C22O50872C28O50872C33O50912C42O50932C47O50936C55O50948C61O50948C66O51147C74O51164C77O51169C85O51185C93O51169C103O51208C106O51213C114O51229C125O51213C131O51271C140O51272C143O51277C157O51277C169O51318C173O51338C180O51367C183O51372C191O51372C198O51338C203O51415C210O51444C213O51449C221O51449C228O51415C233O51495C237O51516C244O51550C249O51579C254O51610C257O51615C262O51579C270O51634C273O51550C279O51516C284O51662C286O51674C292O51738C297O51759C302O51779C305O51759C309O51757C314O51794,,
code-creation,JS,10,148008,0x1c66f8e3516,91,initializeESMLoader node:internal/process/pre_execution:682:29,0x3fcdefbfaa8,~
code-source-info,0x1c66f8e3516,67,22417,22987,C0O22469C6O22469C11O22451C16O22511C20O22682C28O22686C34O22805C40O22805C45O22753C50O22761C55O22779C60O22852C66O22852C71O22872C73O22882C77O22897C79O22917C83O22942C85O22961C90O22986,,
code-creation,JS,10,148105,0x1c66f8e368e,50,initializeESM node:internal/modules/esm/utils:241:23,0x3fcdefbe8e0,~
script-source,66,node:internal/modules/esm/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  ObjectFreeze\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    host_defined_option_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  vm_dynamic_import_default_internal\x2C\x0d\n  vm_dynamic_import_main_context_default\x2C\x0d\n  vm_dynamic_import_missing_flag\x2C\x0d\n  vm_dynamic_import_no_callback\x2C\x0d\n} = internalBinding('symbols');\x0d\n\x0d\nconst {\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG\x2C\x0d\n  ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING\x2C\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  loadPreloadModules\x2C\x0d\n  initializeFrozenIntrinsics\x2C\x0d\n} = require('internal/process/pre_execution');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  getCWDURL\x2C\x0d\n  getLazy\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  setImportModuleDynamicallyCallback\x2C\x0d\n  setInitializeImportMetaObjectCallback\x2C\x0d\n} = internalBinding('module_wrap');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  normalizeReferrerURL\x2C\x0d\n} = require('internal/modules/helpers');\x0d\n\x0d\nlet defaultConditions;\x0d\n/**\x0d\n * Returns the default conditions for ES module loading.\x0d\n */\x0d\nfunction getDefaultConditions() {\x0d\n  assert(defaultConditions !== undefined);\x0d\n  return defaultConditions;\x0d\n}\x0d\n\x0d\n/** @type {Set<string>} */\x0d\nlet defaultConditionsSet;\x0d\n/**\x0d\n * Returns the default conditions for ES module loading\x2C as a Set.\x0d\n */\x0d\nfunction getDefaultConditionsSet() {\x0d\n  assert(defaultConditionsSet !== undefined);\x0d\n  return defaultConditionsSet;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Initializes the default conditions for ESM module loading.\x0d\n * This function is called during pre-execution\x2C before any user code is run.\x0d\n */\x0d\nfunction initializeDefaultConditions() {\x0d\n  const userConditions = getOptionValue('--conditions');\x0d\n  const noAddons = getOptionValue('--no-addons');\x0d\n  const addonConditions = noAddons ? [] : ['node-addons'];\x0d\n\x0d\n  defaultConditions = ObjectFreeze([\x0d\n    'node'\x2C\x0d\n    'import'\x2C\x0d\n    ...addonConditions\x2C\x0d\n    ...userConditions\x2C\x0d\n  ]);\x0d\n  defaultConditionsSet = new SafeSet(defaultConditions);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string[]} [conditions]\x0d\n * @returns {Set<string>}\x0d\n */\x0d\nfunction getConditionsSet(conditions) {\x0d\n  if (conditions !== undefined && conditions !== getDefaultConditions()) {\x0d\n    if (!ArrayIsArray(conditions)) {\x0d\n      throw new ERR_INVALID_ARG_VALUE('conditions'\x2C conditions\x2C\x0d\n                                      'expected an array');\x0d\n    }\x0d\n    return new SafeSet(conditions);\x0d\n  }\x0d\n  return getDefaultConditionsSet();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @callback ImportModuleDynamicallyCallback\x0d\n * @param {string} specifier\x0d\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\x0d\n * @param {Record<string\x2C string>} attributes\x0d\n * @returns { Promise<void> }\x0d\n */\x0d\n\x0d\n/**\x0d\n * @callback InitializeImportMetaCallback\x0d\n * @param {object} meta\x0d\n * @param {ModuleWrap|ContextifyScript|Function|vm.Module} callbackReferrer\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {{\x0d\n *   callbackReferrer: ModuleWrap|ContextifyScript|Function|vm.Module\x0d\n *   initializeImportMeta? : InitializeImportMetaCallback\x2C\x0d\n *   importModuleDynamically? : ImportModuleDynamicallyCallback\x0d\n * }} ModuleRegistry\x0d\n */\x0d\n\x0d\n/**\x0d\n * @type {WeakMap<symbol\x2C ModuleRegistry>}\x0d\n */\x0d\nconst moduleRegistries = new SafeWeakMap();\x0d\n\x0d\n/**\x0d\n * @typedef {ContextifyScript|Function|ModuleWrap|ContextifiedObject} Referrer\x0d\n * A referrer can be a Script Record\x2C a Cyclic Module Record\x2C or a Realm Record\x0d\n * as defined in https://tc39.es/ecma262/#sec-HostLoadImportedModule.\x0d\n *\x0d\n * In Node.js\x2C a referrer is represented by a wrapper object of these records.\x0d\n * A referrer object has a field |host_defined_option_symbol| initialized with\x0d\n * a symbol.\x0d\n */\x0d\n\x0d\n/**\x0d\n * V8 would make sure that as long as import() can still be initiated from\x0d\n * the referrer\x2C the symbol referenced by |host_defined_option_symbol| should\x0d\n * be alive\x2C which in term would keep the settings object alive through the\x0d\n * WeakMap\x2C and in turn that keeps the referrer object alive\x2C which would be\x0d\n * passed into the callbacks.\x0d\n * The reference goes like this:\x0d\n * [v8::internal::Script] (via host defined options) ----1--> [idSymbol]\x0d\n * [callbackReferrer] (via host_defined_option_symbol) ------2------^  |\x0d\n *                                 ^----------3---- (via WeakMap)------\x0d\n * 1+3 makes sure that as long as import() can still be initiated\x2C the\x0d\n * referrer wrap is still around and can be passed into the callbacks.\x0d\n * 2 is only there so that we can get the id symbol to configure the\x0d\n * weak map.\x0d\n * @param {Referrer} referrer The referrer to\x0d\n *   get the id symbol from. This is different from callbackReferrer which\x0d\n *   could be set by the caller.\x0d\n * @param {ModuleRegistry} registry\x0d\n */\x0d\nfunction registerModule(referrer\x2C registry) {\x0d\n  const idSymbol = referrer[host_defined_option_symbol];\x0d\n  if (idSymbol === vm_dynamic_import_no_callback ||\x0d\n      idSymbol === vm_dynamic_import_missing_flag ||\x0d\n      idSymbol === vm_dynamic_import_main_context_default ||\x0d\n      idSymbol === vm_dynamic_import_default_internal) {\x0d\n    // The referrer is compiled without custom callbacks\x2C so there is\x0d\n    // no registry to hold on to. We'll throw\x0d\n    // ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING when a callback is\x0d\n    // needed.\x0d\n    return;\x0d\n  }\x0d\n  // To prevent it from being GC'ed.\x0d\n  registry.callbackReferrer ??= referrer;\x0d\n  moduleRegistries.set(idSymbol\x2C registry);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Defines the `import.meta` object for a given module.\x0d\n * @param {symbol} symbol - Reference to the module.\x0d\n * @param {Record<string\x2C string | Function>} meta - The import.meta object to initialize.\x0d\n */\x0d\nfunction initializeImportMetaObject(symbol\x2C meta) {\x0d\n  if (moduleRegistries.has(symbol)) {\x0d\n    const { initializeImportMeta\x2C callbackReferrer } = moduleRegistries.get(symbol);\x0d\n    if (initializeImportMeta !== undefined) {\x0d\n      meta = initializeImportMeta(meta\x2C callbackReferrer);\x0d\n    }\x0d\n  }\x0d\n}\x0d\nconst getCascadedLoader = getLazy(\x0d\n  () => require('internal/process/esm_loader').esmLoader\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * Proxy the dynamic import to the default loader.\x0d\n * @param {string} specifier - The module specifier string.\x0d\n * @param {Record<string\x2C string>} attributes - The import attributes object.\x0d\n * @param {string|null|undefined} referrerName - name of the referrer.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\x0d\n */\x0d\nfunction defaultImportModuleDynamically(specifier\x2C attributes\x2C referrerName) {\x0d\n  const parentURL = normalizeReferrerURL(referrerName);\x0d\n  return getCascadedLoader().import(specifier\x2C parentURL\x2C attributes);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously imports a module dynamically using a callback function. The native callback.\x0d\n * @param {symbol} referrerSymbol - Referrer symbol of the registered script\x2C function\x2C module\x2C or contextified object.\x0d\n * @param {string} specifier - The module specifier string.\x0d\n * @param {Record<string\x2C string>} attributes - The import attributes object.\x0d\n * @param {string|null|undefined} referrerName - name of the referrer.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} - The imported module object.\x0d\n * @throws {ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING} - If the callback function is missing.\x0d\n */\x0d\nasync function importModuleDynamicallyCallback(referrerSymbol\x2C specifier\x2C attributes\x2C referrerName) {\x0d\n  // For user-provided vm.constants.USE_MAIN_CONTEXT_DEFAULT_LOADER\x2C emit the warning\x0d\n  // and fall back to the default loader.\x0d\n  if (referrerSymbol === vm_dynamic_import_main_context_default) {\x0d\n    emitExperimentalWarning('vm.USE_MAIN_CONTEXT_DEFAULT_LOADER');\x0d\n    return defaultImportModuleDynamically(specifier\x2C attributes\x2C referrerName);\x0d\n  }\x0d\n  // For script compiled internally that should use the default loader to handle dynamic\x0d\n  // import\x2C proxy the request to the default loader without the warning.\x0d\n  if (referrerSymbol === vm_dynamic_import_default_internal) {\x0d\n    return defaultImportModuleDynamically(specifier\x2C attributes\x2C referrerName);\x0d\n  }\x0d\n\x0d\n  if (moduleRegistries.has(referrerSymbol)) {\x0d\n    const { importModuleDynamically\x2C callbackReferrer } = moduleRegistries.get(referrerSymbol);\x0d\n    if (importModuleDynamically !== undefined) {\x0d\n      return importModuleDynamically(specifier\x2C callbackReferrer\x2C attributes);\x0d\n    }\x0d\n  }\x0d\n  if (referrerSymbol === vm_dynamic_import_missing_flag) {\x0d\n    throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING_FLAG();\x0d\n  }\x0d\n  throw new ERR_VM_DYNAMIC_IMPORT_CALLBACK_MISSING();\x0d\n}\x0d\n\x0d\nlet _forceDefaultLoader = false;\x0d\n/**\x0d\n * Initializes handling of ES modules.\x0d\n * This is configured during pre-execution. Specifically it's set to true for\x0d\n * the loader worker in internal/main/worker_thread.js.\x0d\n * @param {boolean} [forceDefaultLoader=false] - A boolean indicating disabling custom loaders.\x0d\n */\x0d\nfunction initializeESM(forceDefaultLoader = false) {\x0d\n  _forceDefaultLoader = forceDefaultLoader;\x0d\n  initializeDefaultConditions();\x0d\n  // Setup per-realm callbacks that locate data or callbacks that we keep\x0d\n  // track of for different ESM modules.\x0d\n  setInitializeImportMetaObjectCallback(initializeImportMetaObject);\x0d\n  setImportModuleDynamicallyCallback(importModuleDynamicallyCallback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether custom loaders are disabled and it is forced to use the\x0d\n * default loader.\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction forceDefaultLoader() {\x0d\n  return _forceDefaultLoader;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Register module customization hooks.\x0d\n */\x0d\nasync function initializeHooks() {\x0d\n  const customLoaderURLs = getOptionValue('--experimental-loader');\x0d\n\x0d\n  const { Hooks } = require('internal/modules/esm/hooks');\x0d\n  const esmLoader = require('internal/process/esm_loader').esmLoader;\x0d\n\x0d\n  const hooks = new Hooks();\x0d\n  esmLoader.setCustomizations(hooks);\x0d\n\x0d\n  // We need the loader customizations to be set _before_ we start invoking\x0d\n  // `--require`\x2C otherwise loops can happen because a `--require` script\x0d\n  // might call `register(...)` before we've installed ourselves. These\x0d\n  // global values are magically set in `setupUserModules` just for us and\x0d\n  // we call them in the correct order.\x0d\n  // N.B.  This block appears here specifically in order to ensure that\x0d\n  // `--require` calls occur before `--loader` ones do.\x0d\n  loadPreloadModules();\x0d\n  initializeFrozenIntrinsics();\x0d\n\x0d\n  const parentURL = getCWDURL().href;\x0d\n  for (let i = 0; i < customLoaderURLs.length; i++) {\x0d\n    await hooks.register(\x0d\n      customLoaderURLs[i]\x2C\x0d\n      parentURL\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const preloadScripts = hooks.initializeGlobalPreload();\x0d\n\x0d\n  return { __proto__: null\x2C hooks\x2C preloadScripts };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  registerModule\x2C\x0d\n  initializeESM\x2C\x0d\n  initializeHooks\x2C\x0d\n  getDefaultConditions\x2C\x0d\n  getConditionsSet\x2C\x0d\n  loaderWorkerId: 'internal/modules/esm/worker'\x2C\x0d\n  forceDefaultLoader\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8e368e,66,8845,9216,C10O8879C12O8899C18O8924C21O8924C24O9075C32O9075C36O9145C44O9145C49O9215,,
code-creation,JS,10,148735,0x1c66f8e4206,181,initializeDefaultConditions node:internal/modules/esm/utils:69:37,0x3fcdefbe6b0,~
code-source-info,0x1c66f8e4206,66,1726,2084,C0O1757C8O1757C13O1809C21O1809C26O1867C37O1905C50O1976C95O2001C140O1925C147O1923C153O2027C160O2062C165O2050C173O2048C180O2083,,
code-creation,JS,10,148809,0x1c66f8e43ce,5,hasStartedUserCJSExecution node:internal/modules/helpers:344:29,0x3fcdefbdbb8,~
code-source-info,0x1c66f8e43ce,64,11049,11099,C0O11059C4O11094,,
code-creation,JS,10,148849,0x1c66f8e4496,5,hasStartedUserESMExecution node:internal/modules/helpers:350:29,0x3fcdefbdc58,~
code-source-info,0x1c66f8e4496,64,11214,11264,C0O11224C4O11259,,
code-creation,JS,10,148904,0x1c66f8e45a6,53,loadPreloadModules node:internal/process/pre_execution:714:28,0x3fcdefbfb98,~
code-source-info,0x1c66f8e45a6,67,23492,23824,C0O23581C8O23581C13O23613C15O23650C21O23657C26O23739C32O23739C37O23692C42O23703C47O23784C52O23823,,
code-creation,JS,10,148969,0x1c66f8e4796,50,initializeFrozenIntrinsics node:internal/process/pre_execution:706:36,0x3fcdefbfb48,~
code-source-info,0x1c66f8e4796,67,23233,23461,C0O23241C8O23245C14O23291C17O23299C28O23299C34O23413C40O23413C45O23450C49O23460,,
code-creation,JS,10,149025,0x1c66f8e48b6,22,markBootstrapComplete node:internal/process/pre_execution:727:31,0x3fcdefbfbe8,~
code-source-info,0x1c66f8e48b6,67,23858,23924,C0O23866C6O23866C11O23896C16O23897C21O23923,,
code-creation,JS,10,149144,0x1c66f8e4a16,94,executeUserEntryPoint node:internal/modules/run_main:127:31,0x220dba81620,~
script-source,69,node:internal/modules/run_main,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst path = require('path');\x0d\n\x0d\n/**\x0d\n * Get the absolute path to the main entry point.\x0d\n * @param {string} main - Entry point path\x0d\n */\x0d\nfunction resolveMainPath(main) {\x0d\n  const defaultType = getOptionValue('--experimental-default-type');\x0d\n  /** @type {string} */\x0d\n  let mainPath;\x0d\n  if (defaultType === 'module') {\x0d\n    if (getOptionValue('--preserve-symlinks-main')) { return; }\x0d\n    mainPath = path.resolve(main);\x0d\n  } else {\x0d\n    // Extension searching for the main entry point is supported only in legacy mode.\x0d\n    // Module._findPath is monkey-patchable here.\x0d\n    const { Module } = require('internal/modules/cjs/loader');\x0d\n    mainPath = Module._findPath(path.resolve(main)\x2C null\x2C true);\x0d\n  }\x0d\n  if (!mainPath) { return; }\x0d\n\x0d\n  const preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\n  if (!preserveSymlinksMain) {\x0d\n    const { toRealPath } = require('internal/modules/helpers');\x0d\n    try {\x0d\n      mainPath = toRealPath(mainPath);\x0d\n    } catch (err) {\x0d\n      if (defaultType === 'module' && err?.code === 'ENOENT') {\x0d\n        const { decorateErrorWithCommonJSHints } = require('internal/modules/esm/resolve');\x0d\n        const { getCWDURL } = require('internal/util');\x0d\n        decorateErrorWithCommonJSHints(err\x2C mainPath\x2C getCWDURL());\x0d\n      }\x0d\n      throw err;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return mainPath;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether the main entry point should be loaded through the ESM Loader.\x0d\n * @param {string} mainPath - Absolute path to the main entry point\x0d\n */\x0d\nfunction shouldUseESMLoader(mainPath) {\x0d\n  if (getOptionValue('--experimental-default-type') === 'module') { return true; }\x0d\n\x0d\n  /**\x0d\n   * @type {string[]} userLoaders A list of custom loaders registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userLoaders = getOptionValue('--experimental-loader');\x0d\n  /**\x0d\n   * @type {string[]} userImports A list of preloaded modules registered by the user\x0d\n   * (or an empty list when none have been registered).\x0d\n   */\x0d\n  const userImports = getOptionValue('--import');\x0d\n  if (userLoaders.length > 0 || userImports.length > 0) { return true; }\x0d\n\x0d\n  // Determine the module format of the entry point.\x0d\n  if (mainPath && StringPrototypeEndsWith(mainPath\x2C '.mjs')) { return true; }\x0d\n  if (!mainPath || StringPrototypeEndsWith(mainPath\x2C '.cjs')) { return false; }\x0d\n\x0d\n  const { readPackageScope } = require('internal/modules/package_json_reader');\x0d\n  const pkg = readPackageScope(mainPath);\x0d\n  // No need to guard `pkg` as it can only be an object or `false`.\x0d\n  switch (pkg.data?.type) {\x0d\n    case 'module':\x0d\n      return true;\x0d\n    case 'commonjs':\x0d\n      return false;\x0d\n    default: { // No package.json or no `type` field.\x0d\n      if (getOptionValue('--experimental-detect-module')) {\x0d\n        // If the first argument of `containsModuleSyntax` is undefined\x2C it will read `mainPath` from the file system.\x0d\n        return containsModuleSyntax(undefined\x2C mainPath);\x0d\n      }\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Run the main entry point through the ESM Loader.\x0d\n * @param {string} mainPath - Absolute path for the main entry point\x0d\n */\x0d\nfunction runMainESM(mainPath) {\x0d\n  const { loadESM } = require('internal/process/esm_loader');\x0d\n  const { pathToFileURL } = require('internal/url');\x0d\n  const main = pathToFileURL(mainPath).href;\x0d\n\x0d\n  handleMainPromise(loadESM((esmLoader) => {\x0d\n    return esmLoader.import(main\x2C undefined\x2C { __proto__: null });\x0d\n  }));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Handle process exit events around the main entry point promise.\x0d\n * @param {Promise} promise - Main entry point promise\x0d\n */\x0d\nasync function handleMainPromise(promise) {\x0d\n  const {\x0d\n    handleProcessExit\x2C\x0d\n  } = require('internal/modules/esm/handle_process_exit');\x0d\n  process.on('exit'\x2C handleProcessExit);\x0d\n  try {\x0d\n    return await promise;\x0d\n  } finally {\x0d\n    process.off('exit'\x2C handleProcessExit);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Parse the CLI main entry point string and run it.\x0d\n * For backwards compatibility\x2C we have to run a bunch of monkey-patchable code that belongs to the CJS loader (exposed\x0d\n * by `require('module')`) even when the entry point is ESM.\x0d\n * This monkey-patchable code is bypassed under `--experimental-default-type=module`.\x0d\n * Because of backwards compatibility\x2C this function is exposed publicly via `import { runMain } from 'node:module'`.\x0d\n * @param {string} main - First positional CLI argument\x2C such as `'entry.js'` from `node entry.js`\x0d\n */\x0d\nfunction executeUserEntryPoint(main = process.argv[1]) {\x0d\n  const resolvedMain = resolveMainPath(main);\x0d\n  const useESMLoader = shouldUseESMLoader(resolvedMain);\x0d\n  if (useESMLoader) {\x0d\n    runMainESM(resolvedMain || main);\x0d\n  } else {\x0d\n    // Module._load is the monkey-patchable CJS module loader.\x0d\n    const { Module } = require('internal/modules/cjs/loader');\x0d\n    Module._load(main\x2C null\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  executeUserEntryPoint\x2C\x0d\n  handleMainPromise\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8e4a16,69,4646,5024,C7O4662C14O4666C22O4697C25O4697C30O4744C33O4744C38O4781C40O4806C45O4817C50O4806C56O4940C62O4940C67O4929C72O4992C87O4992C93O5023,,
code-creation,JS,10,149527,0x1c66f8e51d6,248,resolveMainPath node:internal/modules/run_main:15:25,0x220dba813f8,~
code-source-info,0x1c66f8e51d6,69,358,1524,C0O390C8O390C13O469C15O482C17O498C22O519C30O523C36O569C37O576C38O584C43O600C48O600C56O789C62O789C67O778C72O852C79O862C82O867C87O867C100O852C106O903C110O920C111O927C112O964C120O964C125O1011C127O1068C133O1068C138O1053C146O1134C154O1132C164O1184C166O1200C176O1219C186O1226C191O1294C199O1294C204O1259C209O1366C217O1366C222O1352C227O1401C230O1447C237O1401C242O1477C244O1477C245O1505C247O1521,,
code-creation,JS,10,149812,0x1c66f8e579e,889,Module._findPath node:internal/modules/cjs/loader:609:28,0x3fcdefbc7c8,~
code-source-info,0x1c66f8e579e
code-creation,JS,10,150062,0x1c66f8e5dee,109,isAbsolute node:path:406:13,0x3fcdef9f450,~
code-source-info,0x1c66f8e5dee,30,13207,13626,C0O13221C8O13221C13O13273C18O13286C19O13294C24O13308C25O13321C26O13342C33O13342C39O13383C42O13390C50O13458C58O13472C66O13508C72O13508C80O13547C82O13543C92O13584C98O13584C104O13568C108O13621,,
code-creation,JS,10,150179,0x1c66f8e5fde,85,stat node:internal/modules/cjs/loader:184:14,0x3fcdefbbf08,~
code-source-info,0x1c66f8e5fde,63,5279,5692,C0O5295C5O5311C10O5311C17O5342C23O5388C28O5398C33O5398C39O5418C41O5446C43O5460C44O5486C49O5486C54O5519C61O5552C66O5634C71O5644C76O5644C82O5675C84O5689,,
code-creation,JS,10,150283,0x1c66f8e620e,232,toNamespacedPath node:path:622:19,0x3fcdef9f540,~
code-source-info,0x1c66f8e620e,30,20189,21304,C0O20255C6O20292C12O20299C17O20313C19O20325C20O20354C25O20360C30O20360C36O20399C43O20406C48O20419C50O20431C51O20439C58O20443C66O20490C68O20486C73O20548C81O20552C89O20599C91O20595C96O20644C104O20644C110O20697C112O20710C114O20706C121O20741C123O20737C128O20841C133O20863C139O20863C148O20903C151O20936C156O20968C161O20968C167O20948C175O21022C181O21022C189O21069C191O21065C198O21090C204O21090C212O21137C214O21133C219O21240C224O21257C228O21272C229O21287C231O21299,,
code-creation,JS,10,150560,0x1c66f8e648e,42,toRealPath node:internal/modules/helpers:57:20,0x3fcdefbd8a8,~
code-source-info,0x1c66f8e648e,64,1751,1868,C0O1770C5O1780C10O1793C17O1814C20O1825C28O1844C35O1780C41O1865,,
code-creation,JS,10,150968,0x1c66f8e685e,963,realpathSync node:fs:2625:22,0x3fcdefb6128,~
script-source,56,node:fs,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// Maintainers\x2C keep in mind that ES1-style octal literals (`0666`) are not\x0d\n// allowed in strict mode. Use ES6-style octal literals instead (`0o666`).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  BigIntPrototypeToString\x2C\x0d\n  Boolean\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Promise\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  S_IFIFO\x2C\x0d\n  S_IFLNK\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n  S_IFSOCK\x2C\x0d\n  F_OK\x2C\x0d\n  R_OK\x2C\x0d\n  W_OK\x2C\x0d\n  X_OK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  O_SYMLINK\x2C\x0d\n} = constants;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst { isAbsolute } = pathModule;\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\n\x0d\nconst { createBlobFromFilePath } = require('internal/blob');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { isBuffer: BufferIsBuffer } = Buffer;\x0d\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_ACCESS_DENIED\x2C\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  UVException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  FSReqCallback\x2C\x0d\n  statValues\x2C\x0d\n} = binding;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  customPromisifyArgs: kCustomPromisifyArgsSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  promisify: {\x0d\n    custom: kCustomPromisifiedSymbol\x2C\x0d\n  }\x2C\x0d\n  SideEffectFreeRegExpPrototypeExec\x2C\x0d\n  defineLazyProperties\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  Stats\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  realpathCacheKey\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n} = require('internal/constants');\x0d\nconst {\x0d\n  isInt32\x2C\x0d\n  parseFileMode\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\nlet truncateWarn = true;\x0d\nlet fs;\x0d\n\x0d\n// Lazy loaded\x0d\nlet cpFn;\x0d\nlet cpSyncFn;\x0d\nlet promises = null;\x0d\nlet ReadStream;\x0d\nlet WriteStream;\x0d\nlet rimraf;\x0d\nlet rimrafSync;\x0d\nlet kResistStopPropagation;\x0d\n\x0d\n// These have to be separate because of how graceful-fs happens to do it's\x0d\n// monkeypatching.\x0d\nlet FileReadStream;\x0d\nlet FileWriteStream;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\nfunction showTruncateDeprecation() {\x0d\n  if (truncateWarn) {\x0d\n    process.emitWarning(\x0d\n      'Using fs.truncate with a file descriptor is deprecated. Please use ' +\x0d\n      'fs.ftruncate with a file descriptor instead.'\x2C\x0d\n      'DeprecationWarning'\x2C 'DEP0081');\x0d\n    truncateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return cb;\x0d\n}\x0d\n\x0d\n// Ensure that callbacks run in the global context. Only use this function\x0d\n// for callbacks that are passed to the binding layer\x2C callbacks that are\x0d\n// invoked from JS already run in the proper scope.\x0d\nfunction makeCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (...args) => ReflectApply(cb\x2C this\x2C args);\x0d\n}\x0d\n\x0d\n// Special case of `makeCallback()` that is specific to async `*stat()` calls as\x0d\n// an optimization\x2C since the data passed back to the callback needs to be\x0d\n// transformed anyway.\x0d\nfunction makeStatsCallback(cb) {\x0d\n  validateFunction(cb\x2C 'cb');\x0d\n\x0d\n  return (err\x2C stats) => {\x0d\n    if (err) return cb(err);\x0d\n    cb(err\x2C getStatsFromBinding(stats));\x0d\n  };\x0d\n}\x0d\n\x0d\nconst isFd = isInt32;\x0d\n\x0d\nfunction isFileType(stats\x2C fileType) {\x0d\n  // Use stats array directly to avoid creating an fs.Stats instance just for\x0d\n  // our internal use.\x0d\n  let mode = stats[1];\x0d\n  if (typeof mode === 'bigint')\x0d\n    mode = Number(mode);\x0d\n  return (mode & S_IFMT) === fileType;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests a user's permissions for the file or directory\x0d\n * specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction access(path\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = F_OK;\x0d\n  }\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously tests a user's permissions for the file or\x0d\n * directory specified by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction accessSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n\x0d\n  binding.access(pathModule.toNamespacedPath(path)\x2C mode);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(exists?: boolean) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction exists(path\x2C callback) {\x0d\n  maybeCallback(callback);\x0d\n\x0d\n  function suppressedCallback(err) {\x0d\n    callback(err ? false : true);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    fs.access(path\x2C F_OK\x2C suppressedCallback);\x0d\n  } catch {\x0d\n    return callback(false);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(exists\x2C kCustomPromisifiedSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function exists(path) { // eslint-disable-line func-name-matching\x0d\n    return new Promise((resolve) => fs.exists(path\x2C resolve));\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// fs.existsSync never throws\x2C it only returns true or false.\x0d\n// Since fs.existsSync never throws\x2C users have established\x0d\n// the expectation that passing invalid arguments to it\x2C even like\x0d\n// fs.existsSync()\x2C would only get a false in return\x2C so we cannot signal\x0d\n// validation errors to users properly out of compatibility concerns.\x0d\n// TODO(joyeecheung): deprecate the never-throw-on-invalid-arguments behavior\x0d\n/**\x0d\n * Synchronously tests whether or not the given path exists.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction existsSync(path) {\x0d\n  try {\x0d\n    path = getValidatedPath(path);\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return binding.existsSync(pathModule.toNamespacedPath(path));\x0d\n}\x0d\n\x0d\nfunction readFileAfterOpen(err\x2C fd) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err) {\x0d\n    context.callback(err);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  context.fd = fd;\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = readFileAfterStat;\x0d\n  req.context = context;\x0d\n  binding.fstat(fd\x2C false\x2C req);\x0d\n}\x0d\n\x0d\nfunction readFileAfterStat(err\x2C stats) {\x0d\n  const context = this.context;\x0d\n\x0d\n  if (err)\x0d\n    return context.close(err);\x0d\n\x0d\n  // TODO(BridgeAR): Check if allocating a smaller chunk is better performance\x0d\n  // wise\x2C similar to the promise based version (less peak memory and chunked\x0d\n  // stringify operations vs multiple C++/JS boundary crossings).\x0d\n  const size = context.size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n\x0d\n  if (size > kIoMaxLength) {\x0d\n    err = new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    return context.close(err);\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    if (size === 0) {\x0d\n      // TODO(BridgeAR): If an encoding is set\x2C use the StringDecoder to concat\x0d\n      // the result and reuse the buffer instead of allocating a new one.\x0d\n      context.buffers = [];\x0d\n    } else {\x0d\n      context.buffer = Buffer.allocUnsafeSlow(size);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    return context.close(err);\x0d\n  }\x0d\n  context.read();\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    callback(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   data?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readFile(path\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const ReadFileContext = require('internal/fs/read/context');\x0d\n  const context = new ReadFileContext(callback\x2C options.encoding);\x0d\n  context.isUserFd = isFd(path); // File descriptor ownership\x0d\n\x0d\n  if (options.signal) {\x0d\n    context.signal = options.signal;\x0d\n  }\x0d\n  if (context.isUserFd) {\x0d\n    process.nextTick(function tick(context) {\x0d\n      ReflectApply(readFileAfterOpen\x2C { context }\x2C [null\x2C path]);\x0d\n    }\x2C context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  const flagsNumber = stringToFlags(options.flag\x2C 'options.flag');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.context = context;\x0d\n  req.oncomplete = readFileAfterOpen;\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               0o666\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\nfunction tryStatSync(fd\x2C isUserFd) {\x0d\n  const stats = binding.fstat(fd\x2C false\x2C undefined\x2C true /* shouldNotThrow */);\x0d\n  if (stats === undefined && !isUserFd) {\x0d\n    fs.closeSync(fd);\x0d\n    throw new UVException();\x0d\n  }\x0d\n  return stats;\x0d\n}\x0d\n\x0d\nfunction tryCreateBuffer(size\x2C fd\x2C isUserFd) {\x0d\n  let threw = true;\x0d\n  let buffer;\x0d\n  try {\x0d\n    if (size > kIoMaxLength) {\x0d\n      throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n    }\x0d\n    buffer = Buffer.allocUnsafe(size);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C len) {\x0d\n  let threw = true;\x0d\n  let bytesRead;\x0d\n  try {\x0d\n    bytesRead = fs.readSync(fd\x2C buffer\x2C pos\x2C len);\x0d\n    threw = false;\x0d\n  } finally {\x0d\n    if (threw && !isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n  return bytesRead;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the entire contents of a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   flag?: string;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readFileSync(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n\x0d\n  if (options.encoding === 'utf8' || options.encoding === 'utf-8') {\x0d\n    if (!isInt32(path)) {\x0d\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n    }\x0d\n    return binding.readFileUtf8(path\x2C stringToFlags(options.flag));\x0d\n  }\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C options.flag\x2C 0o666);\x0d\n\x0d\n  const stats = tryStatSync(fd\x2C isUserFd);\x0d\n  const size = isFileType(stats\x2C S_IFREG) ? stats[8] : 0;\x0d\n  let pos = 0;\x0d\n  let buffer; // Single buffer with file data\x0d\n  let buffers; // List for when size is unknown\x0d\n\x0d\n  if (size === 0) {\x0d\n    buffers = [];\x0d\n  } else {\x0d\n    buffer = tryCreateBuffer(size\x2C fd\x2C isUserFd);\x0d\n  }\x0d\n\x0d\n  let bytesRead;\x0d\n\x0d\n  if (size !== 0) {\x0d\n    do {\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C pos\x2C size - pos);\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0 && pos < size);\x0d\n  } else {\x0d\n    do {\x0d\n      // The kernel lies about many files.\x0d\n      // Go ahead and try to read some bytes.\x0d\n      buffer = Buffer.allocUnsafe(8192);\x0d\n      bytesRead = tryReadSync(fd\x2C isUserFd\x2C buffer\x2C 0\x2C 8192);\x0d\n      if (bytesRead !== 0) {\x0d\n        ArrayPrototypePush(buffers\x2C buffer.slice(0\x2C bytesRead));\x0d\n      }\x0d\n      pos += bytesRead;\x0d\n    } while (bytesRead !== 0);\x0d\n  }\x0d\n\x0d\n  if (!isUserFd)\x0d\n    fs.closeSync(fd);\x0d\n\x0d\n  if (size === 0) {\x0d\n    // Data was collected into the buffers list.\x0d\n    buffer = Buffer.concat(buffers\x2C pos);\x0d\n  } else if (pos < size) {\x0d\n    buffer = buffer.slice(0\x2C pos);\x0d\n  }\x0d\n\x0d\n  if (options.encoding) buffer = buffer.toString(options.encoding);\x0d\n  return buffer;\x0d\n}\x0d\n\x0d\nfunction defaultCloseCallback(err) {\x0d\n  if (err != null) throw err;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} [callback]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction close(fd\x2C callback = defaultCloseCallback) {\x0d\n  if (callback !== defaultCloseCallback)\x0d\n    callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.close(getValidatedFd(fd)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously closes the file descriptor.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction closeSync(fd) {\x0d\n  binding.close(getValidatedFd(fd));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   fd?: number\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction open(path\x2C flags\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  if (arguments.length < 3) {\x0d\n    callback = flags;\x0d\n    flags = 'r';\x0d\n    mode = 0o666;\x0d\n  } else if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0o666;\x0d\n  } else {\x0d\n    mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  }\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.open(pathModule.toNamespacedPath(path)\x2C\x0d\n               flagsNumber\x2C\x0d\n               mode\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously opens a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} [flags]\x0d\n * @param {string | number} [mode]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction openSync(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  return binding.open(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    stringToFlags(flags)\x2C\x0d\n    parseFileMode(mode\x2C 'mode'\x2C 0o666)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string | Buffer | URL } path\x0d\n * @param {{\x0d\n *   type?: string;\x0d\n *   }} [options]\x0d\n * @returns {Promise<Blob>}\x0d\n */\x0d\nfunction openAsBlob(path\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const type = options.type || '';\x0d\n  validateString(type\x2C 'options.type');\x0d\n  // The underlying implementation here returns the Blob synchronously for now.\x0d\n  // To give ourselves flexibility to maybe return the Blob asynchronously\x2C\x0d\n  // this API returns a Promise.\x0d\n  path = getValidatedPath(path);\x0d\n  return PromiseResolve(createBlobFromFilePath(pathModule.toNamespacedPath(path)\x2C { type }));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {number} offsetOrOptions\x0d\n * @param {number} length\x0d\n * @param {number | bigint | null} position\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffer?: Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction read(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  let params = null;\x0d\n  if (arguments.length <= 4) {\x0d\n    if (arguments.length === 4) {\x0d\n      // This is fs.read(fd\x2C buffer\x2C options\x2C callback)\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n      callback = length;\x0d\n      params = offsetOrOptions;\x0d\n    } else if (arguments.length === 3) {\x0d\n      // This is fs.read(fd\x2C bufferOrParams\x2C callback)\x0d\n      if (!isArrayBufferView(buffer)) {\x0d\n        // This is fs.read(fd\x2C params\x2C callback)\x0d\n        params = buffer;\x0d\n        ({ buffer = Buffer.alloc(16384) } = params ?? kEmptyObject);\x0d\n      }\x0d\n      callback = offsetOrOptions;\x0d\n    } else {\x0d\n      // This is fs.read(fd\x2C callback)\x0d\n      callback = buffer;\x0d\n      buffer = Buffer.alloc(16384);\x0d\n    }\x0d\n\x0d\n    if (params !== undefined) {\x0d\n      validateObject(params\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer?.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = params ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n  callback = maybeCallback(callback);\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return process.nextTick(function tick() {\x0d\n      callback(null\x2C 0\x2C buffer);\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  function wrapper(err\x2C bytesRead) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C bytesRead || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(read\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads the file from the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | bigint | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (arguments.length <= 3 || typeof offsetOrOptions === 'object') {\x0d\n    if (offsetOrOptions !== undefined) {\x0d\n      validateObject(offsetOrOptions\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offsetOrOptions ?? kEmptyObject);\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length |= 0;\x0d\n\x0d\n  if (length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (position == null)\x0d\n    position = -1;\x0d\n\x0d\n  validatePosition(position\x2C 'position');\x0d\n\x0d\n  return binding.read(fd\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads file from the specified `fd` (file descriptor)\x0d\n * and writes to an array of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesRead?: number\x2C\x0d\n *   buffers?: ArrayBufferView[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readv(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C read) {\x0d\n    callback(err\x2C read || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  binding.readBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(readv\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesRead'\x2C 'buffers']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously reads file from the\x0d\n * specified `fd` (file descriptor) and writes to an array\x0d\n * of `ArrayBufferView`s.\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction readvSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.readBuffers(fd\x2C buffers\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes `buffer` to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {number | object} [offsetOrOptions]\x0d\n * @param {number} [length]\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number;\x0d\n *   buffer?: Buffer | TypedArray | DataView\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction write(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    // Retain a reference to buffer so that it can't be GC'ed too soon.\x0d\n    callback(err\x2C written || 0\x2C buffer);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    callback = maybeCallback(callback || position || length || offset);\x0d\n\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null || typeof offset === 'function') {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = wrapper;\x0d\n    binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C req);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n\x0d\n  if (typeof position !== 'function') {\x0d\n    if (typeof offset === 'function') {\x0d\n      position = offset;\x0d\n      offset = null;\x0d\n    } else {\x0d\n      position = length;\x0d\n    }\x0d\n    length = 'utf8';\x0d\n  }\x0d\n\x0d\n  const str = buffer;\x0d\n  validateEncoding(str\x2C length);\x0d\n  callback = maybeCallback(position);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n  binding.writeString(fd\x2C str\x2C offset\x2C length\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(write\x2C kCustomPromisifyArgsSymbol\x2C\x0d\n                     { __proto__: null\x2C value: ['bytesWritten'\x2C 'buffer']\x2C enumerable: false });\x0d\n\x0d\n/**\x0d\n * Synchronously writes `buffer` to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {Buffer | TypedArray | DataView | string} buffer\x0d\n * @param {{\x0d\n *   offset?: number;\x0d\n *   length?: number;\x0d\n *   position?: number | null;\x0d\n *   }} [offsetOrOptions]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writeSync(fd\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  const ctx = {};\x0d\n  let result;\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n    if (position === undefined)\x0d\n      position = null;\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    result = binding.writeBuffer(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  } else {\x0d\n    validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n    validateEncoding(buffer\x2C length);\x0d\n\x0d\n    if (offset === undefined)\x0d\n      offset = null;\x0d\n    result = binding.writeString(fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                 undefined\x2C ctx);\x0d\n  }\x0d\n  handleErrorFromBinding(ctx);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Writes an array of `ArrayBufferView`s to the\x0d\n * specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   bytesWritten?: number\x2C\x0d\n *   buffers?: ArrayBufferView[]\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writev(fd\x2C buffers\x2C position\x2C callback) {\x0d\n  function wrapper(err\x2C written) {\x0d\n    callback(err\x2C written || 0\x2C buffers);\x0d\n  }\x0d\n\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n  callback = maybeCallback(callback || position);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    process.nextTick(callback\x2C null\x2C 0\x2C buffers);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = wrapper;\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  binding.writeBuffers(fd\x2C buffers\x2C position\x2C req);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(writev\x2C kCustomPromisifyArgsSymbol\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: ['bytesWritten'\x2C 'buffer']\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Synchronously writes an array of `ArrayBufferView`s\x0d\n * to the specified `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {ArrayBufferView[]} buffers\x0d\n * @param {number | null} [position]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction writevSync(fd\x2C buffers\x2C position) {\x0d\n  fd = getValidatedFd(fd);\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  return binding.writeBuffers(fd\x2C buffers\x2C position);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rename(oldPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                 pathModule.toNamespacedPath(newPath)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Synchronously renames file at `oldPath` to\x0d\n * the pathname provided as `newPath`.\x0d\n * @param {string | Buffer | URL} oldPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction renameSync(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  binding.rename(\x0d\n    pathModule.toNamespacedPath(oldPath)\x2C\x0d\n    pathModule.toNamespacedPath(newPath)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncate(path\x2C len\x2C callback) {\x0d\n  if (typeof path === 'number') {\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncate(path\x2C len\x2C callback);\x0d\n  }\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  } else if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = maybeCallback(callback);\x0d\n  fs.open(path\x2C 'r+'\x2C (er\x2C fd) => {\x0d\n    if (er) return callback(er);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = function oncomplete(er) {\x0d\n      fs.close(fd\x2C (er2) => {\x0d\n        callback(aggregateTwoErrors(er2\x2C er));\x0d\n      });\x0d\n    };\x0d\n    binding.ftruncate(fd\x2C len\x2C req);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction truncateSync(path\x2C len) {\x0d\n  if (typeof path === 'number') {\x0d\n    // legacy\x0d\n    showTruncateDeprecation();\x0d\n    return fs.ftruncateSync(path\x2C len);\x0d\n  }\x0d\n  if (len === undefined) {\x0d\n    len = 0;\x0d\n  }\x0d\n  // Allow error to be thrown\x2C but still close fd.\x0d\n  const fd = fs.openSync(path\x2C 'r+');\x0d\n  let ret;\x0d\n\x0d\n  try {\x0d\n    ret = fs.ftruncateSync(fd\x2C len);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncate(fd\x2C len = 0\x2C callback) {\x0d\n  if (typeof len === 'function') {\x0d\n    callback = len;\x0d\n    len = 0;\x0d\n  }\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.ftruncate(fd\x2C len\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously truncates the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {number} [len]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction ftruncateSync(fd\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  binding.ftruncate(fd\x2C len);\x0d\n}\x0d\n\x0d\nfunction lazyLoadCp() {\x0d\n  if (cpFn === undefined) {\x0d\n    ({ cpFn } = require('internal/fs/cp/cp'));\x0d\n    cpFn = require('util').callbackify(cpFn);\x0d\n    ({ cpSyncFn } = require('internal/fs/cp/cp-sync'));\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction lazyLoadRimraf() {\x0d\n  if (rimraf === undefined)\x0d\n    ({ rimraf\x2C rimrafSync } = require('internal/fs/rimraf'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdir(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n\x0d\n  callback = makeCallback(callback);\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    validateRmOptions(\x0d\n      path\x2C\x0d\n      { ...options\x2C force: false }\x2C\x0d\n      true\x2C\x0d\n      (err\x2C options) => {\x0d\n        if (err === false) {\x0d\n          const req = new FSReqCallback();\x0d\n          req.oncomplete = callback;\x0d\n          binding.rmdir(path\x2C req);\x0d\n          return;\x0d\n        }\x0d\n        if (err) {\x0d\n          return callback(err);\x0d\n        }\x0d\n\x0d\n        lazyLoadRimraf();\x0d\n        rimraf(path\x2C options\x2C callback);\x0d\n      });\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    binding.rmdir(path\x2C req);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmdirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (options?.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    options = validateRmOptionsSync(path\x2C { ...options\x2C force: false }\x2C true);\x0d\n    if (options !== false) {\x0d\n      lazyLoadRimraf();\x0d\n      return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n    }\x0d\n  } else {\x0d\n    validateRmdirOptions(options);\x0d\n  }\x0d\n\x0d\n  binding.rmdir(pathModule.toNamespacedPath(path));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rm(path\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateRmOptions(path\x2C options\x2C false\x2C (err\x2C options) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n    lazyLoadRimraf();\x0d\n    return rimraf(pathModule.toNamespacedPath(path)\x2C options\x2C callback);\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes files and\x0d\n * directories (modeled on the standard POSIX `rm` utility).\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   force?: boolean;\x0d\n *   maxRetries?: number;\x0d\n *   recursive?: boolean;\x0d\n *   retryDelay?: number;\x0d\n *   }} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction rmSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = validateRmOptionsSync(path\x2C options\x2C false);\x0d\n\x0d\n  lazyLoadRimraf();\x0d\n  return rimrafSync(pathModule.toNamespacedPath(path)\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Forces all currently queued I/O operations associated\x0d\n * with the file to the operating system's synchronized\x0d\n * I/O completion state.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasync(fd\x2C callback) {\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fdatasync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously forces all currently queued I/O operations\x0d\n * associated with the file to the operating\x0d\n * system's synchronized I/O completion state.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fdatasyncSync(fd) {\x0d\n  binding.fdatasync(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Requests for all data for the open file descriptor\x0d\n * to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsync(fd\x2C callback) {\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = makeCallback(callback);\x0d\n  binding.fsync(fd\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously requests for all data for the open\x0d\n * file descriptor to be flushed to the storage device.\x0d\n * @param {number} fd\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fsyncSync(fd) {\x0d\n  binding.fsync(fd);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdir(path\x2C options\x2C callback) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n  } else if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                parseFileMode(mode\x2C 'mode')\x2C recursive\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   recursive?: boolean;\x0d\n *   mode?: string | number;\x0d\n *   } | number} [options]\x0d\n * @returns {string | void}\x0d\n */\x0d\nfunction mkdirSync(path\x2C options) {\x0d\n  let mode = 0o777;\x0d\n  let recursive = false;\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    mode = options;\x0d\n  } else if (options) {\x0d\n    if (options.recursive !== undefined)\x0d\n      recursive = options.recursive;\x0d\n    if (options.mode !== undefined)\x0d\n      mode = options.mode;\x0d\n  }\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  const result = binding.mkdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    parseFileMode(mode\x2C 'mode')\x2C\x0d\n    recursive\x2C\x0d\n  );\x0d\n\x0d\n  if (recursive) {\x0d\n    return result;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * An iterative algorithm for reading the entire contents of the `basePath` directory.\x0d\n * This function does not validate `basePath` as a directory. It is passed directly to\x0d\n * `binding.readdir`.\x0d\n * @param {string} basePath\x0d\n * @param {{ encoding: string\x2C withFileTypes: boolean }} options\x0d\n * @returns {string[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSyncRecursive(basePath\x2C options) {\x0d\n  const withFileTypes = Boolean(options.withFileTypes);\x0d\n  const encoding = options.encoding;\x0d\n\x0d\n  const readdirResults = [];\x0d\n  const pathsQueue = [basePath];\x0d\n\x0d\n  function read(path) {\x0d\n    const readdirResult = binding.readdir(\x0d\n      pathModule.toNamespacedPath(path)\x2C\x0d\n      encoding\x2C\x0d\n      withFileTypes\x2C\x0d\n    );\x0d\n\x0d\n    if (readdirResult === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (withFileTypes) {\x0d\n      // Calling `readdir` with `withFileTypes=true`\x2C the result is an array of arrays.\x0d\n      // The first array is the names\x2C and the second array is the types.\x0d\n      // They are guaranteed to be the same length; hence\x2C setting `length` to the length\x0d\n      // of the first array within the result.\x0d\n      const length = readdirResult[0].length;\x0d\n      for (let i = 0; i < length; i++) {\x0d\n        const dirent = getDirent(path\x2C readdirResult[0][i]\x2C readdirResult[1][i]);\x0d\n        ArrayPrototypePush(readdirResults\x2C dirent);\x0d\n        if (dirent.isDirectory()) {\x0d\n          ArrayPrototypePush(pathsQueue\x2C pathModule.join(dirent.parentPath\x2C dirent.name));\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (let i = 0; i < readdirResult.length; i++) {\x0d\n        const resultPath = pathModule.join(path\x2C readdirResult[i]);\x0d\n        const relativeResultPath = pathModule.relative(basePath\x2C resultPath);\x0d\n        const stat = binding.internalModuleStat(resultPath);\x0d\n        ArrayPrototypePush(readdirResults\x2C relativeResultPath);\x0d\n        // 1 indicates directory\x0d\n        if (stat === 1) {\x0d\n          ArrayPrototypePush(pathsQueue\x2C resultPath);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  for (let i = 0; i < pathsQueue.length; i++) {\x0d\n    read(pathsQueue[i]);\x0d\n  }\x0d\n\x0d\n  return readdirResults;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   files?: string[] | Buffer[] | Dirent[];\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readdir(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  }\x0d\n\x0d\n  if (options.recursive) {\x0d\n    callback(null\x2C readdirSyncRecursive(path\x2C options));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  if (!options.withFileTypes) {\x0d\n    req.oncomplete = callback;\x0d\n  } else {\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      if (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      getDirents(path\x2C result\x2C callback);\x0d\n    };\x0d\n  }\x0d\n  binding.readdir(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C\x0d\n                  !!options.withFileTypes\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a directory.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   encoding?: string;\x0d\n *   withFileTypes?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {string | Buffer[] | Dirent[]}\x0d\n */\x0d\nfunction readdirSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  }\x0d\n\x0d\n  if (options.recursive) {\x0d\n    return readdirSyncRecursive(path\x2C options);\x0d\n  }\x0d\n\x0d\n  const result = binding.readdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n    !!options.withFileTypes\x2C\x0d\n  );\x0d\n\x0d\n  return result !== undefined && options.withFileTypes ? getDirents(path\x2C result) : result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Invokes the callback with the `fs.Stats`\x0d\n * for the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fstat(fd\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.fstat(fd\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the `fs.Stats` for the symbolic link\x0d\n * referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lstat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.lstat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously gets the stats of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ bigint?: boolean; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   stats?: Stats\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction stat(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = makeStatsCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = callback;\x0d\n  binding.stat(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\nfunction statfs(path\x2C options = { bigint: false }\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  }\x0d\n  callback = maybeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback(options.bigint);\x0d\n  req.oncomplete = (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      return callback(err);\x0d\n    }\x0d\n\x0d\n    callback(err\x2C getStatFsFromBinding(stats));\x0d\n  };\x0d\n  binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the file descriptor.\x0d\n * @param {number} fd\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats | undefined}\x0d\n */\x0d\nfunction fstatSync(fd\x2C options = { bigint: false }) {\x0d\n  const stats = binding.fstat(fd\x2C options.bigint\x2C undefined\x2C false);\x0d\n  if (stats === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats` for\x0d\n * the symbolic link referred to by the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats | undefined}\x0d\n */\x0d\nfunction lstatSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.lstat(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.bigint\x2C\x0d\n    undefined\x2C\x0d\n    options.throwIfNoEntry\x2C\x0d\n  );\x0d\n\x0d\n  if (stats === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously retrieves the `fs.Stats`\x0d\n * for the `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   throwIfNoEntry?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {Stats}\x0d\n */\x0d\nfunction statSync(path\x2C options = { bigint: false\x2C throwIfNoEntry: true }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.stat(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.bigint\x2C\x0d\n    undefined\x2C\x0d\n    options.throwIfNoEntry\x2C\x0d\n  );\x0d\n  if (stats === undefined) {\x0d\n    return undefined;\x0d\n  }\x0d\n  return getStatsFromBinding(stats);\x0d\n}\x0d\n\x0d\nfunction statfsSync(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const stats = binding.statfs(pathModule.toNamespacedPath(path)\x2C options.bigint);\x0d\n  return getStatFsFromBinding(stats);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   linkString?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction readlink(path\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.readlink(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously reads the contents of a symbolic link\x0d\n * referred to by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {{ encoding?: string; } | string} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction readlinkSync(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates the link called `path` pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type_]\x0d\n * @param {(err?: Error) => any} callback_\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlink(target\x2C path\x2C type_\x2C callback_) {\x0d\n  const type = (typeof type_ === 'string' ? type_ : null);\x0d\n  const callback = makeCallback(arguments[arguments.length - 1]);\x0d\n\x0d\n  if (permission.isEnabled()) {\x0d\n    // The permission model's security guarantees fall apart in the presence of\x0d\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\x0d\n    if (BufferIsBuffer(target)) {\x0d\n      if (!isAbsolute(BufferToString(target))) {\x0d\n        callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\x0d\n        return;\x0d\n      }\x0d\n    } else if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\x0d\n      callback(new ERR_ACCESS_DENIED('relative symbolic link target'));\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  if (isWindows && type === null) {\x0d\n    let absoluteTarget;\x0d\n    try {\x0d\n      // Symlinks targets can be relative to the newly created path.\x0d\n      // Calculate absolute file name of the symlink target\x2C and check\x0d\n      // if it is a directory. Ignore resolve error to keep symlink\x0d\n      // errors consistent between platforms if invalid path is\x0d\n      // provided.\x0d\n      absoluteTarget = pathModule.resolve(path\x2C '..'\x2C target);\x0d\n    } catch {\x0d\n      // Continue regardless of error.\x0d\n    }\x0d\n    if (absoluteTarget !== undefined) {\x0d\n      stat(absoluteTarget\x2C (err\x2C stat) => {\x0d\n        const resolvedType = !err && stat.isDirectory() ? 'dir' : 'file';\x0d\n        const resolvedFlags = stringToSymlinkType(resolvedType);\x0d\n        const destination = preprocessSymlinkDestination(target\x2C\x0d\n                                                         resolvedType\x2C\x0d\n                                                         path);\x0d\n\x0d\n        const req = new FSReqCallback();\x0d\n        req.oncomplete = callback;\x0d\n        binding.symlink(destination\x2C\x0d\n                        pathModule.toNamespacedPath(path)\x2C resolvedFlags\x2C req);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const destination = preprocessSymlinkDestination(target\x2C type\x2C path);\x0d\n\x0d\n  const flags = stringToSymlinkType(type);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.symlink(destination\x2C pathModule.toNamespacedPath(path)\x2C flags\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates the link called `path`\x0d\n * pointing to `target`.\x0d\n * @param {string | Buffer | URL} target\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | null} [type]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction symlinkSync(target\x2C path\x2C type) {\x0d\n  type = (typeof type === 'string' ? type : null);\x0d\n  if (isWindows && type === null) {\x0d\n    const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n    if (statSync(absoluteTarget\x2C { throwIfNoEntry: false })?.isDirectory()) {\x0d\n      type = 'dir';\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (permission.isEnabled()) {\x0d\n    // The permission model's security guarantees fall apart in the presence of\x0d\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\x0d\n    if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\x0d\n      throw new ERR_ACCESS_DENIED('relative symbolic link target');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  binding.symlink(\x0d\n    preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    stringToSymlinkType(type)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction link(existingPath\x2C newPath\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n\x0d\n  binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n               pathModule.toNamespacedPath(newPath)\x2C\x0d\n               req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a new link from the `existingPath`\x0d\n * to the `newPath`.\x0d\n * @param {string | Buffer | URL} existingPath\x0d\n * @param {string | Buffer | URL} newPath\x0d\n * @returns {void}\x0d\n */\x0d\nfunction linkSync(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n\x0d\n  binding.link(\x0d\n    pathModule.toNamespacedPath(existingPath)\x2C\x0d\n    pathModule.toNamespacedPath(newPath)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlink(path\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.unlink(pathModule.toNamespacedPath(path)\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously removes a file or symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unlinkSync(path) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  binding.unlink(path);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmod(fd\x2C mode\x2C callback) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchmod(fd\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the permissions on the file.\x0d\n * @param {number} fd\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchmodSync(fd\x2C mode) {\x0d\n  binding.fchmod(\x0d\n    fd\x2C\x0d\n    parseFileMode(mode\x2C 'mode')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmod(path\x2C mode\x2C callback) {\x0d\n  callback = maybeCallback(callback);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  fs.open(path\x2C O_WRONLY | O_SYMLINK\x2C (err\x2C fd) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n    // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n    // but still try to close\x2C and report closing errors if they occur.\x0d\n    fs.fchmod(fd\x2C mode\x2C (err) => {\x0d\n      fs.close(fd\x2C (err2) => {\x0d\n        callback(aggregateTwoErrors(err2\x2C err));\x0d\n      });\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions on a symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchmodSync(path\x2C mode) {\x0d\n  const fd = fs.openSync(path\x2C O_WRONLY | O_SYMLINK);\x0d\n\x0d\n  // Prefer to return the chmod error\x2C if one occurs\x2C\x0d\n  // but still try to close\x2C and report closing errors if they occur.\x0d\n  let ret;\x0d\n  try {\x0d\n    ret = fs.fchmodSync(fd\x2C mode);\x0d\n  } finally {\x0d\n    fs.closeSync(fd);\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmod(path\x2C mode\x2C callback) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the permissions of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | number} mode\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chmodSync(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n\x0d\n  binding.chmod(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    mode\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lchown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the symbolic link.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lchownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  binding.lchown(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    uid\x2C\x0d\n    gid\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchown(fd\x2C uid\x2C gid\x2C callback) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.fchown(getValidatedFd(fd)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously sets the owner of the file.\x0d\n * @param {number} fd\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction fchownSync(fd\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  binding.fchown(getValidatedFd(fd)\x2C uid\x2C gid);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chown(path\x2C uid\x2C gid\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.chown(pathModule.toNamespacedPath(path)\x2C uid\x2C gid\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the owner and group\x0d\n * of a file.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number} uid\x0d\n * @param {number} gid\x0d\n * @returns {void}\x0d\n */\x0d\nfunction chownSync(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  binding.chown(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    uid\x2C\x0d\n    gid\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                 toUnixTimestamp(atime)\x2C\x0d\n                 toUnixTimestamp(mtime)\x2C\x0d\n                 req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by `path`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction utimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  binding.utimes(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    toUnixTimestamp(atime)\x2C\x0d\n    toUnixTimestamp(mtime)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the file system timestamps of the object\x0d\n * referenced by the supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimes(fd\x2C atime\x2C mtime\x2C callback) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.futimes(fd\x2C atime\x2C mtime\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the file system timestamps\x0d\n * of the object referenced by the\x0d\n * supplied `fd` (file descriptor).\x0d\n * @param {number} fd\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction futimesSync(fd\x2C atime\x2C mtime) {\x0d\n  binding.futimes(\x0d\n    fd\x2C\x0d\n    toUnixTimestamp(atime\x2C 'atime')\x2C\x0d\n    toUnixTimestamp(mtime\x2C 'mtime')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Changes the access and modification times of\x0d\n * a file in the same way as `fs.utimes()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimes(path\x2C atime\x2C mtime\x2C callback) {\x0d\n  callback = makeCallback(callback);\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                  toUnixTimestamp(atime)\x2C\x0d\n                  toUnixTimestamp(mtime)\x2C\x0d\n                  req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously changes the access and modification\x0d\n * times of a file in the same way as `fs.utimesSync()`.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {number | string | Date} atime\x0d\n * @param {number | string | Date} mtime\x0d\n * @returns {void}\x0d\n */\x0d\nfunction lutimesSync(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  binding.lutimes(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    toUnixTimestamp(atime)\x2C\x0d\n    toUnixTimestamp(mtime)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback) {\x0d\n  if (signal?.aborted) {\x0d\n    const abortError = new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n    if (isUserFd) {\x0d\n      callback(abortError);\x0d\n    } else {\x0d\n      fs.close(fd\x2C (err) => {\x0d\n        callback(aggregateTwoErrors(err\x2C abortError));\x0d\n      });\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  // write(fd\x2C buffer\x2C offset\x2C length\x2C position\x2C callback)\x0d\n  fs.write(fd\x2C buffer\x2C offset\x2C length\x2C null\x2C (writeErr\x2C written) => {\x0d\n    if (writeErr) {\x0d\n      if (isUserFd) {\x0d\n        callback(writeErr);\x0d\n      } else {\x0d\n        fs.close(fd\x2C (err) => {\x0d\n          callback(aggregateTwoErrors(err\x2C writeErr));\x0d\n        });\x0d\n      }\x0d\n    } else if (written === length) {\x0d\n      if (!flush) {\x0d\n        if (isUserFd) {\x0d\n          callback(null);\x0d\n        } else {\x0d\n          fs.close(fd\x2C callback);\x0d\n        }\x0d\n      } else {\x0d\n        fs.fsync(fd\x2C (syncErr) => {\x0d\n          if (syncErr) {\x0d\n            if (isUserFd) {\x0d\n              callback(syncErr);\x0d\n            } else {\x0d\n              fs.close(fd\x2C (err) => {\x0d\n                callback(aggregateTwoErrors(err\x2C syncErr));\x0d\n              });\x0d\n            }\x0d\n          } else if (isUserFd) {\x0d\n            callback(null);\x0d\n          } else {\x0d\n            fs.close(fd\x2C callback);\x0d\n          }\x0d\n        });\x0d\n      }\x0d\n    } else {\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n      writeAll(fd\x2C isUserFd\x2C buffer\x2C offset\x2C length\x2C signal\x2C flush\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n  const flag = options.flag || 'w';\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  if (isFd(path)) {\x0d\n    const isUserFd = true;\x0d\n    const signal = options.signal;\x0d\n    writeAll(path\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (checkAborted(options.signal\x2C callback))\x0d\n    return;\x0d\n\x0d\n  fs.open(path\x2C flag\x2C options.mode\x2C (openErr\x2C fd) => {\x0d\n    if (openErr) {\x0d\n      callback(openErr);\x0d\n    } else {\x0d\n      const isUserFd = false;\x0d\n      const signal = options.signal;\x0d\n      writeAll(fd\x2C isUserFd\x2C data\x2C 0\x2C data.byteLength\x2C signal\x2C flush\x2C callback);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously writes data to the file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer | TypedArray | DataView} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction writeFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  const flag = options.flag || 'w';\x0d\n\x0d\n  // C++ fast path for string data and UTF8 encoding\x0d\n  if (typeof data === 'string' && (options.encoding === 'utf8' || options.encoding === 'utf-8')) {\x0d\n    if (!isInt32(path)) {\x0d\n      path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n    }\x0d\n\x0d\n    return binding.writeFileUtf8(\x0d\n      path\x2C data\x2C\x0d\n      stringToFlags(flag)\x2C\x0d\n      parseFileMode(options.mode\x2C 'mode'\x2C 0o666)\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (!isArrayBufferView(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  const isUserFd = isFd(path); // File descriptor ownership\x0d\n  const fd = isUserFd ? path : fs.openSync(path\x2C flag\x2C options.mode);\x0d\n\x0d\n  let offset = 0;\x0d\n  let length = data.byteLength;\x0d\n  try {\x0d\n    while (length > 0) {\x0d\n      const written = fs.writeSync(fd\x2C data\x2C offset\x2C length);\x0d\n      offset += written;\x0d\n      length -= written;\x0d\n    }\x0d\n\x0d\n    if (flush) {\x0d\n      fs.fsyncSync(fd);\x0d\n    }\x0d\n  } finally {\x0d\n    if (!isUserFd) fs.closeSync(fd);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   flush?: boolean;\x0d\n *   } | string} [options]\x0d\n * @param {(err?: Error) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFile(path\x2C data\x2C options\x2C callback) {\x0d\n  callback = maybeCallback(callback || options);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFile(path\x2C data\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously appends data to a file.\x0d\n * @param {string | Buffer | URL | number} path\x0d\n * @param {string | Buffer} data\x0d\n * @param {{\x0d\n *   encoding?: string | null;\x0d\n *   mode?: number;\x0d\n *   flag?: string;\x0d\n *   } | string} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction appendFileSync(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  // Force append behavior when using a supplied file descriptor\x0d\n  if (!options.flag || isFd(path))\x0d\n    options.flag = 'a';\x0d\n\x0d\n  fs.writeFileSync(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Watches for the changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {string | {\x0d\n *   persistent?: boolean;\x0d\n *   recursive?: boolean;\x0d\n *   encoding?: string;\x0d\n *   signal?: AbortSignal;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   eventType?: string\x2C\x0d\n *   filename?: string | Buffer\x0d\n *   ) => any} [listener]\x0d\n * @returns {watchers.FSWatcher}\x0d\n */\x0d\nfunction watch(filename\x2C options\x2C listener) {\x0d\n  if (typeof options === 'function') {\x0d\n    listener = options;\x0d\n  }\x0d\n  options = getOptions(options);\x0d\n\x0d\n  // Don't make changes directly on options object\x0d\n  options = copyObject(options);\x0d\n\x0d\n  if (options.persistent === undefined) options.persistent = true;\x0d\n  if (options.recursive === undefined) options.recursive = false;\x0d\n\x0d\n  let watcher;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  const path = getValidatedPath(filename);\x0d\n  // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\x0d\n  // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\x0d\n  // e.g. Linux due to the limitations of inotify.\x0d\n  if (options.recursive && !isOSX && !isWindows) {\x0d\n    const nonNativeWatcher = require('internal/fs/recursive_watch');\x0d\n    watcher = new nonNativeWatcher.FSWatcher(options);\x0d\n    watcher[watchers.kFSWatchStart](path);\x0d\n  } else {\x0d\n    watcher = new watchers.FSWatcher();\x0d\n    watcher[watchers.kFSWatchStart](path\x2C\x0d\n                                    options.persistent\x2C\x0d\n                                    options.recursive\x2C\x0d\n                                    options.encoding);\x0d\n  }\x0d\n\x0d\n  if (listener) {\x0d\n    watcher.addListener('change'\x2C listener);\x0d\n  }\x0d\n  if (options.signal) {\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(() => watcher.close());\x0d\n    } else {\x0d\n      const listener = () => watcher.close();\x0d\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n      options.signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C [kResistStopPropagation]: true });\x0d\n      watcher.once('close'\x2C () => {\x0d\n        options.signal.removeEventListener('abort'\x2C listener);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return watcher;\x0d\n}\x0d\n\x0d\n\x0d\nconst statWatchers = new SafeMap();\x0d\n\x0d\n/**\x0d\n * Watches for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {{\x0d\n *   bigint?: boolean;\x0d\n *   persistent?: boolean;\x0d\n *   interval?: number;\x0d\n *   }} [options]\x0d\n * @param {(\x0d\n *   current?: Stats\x2C\x0d\n *   previous?: Stats\x0d\n *   ) => any} listener\x0d\n * @returns {watchers.StatWatcher}\x0d\n */\x0d\nfunction watchFile(filename\x2C options\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  let stat;\x0d\n\x0d\n  if (options === null || typeof options !== 'object') {\x0d\n    listener = options;\x0d\n    options = null;\x0d\n  }\x0d\n\x0d\n  options = {\x0d\n    // Poll interval in milliseconds. 5007 is what libev used to use. It's\x0d\n    // a little on the slow side but let's stick with it for now to keep\x0d\n    // behavioral changes to a minimum.\x0d\n    interval: 5007\x2C\x0d\n    persistent: true\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  stat = statWatchers.get(filename);\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (stat === undefined) {\x0d\n    stat = new watchers.StatWatcher(options.bigint);\x0d\n    stat[watchers.kFSStatWatcherStart](filename\x2C\x0d\n                                       options.persistent\x2C options.interval);\x0d\n    statWatchers.set(filename\x2C stat);\x0d\n  } else {\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('add');\x0d\n  }\x0d\n\x0d\n  stat.addListener('change'\x2C listener);\x0d\n  return stat;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Stops watching for changes on `filename`.\x0d\n * @param {string | Buffer | URL} filename\x0d\n * @param {() => any} [listener]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction unwatchFile(filename\x2C listener) {\x0d\n  filename = getValidatedPath(filename);\x0d\n  filename = pathModule.resolve(filename);\x0d\n  const stat = statWatchers.get(filename);\x0d\n\x0d\n  if (stat === undefined) return;\x0d\n  const watchers = require('internal/fs/watchers');\x0d\n  if (typeof listener === 'function') {\x0d\n    const beforeListenerCount = stat.listenerCount('change');\x0d\n    stat.removeListener('change'\x2C listener);\x0d\n    if (stat.listenerCount('change') < beforeListenerCount)\x0d\n      stat[watchers.kFSStatWatcherAddOrCleanRef]('clean');\x0d\n  } else {\x0d\n    stat.removeAllListeners('change');\x0d\n    stat[watchers.kFSStatWatcherAddOrCleanRef]('cleanAll');\x0d\n  }\x0d\n\x0d\n  if (stat.listenerCount('change') === 0) {\x0d\n    stat.stop();\x0d\n    statWatchers.delete(filename);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nlet splitRoot;\x0d\nif (isWindows) {\x0d\n  // Regex to find the device root on Windows (e.g. 'c:\\\\')\x2C including trailing\x0d\n  // slash.\x0d\n  const splitRootRe = /^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*/;\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    return SideEffectFreeRegExpPrototypeExec(splitRootRe\x2C str)[0];\x0d\n  };\x0d\n} else {\x0d\n  splitRoot = function splitRoot(str) {\x0d\n    for (let i = 0; i < str.length; ++i) {\x0d\n      if (StringPrototypeCharCodeAt(str\x2C i) !== CHAR_FORWARD_SLASH)\x0d\n        return StringPrototypeSlice(str\x2C 0\x2C i);\x0d\n    }\x0d\n    return str;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction encodeRealpathResult(result\x2C options) {\x0d\n  if (!options || !options.encoding || options.encoding === 'utf8')\x0d\n    return result;\x0d\n  const asBuffer = Buffer.from(result);\x0d\n  if (options.encoding === 'buffer') {\x0d\n    return asBuffer;\x0d\n  }\x0d\n  return asBuffer.toString(options.encoding);\x0d\n}\x0d\n\x0d\n// Finds the next portion of a (partial) path\x2C up to the next path delimiter\x0d\nlet nextPart;\x0d\nif (isWindows) {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    for (; i < p.length; ++i) {\x0d\n      const ch = StringPrototypeCharCodeAt(p\x2C i);\x0d\n\x0d\n      // Check for a separator character\x0d\n      if (ch === CHAR_BACKWARD_SLASH || ch === CHAR_FORWARD_SLASH)\x0d\n        return i;\x0d\n    }\x0d\n    return -1;\x0d\n  };\x0d\n} else {\x0d\n  nextPart = function nextPart(p\x2C i) {\x0d\n    return StringPrototypeIndexOf(p\x2C '/'\x2C i);\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string | null; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nfunction realpathSync(p\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const cache = options[realpathCacheKey];\x0d\n  const maybeCachedResult = cache?.get(p);\x0d\n  if (maybeCachedResult) {\x0d\n    return maybeCachedResult;\x0d\n  }\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n  const original = p;\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  // Skip over roots\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows) {\x0d\n    const out = binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\x0d\n    if (out === undefined) {\x0d\n      return;\x0d\n    }\x0d\n    knownHard.add(base);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  // NB: p.length changes.\x0d\n  while (pos < p.length) {\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base) || cache?.get(base) === base) {\x0d\n      if (isFileType(statValues\x2C S_IFIFO) ||\x0d\n          isFileType(statValues\x2C S_IFSOCK)) {\x0d\n        break;\x0d\n      }\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    let resolvedLink;\x0d\n    const maybeCachedResolved = cache?.get(base);\x0d\n    if (maybeCachedResolved) {\x0d\n      resolvedLink = maybeCachedResolved;\x0d\n    } else {\x0d\n      // Use stats array directly to avoid creating an fs.Stats instance just\x0d\n      // for our internal use.\x0d\n\x0d\n      const baseLong = pathModule.toNamespacedPath(base);\x0d\n      const stats = binding.lstat(baseLong\x2C true\x2C undefined\x2C true /* throwIfNoEntry */);\x0d\n      if (stats === undefined) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (!isFileType(stats\x2C S_IFLNK)) {\x0d\n        knownHard.add(base);\x0d\n        cache?.set(base\x2C base);\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      // Read the link if it wasn't read before\x0d\n      // dev/ino always return 0 on windows\x2C so skip the check.\x0d\n      let linkTarget = null;\x0d\n      let id;\x0d\n      if (!isWindows) {\x0d\n        const dev = BigIntPrototypeToString(stats[0]\x2C 32);\x0d\n        const ino = BigIntPrototypeToString(stats[7]\x2C 32);\x0d\n        id = `${dev}:${ino}`;\x0d\n        if (seenLinks.has(id)) {\x0d\n          linkTarget = seenLinks.get(id);\x0d\n        }\x0d\n      }\x0d\n      if (linkTarget === null) {\x0d\n        binding.stat(baseLong\x2C false\x2C undefined\x2C true);\x0d\n        linkTarget = binding.readlink(baseLong\x2C undefined);\x0d\n      }\x0d\n      resolvedLink = pathModule.resolve(previous\x2C linkTarget);\x0d\n\x0d\n      cache?.set(base\x2C resolvedLink);\x0d\n      if (!isWindows) seenLinks.set(id\x2C linkTarget);\x0d\n    }\x0d\n\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n\x0d\n    // Skip over roots\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      const out = binding.lstat(pathModule.toNamespacedPath(base)\x2C false\x2C undefined\x2C true /* throwIfNoEntry */);\x0d\n      if (out === undefined) {\x0d\n        return;\x0d\n      }\x0d\n      knownHard.add(base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  cache?.set(original\x2C p);\x0d\n  return encodeRealpathResult(p\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the resolved pathname.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string | Buffer}\x0d\n */\x0d\nrealpathSync.native = (path\x2C options) => {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} p\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction realpath(p\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : maybeCallback(callback);\x0d\n  options = getOptions(options);\x0d\n  p = toPathIfFileURL(p);\x0d\n\x0d\n  if (typeof p !== 'string') {\x0d\n    p += '';\x0d\n  }\x0d\n  validatePath(p);\x0d\n  p = pathModule.resolve(p);\x0d\n\x0d\n  const seenLinks = new SafeMap();\x0d\n  const knownHard = new SafeSet();\x0d\n\x0d\n  // Current character position in p\x0d\n  let pos;\x0d\n  // The partial path so far\x2C including a trailing slash if any\x0d\n  let current;\x0d\n  // The partial path without a trailing slash (except when pointing at a root)\x0d\n  let base;\x0d\n  // The partial path scanned in the previous round\x2C with slash\x0d\n  let previous;\x0d\n\x0d\n  current = base = splitRoot(p);\x0d\n  pos = current.length;\x0d\n\x0d\n  // On windows\x2C check that the root exists. On unix there is no need.\x0d\n  if (isWindows && !knownHard.has(base)) {\x0d\n    fs.lstat(base\x2C (err\x2C stats) => {\x0d\n      if (err) return callback(err);\x0d\n      knownHard.add(base);\x0d\n      LOOP();\x0d\n    });\x0d\n  } else {\x0d\n    process.nextTick(LOOP);\x0d\n  }\x0d\n\x0d\n  // Walk down the path\x2C swapping out linked path parts for their real\x0d\n  // values\x0d\n  function LOOP() {\x0d\n    // Stop if scanned past end of path\x0d\n    if (pos >= p.length) {\x0d\n      return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n    }\x0d\n\x0d\n    // find the next part\x0d\n    const result = nextPart(p\x2C pos);\x0d\n    previous = current;\x0d\n    if (result === -1) {\x0d\n      const last = StringPrototypeSlice(p\x2C pos);\x0d\n      current += last;\x0d\n      base = previous + last;\x0d\n      pos = p.length;\x0d\n    } else {\x0d\n      current += StringPrototypeSlice(p\x2C pos\x2C result + 1);\x0d\n      base = previous + StringPrototypeSlice(p\x2C pos\x2C result);\x0d\n      pos = result + 1;\x0d\n    }\x0d\n\x0d\n    // Continue if not a symlink\x2C break if a pipe/socket\x0d\n    if (knownHard.has(base)) {\x0d\n      if (isFileType(statValues\x2C S_IFIFO) ||\x0d\n          isFileType(statValues\x2C S_IFSOCK)) {\x0d\n        return callback(null\x2C encodeRealpathResult(p\x2C options));\x0d\n      }\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    return fs.lstat(base\x2C { bigint: true }\x2C gotStat);\x0d\n  }\x0d\n\x0d\n  function gotStat(err\x2C stats) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    // If not a symlink\x2C skip to the next path part\x0d\n    if (!stats.isSymbolicLink()) {\x0d\n      knownHard.add(base);\x0d\n      return process.nextTick(LOOP);\x0d\n    }\x0d\n\x0d\n    // Stat & read the link if not read before.\x0d\n    // Call `gotTarget()` as soon as the link target is known.\x0d\n    // `dev`/`ino` always return 0 on windows\x2C so skip the check.\x0d\n    let id;\x0d\n    if (!isWindows) {\x0d\n      const dev = BigIntPrototypeToString(stats.dev\x2C 32);\x0d\n      const ino = BigIntPrototypeToString(stats.ino\x2C 32);\x0d\n      id = `${dev}:${ino}`;\x0d\n      if (seenLinks.has(id)) {\x0d\n        return gotTarget(null\x2C seenLinks.get(id));\x0d\n      }\x0d\n    }\x0d\n    fs.stat(base\x2C (err) => {\x0d\n      if (err) return callback(err);\x0d\n\x0d\n      fs.readlink(base\x2C (err\x2C target) => {\x0d\n        if (!isWindows) seenLinks.set(id\x2C target);\x0d\n        gotTarget(err\x2C target);\x0d\n      });\x0d\n    });\x0d\n  }\x0d\n\x0d\n  function gotTarget(err\x2C target) {\x0d\n    if (err) return callback(err);\x0d\n\x0d\n    gotResolvedLink(pathModule.resolve(previous\x2C target));\x0d\n  }\x0d\n\x0d\n  function gotResolvedLink(resolvedLink) {\x0d\n    // Resolve the link\x2C then start over\x0d\n    p = pathModule.resolve(resolvedLink\x2C StringPrototypeSlice(p\x2C pos));\x0d\n    current = base = splitRoot(p);\x0d\n    pos = current.length;\x0d\n\x0d\n    // On windows\x2C check that the root exists. On unix there is no need.\x0d\n    if (isWindows && !knownHard.has(base)) {\x0d\n      fs.lstat(base\x2C (err) => {\x0d\n        if (err) return callback(err);\x0d\n        knownHard.add(base);\x0d\n        LOOP();\x0d\n      });\x0d\n    } else {\x0d\n      process.nextTick(LOOP);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously computes the canonical pathname by\x0d\n * resolving `.`\x2C `..` and symbolic links.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   resolvedPath?: string | Buffer\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nrealpath.native = (path\x2C options\x2C callback) => {\x0d\n  callback = makeCallback(callback || options);\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C req);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates a unique temporary directory.\x0d\n * @param {string | Buffer | URL} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @param {(\x0d\n *   err?: Error\x2C\x0d\n *   directory?: string\x0d\n *   ) => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction mkdtemp(prefix\x2C options\x2C callback) {\x0d\n  callback = makeCallback(typeof options === 'function' ? options : callback);\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.mkdtemp(prefix\x2C options.encoding\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously creates a unique temporary directory.\x0d\n * @param {string | Buffer | URL} prefix\x0d\n * @param {string | { encoding?: string; }} [options]\x0d\n * @returns {string}\x0d\n */\x0d\nfunction mkdtempSync(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n  return binding.mkdtemp(prefix\x2C options.encoding);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFile(src\x2C dest\x2C mode\x2C callback) {\x0d\n  if (typeof mode === 'function') {\x0d\n    callback = mode;\x0d\n    mode = 0;\x0d\n  }\x0d\n\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  src = pathModule.toNamespacedPath(src);\x0d\n  dest = pathModule.toNamespacedPath(dest);\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  callback = makeCallback(callback);\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = callback;\x0d\n  binding.copyFile(src\x2C dest\x2C mode\x2C req);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. By\x0d\n * default\x2C `dest` is overwritten if it already exists.\x0d\n * @param {string | Buffer | URL} src\x0d\n * @param {string | Buffer | URL} dest\x0d\n * @param {number} [mode]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction copyFileSync(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n\x0d\n  binding.copyFile(\x0d\n    pathModule.toNamespacedPath(src)\x2C\x0d\n    pathModule.toNamespacedPath(dest)\x2C\x0d\n    getValidMode(mode\x2C 'copyFile')\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Asynchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @param {() => any} callback\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cp(src\x2C dest\x2C options\x2C callback) {\x0d\n  if (typeof options === 'function') {\x0d\n    callback = options;\x0d\n    options = undefined;\x0d\n  }\x0d\n  callback = makeCallback(callback);\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpFn(src\x2C dest\x2C options\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously copies `src` to `dest`. `src` can be a file\x2C directory\x2C or\x0d\n * symlink. The contents of directories will be copied recursively.\x0d\n * @param {string | URL} src\x0d\n * @param {string | URL} dest\x0d\n * @param {object} [options]\x0d\n * @returns {void}\x0d\n */\x0d\nfunction cpSync(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  lazyLoadCp();\x0d\n  cpSyncFn(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nfunction lazyLoadStreams() {\x0d\n  if (!ReadStream) {\x0d\n    ({ ReadStream\x2C WriteStream } = require('internal/fs/streams'));\x0d\n    FileReadStream = ReadStream;\x0d\n    FileWriteStream = WriteStream;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a readable stream with a default `highWaterMark`\x0d\n * of 64 KiB.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   end?: number;\x0d\n *   highWaterMark?: number;\x0d\n *   fs?: object | null;\x0d\n *   signal?: AbortSignal | null;\x0d\n *   }} [options]\x0d\n * @returns {ReadStream}\x0d\n */\x0d\nfunction createReadStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new ReadStream(path\x2C options);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a write stream.\x0d\n * @param {string | Buffer | URL} path\x0d\n * @param {string | {\x0d\n *   flags?: string;\x0d\n *   encoding?: string;\x0d\n *   fd?: number | FileHandle;\x0d\n *   mode?: number;\x0d\n *   autoClose?: boolean;\x0d\n *   emitClose?: boolean;\x0d\n *   start: number;\x0d\n *   fs?: object | null;\x0d\n *   signal?: AbortSignal | null;\x0d\n *   highWaterMark?: number;\x0d\n *   flush?: boolean;\x0d\n *   }} [options]\x0d\n * @returns {WriteStream}\x0d\n */\x0d\nfunction createWriteStream(path\x2C options) {\x0d\n  lazyLoadStreams();\x0d\n  return new WriteStream(path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = fs = {\x0d\n  appendFile\x2C\x0d\n  appendFileSync\x2C\x0d\n  access\x2C\x0d\n  accessSync\x2C\x0d\n  chown\x2C\x0d\n  chownSync\x2C\x0d\n  chmod\x2C\x0d\n  chmodSync\x2C\x0d\n  close\x2C\x0d\n  closeSync\x2C\x0d\n  copyFile\x2C\x0d\n  copyFileSync\x2C\x0d\n  cp\x2C\x0d\n  cpSync\x2C\x0d\n  createReadStream\x2C\x0d\n  createWriteStream\x2C\x0d\n  exists\x2C\x0d\n  existsSync\x2C\x0d\n  fchown\x2C\x0d\n  fchownSync\x2C\x0d\n  fchmod\x2C\x0d\n  fchmodSync\x2C\x0d\n  fdatasync\x2C\x0d\n  fdatasyncSync\x2C\x0d\n  fstat\x2C\x0d\n  fstatSync\x2C\x0d\n  fsync\x2C\x0d\n  fsyncSync\x2C\x0d\n  ftruncate\x2C\x0d\n  ftruncateSync\x2C\x0d\n  futimes\x2C\x0d\n  futimesSync\x2C\x0d\n  lchown\x2C\x0d\n  lchownSync\x2C\x0d\n  lchmod: constants.O_SYMLINK !== undefined ? lchmod : undefined\x2C\x0d\n  lchmodSync: constants.O_SYMLINK !== undefined ? lchmodSync : undefined\x2C\x0d\n  link\x2C\x0d\n  linkSync\x2C\x0d\n  lstat\x2C\x0d\n  lstatSync\x2C\x0d\n  lutimes\x2C\x0d\n  lutimesSync\x2C\x0d\n  mkdir\x2C\x0d\n  mkdirSync\x2C\x0d\n  mkdtemp\x2C\x0d\n  mkdtempSync\x2C\x0d\n  open\x2C\x0d\n  openSync\x2C\x0d\n  openAsBlob\x2C\x0d\n  readdir\x2C\x0d\n  readdirSync\x2C\x0d\n  read\x2C\x0d\n  readSync\x2C\x0d\n  readv\x2C\x0d\n  readvSync\x2C\x0d\n  readFile\x2C\x0d\n  readFileSync\x2C\x0d\n  readlink\x2C\x0d\n  readlinkSync\x2C\x0d\n  realpath\x2C\x0d\n  realpathSync\x2C\x0d\n  rename\x2C\x0d\n  renameSync\x2C\x0d\n  rm\x2C\x0d\n  rmSync\x2C\x0d\n  rmdir\x2C\x0d\n  rmdirSync\x2C\x0d\n  stat\x2C\x0d\n  statfs\x2C\x0d\n  statSync\x2C\x0d\n  statfsSync\x2C\x0d\n  symlink\x2C\x0d\n  symlinkSync\x2C\x0d\n  truncate\x2C\x0d\n  truncateSync\x2C\x0d\n  unwatchFile\x2C\x0d\n  unlink\x2C\x0d\n  unlinkSync\x2C\x0d\n  utimes\x2C\x0d\n  utimesSync\x2C\x0d\n  watch\x2C\x0d\n  watchFile\x2C\x0d\n  writeFile\x2C\x0d\n  writeFileSync\x2C\x0d\n  write\x2C\x0d\n  writeSync\x2C\x0d\n  writev\x2C\x0d\n  writevSync\x2C\x0d\n  Dirent\x2C\x0d\n  Stats\x2C\x0d\n\x0d\n  get ReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return ReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set ReadStream(val) {\x0d\n    ReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get WriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return WriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set WriteStream(val) {\x0d\n    WriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy names... these have to be separate because of how graceful-fs\x0d\n  // (and possibly other) modules monkey patch the values.\x0d\n  get FileReadStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileReadStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileReadStream(val) {\x0d\n    FileReadStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  get FileWriteStream() {\x0d\n    lazyLoadStreams();\x0d\n    return FileWriteStream;\x0d\n  }\x2C\x0d\n\x0d\n  set FileWriteStream(val) {\x0d\n    FileWriteStream = val;\x0d\n  }\x2C\x0d\n\x0d\n  // For tests\x0d\n  _toUnixTimestamp: toUnixTimestamp\x2C\x0d\n};\x0d\n\x0d\ndefineLazyProperties(\x0d\n  fs\x2C\x0d\n  'internal/fs/dir'\x2C\x0d\n  ['Dir'\x2C 'opendir'\x2C 'opendirSync']\x2C\x0d\n);\x0d\n\x0d\nObjectDefineProperties(fs\x2C {\x0d\n  F_OK: { __proto__: null\x2C enumerable: true\x2C value: F_OK || 0 }\x2C\x0d\n  R_OK: { __proto__: null\x2C enumerable: true\x2C value: R_OK || 0 }\x2C\x0d\n  W_OK: { __proto__: null\x2C enumerable: true\x2C value: W_OK || 0 }\x2C\x0d\n  X_OK: { __proto__: null\x2C enumerable: true\x2C value: X_OK || 0 }\x2C\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  promises: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      promises ??= require('internal/fs/promises').exports;\x0d\n      return promises;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x1c66f8e685e
tick,0x7ff6ccaa4f5e,156519,0,0x0,3,0x7ff6cbdbb8d0,0x1c66f8e64b1,0x1c66f8e5a6d,0x1c66f8e523a,0x1c66f8e4a2f,0x2bcf6affdbf
code-creation,JS,10,156798,0x1c66f8ed57e,135,getOptions node:internal/fs/utils:326:20,0x3fcdef9db38,~
script-source,28,node:internal/fs/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  BigInt\x2C\x0d\n  Date\x2C\x0d\n  DateNow\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeAt\x2C\x0d\n  TypedArrayPrototypeIncludes\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_FS_EISDIR\x2C\x0d\n    ERR_FS_INVALID_SYMLINK_TYPE\x2C\x0d\n    ERR_INCOMPATIBLE_OPTION_PAIR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n  UVException\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  isArrayBufferView\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isDate\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst kType = Symbol('type');\x0d\nconst kStats = Symbol('stats');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { encodeUtf8String } = internalBinding('encoding_binding');\x0d\n\x0d\nconst {\x0d\n  fs: {\x0d\n    F_OK = 0\x2C\x0d\n    W_OK = 0\x2C\x0d\n    R_OK = 0\x2C\x0d\n    X_OK = 0\x2C\x0d\n    COPYFILE_EXCL\x2C\x0d\n    COPYFILE_FICLONE\x2C\x0d\n    COPYFILE_FICLONE_FORCE\x2C\x0d\n    O_APPEND\x2C\x0d\n    O_CREAT\x2C\x0d\n    O_EXCL\x2C\x0d\n    O_RDONLY\x2C\x0d\n    O_RDWR\x2C\x0d\n    O_SYNC\x2C\x0d\n    O_TRUNC\x2C\x0d\n    O_WRONLY\x2C\x0d\n    S_IFBLK\x2C\x0d\n    S_IFCHR\x2C\x0d\n    S_IFDIR\x2C\x0d\n    S_IFIFO\x2C\x0d\n    S_IFLNK\x2C\x0d\n    S_IFMT\x2C\x0d\n    S_IFREG\x2C\x0d\n    S_IFSOCK\x2C\x0d\n    UV_FS_SYMLINK_DIR\x2C\x0d\n    UV_FS_SYMLINK_JUNCTION\x2C\x0d\n    UV_DIRENT_UNKNOWN\x2C\x0d\n    UV_DIRENT_FILE\x2C\x0d\n    UV_DIRENT_DIR\x2C\x0d\n    UV_DIRENT_LINK\x2C\x0d\n    UV_DIRENT_FIFO\x2C\x0d\n    UV_DIRENT_SOCKET\x2C\x0d\n    UV_DIRENT_CHAR\x2C\x0d\n    UV_DIRENT_BLOCK\x2C\x0d\n  }\x2C\x0d\n  os: {\x0d\n    errno: {\x0d\n      EISDIR\x2C\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('constants');\x0d\n\x0d\n// The access modes can be any of F_OK\x2C R_OK\x2C W_OK or X_OK. Some might not be\x0d\n// available on specific systems. They can be used in combination as well\x0d\n// (F_OK | R_OK | W_OK | X_OK).\x0d\nconst kMinimumAccessMode = MathMin(F_OK\x2C W_OK\x2C R_OK\x2C X_OK);\x0d\nconst kMaximumAccessMode = F_OK | W_OK | R_OK | X_OK;\x0d\n\x0d\nconst kDefaultCopyMode = 0;\x0d\n// The copy modes can be any of COPYFILE_EXCL\x2C COPYFILE_FICLONE or\x0d\n// COPYFILE_FICLONE_FORCE. They can be used in combination as well\x0d\n// (COPYFILE_EXCL | COPYFILE_FICLONE | COPYFILE_FICLONE_FORCE).\x0d\nconst kMinimumCopyMode = MathMin(\x0d\n  kDefaultCopyMode\x2C\x0d\n  COPYFILE_EXCL\x2C\x0d\n  COPYFILE_FICLONE\x2C\x0d\n  COPYFILE_FICLONE_FORCE\x2C\x0d\n);\x0d\nconst kMaximumCopyMode = COPYFILE_EXCL |\x0d\n                         COPYFILE_FICLONE |\x0d\n                         COPYFILE_FICLONE_FORCE;\x0d\n\x0d\n// Most platforms don't allow reads or writes >= 2 GiB.\x0d\n// See https://github.com/libuv/libuv/pull/1501.\x0d\nconst kIoMaxLength = 2 ** 31 - 1;\x0d\n\x0d\n// Use 64kb in case the file type is not a regular file and thus do not know the\x0d\n// actual file size. Increasing the value further results in more frequent over\x0d\n// allocation for small files and consumes CPU time and memory that should be\x0d\n// used else wise.\x0d\n// Use up to 512kb per read otherwise to partition reading big files to prevent\x0d\n// blocking other threads in case the available threads are all in use.\x0d\nconst kReadFileUnknownBufferLength = 64 * 1024;\x0d\nconst kReadFileBufferLength = 512 * 1024;\x0d\n\x0d\nconst kWriteFileMaxChunkSize = 512 * 1024;\x0d\n\x0d\nconst kMaxUserId = 2 ** 32 - 1;\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nlet fs;\x0d\nfunction lazyLoadFs() {\x0d\n  if (!fs) {\x0d\n    fs = require('fs');\x0d\n  }\x0d\n  return fs;\x0d\n}\x0d\n\x0d\nfunction assertEncoding(encoding) {\x0d\n  if (encoding && !Buffer.isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Dirent {\x0d\n  constructor(name\x2C type\x2C path) {\x0d\n    this.name = name;\x0d\n    this.parentPath = path;\x0d\n    this.path = path;\x0d\n    this[kType] = type;\x0d\n  }\x0d\n\x0d\n  isDirectory() {\x0d\n    return this[kType] === UV_DIRENT_DIR;\x0d\n  }\x0d\n\x0d\n  isFile() {\x0d\n    return this[kType] === UV_DIRENT_FILE;\x0d\n  }\x0d\n\x0d\n  isBlockDevice() {\x0d\n    return this[kType] === UV_DIRENT_BLOCK;\x0d\n  }\x0d\n\x0d\n  isCharacterDevice() {\x0d\n    return this[kType] === UV_DIRENT_CHAR;\x0d\n  }\x0d\n\x0d\n  isSymbolicLink() {\x0d\n    return this[kType] === UV_DIRENT_LINK;\x0d\n  }\x0d\n\x0d\n  isFIFO() {\x0d\n    return this[kType] === UV_DIRENT_FIFO;\x0d\n  }\x0d\n\x0d\n  isSocket() {\x0d\n    return this[kType] === UV_DIRENT_SOCKET;\x0d\n  }\x0d\n}\x0d\n\x0d\nclass DirentFromStats extends Dirent {\x0d\n  constructor(name\x2C stats\x2C path) {\x0d\n    super(name\x2C null\x2C path);\x0d\n    this[kStats] = stats;\x0d\n  }\x0d\n}\x0d\n\x0d\nfor (const name of ReflectOwnKeys(Dirent.prototype)) {\x0d\n  if (name === 'constructor') {\x0d\n    continue;\x0d\n  }\x0d\n  DirentFromStats.prototype[name] = function() {\x0d\n    return this[kStats][name]();\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction copyObject(source) {\x0d\n  const target = {};\x0d\n  for (const key in source)\x0d\n    target[key] = source[key];\x0d\n  return target;\x0d\n}\x0d\n\x0d\nconst bufferSep = Buffer.from(pathModule.sep);\x0d\n\x0d\nfunction join(path\x2C name) {\x0d\n  if ((typeof path === 'string' || isUint8Array(path)) &&\x0d\n      name === undefined) {\x0d\n    return path;\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && isUint8Array(name)) {\x0d\n    const pathBuffer = Buffer.from(pathModule.join(path\x2C pathModule.sep));\x0d\n    return Buffer.concat([pathBuffer\x2C name]);\x0d\n  }\x0d\n\x0d\n  if (typeof path === 'string' && typeof name === 'string') {\x0d\n    return pathModule.join(path\x2C name);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(path) && isUint8Array(name)) {\x0d\n    return Buffer.concat([path\x2C bufferSep\x2C name]);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'path'\x2C ['string'\x2C 'Buffer']\x2C path);\x0d\n}\x0d\n\x0d\nfunction getDirents(path\x2C { 0: names\x2C 1: types }\x2C callback) {\x0d\n  let i;\x0d\n  if (typeof callback === 'function') {\x0d\n    const len = names.length;\x0d\n    let toFinish = 0;\x0d\n    callback = once(callback);\x0d\n    for (i = 0; i < len; i++) {\x0d\n      const type = types[i];\x0d\n      if (type === UV_DIRENT_UNKNOWN) {\x0d\n        const name = names[i];\x0d\n        const idx = i;\x0d\n        toFinish++;\x0d\n        let filepath;\x0d\n        try {\x0d\n          filepath = join(path\x2C name);\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n          if (err) {\x0d\n            callback(err);\x0d\n            return;\x0d\n          }\x0d\n          names[idx] = new DirentFromStats(name\x2C stats\x2C path);\x0d\n          if (--toFinish === 0) {\x0d\n            callback(null\x2C names);\x0d\n          }\x0d\n        });\x0d\n      } else {\x0d\n        names[i] = new Dirent(names[i]\x2C types[i]\x2C path);\x0d\n      }\x0d\n    }\x0d\n    if (toFinish === 0) {\x0d\n      callback(null\x2C names);\x0d\n    }\x0d\n  } else {\x0d\n    const len = names.length;\x0d\n    for (i = 0; i < len; i++) {\x0d\n      names[i] = getDirent(path\x2C names[i]\x2C types[i]);\x0d\n    }\x0d\n    return names;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getDirent(path\x2C name\x2C type\x2C callback) {\x0d\n  if (typeof callback === 'function') {\x0d\n    if (type === UV_DIRENT_UNKNOWN) {\x0d\n      let filepath;\x0d\n      try {\x0d\n        filepath = join(path\x2C name);\x0d\n      } catch (err) {\x0d\n        callback(err);\x0d\n        return;\x0d\n      }\x0d\n      lazyLoadFs().lstat(filepath\x2C (err\x2C stats) => {\x0d\n        if (err) {\x0d\n          callback(err);\x0d\n          return;\x0d\n        }\x0d\n        callback(null\x2C new DirentFromStats(name\x2C stats\x2C filepath));\x0d\n      });\x0d\n    } else {\x0d\n      callback(null\x2C new Dirent(name\x2C type\x2C path));\x0d\n    }\x0d\n  } else if (type === UV_DIRENT_UNKNOWN) {\x0d\n    const filepath = join(path\x2C name);\x0d\n    const stats = lazyLoadFs().lstatSync(filepath);\x0d\n    return new DirentFromStats(name\x2C stats\x2C path);\x0d\n  } else {\x0d\n    return new Dirent(name\x2C type\x2C path);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getOptions(options\x2C defaultOptions = kEmptyObject) {\x0d\n  if (options == null || typeof options === 'function') {\x0d\n    return defaultOptions;\x0d\n  }\x0d\n\x0d\n  if (typeof options === 'string') {\x0d\n    defaultOptions = { ...defaultOptions };\x0d\n    defaultOptions.encoding = options;\x0d\n    options = defaultOptions;\x0d\n  } else if (typeof options !== 'object') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C ['string'\x2C 'Object']\x2C options);\x0d\n  }\x0d\n\x0d\n  if (options.encoding !== 'buffer')\x0d\n    assertEncoding(options.encoding);\x0d\n\x0d\n  if (options.signal !== undefined) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {InternalFSBinding.FSSyncContext} ctx\x0d\n */\x0d\nfunction handleErrorFromBinding(ctx) {\x0d\n  if (ctx.errno !== undefined) {  // libuv error numbers\x0d\n    const err = new UVException(ctx);\x0d\n    ErrorCaptureStackTrace(err\x2C handleErrorFromBinding);\x0d\n    throw err;\x0d\n  }\x0d\n  if (ctx.error !== undefined) {  // Errors created in C++ land.\x0d\n    // TODO(joyeecheung): currently\x2C ctx.error are encoding errors\x0d\n    // usually caused by memory problems. We need to figure out proper error\x0d\n    // code(s) for this.\x0d\n    ErrorCaptureStackTrace(ctx.error\x2C handleErrorFromBinding);\x0d\n    throw ctx.error;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction preprocessSymlinkDestination(path\x2C type\x2C linkPath) {\x0d\n  if (!isWindows) {\x0d\n    // No preprocessing is needed on Unix.\x0d\n    return path;\x0d\n  }\x0d\n  path = '' + path;\x0d\n  if (type === 'junction') {\x0d\n    // Junctions paths need to be absolute and \\\\?\\-prefixed.\x0d\n    // A relative target is relative to the link's parent directory.\x0d\n    path = pathModule.resolve(linkPath\x2C '..'\x2C path);\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  if (pathModule.isAbsolute(path)) {\x0d\n    // If the path is absolute\x2C use the \\\\?\\-prefix to enable long filenames\x0d\n    return pathModule.toNamespacedPath(path);\x0d\n  }\x0d\n  // Windows symlinks don't tolerate forward slashes.\x0d\n  return RegExpPrototypeSymbolReplace(/\\//g\x2C path\x2C '\\\\');\x0d\n}\x0d\n\x0d\n// Constructor for file stats.\x0d\nfunction StatsBase(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                   ino\x2C size\x2C blocks) {\x0d\n  this.dev = dev;\x0d\n  this.mode = mode;\x0d\n  this.nlink = nlink;\x0d\n  this.uid = uid;\x0d\n  this.gid = gid;\x0d\n  this.rdev = rdev;\x0d\n  this.blksize = blksize;\x0d\n  this.ino = ino;\x0d\n  this.size = size;\x0d\n  this.blocks = blocks;\x0d\n}\x0d\n\x0d\nStatsBase.prototype.isDirectory = function() {\x0d\n  return this._checkModeProperty(S_IFDIR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFile = function() {\x0d\n  return this._checkModeProperty(S_IFREG);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isBlockDevice = function() {\x0d\n  return this._checkModeProperty(S_IFBLK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isCharacterDevice = function() {\x0d\n  return this._checkModeProperty(S_IFCHR);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSymbolicLink = function() {\x0d\n  return this._checkModeProperty(S_IFLNK);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isFIFO = function() {\x0d\n  return this._checkModeProperty(S_IFIFO);\x0d\n};\x0d\n\x0d\nStatsBase.prototype.isSocket = function() {\x0d\n  return this._checkModeProperty(S_IFSOCK);\x0d\n};\x0d\n\x0d\nconst kNsPerMsBigInt = 10n ** 6n;\x0d\nconst kNsPerSecBigInt = 10n ** 9n;\x0d\nconst kMsPerSec = 10 ** 3;\x0d\nconst kNsPerMs = 10 ** 6;\x0d\nfunction msFromTimeSpec(sec\x2C nsec) {\x0d\n  return sec * kMsPerSec + nsec / kNsPerMs;\x0d\n}\x0d\n\x0d\nfunction nsFromTimeSpecBigInt(sec\x2C nsec) {\x0d\n  return sec * kNsPerSecBigInt + nsec;\x0d\n}\x0d\n\x0d\n// The Date constructor performs Math.floor() on the absolute value\x0d\n// of the timestamp: https://tc39.es/ecma262/#sec-timeclip\x0d\n// Since there may be a precision loss when the timestamp is\x0d\n// converted to a floating point number\x2C we manually round\x0d\n// the timestamp here before passing it to Date().\x0d\n// Refs: https://github.com/nodejs/node/pull/12607\x0d\n// Refs: https://github.com/nodejs/node/pull/43714\x0d\nfunction dateFromMs(ms) {\x0d\n  // Coercing to number\x2C ms can be bigint\x0d\n  return new Date(MathRound(Number(ms)));\x0d\n}\x0d\n\x0d\nfunction BigIntStats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                     ino\x2C size\x2C blocks\x2C\x0d\n                     atimeNs\x2C mtimeNs\x2C ctimeNs\x2C birthtimeNs) {\x0d\n  ReflectApply(StatsBase\x2C this\x2C [dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n                                 ino\x2C size\x2C blocks]);\x0d\n\x0d\n  this.atimeMs = atimeNs / kNsPerMsBigInt;\x0d\n  this.mtimeMs = mtimeNs / kNsPerMsBigInt;\x0d\n  this.ctimeMs = ctimeNs / kNsPerMsBigInt;\x0d\n  this.birthtimeMs = birthtimeNs / kNsPerMsBigInt;\x0d\n  this.atimeNs = atimeNs;\x0d\n  this.mtimeNs = mtimeNs;\x0d\n  this.ctimeNs = ctimeNs;\x0d\n  this.birthtimeNs = birthtimeNs;\x0d\n  this.atime = dateFromMs(this.atimeMs);\x0d\n  this.mtime = dateFromMs(this.mtimeMs);\x0d\n  this.ctime = dateFromMs(this.ctimeMs);\x0d\n  this.birthtime = dateFromMs(this.birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(BigIntStats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(BigIntStats\x2C StatsBase);\x0d\n\x0d\nBigIntStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & BigInt(S_IFMT)) === BigInt(property);\x0d\n};\x0d\n\x0d\nfunction Stats(dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C blksize\x2C\x0d\n               ino\x2C size\x2C blocks\x2C\x0d\n               atimeMs\x2C mtimeMs\x2C ctimeMs\x2C birthtimeMs) {\x0d\n  FunctionPrototypeCall(StatsBase\x2C this\x2C dev\x2C mode\x2C nlink\x2C uid\x2C gid\x2C rdev\x2C\x0d\n                        blksize\x2C ino\x2C size\x2C blocks);\x0d\n  this.atimeMs = atimeMs;\x0d\n  this.mtimeMs = mtimeMs;\x0d\n  this.ctimeMs = ctimeMs;\x0d\n  this.birthtimeMs = birthtimeMs;\x0d\n  this.atime = dateFromMs(atimeMs);\x0d\n  this.mtime = dateFromMs(mtimeMs);\x0d\n  this.ctime = dateFromMs(ctimeMs);\x0d\n  this.birthtime = dateFromMs(birthtimeMs);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(Stats.prototype\x2C StatsBase.prototype);\x0d\nObjectSetPrototypeOf(Stats\x2C StatsBase);\x0d\n\x0d\n// HACK: Workaround for https://github.com/standard-things/esm/issues/821.\x0d\n// TODO(ronag): Remove this as soon as `esm` publishes a fixed version.\x0d\nStats.prototype.isFile = StatsBase.prototype.isFile;\x0d\n\x0d\nStats.prototype._checkModeProperty = function(property) {\x0d\n  if (isWindows && (property === S_IFIFO || property === S_IFBLK ||\x0d\n    property === S_IFSOCK)) {\x0d\n    return false;  // Some types are not available on Windows\x0d\n  }\x0d\n  return (this.mode & S_IFMT) === property;\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {Float64Array | BigInt64Array} stats\x0d\n * @param {number} offset\x0d\n * @returns {BigIntStats | Stats}\x0d\n */\x0d\nfunction getStatsFromBinding(stats\x2C offset = 0) {\x0d\n  if (isBigInt64Array(stats)) {\x0d\n    return new BigIntStats(\x0d\n      stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n      stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n      stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n      stats[9 + offset]\x2C\x0d\n      nsFromTimeSpecBigInt(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n      nsFromTimeSpecBigInt(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n    );\x0d\n  }\x0d\n  return new Stats(\x0d\n    stats[0 + offset]\x2C stats[1 + offset]\x2C stats[2 + offset]\x2C\x0d\n    stats[3 + offset]\x2C stats[4 + offset]\x2C stats[5 + offset]\x2C\x0d\n    stats[6 + offset]\x2C stats[7 + offset]\x2C stats[8 + offset]\x2C\x0d\n    stats[9 + offset]\x2C\x0d\n    msFromTimeSpec(stats[10 + offset]\x2C stats[11 + offset])\x2C\x0d\n    msFromTimeSpec(stats[12 + offset]\x2C stats[13 + offset])\x2C\x0d\n    msFromTimeSpec(stats[14 + offset]\x2C stats[15 + offset])\x2C\x0d\n    msFromTimeSpec(stats[16 + offset]\x2C stats[17 + offset])\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nclass StatFs {\x0d\n  constructor(type\x2C bsize\x2C blocks\x2C bfree\x2C bavail\x2C files\x2C ffree) {\x0d\n    this.type = type;\x0d\n    this.bsize = bsize;\x0d\n    this.blocks = blocks;\x0d\n    this.bfree = bfree;\x0d\n    this.bavail = bavail;\x0d\n    this.files = files;\x0d\n    this.ffree = ffree;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStatFsFromBinding(stats) {\x0d\n  return new StatFs(\x0d\n    stats[0]\x2C stats[1]\x2C stats[2]\x2C stats[3]\x2C stats[4]\x2C stats[5]\x2C stats[6]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction stringToFlags(flags\x2C name = 'flags') {\x0d\n  if (typeof flags === 'number') {\x0d\n    validateInt32(flags\x2C name);\x0d\n    return flags;\x0d\n  }\x0d\n\x0d\n  if (flags == null) {\x0d\n    return O_RDONLY;\x0d\n  }\x0d\n\x0d\n  switch (flags) {\x0d\n    case 'r' : return O_RDONLY;\x0d\n    case 'rs' : // Fall through.\x0d\n    case 'sr' : return O_RDONLY | O_SYNC;\x0d\n    case 'r+' : return O_RDWR;\x0d\n    case 'rs+' : // Fall through.\x0d\n    case 'sr+' : return O_RDWR | O_SYNC;\x0d\n\x0d\n    case 'w' : return O_TRUNC | O_CREAT | O_WRONLY;\x0d\n    case 'wx' : // Fall through.\x0d\n    case 'xw' : return O_TRUNC | O_CREAT | O_WRONLY | O_EXCL;\x0d\n\x0d\n    case 'w+' : return O_TRUNC | O_CREAT | O_RDWR;\x0d\n    case 'wx+': // Fall through.\x0d\n    case 'xw+': return O_TRUNC | O_CREAT | O_RDWR | O_EXCL;\x0d\n\x0d\n    case 'a' : return O_APPEND | O_CREAT | O_WRONLY;\x0d\n    case 'ax' : // Fall through.\x0d\n    case 'xa' : return O_APPEND | O_CREAT | O_WRONLY | O_EXCL;\x0d\n    case 'as' : // Fall through.\x0d\n    case 'sa' : return O_APPEND | O_CREAT | O_WRONLY | O_SYNC;\x0d\n\x0d\n    case 'a+' : return O_APPEND | O_CREAT | O_RDWR;\x0d\n    case 'ax+': // Fall through.\x0d\n    case 'xa+': return O_APPEND | O_CREAT | O_RDWR | O_EXCL;\x0d\n    case 'as+': // Fall through.\x0d\n    case 'sa+': return O_APPEND | O_CREAT | O_RDWR | O_SYNC;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('flags'\x2C flags);\x0d\n}\x0d\n\x0d\nconst stringToSymlinkType = hideStackFrames((type) => {\x0d\n  let flags = 0;\x0d\n  if (typeof type === 'string') {\x0d\n    switch (type) {\x0d\n      case 'dir':\x0d\n        flags |= UV_FS_SYMLINK_DIR;\x0d\n        break;\x0d\n      case 'junction':\x0d\n        flags |= UV_FS_SYMLINK_JUNCTION;\x0d\n        break;\x0d\n      case 'file':\x0d\n        break;\x0d\n      default:\x0d\n        throw new ERR_FS_INVALID_SYMLINK_TYPE(type);\x0d\n    }\x0d\n  }\x0d\n  return flags;\x0d\n});\x0d\n\x0d\n// converts Date or number to a fractional UNIX timestamp\x0d\nfunction toUnixTimestamp(time\x2C name = 'time') {\x0d\n  // eslint-disable-next-line eqeqeq\x0d\n  if (typeof time === 'string' && +time == time) {\x0d\n    return +time;\x0d\n  }\x0d\n  if (NumberIsFinite(time)) {\x0d\n    if (time < 0) {\x0d\n      return DateNow() / 1000;\x0d\n    }\x0d\n    return time;\x0d\n  }\x0d\n  if (isDate(time)) {\x0d\n    // Convert to 123.456 UNIX timestamp\x0d\n    return DatePrototypeGetTime(time) / 1000;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(name\x2C ['Date'\x2C 'Time in seconds']\x2C time);\x0d\n}\x0d\n\x0d\nconst validateOffsetLengthRead = hideStackFrames(\x0d\n  (offset\x2C length\x2C bufferLength) => {\x0d\n    if (offset < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C '>= 0'\x2C offset);\x0d\n    }\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n    if (offset + length > bufferLength) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C\x0d\n                                                      `<= ${bufferLength - offset}`\x2C length);\x0d\n    }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validateOffsetLengthWrite = hideStackFrames(\x0d\n  (offset\x2C length\x2C byteLength) => {\x0d\n    if (offset > byteLength) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('offset'\x2C `<= ${byteLength}`\x2C offset);\x0d\n    }\x0d\n\x0d\n    if (length > byteLength - offset) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C `<= ${byteLength - offset}`\x2C length);\x0d\n    }\x0d\n\x0d\n    if (length < 0) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError('length'\x2C '>= 0'\x2C length);\x0d\n    }\x0d\n\x0d\n    validateInt32.withoutStackTrace(length\x2C 'length'\x2C 0);\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst validatePath = hideStackFrames((path\x2C propName = 'path') => {\x0d\n  if (typeof path !== 'string' && !isUint8Array(path)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C ['string'\x2C 'Buffer'\x2C 'URL']\x2C path);\x0d\n  }\x0d\n\x0d\n  const pathIsString = typeof path === 'string';\x0d\n  const pathIsUint8Array = isUint8Array(path);\x0d\n\x0d\n  // We can only perform meaningful checks on strings and Uint8Arrays.\x0d\n  if ((!pathIsString && !pathIsUint8Array) ||\x0d\n      (pathIsString && !StringPrototypeIncludes(path\x2C '\\u0000')) ||\x0d\n      (pathIsUint8Array && !TypedArrayPrototypeIncludes(path\x2C 0))) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE.HideStackFramesError(\x0d\n    propName\x2C\x0d\n    path\x2C\x0d\n    'must be a string\x2C Uint8Array\x2C or URL without null bytes'\x2C\x0d\n  );\x0d\n});\x0d\n\x0d\n// TODO(rafaelgss): implement the path.resolve on C++ side\x0d\n// See: https://github.com/nodejs/node/pull/44004#discussion_r930958420\x0d\n// The permission model needs the absolute path for the fs_permission\x0d\nconst resolvePath = pathModule.resolve;\x0d\nconst { isBuffer: BufferIsBuffer\x2C from: BufferFrom } = Buffer;\x0d\nconst BufferToString = uncurryThis(Buffer.prototype.toString);\x0d\nfunction possiblyTransformPath(path) {\x0d\n  if (permission.isEnabled()) {\x0d\n    if (typeof path === 'string') {\x0d\n      return resolvePath(path);\x0d\n    }\x0d\n    assert(isUint8Array(path));\x0d\n    if (!BufferIsBuffer(path)) path = BufferFrom(path);\x0d\n    // Avoid Buffer.from() and use a C++ binding instead to encode the result\x0d\n    // of path.resolve() in order to prevent path traversal attacks that\x0d\n    // monkey-patch Buffer internals.\x0d\n    return encodeUtf8String(resolvePath(BufferToString(path)));\x0d\n  }\x0d\n  return path;\x0d\n}\x0d\n\x0d\nconst getValidatedPath = hideStackFrames((fileURLOrPath\x2C propName = 'path') => {\x0d\n  const path = toPathIfFileURL(fileURLOrPath);\x0d\n  validatePath(path\x2C propName);\x0d\n  return possiblyTransformPath(path);\x0d\n});\x0d\n\x0d\nconst getValidatedFd = hideStackFrames((fd\x2C propName = 'fd') => {\x0d\n  if (ObjectIs(fd\x2C -0)) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(fd\x2C propName\x2C 0);\x0d\n\x0d\n  return fd;\x0d\n});\x0d\n\x0d\nconst validateBufferArray = hideStackFrames((buffers\x2C propName = 'buffers') => {\x0d\n  if (!ArrayIsArray(buffers))\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n\x0d\n  for (let i = 0; i < buffers.length; i++) {\x0d\n    if (!isArrayBufferView(buffers[i]))\x0d\n      throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(propName\x2C 'ArrayBufferView[]'\x2C buffers);\x0d\n  }\x0d\n\x0d\n  return buffers;\x0d\n});\x0d\n\x0d\nlet nonPortableTemplateWarn = true;\x0d\n\x0d\nfunction warnOnNonPortableTemplate(template) {\x0d\n  // Template strings passed to the mkdtemp() family of functions should not\x0d\n  // end with 'X' because they are handled inconsistently across platforms.\x0d\n  if (nonPortableTemplateWarn &&\x0d\n    ((typeof template === 'string' && StringPrototypeEndsWith(template\x2C 'X')) ||\x0d\n    (typeof template !== 'string' && TypedArrayPrototypeAt(template\x2C -1) === 0x58))) {\x0d\n    process.emitWarning('mkdtemp() templates ending with X are not portable. ' +\x0d\n                        'For details see: https://nodejs.org/api/fs.html');\x0d\n    nonPortableTemplateWarn = false;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst defaultCpOptions = {\x0d\n  dereference: false\x2C\x0d\n  errorOnExist: false\x2C\x0d\n  filter: undefined\x2C\x0d\n  force: true\x2C\x0d\n  preserveTimestamps: false\x2C\x0d\n  recursive: false\x2C\x0d\n  verbatimSymlinks: false\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmOptions = {\x0d\n  recursive: false\x2C\x0d\n  force: false\x2C\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n};\x0d\n\x0d\nconst defaultRmdirOptions = {\x0d\n  retryDelay: 100\x2C\x0d\n  maxRetries: 0\x2C\x0d\n  recursive: false\x2C\x0d\n};\x0d\n\x0d\nconst validateCpOptions = hideStackFrames((options) => {\x0d\n  if (options === undefined)\x0d\n    return { ...defaultCpOptions };\x0d\n  validateObject(options\x2C 'options');\x0d\n  options = { ...defaultCpOptions\x2C ...options };\x0d\n  validateBoolean(options.dereference\x2C 'options.dereference');\x0d\n  validateBoolean(options.errorOnExist\x2C 'options.errorOnExist');\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n  validateBoolean(options.preserveTimestamps\x2C 'options.preserveTimestamps');\x0d\n  validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n  validateBoolean(options.verbatimSymlinks\x2C 'options.verbatimSymlinks');\x0d\n  options.mode = getValidMode(options.mode\x2C 'copyFile');\x0d\n  if (options.dereference === true && options.verbatimSymlinks === true) {\x0d\n    throw new ERR_INCOMPATIBLE_OPTION_PAIR.HideStackFramesError('dereference'\x2C 'verbatimSymlinks');\x0d\n  }\x0d\n  if (options.filter !== undefined) {\x0d\n    validateFunction(options.filter\x2C 'options.filter');\x0d\n  }\x0d\n  return options;\x0d\n});\x0d\n\x0d\nconst validateRmOptions = hideStackFrames((path\x2C options\x2C expectDir\x2C cb) => {\x0d\n  options = validateRmdirOptions(options\x2C defaultRmOptions);\x0d\n  validateBoolean(options.force\x2C 'options.force');\x0d\n\x0d\n  lazyLoadFs().lstat(path\x2C (err\x2C stats) => {\x0d\n    if (err) {\x0d\n      if (options.force && err.code === 'ENOENT') {\x0d\n        return cb(null\x2C options);\x0d\n      }\x0d\n      return cb(err\x2C options);\x0d\n    }\x0d\n\x0d\n    if (expectDir && !stats.isDirectory()) {\x0d\n      return cb(false);\x0d\n    }\x0d\n\x0d\n    if (stats.isDirectory() && !options.recursive) {\x0d\n      const err = new ERR_FS_EISDIR.HideStackFramesError({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      });\x0d\n\x0d\n      return cb(err);\x0d\n    }\x0d\n    return cb(null\x2C options);\x0d\n  });\x0d\n});\x0d\n\x0d\nconst validateRmOptionsSync = hideStackFrames((path\x2C options\x2C expectDir) => {\x0d\n  options = validateRmdirOptions.withoutStackTrace(options\x2C defaultRmOptions);\x0d\n  validateBoolean.withoutStackTrace(options.force\x2C 'options.force');\x0d\n\x0d\n  if (!options.force || expectDir || !options.recursive) {\x0d\n    const isDirectory = lazyLoadFs()\x0d\n      .lstatSync(path\x2C { throwIfNoEntry: !options.force })?.isDirectory();\x0d\n\x0d\n    if (expectDir && !isDirectory) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    if (isDirectory && !options.recursive) {\x0d\n      throw new ERR_FS_EISDIR.HideStackFramesError({\x0d\n        code: 'EISDIR'\x2C\x0d\n        message: 'is a directory'\x2C\x0d\n        path\x2C\x0d\n        syscall: 'rm'\x2C\x0d\n        errno: EISDIR\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return options;\x0d\n});\x0d\n\x0d\nlet recursiveRmdirWarned;\x0d\nfunction emitRecursiveRmdirWarning() {\x0d\n  if (recursiveRmdirWarned === undefined) {\x0d\n    // TODO(joyeecheung): use getOptionValue('--no-deprecation') instead.\x0d\n    recursiveRmdirWarned = process.noDeprecation;\x0d\n  }\x0d\n  if (!recursiveRmdirWarned) {\x0d\n    process.emitWarning(\x0d\n      'In future versions of Node.js\x2C fs.rmdir(path\x2C { recursive: true }) ' +\x0d\n      'will be removed. Use fs.rm(path\x2C { recursive: true }) instead'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0147'\x2C\x0d\n    );\x0d\n    recursiveRmdirWarned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst validateRmdirOptions = hideStackFrames(\x0d\n  (options\x2C defaults = defaultRmdirOptions) => {\x0d\n    if (options === undefined)\x0d\n      return defaults;\x0d\n    validateObject.withoutStackTrace(options\x2C 'options');\x0d\n\x0d\n    options = { ...defaults\x2C ...options };\x0d\n\x0d\n    validateBoolean.withoutStackTrace(options.recursive\x2C 'options.recursive');\x0d\n    validateInt32.withoutStackTrace(options.retryDelay\x2C 'options.retryDelay'\x2C 0);\x0d\n    validateUint32.withoutStackTrace(options.maxRetries\x2C 'options.maxRetries');\x0d\n\x0d\n    return options;\x0d\n  });\x0d\n\x0d\nconst getValidMode = hideStackFrames((mode\x2C type) => {\x0d\n  let min = kMinimumAccessMode;\x0d\n  let max = kMaximumAccessMode;\x0d\n  let def = F_OK;\x0d\n  if (type === 'copyFile') {\x0d\n    min = kMinimumCopyMode;\x0d\n    max = kMaximumCopyMode;\x0d\n    def = mode || kDefaultCopyMode;\x0d\n  } else {\x0d\n    assert(type === 'access');\x0d\n  }\x0d\n  if (mode == null) {\x0d\n    return def;\x0d\n  }\x0d\n  validateInteger.withoutStackTrace(mode\x2C 'mode'\x2C min\x2C max);\x0d\n  return mode;\x0d\n});\x0d\n\x0d\nconst validateStringAfterArrayBufferView = hideStackFrames((buffer\x2C name) => {\x0d\n  if (typeof buffer !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(\x0d\n      name\x2C\x0d\n      ['string'\x2C 'Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n      buffer\x2C\x0d\n    );\x0d\n  }\x0d\n});\x0d\n\x0d\nconst validatePosition = hideStackFrames((position\x2C name) => {\x0d\n  if (typeof position === 'number') {\x0d\n    validateInteger.withoutStackTrace(position\x2C name\x2C -1);\x0d\n  } else if (typeof position === 'bigint') {\x0d\n    if (!(position >= -(2n ** 63n) && position <= 2n ** 63n - 1n)) {\x0d\n      throw new ERR_OUT_OF_RANGE.HideStackFramesError(name\x2C\x0d\n                                                      `>= ${-(2n ** 63n)} && <= ${2n ** 63n - 1n}`\x2C\x0d\n                                                      position);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE.HideStackFramesError(name\x2C ['integer'\x2C 'bigint']\x2C position);\x0d\n  }\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  assertEncoding\x2C\x0d\n  BigIntStats\x2C  // for testing\x0d\n  copyObject\x2C\x0d\n  Dirent\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirent\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedFd\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n  possiblyTransformPath\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  realpathCacheKey: Symbol('realpathCacheKey')\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  Stats\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validatePath\x2C\x0d\n  validatePosition\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmOptionsSync\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8ed57e,28,7877,8505,C9O7904C16O7923C27O7984C29O8006C30O8017C36O8057C41O8102C43O8126C47O8142C54O8178C60O8218C78O8224C83O8218C84O8314C91O8323C96O8342C99O8365C104O8342C108O8393C114O8422C119O8450C127O8422C132O8487C134O8502,,
code-creation,JS,10,159792,0x1c66f8ef5f6,48,assertEncoding node:internal/fs/utils:160:24,0x3fcdef9d610,~
code-source-info,0x1c66f8ef5f6,28,3881,4063,C0O3897C6O3914C9O3921C14O3921C21O3965C24O3993C40O3999C45O3993C47O4062,,
code-creation,JS,10,160030,0x1c66f8ef70e,20,toPathIfFileURL node:internal/url:1547:25,0x3fcdefa35f8,~
script-source,32,node:internal/url,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Boolean\x2C\x0d\n  Int8Array\x2C\x0d\n  IteratorPrototype\x2C\x0d\n  Number\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeCharAt\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToWellFormed\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  encodeStr\x2C\x0d\n  hexTable\x2C\x0d\n  isHexTable\x2C\x0d\n} = require('internal/querystring');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  removeColors\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n  SideEffectFreeRegExpPrototypeSymbolReplace\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ARG_NOT_ITERABLE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FILE_URL_HOST\x2C\x0d\n    ERR_INVALID_FILE_URL_PATH\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_INVALID_TUPLE\x2C\x0d\n    ERR_INVALID_URL\x2C\x0d\n    ERR_INVALID_URL_SCHEME\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_NO_CRYPTO\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  CHAR_AMPERSAND\x2C\x0d\n  CHAR_BACKWARD_SLASH\x2C\x0d\n  CHAR_EQUAL\x2C\x0d\n  CHAR_FORWARD_SLASH\x2C\x0d\n  CHAR_LOWERCASE_A\x2C\x0d\n  CHAR_LOWERCASE_Z\x2C\x0d\n  CHAR_PERCENT\x2C\x0d\n  CHAR_PLUS\x2C\x0d\n} = require('internal/constants');\x0d\nconst path = require('path');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst querystring = require('querystring');\x0d\n\x0d\nconst { platform } = process;\x0d\nconst isWindows = platform === 'win32';\x0d\n\x0d\nconst bindingUrl = internalBinding('url');\x0d\n\x0d\nconst FORWARD_SLASH = /\\//g;\x0d\n\x0d\nconst contextForInspect = Symbol('context');\x0d\n\x0d\n// `unsafeProtocol`\x2C `hostlessProtocol` and `slashedProtocol` is\x0d\n// deliberately moved to `internal/url` rather than `url`.\x0d\n// Workers does not bootstrap URL module. Therefore\x2C `SafeSet`\x0d\n// is not initialized on bootstrap. This case breaks the\x0d\n// test-require-delete-array-iterator test.\x0d\n\x0d\n// Protocols that can allow "unsafe" and "unwise" chars.\x0d\nconst unsafeProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that never have a hostname.\x0d\nconst hostlessProtocol = new SafeSet([\x0d\n  'javascript'\x2C\x0d\n  'javascript:'\x2C\x0d\n]);\x0d\n// Protocols that always contain a // bit.\x0d\nconst slashedProtocol = new SafeSet([\x0d\n  'http'\x2C\x0d\n  'http:'\x2C\x0d\n  'https'\x2C\x0d\n  'https:'\x2C\x0d\n  'ftp'\x2C\x0d\n  'ftp:'\x2C\x0d\n  'gopher'\x2C\x0d\n  'gopher:'\x2C\x0d\n  'file'\x2C\x0d\n  'file:'\x2C\x0d\n  'ws'\x2C\x0d\n  'ws:'\x2C\x0d\n  'wss'\x2C\x0d\n  'wss:'\x2C\x0d\n]);\x0d\n\x0d\nconst updateActions = {\x0d\n  kProtocol: 0\x2C\x0d\n  kHost: 1\x2C\x0d\n  kHostname: 2\x2C\x0d\n  kPort: 3\x2C\x0d\n  kUsername: 4\x2C\x0d\n  kPassword: 5\x2C\x0d\n  kPathname: 6\x2C\x0d\n  kSearch: 7\x2C\x0d\n  kHash: 8\x2C\x0d\n  kHref: 9\x2C\x0d\n};\x0d\nlet blob;\x0d\nlet cryptoRandom;\x0d\n\x0d\nfunction lazyBlob() {\x0d\n  blob ??= require('internal/blob');\x0d\n  return blob;\x0d\n}\x0d\n\x0d\nfunction lazyCryptoRandom() {\x0d\n  try {\x0d\n    cryptoRandom ??= require('internal/crypto/random');\x0d\n  } catch {\x0d\n    // If Node.js built without crypto support\x2C we'll fall\x0d\n    // through here and handle it later.\x0d\n  }\x0d\n  return cryptoRandom;\x0d\n}\x0d\n\x0d\n// This class provides the internal state of a URL object. An instance of this\x0d\n// class is stored in every URL object and is accessed internally by setters\x0d\n// and getters. It roughly corresponds to the concept of a URL record in the\x0d\n// URL Standard\x2C with a few differences. It is also the object transported to\x0d\n// the C++ binding.\x0d\n// Refs: https://url.spec.whatwg.org/#concept-url\x0d\nclass URLContext {\x0d\n  // This is the maximum value uint32_t can get.\x0d\n  // Ada uses uint32_t(-1) for declaring omitted values.\x0d\n  static #omitted = 4294967295;\x0d\n\x0d\n  href = '';\x0d\n  protocol_end = 0;\x0d\n  username_end = 0;\x0d\n  host_start = 0;\x0d\n  host_end = 0;\x0d\n  pathname_start = 0;\x0d\n  search_start = 0;\x0d\n  hash_start = 0;\x0d\n  port = 0;\x0d\n  /**\x0d\n   * Refers to `ada::scheme::type`\x0d\n   *\x0d\n   * enum type : uint8_t {\x0d\n   *   HTTP = 0\x2C\x0d\n   *   NOT_SPECIAL = 1\x2C\x0d\n   *   HTTPS = 2\x2C\x0d\n   *   WS = 3\x2C\x0d\n   *   FTP = 4\x2C\x0d\n   *   WSS = 5\x2C\x0d\n   *   FILE = 6\x0d\n   * };\x0d\n   * @type {number}\x0d\n   */\x0d\n  scheme_type = 1;\x0d\n\x0d\n  get hasPort() {\x0d\n    return this.port !== URLContext.#omitted;\x0d\n  }\x0d\n\x0d\n  get hasSearch() {\x0d\n    return this.search_start !== URLContext.#omitted;\x0d\n  }\x0d\n\x0d\n  get hasHash() {\x0d\n    return this.hash_start !== URLContext.#omitted;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet setURLSearchParamsModified;\x0d\nlet setURLSearchParamsContext;\x0d\nlet getURLSearchParamsList;\x0d\nlet setURLSearchParams;\x0d\n\x0d\nclass URLSearchParamsIterator {\x0d\n  #target;\x0d\n  #kind;\x0d\n  #index;\x0d\n\x0d\n  // https://heycam.github.io/webidl/#dfn-default-iterator-object\x0d\n  constructor(target\x2C kind) {\x0d\n    this.#target = target;\x0d\n    this.#kind = kind;\x0d\n    this.#index = 0;\x0d\n  }\x0d\n\x0d\n  next() {\x0d\n    if (typeof this !== 'object' || this === null || !(#target in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    const index = this.#index;\x0d\n    const values = getURLSearchParamsList(this.#target);\x0d\n    const len = values.length;\x0d\n    if (index >= len) {\x0d\n      return {\x0d\n        value: undefined\x2C\x0d\n        done: true\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const name = values[index];\x0d\n    const value = values[index + 1];\x0d\n    this.#index = index + 2;\x0d\n\x0d\n    let result;\x0d\n    if (this.#kind === 'key') {\x0d\n      result = name;\x0d\n    } else if (this.#kind === 'value') {\x0d\n      result = value;\x0d\n    } else {\x0d\n      result = [name\x2C value];\x0d\n    }\x0d\n\x0d\n    return {\x0d\n      value: result\x2C\x0d\n      done: false\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (!this || typeof this !== 'object' || !(#target in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParamsIterator');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const index = this.#index;\x0d\n    const values = getURLSearchParamsList(this.#target);\x0d\n    const output = ArrayPrototypeReduce(\x0d\n      ArrayPrototypeSlice(values\x2C index)\x2C\x0d\n      (prev\x2C cur\x2C i) => {\x0d\n        const key = i % 2 === 0;\x0d\n        if (this.#kind === 'key' && key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (this.#kind === 'value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C cur);\x0d\n        } else if (this.#kind === 'key+value' && !key) {\x0d\n          ArrayPrototypePush(prev\x2C [values[index + i - 1]\x2C cur]);\x0d\n        }\x0d\n        return prev;\x0d\n      }\x2C\x0d\n      []\x2C\x0d\n    );\x0d\n    const breakLn = StringPrototypeIncludes(inspect(output\x2C innerOpts)\x2C '\\n');\x0d\n    const outputStrs = ArrayPrototypeMap(output\x2C (p) => inspect(p\x2C innerOpts));\x0d\n    let outputStr;\x0d\n    if (breakLn) {\x0d\n      outputStr = `\\n  ${ArrayPrototypeJoin(outputStrs\x2C '\x2C\\n  ')}`;\x0d\n    } else {\x0d\n      outputStr = ` ${ArrayPrototypeJoin(outputStrs\x2C '\x2C ')}`;\x0d\n    }\x0d\n    return `${this[SymbolToStringTag]} {${outputStr} }`;\x0d\n  }\x0d\n}\x0d\n\x0d\n// https://heycam.github.io/webidl/#dfn-iterator-prototype-object\x0d\ndelete URLSearchParamsIterator.prototype.constructor;\x0d\nObjectSetPrototypeOf(URLSearchParamsIterator.prototype\x2C IteratorPrototype);\x0d\n\x0d\nObjectDefineProperties(URLSearchParamsIterator.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams Iterator' }\x2C\x0d\n  next: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n\x0d\nclass URLSearchParams {\x0d\n  #searchParams = [];\x0d\n\x0d\n  // "associated url object"\x0d\n  #context;\x0d\n\x0d\n  static {\x0d\n    setURLSearchParamsContext = (obj\x2C ctx) => {\x0d\n      obj.#context = ctx;\x0d\n    };\x0d\n    getURLSearchParamsList = (obj) => obj.#searchParams;\x0d\n    setURLSearchParams = (obj\x2C query) => {\x0d\n      if (query === undefined) {\x0d\n        obj.#searchParams = [];\x0d\n      } else {\x0d\n        obj.#searchParams = parseParams(query);\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  // URL Standard says the default value is ''\x2C but as undefined and '' have\x0d\n  // the same result\x2C undefined is used to prevent unnecessary parsing.\x0d\n  // Default parameter is necessary to keep URLSearchParams.length === 0 in\x0d\n  // accordance with Web IDL spec.\x0d\n  constructor(init = undefined) {\x0d\n    if (init == null) {\x0d\n      // Do nothing\x0d\n    } else if (typeof init === 'object' || typeof init === 'function') {\x0d\n      const method = init[SymbolIterator];\x0d\n      if (method === this[SymbolIterator] && #searchParams in init) {\x0d\n        // While the spec does not have this branch\x2C we can use it as a\x0d\n        // shortcut to avoid having to go through the costly generic iterator.\x0d\n        const childParams = init.#searchParams;\x0d\n        this.#searchParams = childParams.slice();\x0d\n      } else if (method != null) {\x0d\n        // Sequence<sequence<USVString>>\x0d\n        if (typeof method !== 'function') {\x0d\n          throw new ERR_ARG_NOT_ITERABLE('Query pairs');\x0d\n        }\x0d\n\x0d\n        // The following implementationd differs from the URL specification:\x0d\n        // Sequences must first be converted from ECMAScript objects before\x0d\n        // and operations are done on them\x2C and the operation of converting\x0d\n        // the sequences would first exhaust the iterators. If the iterator\x0d\n        // returns something invalid in the middle\x2C whether it would be called\x0d\n        // after that would be an observable change to the users.\x0d\n        // Exhausting the iterator and later converting them to USVString comes\x0d\n        // with a significant cost (~40-80%). In order optimize URLSearchParams\x0d\n        // creation duration\x2C Node.js merges the iteration and converting\x0d\n        // iterations into a single iteration.\x0d\n        for (const pair of init) {\x0d\n          if (pair == null) {\x0d\n            throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n          } else if (ArrayIsArray(pair)) {\x0d\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\x0d\n            if (pair.length !== 2) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n            // Append (innerSequence[0]\x2C innerSequence[1]) to querys list.\x0d\n            ArrayPrototypePush(\x0d\n              this.#searchParams\x2C\x0d\n              StringPrototypeToWellFormed(`${pair[0]}`)\x2C\x0d\n              StringPrototypeToWellFormed(`${pair[1]}`)\x2C\x0d\n            );\x0d\n          } else {\x0d\n            if (((typeof pair !== 'object' && typeof pair !== 'function') ||\x0d\n                typeof pair[SymbolIterator] !== 'function')) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n\x0d\n            let length = 0;\x0d\n\x0d\n            for (const element of pair) {\x0d\n              length++;\x0d\n              ArrayPrototypePush(this.#searchParams\x2C StringPrototypeToWellFormed(`${element}`));\x0d\n            }\x0d\n\x0d\n            // If innerSequence's size is not 2\x2C then throw a TypeError.\x0d\n            if (length !== 2) {\x0d\n              throw new ERR_INVALID_TUPLE('Each query pair'\x2C '[name\x2C value]');\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      } else {\x0d\n        // Record<USVString\x2C USVString>\x0d\n        // Need to use reflection APIs for full spec compliance.\x0d\n        const visited = new SafeMap();\x0d\n        const keys = ReflectOwnKeys(init);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const desc = ReflectGetOwnPropertyDescriptor(init\x2C key);\x0d\n          if (desc !== undefined && desc.enumerable) {\x0d\n            const typedKey = StringPrototypeToWellFormed(key);\x0d\n            const typedValue = StringPrototypeToWellFormed(`${init[key]}`);\x0d\n\x0d\n            // Two different keys may become the same USVString after normalization.\x0d\n            // In that case\x2C we retain the later one. Refer to WPT.\x0d\n            const keyIdx = visited.get(typedKey);\x0d\n            if (keyIdx !== undefined) {\x0d\n              this.#searchParams[keyIdx] = typedValue;\x0d\n            } else {\x0d\n              visited.set(typedKey\x2C ArrayPrototypePush(this.#searchParams\x2C\x0d\n                                                       typedKey\x2C\x0d\n                                                       typedValue) - 1);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      // https://url.spec.whatwg.org/#dom-urlsearchparams-urlsearchparams\x0d\n      init = StringPrototypeToWellFormed(`${init}`);\x0d\n      this.#searchParams = init ? parseParams(init) : [];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [inspect.custom](recurseTimes\x2C ctx) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (typeof recurseTimes === 'number' && recurseTimes < 0)\x0d\n      return ctx.stylize('[Object]'\x2C 'special');\x0d\n\x0d\n    const separator = '\x2C ';\x0d\n    const innerOpts = { ...ctx };\x0d\n    if (recurseTimes !== null) {\x0d\n      innerOpts.depth = recurseTimes - 1;\x0d\n    }\x0d\n    const innerInspect = (v) => inspect(v\x2C innerOpts);\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    const output = [];\x0d\n    for (let i = 0; i < list.length; i += 2)\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        `${innerInspect(list[i])} => ${innerInspect(list[i + 1])}`);\x0d\n\x0d\n    const length = ArrayPrototypeReduce(\x0d\n      output\x2C\x0d\n      (prev\x2C cur) => prev + removeColors(cur).length + separator.length\x2C\x0d\n      -separator.length\x2C\x0d\n    );\x0d\n    if (length > ctx.breakLength) {\x0d\n      return `${this.constructor.name} {\\n` +\x0d\n      `  ${ArrayPrototypeJoin(output\x2C '\x2C\\n  ')} }`;\x0d\n    } else if (output.length) {\x0d\n      return `${this.constructor.name} { ` +\x0d\n      `${ArrayPrototypeJoin(output\x2C separator)} }`;\x0d\n    }\x0d\n    return `${this.constructor.name} {}`;\x0d\n  }\x0d\n\x0d\n  get size() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n    return this.#searchParams.length / 2;\x0d\n  }\x0d\n\x0d\n  append(name\x2C value) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n    value = StringPrototypeToWellFormed(`${value}`);\x0d\n    ArrayPrototypePush(this.#searchParams\x2C name\x2C value);\x0d\n\x0d\n    if (this.#context) {\x0d\n      setURLSearchParamsModified(this.#context);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  delete(name\x2C value = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n\x0d\n    if (value !== undefined) {\x0d\n      value = StringPrototypeToWellFormed(`${value}`);\x0d\n      for (let i = 0; i < list.length;) {\x0d\n        if (list[i] === name && list[i + 1] === value) {\x0d\n          list.splice(i\x2C 2);\x0d\n        } else {\x0d\n          i += 2;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      for (let i = 0; i < list.length;) {\x0d\n        if (list[i] === name) {\x0d\n          list.splice(i\x2C 2);\x0d\n        } else {\x0d\n          i += 2;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      setURLSearchParamsModified(this.#context);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get(name) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        return list[i + 1];\x0d\n      }\x0d\n    }\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  getAll(name) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    const values = [];\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        values.push(list[i + 1]);\x0d\n      }\x0d\n    }\x0d\n    return values;\x0d\n  }\x0d\n\x0d\n  has(name\x2C value = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 1) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n\x0d\n    if (value !== undefined) {\x0d\n      value = StringPrototypeToWellFormed(`${value}`);\x0d\n    }\x0d\n\x0d\n    for (let i = 0; i < list.length; i += 2) {\x0d\n      if (list[i] === name) {\x0d\n        if (value === undefined || list[i + 1] === value) {\x0d\n          return true;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  set(name\x2C value) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    if (arguments.length < 2) {\x0d\n      throw new ERR_MISSING_ARGS('name'\x2C 'value');\x0d\n    }\x0d\n\x0d\n    const list = this.#searchParams;\x0d\n    name = StringPrototypeToWellFormed(`${name}`);\x0d\n    value = StringPrototypeToWellFormed(`${value}`);\x0d\n\x0d\n    // If there are any name-value pairs whose name is `name`\x2C in `list`\x2C set\x0d\n    // the value of the first such name-value pair to `value` and remove the\x0d\n    // others.\x0d\n    let found = false;\x0d\n    for (let i = 0; i < list.length;) {\x0d\n      const cur = list[i];\x0d\n      if (cur === name) {\x0d\n        if (!found) {\x0d\n          list[i + 1] = value;\x0d\n          found = true;\x0d\n          i += 2;\x0d\n        } else {\x0d\n          list.splice(i\x2C 2);\x0d\n        }\x0d\n      } else {\x0d\n        i += 2;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Otherwise\x2C append a new name-value pair whose name is `name` and value\x0d\n    // is `value`\x2C to `list`.\x0d\n    if (!found) {\x0d\n      ArrayPrototypePush(list\x2C name\x2C value);\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      setURLSearchParamsModified(this.#context);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  sort() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    const a = this.#searchParams;\x0d\n    const len = a.length;\x0d\n\x0d\n    if (len <= 2) {\x0d\n      // Nothing needs to be done.\x0d\n    } else if (len < 100) {\x0d\n      // 100 is found through testing.\x0d\n      // Simple stable in-place insertion sort\x0d\n      // Derived from v8/src/js/array.js\x0d\n      for (let i = 2; i < len; i += 2) {\x0d\n        const curKey = a[i];\x0d\n        const curVal = a[i + 1];\x0d\n        let j;\x0d\n        for (j = i - 2; j >= 0; j -= 2) {\x0d\n          if (a[j] > curKey) {\x0d\n            a[j + 2] = a[j];\x0d\n            a[j + 3] = a[j + 1];\x0d\n          } else {\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n        a[j + 2] = curKey;\x0d\n        a[j + 3] = curVal;\x0d\n      }\x0d\n    } else {\x0d\n      // Bottom-up iterative stable merge sort\x0d\n      const lBuffer = new Array(len);\x0d\n      const rBuffer = new Array(len);\x0d\n      for (let step = 2; step < len; step *= 2) {\x0d\n        for (let start = 0; start < len - 2; start += 2 * step) {\x0d\n          const mid = start + step;\x0d\n          let end = mid + step;\x0d\n          end = end < len ? end : len;\x0d\n          if (mid > end)\x0d\n            continue;\x0d\n          merge(a\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#context) {\x0d\n      setURLSearchParamsModified(this.#context);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterators\x0d\n  // Define entries here rather than [Symbol.iterator] as the function name\x0d\n  // must be set to `entries`.\x0d\n  entries() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'key+value');\x0d\n  }\x0d\n\x0d\n  forEach(callback\x2C thisArg = undefined) {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    let list = this.#searchParams;\x0d\n\x0d\n    let i = 0;\x0d\n    while (i < list.length) {\x0d\n      const key = list[i];\x0d\n      const value = list[i + 1];\x0d\n      callback.call(thisArg\x2C value\x2C key\x2C this);\x0d\n      // In case the URL object's `search` is updated\x0d\n      list = this.#searchParams;\x0d\n      i += 2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable\x0d\n  keys() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'key');\x0d\n  }\x0d\n\x0d\n  values() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return new URLSearchParamsIterator(this\x2C 'value');\x0d\n  }\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-stringifier\x0d\n  // https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior\x0d\n  toString() {\x0d\n    if (typeof this !== 'object' || this === null || !(#searchParams in this))\x0d\n      throw new ERR_INVALID_THIS('URLSearchParams');\x0d\n\x0d\n    return serializeParams(this.#searchParams);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URLSearchParams.prototype\x2C {\x0d\n  append: kEnumerableProperty\x2C\x0d\n  delete: kEnumerableProperty\x2C\x0d\n  get: kEnumerableProperty\x2C\x0d\n  getAll: kEnumerableProperty\x2C\x0d\n  has: kEnumerableProperty\x2C\x0d\n  set: kEnumerableProperty\x2C\x0d\n  size: kEnumerableProperty\x2C\x0d\n  sort: kEnumerableProperty\x2C\x0d\n  entries: kEnumerableProperty\x2C\x0d\n  forEach: kEnumerableProperty\x2C\x0d\n  keys: kEnumerableProperty\x2C\x0d\n  values: kEnumerableProperty\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URLSearchParams' }\x2C\x0d\n\x0d\n  // https://heycam.github.io/webidl/#es-iterable-entries\x0d\n  [SymbolIterator]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    value: URLSearchParams.prototype.entries\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Checks if a value has the shape of a WHATWG URL object.\x0d\n *\x0d\n * Using a symbol or instanceof would not be able to recognize URL objects\x0d\n * coming from other implementations (e.g. in Electron)\x2C so instead we are\x0d\n * checking some well known properties for a lack of a better test.\x0d\n *\x0d\n * We use `href` and `protocol` as they are the only properties that are\x0d\n * easy to retrieve and calculate due to the lazy nature of the getters.\x0d\n *\x0d\n * We check for `auth` and `path` attribute to distinguish legacy url instance with\x0d\n * WHATWG URL instance.\x0d\n * @param {*} self\x0d\n * @returns {self is URL}\x0d\n */\x0d\nfunction isURL(self) {\x0d\n  return Boolean(self?.href && self.protocol && self.auth === undefined && self.path === undefined);\x0d\n}\x0d\n\x0d\nclass URL {\x0d\n  #context = new URLContext();\x0d\n  #searchParams;\x0d\n  #searchParamsModified;\x0d\n\x0d\n  static {\x0d\n    setURLSearchParamsModified = (obj) => {\x0d\n      // When URLSearchParams changes\x2C we lazily update URL on the next read/write for performance.\x0d\n      obj.#searchParamsModified = true;\x0d\n\x0d\n      // If URL has an existing search\x2C remove it without cascading back to URLSearchParams.\x0d\n      // Do this to avoid any internal confusion about whether URLSearchParams or URL is up-to-date.\x0d\n      if (obj.#context.hasSearch) {\x0d\n        obj.#updateContext(bindingUrl.update(obj.#context.href\x2C updateActions.kSearch\x2C ''));\x0d\n      }\x0d\n    };\x0d\n  }\x0d\n\x0d\n  constructor(input\x2C base = undefined) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    // StringPrototypeToWellFormed is not needed.\x0d\n    input = `${input}`;\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      base = `${base}`;\x0d\n    }\x0d\n\x0d\n    this.#updateContext(bindingUrl.parse(input\x2C base));\x0d\n  }\x0d\n\x0d\n  [inspect.custom](depth\x2C opts) {\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const constructor = getConstructorOf(this) || URL;\x0d\n    const obj = { __proto__: { constructor } };\x0d\n\x0d\n    obj.href = this.href;\x0d\n    obj.origin = this.origin;\x0d\n    obj.protocol = this.protocol;\x0d\n    obj.username = this.username;\x0d\n    obj.password = this.password;\x0d\n    obj.host = this.host;\x0d\n    obj.hostname = this.hostname;\x0d\n    obj.port = this.port;\x0d\n    obj.pathname = this.pathname;\x0d\n    obj.search = this.search;\x0d\n    obj.searchParams = this.searchParams;\x0d\n    obj.hash = this.hash;\x0d\n\x0d\n    if (opts.showHidden) {\x0d\n      obj[contextForInspect] = this.#context;\x0d\n    }\x0d\n\x0d\n    return `${constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  #getSearchFromContext() {\x0d\n    if (!this.#context.hasSearch) return '';\x0d\n    let endsAt = this.#context.href.length;\x0d\n    if (this.#context.hasHash) endsAt = this.#context.hash_start;\x0d\n    if (endsAt - this.#context.search_start <= 1) return '';\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.search_start\x2C endsAt);\x0d\n  }\x0d\n\x0d\n  #getSearchFromParams() {\x0d\n    if (!this.#searchParams?.size) return '';\x0d\n    return `?${this.#searchParams}`;\x0d\n  }\x0d\n\x0d\n  #ensureSearchParamsUpdated() {\x0d\n    // URL is updated lazily to greatly improve performance when URLSearchParams is updated repeatedly.\x0d\n    // If URLSearchParams has been modified\x2C reflect that back into URL\x2C without cascading back.\x0d\n    if (this.#searchParamsModified) {\x0d\n      this.#searchParamsModified = false;\x0d\n      this.#updateContext(bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C this.#getSearchFromParams()));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Update the internal context state for URL.\x0d\n   * @param {string} href New href string from `bindingUrl.update`.\x0d\n   * @param {boolean} [shouldUpdateSearchParams] If the update has potential to update search params (href/search).\x0d\n   */\x0d\n  #updateContext(href\x2C shouldUpdateSearchParams = false) {\x0d\n    const previousSearch = shouldUpdateSearchParams && this.#searchParams &&\x0d\n      (this.#searchParamsModified ? this.#getSearchFromParams() : this.#getSearchFromContext());\x0d\n\x0d\n    this.#context.href = href;\x0d\n\x0d\n    const {\x0d\n      0: protocol_end\x2C\x0d\n      1: username_end\x2C\x0d\n      2: host_start\x2C\x0d\n      3: host_end\x2C\x0d\n      4: port\x2C\x0d\n      5: pathname_start\x2C\x0d\n      6: search_start\x2C\x0d\n      7: hash_start\x2C\x0d\n      8: scheme_type\x2C\x0d\n    } = bindingUrl.urlComponents;\x0d\n\x0d\n    this.#context.protocol_end = protocol_end;\x0d\n    this.#context.username_end = username_end;\x0d\n    this.#context.host_start = host_start;\x0d\n    this.#context.host_end = host_end;\x0d\n    this.#context.port = port;\x0d\n    this.#context.pathname_start = pathname_start;\x0d\n    this.#context.search_start = search_start;\x0d\n    this.#context.hash_start = hash_start;\x0d\n    this.#context.scheme_type = scheme_type;\x0d\n\x0d\n    if (this.#searchParams) {\x0d\n      // If the search string has updated\x2C URL becomes the source of truth\x2C and we update URLSearchParams.\x0d\n      // Only do this when we're expecting it to have changed\x2C otherwise a change to hash etc.\x0d\n      // would incorrectly compare the URLSearchParams state to the empty URL search state.\x0d\n      if (shouldUpdateSearchParams) {\x0d\n        const currentSearch = this.#getSearchFromContext();\x0d\n        if (previousSearch !== currentSearch) {\x0d\n          setURLSearchParams(this.#searchParams\x2C currentSearch);\x0d\n          this.#searchParamsModified = false;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // If we have a URLSearchParams\x2C ensure that URL is up-to-date with any modification to it.\x0d\n      this.#ensureSearchParamsUpdated();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toString() {\x0d\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\x0d\n    this.#ensureSearchParamsUpdated();\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  get href() {\x0d\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\x0d\n    this.#ensureSearchParamsUpdated();\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  set href(value) {\x0d\n    value = `${value}`;\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHref\x2C value);\x0d\n    if (!href) { throw new ERR_INVALID_URL(value); }\x0d\n    this.#updateContext(href\x2C true);\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get origin() {\x0d\n    const protocol = StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\x0d\n\x0d\n    // Check if scheme_type is not `NOT_SPECIAL`\x0d\n    if (this.#context.scheme_type !== 1) {\x0d\n      // Check if scheme_type is `FILE`\x0d\n      if (this.#context.scheme_type === 6) {\x0d\n        return 'null';\x0d\n      }\x0d\n      return `${protocol}//${this.host}`;\x0d\n    }\x0d\n\x0d\n    if (protocol === 'blob:') {\x0d\n      const path = this.pathname;\x0d\n      if (path.length > 0) {\x0d\n        try {\x0d\n          const out = new URL(path);\x0d\n          // Only return origin of scheme is `http` or `https`\x0d\n          // Otherwise return a new opaque origin (null).\x0d\n          if (out.#context.scheme_type === 0 || out.#context.scheme_type === 2) {\x0d\n            return `${out.protocol}//${out.host}`;\x0d\n          }\x0d\n        } catch {\x0d\n          // Do nothing.\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return 'null';\x0d\n  }\x0d\n\x0d\n  get protocol() {\x0d\n    return StringPrototypeSlice(this.#context.href\x2C 0\x2C this.#context.protocol_end);\x0d\n  }\x0d\n\x0d\n  set protocol(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kProtocol\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get username() {\x0d\n    if (this.#context.protocol_end + 2 < this.#context.username_end) {\x0d\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.protocol_end + 2\x2C this.#context.username_end);\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set username(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kUsername\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get password() {\x0d\n    if (this.#context.host_start - this.#context.username_end > 0) {\x0d\n      return StringPrototypeSlice(this.#context.href\x2C this.#context.username_end + 1\x2C this.#context.host_start);\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set password(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPassword\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get host() {\x0d\n    let startsAt = this.#context.host_start;\x0d\n    if (this.#context.href[startsAt] === '@') {\x0d\n      startsAt++;\x0d\n    }\x0d\n    // If we have an empty host\x2C then the space between components.host_end and\x0d\n    // components.pathname_start may be occupied by /.\x0d\n    if (startsAt === this.#context.host_end) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.pathname_start);\x0d\n  }\x0d\n\x0d\n  set host(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHost\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get hostname() {\x0d\n    let startsAt = this.#context.host_start;\x0d\n    // host_start might be "@" if the URL has credentials\x0d\n    if (this.#context.href[startsAt] === '@') {\x0d\n      startsAt++;\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C startsAt\x2C this.#context.host_end);\x0d\n  }\x0d\n\x0d\n  set hostname(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHostname\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get port() {\x0d\n    if (this.#context.hasPort) {\x0d\n      return `${this.#context.port}`;\x0d\n    }\x0d\n    return '';\x0d\n  }\x0d\n\x0d\n  set port(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPort\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get pathname() {\x0d\n    let endsAt;\x0d\n    if (this.#context.hasSearch) {\x0d\n      endsAt = this.#context.search_start;\x0d\n    } else if (this.#context.hasHash) {\x0d\n      endsAt = this.#context.hash_start;\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.pathname_start\x2C endsAt);\x0d\n  }\x0d\n\x0d\n  set pathname(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kPathname\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get search() {\x0d\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\x0d\n    this.#ensureSearchParamsUpdated();\x0d\n    return this.#getSearchFromContext();\x0d\n  }\x0d\n\x0d\n  set search(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kSearch\x2C StringPrototypeToWellFormed(`${value}`));\x0d\n    if (href) {\x0d\n      this.#updateContext(href\x2C true);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // readonly\x0d\n  get searchParams() {\x0d\n    // Create URLSearchParams on demand to greatly improve the URL performance.\x0d\n    if (this.#searchParams == null) {\x0d\n      this.#searchParams = new URLSearchParams(this.#getSearchFromContext());\x0d\n      setURLSearchParamsContext(this.#searchParams\x2C this);\x0d\n      this.#searchParamsModified = false;\x0d\n    }\x0d\n    return this.#searchParams;\x0d\n  }\x0d\n\x0d\n  get hash() {\x0d\n    if (!this.#context.hasHash || (this.#context.href.length - this.#context.hash_start <= 1)) {\x0d\n      return '';\x0d\n    }\x0d\n    return StringPrototypeSlice(this.#context.href\x2C this.#context.hash_start);\x0d\n  }\x0d\n\x0d\n  set hash(value) {\x0d\n    const href = bindingUrl.update(this.#context.href\x2C updateActions.kHash\x2C `${value}`);\x0d\n    if (href) {\x0d\n      this.#updateContext(href);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    // Updates to URLSearchParams are lazily propagated to URL\x2C so we need to check we're in sync.\x0d\n    this.#ensureSearchParamsUpdated();\x0d\n    return this.#context.href;\x0d\n  }\x0d\n\x0d\n  static canParse(url\x2C base = undefined) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    url = `${url}`;\x0d\n\x0d\n    if (base !== undefined) {\x0d\n      return bindingUrl.canParse(url\x2C `${base}`);\x0d\n    }\x0d\n\x0d\n    // It is important to differentiate the canParse call statements\x0d\n    // since they resolve into different v8 fast api overloads.\x0d\n    return bindingUrl.canParse(url);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(URL.prototype\x2C {\x0d\n  [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'URL' }\x2C\x0d\n  toString: kEnumerableProperty\x2C\x0d\n  href: kEnumerableProperty\x2C\x0d\n  origin: kEnumerableProperty\x2C\x0d\n  protocol: kEnumerableProperty\x2C\x0d\n  username: kEnumerableProperty\x2C\x0d\n  password: kEnumerableProperty\x2C\x0d\n  host: kEnumerableProperty\x2C\x0d\n  hostname: kEnumerableProperty\x2C\x0d\n  port: kEnumerableProperty\x2C\x0d\n  pathname: kEnumerableProperty\x2C\x0d\n  search: kEnumerableProperty\x2C\x0d\n  searchParams: kEnumerableProperty\x2C\x0d\n  hash: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(URL\x2C {\x0d\n  canParse: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction installObjectURLMethods() {\x0d\n  const bindingBlob = internalBinding('blob');\x0d\n\x0d\n  function createObjectURL(obj) {\x0d\n    const cryptoRandom = lazyCryptoRandom();\x0d\n    if (cryptoRandom === undefined)\x0d\n      throw new ERR_NO_CRYPTO();\x0d\n\x0d\n    const blob = lazyBlob();\x0d\n    if (!blob.isBlob(obj))\x0d\n      throw new ERR_INVALID_ARG_TYPE('obj'\x2C 'Blob'\x2C obj);\x0d\n\x0d\n    const id = cryptoRandom.randomUUID();\x0d\n\x0d\n    bindingBlob.storeDataObject(id\x2C obj[blob.kHandle]\x2C obj.size\x2C obj.type);\x0d\n\x0d\n    return `blob:nodedata:${id}`;\x0d\n  }\x0d\n\x0d\n  function revokeObjectURL(url) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('url');\x0d\n    }\x0d\n\x0d\n    bindingBlob.revokeObjectURL(`${url}`);\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(URL\x2C {\x0d\n    createObjectURL: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: createObjectURL\x2C\x0d\n    }\x2C\x0d\n    revokeObjectURL: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      writable: true\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: revokeObjectURL\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n// application/x-www-form-urlencoded parser\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-parser\x0d\nfunction parseParams(qs) {\x0d\n  const out = [];\x0d\n  let seenSep = false;\x0d\n  let buf = '';\x0d\n  let encoded = false;\x0d\n  let encodeCheck = 0;\x0d\n  let i = qs[0] === '?' ? 1 : 0;\x0d\n  let pairStart = i;\x0d\n  let lastPos = i;\x0d\n  for (; i < qs.length; ++i) {\x0d\n    const code = StringPrototypeCharCodeAt(qs\x2C i);\x0d\n\x0d\n    // Try matching key/value pair separator\x0d\n    if (code === CHAR_AMPERSAND) {\x0d\n      if (pairStart === i) {\x0d\n        // We saw an empty substring between pair separators\x0d\n        lastPos = pairStart = i + 1;\x0d\n        continue;\x0d\n      }\x0d\n\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      // If `buf` is the key\x2C add an empty value.\x0d\n      if (!seenSep)\x0d\n        out.push('');\x0d\n\x0d\n      seenSep = false;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = pairStart = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Try matching key/value separator (e.g. '=') if we haven't already\x0d\n    if (!seenSep && code === CHAR_EQUAL) {\x0d\n      // Key/value separator match!\x0d\n      if (lastPos < i)\x0d\n        buf += qs.slice(lastPos\x2C i);\x0d\n      if (encoded)\x0d\n        buf = querystring.unescape(buf);\x0d\n      out.push(buf);\x0d\n\x0d\n      seenSep = true;\x0d\n      buf = '';\x0d\n      encoded = false;\x0d\n      encodeCheck = 0;\x0d\n      lastPos = i + 1;\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Handle + and percent decoding.\x0d\n    if (code === CHAR_PLUS) {\x0d\n      if (lastPos < i)\x0d\n        buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n      buf += ' ';\x0d\n      lastPos = i + 1;\x0d\n    } else if (!encoded) {\x0d\n      // Try to match an (valid) encoded byte (once) to minimize unnecessary\x0d\n      // calls to string decoding functions\x0d\n      if (code === CHAR_PERCENT) {\x0d\n        encodeCheck = 1;\x0d\n      } else if (encodeCheck > 0) {\x0d\n        if (isHexTable[code] === 1) {\x0d\n          if (++encodeCheck === 3) {\x0d\n            encoded = true;\x0d\n          }\x0d\n        } else {\x0d\n          encodeCheck = 0;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Deal with any leftover key or value data\x0d\n\x0d\n  // There is a trailing &. No more processing is needed.\x0d\n  if (pairStart === i)\x0d\n    return out;\x0d\n\x0d\n  if (lastPos < i)\x0d\n    buf += StringPrototypeSlice(qs\x2C lastPos\x2C i);\x0d\n  if (encoded)\x0d\n    buf = querystring.unescape(buf);\x0d\n  ArrayPrototypePush(out\x2C buf);\x0d\n\x0d\n  // If `buf` is the key\x2C add an empty value.\x0d\n  if (!seenSep)\x0d\n    ArrayPrototypePush(out\x2C '');\x0d\n\x0d\n  return out;\x0d\n}\x0d\n\x0d\n// Adapted from querystring's implementation.\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-byte-serializer\x0d\nconst noEscape = new Int8Array([\x0d\n/*\x0d\n  0\x2C 1\x2C 2\x2C 3\x2C 4\x2C 5\x2C 6\x2C 7\x2C 8\x2C 9\x2C A\x2C B\x2C C\x2C D\x2C E\x2C F\x0d\n*/\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x00 - 0x0F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x10 - 0x1F\x0d\n  0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C 0\x2C 0\x2C 1\x2C 1\x2C 0\x2C // 0x20 - 0x2F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C // 0x30 - 0x3F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x40 - 0x4F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 1\x2C // 0x50 - 0x5F\x0d\n  0\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C // 0x60 - 0x6F\x0d\n  1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 1\x2C 0\x2C 0\x2C 0\x2C 0\x2C 0\x2C  // 0x70 - 0x7F\x0d\n]);\x0d\n\x0d\n// Special version of hexTable that uses `+` for U+0020 SPACE.\x0d\nconst paramHexTable = hexTable.slice();\x0d\nparamHexTable[0x20] = '+';\x0d\n\x0d\n// application/x-www-form-urlencoded serializer\x0d\n// Ref: https://url.spec.whatwg.org/#concept-urlencoded-serializer\x0d\nfunction serializeParams(array) {\x0d\n  const len = array.length;\x0d\n  if (len === 0)\x0d\n    return '';\x0d\n\x0d\n  const firstEncodedParam = encodeStr(array[0]\x2C noEscape\x2C paramHexTable);\x0d\n  const firstEncodedValue = encodeStr(array[1]\x2C noEscape\x2C paramHexTable);\x0d\n  let output = `${firstEncodedParam}=${firstEncodedValue}`;\x0d\n\x0d\n  for (let i = 2; i < len; i += 2) {\x0d\n    const encodedParam = encodeStr(array[i]\x2C noEscape\x2C paramHexTable);\x0d\n    const encodedValue = encodeStr(array[i + 1]\x2C noEscape\x2C paramHexTable);\x0d\n    output += `&${encodedParam}=${encodedValue}`;\x0d\n  }\x0d\n\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// for merge sort\x0d\nfunction merge(out\x2C start\x2C mid\x2C end\x2C lBuffer\x2C rBuffer) {\x0d\n  const sizeLeft = mid - start;\x0d\n  const sizeRight = end - mid;\x0d\n  let l\x2C r\x2C o;\x0d\n\x0d\n  for (l = 0; l < sizeLeft; l++)\x0d\n    lBuffer[l] = out[start + l];\x0d\n  for (r = 0; r < sizeRight; r++)\x0d\n    rBuffer[r] = out[mid + r];\x0d\n\x0d\n  l = 0;\x0d\n  r = 0;\x0d\n  o = start;\x0d\n  while (l < sizeLeft && r < sizeRight) {\x0d\n    if (lBuffer[l] <= rBuffer[r]) {\x0d\n      out[o++] = lBuffer[l++];\x0d\n      out[o++] = lBuffer[l++];\x0d\n    } else {\x0d\n      out[o++] = rBuffer[r++];\x0d\n      out[o++] = rBuffer[r++];\x0d\n    }\x0d\n  }\x0d\n  while (l < sizeLeft)\x0d\n    out[o++] = lBuffer[l++];\x0d\n  while (r < sizeRight)\x0d\n    out[o++] = rBuffer[r++];\x0d\n}\x0d\n\x0d\nfunction domainToASCII(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // StringPrototypeToWellFormed is not needed.\x0d\n  return bindingUrl.domainToASCII(`${domain}`);\x0d\n}\x0d\n\x0d\nfunction domainToUnicode(domain) {\x0d\n  if (arguments.length < 1)\x0d\n    throw new ERR_MISSING_ARGS('domain');\x0d\n\x0d\n  // StringPrototypeToWellFormed is not needed.\x0d\n  return bindingUrl.domainToUnicode(`${domain}`);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Utility function that converts a URL object into an ordinary options object\x0d\n * as expected by the `http.request` and `https.request` APIs.\x0d\n * @param {URL} url\x0d\n * @returns {Record<string\x2C unknown>}\x0d\n */\x0d\nfunction urlToHttpOptions(url) {\x0d\n  const { hostname\x2C pathname\x2C port\x2C username\x2C password\x2C search } = url;\x0d\n  const options = {\x0d\n    __proto__: null\x2C\x0d\n    ...url\x2C // In case the url object was extended by the user.\x0d\n    protocol: url.protocol\x2C\x0d\n    hostname: hostname && StringPrototypeStartsWith(hostname\x2C '[') ?\x0d\n      StringPrototypeSlice(hostname\x2C 1\x2C -1) :\x0d\n      hostname\x2C\x0d\n    hash: url.hash\x2C\x0d\n    search: search\x2C\x0d\n    pathname: pathname\x2C\x0d\n    path: `${pathname || ''}${search || ''}`\x2C\x0d\n    href: url.href\x2C\x0d\n  };\x0d\n  if (port !== '') {\x0d\n    options.port = Number(port);\x0d\n  }\x0d\n  if (username || password) {\x0d\n    options.auth = `${decodeURIComponent(username)}:${decodeURIComponent(password)}`;\x0d\n  }\x0d\n  return options;\x0d\n}\x0d\n\x0d\nfunction getPathFromURLWin32(url) {\x0d\n  const hostname = url.hostname;\x0d\n  let pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if ((pathname[n + 1] === '2' && third === 102) || // 2f 2F /\x0d\n          (pathname[n + 1] === '5' && third === 99)) {  // 5c 5C \\\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded \\\\ or / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  pathname = SideEffectFreeRegExpPrototypeSymbolReplace(FORWARD_SLASH\x2C pathname\x2C '\\\\');\x0d\n  pathname = decodeURIComponent(pathname);\x0d\n  if (hostname !== '') {\x0d\n    // If hostname is set\x2C then we have a UNC path\x0d\n    // Pass the hostname through domainToUnicode just in case\x0d\n    // it is an IDN using punycode encoding. We do not need to worry\x0d\n    // about percent encoding because the URL parser will have\x0d\n    // already taken care of that for us. Note that this only\x0d\n    // causes IDNs with an appropriate `xn--` prefix to be decoded.\x0d\n    return `\\\\\\\\${domainToUnicode(hostname)}${pathname}`;\x0d\n  }\x0d\n  // Otherwise\x2C it's a local path that requires a drive letter\x0d\n  const letter = StringPrototypeCodePointAt(pathname\x2C 1) | 0x20;\x0d\n  const sep = StringPrototypeCharAt(pathname\x2C 2);\x0d\n  if (letter < CHAR_LOWERCASE_A || letter > CHAR_LOWERCASE_Z ||   // a..z A..Z\x0d\n      (sep !== ':')) {\x0d\n    throw new ERR_INVALID_FILE_URL_PATH('must be absolute');\x0d\n  }\x0d\n  return StringPrototypeSlice(pathname\x2C 1);\x0d\n}\x0d\n\x0d\nfunction getPathFromURLPosix(url) {\x0d\n  if (url.hostname !== '') {\x0d\n    throw new ERR_INVALID_FILE_URL_HOST(platform);\x0d\n  }\x0d\n  const pathname = url.pathname;\x0d\n  for (let n = 0; n < pathname.length; n++) {\x0d\n    if (pathname[n] === '%') {\x0d\n      const third = StringPrototypeCodePointAt(pathname\x2C n + 2) | 0x20;\x0d\n      if (pathname[n + 1] === '2' && third === 102) {\x0d\n        throw new ERR_INVALID_FILE_URL_PATH(\x0d\n          'must not include encoded / characters'\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return decodeURIComponent(pathname);\x0d\n}\x0d\n\x0d\nfunction fileURLToPath(path) {\x0d\n  if (typeof path === 'string')\x0d\n    path = new URL(path);\x0d\n  else if (!isURL(path))\x0d\n    throw new ERR_INVALID_ARG_TYPE('path'\x2C ['string'\x2C 'URL']\x2C path);\x0d\n  if (path.protocol !== 'file:')\x0d\n    throw new ERR_INVALID_URL_SCHEME('file');\x0d\n  return isWindows ? getPathFromURLWin32(path) : getPathFromURLPosix(path);\x0d\n}\x0d\n\x0d\n// The following characters are percent-encoded when converting from file path\x0d\n// to URL:\x0d\n// - %: The percent character is the only character not encoded by the\x0d\n//        `pathname` setter.\x0d\n// - \\: Backslash is encoded on non-windows platforms since it's a valid\x0d\n//      character but the `pathname` setters replaces it by a forward slash.\x0d\n// - LF: The newline character is stripped out by the `pathname` setter.\x0d\n//       (See whatwg/url#419)\x0d\n// - CR: The carriage return character is also stripped out by the `pathname`\x0d\n//       setter.\x0d\n// - TAB: The tab character is also stripped out by the `pathname` setter.\x0d\nconst percentRegEx = /%/g;\x0d\nconst backslashRegEx = /\\\\/g;\x0d\nconst newlineRegEx = /\\n/g;\x0d\nconst carriageReturnRegEx = /\\r/g;\x0d\nconst tabRegEx = /\\t/g;\x0d\nconst questionRegex = /\\?/g;\x0d\nconst hashRegex = /#/g;\x0d\n\x0d\nfunction encodePathChars(filepath) {\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '%') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(percentRegEx\x2C filepath\x2C '%25');\x0d\n  // In posix\x2C backslash is a valid character in paths:\x0d\n  if (!isWindows && StringPrototypeIndexOf(filepath\x2C '\\\\') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(backslashRegEx\x2C filepath\x2C '%5C');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\n') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(newlineRegEx\x2C filepath\x2C '%0A');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\r') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(carriageReturnRegEx\x2C filepath\x2C '%0D');\x0d\n  if (StringPrototypeIndexOf(filepath\x2C '\\t') !== -1)\x0d\n    filepath = RegExpPrototypeSymbolReplace(tabRegEx\x2C filepath\x2C '%09');\x0d\n  return filepath;\x0d\n}\x0d\n\x0d\nfunction pathToFileURL(filepath) {\x0d\n  if (isWindows && StringPrototypeStartsWith(filepath\x2C '\\\\\\\\')) {\x0d\n    const outURL = new URL('file://');\x0d\n    // UNC path format: \\\\server\\share\\resource\x0d\n    const hostnameEndIndex = StringPrototypeIndexOf(filepath\x2C '\\\\'\x2C 2);\x0d\n    if (hostnameEndIndex === -1) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'path'\x2C\x0d\n        filepath\x2C\x0d\n        'Missing UNC resource path'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (hostnameEndIndex === 2) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        'path'\x2C\x0d\n        filepath\x2C\x0d\n        'Empty UNC servername'\x2C\x0d\n      );\x0d\n    }\x0d\n    const hostname = StringPrototypeSlice(filepath\x2C 2\x2C hostnameEndIndex);\x0d\n    outURL.hostname = domainToASCII(hostname);\x0d\n    outURL.pathname = encodePathChars(\x0d\n      RegExpPrototypeSymbolReplace(backslashRegEx\x2C StringPrototypeSlice(filepath\x2C hostnameEndIndex)\x2C '/'));\x0d\n    return outURL;\x0d\n  }\x0d\n  let resolved = path.resolve(filepath);\x0d\n  // path.resolve strips trailing slashes so we must add them back\x0d\n  const filePathLast = StringPrototypeCharCodeAt(filepath\x2C\x0d\n                                                 filepath.length - 1);\x0d\n  if ((filePathLast === CHAR_FORWARD_SLASH ||\x0d\n       (isWindows && filePathLast === CHAR_BACKWARD_SLASH)) &&\x0d\n      resolved[resolved.length - 1] !== path.sep)\x0d\n    resolved += '/';\x0d\n\x0d\n  // Call encodePathChars first to avoid encoding % again for ? and #.\x0d\n  resolved = encodePathChars(resolved);\x0d\n\x0d\n  // Question and hash character should be included in pathname.\x0d\n  // Therefore\x2C encoding is required to eliminate parsing them in different states.\x0d\n  // This is done as an optimization to not creating a URL instance and\x0d\n  // later triggering pathname setter\x2C which impacts performance\x0d\n  if (StringPrototypeIndexOf(resolved\x2C '?') !== -1)\x0d\n    resolved = RegExpPrototypeSymbolReplace(questionRegex\x2C resolved\x2C '%3F');\x0d\n  if (StringPrototypeIndexOf(resolved\x2C '#') !== -1)\x0d\n    resolved = RegExpPrototypeSymbolReplace(hashRegex\x2C resolved\x2C '%23');\x0d\n  return new URL(`file://${resolved}`);\x0d\n}\x0d\n\x0d\nfunction toPathIfFileURL(fileURLOrPath) {\x0d\n  if (!isURL(fileURLOrPath))\x0d\n    return fileURLOrPath;\x0d\n  return fileURLToPath(fileURLOrPath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * This util takes a string containing a URL and return the URL origin\x2C\x0d\n * its meant to avoid calls to `new URL` constructor.\x0d\n * @param {string} url\x0d\n * @returns {URL['origin']}\x0d\n */\x0d\nfunction getURLOrigin(url) {\x0d\n  return bindingUrl.getOrigin(url);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  fileURLToPath\x2C\x0d\n  pathToFileURL\x2C\x0d\n  toPathIfFileURL\x2C\x0d\n  installObjectURLMethods\x2C\x0d\n  URL\x2C\x0d\n  URLSearchParams\x2C\x0d\n  domainToASCII\x2C\x0d\n  domainToUnicode\x2C\x0d\n  urlToHttpOptions\x2C\x0d\n  encodeStr\x2C\x0d\n  isURL\x2C\x0d\n\x0d\n  urlUpdateActions: updateActions\x2C\x0d\n  getURLOrigin\x2C\x0d\n  unsafeProtocol\x2C\x0d\n  hostlessProtocol\x2C\x0d\n  slashedProtocol\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8ef70e,32,47682,47799,C0O47703C3O47708C9O47735C11O47756C12O47760C15O47767C19O47796,,
code-creation,JS,10,163943,0x1c66f8f29d6,45,isURL node:internal/url:762:15,0x3fcdefa2038,~
code-source-info,0x1c66f8f29d6,32,22496,22609,C0O22508C12O22527C21O22542C27O22559C34O22586C40O22515C44O22606,,
code-creation,JS,10,164157,0x1c66f8f2c0e,149, node:internal/fs/utils:676:38,0x3fcdef9e588,~
code-source-info,0x1c66f8f2c0e,28,19101,19833,C14O19135C22O19168C25O19168C31O19195C36O19226C41O19247C54O19201C59O19195C60O19324C65O19378C70O19378C75O19475C81O19498C85O19527C89O19544C95O19544C104O19596C108O19617C113O19617C120O19663C121O19670C122O19681C127O19713C143O19687C148O19681,,
code-creation,JS,10,164263,0x1c66f8f2dbe,16,isUint8Array node:internal/util/types:13:22,0x3fcdef89d68,~
script-source,18,node:internal/util/types,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nfunction isTypedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) !== undefined;\x0d\n}\x0d\n\x0d\nfunction isUint8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8Array';\x0d\n}\x0d\n\x0d\nfunction isUint8ClampedArray(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint8ClampedArray';\x0d\n}\x0d\n\x0d\nfunction isUint16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint16Array';\x0d\n}\x0d\n\x0d\nfunction isUint32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Uint32Array';\x0d\n}\x0d\n\x0d\nfunction isInt8Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int8Array';\x0d\n}\x0d\n\x0d\nfunction isInt16Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int16Array';\x0d\n}\x0d\n\x0d\nfunction isInt32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Int32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat32Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float32Array';\x0d\n}\x0d\n\x0d\nfunction isFloat64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'Float64Array';\x0d\n}\x0d\n\x0d\nfunction isBigInt64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigInt64Array';\x0d\n}\x0d\n\x0d\nfunction isBigUint64Array(value) {\x0d\n  return TypedArrayPrototypeGetSymbolToStringTag(value) === 'BigUint64Array';\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  ...internalBinding('types')\x2C\x0d\n  isArrayBufferView: ArrayBufferIsView\x2C\x0d\n  isTypedArray\x2C\x0d\n  isUint8Array\x2C\x0d\n  isUint8ClampedArray\x2C\x0d\n  isUint16Array\x2C\x0d\n  isUint32Array\x2C\x0d\n  isInt8Array\x2C\x0d\n  isInt16Array\x2C\x0d\n  isInt32Array\x2C\x0d\n  isFloat32Array\x2C\x0d\n  isFloat64Array\x2C\x0d\n  isBigInt64Array\x2C\x0d\n  isBigUint64Array\x2C\x0d\n};\x0d\n\x0d\nlet isCryptoKey;\x0d\nlet isKeyObject;\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  isKeyObject: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isKeyObject) {\x0d\n        ({ isKeyObject } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isKeyObject(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  isCryptoKey: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value(obj) {\x0d\n      if (!process.versions.openssl) {\x0d\n        return false;\x0d\n      }\x0d\n\x0d\n      if (!isCryptoKey) {\x0d\n        ({ isCryptoKey } = require('internal/crypto/keys'));\x0d\n      }\x0d\n\x0d\n      return isCryptoKey(obj);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x1c66f8f2dbe,18,269,356,C0O282C5O289C12O336C15O353,,
code-creation,JS,11,164633,0x7ff64c444840,316,SafeMap node:internal/per_context/primordials:413:16,0x23399f55a8,^
script-source,6,node:internal/per_context/primordials,'use strict';\x0d\n\x0d\n/* eslint-disable node-core/prefer-primordials */\x0d\n\x0d\n// This file subclasses and stores the JS builtins that come from the VM\x0d\n// so that Node.js's builtin modules do not need to later look these up from\x0d\n// the global proxy\x2C which can be mutated by users.\x0d\n\x0d\n// Use of primordials have sometimes a dramatic impact on performance\x2C please\x0d\n// benchmark all changes made in performance-sensitive areas of the codebase.\x0d\n// See: https://github.com/nodejs/node/pull/38248\x0d\n\x0d\nconst {\x0d\n  defineProperty: ReflectDefineProperty\x2C\x0d\n  getOwnPropertyDescriptor: ReflectGetOwnPropertyDescriptor\x2C\x0d\n  ownKeys: ReflectOwnKeys\x2C\x0d\n} = Reflect;\x0d\n\x0d\n// `uncurryThis` is equivalent to `func => Function.prototype.call.bind(func)`.\x0d\n// It is using `bind.bind(call)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.call` after it may have been mutated by users.\x0d\nconst { apply\x2C bind\x2C call } = Function.prototype;\x0d\nconst uncurryThis = bind.bind(call);\x0d\nprimordials.uncurryThis = uncurryThis;\x0d\n\x0d\n// `applyBind` is equivalent to `func => Function.prototype.apply.bind(func)`.\x0d\n// It is using `bind.bind(apply)` to avoid using `Function.prototype.bind`\x0d\n// and `Function.prototype.apply` after it may have been mutated by users.\x0d\nconst applyBind = bind.bind(apply);\x0d\nprimordials.applyBind = applyBind;\x0d\n\x0d\n// Methods that accept a variable number of arguments\x2C and thus it's useful to\x0d\n// also create `${prefix}${key}Apply`\x2C which uses `Function.prototype.apply`\x2C\x0d\n// instead of `Function.prototype.call`\x2C and thus doesn't require iterator\x0d\n// destructuring.\x0d\nconst varargsMethods = [\x0d\n  // 'ArrayPrototypeConcat' is omitted\x2C because it performs the spread\x0d\n  // on its own for arrays and array-likes with a truthy\x0d\n  // @@isConcatSpreadable symbol property.\x0d\n  'ArrayOf'\x2C\x0d\n  'ArrayPrototypePush'\x2C\x0d\n  'ArrayPrototypeUnshift'\x2C\x0d\n  // 'FunctionPrototypeCall' is omitted\x2C since there's 'ReflectApply'\x0d\n  // and 'FunctionPrototypeApply'.\x0d\n  'MathHypot'\x2C\x0d\n  'MathMax'\x2C\x0d\n  'MathMin'\x2C\x0d\n  'StringFromCharCode'\x2C\x0d\n  'StringFromCodePoint'\x2C\x0d\n  'StringPrototypeConcat'\x2C\x0d\n  'TypedArrayOf'\x2C\x0d\n];\x0d\n\x0d\nfunction getNewKey(key) {\x0d\n  return typeof key === 'symbol' ?\x0d\n    `Symbol${key.description[7].toUpperCase()}${key.description.slice(8)}` :\x0d\n    `${key[0].toUpperCase()}${key.slice(1)}`;\x0d\n}\x0d\n\x0d\nfunction copyAccessor(dest\x2C prefix\x2C key\x2C { enumerable\x2C get\x2C set }) {\x0d\n  ReflectDefineProperty(dest\x2C `${prefix}Get${key}`\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: uncurryThis(get)\x2C\x0d\n    enumerable\x2C\x0d\n  });\x0d\n  if (set !== undefined) {\x0d\n    ReflectDefineProperty(dest\x2C `${prefix}Set${key}`\x2C {\x0d\n      __proto__: null\x2C\x0d\n      value: uncurryThis(set)\x2C\x0d\n      enumerable\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamed(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          // `src` is bound as the `this` so that the static `this` points\x0d\n          // to the object it was defined on\x2C\x0d\n          // e.g.: `ArrayOfApply` gets a `this` of `Array`:\x0d\n          value: applyBind(desc.value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPropsRenamedBound(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = value.bind(src);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value\x2C src)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction copyPrototype(src\x2C dest\x2C prefix) {\x0d\n  for (const key of ReflectOwnKeys(src)) {\x0d\n    const newKey = getNewKey(key);\x0d\n    const desc = ReflectGetOwnPropertyDescriptor(src\x2C key);\x0d\n    if ('get' in desc) {\x0d\n      copyAccessor(dest\x2C prefix\x2C newKey\x2C desc);\x0d\n    } else {\x0d\n      const { value } = desc;\x0d\n      if (typeof value === 'function') {\x0d\n        desc.value = uncurryThis(value);\x0d\n      }\x0d\n\x0d\n      const name = `${prefix}${newKey}`;\x0d\n      ReflectDefineProperty(dest\x2C name\x2C { __proto__: null\x2C ...desc });\x0d\n      if (varargsMethods.includes(name)) {\x0d\n        ReflectDefineProperty(dest\x2C `${name}Apply`\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: applyBind(value)\x2C\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Create copies of configurable value properties of the global object\x0d\n[\x0d\n  'Proxy'\x2C\x0d\n  'globalThis'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  primordials[name] = globalThis[name];\x0d\n});\x0d\n\x0d\n// Create copies of URI handling functions\x0d\n[\x0d\n  decodeURI\x2C\x0d\n  decodeURIComponent\x2C\x0d\n  encodeURI\x2C\x0d\n  encodeURIComponent\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of legacy functions\x0d\n[\x0d\n  escape\x2C\x0d\n  eval\x2C\x0d\n  unescape\x2C\x0d\n].forEach((fn) => {\x0d\n  primordials[fn.name] = fn;\x0d\n});\x0d\n\x0d\n// Create copies of the namespace objects\x0d\n[\x0d\n  'JSON'\x2C\x0d\n  'Math'\x2C\x0d\n  'Proxy'\x2C\x0d\n  'Reflect'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  copyPropsRenamed(globalThis[name]\x2C primordials\x2C name);\x0d\n});\x0d\n\x0d\n// Create copies of intrinsic objects\x0d\n[\x0d\n  'AggregateError'\x2C\x0d\n  'Array'\x2C\x0d\n  'ArrayBuffer'\x2C\x0d\n  'BigInt'\x2C\x0d\n  'BigInt64Array'\x2C\x0d\n  'BigUint64Array'\x2C\x0d\n  'Boolean'\x2C\x0d\n  'DataView'\x2C\x0d\n  'Date'\x2C\x0d\n  'Error'\x2C\x0d\n  'EvalError'\x2C\x0d\n  'FinalizationRegistry'\x2C\x0d\n  'Float32Array'\x2C\x0d\n  'Float64Array'\x2C\x0d\n  'Function'\x2C\x0d\n  'Int16Array'\x2C\x0d\n  'Int32Array'\x2C\x0d\n  'Int8Array'\x2C\x0d\n  'Map'\x2C\x0d\n  'Number'\x2C\x0d\n  'Object'\x2C\x0d\n  'RangeError'\x2C\x0d\n  'ReferenceError'\x2C\x0d\n  'RegExp'\x2C\x0d\n  'Set'\x2C\x0d\n  'String'\x2C\x0d\n  'Symbol'\x2C\x0d\n  'SyntaxError'\x2C\x0d\n  'TypeError'\x2C\x0d\n  'URIError'\x2C\x0d\n  'Uint16Array'\x2C\x0d\n  'Uint32Array'\x2C\x0d\n  'Uint8Array'\x2C\x0d\n  'Uint8ClampedArray'\x2C\x0d\n  'WeakMap'\x2C\x0d\n  'WeakRef'\x2C\x0d\n  'WeakSet'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamed(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Define Symbol.dispose and Symbol.asyncDispose\x0d\n// Until these are defined by the environment.\x0d\n// TODO(MoLow): Remove this polyfill once Symbol.dispose and Symbol.asyncDispose are available in V8.\x0d\nprimordials.SymbolDispose ??= primordials.SymbolFor('nodejs.dispose');\x0d\nprimordials.SymbolAsyncDispose ??= primordials.SymbolFor('nodejs.asyncDispose');\x0d\n\x0d\n// Create copies of intrinsic objects that require a valid `this` to call\x0d\n// static methods.\x0d\n// Refs: https://www.ecma-international.org/ecma-262/#sec-promise.all\x0d\n[\x0d\n  'Promise'\x2C\x0d\n].forEach((name) => {\x0d\n  // eslint-disable-next-line no-restricted-globals\x0d\n  const original = globalThis[name];\x0d\n  primordials[name] = original;\x0d\n  copyPropsRenamedBound(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\n// Create copies of abstract intrinsic objects that are not directly exposed\x0d\n// on the global object.\x0d\n// Refs: https://tc39.es/ecma262/#sec-%typedarray%-intrinsic-object\x0d\n[\x0d\n  { name: 'TypedArray'\x2C original: Reflect.getPrototypeOf(Uint8Array) }\x2C\x0d\n  { name: 'ArrayIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(Array.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n  { name: 'StringIterator'\x2C original: {\x0d\n    prototype: Reflect.getPrototypeOf(String.prototype[Symbol.iterator]())\x2C\x0d\n  } }\x2C\x0d\n].forEach(({ name\x2C original }) => {\x0d\n  primordials[name] = original;\x0d\n  // The static %TypedArray% methods require a valid `this`\x2C but can't be bound\x2C\x0d\n  // as they need a subclass constructor as the receiver:\x0d\n  copyPrototype(original\x2C primordials\x2C name);\x0d\n  copyPrototype(original.prototype\x2C primordials\x2C `${name}Prototype`);\x0d\n});\x0d\n\x0d\nprimordials.IteratorPrototype = Reflect.getPrototypeOf(primordials.ArrayIteratorPrototype);\x0d\n\x0d\n/* eslint-enable node-core/prefer-primordials */\x0d\n\x0d\nconst {\x0d\n  Array: ArrayConstructor\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  FinalizationRegistry\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  Map\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  ReflectSet\x2C\x0d\n  ReflectGet\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototype\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeGetDotAll\x2C\x0d\n  RegExpPrototypeGetFlags\x2C\x0d\n  RegExpPrototypeGetGlobal\x2C\x0d\n  RegExpPrototypeGetHasIndices\x2C\x0d\n  RegExpPrototypeGetIgnoreCase\x2C\x0d\n  RegExpPrototypeGetMultiline\x2C\x0d\n  RegExpPrototypeGetSource\x2C\x0d\n  RegExpPrototypeGetSticky\x2C\x0d\n  RegExpPrototypeGetUnicode\x2C\x0d\n  Set\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolMatch\x2C\x0d\n  SymbolMatchAll\x2C\x0d\n  SymbolReplace\x2C\x0d\n  SymbolSearch\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolSplit\x2C\x0d\n  WeakMap\x2C\x0d\n  WeakRef\x2C\x0d\n  WeakSet\x2C\x0d\n} = primordials;\x0d\n\x0d\n\x0d\n/**\x0d\n * Creates a class that can be safely iterated over.\x0d\n *\x0d\n * Because these functions are used by `makeSafe`\x2C which is exposed on the\x0d\n * `primordials` object\x2C it's important to use const references to the\x0d\n * primordials that they use.\x0d\n * @template {Iterable} T\x0d\n * @template {*} TReturn\x0d\n * @template {*} TNext\x0d\n * @param {(self: T) => IterableIterator<T>} factory\x0d\n * @param {(...args: [] | [TNext]) => IteratorResult<T\x2C TReturn>} next\x0d\n * @returns {Iterator<T\x2C TReturn\x2C TNext>}\x0d\n */\x0d\nconst createSafeIterator = (factory\x2C next) => {\x0d\n  class SafeIterator {\x0d\n    constructor(iterable) {\x0d\n      this._iterator = factory(iterable);\x0d\n    }\x0d\n    next() {\x0d\n      return next(this._iterator);\x0d\n    }\x0d\n    [SymbolIterator]() {\x0d\n      return this;\x0d\n    }\x0d\n  }\x0d\n  ObjectSetPrototypeOf(SafeIterator.prototype\x2C null);\x0d\n  ObjectFreeze(SafeIterator.prototype);\x0d\n  ObjectFreeze(SafeIterator);\x0d\n  return SafeIterator;\x0d\n};\x0d\n\x0d\nprimordials.SafeArrayIterator = createSafeIterator(\x0d\n  primordials.ArrayPrototypeSymbolIterator\x2C\x0d\n  primordials.ArrayIteratorPrototypeNext\x2C\x0d\n);\x0d\nprimordials.SafeStringIterator = createSafeIterator(\x0d\n  primordials.StringPrototypeSymbolIterator\x2C\x0d\n  primordials.StringIteratorPrototypeNext\x2C\x0d\n);\x0d\n\x0d\nconst copyProps = (src\x2C dest) => {\x0d\n  ArrayPrototypeForEach(ReflectOwnKeys(src)\x2C (key) => {\x0d\n    if (!ReflectGetOwnPropertyDescriptor(dest\x2C key)) {\x0d\n      ReflectDefineProperty(\x0d\n        dest\x2C\x0d\n        key\x2C\x0d\n        { __proto__: null\x2C ...ReflectGetOwnPropertyDescriptor(src\x2C key) });\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\n/**\x0d\n * @type {typeof primordials.makeSafe}\x0d\n */\x0d\nconst makeSafe = (unsafe\x2C safe) => {\x0d\n  if (SymbolIterator in unsafe.prototype) {\x0d\n    const dummy = new unsafe();\x0d\n    let next; // We can reuse the same `next` method.\x0d\n\x0d\n    ArrayPrototypeForEach(ReflectOwnKeys(unsafe.prototype)\x2C (key) => {\x0d\n      if (!ReflectGetOwnPropertyDescriptor(safe.prototype\x2C key)) {\x0d\n        const desc = ReflectGetOwnPropertyDescriptor(unsafe.prototype\x2C key);\x0d\n        if (\x0d\n          typeof desc.value === 'function' &&\x0d\n          desc.value.length === 0 &&\x0d\n          SymbolIterator in (FunctionPrototypeCall(desc.value\x2C dummy) ?? {})\x0d\n        ) {\x0d\n          const createIterator = uncurryThis(desc.value);\x0d\n          next ??= uncurryThis(createIterator(dummy).next);\x0d\n          const SafeIterator = createSafeIterator(createIterator\x2C next);\x0d\n          desc.value = function() {\x0d\n            return new SafeIterator(this);\x0d\n          };\x0d\n        }\x0d\n        ReflectDefineProperty(safe.prototype\x2C key\x2C { __proto__: null\x2C ...desc });\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    copyProps(unsafe.prototype\x2C safe.prototype);\x0d\n  }\x0d\n  copyProps(unsafe\x2C safe);\x0d\n\x0d\n  ObjectSetPrototypeOf(safe.prototype\x2C null);\x0d\n  ObjectFreeze(safe.prototype);\x0d\n  ObjectFreeze(safe);\x0d\n  return safe;\x0d\n};\x0d\nprimordials.makeSafe = makeSafe;\x0d\n\x0d\n// Subclass the constructors because we need to use their prototype\x0d\n// methods later.\x0d\n// Defining the `constructor` is necessary here to avoid the default\x0d\n// constructor which uses the user-mutable `%ArrayIteratorPrototype%.next`.\x0d\nprimordials.SafeMap = makeSafe(\x0d\n  Map\x2C\x0d\n  class SafeMap extends Map {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakMap = makeSafe(\x0d\n  WeakMap\x2C\x0d\n  class SafeWeakMap extends WeakMap {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeSet = makeSafe(\x0d\n  Set\x2C\x0d\n  class SafeSet extends Set {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakSet = makeSafe(\x0d\n  WeakSet\x2C\x0d\n  class SafeWeakSet extends WeakSet {\x0d\n    constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nprimordials.SafeFinalizationRegistry = makeSafe(\x0d\n  FinalizationRegistry\x2C\x0d\n  class SafeFinalizationRegistry extends FinalizationRegistry {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(cleanupCallback) { super(cleanupCallback); }\x0d\n  }\x2C\x0d\n);\x0d\nprimordials.SafeWeakRef = makeSafe(\x0d\n  WeakRef\x2C\x0d\n  class SafeWeakRef extends WeakRef {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(target) { super(target); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\nconst SafePromise = makeSafe(\x0d\n  Promise\x2C\x0d\n  class SafePromise extends Promise {\x0d\n    // eslint-disable-next-line no-useless-constructor\x0d\n    constructor(executor) { super(executor); }\x0d\n  }\x2C\x0d\n);\x0d\n\x0d\n/**\x0d\n * Attaches a callback that is invoked when the Promise is settled (fulfilled or\x0d\n * rejected). The resolved value cannot be modified from the callback.\x0d\n * Prefer using async functions when possible.\x0d\n * @param {Promise<any>} thisPromise\x0d\n * @param {() => void) | undefined | null} onFinally The callback to execute\x0d\n *        when the Promise is settled (fulfilled or rejected).\x0d\n * @returns {Promise} A Promise for the completion of the callback.\x0d\n */\x0d\nprimordials.SafePromisePrototypeFinally = (thisPromise\x2C onFinally) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    new SafePromise((a\x2C b) => PromisePrototypeThen(thisPromise\x2C a\x2C b))\x0d\n      .finally(onFinally)\x0d\n      .then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\nprimordials.AsyncIteratorPrototype =\x0d\n  primordials.ReflectGetPrototypeOf(\x0d\n    primordials.ReflectGetPrototypeOf(\x0d\n      async function* () {}).prototype);\x0d\n\x0d\nconst arrayToSafePromiseIterable = (promises\x2C mapFn) =>\x0d\n  new primordials.SafeArrayIterator(\x0d\n    ArrayPrototypeMap(\x0d\n      promises\x2C\x0d\n      (promise\x2C i) =>\x0d\n        new SafePromise((a\x2C b) => PromisePrototypeThen(mapFn == null ? promise : mapFn(promise\x2C i)\x2C a\x2C b))\x2C\x0d\n    )\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAll = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.all(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used for internal functions\x2C this would produce similar\x0d\n * results as `Promise.all` but without prototype pollution\x2C and the return\x0d\n * value is not a genuine Array but an array-like object.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<ArrayLike<Awaited<U>>>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnArrayLike = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    const { length } = promises;\x0d\n\x0d\n    const returnVal = ArrayConstructor(length);\x0d\n    ObjectSetPrototypeOf(returnVal\x2C null);\x0d\n    if (length === 0) resolve(returnVal);\x0d\n\x0d\n    let pendingPromises = length;\x0d\n    for (let i = 0; i < length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C (result) => {\x0d\n        returnVal[i] = result;\x0d\n        if (--pendingPromises === 0) resolve(returnVal);\x0d\n      }\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * resolve\x2C not what value they resolve to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T | PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllReturnVoid = (promises\x2C mapFn) =>\x0d\n  new Promise((resolve\x2C reject) => {\x0d\n    let pendingPromises = promises.length;\x0d\n    if (pendingPromises === 0) resolve();\x0d\n    const onFulfilled = () => {\x0d\n      if (--pendingPromises === 0) {\x0d\n        resolve();\x0d\n      }\x0d\n    };\x0d\n    for (let i = 0; i < promises.length; i++) {\x0d\n      const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n      PromisePrototypeThen(PromiseResolve(promise)\x2C onFulfilled\x2C reject);\x0d\n    }\x0d\n  });\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<PromiseSettledResult<any>[]>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettled = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.allSettled(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * Should only be used when we only care about waiting for all the promises to\x0d\n * settle\x2C not what value they resolve or reject to.\x0d\n * @template T\x2CU\x0d\n * @param {ArrayLike<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nprimordials.SafePromiseAllSettledReturnVoid = (promises\x2C mapFn) => new Promise((resolve) => {\x0d\n  let pendingPromises = promises.length;\x0d\n  if (pendingPromises === 0) resolve();\x0d\n  const onSettle = () => {\x0d\n    if (--pendingPromises === 0) resolve();\x0d\n  };\x0d\n  for (let i = 0; i < promises.length; i++) {\x0d\n    const promise = mapFn != null ? mapFn(promises[i]\x2C i) : promises[i];\x0d\n    PromisePrototypeThen(PromiseResolve(promise)\x2C onSettle\x2C onSettle);\x0d\n  }\x0d\n});\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseAny = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.any(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n/**\x0d\n * @template T\x2CU\x0d\n * @param {Array<T|PromiseLike<T>>} promises\x0d\n * @param {(v: T|PromiseLike<T>\x2C k: number) => U|PromiseLike<U>} [mapFn]\x0d\n * @returns {Promise<Awaited<U>>}\x0d\n */\x0d\nprimordials.SafePromiseRace = (promises\x2C mapFn) =>\x0d\n  // Wrapping on a new Promise is necessary to not expose the SafePromise\x0d\n  // prototype to user-land.\x0d\n  new Promise((a\x2C b) =>\x0d\n    SafePromise.race(arrayToSafePromiseIterable(promises\x2C mapFn)).then(a\x2C b)\x2C\x0d\n  );\x0d\n\x0d\n\x0d\nconst {\x0d\n  exec: OriginalRegExpPrototypeExec\x2C\x0d\n  [SymbolMatch]: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n  [SymbolMatchAll]: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n  [SymbolReplace]: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n  [SymbolSearch]: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n  [SymbolSplit]: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n} = RegExpPrototype;\x0d\n\x0d\nclass RegExpLikeForStringSplitting {\x0d\n  #regex;\x0d\n  constructor() {\x0d\n    this.#regex = ReflectConstruct(RegExp\x2C arguments);\x0d\n  }\x0d\n\x0d\n  get lastIndex() {\x0d\n    return ReflectGet(this.#regex\x2C 'lastIndex');\x0d\n  }\x0d\n  set lastIndex(value) {\x0d\n    ReflectSet(this.#regex\x2C 'lastIndex'\x2C value);\x0d\n  }\x0d\n\x0d\n  exec() {\x0d\n    return ReflectApply(OriginalRegExpPrototypeExec\x2C this.#regex\x2C arguments);\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(RegExpLikeForStringSplitting.prototype\x2C null);\x0d\n\x0d\n/**\x0d\n * @param {RegExp} pattern\x0d\n * @returns {RegExp}\x0d\n */\x0d\nprimordials.hardenRegExp = function hardenRegExp(pattern) {\x0d\n  ObjectDefineProperties(pattern\x2C {\x0d\n    [SymbolMatch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatch\x2C\x0d\n    }\x2C\x0d\n    [SymbolMatchAll]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolMatchAll\x2C\x0d\n    }\x2C\x0d\n    [SymbolReplace]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolReplace\x2C\x0d\n    }\x2C\x0d\n    [SymbolSearch]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSearch\x2C\x0d\n    }\x2C\x0d\n    [SymbolSplit]: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeSymbolSplit\x2C\x0d\n    }\x2C\x0d\n    constructor: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: {\x0d\n        [SymbolSpecies]: RegExpLikeForStringSplitting\x2C\x0d\n      }\x2C\x0d\n    }\x2C\x0d\n    dotAll: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetDotAll(pattern)\x2C\x0d\n    }\x2C\x0d\n    exec: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: OriginalRegExpPrototypeExec\x2C\x0d\n    }\x2C\x0d\n    global: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetGlobal(pattern)\x2C\x0d\n    }\x2C\x0d\n    hasIndices: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetHasIndices(pattern)\x2C\x0d\n    }\x2C\x0d\n    ignoreCase: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetIgnoreCase(pattern)\x2C\x0d\n    }\x2C\x0d\n    multiline: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetMultiline(pattern)\x2C\x0d\n    }\x2C\x0d\n    source: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSource(pattern)\x2C\x0d\n    }\x2C\x0d\n    sticky: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetSticky(pattern)\x2C\x0d\n    }\x2C\x0d\n    unicode: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: true\x2C\x0d\n      value: RegExpPrototypeGetUnicode(pattern)\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n  ObjectDefineProperty(pattern\x2C 'flags'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: RegExpPrototypeGetFlags(pattern)\x2C\x0d\n  });\x0d\n  return pattern;\x0d\n};\x0d\n\x0d\n\x0d\n/**\x0d\n * @param {string} str\x0d\n * @param {RegExp} regexp\x0d\n * @returns {number}\x0d\n */\x0d\nprimordials.SafeStringPrototypeSearch = (str\x2C regexp) => {\x0d\n  regexp.lastIndex = 0;\x0d\n  const match = RegExpPrototypeExec(regexp\x2C str);\x0d\n  return match ? match.index : -1;\x0d\n};\x0d\n\x0d\nObjectSetPrototypeOf(primordials\x2C null);\x0d\nObjectFreeze(primordials);\x0d\n
code-source-info,0x7ff64c444840,6,12387,12404,,,
code-creation,JS,11,166173,0x7ff64c4449c0,412,getCLIOptionsFromBinding node:internal/options:18:34,0x3fcdef896a0,^
code-source-info,0x7ff64c4449c0,17,514,620,,,
code-creation,JS,11,166211,0x7ff64c444b80,100,next node:internal/per_context/primordials:335:9,0x23399f4960,^
code-source-info,0x7ff64c444b80,6,9913,9960,,,
code-creation,JS,11,166249,0x7ff64c444c00,316,SafeSet node:internal/per_context/primordials:426:16,0x23399f57f8,^
code-source-info,0x7ff64c444c00,6,12729,12746,,,
code-creation,JS,11,166324,0x7ff64c444d80,3028,normalizeString node:path:66:25,0x3fcdef9f2c0,^
code-source-info,0x7ff64c444d80,30,2226,4212,,,
code-creation,JS,11,166358,0x7ff64c445980,392,isWindowsDeviceRoot node:path:60:29,0x3fcdef9f270,^
code-source-info,0x7ff64c445980,30,1991,2136,,,
code-creation,JS,10,166412,0x1c66f8f4d96,23,splitRoot node:fs:2577:33,0x3fcdefb6000,~
code-source-info,0x1c66f8f4d96,56,70789,70869,C0O70802C9O70843C12O70809C19O70860C22O70864,,
code-creation,JS,10,166476,0x1c66f8f4ee6,39,SideEffectFreeRegExpPrototypeExec node:internal/util:740:43,0x3fcdef88de8,~
code-source-info,0x1c66f8f4ee6,16,20772,20946,C0O20836C3O20836C7O20809C12O20860C17O20912C22O20922C33O20867C38O20943,,
code-creation,JS,10,166549,0x1c66f8f507e,52,getInternalGlobal node:internal/util:731:27,0x3fcdef88d98,~
code-source-info,0x1c66f8f507e,16,20470,20726,C0O20478C7O20591C13O20591C18O20571C23O20611C28O20652C33O20628C41O20626C47O20701C51O20723,,
code-creation,Eval,10,167032,0x1c66f8f5bf6,5, node:vm:1:1,0x1c66f8f57f8,~
script-source,80,node:vm,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  Symbol\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  makeContext\x2C\x0d\n  constants\x2C\x0d\n  measureMemory: _measureMemory\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  ERR_CONTEXT_NOT_INITIALIZED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateInt32\x2C\x0d\n  validateOneOf\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateStringArray\x2C\x0d\n  validateUint32\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  emitExperimentalWarning\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kVmBreakFirstLineSymbol\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  getHostDefinedOptionId\x2C\x0d\n  internalCompileFunction\x2C\x0d\n  isContext: _isContext\x2C\x0d\n  registerImportModuleDynamically\x2C\x0d\n} = require('internal/vm');\x0d\nconst {\x0d\n  vm_dynamic_import_main_context_default\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst kParsingContext = Symbol('script parsing context');\x0d\n\x0d\n/**\x0d\n * Check if object is a context object created by vm.createContext().\x0d\n * @throws {TypeError} If object is not an object in the first place\x2C throws TypeError.\x0d\n * @param {object} object Object to check.\x0d\n * @returns {boolean}\x0d\n */\x0d\nfunction isContext(object) {\x0d\n  validateObject(object\x2C 'object'\x2C kValidateObjectAllowArray);\x0d\n\x0d\n  return _isContext(object);\x0d\n}\x0d\n\x0d\nclass Script extends ContextifyScript {\x0d\n  constructor(code\x2C options = kEmptyObject) {\x0d\n    code = `${code}`;\x0d\n    if (typeof options === 'string') {\x0d\n      options = { filename: options };\x0d\n    } else {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      filename = 'evalmachine.<anonymous>'\x2C\x0d\n      lineOffset = 0\x2C\x0d\n      columnOffset = 0\x2C\x0d\n      cachedData\x2C\x0d\n      produceCachedData = false\x2C\x0d\n      importModuleDynamically\x2C\x0d\n      [kParsingContext]: parsingContext\x2C\x0d\n    } = options;\x0d\n\x0d\n    validateString(filename\x2C 'options.filename');\x0d\n    validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n    validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n    if (cachedData !== undefined) {\x0d\n      validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n    }\x0d\n    validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n\x0d\n    const hostDefinedOptionId =\x0d\n        getHostDefinedOptionId(importModuleDynamically\x2C filename);\x0d\n    // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n    // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n    // protects against that.\x0d\n    try { // eslint-disable-line no-useless-catch\x0d\n      super(code\x2C\x0d\n            filename\x2C\x0d\n            lineOffset\x2C\x0d\n            columnOffset\x2C\x0d\n            cachedData\x2C\x0d\n            produceCachedData\x2C\x0d\n            parsingContext\x2C\x0d\n            hostDefinedOptionId);\x0d\n    } catch (e) {\x0d\n      throw e; /* node-do-not-add-exception-line */\x0d\n    }\x0d\n\x0d\n    registerImportModuleDynamically(this\x2C importModuleDynamically);\x0d\n  }\x0d\n\x0d\n  runInThisContext(options) {\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(null\x2C options);\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInContext(contextifiedObject\x2C options) {\x0d\n    validateContext(contextifiedObject);\x0d\n    const { breakOnSigint\x2C args } = getRunInContextArgs(\x0d\n      contextifiedObject\x2C\x0d\n      options\x2C\x0d\n    );\x0d\n    if (breakOnSigint && process.listenerCount('SIGINT') > 0) {\x0d\n      return sigintHandlersWrap(super.runInContext\x2C this\x2C args);\x0d\n    }\x0d\n    return ReflectApply(super.runInContext\x2C this\x2C args);\x0d\n  }\x0d\n\x0d\n  runInNewContext(contextObject\x2C options) {\x0d\n    const context = createContext(contextObject\x2C getContextOptions(options));\x0d\n    return this.runInContext(context\x2C options);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction validateContext(contextifiedObject) {\x0d\n  if (!isContext(contextifiedObject)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('contextifiedObject'\x2C 'vm.Context'\x2C\x0d\n                                   contextifiedObject);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getRunInContextArgs(contextifiedObject\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  let timeout = options.timeout;\x0d\n  if (timeout === undefined) {\x0d\n    timeout = -1;\x0d\n  } else {\x0d\n    validateUint32(timeout\x2C 'options.timeout'\x2C true);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    displayErrors = true\x2C\x0d\n    breakOnSigint = false\x2C\x0d\n    [kVmBreakFirstLineSymbol]: breakFirstLine = false\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(displayErrors\x2C 'options.displayErrors');\x0d\n  validateBoolean(breakOnSigint\x2C 'options.breakOnSigint');\x0d\n\x0d\n  return {\x0d\n    breakOnSigint\x2C\x0d\n    args: [\x0d\n      contextifiedObject\x2C\x0d\n      timeout\x2C\x0d\n      displayErrors\x2C\x0d\n      breakOnSigint\x2C\x0d\n      breakFirstLine\x2C\x0d\n    ]\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction getContextOptions(options) {\x0d\n  if (!options)\x0d\n    return {};\x0d\n  const contextOptions = {\x0d\n    name: options.contextName\x2C\x0d\n    origin: options.contextOrigin\x2C\x0d\n    codeGeneration: undefined\x2C\x0d\n    microtaskMode: options.microtaskMode\x2C\x0d\n  };\x0d\n  if (contextOptions.name !== undefined)\x0d\n    validateString(contextOptions.name\x2C 'options.contextName');\x0d\n  if (contextOptions.origin !== undefined)\x0d\n    validateString(contextOptions.origin\x2C 'options.contextOrigin');\x0d\n  if (options.contextCodeGeneration !== undefined) {\x0d\n    validateObject(options.contextCodeGeneration\x2C\x0d\n                   'options.contextCodeGeneration');\x0d\n    const { strings\x2C wasm } = options.contextCodeGeneration;\x0d\n    if (strings !== undefined)\x0d\n      validateBoolean(strings\x2C 'options.contextCodeGeneration.strings');\x0d\n    if (wasm !== undefined)\x0d\n      validateBoolean(wasm\x2C 'options.contextCodeGeneration.wasm');\x0d\n    contextOptions.codeGeneration = { strings\x2C wasm };\x0d\n  }\x0d\n  if (options.microtaskMode !== undefined)\x0d\n    validateString(options.microtaskMode\x2C 'options.microtaskMode');\x0d\n  return contextOptions;\x0d\n}\x0d\n\x0d\nlet defaultContextNameIndex = 1;\x0d\nfunction createContext(contextObject = {}\x2C options = kEmptyObject) {\x0d\n  if (isContext(contextObject)) {\x0d\n    return contextObject;\x0d\n  }\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    name = `VM Context ${defaultContextNameIndex++}`\x2C\x0d\n    origin\x2C\x0d\n    codeGeneration\x2C\x0d\n    microtaskMode\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(name\x2C 'options.name');\x0d\n  if (origin !== undefined)\x0d\n    validateString(origin\x2C 'options.origin');\x0d\n  if (codeGeneration !== undefined)\x0d\n    validateObject(codeGeneration\x2C 'options.codeGeneration');\x0d\n\x0d\n  let strings = true;\x0d\n  let wasm = true;\x0d\n  if (codeGeneration !== undefined) {\x0d\n    ({ strings = true\x2C wasm = true } = codeGeneration);\x0d\n    validateBoolean(strings\x2C 'options.codeGeneration.strings');\x0d\n    validateBoolean(wasm\x2C 'options.codeGeneration.wasm');\x0d\n  }\x0d\n\x0d\n  validateOneOf(microtaskMode\x2C\x0d\n                'options.microtaskMode'\x2C\x0d\n                ['afterEvaluate'\x2C undefined]);\x0d\n  const microtaskQueue = (microtaskMode === 'afterEvaluate');\x0d\n\x0d\n  const hostDefinedOptionId =\x0d\n    getHostDefinedOptionId(importModuleDynamically\x2C name);\x0d\n\x0d\n  makeContext(contextObject\x2C name\x2C origin\x2C strings\x2C wasm\x2C microtaskQueue\x2C hostDefinedOptionId);\x0d\n  // Register the context scope callback after the context was initialized.\x0d\n  registerImportModuleDynamically(contextObject\x2C importModuleDynamically);\x0d\n  return contextObject;\x0d\n}\x0d\n\x0d\nfunction createScript(code\x2C options) {\x0d\n  return new Script(code\x2C options);\x0d\n}\x0d\n\x0d\n// Remove all SIGINT listeners and re-attach them after the wrapped function\x0d\n// has executed\x2C so that caught SIGINT are handled by the listeners again.\x0d\nfunction sigintHandlersWrap(fn\x2C thisArg\x2C argsArray) {\x0d\n  const sigintListeners = process.rawListeners('SIGINT');\x0d\n\x0d\n  process.removeAllListeners('SIGINT');\x0d\n\x0d\n  try {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C argsArray);\x0d\n  } finally {\x0d\n    // Add using the public methods so that the `newListener` handler of\x0d\n    // process can re-attach the listeners.\x0d\n    ArrayPrototypeForEach(sigintListeners\x2C (listener) => {\x0d\n      process.addListener('SIGINT'\x2C listener);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction runInContext(code\x2C contextifiedObject\x2C options) {\x0d\n  validateContext(contextifiedObject);\x0d\n  if (typeof options === 'string') {\x0d\n    options = {\x0d\n      filename: options\x2C\x0d\n      [kParsingContext]: contextifiedObject\x2C\x0d\n    };\x0d\n  } else {\x0d\n    options = { ...options\x2C [kParsingContext]: contextifiedObject };\x0d\n  }\x0d\n  return createScript(code\x2C options)\x0d\n    .runInContext(contextifiedObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInNewContext(code\x2C contextObject\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  contextObject = createContext(contextObject\x2C getContextOptions(options));\x0d\n  options = { ...options\x2C [kParsingContext]: contextObject };\x0d\n  return createScript(code\x2C options).runInNewContext(contextObject\x2C options);\x0d\n}\x0d\n\x0d\nfunction runInThisContext(code\x2C options) {\x0d\n  if (typeof options === 'string') {\x0d\n    options = { filename: options };\x0d\n  }\x0d\n  return createScript(code\x2C options).runInThisContext(options);\x0d\n}\x0d\n\x0d\nfunction compileFunction(code\x2C params\x2C options = kEmptyObject) {\x0d\n  validateString(code\x2C 'code');\x0d\n  if (params !== undefined) {\x0d\n    validateStringArray(params\x2C 'params');\x0d\n  }\x0d\n  const {\x0d\n    filename = ''\x2C\x0d\n    columnOffset = 0\x2C\x0d\n    lineOffset = 0\x2C\x0d\n    cachedData = undefined\x2C\x0d\n    produceCachedData = false\x2C\x0d\n    parsingContext = undefined\x2C\x0d\n    contextExtensions = []\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateString(filename\x2C 'options.filename');\x0d\n  validateInt32(columnOffset\x2C 'options.columnOffset');\x0d\n  validateInt32(lineOffset\x2C 'options.lineOffset');\x0d\n  if (cachedData !== undefined)\x0d\n    validateBuffer(cachedData\x2C 'options.cachedData');\x0d\n  validateBoolean(produceCachedData\x2C 'options.produceCachedData');\x0d\n  if (parsingContext !== undefined) {\x0d\n    if (\x0d\n      typeof parsingContext !== 'object' ||\x0d\n      parsingContext === null ||\x0d\n      !isContext(parsingContext)\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'options.parsingContext'\x2C\x0d\n        'Context'\x2C\x0d\n        parsingContext\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n  validateArray(contextExtensions\x2C 'options.contextExtensions');\x0d\n  ArrayPrototypeForEach(contextExtensions\x2C (extension\x2C i) => {\x0d\n    const name = `options.contextExtensions[${i}]`;\x0d\n    validateObject(extension\x2C name\x2C kValidateObjectAllowNullable);\x0d\n  });\x0d\n\x0d\n  const hostDefinedOptionId =\x0d\n      getHostDefinedOptionId(importModuleDynamically\x2C filename);\x0d\n\x0d\n  return internalCompileFunction(\x0d\n    code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\x0d\n    cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\x0d\n    params\x2C hostDefinedOptionId\x2C importModuleDynamically\x2C\x0d\n  ).function;\x0d\n}\x0d\n\x0d\nconst measureMemoryModes = {\x0d\n  summary: constants.measureMemory.mode.SUMMARY\x2C\x0d\n  detailed: constants.measureMemory.mode.DETAILED\x2C\x0d\n};\x0d\n\x0d\nconst measureMemoryExecutions = {\x0d\n  default: constants.measureMemory.execution.DEFAULT\x2C\x0d\n  eager: constants.measureMemory.execution.EAGER\x2C\x0d\n};\x0d\n\x0d\nfunction measureMemory(options = kEmptyObject) {\x0d\n  emitExperimentalWarning('vm.measureMemory');\x0d\n  validateObject(options\x2C 'options');\x0d\n  const { mode = 'summary'\x2C execution = 'default' } = options;\x0d\n  validateOneOf(mode\x2C 'options.mode'\x2C ['summary'\x2C 'detailed']);\x0d\n  validateOneOf(execution\x2C 'options.execution'\x2C ['default'\x2C 'eager']);\x0d\n  const result = _measureMemory(measureMemoryModes[mode]\x2C\x0d\n                                measureMemoryExecutions[execution]);\x0d\n  if (result === undefined) {\x0d\n    return PromiseReject(new ERR_CONTEXT_NOT_INITIALIZED());\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst vmConstants = {\x0d\n  __proto__: null\x2C\x0d\n  USE_MAIN_CONTEXT_DEFAULT_LOADER: vm_dynamic_import_main_context_default\x2C\x0d\n};\x0d\n\x0d\nObjectFreeze(vmConstants);\x0d\n\x0d\nmodule.exports = {\x0d\n  Script\x2C\x0d\n  createContext\x2C\x0d\n  createScript\x2C\x0d\n  runInContext\x2C\x0d\n  runInNewContext\x2C\x0d\n  runInThisContext\x2C\x0d\n  isContext\x2C\x0d\n  compileFunction\x2C\x0d\n  measureMemory\x2C\x0d\n  constants: vmConstants\x2C\x0d\n};\x0d\n\x0d\n// The vm module is patched to include vm.Module\x2C vm.SourceTextModule\x0d\n// and vm.SyntheticModule in the pre-execution phase when\x0d\n// --experimental-vm-modules is on.\x0d\n
code-source-info,0x1c66f8f5bf6,80,0,13228,C0O0C4O13228,,
code-creation,JS,10,167833,0x1c66f8f66be,639, node:vm:1:1,0x1c66f8f5b70,~
code-source-info,0x1c66f8f66be,80,0,13228,C0O0C166O1183C172O1209C177O1226C182O1237C188O1255C194O1388C197O1388C202O1301C207O1322C213O1338C218O1367C224O1490C227O1490C232O1516C237O1431C243O1463C249O1775C252O1775C257O1536C263O1554C269O1574C275O1593C281O1611C287O1629C293O1648C299O1667C305O1691C311O1710C317O1740C323O1894C326O1894C331O1819C337O1847C343O1864C349O2051C352O2051C357O1932C363O1959C369O1998C375O2013C381O2132C384O2132C389O2087C394O2185C397O2185C401O2185C407O2611C452O2590C454O7095C456O7095C458O11851C463O11875C468O11889C473O11894C481O11926C486O11940C491O11945C501O11851C503O11994C508O12018C513O12032C518O12042C526O12071C531O12085C536O12095C546O11994C548O12717C555O12775C562O12822C566O12852C573O12874C579O12885C585O12903C591O12920C597O12937C603O12957C609O12978C615O12992C621O13012C627O13041C633O12867C638O13227,,
code-creation,JS,10,168198,0x1c66f8f816e,82,runInNewContext node:vm:303:25,0x1c66f8f5ea8,~
code-source-info,0x1c66f8f816e,80,9649,9984,C0O9685C6O9725C13O9747C22O9766C28O9811C33O9782C40O9843C47O9868C53O9886C61O9906C64O9913C70O9940C75O9941C81O9981,,
code-creation,JS,10,168314,0x1c66f8f9256,214,getContextOptions node:vm:195:27,0x1c66f8f5d18,~
code-source-info,0x1c66f8f9256,80,5993,7061,C0O6008C4O6027C5O6037C6O6064C11O6085C19O6119C28O6155C32O6194C43O6237C49O6262C54O6292C62O6262C67O6344C73O6371C78O6401C86O6371C91O6450C97O6494C102O6517C110O6494C115O6633C120O6607C125O6616C130O6661C134O6695C142O6695C147O6767C151O6798C159O6798C164O6864C171O6898C177O6907C183O6894C187O6935C193O6969C198O6992C206O6969C211O7036C213O7058,,
code-creation,JS,10,168477,0x1c66f8f979e,295,createContext node:vm:224:23,0x1c66f8f5d68,~
code-source-info,0x1c66f8f979e,80,7121,8492,C4O7121C16O7152C23O7171C26O7175C32O7208C34O7229C35O7240C43O7240C48O7294C62O7301C72O7338C85O7349C90O7362C95O7383C100O7403C105O7449C113O7449C118O7490C122O7521C130O7521C135O7566C139O7605C147O7605C152O7682C154O7702C156O7711C160O7755C171O7771C179O7809C187O7809C192O7874C200O7874C205O7938C213O7952C222O8044C229O7938C234O8083C236O8098C240O8158C245O8158C251O8218C277O8218C282O8392C287O8392C292O8468C294O8489,,
code-creation,JS,10,168573,0x1c66f8f9a36,31,isContext node:vm:77:19,0x1c66f8f5c28,~
code-source-info,0x1c66f8f9a36,80,2477,2586,C0O2491C10O2524C16O2491C21O2557C26O2564C30O2583,,
code-creation,JS,10,168669,0x1c66f8f9bf6,252, node:internal/validators:235:3,0x3fcdef85630,~
code-source-info,0x1c66f8f9bf6,15,6585,7633,C12O6609C19O6640C21O6656C23O6652C28O6686C34O6708C37O6708C43O6740C59O6746C64O6740C65O6813C71O6855C87O6861C92O6855C95O6964C102O6994C107O7005C111O7021C117O7071C133O7077C138O7071C139O7165C146O7192C151O7203C155O7219C159O7239C162O7239C168O7271C184O7277C189O7271C190O7368C197O7398C202O7409C206O7443C210O7466C212O7482C219O7499C223O7530C228O7558C244O7564C249O7558C251O7632,,
code-creation,JS,10,168777,0x1c66f8f9e2e,10,isContext node:internal/vm:39:19,0x3fcdefa7fa0,~
script-source,41,node:internal/vm,'use strict';\x0d\n\x0d\nconst {\x0d\n  ReflectApply\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ContextifyScript\x2C\x0d\n  compileFunction\x2C\x0d\n} = internalBinding('contextify');\x0d\nconst {\x0d\n  runInContext\x2C\x0d\n} = ContextifyScript.prototype;\x0d\nconst {\x0d\n  vm_dynamic_import_default_internal\x2C\x0d\n  vm_dynamic_import_main_context_default\x2C\x0d\n  vm_dynamic_import_no_callback\x2C\x0d\n  vm_dynamic_import_missing_flag\x2C\x0d\n} = internalBinding('symbols');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getOptionValue\x2C\x0d\n} = require('internal/options');\x0d\nconst {\x0d\n  privateSymbols: {\x0d\n    contextify_context_private_symbol\x2C\x0d\n  }\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\n/**\x0d\n * Checks if the given object is a context object.\x0d\n * @param {object} object - The object to check.\x0d\n * @returns {boolean} - Returns true if the object is a context object\x2C else false.\x0d\n */\x0d\nfunction isContext(object) {\x0d\n  return object[contextify_context_private_symbol] !== undefined;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Retrieves the host-defined option ID based on the provided importModuleDynamically and hint.\x0d\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback | undefined} importModuleDynamically -\x0d\n * The importModuleDynamically function or undefined.\x0d\n * @param {string} hint - The hint for the option ID.\x0d\n * @returns {symbol | import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} - The host-defined option\x0d\n * ID.\x0d\n */\x0d\nfunction getHostDefinedOptionId(importModuleDynamically\x2C hint) {\x0d\n  if (importModuleDynamically === vm_dynamic_import_main_context_default ||\x0d\n      importModuleDynamically === vm_dynamic_import_default_internal) {\x0d\n    return importModuleDynamically;\x0d\n  }\x0d\n\x0d\n  if (importModuleDynamically !== undefined) {\x0d\n    // Check that it's either undefined or a function before we pass\x0d\n    // it into the native constructor.\x0d\n    validateFunction(importModuleDynamically\x2C\x0d\n                     'options.importModuleDynamically');\x0d\n  }\x0d\n  if (importModuleDynamically === undefined) {\x0d\n    // We need a default host defined options that are the same for all\x0d\n    // scripts not needing custom module callbacks so that the isolate\x0d\n    // compilation cache can be hit.\x0d\n    return vm_dynamic_import_no_callback;\x0d\n  }\x0d\n  // We should've thrown here immediately when we introduced\x0d\n  // --experimental-vm-modules and importModuleDynamically\x2C but since\x0d\n  // users are already using this callback to throw a similar error\x2C\x0d\n  // we also defer the error to the time when an actual import() is called\x0d\n  // to avoid breaking them. To ensure that the isolate compilation\x0d\n  // cache can still be hit\x2C use a constant sentinel symbol here.\x0d\n  if (!getOptionValue('--experimental-vm-modules')) {\x0d\n    return vm_dynamic_import_missing_flag;\x0d\n  }\x0d\n\x0d\n  return Symbol(hint);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Registers a dynamically imported module for customization.\x0d\n * @param {string} referrer - The path of the referrer module.\x0d\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} importModuleDynamically - The\x0d\n * dynamically imported module function to be registered.\x0d\n */\x0d\nfunction registerImportModuleDynamically(referrer\x2C importModuleDynamically) {\x0d\n  // If it's undefined or certain known symbol\x2C there's no customization so\x0d\n  // no need to register anything.\x0d\n  if (importModuleDynamically === undefined ||\x0d\n      importModuleDynamically === vm_dynamic_import_main_context_default ||\x0d\n      importModuleDynamically === vm_dynamic_import_default_internal) {\x0d\n    return;\x0d\n  }\x0d\n  const { importModuleDynamicallyWrap } = require('internal/vm/module');\x0d\n  const { registerModule } = require('internal/modules/esm/utils');\x0d\n  registerModule(referrer\x2C {\x0d\n    __proto__: null\x2C\x0d\n    importModuleDynamically:\x0d\n      importModuleDynamicallyWrap(importModuleDynamically)\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\n/**\x0d\n * Compiles a function from the given code string.\x0d\n * @param {string} code - The code string to compile.\x0d\n * @param {string} filename - The filename to use for the compiled function.\x0d\n * @param {number} lineOffset - The line offset to use for the compiled function.\x0d\n * @param {number} columnOffset - The column offset to use for the compiled function.\x0d\n * @param {Buffer} [cachedData=undefined] - The cached data to use for the compiled function.\x0d\n * @param {boolean} produceCachedData - Whether to produce cached data for the compiled function.\x0d\n * @param {ReturnType<import('vm').createContext} [parsingContext=undefined] - The parsing context to use for the\x0d\n * compiled function.\x0d\n * @param {object[]} [contextExtensions=[]] - An array of context extensions to use for the compiled function.\x0d\n * @param {string[]} [params] - An optional array of parameter names for the compiled function.\x0d\n * @param {symbol} hostDefinedOptionId - A symbol referenced by the field `host_defined_option_symbol`.\x0d\n * @param {import('internal/modules/esm/utils').ImportModuleDynamicallyCallback} [importModuleDynamically] -\x0d\n * A function to use for dynamically importing modules.\x0d\n * @returns {object} An object containing the compiled function and any associated data.\x0d\n * @throws {TypeError} If any of the arguments are of the wrong type.\x0d\n * @throws {ERR_INVALID_ARG_TYPE} If the parsing context is not a valid context object.\x0d\n */\x0d\nfunction internalCompileFunction(\x0d\n  code\x2C filename\x2C lineOffset\x2C columnOffset\x2C\x0d\n  cachedData\x2C produceCachedData\x2C parsingContext\x2C contextExtensions\x2C\x0d\n  params\x2C hostDefinedOptionId\x2C importModuleDynamically) {\x0d\n  const result = compileFunction(\x0d\n    code\x2C\x0d\n    filename\x2C\x0d\n    lineOffset\x2C\x0d\n    columnOffset\x2C\x0d\n    cachedData\x2C\x0d\n    produceCachedData\x2C\x0d\n    parsingContext\x2C\x0d\n    contextExtensions\x2C\x0d\n    params\x2C\x0d\n    hostDefinedOptionId\x2C\x0d\n  );\x0d\n\x0d\n  if (produceCachedData) {\x0d\n    result.function.cachedDataProduced = result.cachedDataProduced;\x0d\n  }\x0d\n\x0d\n  if (result.cachedData) {\x0d\n    result.function.cachedData = result.cachedData;\x0d\n  }\x0d\n\x0d\n  if (typeof result.cachedDataRejected === 'boolean') {\x0d\n    result.function.cachedDataRejected = result.cachedDataRejected;\x0d\n  }\x0d\n\x0d\n  registerImportModuleDynamically(result.function\x2C importModuleDynamically);\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a contextify script.\x0d\n * @param {string} code - The code of the script.\x0d\n * @param {string} filename - The filename of the script.\x0d\n * @param {number} lineOffset - The line offset of the script.\x0d\n * @param {number} columnOffset - The column offset of the script.\x0d\n * @param {Buffer} cachedData - The cached data of the script.\x0d\n * @param {boolean} produceCachedData - Indicates whether to produce cached data.\x0d\n * @param {object} parsingContext - The parsing context of the script.\x0d\n * @param {number} hostDefinedOptionId - The host-defined option ID.\x0d\n * @param {boolean} importModuleDynamically - Indicates whether to import modules dynamically.\x0d\n * @returns {ContextifyScript} The created contextify script.\x0d\n */\x0d\nfunction makeContextifyScript(code\x2C\x0d\n                              filename\x2C\x0d\n                              lineOffset\x2C\x0d\n                              columnOffset\x2C\x0d\n                              cachedData\x2C\x0d\n                              produceCachedData\x2C\x0d\n                              parsingContext\x2C\x0d\n                              hostDefinedOptionId\x2C\x0d\n                              importModuleDynamically) {\x0d\n  let script;\x0d\n  // Calling `ReThrow()` on a native TryCatch does not generate a new\x0d\n  // abort-on-uncaught-exception check. A dummy try/catch in JS land\x0d\n  // protects against that.\x0d\n  try { // eslint-disable-line no-useless-catch\x0d\n    script = new ContextifyScript(code\x2C\x0d\n                                  filename\x2C\x0d\n                                  lineOffset\x2C\x0d\n                                  columnOffset\x2C\x0d\n                                  cachedData\x2C\x0d\n                                  produceCachedData\x2C\x0d\n                                  parsingContext\x2C\x0d\n                                  hostDefinedOptionId);\x0d\n  } catch (e) {\x0d\n    throw e; /* node-do-not-add-exception-line */\x0d\n  }\x0d\n\x0d\n  registerImportModuleDynamically(script\x2C importModuleDynamically);\x0d\n  return script;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Runs a script in the current context.\x0d\n * Internal version of `vm.Script.prototype.runInThisContext()` which skips argument validation.\x0d\n * @param {ReturnType<makeContextifyScript>} script - The script to run.\x0d\n * @param {boolean} displayErrors - Whether to display errors.\x0d\n * @param {boolean} breakOnFirstLine - Whether to break on the first line.\x0d\n */\x0d\nfunction runScriptInThisContext(script\x2C displayErrors\x2C breakOnFirstLine) {\x0d\n  return ReflectApply(\x0d\n    runInContext\x2C\x0d\n    script\x2C\x0d\n    [\x0d\n      null\x2C                // sandbox - use current context\x0d\n      -1\x2C                  // timeout\x0d\n      displayErrors\x2C       // displayErrors\x0d\n      false\x2C               // breakOnSigint\x0d\n      breakOnFirstLine\x2C    // breakOnFirstLine\x0d\n    ]\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHostDefinedOptionId\x2C\x0d\n  internalCompileFunction\x2C\x0d\n  isContext\x2C\x0d\n  makeContextifyScript\x2C\x0d\n  registerImportModuleDynamically\x2C\x0d\n  runScriptInThisContext\x2C\x0d\n};\x0d\n
code-source-info,0x1c66f8f9e2e,41,866,946,C0O880C2O894C4O893C8O929C9O943,,
code-creation,JS,10,169324,0x1c66f8fa79e,75, node:internal/validators:197:39,0x3fcdef85590,~
code-source-info,0x1c66f8fa79e,15,5554,5896,C0O5583C5O5588C12O5649C19O5676C22O5694C27O5676C36O5649C42O5800C47O5819C51O5835C67O5841C72O5835C74O5895,,
code-creation,JS,10,169410,0x1c66f8fa996,76,getHostDefinedOptionId node:internal/vm:51:32,0x3fcdefa8118,~
code-source-info,0x1c66f8fa996,41,1445,2767,C0O1482C2O1514C4O1510C11O1591C13O1587C18O1634C20O1665C21O1676C25O1836C33O1836C38O1944C42O2177C46O2214C47O2638C55O2643C61O2695C65O2733C66O2744C71O2751C75O2764,,
code-creation,JS,10,170140,0x8c1d166b06,76,registerImportModuleDynamically node:internal/vm:88:41,0x3fcdefa8168,~
code-source-info,0x8c1d166b06,41,3119,3781,C0O3273C6O3353C8O3349C15O3430C17O3426C22O3473C23O3480C24O3529C30O3529C35O3497C40O3590C46O3590C51O3571C56O3647C61O3718C69O3632C75O3780,,
code-creation,JS,10,170214,0x8c1d166f76,19,createScript node:vm:267:22,0x1c66f8f5db8,~
code-source-info,0x8c1d166f76,80,8517,8574,C0O8538C13O8545C18O8571,,
code-creation,JS,10,170321,0x8c1d16728e,313,Script node:vm:84:14,0x1c66f8f5fe8,~
code-source-info,0x8c1d16728e,80,2644,4132,C14O2661C21O2682C25O2705C31O2747C38O2769C49O2801C59O2801C64O2866C76O2911C84O2934C92O2959C97O2978C105O3012C114O3045C124O3104C134O3104C139O3155C149O3155C154O3209C164O3209C169O3267C173O3306C183O3306C188O3368C198O3368C203O3477C210O3477C219O3770C264O3770C291O4004C293O4004C294O4064C304O4064C312O4131,,
code-creation,JS,10,170431,0x8c1d167576,155, node:internal/validators:114:3,0x3fcdef85368,~
code-source-info,0x8c1d167576,15,3158,3632,C36O3301C42O3341C58O3347C63O3341C64O3408C69O3413C75O3446C91O3452C96O3446C97O3513C99O3523C106O3538C111O3554C121O3593C134O3606C147O3560C152O3554C154O3631,,
code-creation,Script,10,170513,0x8c1d16786e,5, evalmachine.<anonymous>:1:1,0x8c1d1677a8,~
script-source,81,evalmachine.<anonymous>,this
code-source-info,0x8c1d16786e,81,0,4,C0O0C4O4,,
code-creation,JS,10,170593,0x8c1d167a6e,33,runInNewContext node:vm:151:18,0x1c66f8f60d8,~
code-source-info,0x8c1d167a6e,80,4861,5020,C0O4909C10O4938C15O4909C21O4984C26O4984C32O5015,,
code-creation,JS,10,170674,0x8c1d167b96,109,runInContext node:vm:139:15,0x1c66f8f6088,~
code-source-info,0x8c1d167b96,80,4457,4840,C0O4494C5O4494C9O4568C14O4568C20O4544C25O4559C30O4645C39O4674C47O4674C54O4698C59O4712C66O4744C77O4719C82O4770C83O4783C92O4809C103O4790C108O4835,,
code-creation,JS,10,170741,0x8c1d167d36,33,validateContext node:vm:157:25,0x1c66f8f5c78,~
code-source-info,0x8c1d167d36,80,5051,5251,C0O5077C3O5082C9O5120C25O5126C30O5120C32O5250,,
code-creation,JS,10,170828,0x8c1d167f9e,188,getRunInContextArgs node:vm:164:29,0x1c66f8f5cc8,~
code-source-info,0x8c1d167f9e,80,5283,5963,C9O5314C16O5333C24O5333C29O5396C34O5408C36O5442C41O5473C54O5473C59O5546C70O5573C80O5602C93O5673C101O5673C106O5733C114O5733C119O5795C126O5809C130O5835C139O5844C148O5871C157O5887C166O5909C175O5931C187O5960,,
code-creation,JS,10,171184,0x8c1d168436,54,nextPart node:fs:2603:31,0x3fcdefb60d8,~
code-source-info,0x8c1d168436,56,71560,71811,C0O71587C4O71583C9O71620C14O71620C20O71704C22O71715C24O71711C31O71745C33O71741C38O71774C40O71783C41O71597C47O71574C51O71796C53O71806,,
code-creation,JS,10,171364,0x8c1d16857e,34,isFileType node:fs:211:20,0x3fcdefb42e8,~
code-source-info,0x8c1d16857e,56,5497,5745,C0O5634C2O5639C6O5647C10O5682C15O5689C20O5706C22O5721C24O5719C30O5729C33O5742,,
code-creation,JS,10,171853,0x8c1d168746,72,encodeRealpathResult node:fs:2590:30,0x3fcdefb6088,~
code-source-info,0x8c1d168746,56,71149,71415,C0O71172C4O71197C10O71217C17O71226C22O71243C24O71257C25O71278C30O71285C35O71285C41O71314C48O71323C53O71344C55O71360C56O71385C61O71402C66O71385C71O71412,,
tick,0x7ff6cca8a6a3,172056,0,0x0,3,0x7ff6cbdbb8d0,0x1c66f8e4a37,0x2bcf6affdbf
code-creation,JS,10,172079,0x8c1d168a26,199,shouldUseESMLoader node:internal/modules/run_main:52:28,0x220dba81530,~
code-source-info,0x8c1d168a26,69,1718,3179,C0O1734C8O1738C15O1784C20O1800C21O1812C22O1994C30O1994C35O2215C43O2215C48O2262C54O2269C59O2288C65O2295C70O2302C71O2314C72O2376C78O2392C84O2392C91O2437C92O2449C93O2455C99O2472C105O2472C112O2517C113O2530C114O2567C120O2567C125O2546C130O2631C135O2743C142O2747C166O2784C167O2796C168O2826C169O2839C170O2902C178O2906C184O3085C191O3092C196O3134C197O3151C198O3164,,
code-creation,JS,10,172244,0x8c1d168d96,184,readPackageScope node:internal/modules/package_json_reader:149:26,0x3fcdefbe138,~
script-source,65,node:internal/modules/package_json_reader,'use strict';\x0d\n\x0d\nconst {\x0d\n  JSONParse\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { internalModuleReadJSON } = internalBinding('fs');\x0d\nconst { resolve\x2C sep\x2C toNamespacedPath } = require('path');\x0d\nconst permission = require('internal/process/permission');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst { fileURLToPath\x2C pathToFileURL } = require('internal/url');\x0d\n\x0d\nconst cache = new SafeMap();\x0d\nconst isAIX = process.platform === 'aix';\x0d\n\x0d\nlet manifest;\x0d\n\x0d\n/**\x0d\n * @typedef {{\x0d\n *   exists: boolean\x2C\x0d\n *   pjsonPath: string\x2C\x0d\n *   exports?: string | string[] | Record<string\x2C unknown>\x2C\x0d\n *   imports?: string | string[] | Record<string\x2C unknown>\x2C\x0d\n *   name?: string\x2C\x0d\n *   main?: string\x2C\x0d\n *   type: 'commonjs' | 'module' | 'none'\x2C\x0d\n * }} PackageConfig\x0d\n */\x0d\n\x0d\n/**\x0d\n * @param {string} jsonPath\x0d\n * @param {{\x0d\n *   base?: string\x2C\x0d\n *   specifier: string\x2C\x0d\n *   isESM: boolean\x2C\x0d\n * }} options\x0d\n * @returns {PackageConfig}\x0d\n */\x0d\nfunction read(jsonPath\x2C { base\x2C specifier\x2C isESM } = kEmptyObject) {\x0d\n  if (cache.has(jsonPath)) {\x0d\n    return cache.get(jsonPath);\x0d\n  }\x0d\n\x0d\n  const {\x0d\n    0: string\x2C\x0d\n    1: containsKeys\x2C\x0d\n  } = internalModuleReadJSON(\x0d\n    toNamespacedPath(jsonPath)\x2C\x0d\n  );\x0d\n  const result = {\x0d\n    __proto__: null\x2C\x0d\n    exists: false\x2C\x0d\n    pjsonPath: jsonPath\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C // Ignore unknown types for forwards compatibility\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n\x0d\n  // Folder read operation succeeds in AIX.\x0d\n  // For libuv change\x2C see https://github.com/libuv/libuv/pull/2025.\x0d\n  // https://github.com/nodejs/node/pull/48477#issuecomment-1604586650\x0d\n  // TODO(anonrig): Follow-up on this change and remove it since it is a\x0d\n  // semver-major change.\x0d\n  const isResultValid = isAIX && !isESM ? containsKeys : string !== undefined;\x0d\n\x0d\n  if (isResultValid) {\x0d\n    let parsed;\x0d\n    try {\x0d\n      parsed = JSONParse(string);\x0d\n    } catch (error) {\x0d\n      if (isESM) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          jsonPath\x2C\x0d\n          (base ? `"${specifier}" from ` : '') + fileURLToPath(base || specifier)\x2C\x0d\n          error.message\x2C\x0d\n        );\x0d\n      } else {\x0d\n        // For backward compat\x2C we modify the error returned by JSON.parse rather than creating a new one.\x0d\n        // TODO(aduh95): make it throw ERR_INVALID_PACKAGE_CONFIG in a semver-major with original error as cause\x0d\n        error.message = 'Error parsing ' + jsonPath + ': ' + error.message;\x0d\n        error.path = jsonPath;\x0d\n        throw error;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    result.exists = true;\x0d\n\x0d\n    // ObjectPrototypeHasOwnProperty is used to avoid prototype pollution.\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'name') && typeof parsed.name === 'string') {\x0d\n      result.name = parsed.name;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'main') && typeof parsed.main === 'string') {\x0d\n      result.main = parsed.main;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'exports')) {\x0d\n      result.exports = parsed.exports;\x0d\n    }\x0d\n\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'imports')) {\x0d\n      result.imports = parsed.imports;\x0d\n    }\x0d\n\x0d\n    // Ignore unknown types for forwards compatibility\x0d\n    if (ObjectPrototypeHasOwnProperty(parsed\x2C 'type') && (parsed.type === 'commonjs' || parsed.type === 'module')) {\x0d\n      result.type = parsed.type;\x0d\n    }\x0d\n\x0d\n    if (manifest === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      manifest = getOptionValue('--experimental-policy') ?\x0d\n        require('internal/process/policy').manifest :\x0d\n        null;\x0d\n    }\x0d\n    if (manifest !== null) {\x0d\n      const jsonURL = pathToFileURL(jsonPath);\x0d\n      manifest.assertIntegrity(jsonURL\x2C string);\x0d\n    }\x0d\n  }\x0d\n  cache.set(jsonPath\x2C result);\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} requestPath\x0d\n * @return {PackageConfig}\x0d\n */\x0d\nfunction readPackage(requestPath) {\x0d\n  return read(resolve(requestPath\x2C 'package.json'));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Get the nearest parent package.json file from a given path.\x0d\n * Return the package.json data and the path to the package.json file\x2C or false.\x0d\n * @param {string} checkPath The path to start searching from.\x0d\n */\x0d\nfunction readPackageScope(checkPath) {\x0d\n  const rootSeparatorIndex = StringPrototypeIndexOf(checkPath\x2C sep);\x0d\n  let separatorIndex;\x0d\n  const enabledPermission = permission.isEnabled();\x0d\n  do {\x0d\n    separatorIndex = StringPrototypeLastIndexOf(checkPath\x2C sep);\x0d\n    checkPath = StringPrototypeSlice(checkPath\x2C 0\x2C separatorIndex);\x0d\n    // Stop the search when the process doesn't have permissions\x0d\n    // to walk upwards\x0d\n    if (enabledPermission && !permission.has('fs.read'\x2C checkPath + sep)) {\x0d\n      return false;\x0d\n    }\x0d\n    if (StringPrototypeEndsWith(checkPath\x2C sep + 'node_modules')) {\x0d\n      return false;\x0d\n    }\x0d\n    const pjson = readPackage(checkPath + sep);\x0d\n    if (pjson.exists) {\x0d\n      return {\x0d\n        data: pjson\x2C\x0d\n        path: checkPath\x2C\x0d\n      };\x0d\n    }\x0d\n  } while (separatorIndex > rootSeparatorIndex);\x0d\n  return false;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  read\x2C\x0d\n  readPackage\x2C\x0d\n  readPackageScope\x2C\x0d\n};\x0d\n
code-source-info,0x8c1d168d96,65,4410,5229,C0O4454C7O4488C10O4454C16O4501C18O4546C23O4557C28O4557C33O4583C40O4638C43O4600C49O4649C62O4661C69O4808C75O4834C78O4845C88O4872C90O4870C94O4845C102O4887C103O4900C104O4913C111O4952C116O4956C120O4917C127O4984C128O4997C129O5024C134O5048C136O5046C140O5024C145O5069C151O5086C158O5110C164O5132C170O5152C171O5187C173O5187C178O4573C182O5213C183O5226,,
code-creation,JS,10,172648,0x8c1d169556,43,isEnabled node:internal/process/permission:16:12,0x3fcdef9ebd8,~
script-source,29,node:internal/process/permission,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectFreeze\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst permission = internalBinding('permission');\x0d\nconst { validateString } = require('internal/validators');\x0d\nconst { resolve } = require('path');\x0d\n\x0d\nlet experimentalPermission;\x0d\n\x0d\nmodule.exports = ObjectFreeze({\x0d\n  __proto__: null\x2C\x0d\n  isEnabled() {\x0d\n    if (experimentalPermission === undefined) {\x0d\n      const { getOptionValue } = require('internal/options');\x0d\n      experimentalPermission = getOptionValue('--experimental-permission');\x0d\n    }\x0d\n    return experimentalPermission;\x0d\n  }\x2C\x0d\n  has(scope\x2C reference) {\x0d\n    validateString(scope\x2C 'scope');\x0d\n    if (reference != null) {\x0d\n      // TODO: add support for WHATWG URLs and Uint8Arrays.\x0d\n      validateString(reference\x2C 'reference');\x0d\n      if (StringPrototypeStartsWith(scope\x2C 'fs')) {\x0d\n        reference = resolve(reference);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return permission.has(scope\x2C reference);\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x8c1d169556,29,339,580,C0O349C6O427C12O427C17O408C22O463C25O488C32O486C38O545C42O575,,
code-creation,JS,10,172817,0x8c1d1697be,22,readPackage node:internal/modules/package_json_reader:140:21,0x3fcdefbe0e8,~
code-source-info,0x8c1d1697be,65,4089,4161,C0O4108C5O4120C11O4120C17O4115C21O4158,,
code-creation,JS,10,173061,0x8c1d169c1e,573,read node:internal/modules/package_json_reader:48:14,0x3fcdefbdf00,~
code-source-info,0x8c1d169c1e
code-creation,JS,11,173307,0x7ff64c445b40,6376,resolve node:path:162:10,0x3fcdef9f3b0,^
code-source-info,0x7ff64c445b40,30,4971,9889,,,
code-creation,JS,11,173348,0x7ff64c447440,568,wrappedFn node:internal/errors:536:21,0x23399fe8d8,^
code-source-info,0x7ff64c447440,10,15243,15438,,,
code-creation,JS,11,173381,0x7ff64c4476c0,564,nextPart node:fs:2603:31,0x3fcdefb60d8,^
code-source-info,0x7ff64c4476c0,56,71560,71811,,,
code-creation,JS,10,173817,0x8c1d16b496,76,runMainESM node:internal/modules/run_main:93:20,0x220dba81580,~
code-source-info,0x8c1d16b496,69,3335,3637,C0O3335C8O3371C16O3371C21O3359C26O3440C34O3440C39O3422C44O3481C49O3504C53O3481C55O3516C60O3534C65O3534C70O3516C75O3636,,
code-creation,Eval,10,173974,0x8c1d16b8be,5, node:internal/process/esm_loader:1:1,0x8c1d16b6f8,~
script-source,82,node:internal/process/esm_loader,'use strict';\x0d\n\x0d\nconst { createModuleLoader } = require('internal/modules/esm/loader');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  hasUncaughtExceptionCaptureCallback\x2C\x0d\n} = require('internal/process/execution');\x0d\nconst { kEmptyObject\x2C getCWDURL } = require('internal/util');\x0d\n\x0d\nlet esmLoader;\x0d\n\x0d\nmodule.exports = {\x0d\n  get esmLoader() {\x0d\n    return esmLoader ??= createModuleLoader();\x0d\n  }\x2C\x0d\n  async loadESM(callback) {\x0d\n    esmLoader ??= createModuleLoader();\x0d\n    try {\x0d\n      const userImports = getOptionValue('--import');\x0d\n      if (userImports.length > 0) {\x0d\n        const parentURL = getCWDURL().href;\x0d\n        for (let i = 0; i < userImports.length; i++) {\x0d\n          await esmLoader.import(userImports[i]\x2C parentURL\x2C kEmptyObject);\x0d\n        }\x0d\n      } else {\x0d\n        esmLoader.forceLoadHooks();\x0d\n      }\x0d\n      await callback(esmLoader);\x0d\n    } catch (err) {\x0d\n      if (hasUncaughtExceptionCaptureCallback()) {\x0d\n        process._fatalException(err);\x0d\n        return;\x0d\n      }\x0d\n      internalBinding('errors').triggerUncaughtException(\x0d\n        err\x2C\x0d\n        true\x2C /* fromPromise */\x0d\n      );\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x8c1d16b8be,82,0,1145,C0O0C4O1145,,
code-creation,JS,10,174074,0x8c1d16baae,137, node:internal/process/esm_loader:1:1,0x8c1d16b838,~
code-source-info,0x8c1d16baae,82,0,1145,C0O0C31O48C34O48C39O25C45O116C48O116C53O97C59O199C62O199C67O157C73O275C76O275C81O247C87O261C93O308C94O308C96O322C101O419C131O337C136O1144,,
code-creation,Eval,10,174601,0x8c1d16cafe,5, node:internal/modules/esm/loader:1:1,0x8c1d16c6b0,~
script-source,83,node:internal/modules/esm/loader,'use strict';\x0d\n\x0d\n// This is needed to avoid cycles in esm/resolve <-> cjs/loader\x0d\nrequire('internal/modules/cjs/loader');\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  encodeURIComponent\x2C\x0d\n  hardenRegExp\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_REQUIRE_ESM\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { pathToFileURL\x2C isURL } = require('internal/url');\x0d\nconst { emitExperimentalWarning } = require('internal/util');\x0d\nconst {\x0d\n  getDefaultConditions\x2C\x0d\n} = require('internal/modules/esm/utils');\x0d\nlet defaultResolve\x2C defaultLoad\x2C defaultLoadSync\x2C importMetaInitializer;\x0d\n\x0d\n/**\x0d\n * Lazy loads the module_map module and returns a new instance of ResolveCache.\x0d\n * @returns {import('./module_map.js').ResolveCache')}\x0d\n */\x0d\nfunction newResolveCache() {\x0d\n  const { ResolveCache } = require('internal/modules/esm/module_map');\x0d\n  return new ResolveCache();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Generate a load cache (to store the final result of a load-chain for a particular module).\x0d\n * @returns {import('./module_map.js').LoadCache')}\x0d\n */\x0d\nfunction newLoadCache() {\x0d\n  const { LoadCache } = require('internal/modules/esm/module_map');\x0d\n  return new LoadCache();\x0d\n}\x0d\n\x0d\n/**\x0d\n * Lazy-load translators to avoid potentially unnecessary work at startup (ex if ESM is not used).\x0d\n * @returns {import('./translators.js').Translators}\x0d\n */\x0d\nfunction getTranslators() {\x0d\n  const { translators } = require('internal/modules/esm/translators');\x0d\n  return translators;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @type {HooksProxy}\x0d\n * Multiple loader instances exist for various\x2C specific reasons (see code comments at site).\x0d\n * In order to maintain consistency\x2C we use a single worker (sandbox)\x2C which must sit apart of an\x0d\n * individual loader instance.\x0d\n */\x0d\nlet hooksProxy;\x0d\n\x0d\n/**\x0d\n * @typedef {Record<string\x2C any>} ModuleExports\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {'builtin'|'commonjs'|'json'|'module'|'wasm'} ModuleFormat\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef {ArrayBuffer|TypedArray|string} ModuleSource\x0d\n */\x0d\n\x0d\n/**\x0d\n * This class covers the base machinery of module loading. To add custom\x0d\n * behavior you can pass a customizations object and this object will be\x0d\n * used to do the loading/resolving/registration process.\x0d\n */\x0d\nclass ModuleLoader {\x0d\n  /**\x0d\n   * The conditions for resolving packages if `--conditions` is not used.\x0d\n   */\x0d\n  #defaultConditions = getDefaultConditions();\x0d\n\x0d\n  /**\x0d\n   * The index for assigning unique URLs to anonymous module evaluation\x0d\n   */\x0d\n  evalIndex = 0;\x0d\n\x0d\n  /**\x0d\n   * Registry of resolved specifiers\x0d\n   */\x0d\n  #resolveCache = newResolveCache();\x0d\n\x0d\n  /**\x0d\n   * Registry of loaded modules\x2C akin to `require.cache`\x0d\n   */\x0d\n  loadCache = newLoadCache();\x0d\n\x0d\n  /**\x0d\n   * Methods which translate input code or other information into ES modules\x0d\n   */\x0d\n  translators = getTranslators();\x0d\n\x0d\n  /**\x0d\n   * Truthy to allow the use of `import.meta.resolve`. This is needed\x0d\n   * currently because the `Hooks` class does not have `resolveSync`\x0d\n   * implemented and `import.meta.resolve` requires it.\x0d\n   */\x0d\n  allowImportMetaResolve;\x0d\n\x0d\n  /**\x0d\n   * Customizations to pass requests to.\x0d\n   *\x0d\n   * Note that this value _MUST_ be set with `setCustomizations`\x0d\n   * because it needs to copy `customizations.allowImportMetaResolve`\x0d\n   *  to this property and failure to do so will cause undefined\x0d\n   * behavior when invoking `import.meta.resolve`.\x0d\n   * @see {ModuleLoader.setCustomizations}\x0d\n   */\x0d\n  #customizations;\x0d\n\x0d\n  constructor(customizations) {\x0d\n    if (getOptionValue('--experimental-network-imports')) {\x0d\n      emitExperimentalWarning('Network Imports');\x0d\n    }\x0d\n    this.setCustomizations(customizations);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Change the currently activate customizations for this module\x0d\n   * loader to be the provided `customizations`.\x0d\n   *\x0d\n   * If present\x2C this class customizes its core functionality to the\x0d\n   * `customizations` object\x2C including registration\x2C loading\x2C and resolving.\x0d\n   * There are some responsibilities that this class _always_ takes\x0d\n   * care of\x2C like validating outputs\x2C so that the customizations object\x0d\n   * does not have to do so.\x0d\n   *\x0d\n   * The customizations object has the shape:\x0d\n   *\x0d\n   * ```ts\x0d\n   * interface LoadResult {\x0d\n   *   format: ModuleFormat;\x0d\n   *   source: ModuleSource;\x0d\n   * }\x0d\n   *\x0d\n   * interface ResolveResult {\x0d\n   *   format: string;\x0d\n   *   url: URL['href'];\x0d\n   * }\x0d\n   *\x0d\n   * interface Customizations {\x0d\n   *   allowImportMetaResolve: boolean;\x0d\n   *   load(url: string\x2C context: object): Promise<LoadResult>\x0d\n   *   resolve(\x0d\n   *     originalSpecifier:\x0d\n   *     string\x2C parentURL: string\x2C\x0d\n   *     importAttributes: Record<string\x2C string>\x0d\n   *   ): Promise<ResolveResult>\x0d\n   *   resolveSync(\x0d\n   *     originalSpecifier:\x0d\n   *     string\x2C parentURL: string\x2C\x0d\n   *     importAttributes: Record<string\x2C string>\x0d\n   *   ) ResolveResult;\x0d\n   *   register(specifier: string\x2C parentURL: string): any;\x0d\n   *   forceLoadHooks(): void;\x0d\n   * }\x0d\n   * ```\x0d\n   *\x0d\n   * Note that this class _also_ implements the `Customizations`\x0d\n   * interface\x2C as does `CustomizedModuleLoader` and `Hooks`.\x0d\n   *\x0d\n   * Calling this function alters how modules are loaded and should be\x0d\n   * invoked with care.\x0d\n   * @param {object} customizations\x0d\n   */\x0d\n  setCustomizations(customizations) {\x0d\n    this.#customizations = customizations;\x0d\n    if (customizations) {\x0d\n      this.allowImportMetaResolve = customizations.allowImportMetaResolve;\x0d\n    } else {\x0d\n      this.allowImportMetaResolve = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async eval(\x0d\n    source\x2C\x0d\n    url = pathToFileURL(`${process.cwd()}/[eval${++this.evalIndex}]`).href\x2C\x0d\n  ) {\x0d\n    const evalInstance = (url) => {\x0d\n      const { ModuleWrap } = internalBinding('module_wrap');\x0d\n      const { registerModule } = require('internal/modules/esm/utils');\x0d\n      const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n      registerModule(module\x2C {\x0d\n        __proto__: null\x2C\x0d\n        initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n        importModuleDynamically: (specifier\x2C { url }\x2C importAttributes) => {\x0d\n          return this.import(specifier\x2C url\x2C importAttributes);\x0d\n        }\x2C\x0d\n      });\x0d\n\x0d\n      return module;\x0d\n    };\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C url\x2C undefined\x2C evalInstance\x2C false\x2C false);\x0d\n    this.loadCache.set(url\x2C undefined\x2C job);\x0d\n    const { module } = await job.run();\x0d\n\x0d\n    return {\x0d\n      __proto__: null\x2C\x0d\n      namespace: module.getNamespace()\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Get a (possibly still pending) module job from the cache\x2C\x0d\n   * or create one and return its Promise.\x0d\n   * @param {string} specifier The string after `from` in an `import` statement\x2C\x0d\n   *                           or the first parameter of an `import()`\x0d\n   *                           expression\x0d\n   * @param {string | undefined} parentURL The URL of the module importing this\x0d\n   *                                     one\x2C unless this is the Node.js entry\x0d\n   *                                     point.\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  async getModuleJob(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const resolveResult = await this.resolve(specifier\x2C parentURL\x2C importAttributes);\x0d\n    return this.getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  getModuleJobSync(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const resolveResult = this.resolveSync(specifier\x2C parentURL\x2C importAttributes);\x0d\n    return this.getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C true);\x0d\n  }\x0d\n\x0d\n  getJobFromResolveResult(resolveResult\x2C parentURL\x2C importAttributes\x2C sync) {\x0d\n    const { url\x2C format } = resolveResult;\x0d\n    const resolvedImportAttributes = resolveResult.importAttributes ?? importAttributes;\x0d\n    let job = this.loadCache.get(url\x2C resolvedImportAttributes.type);\x0d\n\x0d\n    // CommonJS will set functions for lazy job evaluation.\x0d\n    if (typeof job === 'function') {\x0d\n      this.loadCache.set(url\x2C undefined\x2C job = job());\x0d\n    }\x0d\n\x0d\n    if (job === undefined) {\x0d\n      job = this.#createModuleJob(url\x2C resolvedImportAttributes\x2C parentURL\x2C format\x2C sync);\x0d\n    }\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Create and cache an object representing a loaded module.\x0d\n   * @param {string} url The absolute URL that was resolved for this module\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @param {string} [parentURL] The absolute URL of the module importing this\x0d\n   *                             one\x2C unless this is the Node.js entry point\x0d\n   * @param {string} [format] The format hint possibly returned by the\x0d\n   *                          `resolve` hook\x0d\n   * @returns {Promise<ModuleJob>} The (possibly pending) module job\x0d\n   */\x0d\n  #createModuleJob(url\x2C importAttributes\x2C parentURL\x2C format\x2C sync) {\x0d\n    const callTranslator = ({ format: finalFormat\x2C responseURL\x2C source }\x2C isMain) => {\x0d\n      const translator = getTranslators().get(finalFormat);\x0d\n\x0d\n      if (!translator) {\x0d\n        throw new ERR_UNKNOWN_MODULE_FORMAT(finalFormat\x2C responseURL);\x0d\n      }\x0d\n\x0d\n      return FunctionPrototypeCall(translator\x2C this\x2C responseURL\x2C source\x2C isMain);\x0d\n    };\x0d\n    const context = { format\x2C importAttributes };\x0d\n\x0d\n    const moduleProvider = sync ?\x0d\n      (url\x2C isMain) => callTranslator(this.loadSync(url\x2C context)\x2C isMain) :\x0d\n      async (url\x2C isMain) => callTranslator(await this.load(url\x2C context)\x2C isMain);\x0d\n\x0d\n    const inspectBrk = (\x0d\n      parentURL === undefined &&\x0d\n      getOptionValue('--inspect-brk')\x0d\n    );\x0d\n\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:import': [url] });\x0d\n    }\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    const job = new ModuleJob(\x0d\n      this\x2C\x0d\n      url\x2C\x0d\n      importAttributes\x2C\x0d\n      moduleProvider\x2C\x0d\n      parentURL === undefined\x2C\x0d\n      inspectBrk\x2C\x0d\n      sync\x2C\x0d\n    );\x0d\n\x0d\n    this.loadCache.set(url\x2C importAttributes.type\x2C job);\x0d\n\x0d\n    return job;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * This method is usually called indirectly as part of the loading processes.\x0d\n   * Use directly with caution.\x0d\n   * @param {string} specifier The first parameter of an `import()` expression.\x0d\n   * @param {string} parentURL Path of the parent importing the module.\x0d\n   * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n   *                                                  module import.\x0d\n   * @returns {Promise<ModuleExports>}\x0d\n   */\x0d\n  async import(specifier\x2C parentURL\x2C importAttributes) {\x0d\n    const moduleJob = await this.getModuleJob(specifier\x2C parentURL\x2C importAttributes);\x0d\n    const { module } = await moduleJob.run();\x0d\n    return module.getNamespace();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @see {@link CustomizedModuleLoader.register}\x0d\n   */\x0d\n  register(specifier\x2C parentURL\x2C data\x2C transferList) {\x0d\n    if (!this.#customizations) {\x0d\n      // `CustomizedModuleLoader` is defined at the bottom of this file and\x0d\n      // available well before this line is ever invoked. This is here in\x0d\n      // order to preserve the git diff instead of moving the class.\x0d\n      // eslint-disable-next-line no-use-before-define\x0d\n      this.setCustomizations(new CustomizedModuleLoader());\x0d\n    }\x0d\n    return this.#customizations.register(`${specifier}`\x2C `${parentURL}`\x2C data\x2C transferList);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAttributes} importAttributes Attributes from the import\x0d\n   *                                            statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.resolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    }\x0d\n    const requestKey = this.#resolveCache.serializeKey(originalSpecifier\x2C importAttributes);\x0d\n    const cachedResult = this.#resolveCache.get(requestKey\x2C parentURL);\x0d\n    if (cachedResult != null) {\x0d\n      return cachedResult;\x0d\n    }\x0d\n    const result = this.defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    this.#resolveCache.set(requestKey\x2C parentURL\x2C result);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Just like `resolve` except synchronous. This is here specifically to support\x0d\n   * `import.meta.resolve` which must happen synchronously.\x0d\n   */\x0d\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n    }\x0d\n    return this.defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Our `defaultResolve` is synchronous and can be used in both\x0d\n   * `resolve` and `resolveSync`. This function is here just to avoid\x0d\n   * repeating the same code block twice in those functions.\x0d\n   */\x0d\n  defaultResolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    defaultResolve ??= require('internal/modules/esm/resolve').defaultResolve;\x0d\n\x0d\n    const context = {\x0d\n      __proto__: null\x2C\x0d\n      conditions: this.#defaultConditions\x2C\x0d\n      importAttributes\x2C\x0d\n      parentURL\x2C\x0d\n    };\x0d\n\x0d\n    return defaultResolve(originalSpecifier\x2C context);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  async load(url\x2C context) {\x0d\n    defaultLoad ??= require('internal/modules/esm/load').defaultLoad;\x0d\n    const result = this.#customizations ?\x0d\n      await this.#customizations.load(url\x2C context) :\x0d\n      await defaultLoad(url\x2C context);\x0d\n    this.validateLoadResult(url\x2C result?.format);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  loadSync(url\x2C context) {\x0d\n    defaultLoadSync ??= require('internal/modules/esm/load').defaultLoadSync;\x0d\n\x0d\n    let result = this.#customizations ?\x0d\n      this.#customizations.loadSync(url\x2C context) :\x0d\n      defaultLoadSync(url\x2C context);\x0d\n    let format = result?.format;\x0d\n    if (format === 'module') {\x0d\n      throw new ERR_REQUIRE_ESM(url\x2C true);\x0d\n    }\x0d\n    if (format === 'commonjs') {\x0d\n      format = 'require-commonjs';\x0d\n      result = { __proto__: result\x2C format };\x0d\n    }\x0d\n    this.validateLoadResult(url\x2C format);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  validateLoadResult(url\x2C format) {\x0d\n    if (format == null) {\x0d\n      require('internal/modules/esm/load').throwUnknownModuleFormat(url\x2C format);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context) {\x0d\n    if (this.#customizations) {\x0d\n      return this.#customizations.importMetaInitialize(meta\x2C context\x2C this);\x0d\n    }\x0d\n    importMetaInitializer ??= require('internal/modules/esm/initialize_import_meta').initializeImportMeta;\x0d\n    meta = importMetaInitializer(meta\x2C context\x2C this);\x0d\n    return meta;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * No-op when no hooks have been supplied.\x0d\n   */\x0d\n  forceLoadHooks() {\x0d\n    this.#customizations?.forceLoadHooks();\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleLoader.prototype\x2C null);\x0d\n\x0d\nclass CustomizedModuleLoader {\x0d\n\x0d\n  allowImportMetaResolve = true;\x0d\n\x0d\n  /**\x0d\n   * Instantiate a module loader that uses user-provided custom loader hooks.\x0d\n   */\x0d\n  constructor() {\x0d\n    getHooksProxy();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Register some loader specifier.\x0d\n   * @param {string} originalSpecifier The specified URL path of the loader to\x0d\n   *                                   be registered.\x0d\n   * @param {string} parentURL The parent URL from where the loader will be\x0d\n   *                           registered if using it package name as specifier\x0d\n   * @param {any} [data] Arbitrary data to be passed from the custom loader\x0d\n   * (user-land) to the worker.\x0d\n   * @param {any[]} [transferList] Objects in `data` that are changing ownership\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  register(originalSpecifier\x2C parentURL\x2C data\x2C transferList) {\x0d\n    return hooksProxy.makeSyncRequest('register'\x2C transferList\x2C originalSpecifier\x2C parentURL\x2C data);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resolve the location of the module.\x0d\n   * @param {string} originalSpecifier The specified URL path of the module to\x0d\n   *                                   be resolved.\x0d\n   * @param {string} [parentURL] The URL path of the module's parent.\x0d\n   * @param {ImportAttributes} importAttributes Attributes from the import\x0d\n   *                                            statement or expression.\x0d\n   * @returns {{ format: string\x2C url: URL['href'] }}\x0d\n   */\x0d\n  resolve(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    return hooksProxy.makeAsyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  resolveSync(originalSpecifier\x2C parentURL\x2C importAttributes) {\x0d\n    // This happens only as a result of `import.meta.resolve` calls\x2C which must be sync per spec.\x0d\n    return hooksProxy.makeSyncRequest('resolve'\x2C undefined\x2C originalSpecifier\x2C parentURL\x2C importAttributes);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Provide source that is understood by one of Node's translators.\x0d\n   * @param {URL['href']} url The URL/path of the module to be loaded\x0d\n   * @param {object} [context] Metadata about the module\x0d\n   * @returns {Promise<{ format: ModuleFormat\x2C source: ModuleSource }>}\x0d\n   */\x0d\n  load(url\x2C context) {\x0d\n    return hooksProxy.makeAsyncRequest('load'\x2C undefined\x2C url\x2C context);\x0d\n  }\x0d\n  loadSync(url\x2C context) {\x0d\n    return hooksProxy.makeSyncRequest('load'\x2C undefined\x2C url\x2C context);\x0d\n  }\x0d\n\x0d\n  importMetaInitialize(meta\x2C context\x2C loader) {\x0d\n    hooksProxy.importMetaInitialize(meta\x2C context\x2C loader);\x0d\n  }\x0d\n\x0d\n  forceLoadHooks() {\x0d\n    hooksProxy.waitForWorker();\x0d\n  }\x0d\n}\x0d\n\x0d\nlet emittedLoaderFlagWarning = false;\x0d\n/**\x0d\n * A loader instance is used as the main entry point for loading ES modules. Currently\x2C this is a singleton; there is\x0d\n * only one used for loading the main module and everything in its dependency graph\x2C though separate instances of this\x0d\n * class might be instantiated as part of bootstrap for other purposes.\x0d\n * @returns {ModuleLoader}\x0d\n */\x0d\nfunction createModuleLoader() {\x0d\n  let customizations = null;\x0d\n  // Don't spawn a new worker if custom loaders are disabled. For instance\x2C if\x0d\n  // we're already in a worker thread created by instantiating\x0d\n  // CustomizedModuleLoader; doing so would cause an infinite loop.\x0d\n  if (!require('internal/modules/esm/utils').forceDefaultLoader()) {\x0d\n    const userLoaderPaths = getOptionValue('--experimental-loader');\x0d\n    if (userLoaderPaths.length > 0) {\x0d\n      if (!emittedLoaderFlagWarning) {\x0d\n        const readableURIEncode = (string) => ArrayPrototypeReduce(\x0d\n          [\x0d\n            [/'/g\x2C '%27']\x2C // We need to URL-encode the single quote as it's the delimiter for the --import flag.\x0d\n            [/%22/g\x2C '"']\x2C // We can decode the double quotes to improve readability.\x0d\n            [/%2F/ig\x2C '/']\x2C // We can decode the slashes to improve readability.\x0d\n          ]\x2C\x0d\n          (str\x2C { 0: regex\x2C 1: replacement }) => RegExpPrototypeSymbolReplace(hardenRegExp(regex)\x2C str\x2C replacement)\x2C\x0d\n          encodeURIComponent(string));\x0d\n        process.emitWarning(\x0d\n          '`--experimental-loader` may be removed in the future; instead use `register()`:\\n' +\x0d\n          `--import 'data:text/javascript\x2Cimport { register } from "node:module"; import { pathToFileURL } from "node:url"; ${ArrayPrototypeJoin(\x0d\n            ArrayPrototypeMap(userLoaderPaths\x2C (loader) => `register(${readableURIEncode(JSONStringify(loader))}\x2C pathToFileURL("./"))`)\x2C\x0d\n            '; '\x2C\x0d\n          )};'`\x2C\x0d\n          'ExperimentalWarning'\x2C\x0d\n        );\x0d\n        emittedLoaderFlagWarning = true;\x0d\n      }\x0d\n      customizations = new CustomizedModuleLoader();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new ModuleLoader(customizations);\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Get the HooksProxy instance. If it is not defined\x2C then create a new one.\x0d\n * @returns {HooksProxy}\x0d\n */\x0d\nfunction getHooksProxy() {\x0d\n  if (!hooksProxy) {\x0d\n    const { HooksProxy } = require('internal/modules/esm/hooks');\x0d\n    hooksProxy = new HooksProxy();\x0d\n  }\x0d\n\x0d\n  return hooksProxy;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Register a single loader programmatically.\x0d\n * @param {string|import('url').URL} specifier\x0d\n * @param {string|import('url').URL} [parentURL] Base to use when resolving `specifier`; optional if\x0d\n * `specifier` is absolute. Same as `options.parentUrl`\x2C just inline\x0d\n * @param {object} [options] Additional options to apply\x2C described below.\x0d\n * @param {string|import('url').URL} [options.parentURL] Base to use when resolving `specifier`\x0d\n * @param {any} [options.data] Arbitrary data passed to the loader's `initialize` hook\x0d\n * @param {any[]} [options.transferList] Objects in `data` that are changing ownership\x0d\n * @returns {void} We want to reserve the return value for potential future extension of the API.\x0d\n * @example\x0d\n * ```js\x0d\n * register('./myLoader.js');\x0d\n * register('ts-node/esm'\x2C { parentURL: import.meta.url });\x0d\n * register('./myLoader.js'\x2C { parentURL: import.meta.url });\x0d\n * register('ts-node/esm'\x2C import.meta.url);\x0d\n * register('./myLoader.js'\x2C import.meta.url);\x0d\n * register(new URL('./myLoader.js'\x2C import.meta.url));\x0d\n * register('./myLoader.js'\x2C {\x0d\n *   parentURL: import.meta.url\x2C\x0d\n *   data: { banana: 'tasty' }\x2C\x0d\n * });\x0d\n * register('./myLoader.js'\x2C {\x0d\n *   parentURL: import.meta.url\x2C\x0d\n *   data: someArrayBuffer\x2C\x0d\n *   transferList: [someArrayBuffer]\x2C\x0d\n * });\x0d\n * ```\x0d\n */\x0d\nfunction register(specifier\x2C parentURL = undefined\x2C options) {\x0d\n  const moduleLoader = require('internal/process/esm_loader').esmLoader;\x0d\n  if (parentURL != null && typeof parentURL === 'object' && !isURL(parentURL)) {\x0d\n    options = parentURL;\x0d\n    parentURL = options.parentURL;\x0d\n  }\x0d\n  moduleLoader.register(\x0d\n    specifier\x2C\x0d\n    parentURL ?? 'data:'\x2C\x0d\n    options?.data\x2C\x0d\n    options?.transferList\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createModuleLoader\x2C\x0d\n  getHooksProxy\x2C\x0d\n  register\x2C\x0d\n};\x0d\n
code-source-info,0x8c1d16cafe,83,0,22408,C0O0C4O22408,,
code-creation,JS,10,175776,0x8c1d16dc96,588, node:internal/modules/esm/loader:1:1,0x8c1d16ca78,~
code-source-info,0x8c1d16dc96,83,0,22408,C0O0C120O82C126O82C130O136C136O159C142O181C148O206C154O232C160O250C165O275C171O308C177O331C183O429C189O429C194O455C199O377C205O397C211O491C217O491C222O472C228O554C234O554C239O529C245O544C251O616C257O616C262O588C268O681C274O681C279O654C285O725C286O725C288O741C289O741C291O754C292O754C294O771C295O771C297O1923C298O1923C472O2370C474O15581C477O15615C484O15581C552O15636C554O18245C555O18245C557O22330C564O22352C570O22375C576O22393C582O22345C587O22407,,
code-creation,JS,10,175848,0x8c1d16e00e,7,<instance_members_initializer> node:internal/modules/esm/loader:450:1,0x8c1d16d518,~
code-source-info,0x8c1d16e00e,83,15636,18210,C0O15697C6O18210,,
code-creation,JS,10,175871,0x8c1d16e0be,79,<instance_members_initializer> node:internal/modules/esm/loader:82:1,0x8c1d16d260,~
code-source-info,0x8c1d16e0be,83,2370,15579,C3O2504C10O2504C18O2632C26O2708C31O2708C39O2816C44O2816C51O2943C56O2943C64O3178C72O3568C78O15579,,
code-creation,JS,10,176157,0x8c1d170026,400,pathToFileURL node:internal/url:1499:23,0x3fcdefa35a8,~
code-source-info,0x8c1d170026,32,45653,47654,C0O45669C8O45686C14O45686C21O45753C31O45753C37O45852C51O45852C57O45900C59O45921C64O45938C80O45944C85O45938C86O46067C88O46088C93O46104C109O46110C114O46104C115O46245C129O46245C135O46303C138O46321C142O46319C146O46351C151O46393C156O46422C161O46438C164O46438C173O46393C179O46369C183O46367C187O46500C189O46514C190O46538C195O46543C200O46543C206O46654C211O46749C215O46756C219O46654C225O46765C227O46787C229O46783C236O46818C242O46848C244O46844C249O46898C253O46905C256O46888C262O46914C265O46919C269O46910C274O46929C283O47023C286O47034C291O47356C299O47360C307O47398C312O47411C319O47451C328O47422C334O47487C342O47491C350O47529C355O47542C362O47582C371O47553C377O47614C387O47639C394O47621C399O47651,,
code-creation,JS,10,176325,0x8c1d1703e6,229,encodePathChars node:internal/url:1484:25,0x3fcdefa3558,~
code-source-info,0x8c1d1703e6,32,44862,45627,C0O44878C8O44882C16O44920C21O44933C28O44973C37O44944C44O45065C52O45083C58O45083C66O45122C71O45135C78O45175C87O45146C94O45212C102O45216C110O45255C115O45268C122O45308C131O45279C138O45343C146O45347C154O45386C159O45399C166O45439C175O45410C182O45481C190O45485C198O45524C203O45537C210O45577C219O45548C226O45608C228O45624,,
code-creation,JS,10,176431,0x8c1d170626,117,URL node:internal/url:784:14,0x3fcdefa21a0,~
code-source-info,0x8c1d170626,32,23269,23587,C0O23269C39O23316C45O23323C50O23339C62O23345C67O23339C68O23439C72O23466C76O23499C80O23531C82O23536C92O23551C95O23562C100O23562C110O23550C116O23586,,
code-creation,JS,10,176496,0x8c1d17082e,16,URLContext node:internal/url:162:1,0x3fcdefa14a8,~
code-source-info,0x8c1d17082e,32,3639,3639,C0O3639C15O3639,,
code-creation,JS,10,176662,0x8c1d170dfe,325,#updateContext node:internal/url:853:17,0x3fcdefa2330,~
code-source-info,0x8c1d170dfe
code-creation,JS,10,176809,0x8c1d171376,24,get href node:internal/url:904:11,0x3fcdefa23d0,~
code-source-info,0x8c1d171376,32,27408,27589,C0O27518C2O27523C8O27549C13O27558C15O27570C19O27579C23O27584,,
code-creation,JS,10,176873,0x8c1d17148e,88,#ensureSearchParamsUpdated node:internal/url:839:29,0x3fcdefa22e0,~
code-source-info,0x8c1d17148e,32,24836,25256,C0O25049C2O25058C7O25090C11O25117C15O25133C17O25138C27O25153C30O25164C37O25176C41O25185C50O25191C53O25205C60O25219C66O25239C72O25164C81O25152C87O25255,,
code-creation,JS,10,176990,0x8c1d17170e,338,loadESM node:internal/process/esm_loader:16:16,0x8c1d16b8f0,~
code-source-info,0x8c1d17170e,82,432,1138,C10O432C18O450C28O464C31O464C37O460C46O524C54O524C59O575C65O582C70O616C75O616C79O627C84O656C86O675C90O661C95O701C100O717C107O735C113O751C119O723C132O701C155O684C160O643C166O802C171O812C176O812C180O846C182O861C185O852C197O846C235O901C242O905C247O955C252O963C260O963C265O994C274O1001C275O1018C283O1018C288O1043C298O1044C315O1137,,
code-creation,JS,10,177169,0x8c1d171dc6,179,createModuleLoader node:internal/modules/esm/loader:523:28,0x8c1d16cc20,~
code-source-info,0x8c1d171dc6,83,18630,20297,C0O18659C2O18881C8O18886C13O18923C18O18924C24O18977C32O18977C37O19043C43O19050C48O19064C61O19132C65O19132C67O19645C72O19653C87O19890C94O19923C97O19941C102O19923C111O19890C126O19761C133O19653C139O20141C145O20166C155O20190C160O20207C166O20254C173O20261C178O20294,,
code-creation,JS,10,177243,0x8c1d17335e,5,forceDefaultLoader node:internal/modules/esm/utils:255:28,0x3fcdefbe930,~
code-source-info,0x8c1d17335e,66,9378,9416,C0O9386C4O9413,,
code-creation,JS,10,177296,0x8c1d173496,66,ModuleLoader node:internal/modules/esm/loader:126:14,0x8c1d16cd60,~
code-source-info,0x8c1d173496,83,3601,3788,C5O3601C24O3625C34O3629C40O3688C50O3688C54O3749C59O3749C65O3787,,
code-creation,JS,10,177360,0x8c1d17369e,21,getDefaultConditions node:internal/modules/esm/utils:50:30,0x3fcdefbe3c8,~
code-source-info,0x8c1d17369e,66,1199,1279,C0O1207C7O1214C10O1232C12O1207C16O1251C20O1276,,
code-creation,JS,10,177423,0x8c1d1738d6,22,newResolveCache node:internal/modules/esm/loader:34:25,0x8c1d16cb30,~
code-source-info,0x8c1d1738d6,83,968,1077,C0O1001C6O1001C11O984C16O1055C21O1074,,
code-creation,Eval,10,177611,0x8c1d173e26,5, node:internal/modules/esm/module_map:1:1,0x8c1d173b70,~
script-source,84,node:internal/modules/esm/module_map,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\nconst { kImplicitAssertType } = require('internal/modules/esm/assert');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { ERR_INVALID_ARG_TYPE } = require('internal/errors').codes;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\n/**\x0d\n * Cache the results of the `resolve` step of the module resolution and loading process.\x0d\n * Future resolutions of the same input (specifier\x2C parent URL and import attributes)\x0d\n * must return the same result if the first attempt was successful\x2C per\x0d\n * https://tc39.es/ecma262/#sec-HostLoadImportedModule.\x0d\n * This cache is *not* used when custom loaders are registered.\x0d\n */\x0d\nclass ResolveCache extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n\x0d\n  /**\x0d\n   * Generates the internal serialized cache key and returns it along the actual cache object.\x0d\n   *\x0d\n   * It is exposed to allow more efficient read and overwrite a cache entry.\x0d\n   * @param {string} specifier\x0d\n   * @param {Record<string\x2Cstring>} importAttributes\x0d\n   * @returns {string}\x0d\n   */\x0d\n  serializeKey(specifier\x2C importAttributes) {\x0d\n    // To serialize the ModuleRequest (specifier + list of import attributes)\x2C\x0d\n    // we need to sort the attributes by key\x2C then stringifying\x2C\x0d\n    // so that different import statements with the same attributes are always treated\x0d\n    // as identical.\x0d\n    const keys = ObjectKeys(importAttributes);\x0d\n\x0d\n    if (keys.length === 0) {\x0d\n      return specifier + '::';\x0d\n    }\x0d\n\x0d\n    return specifier + '::' + ArrayPrototypeJoin(\x0d\n      ArrayPrototypeMap(\x0d\n        ArrayPrototypeSort(keys)\x2C\x0d\n        (key) => JSONStringify(key) + JSONStringify(importAttributes[key]))\x2C\x0d\n      '\x2C');\x0d\n  }\x0d\n\x0d\n  #getModuleCachedImports(parentURL) {\x0d\n    let internalCache = super.get(parentURL);\x0d\n    if (internalCache == null) {\x0d\n      super.set(parentURL\x2C internalCache = { __proto__: null });\x0d\n    }\x0d\n    return internalCache;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} serializedKey\x0d\n   * @param {string} parentURL\x0d\n   * @returns {import('./loader').ModuleExports | Promise<import('./loader').ModuleExports>}\x0d\n   */\x0d\n  get(serializedKey\x2C parentURL) {\x0d\n    return this.#getModuleCachedImports(parentURL)[serializedKey];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} serializedKey\x0d\n   * @param {string} parentURL\x0d\n   * @param {{ format: string\x2C url: URL['href'] }} result\x0d\n   */\x0d\n  set(serializedKey\x2C parentURL\x2C result) {\x0d\n    this.#getModuleCachedImports(parentURL)[serializedKey] = result;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  has(serializedKey\x2C parentURL) {\x0d\n    return serializedKey in this.#getModuleCachedImports(parentURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Cache the results of the `load` step of the module resolution and loading process.\x0d\n */\x0d\nclass LoadCache extends SafeMap {\x0d\n  constructor(i) { super(i); } // eslint-disable-line no-useless-constructor\x0d\n  get(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type];\x0d\n  }\x0d\n  set(url\x2C type = kImplicitAssertType\x2C job) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n\x0d\n    const ModuleJob = require('internal/modules/esm/module_job');\x0d\n    if (job instanceof ModuleJob !== true &&\x0d\n        typeof job !== 'function') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('job'\x2C 'ModuleJob'\x2C job);\x0d\n    }\x0d\n    debug(`Storing ${url} (${\x0d\n      type === kImplicitAssertType ? 'implicit type' : type\x0d\n    }) in ModuleLoadMap`);\x0d\n    const cachedJobsForUrl = super.get(url) ?? { __proto__: null };\x0d\n    cachedJobsForUrl[type] = job;\x0d\n    return super.set(url\x2C cachedJobsForUrl);\x0d\n  }\x0d\n  has(url\x2C type = kImplicitAssertType) {\x0d\n    validateString(url\x2C 'url');\x0d\n    validateString(type\x2C 'type');\x0d\n    return super.get(url)?.[type] !== undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  LoadCache\x2C\x0d\n  ResolveCache\x2C\x0d\n};\x0d\n
code-source-info,0x8c1d173e26,84,0,3999,C0O0C4O3999,,
code-creation,JS,10,177858,0x8c1d17467e,299, node:internal/modules/esm/module_map:1:1,0x8c1d173da0,~
code-source-info,0x8c1d17467e,84,0,3999,C0O0C36O28C42O51C48O73C54O96C60O114C66O129C71O189C77O189C82O165C88O242C94O242C99O275C112O276C118O242C120O356C126O356C131O382C136O331C142O418C148O418C153O399C179O862C227O835C231O2920C274O3944C281O3966C287O3980C293O3959C298O3998,,
code-creation,Eval,10,178089,0x8c1d17516e,5, node:internal/modules/esm/assert:1:1,0x8c1d174f68,~
script-source,85,node:internal/modules/esm/assert,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectValues\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n} = primordials;\x0d\nconst { validateString } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  ERR_IMPORT_ASSERTION_TYPE_FAILED\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_MISSING\x2C\x0d\n  ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED\x2C\x0d\n  ERR_IMPORT_ATTRIBUTE_UNSUPPORTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\n// The HTML spec has an implied default type of `'javascript'`.\x0d\nconst kImplicitAssertType = 'javascript';\x0d\n\x0d\n/**\x0d\n * Define a map of module formats to import attributes types (the value of\x0d\n * `type` in `with { type: 'json' }`).\x0d\n * @type {Map<string\x2C string>}\x0d\n */\x0d\nconst formatTypeMap = {\x0d\n  '__proto__': null\x2C\x0d\n  'builtin': kImplicitAssertType\x2C\x0d\n  'commonjs': kImplicitAssertType\x2C\x0d\n  'json': 'json'\x2C\x0d\n  'module': kImplicitAssertType\x2C\x0d\n  'wasm': kImplicitAssertType\x2C // It's unclear whether the HTML spec will require an attribute type or not for Wasm; see https://github.com/WebAssembly/esm-integration/issues/42\x0d\n};\x0d\n\x0d\n/**\x0d\n * The HTML spec disallows the default type to be explicitly specified\x0d\n * (for now); so `import './file.js'` is okay but\x0d\n * `import './file.js' with { type: 'javascript' }` throws.\x0d\n * @type {Array<string\x2C string>}\x0d\n */\x0d\nconst supportedAssertionTypes = ArrayPrototypeFilter(\x0d\n  ObjectValues(formatTypeMap)\x2C\x0d\n  (type) => type !== kImplicitAssertType);\x0d\n\x0d\n\x0d\n/**\x0d\n * Test a module's import attributes.\x0d\n * @param {string} url The URL of the imported module\x2C for error reporting.\x0d\n * @param {string} format One of Node's supported translators\x0d\n * @param {Record<string\x2C string>} importAttributes Validations for the\x0d\n *                                                  module import.\x0d\n * @returns {true}\x0d\n * @throws {TypeError} If the format and assertion type are incompatible.\x0d\n */\x0d\nfunction validateAttributes(url\x2C format\x2C\x0d\n                            importAttributes = { __proto__: null }) {\x0d\n  const keys = ObjectKeys(importAttributes);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    if (keys[i] !== 'type') {\x0d\n      throw new ERR_IMPORT_ATTRIBUTE_UNSUPPORTED(keys[i]\x2C importAttributes[keys[i]]);\x0d\n    }\x0d\n  }\x0d\n  const validType = formatTypeMap[format];\x0d\n\x0d\n  switch (validType) {\x0d\n    case undefined:\x0d\n      // Ignore attributes for module formats we don't recognize\x2C to allow new\x0d\n      // formats in the future.\x0d\n      return true;\x0d\n\x0d\n    case kImplicitAssertType:\x0d\n      // This format doesn't allow an import assertion type\x2C so the property\x0d\n      // must not be set on the import attributes object.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\x0d\n        return true;\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAttributes.type);\x0d\n\x0d\n    case importAttributes.type:\x0d\n      // The asserted type is the valid type for this format.\x0d\n      return true;\x0d\n\x0d\n    default:\x0d\n      // There is an expected type for this format\x2C but the value of\x0d\n      // `importAttributes.type` might not have been it.\x0d\n      if (!ObjectPrototypeHasOwnProperty(importAttributes\x2C 'type')) {\x0d\n        // `type` wasn't specified at all.\x0d\n        throw new ERR_IMPORT_ASSERTION_TYPE_MISSING(url\x2C validType);\x0d\n      }\x0d\n      return handleInvalidType(url\x2C importAttributes.type);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw the correct error depending on what's wrong with the type assertion.\x0d\n * @param {string} url The resolved URL for the module to be imported\x0d\n * @param {string} type The value of the import assertion `type` property\x0d\n */\x0d\nfunction handleInvalidType(url\x2C type) {\x0d\n  // `type` might have not been a string.\x0d\n  validateString(type\x2C 'type');\x0d\n\x0d\n  // `type` might not have been one of the types we understand.\x0d\n  if (!ArrayPrototypeIncludes(supportedAssertionTypes\x2C type)) {\x0d\n    throw new ERR_IMPORT_ASSERTION_TYPE_UNSUPPORTED(type);\x0d\n  }\x0d\n\x0d\n  // `type` was the wrong value for this format.\x0d\n  throw new ERR_IMPORT_ASSERTION_TYPE_FAILED(url\x2C type);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  kImplicitAssertType\x2C\x0d\n  validateAttributes\x2C\x0d\n};\x0d\n
code-source-info,0x8c1d17516e,85,0,3993,C0O0C4O3993,,
code-creation,JS,10,178336,0x8c1d17544e,210, node:internal/modules/esm/assert:1:1,0x8c1d1750e8,~
code-source-info,0x8c1d17544e,85,0,3993,C0O0C49O28C54O53C60O80C66O95C71O112C77O189C80O189C85O170C91O391C94O391C99O417C104O235C110O272C116O310C122O352C128O521C130O521C132O718C139O756C145O792C151O845C157O877C163O718C165O1312C168O1337C178O1312C183O1312C185O3922C192O3944C198O3968C204O3937C209O3992,,
code-creation,JS,10,178473,0x8c1d175a9e,9, node:internal/modules/esm/assert:44:3,0x8c1d175240,~
code-source-info,0x8c1d175a9e,85,1369,1407,C0O1384C2O1388C4O1384C8O1407,,
code-creation,JS,10,178575,0x8c1d1764e6,53,ResolveCache node:internal/modules/esm/module_map:26:14,0x8c1d173ef8,~
code-source-info,0x8c1d1764e6,84,886,903,C3O892C27O892C52O902,,
code-creation,JS,10,178640,0x8c1d176b06,22,newLoadCache node:internal/modules/esm/loader:43:22,0x8c1d16cb80,~
code-source-info,0x8c1d176b06,83,1260,1363,C0O1290C6O1290C11O1276C16O1344C21O1360,,
code-creation,JS,10,178691,0x8c1d176bde,43,LoadCache node:internal/modules/esm/module_map:90:14,0x8c1d174088,~
code-source-info,0x8c1d176bde,84,2944,2961,C3O2950C27O2950C42O2960,,
code-creation,JS,10,178747,0x8c1d176df6,17,getTranslators node:internal/modules/esm/loader:52:24,0x8c1d16cbd0,~
code-source-info,0x8c1d176df6,83,1554,1656,C0O1586C6O1586C11O1570C16O1653,,
code-creation,Eval,10,179269,0x8c1d177aa6,5, node:internal/modules/esm/translators:1:1,0x8c1d177590,~
script-source,86,node:internal/modules/esm/translators,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeMap\x2C\x0d\n  Boolean\x2C\x0d\n  JSONParse\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SyntaxErrorPrototype\x2C\x0d\n  globalThis: { WebAssembly }\x2C\x0d\n} = primordials;\x0d\n\x0d\n/** @type {import('internal/util/types')} */\x0d\nlet _TYPES = null;\x0d\n/**\x0d\n * Lazily loads and returns the internal/util/types module.\x0d\n */\x0d\nfunction lazyTypes() {\x0d\n  if (_TYPES !== null) { return _TYPES; }\x0d\n  return _TYPES = require('internal/util/types');\x0d\n}\x0d\n\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst assert = require('internal/assert');\x0d\nconst { readFileSync } = require('fs');\x0d\nconst { dirname\x2C extname\x2C isAbsolute } = require('path');\x0d\nconst {\x0d\n  loadBuiltinModule\x2C\x0d\n  stripBOM\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst {\x0d\n  Module: CJSModule\x2C\x0d\n  cjsParseCache\x2C\x0d\n  cjsExportsCache\x2C\x0d\n} = require('internal/modules/cjs/loader');\x0d\nconst { fileURLToPath\x2C pathToFileURL\x2C URL } = require('internal/url');\x0d\nlet debug = require('internal/util/debuglog').debuglog('esm'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst { emitExperimentalWarning\x2C kEmptyObject\x2C setOwnProperty } = require('internal/util');\x0d\nconst {\x0d\n  ERR_UNKNOWN_BUILTIN_MODULE\x2C\x0d\n  ERR_INVALID_RETURN_PROPERTY_VALUE\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst { maybeCacheSourceMap } = require('internal/source_map/source_map_cache');\x0d\nconst moduleWrap = internalBinding('module_wrap');\x0d\nconst { ModuleWrap } = moduleWrap;\x0d\nconst asyncESM = require('internal/process/esm_loader');\x0d\nconst { emitWarningSync } = require('internal/process/warning');\x0d\nconst { internalCompileFunction } = require('internal/vm');\x0d\nconst {\x0d\n  vm_dynamic_import_default_internal\x2C\x0d\n} = internalBinding('symbols');\x0d\n// Lazy-loading to avoid circular dependencies.\x0d\nlet getSourceSync;\x0d\n/**\x0d\n * @param {Parameters<typeof import('./load').getSourceSync>[0]} url\x0d\n * @returns {ReturnType<typeof import('./load').getSourceSync>}\x0d\n */\x0d\nfunction getSource(url) {\x0d\n  getSourceSync ??= require('internal/modules/esm/load').getSourceSync;\x0d\n  return getSourceSync(url);\x0d\n}\x0d\n\x0d\n/** @type {import('deps/cjs-module-lexer/lexer.js').parse} */\x0d\nlet cjsParse;\x0d\n/**\x0d\n * Initializes the CommonJS module lexer parser.\x0d\n * If WebAssembly is available\x2C it uses the optimized version from the dist folder.\x0d\n * Otherwise\x2C it falls back to the JavaScript version from the lexer folder.\x0d\n */\x0d\nasync function initCJSParse() {\x0d\n  if (typeof WebAssembly === 'undefined') {\x0d\n    cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n  } else {\x0d\n    const { parse\x2C init } =\x0d\n        require('internal/deps/cjs-module-lexer/dist/lexer');\x0d\n    try {\x0d\n      await init();\x0d\n      cjsParse = parse;\x0d\n    } catch {\x0d\n      cjsParse = require('internal/deps/cjs-module-lexer/lexer').parse;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst translators = new SafeMap();\x0d\nexports.translators = translators;\x0d\nexports.enrichCJSError = enrichCJSError;\x0d\n\x0d\nlet DECODER = null;\x0d\n/**\x0d\n * Asserts that the given body is a buffer source (either a string\x2C array buffer\x2C or typed array).\x0d\n * Throws an error if the body is not a buffer source.\x0d\n * @param {string | ArrayBufferView | ArrayBuffer} body - The body to check.\x0d\n * @param {boolean} allowString - Whether or not to allow a string as a valid buffer source.\x0d\n * @param {string} hookName - The name of the hook being called.\x0d\n * @throws {ERR_INVALID_RETURN_PROPERTY_VALUE} If the body is not a buffer source.\x0d\n */\x0d\nfunction assertBufferSource(body\x2C allowString\x2C hookName) {\x0d\n  if (allowString && typeof body === 'string') {\x0d\n    return;\x0d\n  }\x0d\n  const { isArrayBufferView\x2C isAnyArrayBuffer } = lazyTypes();\x0d\n  if (isArrayBufferView(body) || isAnyArrayBuffer(body)) {\x0d\n    return;\x0d\n  }\x0d\n  throw new ERR_INVALID_RETURN_PROPERTY_VALUE(\x0d\n    `${allowString ? 'string\x2C ' : ''}array buffer\x2C or typed array`\x2C\x0d\n    hookName\x2C\x0d\n    'source'\x2C\x0d\n    body\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Converts a buffer or buffer-like object to a string.\x0d\n * @param {string | ArrayBuffer | ArrayBufferView} body - The buffer or buffer-like object to convert to a string.\x0d\n * @returns {string} The resulting string.\x0d\n */\x0d\nfunction stringify(body) {\x0d\n  if (typeof body === 'string') { return body; }\x0d\n  assertBufferSource(body\x2C false\x2C 'load');\x0d\n  const { TextDecoder } = require('internal/encoding');\x0d\n  DECODER = DECODER === null ? new TextDecoder() : DECODER;\x0d\n  return DECODER.decode(body);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Converts a URL to a file path if the URL protocol is 'file:'.\x0d\n * @param {string} url - The URL to convert.\x0d\n */\x0d\nfunction errPath(url) {\x0d\n  const parsed = new URL(url);\x0d\n  if (parsed.protocol === 'file:') {\x0d\n    return fileURLToPath(parsed);\x0d\n  }\x0d\n  return url;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Dynamically imports a module using the ESM loader.\x0d\n * @param {string} specifier - The module specifier to import.\x0d\n * @param {object} options - An object containing options for the import.\x0d\n * @param {string} options.url - The URL of the module requesting the import.\x0d\n * @param {Record<string\x2C string>} [attributes] - An object containing attributes for the import.\x0d\n * @returns {Promise<import('internal/modules/esm/loader.js').ModuleExports>} The imported module.\x0d\n */\x0d\nasync function importModuleDynamically(specifier\x2C { url }\x2C attributes) {\x0d\n  return asyncESM.esmLoader.import(specifier\x2C url\x2C attributes);\x0d\n}\x0d\n\x0d\n// Strategy for loading a standard JavaScript module.\x0d\ntranslators.set('module'\x2C async function moduleStrategy(url\x2C source\x2C isMain) {\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  source = stringify(source);\x0d\n  debug(`Translating StandardModule ${url}`);\x0d\n  const module = new ModuleWrap(url\x2C undefined\x2C source\x2C 0\x2C 0);\x0d\n  // Cache the source map for the module if present.\x0d\n  if (module.sourceMapURL) {\x0d\n    maybeCacheSourceMap(url\x2C source\x2C null\x2C false\x2C undefined\x2C module.sourceMapURL);\x0d\n  }\x0d\n  const { registerModule } = require('internal/modules/esm/utils');\x0d\n  registerModule(module\x2C {\x0d\n    __proto__: null\x2C\x0d\n    initializeImportMeta: (meta\x2C wrap) => this.importMetaInitialize(meta\x2C { url })\x2C\x0d\n    importModuleDynamically\x2C\x0d\n  });\x0d\n  return module;\x0d\n});\x0d\n\x0d\n/**\x0d\n * Provide a more informative error for CommonJS imports.\x0d\n * @param {Error | any} err\x0d\n * @param {string} [content] Content of the file\x2C if known.\x0d\n * @param {string} [filename] The filename of the erroring module.\x0d\n */\x0d\nfunction enrichCJSError(err\x2C content\x2C filename) {\x0d\n  if (err != null && ObjectGetPrototypeOf(err) === SyntaxErrorPrototype &&\x0d\n      containsModuleSyntax(content\x2C filename)) {\x0d\n    // Emit the warning synchronously because we are in the middle of handling\x0d\n    // a SyntaxError that will throw and likely terminate the process before an\x0d\n    // asynchronous warning would be emitted.\x0d\n    emitWarningSync(\x0d\n      'To load an ES module\x2C set "type": "module" in the package.json or use ' +\x0d\n      'the .mjs extension.'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Loads a CommonJS module via the ESM Loader sync CommonJS translator.\x0d\n * This translator creates its own version of the `require` function passed into CommonJS modules.\x0d\n * Any monkey patches applied to the CommonJS Loader will not affect this module.\x0d\n * Any `require` calls in this module will load all children in the same way.\x0d\n * @param {import('internal/modules/cjs/loader').Module} module - The module to load.\x0d\n * @param {string} source - The source code of the module.\x0d\n * @param {string} url - The URL of the module.\x0d\n * @param {string} filename - The filename of the module.\x0d\n */\x0d\nfunction loadCJSModule(module\x2C source\x2C url\x2C filename) {\x0d\n  let compileResult;\x0d\n  const hostDefinedOptionId = vm_dynamic_import_default_internal;\x0d\n  const importModuleDynamically = vm_dynamic_import_default_internal;\x0d\n  try {\x0d\n    compileResult = internalCompileFunction(\x0d\n      source\x2C                         // code\x2C\x0d\n      filename\x2C                       // filename\x0d\n      0\x2C                              // lineOffset\x0d\n      0\x2C                              // columnOffset\x2C\x0d\n      undefined\x2C                      // cachedData\x0d\n      false\x2C                          // produceCachedData\x0d\n      undefined\x2C                      // parsingContext\x0d\n      undefined\x2C                      // contextExtensions\x0d\n      [                               // params\x0d\n        'exports'\x2C\x0d\n        'require'\x2C\x0d\n        'module'\x2C\x0d\n        '__filename'\x2C\x0d\n        '__dirname'\x2C\x0d\n      ]\x2C\x0d\n      hostDefinedOptionId\x2C           // hostDefinedOptionsId\x0d\n      importModuleDynamically\x2C       // importModuleDynamically\x0d\n    );\x0d\n  } catch (err) {\x0d\n    enrichCJSError(err\x2C source\x2C filename);\x0d\n    throw err;\x0d\n  }\x0d\n  // Cache the source map for the cjs module if present.\x0d\n  if (compileResult.sourceMapURL) {\x0d\n    maybeCacheSourceMap(url\x2C source\x2C null\x2C false\x2C undefined\x2C compileResult.sourceMapURL);\x0d\n  }\x0d\n\x0d\n  const compiledWrapper = compileResult.function;\x0d\n\x0d\n  const __dirname = dirname(filename);\x0d\n  // eslint-disable-next-line func-name-matching\x2Cfunc-style\x0d\n  const requireFn = function require(specifier) {\x0d\n    let importAttributes = kEmptyObject;\x0d\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:') && !BuiltinModule.normalizeRequirableId(specifier)) {\x0d\n      // TODO: do not depend on the monkey-patchable CJS loader here.\x0d\n      const path = CJSModule._resolveFilename(specifier\x2C module);\x0d\n      switch (extname(path)) {\x0d\n        case '.json':\x0d\n          importAttributes = { __proto__: null\x2C type: 'json' };\x0d\n          break;\x0d\n        case '.node':\x0d\n          return CJSModule._load(specifier\x2C module);\x0d\n        default:\x0d\n            // fall through\x0d\n      }\x0d\n      specifier = `${pathToFileURL(path)}`;\x0d\n    }\x0d\n    const job = asyncESM.esmLoader.getModuleJobSync(specifier\x2C url\x2C importAttributes);\x0d\n    job.runSync();\x0d\n    return cjsCache.get(job.url).exports;\x0d\n  };\x0d\n  setOwnProperty(requireFn\x2C 'resolve'\x2C function resolve(specifier) {\x0d\n    if (!StringPrototypeStartsWith(specifier\x2C 'node:')) {\x0d\n      const path = CJSModule._resolveFilename(specifier\x2C module);\x0d\n      if (specifier !== path) {\x0d\n        specifier = `${pathToFileURL(path)}`;\x0d\n      }\x0d\n    }\x0d\n    const { url: resolvedURL } = asyncESM.esmLoader.resolveSync(specifier\x2C url\x2C kEmptyObject);\x0d\n    return StringPrototypeStartsWith(resolvedURL\x2C 'file://') ? fileURLToPath(resolvedURL) : resolvedURL;\x0d\n  });\x0d\n  setOwnProperty(requireFn\x2C 'main'\x2C process.mainModule);\x0d\n\x0d\n  ReflectApply(compiledWrapper\x2C module.exports\x2C\x0d\n               [module.exports\x2C requireFn\x2C module\x2C filename\x2C __dirname]);\x0d\n  setOwnProperty(module\x2C 'loaded'\x2C true);\x0d\n}\x0d\n\x0d\n// TODO: can we use a weak map instead?\x0d\nconst cjsCache = new SafeMap();\x0d\n/**\x0d\n * Creates a ModuleWrap object for a CommonJS module.\x0d\n * @param {string} url - The URL of the module.\x0d\n * @param {string} source - The source code of the module.\x0d\n * @param {boolean} isMain - Whether the module is the main module.\x0d\n * @param {typeof loadCJSModule} [loadCJS=loadCJSModule] - The function to load the CommonJS module.\x0d\n * @returns {ModuleWrap} The ModuleWrap object for the CommonJS module.\x0d\n */\x0d\nfunction createCJSModuleWrap(url\x2C source\x2C isMain\x2C loadCJS = loadCJSModule) {\x0d\n  debug(`Translating CJSModule ${url}`);\x0d\n\x0d\n  const filename = StringPrototypeStartsWith(url\x2C 'file://') ? fileURLToPath(url) : url;\x0d\n  // In case the source was not provided by the `load` step\x2C we need fetch it now.\x0d\n  source = stringify(source ?? getSource(new URL(url)).source);\x0d\n\x0d\n  const { exportNames\x2C module } = cjsPreparseModuleExports(filename\x2C source);\x0d\n  cjsCache.set(url\x2C module);\x0d\n  const namesWithDefault = exportNames.has('default') ?\x0d\n    [...exportNames] : ['default'\x2C ...exportNames];\x0d\n\x0d\n  if (isMain) {\x0d\n    setOwnProperty(process\x2C 'mainModule'\x2C module);\x0d\n  }\x0d\n\x0d\n  return new ModuleWrap(url\x2C undefined\x2C namesWithDefault\x2C function() {\x0d\n    debug(`Loading CJSModule ${url}`);\x0d\n\x0d\n    if (!module.loaded) {\x0d\n      loadCJS(module\x2C source\x2C url\x2C filename);\x0d\n    }\x0d\n\x0d\n    let exports;\x0d\n    if (cjsExportsCache.has(module)) {\x0d\n      exports = cjsExportsCache.get(module);\x0d\n      cjsExportsCache.delete(module);\x0d\n    } else {\x0d\n      ({ exports } = module);\x0d\n    }\x0d\n    for (const exportName of exportNames) {\x0d\n      if (!ObjectPrototypeHasOwnProperty(exports\x2C exportName) ||\x0d\n          exportName === 'default') {\x0d\n        continue;\x0d\n      }\x0d\n      // We might trigger a getter -> dont fail.\x0d\n      let value;\x0d\n      try {\x0d\n        value = exports[exportName];\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n      this.setExport(exportName\x2C value);\x0d\n    }\x0d\n    this.setExport('default'\x2C exports);\x0d\n  });\x0d\n\x0d\n}\x0d\n\x0d\n// Handle CommonJS modules referenced by `require` calls.\x0d\n// This translator function must be sync\x2C as `require` is sync.\x0d\ntranslators.set('require-commonjs'\x2C (url\x2C source\x2C isMain) => {\x0d\n  assert(cjsParse);\x0d\n\x0d\n  return createCJSModuleWrap(url\x2C source);\x0d\n});\x0d\n\x0d\n// Handle CommonJS modules referenced by `import` statements or expressions\x2C\x0d\n// or as the initial entry point when the ESM loader handles a CommonJS entry.\x0d\ntranslators.set('commonjs'\x2C async function commonjsStrategy(url\x2C source\x2C\x0d\n                                                            isMain) {\x0d\n  if (!cjsParse) {\x0d\n    await initCJSParse();\x0d\n  }\x0d\n\x0d\n  // For backward-compatibility\x2C it's possible to return a nullish value for\x0d\n  // CJS source associated with a file: URL. In this case\x2C the source is\x0d\n  // obtained by calling the monkey-patchable CJS loader.\x0d\n  const cjsLoader = source == null ? (module\x2C source\x2C url\x2C filename) => {\x0d\n    try {\x0d\n      assert(module === CJSModule._cache[filename]);\x0d\n      CJSModule._load(filename);\x0d\n    } catch (err) {\x0d\n      enrichCJSError(err\x2C source\x2C filename);\x0d\n      throw err;\x0d\n    }\x0d\n  } : loadCJSModule;\x0d\n\x0d\n  try {\x0d\n    // We still need to read the FS to detect the exports.\x0d\n    source ??= readFileSync(new URL(url)\x2C 'utf8');\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  return createCJSModuleWrap(url\x2C source\x2C isMain\x2C cjsLoader);\x0d\n\x0d\n});\x0d\n\x0d\n/**\x0d\n * Pre-parses a CommonJS module's exports and re-exports.\x0d\n * @param {string} filename - The filename of the module.\x0d\n * @param {string} [source] - The source code of the module.\x0d\n */\x0d\nfunction cjsPreparseModuleExports(filename\x2C source) {\x0d\n  // TODO: Do we want to keep hitting the user mutable CJS loader here?\x0d\n  let module = CJSModule._cache[filename];\x0d\n  if (module) {\x0d\n    const cached = cjsParseCache.get(module);\x0d\n    if (cached) {\x0d\n      return { module\x2C exportNames: cached.exportNames };\x0d\n    }\x0d\n  }\x0d\n  const loaded = Boolean(module);\x0d\n  if (!loaded) {\x0d\n    module = new CJSModule(filename);\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    CJSModule._cache[filename] = module;\x0d\n  }\x0d\n\x0d\n  let exports\x2C reexports;\x0d\n  try {\x0d\n    ({ exports\x2C reexports } = cjsParse(source || ''));\x0d\n  } catch {\x0d\n    exports = [];\x0d\n    reexports = [];\x0d\n  }\x0d\n\x0d\n  const exportNames = new SafeSet(new SafeArrayIterator(exports));\x0d\n\x0d\n  // Set first for cycles.\x0d\n  cjsParseCache.set(module\x2C { source\x2C exportNames });\x0d\n\x0d\n  if (reexports.length) {\x0d\n    module.filename = filename;\x0d\n    module.paths = CJSModule._nodeModulePaths(module.path);\x0d\n    for (let i = 0; i < reexports.length; i++) {\x0d\n      const reexport = reexports[i];\x0d\n      let resolved;\x0d\n      try {\x0d\n        // TODO: this should be calling the `resolve` hook chain instead.\x0d\n        // Doing so would mean dropping support for CJS in the loader thread\x2C as\x0d\n        // this call needs to be sync from the perspective of the main thread\x2C\x0d\n        // which we can do via HooksProxy and Atomics\x2C but we can't do within\x0d\n        // the loaders thread. Until this is done\x2C the lexer will use the\x0d\n        // monkey-patchable CJS loader to get the path to the module file to\x0d\n        // load (which may or may not be aligned with the URL that the `resolve`\x0d\n        // hook have returned).\x0d\n        resolved = CJSModule._resolveFilename(reexport\x2C module);\x0d\n      } catch {\x0d\n        continue;\x0d\n      }\x0d\n      // TODO: this should be calling the `load` hook chain and check if it returns\x0d\n      // `format: 'commonjs'` instead of relying on file extensions.\x0d\n      const ext = extname(resolved);\x0d\n      if ((ext === '.js' || ext === '.cjs' || !CJSModule._extensions[ext]) &&\x0d\n      isAbsolute(resolved)) {\x0d\n        // TODO: this should be calling the `load` hook chain to get the source\x0d\n        // (and fallback to reading the FS only if the source is nullish).\x0d\n        const source = readFileSync(resolved\x2C 'utf-8');\x0d\n        const { exportNames: reexportNames } = cjsPreparseModuleExports(resolved\x2C source);\x0d\n        for (const name of reexportNames) {\x0d\n          exportNames.add(name);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { module\x2C exportNames };\x0d\n}\x0d\n\x0d\n// Strategy for loading a node builtin CommonJS module that isn't\x0d\n// through normal resolution\x0d\ntranslators.set('builtin'\x2C function builtinStrategy(url) {\x0d\n  debug(`Translating BuiltinModule ${url}`);\x0d\n  // Slice 'node:' scheme\x0d\n  const id = StringPrototypeSlice(url\x2C 5);\x0d\n  const module = loadBuiltinModule(id\x2C url);\x0d\n  cjsCache.set(url\x2C module);\x0d\n  if (!StringPrototypeStartsWith(url\x2C 'node:') || !module) {\x0d\n    throw new ERR_UNKNOWN_BUILTIN_MODULE(url);\x0d\n  }\x0d\n  debug(`Loading BuiltinModule ${url}`);\x0d\n  return module.getESMFacade();\x0d\n});\x0d\n\x0d\n// Strategy for loading a JSON file\x0d\nconst isWindows = process.platform === 'win32';\x0d\ntranslators.set('json'\x2C function jsonStrategy(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing JSON modules');\x0d\n  assertBufferSource(source\x2C true\x2C 'load');\x0d\n  debug(`Loading JSONModule ${url}`);\x0d\n  const pathname = StringPrototypeStartsWith(url\x2C 'file:') ?\x0d\n    fileURLToPath(url) : null;\x0d\n  const shouldCheckAndPopulateCJSModuleCache =\x0d\n    // We want to involve the CJS loader cache only for `file:` URL with no search query and no hash.\x0d\n    pathname && !StringPrototypeIncludes(url\x2C '?') && !StringPrototypeIncludes(url\x2C '#');\x0d\n  let modulePath;\x0d\n  let module;\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    modulePath = isWindows ?\x0d\n      StringPrototypeReplaceAll(pathname\x2C '/'\x2C '\\\\') : pathname;\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  source = stringify(source);\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    // A require call could have been called on the same file during loading and\x0d\n    // that resolves synchronously. To make sure we always return the identical\x0d\n    // export\x2C we have to check again if the module already exists or not.\x0d\n    // TODO: remove CJS loader from here as well.\x0d\n    module = CJSModule._cache[modulePath];\x0d\n    if (module && module.loaded) {\x0d\n      const exports = module.exports;\x0d\n      return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n        this.setExport('default'\x2C exports);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    const exports = JSONParse(stripBOM(source));\x0d\n    module = {\x0d\n      exports\x2C\x0d\n      loaded: true\x2C\x0d\n    };\x0d\n  } catch (err) {\x0d\n    // TODO (BridgeAR): We could add a NodeCore error that wraps the JSON\x0d\n    // parse error instead of just manipulating the original error message.\x0d\n    // That would allow to add further properties and maybe additional\x0d\n    // debugging information.\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n  if (shouldCheckAndPopulateCJSModuleCache) {\x0d\n    CJSModule._cache[modulePath] = module;\x0d\n  }\x0d\n  cjsCache.set(url\x2C module);\x0d\n  return new ModuleWrap(url\x2C undefined\x2C ['default']\x2C function() {\x0d\n    debug(`Parsing JSONModule ${url}`);\x0d\n    this.setExport('default'\x2C module.exports);\x0d\n  });\x0d\n});\x0d\n\x0d\n// Strategy for loading a wasm module\x0d\ntranslators.set('wasm'\x2C async function(url\x2C source) {\x0d\n  emitExperimentalWarning('Importing WebAssembly modules');\x0d\n\x0d\n  assertBufferSource(source\x2C false\x2C 'load');\x0d\n\x0d\n  debug(`Translating WASMModule ${url}`);\x0d\n\x0d\n  let compiled;\x0d\n  try {\x0d\n    compiled = await WebAssembly.compile(source);\x0d\n  } catch (err) {\x0d\n    err.message = errPath(url) + ': ' + err.message;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const imports =\x0d\n      ArrayPrototypeMap(WebAssembly.Module.imports(compiled)\x2C\x0d\n                        ({ module }) => module);\x0d\n  const exports =\x0d\n    ArrayPrototypeMap(WebAssembly.Module.exports(compiled)\x2C\x0d\n                      ({ name }) => name);\x0d\n\x0d\n  const createDynamicModule = require(\x0d\n    'internal/modules/esm/create_dynamic_module');\x0d\n  return createDynamicModule(imports\x2C exports\x2C url\x2C (reflect) => {\x0d\n    const { exports } = new WebAssembly.Instance(compiled\x2C reflect.imports);\x0d\n    for (const expt of ObjectKeys(exports)) {\x0d\n      reflect.exports[expt].set(exports[expt]);\x0d\n    }\x0d\n  }).module;\x0d\n});\x0d\n
code-source-info,0x8c1d177aa6,86,0,20775,C0O0C4O20775,,
code-creation,JS,10,180602,0x8c1d17842e,845, node:internal/modules/esm/translators:1:1,0x8c1d177a20,~
code-source-info,0x8c1d17842e
code-creation,JS,10,180901,0x8c1d179f5e,30,setCustomizations node:internal/modules/esm/loader:181:20,0x8c1d16cdb0,~
code-source-info,0x8c1d179f5e,83,5395,5629,C0O5419C5O5440C9O5463C13O5537C17O5520C23O5582C24O5610C29O5628,,
code-creation,JS,10,180968,0x8c1d17a05e,22,forceLoadHooks node:internal/modules/esm/loader:444:17,0x8c1d16d210,~
code-source-info,0x8c1d17a05e,83,15522,15576,C0O15532C2O15537C8O15552C13O15554C21O15575,,
code-creation,JS,10,181023,0x8c1d17a15e,26, node:internal/modules/run_main:98:29,0x8c1d16b3c8,~
code-source-info,0x8c1d17a15e,69,3542,3631,C0O3581C7O3588C12O3594C20O3587C25O3626,,
code-creation,JS,10,181091,0x8c1d17a2d6,159,import node:internal/modules/esm/loader:321:15,0x8c1d16cf40,~
code-source-info,0x8c1d17a2d6,83,10872,11089,C10O10872C18O10949C35O10949C48O10938C74O11043C79O11043C91O11027C114O11016C119O11069C124O11069C136O11084,,
code-creation,JS,10,181163,0x8c1d17a4d6,127,getModuleJob node:internal/modules/esm/loader:233:21,0x8c1d16ce50,~
code-source-info,0x8c1d17a4d6,83,7434,7654,C10O7434C18O7515C35O7515C48O7504C74O7581C91O7581C104O7649,,
code-creation,JS,10,181238,0x8c1d17a656,126,resolve node:internal/modules/esm/loader:350:10,0x8c1d16cfe0,~
code-source-info,0x8c1d17a656,83,12169,12760,C0O12225C2O12234C7O12260C9O12272C13O12288C27O12288C32O12344C33O12376C35O12381C39O12395C44O12395C51O12472C53O12477C57O12491C62O12491C69O12524C72O12559C74O12579C75O12612C92O12612C98O12681C100O12686C104O12700C118O12700C123O12741C125O12755,,
code-creation,JS,10,181330,0x8c1d17a8ae,96,serializeKey node:internal/modules/esm/module_map:36:15,0x8c1d173f48,~
code-source-info,0x8c1d17a8ae,84,1271,1887,C0O1271C9O1577C19O1577C24O1623C30O1630C35O1646C37O1663C40O1670C41O1685C43O1702C51O1711C58O1738C65O1766C68O1766C78O1738C87O1711C92O1709C95O1882,,
code-creation,JS,10,181399,0x8c1d17aa26,26,get node:internal/modules/esm/module_map:67:6,0x8c1d173f98,~
code-source-info,0x8c1d17aa26,84,2300,2401,C0O2334C2O2346C14O2369C22O2380C25O2396,,
code-creation,JS,10,181456,0x8c1d17ab26,51,#getModuleCachedImports node:internal/modules/esm/module_map:54:26,0x8c1d173ea8,~
code-source-info,0x8c1d17ab26,84,1916,2115,C0O1955C2O1961C13O1961C19O1982C22O2018C24O2024C29O2028C43O2024C48O2089C50O2110,,
code-creation,JS,10,181614,0x8c1d17ad1e,82,defaultResolve node:internal/modules/esm/loader:380:17,0x8c1d16d080,~
code-source-info,0x8c1d17ad1e,83,13440,13777,C0O13496C18O13515C23O13554C32O13511C40O13594C47O13644C56O13671C62O13696C69O13722C76O13729C81O13772,,
new,MemoryChunk,0x2bb6ec80000,262144
code-creation,Eval,10,182597,0x8c1d17d5fe,5, node:internal/modules/esm/resolve:1:1,0x8c1d17c158,~
script-source,87,node:internal/modules/esm/resolve,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  JSONStringify\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeReplace\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  encodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst internalFS = require('internal/fs/utils');\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst { realpathSync } = require('fs');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst { sep\x2C posix: { relative: relativePosixPath }\x2C toNamespacedPath\x2C resolve } = require('path');\x0d\nconst preserveSymlinks = getOptionValue('--preserve-symlinks');\x0d\nconst preserveSymlinksMain = getOptionValue('--preserve-symlinks-main');\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst inputTypeFlag = getOptionValue('--input-type');\x0d\nconst { URL\x2C pathToFileURL\x2C fileURLToPath\x2C isURL } = require('internal/url');\x0d\nconst { getCWDURL\x2C setOwnProperty } = require('internal/util');\x0d\nconst { canParse: URLCanParse } = internalBinding('url');\x0d\nconst { legacyMainResolve: FSLegacyMainResolve } = internalBinding('fs');\x0d\nconst {\x0d\n  ERR_INPUT_TYPE_NOT_ALLOWED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_MODULE_SPECIFIER\x2C\x0d\n  ERR_INVALID_PACKAGE_CONFIG\x2C\x0d\n  ERR_INVALID_PACKAGE_TARGET\x2C\x0d\n  ERR_MANIFEST_DEPENDENCY_MISSING\x2C\x0d\n  ERR_MODULE_NOT_FOUND\x2C\x0d\n  ERR_PACKAGE_IMPORT_NOT_DEFINED\x2C\x0d\n  ERR_PACKAGE_PATH_NOT_EXPORTED\x2C\x0d\n  ERR_UNSUPPORTED_DIR_IMPORT\x2C\x0d\n  ERR_UNSUPPORTED_RESOLVE_REQUEST\x2C\x0d\n  ERR_NETWORK_IMPORT_DISALLOWED\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst { Module: CJSModule } = require('internal/modules/cjs/loader');\x0d\nconst { getPackageScopeConfig } = require('internal/modules/esm/package_config');\x0d\nconst { getConditionsSet } = require('internal/modules/esm/utils');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\nconst { internalModuleStat } = internalBinding('fs');\x0d\n\x0d\n/**\x0d\n * @typedef {import('internal/modules/esm/package_config.js').PackageConfig} PackageConfig\x0d\n */\x0d\n\x0d\n\x0d\nconst emittedPackageWarnings = new SafeSet();\x0d\n\x0d\n/**\x0d\n * Emits a deprecation warning for the use of a deprecated trailing slash pattern mapping in the "exports" field\x0d\n * module resolution of a package.\x0d\n * @param {string} match - The deprecated trailing slash pattern mapping.\x0d\n * @param {string} pjsonUrl - The URL of the package.json file.\x0d\n * @param {string} base - The URL of the module that imported the package.\x0d\n */\x0d\nfunction emitTrailingSlashPatternDeprecation(match\x2C pjsonUrl\x2C base) {\x0d\n  if (process.noDeprecation) {\x0d\n    return;\x0d\n  }\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  if (emittedPackageWarnings.has(pjsonPath + '|' + match)) { return; }\x0d\n  emittedPackageWarnings.add(pjsonPath + '|' + match);\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated trailing slash pattern mapping "${match}" in the ` +\x0d\n    `"exports" field module resolution of the package at ${pjsonPath}${\x0d\n      base ? ` imported from ${fileURLToPath(base)}` :\x0d\n        ''}. Mapping specifiers ending in "/" is no longer supported.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0155'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nconst doubleSlashRegEx = /[/\\\\][/\\\\]/;\x0d\n\x0d\n/**\x0d\n * Emits a deprecation warning for invalid segment in module resolution.\x0d\n * @param {string} target - The target module.\x0d\n * @param {string} request - The requested module.\x0d\n * @param {string} match - The matched module.\x0d\n * @param {string} pjsonUrl - The package.json URL.\x0d\n * @param {boolean} internal - Whether the module is in the "imports" or "exports" field.\x0d\n * @param {string} base - The base URL.\x0d\n * @param {boolean} isTarget - Whether the target is a module.\x0d\n */\x0d\nfunction emitInvalidSegmentDeprecation(target\x2C request\x2C match\x2C pjsonUrl\x2C internal\x2C base\x2C isTarget) {\x0d\n  if (process.noDeprecation) {\x0d\n    return;\x0d\n  }\x0d\n  const pjsonPath = fileURLToPath(pjsonUrl);\x0d\n  const double = RegExpPrototypeExec(doubleSlashRegEx\x2C isTarget ? target : request) !== null;\x0d\n  process.emitWarning(\x0d\n    `Use of deprecated ${double ? 'double slash' :\x0d\n      'leading or trailing slash matching'} resolving "${target}" for module ` +\x0d\n      `request "${request}" ${request !== match ? `matched to "${match}" ` : ''\x0d\n      }in the "${internal ? 'imports' : 'exports'}" field module resolution of the package at ${\x0d\n        pjsonPath}${base ? ` imported from ${fileURLToPath(base)}` : ''}.`\x2C\x0d\n    'DeprecationWarning'\x2C\x0d\n    'DEP0166'\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\n/**\x0d\n * Emits a deprecation warning if the given URL is a module and\x0d\n * the package.json file does not define a "main" or "exports" field.\x0d\n * @param {URL} url - The URL of the module being resolved.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file for the module.\x0d\n * @param {string | URL} [base] - The base URL for the module being resolved.\x0d\n * @param {string} [main] - The "main" field from the package.json file.\x0d\n */\x0d\nfunction emitLegacyIndexDeprecation(url\x2C packageJSONUrl\x2C base\x2C main) {\x0d\n  if (process.noDeprecation) {\x0d\n    return;\x0d\n  }\x0d\n  const format = defaultGetFormatWithoutErrors(url);\x0d\n  if (format !== 'module') { return; }\x0d\n  const path = fileURLToPath(url);\x0d\n  const pkgPath = fileURLToPath(new URL('.'\x2C packageJSONUrl));\x0d\n  const basePath = fileURLToPath(base);\x0d\n  if (!main) {\x0d\n    process.emitWarning(\x0d\n      `No "main" or "exports" field defined in the package.json for ${pkgPath\x0d\n      } resolving the main entry point "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${basePath\x0d\n      }.\\nDefault "index" lookups for the main are deprecated for ES modules.`\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x2C\x0d\n    );\x0d\n  } else if (resolve(pkgPath\x2C main) !== path) {\x0d\n    process.emitWarning(\x0d\n      `Package ${pkgPath} has a "main" field set to "${main}"\x2C ` +\x0d\n      `excluding the full filename and extension to the resolved file at "${\x0d\n        StringPrototypeSlice(path\x2C pkgPath.length)}"\x2C imported from ${\x0d\n        basePath}.\\n Automatic extension resolution of the "main" field is ` +\x0d\n      'deprecated for ES modules.'\x2C\x0d\n      'DeprecationWarning'\x2C\x0d\n      'DEP0151'\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\nconst realpathCache = new SafeMap();\x0d\n\x0d\nconst legacyMainResolveExtensions = [\x0d\n  ''\x2C\x0d\n  '.js'\x2C\x0d\n  '.json'\x2C\x0d\n  '.node'\x2C\x0d\n  '/index.js'\x2C\x0d\n  '/index.json'\x2C\x0d\n  '/index.node'\x2C\x0d\n  './index.js'\x2C\x0d\n  './index.json'\x2C\x0d\n  './index.node'\x2C\x0d\n];\x0d\n\x0d\nconst legacyMainResolveExtensionsIndexes = {\x0d\n  // 0-6: when packageConfig.main is defined\x0d\n  kResolvedByMain: 0\x2C\x0d\n  kResolvedByMainJs: 1\x2C\x0d\n  kResolvedByMainJson: 2\x2C\x0d\n  kResolvedByMainNode: 3\x2C\x0d\n  kResolvedByMainIndexJs: 4\x2C\x0d\n  kResolvedByMainIndexJson: 5\x2C\x0d\n  kResolvedByMainIndexNode: 6\x2C\x0d\n  // 7-9: when packageConfig.main is NOT defined\x2C\x0d\n  //      or when the previous case didn't found the file\x0d\n  kResolvedByPackageAndJs: 7\x2C\x0d\n  kResolvedByPackageAndJson: 8\x2C\x0d\n  kResolvedByPackageAndNode: 9\x2C\x0d\n};\x0d\n\x0d\n/**\x0d\n * Legacy CommonJS main resolution:\x0d\n * 1. let M = pkg_url + (json main field)\x0d\n * 2. TRY(M\x2C M.js\x2C M.json\x2C M.node)\x0d\n * 3. TRY(M/index.js\x2C M/index.json\x2C M/index.node)\x0d\n * 4. TRY(pkg_url/index.js\x2C pkg_url/index.json\x2C pkg_url/index.node)\x0d\n * 5. NOT_FOUND\x0d\n * @param {URL} packageJSONUrl\x0d\n * @param {PackageConfig} packageConfig\x0d\n * @param {string | URL | undefined} base\x0d\n * @returns {URL}\x0d\n */\x0d\nfunction legacyMainResolve(packageJSONUrl\x2C packageConfig\x2C base) {\x0d\n  const packageJsonUrlString = packageJSONUrl.href;\x0d\n\x0d\n  if (typeof packageJsonUrlString !== 'string') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('packageJSONUrl'\x2C ['URL']\x2C packageJSONUrl);\x0d\n  }\x0d\n\x0d\n  const baseStringified = isURL(base) ? base.href : base;\x0d\n\x0d\n  const resolvedOption = FSLegacyMainResolve(packageJsonUrlString\x2C packageConfig.main\x2C baseStringified);\x0d\n\x0d\n  const baseUrl = resolvedOption <= legacyMainResolveExtensionsIndexes.kResolvedByMainIndexNode ? `./${packageConfig.main}` : '';\x0d\n  const resolvedUrl = new URL(baseUrl + legacyMainResolveExtensions[resolvedOption]\x2C packageJSONUrl);\x0d\n\x0d\n  emitLegacyIndexDeprecation(resolvedUrl\x2C packageJSONUrl\x2C base\x2C packageConfig.main);\x0d\n\x0d\n  return resolvedUrl;\x0d\n}\x0d\n\x0d\nconst encodedSepRegEx = /%2F|%5C/i;\x0d\n/**\x0d\n * Finalizes the resolution of a module specifier by checking if the resolved pathname contains encoded "/" or "\\\\"\x0d\n * characters\x2C checking if the resolved pathname is a directory or file\x2C and resolving any symlinks if necessary.\x0d\n * @param {URL} resolved - The resolved URL object.\x0d\n * @param {string | URL | undefined} base - The base URL object.\x0d\n * @param {boolean} preserveSymlinks - Whether to preserve symlinks or not.\x0d\n * @returns {URL} - The finalized URL object.\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} - If the resolved pathname contains encoded "/" or "\\\\" characters.\x0d\n * @throws {ERR_UNSUPPORTED_DIR_IMPORT} - If the resolved pathname is a directory.\x0d\n * @throws {ERR_MODULE_NOT_FOUND} - If the resolved pathname is not a file.\x0d\n */\x0d\nfunction finalizeResolution(resolved\x2C base\x2C preserveSymlinks) {\x0d\n  if (RegExpPrototypeExec(encodedSepRegEx\x2C resolved.pathname) !== null) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      resolved.pathname\x2C 'must not include encoded "/" or "\\\\" characters'\x2C\x0d\n      fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  let path;\x0d\n  try {\x0d\n    path = fileURLToPath(resolved);\x0d\n  } catch (err) {\x0d\n    const { setOwnProperty } = require('internal/util');\x0d\n    setOwnProperty(err\x2C 'input'\x2C `${resolved}`);\x0d\n    setOwnProperty(err\x2C 'module'\x2C `${base}`);\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  const stats = internalModuleStat(toNamespacedPath(StringPrototypeEndsWith(path\x2C '/') ?\x0d\n    StringPrototypeSlice(path\x2C -1) : path));\x0d\n\x0d\n  // Check for stats.isDirectory()\x0d\n  if (stats === 1) {\x0d\n    throw new ERR_UNSUPPORTED_DIR_IMPORT(path\x2C fileURLToPath(base)\x2C String(resolved));\x0d\n  } else if (stats !== 0) {\x0d\n    // Check for !stats.isFile()\x0d\n    if (process.env.WATCH_REPORT_DEPENDENCIES && process.send) {\x0d\n      process.send({ 'watch:require': [path || resolved.pathname] });\x0d\n    }\x0d\n    throw new ERR_MODULE_NOT_FOUND(\x0d\n      path || resolved.pathname\x2C base && fileURLToPath(base)\x2C resolved);\x0d\n  }\x0d\n\x0d\n  if (!preserveSymlinks) {\x0d\n    const real = realpathSync(path\x2C {\x0d\n      [internalFS.realpathCacheKey]: realpathCache\x2C\x0d\n    });\x0d\n    const { search\x2C hash } = resolved;\x0d\n    resolved =\x0d\n        pathToFileURL(real + (StringPrototypeEndsWith(path\x2C sep) ? '/' : ''));\x0d\n    resolved.search = search;\x0d\n    resolved.hash = hash;\x0d\n  }\x0d\n\x0d\n  return resolved;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an error object indicating that the specified import is not defined.\x0d\n * @param {string} specifier - The import specifier that is not defined.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file\x2C or null if not available.\x0d\n * @param {string | URL | undefined} base - The base URL to use for resolving relative URLs.\x0d\n * @returns {ERR_PACKAGE_IMPORT_NOT_DEFINED} - The error object.\x0d\n */\x0d\nfunction importNotDefined(specifier\x2C packageJSONUrl\x2C base) {\x0d\n  return new ERR_PACKAGE_IMPORT_NOT_DEFINED(\x0d\n    specifier\x2C packageJSONUrl && fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C\x0d\n    fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an error object indicating that the specified subpath was not exported by the package.\x0d\n * @param {string} subpath - The subpath that was not exported.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {string | URL | undefined} [base] - The base URL to use for resolving the subpath.\x0d\n * @returns {ERR_PACKAGE_PATH_NOT_EXPORTED} - The error object.\x0d\n */\x0d\nfunction exportsNotFound(subpath\x2C packageJSONUrl\x2C base) {\x0d\n  return new ERR_PACKAGE_PATH_NOT_EXPORTED(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C\x0d\n    base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throws an error indicating that the given request is not a valid subpath match for the specified pattern.\x0d\n * @param {string} request - The request that failed to match the pattern.\x0d\n * @param {string} match - The pattern that the request was compared against.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file being resolved.\x0d\n * @param {boolean} internal - Whether the resolution is for an "imports" or "exports" field in package.json.\x0d\n * @param {string | URL | undefined} base - The base URL for the resolution.\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} When the request is not a valid match for the pattern.\x0d\n */\x0d\nfunction throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  const reason = `request is not a valid match in pattern "${match}" for the "${\x0d\n    internal ? 'imports' : 'exports'}" resolution of ${\x0d\n    fileURLToPath(packageJSONUrl)}`;\x0d\n  throw new ERR_INVALID_MODULE_SPECIFIER(request\x2C reason\x2C\x0d\n                                         base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an error object for an invalid package target.\x0d\n * @param {string} subpath - The subpath.\x0d\n * @param {import('internal/modules/esm/package_config.js').PackageTarget} target - The target.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {boolean} internal - Whether the package is internal.\x0d\n * @param {string | URL | undefined} base - The base URL.\x0d\n * @returns {ERR_INVALID_PACKAGE_TARGET} - The error object.\x0d\n */\x0d\nfunction invalidPackageTarget(\x0d\n  subpath\x2C target\x2C packageJSONUrl\x2C internal\x2C base) {\x0d\n  if (typeof target === 'object' && target !== null) {\x0d\n    target = JSONStringify(target\x2C null\x2C '');\x0d\n  } else {\x0d\n    target = `${target}`;\x0d\n  }\x0d\n  return new ERR_INVALID_PACKAGE_TARGET(\x0d\n    fileURLToPath(new URL('.'\x2C packageJSONUrl))\x2C subpath\x2C target\x2C\x0d\n    internal\x2C base && fileURLToPath(base));\x0d\n}\x0d\n\x0d\nconst invalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))?(\\\\|\\/|$)/i;\x0d\nconst deprecatedInvalidSegmentRegEx = /(^|\\\\|\\/)((\\.|%2e)(\\.|%2e)?|(n|%6e|%4e)(o|%6f|%4f)(d|%64|%44)(e|%65|%45)(_|%5f)(m|%6d|%4d)(o|%6f|%4f)(d|%64|%44)(u|%75|%55)(l|%6c|%4c)(e|%65|%45)(s|%73|%53))(\\\\|\\/|$)/i;\x0d\nconst invalidPackageNameRegEx = /^\\.|%|\\\\/;\x0d\nconst patternRegEx = /\\*/g;\x0d\n\x0d\n/**\x0d\n * Resolves the package target string to a URL object.\x0d\n * @param {string} target - The target string to resolve.\x0d\n * @param {string} subpath - The subpath to append to the resolved URL.\x0d\n * @param {RegExpMatchArray} match - The matched string array from the import statement.\x0d\n * @param {string} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {string} base - The base URL to resolve the target against.\x0d\n * @param {RegExp} pattern - The pattern to replace in the target string.\x0d\n * @param {boolean} internal - Whether the target is internal to the package.\x0d\n * @param {boolean} isPathMap - Whether the target is a path map.\x0d\n * @param {string[]} conditions - The import conditions.\x0d\n * @returns {URL} - The resolved URL object.\x0d\n * @throws {ERR_INVALID_PACKAGE_TARGET} - If the target is invalid.\x0d\n * @throws {ERR_INVALID_SUBPATH} - If the subpath is invalid.\x0d\n */\x0d\nfunction resolvePackageTargetString(\x0d\n  target\x2C\x0d\n  subpath\x2C\x0d\n  match\x2C\x0d\n  packageJSONUrl\x2C\x0d\n  base\x2C\x0d\n  pattern\x2C\x0d\n  internal\x2C\x0d\n  isPathMap\x2C\x0d\n  conditions\x2C\x0d\n) {\x0d\n\x0d\n  if (subpath !== '' && !pattern && target[target.length - 1] !== '/') {\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (!StringPrototypeStartsWith(target\x2C './')) {\x0d\n    if (internal && !StringPrototypeStartsWith(target\x2C '../') &&\x0d\n        !StringPrototypeStartsWith(target\x2C '/')) {\x0d\n      // No need to convert target to string\x2C since it's already presumed to be\x0d\n      if (!URLCanParse(target)) {\x0d\n        const exportTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target + subpath;\x0d\n        return packageResolve(\x0d\n          exportTarget\x2C packageJSONUrl\x2C conditions);\x0d\n      }\x0d\n    }\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) !== null) {\x0d\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C StringPrototypeSlice(target\x2C 2)) === null) {\x0d\n      if (!isPathMap) {\x0d\n        const request = pattern ?\x0d\n          StringPrototypeReplace(match\x2C '*'\x2C () => subpath) :\x0d\n          match + subpath;\x0d\n        const resolvedTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target;\x0d\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C true);\x0d\n      }\x0d\n    } else {\x0d\n      throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const resolved = new URL(target\x2C packageJSONUrl);\x0d\n  const resolvedPath = resolved.pathname;\x0d\n  const packagePath = new URL('.'\x2C packageJSONUrl).pathname;\x0d\n\x0d\n  if (!StringPrototypeStartsWith(resolvedPath\x2C packagePath)) {\x0d\n    throw invalidPackageTarget(match\x2C target\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n  }\x0d\n\x0d\n  if (subpath === '') { return resolved; }\x0d\n\x0d\n  if (RegExpPrototypeExec(invalidSegmentRegEx\x2C subpath) !== null) {\x0d\n    const request = pattern ? StringPrototypeReplace(match\x2C '*'\x2C () => subpath) : match + subpath;\x0d\n    if (RegExpPrototypeExec(deprecatedInvalidSegmentRegEx\x2C subpath) === null) {\x0d\n      if (!isPathMap) {\x0d\n        const resolvedTarget = pattern ?\x0d\n          RegExpPrototypeSymbolReplace(patternRegEx\x2C target\x2C () => subpath) :\x0d\n          target;\x0d\n        emitInvalidSegmentDeprecation(resolvedTarget\x2C request\x2C match\x2C packageJSONUrl\x2C internal\x2C base\x2C false);\x0d\n      }\x0d\n    } else {\x0d\n      throwInvalidSubpath(request\x2C match\x2C packageJSONUrl\x2C internal\x2C base);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (pattern) {\x0d\n    return new URL(\x0d\n      RegExpPrototypeSymbolReplace(patternRegEx\x2C resolved.href\x2C () => subpath)\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return new URL(subpath\x2C resolved);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Checks if the given key is a valid array index.\x0d\n * @param {string} key - The key to check.\x0d\n * @returns {boolean} - Returns `true` if the key is a valid array index\x2C else `false`.\x0d\n */\x0d\nfunction isArrayIndex(key) {\x0d\n  const keyNum = +key;\x0d\n  if (`${keyNum}` !== key) { return false; }\x0d\n  return keyNum >= 0 && keyNum < 0xFFFF_FFFF;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves the target of a package based on the provided parameters.\x0d\n * @param {string} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {import('internal/modules/esm/package_config.js').PackageTarget} target - The target to resolve.\x0d\n * @param {string} subpath - The subpath to resolve.\x0d\n * @param {string} packageSubpath - The subpath of the package to resolve.\x0d\n * @param {string} base - The base path to resolve.\x0d\n * @param {RegExp} pattern - The pattern to match.\x0d\n * @param {boolean} internal - Whether the package is internal.\x0d\n * @param {boolean} isPathMap - Whether the package is a path map.\x0d\n * @param {Set<string>} conditions - The conditions to match.\x0d\n * @returns {URL | null | undefined} - The resolved target\x2C or null if not found\x2C or undefined if not resolvable.\x0d\n */\x0d\nfunction resolvePackageTarget(packageJSONUrl\x2C target\x2C subpath\x2C packageSubpath\x2C\x0d\n                              base\x2C pattern\x2C internal\x2C isPathMap\x2C conditions) {\x0d\n  if (typeof target === 'string') {\x0d\n    return resolvePackageTargetString(\x0d\n      target\x2C subpath\x2C packageSubpath\x2C packageJSONUrl\x2C base\x2C pattern\x2C internal\x2C\x0d\n      isPathMap\x2C conditions);\x0d\n  } else if (ArrayIsArray(target)) {\x0d\n    if (target.length === 0) {\x0d\n      return null;\x0d\n    }\x0d\n\x0d\n    let lastException;\x0d\n    for (let i = 0; i < target.length; i++) {\x0d\n      const targetItem = target[i];\x0d\n      let resolveResult;\x0d\n      try {\x0d\n        resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C targetItem\x2C subpath\x2C packageSubpath\x2C base\x2C pattern\x2C\x0d\n          internal\x2C isPathMap\x2C conditions);\x0d\n      } catch (e) {\x0d\n        lastException = e;\x0d\n        if (e.code === 'ERR_INVALID_PACKAGE_TARGET') {\x0d\n          continue;\x0d\n        }\x0d\n        throw e;\x0d\n      }\x0d\n      if (resolveResult === undefined) {\x0d\n        continue;\x0d\n      }\x0d\n      if (resolveResult === null) {\x0d\n        lastException = null;\x0d\n        continue;\x0d\n      }\x0d\n      return resolveResult;\x0d\n    }\x0d\n    if (lastException === undefined || lastException === null) {\x0d\n      return lastException;\x0d\n    }\x0d\n    throw lastException;\x0d\n  } else if (typeof target === 'object' && target !== null) {\x0d\n    const keys = ObjectGetOwnPropertyNames(target);\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (isArrayIndex(key)) {\x0d\n        throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n          fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n          '"exports" cannot contain numeric property keys.');\x0d\n      }\x0d\n    }\x0d\n    for (let i = 0; i < keys.length; i++) {\x0d\n      const key = keys[i];\x0d\n      if (key === 'default' || conditions.has(key)) {\x0d\n        const conditionalTarget = target[key];\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C conditionalTarget\x2C subpath\x2C packageSubpath\x2C base\x2C\x0d\n          pattern\x2C internal\x2C isPathMap\x2C conditions);\x0d\n        if (resolveResult === undefined) { continue; }\x0d\n        return resolveResult;\x0d\n      }\x0d\n    }\x0d\n    return undefined;\x0d\n  } else if (target === null) {\x0d\n    return null;\x0d\n  }\x0d\n  throw invalidPackageTarget(packageSubpath\x2C target\x2C packageJSONUrl\x2C internal\x2C\x0d\n                             base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Is the given exports object using the shorthand syntax?\x0d\n * @param {import('internal/modules/esm/package_config.js').PackageConfig['exports']} exports\x0d\n * @param {URL} packageJSONUrl The URL of the package.json file.\x0d\n * @param {string | URL | undefined} base The base URL.\x0d\n */\x0d\nfunction isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base) {\x0d\n  if (typeof exports === 'string' || ArrayIsArray(exports)) { return true; }\x0d\n  if (typeof exports !== 'object' || exports === null) { return false; }\x0d\n\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  let isConditionalSugar = false;\x0d\n  let i = 0;\x0d\n  for (let j = 0; j < keys.length; j++) {\x0d\n    const key = keys[j];\x0d\n    const curIsConditionalSugar = key === '' || key[0] !== '.';\x0d\n    if (i++ === 0) {\x0d\n      isConditionalSugar = curIsConditionalSugar;\x0d\n    } else if (isConditionalSugar !== curIsConditionalSugar) {\x0d\n      throw new ERR_INVALID_PACKAGE_CONFIG(\x0d\n        fileURLToPath(packageJSONUrl)\x2C base\x2C\x0d\n        '"exports" cannot contain some keys starting with \\'.\\' and some not.' +\x0d\n        ' The exports object must either be an object of package subpath keys' +\x0d\n        ' or an object of main entry condition name keys only.');\x0d\n    }\x0d\n  }\x0d\n  return isConditionalSugar;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves the exports of a package.\x0d\n * @param {URL} packageJSONUrl - The URL of the package.json file.\x0d\n * @param {string} packageSubpath - The subpath of the package to resolve.\x0d\n * @param {import('internal/modules/esm/package_config.js').PackageConfig} packageConfig - The package metadata.\x0d\n * @param {string | URL | undefined} base - The base path to resolve from.\x0d\n * @param {Set<string>} conditions - An array of conditions to match.\x0d\n * @returns {URL} - The resolved package target.\x0d\n */\x0d\nfunction packageExportsResolve(\x0d\n  packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions) {\x0d\n  let exports = packageConfig.exports;\x0d\n  if (isConditionalExportsMainSugar(exports\x2C packageJSONUrl\x2C base)) {\x0d\n    exports = { '.': exports };\x0d\n  }\x0d\n\x0d\n  if (ObjectPrototypeHasOwnProperty(exports\x2C packageSubpath) &&\x0d\n      !StringPrototypeIncludes(packageSubpath\x2C '*') &&\x0d\n      !StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n    const target = exports[packageSubpath];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C target\x2C ''\x2C packageSubpath\x2C base\x2C false\x2C false\x2C false\x2C\x0d\n      conditions\x2C\x0d\n    );\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  let bestMatch = '';\x0d\n  let bestMatchSubpath;\x0d\n  const keys = ObjectGetOwnPropertyNames(exports);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const key = keys[i];\x0d\n    const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n    if (patternIndex !== -1 &&\x0d\n        StringPrototypeStartsWith(packageSubpath\x2C\x0d\n                                  StringPrototypeSlice(key\x2C 0\x2C patternIndex))) {\x0d\n      // When this reaches EOL\x2C this can throw at the top of the whole function:\x0d\n      //\x0d\n      // if (StringPrototypeEndsWith(packageSubpath\x2C '/'))\x0d\n      //   throwInvalidSubpath(packageSubpath)\x0d\n      //\x0d\n      // To match "imports" and the spec.\x0d\n      if (StringPrototypeEndsWith(packageSubpath\x2C '/')) {\x0d\n        emitTrailingSlashPatternDeprecation(packageSubpath\x2C packageJSONUrl\x2C\x0d\n                                            base);\x0d\n      }\x0d\n      const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n      if (packageSubpath.length >= key.length &&\x0d\n          StringPrototypeEndsWith(packageSubpath\x2C patternTrailer) &&\x0d\n          patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n          StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n        bestMatch = key;\x0d\n        bestMatchSubpath = StringPrototypeSlice(\x0d\n          packageSubpath\x2C patternIndex\x2C\x0d\n          packageSubpath.length - patternTrailer.length);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (bestMatch) {\x0d\n    const target = exports[bestMatch];\x0d\n    const resolveResult = resolvePackageTarget(\x0d\n      packageJSONUrl\x2C\x0d\n      target\x2C\x0d\n      bestMatchSubpath\x2C\x0d\n      bestMatch\x2C\x0d\n      base\x2C\x0d\n      true\x2C\x0d\n      false\x2C\x0d\n      StringPrototypeEndsWith(packageSubpath\x2C '/')\x2C\x0d\n      conditions);\x0d\n\x0d\n    if (resolveResult == null) {\x0d\n      throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n    }\x0d\n    return resolveResult;\x0d\n  }\x0d\n\x0d\n  throw exportsNotFound(packageSubpath\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Compares two strings that may contain a wildcard character ('*') and returns a value indicating their order.\x0d\n * @param {string} a - The first string to compare.\x0d\n * @param {string} b - The second string to compare.\x0d\n * @returns {number} - A negative number if `a` should come before `b`\x2C a positive number if `a` should come after `b`\x2C\x0d\n * or 0 if they are equal.\x0d\n */\x0d\nfunction patternKeyCompare(a\x2C b) {\x0d\n  const aPatternIndex = StringPrototypeIndexOf(a\x2C '*');\x0d\n  const bPatternIndex = StringPrototypeIndexOf(b\x2C '*');\x0d\n  const baseLenA = aPatternIndex === -1 ? a.length : aPatternIndex + 1;\x0d\n  const baseLenB = bPatternIndex === -1 ? b.length : bPatternIndex + 1;\x0d\n  if (baseLenA > baseLenB) { return -1; }\x0d\n  if (baseLenB > baseLenA) { return 1; }\x0d\n  if (aPatternIndex === -1) { return 1; }\x0d\n  if (bPatternIndex === -1) { return -1; }\x0d\n  if (a.length > b.length) { return -1; }\x0d\n  if (b.length > a.length) { return 1; }\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves the given import name for a package.\x0d\n * @param {string} name - The name of the import to resolve.\x0d\n * @param {string | URL | undefined} base - The base URL to resolve the import from.\x0d\n * @param {Set<string>} conditions - An object containing the import conditions.\x0d\n * @throws {ERR_INVALID_MODULE_SPECIFIER} If the import name is not valid.\x0d\n * @throws {ERR_PACKAGE_IMPORT_NOT_DEFINED} If the import name cannot be resolved.\x0d\n * @returns {URL} The resolved import URL.\x0d\n */\x0d\nfunction packageImportsResolve(name\x2C base\x2C conditions) {\x0d\n  if (name === '#' || StringPrototypeStartsWith(name\x2C '#/') ||\x0d\n      StringPrototypeEndsWith(name\x2C '/')) {\x0d\n    const reason = 'is not a valid internal imports specifier name';\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(name\x2C reason\x2C fileURLToPath(base));\x0d\n  }\x0d\n  let packageJSONUrl;\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    const imports = packageConfig.imports;\x0d\n    if (imports) {\x0d\n      if (ObjectPrototypeHasOwnProperty(imports\x2C name) &&\x0d\n          !StringPrototypeIncludes(name\x2C '*')) {\x0d\n        const resolveResult = resolvePackageTarget(\x0d\n          packageJSONUrl\x2C imports[name]\x2C ''\x2C name\x2C base\x2C false\x2C true\x2C false\x2C\x0d\n          conditions\x2C\x0d\n        );\x0d\n        if (resolveResult != null) {\x0d\n          return resolveResult;\x0d\n        }\x0d\n      } else {\x0d\n        let bestMatch = '';\x0d\n        let bestMatchSubpath;\x0d\n        const keys = ObjectGetOwnPropertyNames(imports);\x0d\n        for (let i = 0; i < keys.length; i++) {\x0d\n          const key = keys[i];\x0d\n          const patternIndex = StringPrototypeIndexOf(key\x2C '*');\x0d\n          if (patternIndex !== -1 &&\x0d\n              StringPrototypeStartsWith(name\x2C\x0d\n                                        StringPrototypeSlice(key\x2C 0\x2C\x0d\n                                                             patternIndex))) {\x0d\n            const patternTrailer = StringPrototypeSlice(key\x2C patternIndex + 1);\x0d\n            if (name.length >= key.length &&\x0d\n                StringPrototypeEndsWith(name\x2C patternTrailer) &&\x0d\n                patternKeyCompare(bestMatch\x2C key) === 1 &&\x0d\n                StringPrototypeLastIndexOf(key\x2C '*') === patternIndex) {\x0d\n              bestMatch = key;\x0d\n              bestMatchSubpath = StringPrototypeSlice(\x0d\n                name\x2C patternIndex\x2C name.length - patternTrailer.length);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (bestMatch) {\x0d\n          const target = imports[bestMatch];\x0d\n          const resolveResult = resolvePackageTarget(packageJSONUrl\x2C target\x2C\x0d\n                                                     bestMatchSubpath\x2C\x0d\n                                                     bestMatch\x2C base\x2C true\x2C\x0d\n                                                     true\x2C false\x2C conditions);\x0d\n          if (resolveResult != null) {\x0d\n            return resolveResult;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  throw importNotDefined(name\x2C packageJSONUrl\x2C base);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the package type for a given URL.\x0d\n * @param {URL} url - The URL to get the package type for.\x0d\n */\x0d\nfunction getPackageType(url) {\x0d\n  const packageConfig = getPackageScopeConfig(url);\x0d\n  return packageConfig.type;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Parse a package name from a specifier.\x0d\n * @param {string} specifier - The import specifier.\x0d\n * @param {string | URL | undefined} base - The parent URL.\x0d\n */\x0d\nfunction parsePackageName(specifier\x2C base) {\x0d\n  let separatorIndex = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n  let validPackageName = true;\x0d\n  let isScoped = false;\x0d\n  if (specifier[0] === '@') {\x0d\n    isScoped = true;\x0d\n    if (separatorIndex === -1 || specifier.length === 0) {\x0d\n      validPackageName = false;\x0d\n    } else {\x0d\n      separatorIndex = StringPrototypeIndexOf(\x0d\n        specifier\x2C '/'\x2C separatorIndex + 1);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const packageName = separatorIndex === -1 ?\x0d\n    specifier : StringPrototypeSlice(specifier\x2C 0\x2C separatorIndex);\x0d\n\x0d\n  // Package name cannot have leading . and cannot have percent-encoding or\x0d\n  // \\\\ separators.\x0d\n  if (RegExpPrototypeExec(invalidPackageNameRegEx\x2C packageName) !== null) {\x0d\n    validPackageName = false;\x0d\n  }\x0d\n\x0d\n  if (!validPackageName) {\x0d\n    throw new ERR_INVALID_MODULE_SPECIFIER(\x0d\n      specifier\x2C 'is not a valid package name'\x2C fileURLToPath(base));\x0d\n  }\x0d\n\x0d\n  const packageSubpath = '.' + (separatorIndex === -1 ? '' :\x0d\n    StringPrototypeSlice(specifier\x2C separatorIndex));\x0d\n\x0d\n  return { packageName\x2C packageSubpath\x2C isScoped };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves a package specifier to a URL.\x0d\n * @param {string} specifier - The package specifier to resolve.\x0d\n * @param {string | URL | undefined} base - The base URL to use for resolution.\x0d\n * @param {Set<string>} conditions - An object containing the conditions for resolution.\x0d\n * @returns {URL} - The resolved URL.\x0d\n */\x0d\nfunction packageResolve(specifier\x2C base\x2C conditions) {\x0d\n  if (BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n    return new URL('node:' + specifier);\x0d\n  }\x0d\n\x0d\n  const { packageName\x2C packageSubpath\x2C isScoped } =\x0d\n    parsePackageName(specifier\x2C base);\x0d\n\x0d\n  // ResolveSelf\x0d\n  const packageConfig = getPackageScopeConfig(base);\x0d\n  if (packageConfig.exists) {\x0d\n    const packageJSONUrl = pathToFileURL(packageConfig.pjsonPath);\x0d\n    if (packageConfig.exports != null && packageConfig.name === packageName) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let packageJSONUrl =\x0d\n    new URL('./node_modules/' + packageName + '/package.json'\x2C base);\x0d\n  let packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  let lastPath;\x0d\n  do {\x0d\n    const stat = internalModuleStat(toNamespacedPath(StringPrototypeSlice(packageJSONPath\x2C 0\x2C\x0d\n                                                                          packageJSONPath.length - 13)));\x0d\n    // Check for !stat.isDirectory()\x0d\n    if (stat !== 1) {\x0d\n      lastPath = packageJSONPath;\x0d\n      packageJSONUrl = new URL((isScoped ?\x0d\n        '../../../../node_modules/' : '../../../node_modules/') +\x0d\n        packageName + '/package.json'\x2C packageJSONUrl);\x0d\n      packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n      continue;\x0d\n    }\x0d\n\x0d\n    // Package match.\x0d\n    const packageConfig = packageJsonReader.read(packageJSONPath\x2C { __proto__: null\x2C specifier\x2C base\x2C isESM: true });\x0d\n    if (packageConfig.exports != null) {\x0d\n      return packageExportsResolve(\x0d\n        packageJSONUrl\x2C packageSubpath\x2C packageConfig\x2C base\x2C conditions);\x0d\n    }\x0d\n    if (packageSubpath === '.') {\x0d\n      return legacyMainResolve(\x0d\n        packageJSONUrl\x2C\x0d\n        packageConfig\x2C\x0d\n        base\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    return new URL(packageSubpath\x2C packageJSONUrl);\x0d\n    // Cross-platform root check.\x0d\n  } while (packageJSONPath.length !== lastPath.length);\x0d\n\x0d\n  // eslint can't handle the above code.\x0d\n  // eslint-disable-next-line no-unreachable\x0d\n  throw new ERR_MODULE_NOT_FOUND(packageName\x2C fileURLToPath(base)\x2C null);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Checks if a specifier is a bare specifier.\x0d\n * @param {string} specifier - The specifier to check.\x0d\n */\x0d\nfunction isBareSpecifier(specifier) {\x0d\n  return specifier[0] && specifier[0] !== '/' && specifier[0] !== '.';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines whether a specifier is a relative path.\x0d\n * @param {string} specifier - The specifier to check.\x0d\n */\x0d\nfunction isRelativeSpecifier(specifier) {\x0d\n  if (specifier[0] === '.') {\x0d\n    if (specifier.length === 1 || specifier[1] === '/') { return true; }\x0d\n    if (specifier[1] === '.') {\x0d\n      if (specifier.length === 2 || specifier[2] === '/') { return true; }\x0d\n    }\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determines whether a specifier should be treated as a relative or absolute path.\x0d\n * @param {string} specifier - The specifier to check.\x0d\n */\x0d\nfunction shouldBeTreatedAsRelativeOrAbsolutePath(specifier) {\x0d\n  if (specifier === '') { return false; }\x0d\n  if (specifier[0] === '/') { return true; }\x0d\n  return isRelativeSpecifier(specifier);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves a module specifier to a URL.\x0d\n * @param {string} specifier - The module specifier to resolve.\x0d\n * @param {string | URL | undefined} base - The base URL to resolve against.\x0d\n * @param {Set<string>} conditions - An object containing environment conditions.\x0d\n * @param {boolean} preserveSymlinks - Whether to preserve symlinks in the resolved URL.\x0d\n */\x0d\nfunction moduleResolve(specifier\x2C base\x2C conditions\x2C preserveSymlinks) {\x0d\n  const protocol = typeof base === 'string' ?\x0d\n    StringPrototypeSlice(base\x2C 0\x2C StringPrototypeIndexOf(base\x2C ':') + 1) :\x0d\n    base.protocol;\x0d\n  const isData = protocol === 'data:';\x0d\n  const isRemote =\x0d\n    isData ||\x0d\n    protocol === 'http:' ||\x0d\n    protocol === 'https:';\x0d\n  // Order swapped from spec for minor perf gain.\x0d\n  // Ok since relative URLs cannot parse as URLs.\x0d\n  let resolved;\x0d\n  if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n    try {\x0d\n      resolved = new URL(specifier\x2C base);\x0d\n    } catch (cause) {\x0d\n      const error = new ERR_UNSUPPORTED_RESOLVE_REQUEST(specifier\x2C base);\x0d\n      setOwnProperty(error\x2C 'cause'\x2C cause);\x0d\n      throw error;\x0d\n    }\x0d\n  } else if (protocol === 'file:' && specifier[0] === '#') {\x0d\n    resolved = packageImportsResolve(specifier\x2C base\x2C conditions);\x0d\n  } else {\x0d\n    try {\x0d\n      resolved = new URL(specifier);\x0d\n    } catch (cause) {\x0d\n      if (isRemote && !BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        const error = new ERR_UNSUPPORTED_RESOLVE_REQUEST(specifier\x2C base);\x0d\n        setOwnProperty(error\x2C 'cause'\x2C cause);\x0d\n        throw error;\x0d\n      }\x0d\n      resolved = packageResolve(specifier\x2C base\x2C conditions);\x0d\n    }\x0d\n  }\x0d\n  if (resolved.protocol !== 'file:') {\x0d\n    return resolved;\x0d\n  }\x0d\n  return finalizeResolution(resolved\x2C base\x2C preserveSymlinks);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Try to resolve an import as a CommonJS module.\x0d\n * @param {string} specifier - The specifier to resolve.\x0d\n * @param {string} parentURL - The base URL.\x0d\n * @returns {string | Buffer | false}\x0d\n */\x0d\nfunction resolveAsCommonJS(specifier\x2C parentURL) {\x0d\n  try {\x0d\n    const parent = fileURLToPath(parentURL);\x0d\n    const tmpModule = new CJSModule(parent\x2C null);\x0d\n    tmpModule.paths = CJSModule._nodeModulePaths(parent);\x0d\n\x0d\n    let found = CJSModule._resolveFilename(specifier\x2C tmpModule\x2C false);\x0d\n\x0d\n    // If it is a relative specifier return the relative path\x0d\n    // to the parent\x0d\n    if (isRelativeSpecifier(specifier)) {\x0d\n      const foundURL = pathToFileURL(found).pathname;\x0d\n      found = relativePosixPath(\x0d\n        StringPrototypeSlice(parentURL\x2C 'file://'.length\x2C StringPrototypeLastIndexOf(parentURL\x2C '/'))\x2C\x0d\n        foundURL);\x0d\n\x0d\n      // Add './' if the path does not start with '../'\x0d\n      // This should be a safe assumption because when loading\x0d\n      // esm modules there should be always a file specified so\x0d\n      // there should not be a specifier like '..' or '.'\x0d\n      if (!StringPrototypeStartsWith(found\x2C '../')) {\x0d\n        found = `./${found}`;\x0d\n      }\x0d\n    } else if (isBareSpecifier(specifier)) {\x0d\n      // If it is a bare specifier return the relative path within the\x0d\n      // module\x0d\n      const i = StringPrototypeIndexOf(specifier\x2C '/');\x0d\n      const pkg = i === -1 ? specifier : StringPrototypeSlice(specifier\x2C 0\x2C i);\x0d\n      const needle = `${sep}node_modules${sep}${pkg}${sep}`;\x0d\n      const index = StringPrototypeLastIndexOf(found\x2C needle);\x0d\n      if (index !== -1) {\x0d\n        found = pkg + '/' + ArrayPrototypeJoin(\x0d\n          ArrayPrototypeMap(\x0d\n            StringPrototypeSplit(StringPrototypeSlice(found\x2C index + needle.length)\x2C sep)\x2C\x0d\n            // Escape URL-special characters to avoid generating a incorrect suggestion\x0d\n            encodeURIComponent\x2C\x0d\n          )\x2C\x0d\n          '/'\x2C\x0d\n        );\x0d\n      } else {\x0d\n        found = `${pathToFileURL(found)}`;\x0d\n      }\x0d\n    }\x0d\n    return found;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Throw an error if an import is not allowed.\x0d\n * TODO(@JakobJingleheimer): de-dupe `specifier` & `parsed`\x0d\n * @param {string} specifier - The import specifier.\x0d\n * @param {URL} parsed - The parsed URL of the import specifier.\x0d\n * @param {URL} parsedParentURL - The parsed URL of the parent module.\x0d\n * @throws {ERR_NETWORK_IMPORT_DISALLOWED} - If the import is disallowed.\x0d\n */\x0d\nfunction checkIfDisallowedImport(specifier\x2C parsed\x2C parsedParentURL) {\x0d\n  if (parsedParentURL) {\x0d\n    // Avoid accessing the `protocol` property due to the lazy getters.\x0d\n    const parentProtocol = parsedParentURL.protocol;\x0d\n    if (\x0d\n      parentProtocol === 'http:' ||\x0d\n      parentProtocol === 'https:'\x0d\n    ) {\x0d\n      if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n        // Avoid accessing the `protocol` property due to the lazy getters.\x0d\n        const parsedProtocol = parsed?.protocol;\x0d\n        // data: and blob: disallowed due to allowing file: access via\x0d\n        // indirection\x0d\n        if (parsedProtocol &&\x0d\n          parsedProtocol !== 'https:' &&\x0d\n          parsedProtocol !== 'http:'\x0d\n        ) {\x0d\n          throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n            specifier\x2C\x0d\n            parsedParentURL\x2C\x0d\n            'remote imports cannot import from a local location.'\x2C\x0d\n          );\x0d\n        }\x0d\n\x0d\n        return { url: parsed.href };\x0d\n      }\x0d\n      if (BuiltinModule.canBeRequiredWithoutScheme(specifier)) {\x0d\n        throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n          specifier\x2C\x0d\n          parsedParentURL\x2C\x0d\n          'remote imports cannot import from a local location.'\x2C\x0d\n        );\x0d\n      }\x0d\n\x0d\n      throw new ERR_NETWORK_IMPORT_DISALLOWED(\x0d\n        specifier\x2C\x0d\n        parsedParentURL\x2C\x0d\n        'only relative and absolute specifiers are supported.'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Validate user-input in `context` supplied by a custom loader.\x0d\n * @param {string | URL | undefined} parentURL - The parent URL.\x0d\n */\x0d\nfunction throwIfInvalidParentURL(parentURL) {\x0d\n  if (parentURL === undefined) {\x0d\n    return; // Main entry point\x2C so no parent\x0d\n  }\x0d\n  if (typeof parentURL !== 'string' && !isURL(parentURL)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('parentURL'\x2C ['string'\x2C 'URL']\x2C parentURL);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Resolves the given specifier using the provided context\x2C which includes the parent URL and conditions.\x0d\n * Throws an error if the parent URL is invalid or if the resolution is disallowed by the policy manifest.\x0d\n * Otherwise\x2C attempts to resolve the specifier and returns the resulting URL and format.\x0d\n * @param {string} specifier - The specifier to resolve.\x0d\n * @param {object} [context={}] - The context object containing the parent URL and conditions.\x0d\n * @param {string} [context.parentURL] - The URL of the parent module.\x0d\n * @param {string[]} [context.conditions] - The conditions for resolving the specifier.\x0d\n */\x0d\nfunction defaultResolve(specifier\x2C context = {}) {\x0d\n  let { parentURL\x2C conditions } = context;\x0d\n  throwIfInvalidParentURL(parentURL);\x0d\n  if (parentURL && policy?.manifest) {\x0d\n    const redirects = policy.manifest.getDependencyMapper(parentURL);\x0d\n    if (redirects) {\x0d\n      const { resolve\x2C reaction } = redirects;\x0d\n      const destination = resolve(specifier\x2C new SafeSet(conditions));\x0d\n      let missing = true;\x0d\n      if (destination === true) {\x0d\n        missing = false;\x0d\n      } else if (destination) {\x0d\n        const href = destination.href;\x0d\n        return { __proto__: null\x2C url: href };\x0d\n      }\x0d\n      if (missing) {\x0d\n        // Prevent network requests from firing if resolution would be banned.\x0d\n        // Network requests can extract data by doing things like putting\x0d\n        // secrets in query params\x0d\n        reaction(new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n          parentURL\x2C\x0d\n          specifier\x2C\x0d\n          ArrayPrototypeJoin([...conditions]\x2C '\x2C '))\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsedParentURL;\x0d\n  if (parentURL) {\x0d\n    try {\x0d\n      parsedParentURL = new URL(parentURL);\x0d\n    } catch {\x0d\n      // Ignore exception\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let parsed\x2C protocol;\x0d\n  try {\x0d\n    if (shouldBeTreatedAsRelativeOrAbsolutePath(specifier)) {\x0d\n      parsed = new URL(specifier\x2C parsedParentURL);\x0d\n    } else {\x0d\n      parsed = new URL(specifier);\x0d\n    }\x0d\n\x0d\n    // Avoid accessing the `protocol` property due to the lazy getters.\x0d\n    protocol = parsed.protocol;\x0d\n    if (protocol === 'data:' ||\x0d\n      (experimentalNetworkImports &&\x0d\n        (\x0d\n          protocol === 'https:' ||\x0d\n          protocol === 'http:'\x0d\n        )\x0d\n      )\x0d\n    ) {\x0d\n      return { __proto__: null\x2C url: parsed.href };\x0d\n    }\x0d\n  } catch {\x0d\n    // Ignore exception\x0d\n  }\x0d\n\x0d\n  // There are multiple deep branches that can either throw or return; instead\x0d\n  // of duplicating that deeply nested logic for the possible returns\x2C DRY and\x0d\n  // check for a return. This seems the least gnarly.\x0d\n  const maybeReturn = checkIfDisallowedImport(\x0d\n    specifier\x2C\x0d\n    parsed\x2C\x0d\n    parsedParentURL\x2C\x0d\n  );\x0d\n\x0d\n  if (maybeReturn) { return maybeReturn; }\x0d\n\x0d\n  // This must come after checkIfDisallowedImport\x0d\n  protocol ??= parsed?.protocol;\x0d\n  if (protocol === 'node:') { return { __proto__: null\x2C url: specifier }; }\x0d\n\x0d\n\x0d\n  const isMain = parentURL === undefined;\x0d\n  if (isMain) {\x0d\n    parentURL = getCWDURL().href;\x0d\n\x0d\n    // This is the initial entry point to the program\x2C and --input-type has\x0d\n    // been passed as an option; but --input-type can only be used with\x0d\n    // --eval\x2C --print or STDIN string input. It is not allowed with file\x0d\n    // input\x2C to avoid user confusion over how expansive the effect of the\x0d\n    // flag should be (i.e. entry point only\x2C package scope surrounding the\x0d\n    // entry point\x2C etc.).\x0d\n    if (inputTypeFlag) { throw new ERR_INPUT_TYPE_NOT_ALLOWED(); }\x0d\n  }\x0d\n\x0d\n  conditions = getConditionsSet(conditions);\x0d\n  let url;\x0d\n  try {\x0d\n    url = moduleResolve(\x0d\n      specifier\x2C\x0d\n      parentURL\x2C\x0d\n      conditions\x2C\x0d\n      isMain ? preserveSymlinksMain : preserveSymlinks\x2C\x0d\n    );\x0d\n  } catch (error) {\x0d\n    // Try to give the user a hint of what would have been the\x0d\n    // resolved CommonJS module\x0d\n    if (error.code === 'ERR_MODULE_NOT_FOUND' ||\x0d\n        error.code === 'ERR_UNSUPPORTED_DIR_IMPORT') {\x0d\n      if (StringPrototypeStartsWith(specifier\x2C 'file://')) {\x0d\n        specifier = fileURLToPath(specifier);\x0d\n      }\x0d\n      decorateErrorWithCommonJSHints(error\x2C specifier\x2C parentURL);\x0d\n    }\x0d\n    throw error;\x0d\n  }\x0d\n\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    // Do NOT cast `url` to a string: that will work even when there are real\x0d\n    // problems\x2C silencing them\x0d\n    url: url.href\x2C\x0d\n    format: defaultGetFormatWithoutErrors(url\x2C context)\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n/**\x0d\n * Decorates the given error with a hint for CommonJS modules.\x0d\n * @param {Error} error - The error to decorate.\x0d\n * @param {string} specifier - The specifier that was attempted to be imported.\x0d\n * @param {string} parentURL - The URL of the parent module.\x0d\n */\x0d\nfunction decorateErrorWithCommonJSHints(error\x2C specifier\x2C parentURL) {\x0d\n  const found = resolveAsCommonJS(specifier\x2C parentURL);\x0d\n  if (found && found !== specifier) { // Don't suggest the same input the user provided.\x0d\n    // Modify the stack and message string to include the hint\x0d\n    const endOfFirstLine = StringPrototypeIndexOf(error.stack\x2C '\\n');\x0d\n    const hint = `Did you mean to import ${JSONStringify(found)}?`;\x0d\n    error.stack =\x0d\n      StringPrototypeSlice(error.stack\x2C 0\x2C endOfFirstLine) + '\\n' +\x0d\n      hint +\x0d\n      StringPrototypeSlice(error.stack\x2C endOfFirstLine);\x0d\n    error.message += `\\n${hint}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  decorateErrorWithCommonJSHints\x2C\x0d\n  defaultResolve\x2C\x0d\n  encodedSepRegEx\x2C\x0d\n  getPackageScopeConfig\x2C\x0d\n  getPackageType\x2C\x0d\n  packageExportsResolve\x2C\x0d\n  packageImportsResolve\x2C\x0d\n  throwIfInvalidParentURL\x2C\x0d\n  legacyMainResolve\x2C\x0d\n};\x0d\n\x0d\n// cycle\x0d\nconst {\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n} = require('internal/modules/esm/get_format');\x0d\n\x0d\nif (policy) {\x0d\n  const $defaultResolve = defaultResolve;\x0d\n  module.exports.defaultResolve = function defaultResolve(\x0d\n    specifier\x2C\x0d\n    context\x2C\x0d\n  ) {\x0d\n    const ret = $defaultResolve(specifier\x2C context);\x0d\n    // This is a preflight check to avoid data exfiltration by query params etc.\x0d\n    policy.manifest.mightAllow(ret.url\x2C () =>\x0d\n      new ERR_MANIFEST_DEPENDENCY_MISSING(\x0d\n        context.parentURL\x2C\x0d\n        specifier\x2C\x0d\n        context.conditions\x2C\x0d\n      )\x2C\x0d\n    );\x0d\n    return ret;\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x8c1d17d5fe,87,0,47075,C0O0C4O47075,,
code-creation,JS,10,185110,0x8c1d17e52e,1099, node:internal/modules/esm/resolve:1:1,0x8c1d17d578,~
code-source-info,0x8c1d17e52e
code-creation,Eval,10,185527,0x2bb6ec83e66,5, node:internal/modules/esm/package_config:1:1,0x2bb6ec83ce0,~
script-source,88,node:internal/modules/esm/package_config,'use strict';\x0d\n\x0d\nconst {\x0d\n  StringPrototypeEndsWith\x2C\x0d\n} = primordials;\x0d\nconst { URL\x2C fileURLToPath } = require('internal/url');\x0d\nconst packageJsonReader = require('internal/modules/package_json_reader');\x0d\n\x0d\n/**\x0d\n * @typedef {object} PackageConfig\x0d\n * @property {string} pjsonPath - The path to the package.json file.\x0d\n * @property {boolean} exists - Whether the package.json file exists.\x0d\n * @property {'none' | 'commonjs' | 'module'} type - The type of the package.\x0d\n * @property {string} [name] - The name of the package.\x0d\n * @property {string} [main] - The main entry point of the package.\x0d\n * @property {PackageTarget} [exports] - The exports configuration of the package.\x0d\n * @property {Record<string\x2C string | Record<string\x2C string>>} [imports] - The imports configuration of the package.\x0d\n */\x0d\n/**\x0d\n * @typedef {string | string[] | Record<string\x2C string | Record<string\x2C string>>} PackageTarget\x0d\n */\x0d\n\x0d\n/**\x0d\n * Returns the package configuration for the given resolved URL.\x0d\n * @param {URL | string} resolved - The resolved URL.\x0d\n * @returns {PackageConfig} - The package configuration.\x0d\n */\x0d\nfunction getPackageScopeConfig(resolved) {\x0d\n  let packageJSONUrl = new URL('./package.json'\x2C resolved);\x0d\n  while (true) {\x0d\n    const packageJSONPath = packageJSONUrl.pathname;\x0d\n    if (StringPrototypeEndsWith(packageJSONPath\x2C 'node_modules/package.json')) {\x0d\n      break;\x0d\n    }\x0d\n    const packageConfig = packageJsonReader.read(fileURLToPath(packageJSONUrl)\x2C {\x0d\n      __proto__: null\x2C\x0d\n      specifier: resolved\x2C\x0d\n      isESM: true\x2C\x0d\n    });\x0d\n    if (packageConfig.exists) {\x0d\n      return packageConfig;\x0d\n    }\x0d\n\x0d\n    const lastPackageJSONUrl = packageJSONUrl;\x0d\n    packageJSONUrl = new URL('../package.json'\x2C packageJSONUrl);\x0d\n\x0d\n    // Terminates at root where ../package.json equals ../../package.json\x0d\n    // (can't just check "/package.json" for Windows support).\x0d\n    if (packageJSONUrl.pathname === lastPackageJSONUrl.pathname) {\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n  const packageJSONPath = fileURLToPath(packageJSONUrl);\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    pjsonPath: packageJSONPath\x2C\x0d\n    exists: false\x2C\x0d\n    main: undefined\x2C\x0d\n    name: undefined\x2C\x0d\n    type: 'none'\x2C\x0d\n    exports: undefined\x2C\x0d\n    imports: undefined\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  getPackageScopeConfig\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ec83e66,88,0,2284,C0O0C4O2284,,
code-creation,JS,10,185684,0x2bb6ec83fa6,76, node:internal/modules/esm/package_config:1:1,0x2bb6ec83de0,~
code-source-info,0x2bb6ec83fa6,88,0,2284,C0O0C22O28C28O103C31O103C36O80C42O85C48O155C51O155C55O155C57O2234C64O2256C70O2249C75O2283,,
code-creation,Eval,10,186045,0x2bb6ec84efe,5, node:internal/modules/esm/get_format:1:1,0x2bb6ec84c58,~
script-source,89,node:internal/modules/esm/get_format,'use strict';\x0d\n\x0d\nconst {\x0d\n  RegExpPrototypeExec\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n} = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst {\x0d\n  extensionFormatMap\x2C\x0d\n  getFormatOfExtensionlessFile\x2C\x0d\n  mimeToFormat\x2C\x0d\n} = require('internal/modules/esm/formats');\x0d\n\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst { containsModuleSyntax } = internalBinding('contextify');\x0d\nconst { getPackageType } = require('internal/modules/esm/resolve');\x0d\nconst { fileURLToPath } = require('internal/url');\x0d\nconst { ERR_UNKNOWN_FILE_EXTENSION } = require('internal/errors').codes;\x0d\n\x0d\nconst protocolHandlers = {\x0d\n  '__proto__': null\x2C\x0d\n  'data:': getDataProtocolModuleFormat\x2C\x0d\n  'file:': getFileProtocolModuleFormat\x2C\x0d\n  'http:': getHttpProtocolModuleFormat\x2C\x0d\n  'https:': getHttpProtocolModuleFormat\x2C\x0d\n  'node:'() { return 'builtin'; }\x2C\x0d\n};\x0d\n\x0d\n/**\x0d\n * @param {URL} parsed\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction getDataProtocolModuleFormat(parsed) {\x0d\n  const { 1: mime } = RegExpPrototypeExec(\x0d\n    /^([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    parsed.pathname\x2C\x0d\n  ) || [ null\x2C null\x2C null ];\x0d\n\x0d\n  return mimeToFormat(mime);\x0d\n}\x0d\n\x0d\nconst DOT_CODE = 46;\x0d\nconst SLASH_CODE = 47;\x0d\n\x0d\n/**\x0d\n * Returns the file extension from a URL. Should give similar result to\x0d\n * `require('node:path').extname(require('node:url').fileURLToPath(url))`\x0d\n * when used with a `file:` URL.\x0d\n * @param {URL} url\x0d\n * @returns {string}\x0d\n */\x0d\nfunction extname(url) {\x0d\n  const { pathname } = url;\x0d\n  for (let i = pathname.length - 1; i > 0; i--) {\x0d\n    switch (StringPrototypeCharCodeAt(pathname\x2C i)) {\x0d\n      case SLASH_CODE:\x0d\n        return '';\x0d\n\x0d\n      case DOT_CODE:\x0d\n        return StringPrototypeCharCodeAt(pathname\x2C i - 1) === SLASH_CODE ? '' : StringPrototypeSlice(pathname\x2C i);\x0d\n    }\x0d\n  }\x0d\n  return '';\x0d\n}\x0d\n\x0d\n/**\x0d\n * Determine whether the given file URL is under a `node_modules` folder.\x0d\n * This function assumes that the input has already been verified to be a `file:` URL\x2C\x0d\n * and is a file rather than a folder.\x0d\n * @param {URL} url\x0d\n */\x0d\nfunction underNodeModules(url) {\x0d\n  if (url.protocol !== 'file:') { return false; } // We determine module types for other protocols based on MIME header\x0d\n\x0d\n  return StringPrototypeIncludes(url.pathname\x2C '/node_modules/');\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string; source?: Buffer}} context\x0d\n * @param {boolean} ignoreErrors\x0d\n * @returns {string}\x0d\n */\x0d\nfunction getFileProtocolModuleFormat(url\x2C context = { __proto__: null }\x2C ignoreErrors) {\x0d\n  const { source } = context;\x0d\n  const ext = extname(url);\x0d\n\x0d\n  if (ext === '.js') {\x0d\n    const packageType = getPackageType(url);\x0d\n    if (packageType !== 'none') {\x0d\n      return packageType;\x0d\n    }\x0d\n\x0d\n    // The controlling `package.json` file has no `type` field.\x0d\n    switch (getOptionValue('--experimental-default-type')) {\x0d\n      case 'module': { // The user explicitly passed `--experimental-default-type=module`.\x0d\n        // An exception to the type flag making ESM the default everywhere is that package scopes under `node_modules`\x0d\n        // should retain the assumption that a lack of a `type` field means CommonJS.\x0d\n        return underNodeModules(url) ? 'commonjs' : 'module';\x0d\n      }\x0d\n      case 'commonjs': { // The user explicitly passed `--experimental-default-type=commonjs`.\x0d\n        return 'commonjs';\x0d\n      }\x0d\n      default: { // The user did not pass `--experimental-default-type`.\x0d\n        // `source` is undefined when this is called from `defaultResolve`;\x0d\n        // but this gets called again from `defaultLoad`/`defaultLoadSync`.\x0d\n        if (getOptionValue('--experimental-detect-module')) {\x0d\n          return source ?\x0d\n            (containsModuleSyntax(`${source}`\x2C fileURLToPath(url)) ? 'module' : 'commonjs') :\x0d\n            null;\x0d\n        }\x0d\n        return 'commonjs';\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (ext === '') {\x0d\n    const packageType = getPackageType(url);\x0d\n    if (packageType === 'module') {\x0d\n      return getFormatOfExtensionlessFile(url);\x0d\n    }\x0d\n    if (packageType !== 'none') {\x0d\n      return packageType; // 'commonjs' or future package types\x0d\n    }\x0d\n\x0d\n    // The controlling `package.json` file has no `type` field.\x0d\n    switch (getOptionValue('--experimental-default-type')) {\x0d\n      case 'module': { // The user explicitly passed `--experimental-default-type=module`.\x0d\n        return underNodeModules(url) ? 'commonjs' : getFormatOfExtensionlessFile(url);\x0d\n      }\x0d\n      case 'commonjs': { // The user explicitly passed `--experimental-default-type=commonjs`.\x0d\n        return 'commonjs';\x0d\n      }\x0d\n      default: { // The user did not pass `--experimental-default-type`.\x0d\n        if (getOptionValue('--experimental-detect-module')) {\x0d\n          if (!source) { return null; }\x0d\n          const format = getFormatOfExtensionlessFile(url);\x0d\n          if (format === 'module') {\x0d\n            return containsModuleSyntax(`${source}`\x2C fileURLToPath(url)) ? 'module' : 'commonjs';\x0d\n          }\x0d\n          return format;\x0d\n        }\x0d\n        return 'commonjs';\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const format = extensionFormatMap[ext];\x0d\n  if (format) { return format; }\x0d\n\x0d\n  // Explicit undefined return indicates load hook should rerun format check\x0d\n  if (ignoreErrors) { return undefined; }\x0d\n  const filepath = fileURLToPath(url);\x0d\n  throw new ERR_UNKNOWN_FILE_EXTENSION(ext\x2C filepath);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | undefined} only works when enabled\x0d\n */\x0d\nfunction getHttpProtocolModuleFormat(url\x2C context) {\x0d\n  if (experimentalNetworkImports) {\x0d\n    const { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n    return PromisePrototypeThen(\x0d\n      PromiseResolve(fetchModule(url\x2C context))\x2C\x0d\n      (entry) => {\x0d\n        return mimeToFormat(entry.headers['content-type']);\x0d\n      }\x2C\x0d\n    );\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormatWithoutErrors(url\x2C context) {\x0d\n  const protocol = url.protocol;\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C protocol)) {\x0d\n    return null;\x0d\n  }\x0d\n  return protocolHandlers[protocol](url\x2C context\x2C true);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url\x0d\n * @param {{parentURL: string}} context\x0d\n * @returns {Promise<string> | string | undefined} only works when enabled\x0d\n */\x0d\nfunction defaultGetFormat(url\x2C context) {\x0d\n  const protocol = url.protocol;\x0d\n  if (!ObjectPrototypeHasOwnProperty(protocolHandlers\x2C protocol)) {\x0d\n    return null;\x0d\n  }\x0d\n  return protocolHandlers[protocol](url\x2C context\x2C false);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultGetFormat\x2C\x0d\n  defaultGetFormatWithoutErrors\x2C\x0d\n  extensionFormatMap\x2C\x0d\n  extname\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ec84efe,89,0,6880,C0O0C4O6880,,
code-creation,JS,10,186425,0x2bb6ec8540e,359, node:internal/modules/esm/get_format:1:1,0x2bb6ec84e78,~
code-source-info,0x2bb6ec8540e,89,0,6880,C0O0C103O28C109O52C115O86C121O111C127O130C133O158C139O188C145O256C151O256C156O237C162O372C168O372C173O297C179O320C185O353C191O454C197O454C201O454C203O538C206O538C211O513C217O597C223O597C228O578C234O665C240O665C245O647C251O730C257O730C262O756C267O699C273O792C280O828C286O869C292O910C298O952C302O984C312O792C314O1331C316O1331C318O1355C320O1355C322O6766C329O6788C335O6809C341O6843C347O6866C353O6781C358O6879,,
code-creation,Eval,10,186643,0x2bb6ec861a6,5, node:internal/modules/esm/formats:1:1,0x2bb6ec86000,~
script-source,90,node:internal/modules/esm/formats,'use strict';\x0d\n\x0d\nconst { RegExpPrototypeExec } = primordials;\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst pathModule = require('path');\x0d\nconst fsBindings = internalBinding('fs');\x0d\nconst { fs: fsConstants } = internalBinding('constants');\x0d\n\x0d\nconst experimentalWasmModules = getOptionValue('--experimental-wasm-modules');\x0d\n\x0d\nconst extensionFormatMap = {\x0d\n  '__proto__': null\x2C\x0d\n  '.cjs': 'commonjs'\x2C\x0d\n  '.js': 'module'\x2C\x0d\n  '.json': 'json'\x2C\x0d\n  '.mjs': 'module'\x2C\x0d\n};\x0d\n\x0d\nif (experimentalWasmModules) {\x0d\n  extensionFormatMap['.wasm'] = 'wasm';\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {string} mime\x0d\n * @returns {string | null}\x0d\n */\x0d\nfunction mimeToFormat(mime) {\x0d\n  if (\x0d\n    RegExpPrototypeExec(\x0d\n      /^\\s*(text|application)\\/javascript\\s*(;\\s*charset=utf-?8\\s*)?$/i\x2C\x0d\n      mime\x2C\x0d\n    ) !== null\x0d\n  ) { return 'module'; }\x0d\n  if (mime === 'application/json') { return 'json'; }\x0d\n  if (experimentalWasmModules && mime === 'application/wasm') { return 'wasm'; }\x0d\n  return null;\x0d\n}\x0d\n\x0d\n/**\x0d\n * For extensionless files in a `module` package scope\x2C or a default `module` scope enabled by the\x0d\n * `--experimental-default-type` flag\x2C we check the file contents to disambiguate between ES module JavaScript and Wasm.\x0d\n * We do this by taking advantage of the fact that all Wasm files start with the header `0x00 0x61 0x73 0x6d` (`_asm`).\x0d\n * @param {URL} url\x0d\n */\x0d\nfunction getFormatOfExtensionlessFile(url) {\x0d\n  if (!experimentalWasmModules) { return 'module'; }\x0d\n\x0d\n  const path = pathModule.toNamespacedPath(getValidatedPath(url));\x0d\n\x0d\n  switch (fsBindings.getFormatOfExtensionlessFile(path)) {\x0d\n    case fsConstants.EXTENSIONLESS_FORMAT_WASM:\x0d\n      return 'wasm';\x0d\n    default:\x0d\n      return 'module';\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  extensionFormatMap\x2C\x0d\n  getFormatOfExtensionlessFile\x2C\x0d\n  mimeToFormat\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ec861a6,90,0,1861,C0O0C4O1861,,
code-creation,JS,10,186778,0x2bb6ec863fe,153, node:internal/modules/esm/formats:1:1,0x2bb6ec86120,~
code-source-info,0x2bb6ec863fe,90,0,1861,C0O0C33O25C39O90C42O90C47O71C52O149C55O149C60O128C66O199C69O199C73O199C75O236C78O236C82O236C84O288C87O288C92O272C98O353C101O353C105O353C107O430C112O545C116O579C118O607C122O1764C129O1786C135O1809C141O1842C147O1779C152O1860,,
tick,0x7ff6cc00dc18,187065,0,0x0,3,0x7ff6cbdbb8d0,0x8c1d17ad6a,0x8c1d17a6b2,0x8c1d17a4f9,0x8c1d17a2f9,0x8c1d17a172,0x8c1d1717c7,0x8c1d16b4d7,0x1c66f8e4a48,0x2bcf6affdbf
code-creation,JS,10,187164,0x2bb6ec86cae,627,defaultResolve node:internal/modules/esm/resolve:1064:24,0x8c1d17de50,~
code-source-info,0x2bb6ec86cae
code-creation,JS,10,187332,0x2bb6ec89846,49,throwIfInvalidParentURL node:internal/modules/esm/resolve:1046:33,0x8c1d17de00,~
code-source-info,0x2bb6ec89846,87,40677,40925,C0O40694C4O40730C5O40737C6O40780C14O40818C17O40818C23O40843C41O40849C46O40843C48O40924,,
code-creation,JS,10,187391,0x2bb6ec89966,31,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:883:49,0x8c1d17dcc0,~
code-source-info,0x2bb6ec89966,87,34686,34833,C0O34703C2O34717C7O34727C8O34740C9O34746C10O34759C16O34763C21O34774C22O34786C23O34792C26O34799C30O34830,,
code-creation,JS,10,187456,0x2bb6ec89a7e,81,isRelativeSpecifier node:internal/modules/esm/resolve:869:29,0x8c1d17dc70,~
code-source-info,0x2bb6ec89a7e,87,34224,34483,C0O34241C1O34254C7O34258C12O34288C19O34295C26O34313C32O34317C37O34328C38O34340C39O34348C41O34361C47O34365C52O34397C59O34404C66O34422C72O34426C77O34437C78O34449C79O34467C80O34480,,
code-creation,JS,10,187556,0x2bb6ec89bfe,37,get protocol node:internal/url:949:15,0x3fcdefa2510,~
code-source-info,0x2bb6ec89bfe,32,28756,28850,C0O28766C9O28799C13O28808C22O28822C26O28831C31O28773C36O28845,,
code-creation,JS,10,187644,0x2bb6ec89e0e,164,checkIfDisallowedImport node:internal/modules/esm/resolve:999:33,0x8c1d17ddb0,~
code-source-info,0x2bb6ec89e0e,87,39118,40499,C0O39160C4O39300C9O39315C11O39342C18O39379C23O39408C26O39412C32O39575C39O39581C47O39698C51O39746C58O39788C63O39824C79O39830C84O39824C85O40023C90O40044C100O40051C101O40068C106O40086C111O40086C118O40136C134O40142C139O40136C140O40323C156O40329C161O40323C163O40498,,
code-creation,JS,10,187745,0x2bb6ec8a026,121,getCWDURL node:internal/util:357:19,0x3fcdef87740,~
code-source-info,0x2bb6ec8a026,16,10361,10873,C0O10385C6O10385C11O10377C16O10431C22O10431C27O10413C32O10465C37O10655C40O10669C45O10669C53O10659C54O10694C62O10708C69O10704C75O10738C82O10765C84O10761C89O10783C91O10813C95O10795C102O10793C108O10826C110O10836C116O10853C120O10870,,
code-creation,JS,10,187870,0x2bb6ec8a1f6,68,getConditionsSet node:internal/modules/esm/utils:87:26,0x3fcdefbe700,~
code-source-info,0x2bb6ec8a1f6,66,2185,2528,C0O2203C7O2250C10O2246C15O2281C20O2286C26O2321C42O2327C47O2321C48O2452C55O2459C60O2483C61O2492C64O2499C67O2525,,
code-creation,JS,10,187936,0x2bb6ec8a336,21,getDefaultConditionsSet node:internal/modules/esm/utils:60:33,0x3fcdefbe660,~
code-source-info,0x2bb6ec8a336,66,1448,1534,C0O1456C7O1463C10O1484C12O1456C16O1503C20O1531,,
code-creation,JS,10,188055,0x2bb6ec8a546,350,moduleResolve node:internal/modules/esm/resolve:896:23,0x8c1d17dd10,~
code-source-info,0x2bb6ec8a
code-creation,JS,10,188249,0x2bb6ec8aa56,445,finalizeResolution node:internal/modules/esm/resolve:237:28,0x8c1d17d770,~
code-source-info,0x2bb6ec8aa
code-creation,JS,10,188393,0x2bb6ec8ae46,88,get pathname node:internal/url:1038:15,0x3fcdefa2a30,~
code-source-info,0x2bb6ec8ae46,32,31290,31578,C0O31304C2O31317C4O31326C8O31335C14O31355C16O31369C20O31378C27O31404C29O31413C33O31422C39O31440C41O31454C45O31463C50O31487C59O31520C63O31529C70O31540C74O31549C82O31494C87O31573,,
code-creation,JS,10,188459,0x2bb6ec8afce,20,get hasSearch node:internal/url:196:16,0x3fcdefa13c8,~
code-source-info,0x2bb6ec8afce,32,4323,4387,C0O4345C7O4362C12O4373C15O4358C19O4382,,
code-creation,JS,10,188506,0x2bb6ec8b0e6,20,get hasHash node:internal/url:200:14,0x3fcdefa1438,~
code-source-info,0x2bb6ec8b0e6,32,4404,4466,C0O4426C7O4441C12O4452C15O4437C19O4461,,
code-creation,JS,10,188630,0x2bb6ec8b2de,106,fileURLToPath node:internal/url:1455:23,0x3fcdefa3508,~
code-source-info,0x2bb6ec8b2de,32,43679,44004,C0O43691C6O43726C13O43733C22O43756C25O43761C31O43779C49O43785C54O43779C55O43856C62O43865C67O43883C77O43889C82O43883C83O43928C92O43947C101O43975C105O44001,,
code-creation,JS,10,188754,0x2bb6ec8b55e,272,getPathFromURLWin32 node:internal/url:1402:29,0x3fcdefa3468,~
code-source-info,0x2bb6ec8b55e
code-creation,JS,10,188865,0x2bb6ec8b82e,78,get hostname node:internal/url:1008:15,0x3fcdefa2880,~
code-source-info,0x2bb6ec8b82e,32,30516,30793,C0O30541C2O30546C6O30555C11O30631C13O30640C17O30649C24O30653C30O30664C35O30682C40O30706C49O30739C53O30748C60O30769C64O30778C72O30713C77O30788,,
code-creation,JS,10,188938,0x2bb6ec8b976,23,SideEffectFreeRegExpPrototypeSymbolReplace node:internal/util:765:52,0x3fcdef88e88,~
code-source-info,0x2bb6ec8b976,16,21858,21963,C0O21892C3O21899C10O21924C12O21923C16O21938C22O21960,,
code-creation,JS,10,189025,0x2bb6ec8bb46,216,getCrossRelmRegex node:internal/util:746:27,0x3fcdef88e38,~
code-source-info,0x2bb6ec8bb46,16,21021,21803,C0O21049C5O21066C10O21066C16O21081C18O21093C20O21107C21O21130C24O21137C29O21141C35O21178C44O21200C49O21204C55O21237C64O21259C69O21263C75O21300C84O21322C89O21326C95O21362C104O21384C109O21388C115O21421C124O21443C129O21447C135O21481C144O21503C149O21507C155O21540C164O21607C167O21607C171O21580C176O21654C178O21681C181O21681C191O21654C197O21730C202O21747C207O21747C213O21778C215O21800,,
code-creation,RegExp,3,189389,0x7ff64c447940,1560,^(?:[a-zA-Z]:|[\\\\/]{2}[^\\\\/]+[\\\\/][^\\\\/]+)?[\\\\/]*
code-creation,JS,10,189869,0x2bb6ec8bf16,27,get search node:internal/url:1055:13,0x3fcdefa2b10,~
code-source-info,0x2bb6ec8bf16,32,31778,31969,C0O31888C2O31893C8O31919C13O31928C15O31940C21O31961C26O31964,,
code-creation,JS,10,189947,0x2bb6ec8c04e,116,#getSearchFromContext node:internal/url:826:24,0x3fcdefa2240,~
code-source-info,0x2bb6ec8c04e,32,24365,24684,C0O24375C2O24385C6O24394C12O24405C14O24415C15O24434C17O24439C21O24448C26O24453C31O24466C33O24475C37O24484C43O24493C45O24507C49O24516C54O24533C56O24551C60O24560C64O24544C70O24573C75O24579C77O24589C78O24595C87O24628C91O24637C98O24648C102O24657C110O24602C115O24679,,
code-creation,JS,10,190033,0x2bb6ec8c226,87,get hash node:internal/url:1079:11,0x3fcdefa2c60,~
code-source-info,0x2bb6ec8c226,32,32585,32797,C0O32595C2O32605C6O32614C14O32631C18O32640C23O32645C30O32659C34O32668C38O32652C44O32679C49O32695C51O32705C52O32718C61O32751C65O32760C72O32771C76O32780C81O32725C86O32792,,
code-creation,JS,10,190151,0x2bb6ec8c44e,82,set search node:internal/url:1061:13,0x3fcdefa2b80,~
code-source-info,0x2bb6ec8c44e,32,31985,32184,C0O32013C7O32024C14O32036C18O32045C27O32051C30O32065C39O32074C44O32105C46O32074C51O32024C57O32121C59O32140C61O32145C75O32159C81O32183,,
code-creation,JS,10,190232,0x2bb6ec8c5ce,68,set hash node:internal/url:1086:11,0x3fcdefa2cc8,~
code-source-info,0x2bb6ec8c5ce,32,32811,32973,C0O32839C7O32850C14O32862C18O32871C27O32877C30O32891C37O32901C39O32850C45O32916C47O32935C49O32940C61O32954C67O32972,,
code-creation,JS,10,190331,0x2bb6ec8c716,49,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:185:39,0x2bb6ec850c0,~
code-source-info,0x2bb6ec8c716,89,6178,6381,C0O6219C5O6232C12O6267C15O6237C22O6303C23O6315C24O6324C31O6347C43O6357C48O6378,,
code-creation,JS,10,190474,0x2bb6ec8cf56,390,getFileProtocolModuleFormat node:internal/modules/esm/get_format:90:37,0x2bb6ec85020,~
code-source-info,0x2bb6ec8cf56,89,2616,5490,C7O2616C19O2680C24O2715C27O2715C32O2734C34O2742C39O2780C44O2780C49O2806C51O2822C56O2843C58O2862C59O2942C67O2950C88O3307C91O3314C103O3360C104O3475C106O3493C107O3740C115O3744C121O3805C127O3835C132O3859C136O3869C139O3869C144O3835C160O3934C161O3955C163O3973C164O4000C166O4008C171O4043C176O4043C181O4069C183O4085C188O4108C193O4115C197O4149C198O4162C200O4178C205O4199C207O4218C208O4336C216O4344C237O4494C240O4501C252O4538C255O4538C259O4572C260O4687C262O4705C263O4798C271O4802C277O4863C281O4878C282O4890C283O4919C288O4919C293O4965C295O4976C300O5005C307O5036C311O5046C314O5046C319O5012C332O5090C333O5115C335O5129C336O5150C338O5168C339O5210C346O5228C350O5238C352O5252C354O5266C355O5352C359O5372C360O5389C361O5412C366O5412C371O5435C384O5441C389O5435,,
code-creation,JS,10,190625,0x2bb6ec8d2be,106,extname node:internal/modules/esm/get_format:58:17,0x2bb6ec84f80,~
code-source-info,0x2bb6ec8d2be,89,1613,1968,C0O1632C5O1675C9O1682C13O1689C14O1689C19O1706C24O1714C32O1768C41O1814C50O1789C52O1799C53O1833C60O1878C64O1840C72O1887C74O1883C85O1905C88O1905C93O1939C94O1695C99O1653C103O1955C105O1965,,
code-creation,JS,10,190700,0x2bb6ec8d43e,15,getPackageType node:internal/modules/esm/resolve:748:24,0x8c1d17db30,~
code-source-info,0x2bb6ec8d43e,87,30026,30119,C0O30059C5O30059C10O30111C14O30116,,
code-creation,JS,10,190792,0x2bb6ec8d6de,174,getPackageScopeConfig node:internal/modules/esm/package_config:28:31,0x2bb6ec83e98,~
code-source-info,0x2bb6ec8d6de,88,1129,2228,C0O1166C13O1166C19O1265C24O1280C32O1284C39O1364C41O1405C46O1423C53O1428C56O1428C68O1503C72O1423C79O1565C85O1582C87O1603C88O1645C91O1666C104O1683C110O1892C115O1924C119O1901C124O1943C126O1206C130O1989C135O1989C140O2023C147O2070C152O2118C157O2140C162O2184C167O2209C173O2225,,
code-creation,JS,10,190879,0x2bb6ec8dafe,24,toString node:internal/url:898:11,0x3fcdefa2380,~
code-source-info,0x2bb6ec8dafe,32,27213,27394,C0O27323C2O27328C8O27354C13O27363C15O27375C19O27384C23O27389,,
code-creation,JS,11,191022,0x7ff64c447f80,252,get protocol node:internal/url:949:15,0x3fcdefa2510,^
code-source-info,0x7ff64c447f80,32,28756,28850,,,
code-creation,JS,11,191058,0x7ff64c4480c0,272, node:internal/validators:160:40,0x3fcdef85408,^
code-source-info,0x7ff64c4480c0,15,4529,4644,,,
code-creation,JS,11,191106,0x7ff64c448200,1900,toNamespacedPath node:path:622:19,0x3fcdef9f540,^
code-source-info,0x7ff64c448200,30,20189,21304,,,
code-creation,JS,11,191157,0x7ff64c448980,2112,getPathFromURLWin32 node:internal/url:1402:29,0x3fcdefa3468,^
code-source-info,0x7ff64c448980,32,41610,43112,,,
code-creation,JS,11,191185,0x7ff64c449200,188,get hasSearch node:internal/url:196:16,0x3fcdefa13c8,^
code-source-info,0x7ff64c449200,32,4323,4387,,,
code-creation,JS,11,191210,0x7ff64c449300,188,get hasHash node:internal/url:200:14,0x3fcdefa1438,^
code-source-info,0x7ff64c449300,32,4404,4466,,,
code-creation,JS,10,191286,0x2bb6ec8e31e,29,set node:internal/modules/esm/module_map:76:6,0x8c1d173fe8,~
code-source-info,0x2bb6ec8e31e,84,2551,2680,C0O2593C2O2598C14O2621C22O2648C26O2663C28O2675,,
code-creation,JS,10,191369,0x2bb6ec8e51e,175,handleMainPromise node:internal/modules/run_main:107:33,0x220dba815d0,~
code-source-info,0x2bb6ec8e51e,69,3807,4059,C10O3807C18O3861C24O3861C29O3835C34O3917C37O3925C45O3925C54O3970C64O3977C101O4012C104O4020C112O4020C152O4058,,
code-creation,Eval,10,191473,0x2bb6ec8e85e,5, node:internal/modules/esm/handle_process_exit:1:1,0x2bb6ec8e6f8,~
script-source,91,node:internal/modules/esm/handle_process_exit,'use strict';\x0d\n\x0d\nconst { exitCodes: { kUnfinishedTopLevelAwait } } = internalBinding('errors');\x0d\n\x0d\n/**\x0d\n * Handle a Promise from running code that potentially does Top-Level Await.\x0d\n * In that case\x2C it makes sense to set the exit code to a specific non-zero value\x0d\n * if the main code never finishes running.\x0d\n */\x0d\nfunction handleProcessExit() {\x0d\n  process.exitCode ??= kUnfinishedTopLevelAwait;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  handleProcessExit\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ec8e85e,91,0,448,C0O0C4O448,,
code-creation,JS,10,191534,0x2bb6ec8e98e,55, node:internal/modules/esm/handle_process_exit:1:1,0x2bb6ec8e7d8,~
code-source-info,0x2bb6ec8e98e,91,0,448,C0O0C17O69C20O69C25O36C30O38C36O402C43O424C49O417C54O447,,
code-creation,JS,10,191682,0x2bb6ec8ecce,113,getJobFromResolveResult node:internal/modules/esm/loader:243:26,0x8c1d16cef0,~
code-source-info,0x2bb6ec8ecce,83,7929,8505,C0O7995C5O8000C10O8078C21O8136C26O8146C31O8180C36O8146C43O8255C47O8300C52O8310C59O8336C69O8310C74O8358C78O8390C80O8401C104O8417C110O8489C112O8500,,
code-creation,JS,10,191758,0x2bb6ec8ee6e,78,get node:internal/modules/esm/module_map:91:6,0x8c1d1740d8,~
code-source-info,0x2bb6ec8ee6e,84,3014,3158,C11O3027C18O3055C28O3055C33O3088C43O3088C48O3123C50O3136C61O3136C71O3146C77O3153,,
code-creation,JS,10,191886,0x2bb6ec8f236,218,#createModuleJob node:internal/modules/esm/loader:271:19,0x8c1d16cd10,~
code-source-info,0x2bb6ec8f236,83,9172,10387,C0O9172C15O9251C19O9251C21O9596C28O9598C34O9606C40O9596C42O9656C57O9852C66O9895C72O9895C77O9942C82O9954C87O9958C98O9995C104O10010C109O10018C119O10041C128O10042C138O10018C143O10083C151O10083C156O10144C180O10144C186O10311C189O10316C194O10326C199O10352C210O10326C215O10371C217O10382,,
code-creation,Eval,10,192234,0x2bb6ec8fc46,5, node:internal/modules/esm/module_job:1:1,0x2bb6ec8f950,~
script-source,92,node:internal/modules/esm/module_job,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSome\x2C\x0d\n  FunctionPrototype\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  ReflectApply\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  SafePromiseAllReturnArrayLike\x2C\x0d\n  SafePromiseAllReturnVoid\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { ModuleWrap } = internalBinding('module_wrap');\x0d\n\x0d\nconst { decorateErrorStack\x2C kEmptyObject } = require('internal/util');\x0d\nconst {\x0d\n  getSourceMapsEnabled\x2C\x0d\n} = require('internal/source_map/source_map_cache');\x0d\nconst assert = require('internal/assert');\x0d\nconst resolvedPromise = PromiseResolve();\x0d\nconst {\x0d\n  setHasStartedUserESMExecution\x2C\x0d\n} = require('internal/modules/helpers');\x0d\nconst noop = FunctionPrototype;\x0d\n\x0d\nlet hasPausedEntry = false;\x0d\n\x0d\nconst CJSGlobalLike = [\x0d\n  'require'\x2C\x0d\n  'module'\x2C\x0d\n  'exports'\x2C\x0d\n  '__filename'\x2C\x0d\n  '__dirname'\x2C\x0d\n];\x0d\nconst isCommonJSGlobalLikeNotDefinedError = (errorMessage) =>\x0d\n  ArrayPrototypeSome(\x0d\n    CJSGlobalLike\x2C\x0d\n    (globalLike) => errorMessage === `${globalLike} is not defined`\x2C\x0d\n  );\x0d\n\x0d\n/* A ModuleJob tracks the loading of a single Module\x2C and the ModuleJobs of\x0d\n * its dependencies\x2C over time. */\x0d\nclass ModuleJob {\x0d\n  // `loader` is the Loader instance used for loading dependencies.\x0d\n  // `moduleProvider` is a function\x0d\n  constructor(loader\x2C url\x2C importAttributes = { __proto__: null }\x2C\x0d\n              moduleProvider\x2C isMain\x2C inspectBrk\x2C sync = false) {\x0d\n    this.loader = loader;\x0d\n    this.importAttributes = importAttributes;\x0d\n    this.isMain = isMain;\x0d\n    this.inspectBrk = inspectBrk;\x0d\n\x0d\n    this.url = url;\x0d\n\x0d\n    this.module = undefined;\x0d\n    // Expose the promise to the ModuleWrap directly for linking below.\x0d\n    // `this.module` is also filled in below.\x0d\n    this.modulePromise = ReflectApply(moduleProvider\x2C loader\x2C [url\x2C isMain]);\x0d\n\x0d\n    if (sync) {\x0d\n      this.module = this.modulePromise;\x0d\n      this.modulePromise = PromiseResolve(this.module);\x0d\n    } else {\x0d\n      this.modulePromise = PromiseResolve(this.modulePromise);\x0d\n    }\x0d\n\x0d\n    // Wait for the ModuleWrap instance being linked with all dependencies.\x0d\n    const link = async () => {\x0d\n      this.module = await this.modulePromise;\x0d\n      assert(this.module instanceof ModuleWrap);\x0d\n\x0d\n      // Explicitly keeping track of dependency jobs is needed in order\x0d\n      // to flatten out the dependency graph below in `_instantiate()`\x2C\x0d\n      // so that circular dependencies can't cause a deadlock by two of\x0d\n      // these `link` callbacks depending on each other.\x0d\n      const dependencyJobs = [];\x0d\n      const promises = this.module.link(async (specifier\x2C attributes) => {\x0d\n        const job = await this.loader.getModuleJob(specifier\x2C url\x2C attributes);\x0d\n        ArrayPrototypePush(dependencyJobs\x2C job);\x0d\n        return job.modulePromise;\x0d\n      });\x0d\n\x0d\n      if (promises !== undefined) {\x0d\n        await SafePromiseAllReturnVoid(promises);\x0d\n      }\x0d\n\x0d\n      return SafePromiseAllReturnArrayLike(dependencyJobs);\x0d\n    };\x0d\n    // Promise for the list of all dependencyJobs.\x0d\n    this.linked = link();\x0d\n    // This promise is awaited later anyway\x2C so silence\x0d\n    // 'unhandled rejection' warnings.\x0d\n    PromisePrototypeThen(this.linked\x2C undefined\x2C noop);\x0d\n\x0d\n    // instantiated == deep dependency jobs wrappers are instantiated\x2C\x0d\n    // and module wrapper is instantiated.\x0d\n    this.instantiated = undefined;\x0d\n  }\x0d\n\x0d\n  instantiate() {\x0d\n    if (this.instantiated === undefined) {\x0d\n      this.instantiated = this._instantiate();\x0d\n    }\x0d\n    return this.instantiated;\x0d\n  }\x0d\n\x0d\n  async _instantiate() {\x0d\n    const jobsInGraph = new SafeSet();\x0d\n    const addJobsToDependencyGraph = async (moduleJob) => {\x0d\n      if (jobsInGraph.has(moduleJob)) {\x0d\n        return;\x0d\n      }\x0d\n      jobsInGraph.add(moduleJob);\x0d\n      const dependencyJobs = await moduleJob.linked;\x0d\n      return SafePromiseAllReturnVoid(dependencyJobs\x2C addJobsToDependencyGraph);\x0d\n    };\x0d\n    await addJobsToDependencyGraph(this);\x0d\n\x0d\n    try {\x0d\n      if (!hasPausedEntry && this.inspectBrk) {\x0d\n        hasPausedEntry = true;\x0d\n        const initWrapper = internalBinding('inspector').callAndPauseOnStart;\x0d\n        initWrapper(this.module.instantiate\x2C this.module);\x0d\n      } else {\x0d\n        this.module.instantiate();\x0d\n      }\x0d\n    } catch (e) {\x0d\n      decorateErrorStack(e);\x0d\n      // TODO(@bcoe): Add source map support to exception that occurs as result\x0d\n      // of missing named export. This is currently not possible because\x0d\n      // stack trace originates in module_job\x2C not the file itself. A hidden\x0d\n      // symbol with filename could be set in node_errors.cc to facilitate this.\x0d\n      if (!getSourceMapsEnabled() &&\x0d\n          StringPrototypeIncludes(e.message\x2C\x0d\n                                  ' does not provide an export named')) {\x0d\n        const splitStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n        const parentFileUrl = RegExpPrototypeSymbolReplace(\x0d\n          /:\\d+$/\x2C\x0d\n          splitStack[0]\x2C\x0d\n          ''\x2C\x0d\n        );\x0d\n        const { 1: childSpecifier\x2C 2: name } = RegExpPrototypeExec(\x0d\n          /module '(.*)' does not provide an export named '(.+)'/\x2C\x0d\n          e.message);\x0d\n        const { url: childFileURL } = await this.loader.resolve(\x0d\n          childSpecifier\x2C\x0d\n          parentFileUrl\x2C\x0d\n          kEmptyObject\x2C\x0d\n        );\x0d\n        let format;\x0d\n        try {\x0d\n          // This might throw for non-CommonJS modules because we aren't passing\x0d\n          // in the import attributes and some formats require them; but we only\x0d\n          // care about CommonJS for the purposes of this error message.\x0d\n          ({ format } =\x0d\n            await this.loader.load(childFileURL));\x0d\n        } catch {\x0d\n          // Continue regardless of error.\x0d\n        }\x0d\n\x0d\n        if (format === 'commonjs') {\x0d\n          const importStatement = splitStack[1];\x0d\n          // TODO(@ctavan): The original error stack only provides the single\x0d\n          // line which causes the error. For multi-line import statements we\x0d\n          // cannot generate an equivalent object destructuring assignment by\x0d\n          // just parsing the error stack.\x0d\n          const oneLineNamedImports = RegExpPrototypeExec(/{.*}/\x2C importStatement);\x0d\n          const destructuringAssignment = oneLineNamedImports &&\x0d\n            RegExpPrototypeSymbolReplace(/\\s+as\\s+/g\x2C oneLineNamedImports\x2C ': ');\x0d\n          e.message = `Named export '${name}' not found. The requested module` +\x0d\n            ` '${childSpecifier}' is a CommonJS module\x2C which may not support` +\x0d\n            ' all module.exports as named exports.\\nCommonJS modules can ' +\x0d\n            'always be imported via the default export\x2C for example using:' +\x0d\n            `\\n\\nimport pkg from '${childSpecifier}';\\n${\x0d\n              destructuringAssignment ?\x0d\n                `const ${destructuringAssignment} = pkg;\\n` : ''}`;\x0d\n          const newStack = StringPrototypeSplit(e.stack\x2C '\\n');\x0d\n          newStack[3] = `SyntaxError: ${e.message}`;\x0d\n          e.stack = ArrayPrototypeJoin(newStack\x2C '\\n');\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n\x0d\n    for (const dependencyJob of jobsInGraph) {\x0d\n      // Calling `this.module.instantiate()` instantiates not only the\x0d\n      // ModuleWrap in this module\x2C but all modules in the graph.\x0d\n      dependencyJob.instantiated = resolvedPromise;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runSync() {\x0d\n    assert(this.module instanceof ModuleWrap);\x0d\n    if (this.instantiated !== undefined) {\x0d\n      return { __proto__: null\x2C module: this.module };\x0d\n    }\x0d\n\x0d\n    this.module.instantiate();\x0d\n    this.instantiated = PromiseResolve();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    setHasStartedUserESMExecution();\x0d\n    this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    return { __proto__: null\x2C module: this.module };\x0d\n  }\x0d\n\x0d\n  async run() {\x0d\n    await this.instantiate();\x0d\n    const timeout = -1;\x0d\n    const breakOnSigint = false;\x0d\n    setHasStartedUserESMExecution();\x0d\n    try {\x0d\n      await this.module.evaluate(timeout\x2C breakOnSigint);\x0d\n    } catch (e) {\x0d\n      if (e?.name === 'ReferenceError' &&\x0d\n          isCommonJSGlobalLikeNotDefinedError(e.message)) {\x0d\n        e.message += ' in ES module scope';\x0d\n\x0d\n        if (StringPrototypeStartsWith(e.message\x2C 'require ')) {\x0d\n          e.message += '\x2C you can use import instead';\x0d\n        }\x0d\n\x0d\n        const packageConfig =\x0d\n          StringPrototypeStartsWith(this.module.url\x2C 'file://') &&\x0d\n            RegExpPrototypeExec(/\\.js(\\?[^#]*)?(#.*)?$/\x2C this.module.url) !== null &&\x0d\n            require('internal/modules/esm/resolve')\x0d\n              .getPackageScopeConfig(this.module.url);\x0d\n        if (packageConfig.type === 'module') {\x0d\n          e.message +=\x0d\n            '\\nThis file is being treated as an ES module because it has a ' +\x0d\n            `'.js' file extension and '${packageConfig.pjsonPath}' contains ` +\x0d\n            '"type": "module". To treat it as a CommonJS script\x2C rename it ' +\x0d\n            'to use the \\'.cjs\\' file extension.';\x0d\n        }\x0d\n      }\x0d\n      throw e;\x0d\n    }\x0d\n    return { __proto__: null\x2C module: this.module };\x0d\n  }\x0d\n}\x0d\nObjectSetPrototypeOf(ModuleJob.prototype\x2C null);\x0d\nmodule.exports = ModuleJob;\x0d\n
code-source-info,0x2bb6ec8fc46,92,0,9202,C0O0C4O9202,,
code-creation,JS,10,192727,0x2bb6ec901ae,356, node:internal/modules/esm/module_job:1:1,0x2bb6ec8fbc0,~
code-source-info,0x2bb6ec901ae,92,0,9202,C0O0C88O28C94O51C100O74C106O97C111O119C116O144C122O163C128O188C134O205C140O229C146O262C152O296C158O325C164O337C170O365C176O390C182O461C188O461C193O446C199O541C205O541C210O504C216O524C222O606C228O606C233O579C239O671C245O671C249O671C251O724C254O724C257O724C259O790C265O790C270O754C276O841C278O841C280O884C281O884C283O916C287O916C289O1041C293O1041C336O9154C343O9123C348O9173C350O9188C355O9201,,
code-creation,JS,10,192974,0x2bb6ec9102e,274,ModuleJob node:internal/modules/esm/module_job:55:14,0x2bb6ec8fcc8,~
code-source-info,0x2bb6ec9102e,92,1432,3480,C0O1432C51O1558C56O1570C60O1585C65O1607C69O1632C74O1644C78O1659C83O1675C87O1696C92O1705C96O1719C100O1731C104O1869C111O1890C114O1919C123O1928C132O1933C142O1890C147O1888C151O1950C155O1969C158O1988C162O1981C166O2010C173O2031C179O2051C184O2031C188O2029C194O2081C201O2102C207O2122C212O2102C216O2100C220O2242C225O3146C228O3160C231O3158C235O3270C245O3296C256O3315C259O3270C264O3445C268O3463C273O3479,,
code-creation,JS,10,193095,0x2bb6ec91d5e,109,moduleProvider node:internal/modules/esm/loader:285:7,0x2bb6ec8f078,~
code-source-info,0x2bb6ec91d5e,83,9748,9824,C10O9748C18O9771C26O9797C33O9807C36O9797C50O9786C73O9771C86O9824,,
code-creation,JS,10,193179,0x2bb6ec91f6e,228,load node:internal/modules/esm/loader:399:13,0x8c1d16d0d0,~
code-source-info,0x2bb6ec91f6e,83,14079,14380,C10O14079C18O14101C36O14117C41O14153C50O14113C58O14187C60O14192C67O14228C71O14244C76O14244C90O14217C121O14278C124O14278C137O14272C163O14315C181O14345C189O14315C195O14361C205O14375,,
code-creation,Eval,10,193454,0x2bb6ec9260e,5, node:internal/modules/esm/load:1:1,0x2bb6ec92378,~
script-source,93,node:internal/modules/esm/load,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  decodeURIComponent\x2C\x0d\n} = primordials;\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst { defaultGetFormat } = require('internal/modules/esm/get_format');\x0d\nconst { validateAttributes\x2C emitImportAssertionWarning } = require('internal/modules/esm/assert');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\nconst { readFileSync } = require('fs');\x0d\n\x0d\n// Do not eagerly grab .manifest\x2C it may be in TDZ\x0d\nconst policy = getOptionValue('--experimental-policy') ?\x0d\n  require('internal/process/policy') :\x0d\n  null;\x0d\nconst experimentalNetworkImports =\x0d\n  getOptionValue('--experimental-network-imports');\x0d\nconst defaultType =\x0d\n  getOptionValue('--experimental-default-type');\x0d\n\x0d\nconst { Buffer: { from: BufferFrom } } = require('buffer');\x0d\n\x0d\nconst { URL } = require('internal/url');\x0d\nconst {\x0d\n  ERR_INVALID_URL\x2C\x0d\n  ERR_UNKNOWN_MODULE_FORMAT\x2C\x0d\n  ERR_UNSUPPORTED_ESM_URL_SCHEME\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nconst DATA_URL_PATTERN = /^[^/]+\\/[^\x2C;]+(?:[^\x2C]*?)(;base64)?\x2C([\\s\\S]*)$/;\x0d\n\x0d\n/**\x0d\n * @param {URL} url URL to the module\x0d\n * @param {ESModuleContext} context used to decorate error messages\x0d\n * @returns {Promise<{ responseURL: string\x2C source: string | BufferView }>}\x0d\n */\x0d\nasync function getSource(url\x2C context) {\x0d\n  const { protocol\x2C href } = url;\x0d\n  let responseURL = href;\x0d\n  let source;\x0d\n  if (protocol === 'file:') {\x0d\n    const { readFile: readFileAsync } = require('internal/fs/promises').exports;\x0d\n    source = await readFileAsync(url);\x0d\n  } else if (protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C url.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(responseURL);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else if (experimentalNetworkImports && (\x0d\n    protocol === 'https:' ||\x0d\n    protocol === 'http:'\x0d\n  )) {\x0d\n    const { fetchModule } = require('internal/modules/esm/fetch_module');\x0d\n    const res = await fetchModule(url\x2C context);\x0d\n    source = await res.body;\x0d\n    responseURL = res.resolvedHREF;\x0d\n  } else {\x0d\n    const supportedSchemes = ['file'\x2C 'data'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(supportedSchemes\x2C 'http'\x2C 'https');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url\x2C supportedSchemes);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(href\x2C source);\x0d\n  }\x0d\n  return { __proto__: null\x2C responseURL\x2C source };\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {URL} url URL to the module\x0d\n * @param {ESModuleContext} context used to decorate error messages\x0d\n * @returns {{ responseURL: string\x2C source: string | BufferView }}\x0d\n */\x0d\nfunction getSourceSync(url\x2C context) {\x0d\n  const { protocol\x2C href } = url;\x0d\n  const responseURL = href;\x0d\n  let source;\x0d\n  if (protocol === 'file:') {\x0d\n    source = readFileSync(url);\x0d\n  } else if (protocol === 'data:') {\x0d\n    const match = RegExpPrototypeExec(DATA_URL_PATTERN\x2C url.pathname);\x0d\n    if (!match) {\x0d\n      throw new ERR_INVALID_URL(responseURL);\x0d\n    }\x0d\n    const { 1: base64\x2C 2: body } = match;\x0d\n    source = BufferFrom(decodeURIComponent(body)\x2C base64 ? 'base64' : 'utf8');\x0d\n  } else {\x0d\n    const supportedSchemes = ['file'\x2C 'data'];\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(url\x2C supportedSchemes);\x0d\n  }\x0d\n  if (policy?.manifest) {\x0d\n    policy.manifest.assertIntegrity(url\x2C source);\x0d\n  }\x0d\n  return { __proto__: null\x2C responseURL\x2C source };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * Node.js default load hook.\x0d\n * @param {string} url\x0d\n * @param {LoadContext} context\x0d\n * @returns {LoadReturn}\x0d\n */\x0d\nasync function defaultLoad(url\x2C context = kEmptyObject) {\x0d\n  let responseURL = url;\x0d\n  let {\x0d\n    importAttributes\x2C\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  if (importAttributes == null && !('importAttributes' in context) && 'importAssertions' in context) {\x0d\n    emitImportAssertionWarning();\x0d\n    importAttributes = context.importAssertions;\x0d\n    // Alias `importAssertions` to `importAttributes`\x0d\n    context = {\x0d\n      ...context\x2C\x0d\n      importAttributes\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const urlInstance = new URL(url);\x0d\n\x0d\n  throwIfUnsupportedURLScheme(urlInstance\x2C experimentalNetworkImports);\x0d\n\x0d\n  if (urlInstance.protocol === 'node:') {\x0d\n    source = null;\x0d\n    format ??= 'builtin';\x0d\n  } else if (format !== 'commonjs' || defaultType === 'module') {\x0d\n    if (source == null) {\x0d\n      ({ responseURL\x2C source } = await getSource(urlInstance\x2C context));\x0d\n      context = { __proto__: context\x2C source };\x0d\n    }\x0d\n\x0d\n    if (format == null) {\x0d\n      // Now that we have the source for the module\x2C run `defaultGetFormat` to detect its format.\x0d\n      format = await defaultGetFormat(urlInstance\x2C context);\x0d\n\x0d\n      if (format === 'commonjs') {\x0d\n        // For backward compatibility reasons\x2C we need to discard the source in\x0d\n        // order for the CJS loader to re-fetch it.\x0d\n        source = null;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  validateAttributes(url\x2C format\x2C importAttributes);\x0d\n\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    format\x2C\x0d\n    responseURL\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n/**\x0d\n * @typedef LoadContext\x0d\n * @property {string} [format] A hint (possibly returned from `resolve`)\x0d\n * @property {string | Buffer | ArrayBuffer} [source] source\x0d\n * @property {Record<string\x2C string>} [importAttributes] import attributes\x0d\n */\x0d\n\x0d\n/**\x0d\n * @typedef LoadReturn\x0d\n * @property {string} format format\x0d\n * @property {URL['href']} responseURL The module's fully resolved URL\x0d\n * @property {Buffer} source source\x0d\n */\x0d\n\x0d\n/**\x0d\n * @param {URL['href']} url\x0d\n * @param {LoadContext} [context]\x0d\n * @returns {LoadReturn}\x0d\n */\x0d\nfunction defaultLoadSync(url\x2C context = kEmptyObject) {\x0d\n  let responseURL = url;\x0d\n  const { importAttributes } = context;\x0d\n  let {\x0d\n    format\x2C\x0d\n    source\x2C\x0d\n  } = context;\x0d\n\x0d\n  const urlInstance = new URL(url);\x0d\n\x0d\n  throwIfUnsupportedURLScheme(urlInstance\x2C false);\x0d\n\x0d\n  if (urlInstance.protocol === 'node:') {\x0d\n    source = null;\x0d\n  } else if (source == null) {\x0d\n    ({ responseURL\x2C source } = getSourceSync(urlInstance\x2C context));\x0d\n    context.source = source;\x0d\n  }\x0d\n\x0d\n  format ??= defaultGetFormat(urlInstance\x2C context);\x0d\n\x0d\n  validateAttributes(url\x2C format\x2C importAttributes);\x0d\n\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    format\x2C\x0d\n    responseURL\x2C\x0d\n    source\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\n/**\x0d\n * throws an error if the protocol is not one of the protocols\x0d\n * that can be loaded in the default loader\x0d\n * @param {URL} parsed\x0d\n * @param {boolean} experimentalNetworkImports\x0d\n */\x0d\nfunction throwIfUnsupportedURLScheme(parsed\x2C experimentalNetworkImports) {\x0d\n  // Avoid accessing the `protocol` property due to the lazy getters.\x0d\n  const protocol = parsed?.protocol;\x0d\n  if (\x0d\n    protocol &&\x0d\n    protocol !== 'file:' &&\x0d\n    protocol !== 'data:' &&\x0d\n    protocol !== 'node:' &&\x0d\n    (\x0d\n      !experimentalNetworkImports ||\x0d\n      (\x0d\n        protocol !== 'https:' &&\x0d\n        protocol !== 'http:'\x0d\n      )\x0d\n    )\x0d\n  ) {\x0d\n    const schemes = ['file'\x2C 'data'\x2C 'node'];\x0d\n    if (experimentalNetworkImports) {\x0d\n      ArrayPrototypePush(schemes\x2C 'https'\x2C 'http');\x0d\n    }\x0d\n    throw new ERR_UNSUPPORTED_ESM_URL_SCHEME(parsed\x2C schemes);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * For a falsy `format` returned from `load`\x2C throw an error.\x0d\n * This could happen from either a custom user loader _or_ from the default loader\x2C because the default loader tries to\x0d\n * determine formats for data URLs.\x0d\n * @param {string} url The resolved URL of the module\x0d\n * @param {null | undefined | false | 0 | -0 | 0n | ''} format Falsy format returned from `load`\x0d\n */\x0d\nfunction throwUnknownModuleFormat(url\x2C format) {\x0d\n  const dataUrl = RegExpPrototypeExec(\x0d\n    /^data:([^/]+\\/[^;\x2C]+)(?:[^\x2C]*?)(;base64)?\x2C/\x2C\x0d\n    url\x2C\x0d\n  );\x0d\n\x0d\n  throw new ERR_UNKNOWN_MODULE_FORMAT(\x0d\n    dataUrl ? dataUrl[1] : format\x2C\x0d\n    url);\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  defaultLoad\x2C\x0d\n  defaultLoadSync\x2C\x0d\n  getSourceSync\x2C\x0d\n  throwUnknownModuleFormat\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ec9260e,93,0,7875,C0O0C4O7875,,
code-creation,JS,10,193981,0x2bb6ec92a0e,360, node:internal/modules/esm/load:1:1,0x2bb6ec92588,~
code-source-info,0x2bb6ec92a0e,93,0,7875,C0O0C93O28C99O51C105O75C111O139C117O139C122O122C128O197C134O197C139O176C145O301C151O301C156O250C162O270C168O369C174O369C179O350C184O424C190O424C195O407C201O509C204O509C216O554C223O509C225O639C228O639C232O639C234O713C237O713C241O713C243O804C249O804C254O779C259O787C265O842C271O842C276O834C282O966C288O966C293O992C298O879C304O899C310O929C316O1028C321O1028C323O7768C330O7790C336O7806C342O7826C348O7844C354O7783C359O7874,,
code-creation,JS,10,194253,0x2bb6ec9393e,417,defaultLoad node:internal/modules/esm/load:110:27,0x2bb6ec926e0,~
code-source-info,0x2bb6ec9393e,93,3641,5074,C10O3641C27O3657C61O3694C64O3713C69O3736C74O3749C79O3778C89O3831C99O3865C104O3884C109O3884C112O3946C117O4024C124O4062C133O4118C140O4118C146O4137C151O4178C154O4137C159O4228C166O4237C171O4257C173O4277C184O4309C186O4320C193O4338C198O4350C203O4371C208O4400C211O4433C224O4427C247O4403C252O4416C257O4474C268O4497C275O4506C284O4530C289O4658C294O4673C307O4667C333O4722C335O4733C340O4894C342O4935C356O4935C361O4991C368O5027C374O5040C380O5058C394O5071,,
code-creation,JS,10,194397,0x2bb6ec94546,105,throwIfUnsupportedURLScheme node:internal/modules/esm/load:219:37,0x2bb6ec92780,~
code-source-info,0x2bb6ec94546,93,6509,7127,C0O6639C7O6645C15O6660C19O6696C26O6725C33O6754C40O6784C44O6841C51O6875C56O6931C61O6962C65O7003C79O7003C84O7061C97O7067C102O7061C104O7126,,
code-creation,JS,10,194548,0x2bb6ec94916,449,getSource node:internal/modules/esm/load:40:25,0x2bb6ec92640,~
code-source-info,0x2bb6ec
code-creation,Eval,10,195626,0x2bb6ec96e86,5, node:internal/fs/promises:1:1,0x2bb6ec958f8,~
script-source,94,node:internal/fs/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  NumberIsSafeInteger\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromiseReject\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafePromisePrototypeFinally\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  Uint8Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { fs: constants } = internalBinding('constants');\x0d\nconst {\x0d\n  F_OK\x2C\x0d\n  O_SYMLINK\x2C\x0d\n  O_WRONLY\x2C\x0d\n  S_IFMT\x2C\x0d\n  S_IFREG\x2C\x0d\n} = constants;\x0d\n\x0d\nconst binding = internalBinding('fs');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ACCESS_DENIED\x2C\x0d\n    ERR_FS_FILE_TOO_LARGE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_STATE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n  aggregateTwoErrors\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isArrayBufferView } = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    kIoMaxLength\x2C\x0d\n    kMaxUserId\x2C\x0d\n    kReadFileBufferLength\x2C\x0d\n    kReadFileUnknownBufferLength\x2C\x0d\n    kWriteFileMaxChunkSize\x2C\x0d\n  }\x2C\x0d\n  copyObject\x2C\x0d\n  emitRecursiveRmdirWarning\x2C\x0d\n  getDirents\x2C\x0d\n  getOptions\x2C\x0d\n  getStatFsFromBinding\x2C\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n  getValidMode\x2C\x0d\n  preprocessSymlinkDestination\x2C\x0d\n  stringToFlags\x2C\x0d\n  stringToSymlinkType\x2C\x0d\n  toUnixTimestamp\x2C\x0d\n  validateBufferArray\x2C\x0d\n  validateCpOptions\x2C\x0d\n  validateOffsetLengthRead\x2C\x0d\n  validateOffsetLengthWrite\x2C\x0d\n  validateRmOptions\x2C\x0d\n  validateRmdirOptions\x2C\x0d\n  validateStringAfterArrayBufferView\x2C\x0d\n  warnOnNonPortableTemplate\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst { opendir } = require('internal/fs/dir');\x0d\nconst {\x0d\n  parseFileMode\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateEncoding\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n} = require('internal/validators');\x0d\nconst pathModule = require('path');\x0d\nconst { isAbsolute } = pathModule;\x0d\nconst { toPathIfFileURL } = require('internal/url');\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  lazyDOMException\x2C\x0d\n  promisify\x2C\x0d\n  getLazy\x2C\x0d\n} = require('internal/util');\x0d\nconst { EventEmitterMixin } = require('internal/event_target');\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst { kFSWatchStart\x2C watch } = require('internal/fs/watchers');\x0d\nconst nonNativeWatcher = require('internal/fs/recursive_watch');\x0d\nconst { isIterable } = require('internal/streams/utils');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst permission = require('internal/process/permission');\x0d\n\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kFd = Symbol('kFd');\x0d\nconst kRefs = Symbol('kRefs');\x0d\nconst kClosePromise = Symbol('kClosePromise');\x0d\nconst kCloseResolve = Symbol('kCloseResolve');\x0d\nconst kCloseReject = Symbol('kCloseReject');\x0d\nconst kRef = Symbol('kRef');\x0d\nconst kUnref = Symbol('kUnref');\x0d\nconst kLocked = Symbol('kLocked');\x0d\n\x0d\nconst { kUsePromises } = binding;\x0d\nconst { Interface } = require('internal/readline/interface');\x0d\nconst {\x0d\n  JSTransferable\x2C kDeserialize\x2C kTransfer\x2C kTransferList\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst getDirectoryEntriesPromise = promisify(getDirents);\x0d\nconst validateRmOptionsPromise = promisify(validateRmOptions);\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\nconst isOSX = process.platform === 'darwin';\x0d\n\x0d\nlet cpPromises;\x0d\nfunction lazyLoadCpPromises() {\x0d\n  return cpPromises ??= require('internal/fs/cp/cp').cpFn;\x0d\n}\x0d\n\x0d\n// Lazy loaded to avoid circular dependency.\x0d\nlet fsStreams;\x0d\nfunction lazyFsStreams() {\x0d\n  return fsStreams ??= require('internal/fs/streams');\x0d\n}\x0d\n\x0d\nconst lazyRimRaf = getLazy(() => require('internal/fs/rimraf').rimrafPromises);\x0d\n\x0d\nclass FileHandle extends EventEmitterMixin(JSTransferable) {\x0d\n  /**\x0d\n   * @param {InternalFSBinding.FileHandle | undefined} filehandle\x0d\n   */\x0d\n  constructor(filehandle) {\x0d\n    super();\x0d\n    this[kHandle] = filehandle;\x0d\n    this[kFd] = filehandle ? filehandle.fd : -1;\x0d\n\x0d\n    this[kRefs] = 1;\x0d\n    this[kClosePromise] = null;\x0d\n  }\x0d\n\x0d\n  getAsyncId() {\x0d\n    return this[kHandle].getAsyncId();\x0d\n  }\x0d\n\x0d\n  get fd() {\x0d\n    return this[kFd];\x0d\n  }\x0d\n\x0d\n  appendFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  chmod(mode) {\x0d\n    return fsCall(fchmod\x2C this\x2C mode);\x0d\n  }\x0d\n\x0d\n  chown(uid\x2C gid) {\x0d\n    return fsCall(fchown\x2C this\x2C uid\x2C gid);\x0d\n  }\x0d\n\x0d\n  datasync() {\x0d\n    return fsCall(fdatasync\x2C this);\x0d\n  }\x0d\n\x0d\n  sync() {\x0d\n    return fsCall(fsync\x2C this);\x0d\n  }\x0d\n\x0d\n  read(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(read\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  readv(buffers\x2C position) {\x0d\n    return fsCall(readv\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  readFile(options) {\x0d\n    return fsCall(readFile\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  readLines(options = undefined) {\x0d\n    return new Interface({\x0d\n      input: this.createReadStream(options)\x2C\x0d\n      crlfDelay: Infinity\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  stat(options) {\x0d\n    return fsCall(fstat\x2C this\x2C options);\x0d\n  }\x0d\n\x0d\n  truncate(len = 0) {\x0d\n    return fsCall(ftruncate\x2C this\x2C len);\x0d\n  }\x0d\n\x0d\n  utimes(atime\x2C mtime) {\x0d\n    return fsCall(futimes\x2C this\x2C atime\x2C mtime);\x0d\n  }\x0d\n\x0d\n  write(buffer\x2C offset\x2C length\x2C position) {\x0d\n    return fsCall(write\x2C this\x2C buffer\x2C offset\x2C length\x2C position);\x0d\n  }\x0d\n\x0d\n  writev(buffers\x2C position) {\x0d\n    return fsCall(writev\x2C this\x2C buffers\x2C position);\x0d\n  }\x0d\n\x0d\n  writeFile(data\x2C options) {\x0d\n    return fsCall(writeFile\x2C this\x2C data\x2C options);\x0d\n  }\x0d\n\x0d\n  close = () => {\x0d\n    if (this[kFd] === -1) {\x0d\n      return PromiseResolve();\x0d\n    }\x0d\n\x0d\n    if (this[kClosePromise]) {\x0d\n      return this[kClosePromise];\x0d\n    }\x0d\n\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        this[kHandle].close()\x2C\x0d\n        () => { this[kClosePromise] = undefined; }\x2C\x0d\n      );\x0d\n    } else {\x0d\n      this[kClosePromise] = SafePromisePrototypeFinally(\x0d\n        new Promise((resolve\x2C reject) => {\x0d\n          this[kCloseResolve] = resolve;\x0d\n          this[kCloseReject] = reject;\x0d\n        })\x2C () => {\x0d\n          this[kClosePromise] = undefined;\x0d\n          this[kCloseReject] = undefined;\x0d\n          this[kCloseResolve] = undefined;\x0d\n        }\x2C\x0d\n      );\x0d\n    }\x0d\n\x0d\n    this.emit('close');\x0d\n    return this[kClosePromise];\x0d\n  };\x0d\n\x0d\n  async [SymbolAsyncDispose]() {\x0d\n    return this.close();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('../webstreams/readablestream').ReadableStream\x0d\n   * } ReadableStream\x0d\n   * @param {{\x0d\n   *   type?: string;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadableStream}\x0d\n   */\x0d\n  readableWebStream(options = kEmptyObject) {\x0d\n    if (this[kFd] === -1)\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is closed');\x0d\n    if (this[kClosePromise])\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is closing');\x0d\n    if (this[kLocked])\x0d\n      throw new ERR_INVALID_STATE('The FileHandle is locked');\x0d\n    this[kLocked] = true;\x0d\n\x0d\n    if (options.type !== undefined) {\x0d\n      validateString(options.type\x2C 'options.type');\x0d\n    }\x0d\n\x0d\n    let readable;\x0d\n\x0d\n    if (options.type !== 'bytes') {\x0d\n      const {\x0d\n        newReadableStreamFromStreamBase\x2C\x0d\n      } = require('internal/webstreams/adapters');\x0d\n      readable = newReadableStreamFromStreamBase(\x0d\n        this[kHandle]\x2C\x0d\n        undefined\x2C\x0d\n        { ondone: () => this[kUnref]() });\x0d\n    } else {\x0d\n      const {\x0d\n        ReadableStream\x2C\x0d\n      } = require('internal/webstreams/readablestream');\x0d\n\x0d\n      const readFn = FunctionPrototypeBind(this.read\x2C this);\x0d\n      const ondone = FunctionPrototypeBind(this[kUnref]\x2C this);\x0d\n\x0d\n      readable = new ReadableStream({\x0d\n        type: 'bytes'\x2C\x0d\n        autoAllocateChunkSize: 16384\x2C\x0d\n\x0d\n        async pull(controller) {\x0d\n          const view = controller.byobRequest.view;\x0d\n          const { bytesRead } = await readFn(view\x2C view.byteOffset\x2C view.byteLength);\x0d\n\x0d\n          if (bytesRead === 0) {\x0d\n            ondone();\x0d\n            controller.close();\x0d\n          }\x0d\n\x0d\n          controller.byobRequest.respond(bytesRead);\x0d\n        }\x2C\x0d\n\x0d\n        cancel() {\x0d\n          ondone();\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x0d\n\x0d\n    const {\x0d\n      readableStreamCancel\x2C\x0d\n    } = require('internal/webstreams/readablestream');\x0d\n    this[kRef]();\x0d\n    this.once('close'\x2C () => {\x0d\n      readableStreamCancel(readable);\x0d\n    });\x0d\n\x0d\n    return readable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').ReadStream\x0d\n   * } ReadStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   end?: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   }} [options]\x0d\n   * @returns {ReadStream}\x0d\n   */\x0d\n  createReadStream(options = undefined) {\x0d\n    const { ReadStream } = lazyFsStreams();\x0d\n    return new ReadStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @typedef {import('./streams').WriteStream\x0d\n   * } WriteStream\x0d\n   * @param {{\x0d\n   *   encoding?: string;\x0d\n   *   autoClose?: boolean;\x0d\n   *   emitClose?: boolean;\x0d\n   *   start: number;\x0d\n   *   highWaterMark?: number;\x0d\n   *   flush?: boolean;\x0d\n   *   }} [options]\x0d\n   * @returns {WriteStream}\x0d\n   */\x0d\n  createWriteStream(options = undefined) {\x0d\n    const { WriteStream } = lazyFsStreams();\x0d\n    return new WriteStream(undefined\x2C { ...options\x2C fd: this });\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    if (this[kClosePromise] || this[kRefs] > 1) {\x0d\n      throw lazyDOMException('Cannot transfer FileHandle while in use'\x2C\x0d\n                             'DataCloneError');\x0d\n    }\x0d\n\x0d\n    const handle = this[kHandle];\x0d\n    this[kFd] = -1;\x0d\n    this[kHandle] = null;\x0d\n    this[kRefs] = 0;\x0d\n\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/fs/promises:FileHandle'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    return [ this[kHandle] ];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n    this[kFd] = handle.fd;\x0d\n  }\x0d\n\x0d\n  [kRef]() {\x0d\n    this[kRefs]++;\x0d\n  }\x0d\n\x0d\n  [kUnref]() {\x0d\n    this[kRefs]--;\x0d\n    if (this[kRefs] === 0) {\x0d\n      this[kFd] = -1;\x0d\n      PromisePrototypeThen(\x0d\n        this[kHandle].close()\x2C\x0d\n        this[kCloseResolve]\x2C\x0d\n        this[kCloseReject]\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function handleFdClose(fileOpPromise\x2C closeFunc) {\x0d\n  return PromisePrototypeThen(\x0d\n    fileOpPromise\x2C\x0d\n    (result) => PromisePrototypeThen(closeFunc()\x2C () => result)\x2C\x0d\n    (opError) =>\x0d\n      PromisePrototypeThen(\x0d\n        closeFunc()\x2C\x0d\n        () => PromiseReject(opError)\x2C\x0d\n        (closeError) => PromiseReject(aggregateTwoErrors(closeError\x2C opError))\x2C\x0d\n      )\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function handleFdSync(fileOpPromise\x2C handle) {\x0d\n  return PromisePrototypeThen(\x0d\n    fileOpPromise\x2C\x0d\n    (result) => PromisePrototypeThen(\x0d\n      handle.sync()\x2C\x0d\n      () => result\x2C\x0d\n      (syncError) => PromiseReject(syncError)\x2C\x0d\n    )\x2C\x0d\n    (opError) => PromiseReject(opError)\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nasync function fsCall(fn\x2C handle\x2C ...args) {\x0d\n  assert(handle[kRefs] !== undefined\x2C\x0d\n         'handle must be an instance of FileHandle');\x0d\n\x0d\n  if (handle.fd === -1) {\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const err = new Error('file closed');\x0d\n    err.code = 'EBADF';\x0d\n    err.syscall = fn.name;\x0d\n    throw err;\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    handle[kRef]();\x0d\n    return await fn(handle\x2C ...new SafeArrayIterator(args));\x0d\n  } finally {\x0d\n    handle[kUnref]();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction checkAborted(signal) {\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n}\x0d\n\x0d\nasync function writeFileHandle(filehandle\x2C data\x2C signal\x2C encoding) {\x0d\n  checkAborted(signal);\x0d\n  if (isCustomIterable(data)) {\x0d\n    for await (const buf of data) {\x0d\n      checkAborted(signal);\x0d\n      const toWrite =\x0d\n        isArrayBufferView(buf) ? buf : Buffer.from(buf\x2C encoding || 'utf8');\x0d\n      let remaining = toWrite.byteLength;\x0d\n      while (remaining > 0) {\x0d\n        const writeSize = MathMin(kWriteFileMaxChunkSize\x2C remaining);\x0d\n        const { bytesWritten } = await write(\x0d\n          filehandle\x2C toWrite\x2C toWrite.byteLength - remaining\x2C writeSize);\x0d\n        remaining -= bytesWritten;\x0d\n        checkAborted(signal);\x0d\n      }\x0d\n    }\x0d\n    return;\x0d\n  }\x0d\n  data = new Uint8Array(data.buffer\x2C data.byteOffset\x2C data.byteLength);\x0d\n  let remaining = data.byteLength;\x0d\n  if (remaining === 0) return;\x0d\n  do {\x0d\n    checkAborted(signal);\x0d\n    const { bytesWritten } =\x0d\n      await write(filehandle\x2C data\x2C 0\x2C\x0d\n                  MathMin(kWriteFileMaxChunkSize\x2C data.byteLength));\x0d\n    remaining -= bytesWritten;\x0d\n    data = new Uint8Array(\x0d\n      data.buffer\x2C\x0d\n      data.byteOffset + bytesWritten\x2C\x0d\n      data.byteLength - bytesWritten\x2C\x0d\n    );\x0d\n  } while (remaining > 0);\x0d\n}\x0d\n\x0d\nasync function readFileHandle(filehandle\x2C options) {\x0d\n  const signal = options?.signal;\x0d\n  const encoding = options?.encoding;\x0d\n  const decoder = encoding && new StringDecoder(encoding);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  const statFields = await binding.fstat(filehandle.fd\x2C false\x2C kUsePromises);\x0d\n\x0d\n  checkAborted(signal);\x0d\n\x0d\n  let size = 0;\x0d\n  let length = 0;\x0d\n  if ((statFields[1/* mode */] & S_IFMT) === S_IFREG) {\x0d\n    size = statFields[8/* size */];\x0d\n    length = encoding ? MathMin(size\x2C kReadFileBufferLength) : size;\x0d\n  }\x0d\n  if (length === 0) {\x0d\n    length = kReadFileUnknownBufferLength;\x0d\n  }\x0d\n\x0d\n  if (size > kIoMaxLength)\x0d\n    throw new ERR_FS_FILE_TOO_LARGE(size);\x0d\n\x0d\n  let totalRead = 0;\x0d\n  let buffer = Buffer.allocUnsafeSlow(length);\x0d\n  let result = '';\x0d\n  let offset = 0;\x0d\n  let buffers;\x0d\n  const chunkedRead = length > kReadFileBufferLength;\x0d\n\x0d\n  while (true) {\x0d\n    checkAborted(signal);\x0d\n\x0d\n    if (chunkedRead) {\x0d\n      length = MathMin(size - totalRead\x2C kReadFileBufferLength);\x0d\n    }\x0d\n\x0d\n    const bytesRead = (await binding.read(filehandle.fd\x2C buffer\x2C offset\x2C\x0d\n                                          length\x2C -1\x2C kUsePromises)) ?? 0;\x0d\n    totalRead += bytesRead;\x0d\n\x0d\n    if (bytesRead === 0 ||\x0d\n        totalRead === size ||\x0d\n        (bytesRead !== buffer.length && !chunkedRead)) {\x0d\n      const singleRead = bytesRead === totalRead;\x0d\n\x0d\n      const bytesToCheck = chunkedRead ? totalRead : bytesRead;\x0d\n\x0d\n      if (bytesToCheck !== buffer.length) {\x0d\n        buffer = buffer.subarray(0\x2C bytesToCheck);\x0d\n      }\x0d\n\x0d\n      if (!encoding) {\x0d\n        if (size === 0 && !singleRead) {\x0d\n          ArrayPrototypePush(buffers\x2C buffer);\x0d\n          return Buffer.concat(buffers\x2C totalRead);\x0d\n        }\x0d\n        return buffer;\x0d\n      }\x0d\n\x0d\n      if (singleRead) {\x0d\n        return buffer.toString(encoding);\x0d\n      }\x0d\n      result += decoder.end(buffer);\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    if (encoding) {\x0d\n      result += decoder.write(buffer);\x0d\n    } else if (size !== 0) {\x0d\n      offset = totalRead;\x0d\n    } else {\x0d\n      buffers ??= [];\x0d\n      // Unknown file size requires chunks.\x0d\n      ArrayPrototypePush(buffers\x2C buffer);\x0d\n      buffer = Buffer.allocUnsafeSlow(kReadFileUnknownBufferLength);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// All of the functions are defined as async in order to ensure that errors\x0d\n// thrown cause promise rejections rather than being thrown synchronously.\x0d\nasync function access(path\x2C mode = F_OK) {\x0d\n  path = getValidatedPath(path);\x0d\n\x0d\n  mode = getValidMode(mode\x2C 'access');\x0d\n  return binding.access(pathModule.toNamespacedPath(path)\x2C mode\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function cp(src\x2C dest\x2C options) {\x0d\n  options = validateCpOptions(options);\x0d\n  src = pathModule.toNamespacedPath(getValidatedPath(src\x2C 'src'));\x0d\n  dest = pathModule.toNamespacedPath(getValidatedPath(dest\x2C 'dest'));\x0d\n  return lazyLoadCpPromises()(src\x2C dest\x2C options);\x0d\n}\x0d\n\x0d\nasync function copyFile(src\x2C dest\x2C mode) {\x0d\n  src = getValidatedPath(src\x2C 'src');\x0d\n  dest = getValidatedPath(dest\x2C 'dest');\x0d\n  mode = getValidMode(mode\x2C 'copyFile');\x0d\n  return binding.copyFile(pathModule.toNamespacedPath(src)\x2C\x0d\n                          pathModule.toNamespacedPath(dest)\x2C\x0d\n                          mode\x2C\x0d\n                          kUsePromises);\x0d\n}\x0d\n\x0d\n// Note that unlike fs.open() which uses numeric file descriptors\x2C\x0d\n// fsPromises.open() uses the fs.FileHandle class.\x0d\nasync function open(path\x2C flags\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  const flagsNumber = stringToFlags(flags);\x0d\n  mode = parseFileMode(mode\x2C 'mode'\x2C 0o666);\x0d\n  return new FileHandle(\x0d\n    await binding.openFileHandle(pathModule.toNamespacedPath(path)\x2C\x0d\n                                 flagsNumber\x2C mode\x2C kUsePromises));\x0d\n}\x0d\n\x0d\nasync function read(handle\x2C bufferOrParams\x2C offset\x2C length\x2C position) {\x0d\n  let buffer = bufferOrParams;\x0d\n  if (!isArrayBufferView(buffer)) {\x0d\n    // This is fh.read(params)\x0d\n    if (bufferOrParams !== undefined) {\x0d\n      validateObject(bufferOrParams\x2C 'options'\x2C kValidateObjectAllowNullable);\x0d\n    }\x0d\n    ({\x0d\n      buffer = Buffer.alloc(16384)\x2C\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = bufferOrParams ?? kEmptyObject);\x0d\n\x0d\n    validateBuffer(buffer);\x0d\n  }\x0d\n\x0d\n  if (offset !== null && typeof offset === 'object') {\x0d\n    // This is fh.read(buffer\x2C options)\x0d\n    ({\x0d\n      offset = 0\x2C\x0d\n      length = buffer.byteLength - offset\x2C\x0d\n      position = null\x2C\x0d\n    } = offset);\x0d\n  }\x0d\n\x0d\n  if (offset == null) {\x0d\n    offset = 0;\x0d\n  } else {\x0d\n    validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n  }\x0d\n\x0d\n  length ??= buffer.byteLength - offset;\x0d\n\x0d\n  if (length === 0)\x0d\n    return { __proto__: null\x2C bytesRead: length\x2C buffer };\x0d\n\x0d\n  if (buffer.byteLength === 0) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('buffer'\x2C buffer\x2C\x0d\n                                    'is empty and cannot be written');\x0d\n  }\x0d\n\x0d\n  validateOffsetLengthRead(offset\x2C length\x2C buffer.byteLength);\x0d\n\x0d\n  if (!NumberIsSafeInteger(position))\x0d\n    position = -1;\x0d\n\x0d\n  const bytesRead = (await binding.read(handle.fd\x2C buffer\x2C offset\x2C length\x2C\x0d\n                                        position\x2C kUsePromises)) || 0;\x0d\n\x0d\n  return { __proto__: null\x2C bytesRead\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function readv(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  const bytesRead = (await binding.readBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                               kUsePromises)) || 0;\x0d\n  return { __proto__: null\x2C bytesRead\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function write(handle\x2C buffer\x2C offsetOrOptions\x2C length\x2C position) {\x0d\n  if (buffer?.byteLength === 0)\x0d\n    return { __proto__: null\x2C bytesWritten: 0\x2C buffer };\x0d\n\x0d\n  let offset = offsetOrOptions;\x0d\n  if (isArrayBufferView(buffer)) {\x0d\n    if (typeof offset === 'object') {\x0d\n      ({\x0d\n        offset = 0\x2C\x0d\n        length = buffer.byteLength - offset\x2C\x0d\n        position = null\x2C\x0d\n      } = offsetOrOptions ?? kEmptyObject);\x0d\n    }\x0d\n\x0d\n    if (offset == null) {\x0d\n      offset = 0;\x0d\n    } else {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n    }\x0d\n    if (typeof length !== 'number')\x0d\n      length = buffer.byteLength - offset;\x0d\n    if (typeof position !== 'number')\x0d\n      position = null;\x0d\n    validateOffsetLengthWrite(offset\x2C length\x2C buffer.byteLength);\x0d\n    const bytesWritten =\x0d\n      (await binding.writeBuffer(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                 length\x2C position\x2C kUsePromises)) || 0;\x0d\n    return { __proto__: null\x2C bytesWritten\x2C buffer };\x0d\n  }\x0d\n\x0d\n  validateStringAfterArrayBufferView(buffer\x2C 'buffer');\x0d\n  validateEncoding(buffer\x2C length);\x0d\n  const bytesWritten = (await binding.writeString(handle.fd\x2C buffer\x2C offset\x2C\x0d\n                                                  length\x2C kUsePromises)) || 0;\x0d\n  return { __proto__: null\x2C bytesWritten\x2C buffer };\x0d\n}\x0d\n\x0d\nasync function writev(handle\x2C buffers\x2C position) {\x0d\n  validateBufferArray(buffers);\x0d\n\x0d\n  if (typeof position !== 'number')\x0d\n    position = null;\x0d\n\x0d\n  if (buffers.length === 0) {\x0d\n    return { __proto__: null\x2C bytesWritten: 0\x2C buffers };\x0d\n  }\x0d\n\x0d\n  const bytesWritten = (await binding.writeBuffers(handle.fd\x2C buffers\x2C position\x2C\x0d\n                                                   kUsePromises)) || 0;\x0d\n  return { __proto__: null\x2C bytesWritten\x2C buffers };\x0d\n}\x0d\n\x0d\nasync function rename(oldPath\x2C newPath) {\x0d\n  oldPath = getValidatedPath(oldPath\x2C 'oldPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.rename(pathModule.toNamespacedPath(oldPath)\x2C\x0d\n                        pathModule.toNamespacedPath(newPath)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function truncate(path\x2C len = 0) {\x0d\n  const fd = await open(path\x2C 'r+');\x0d\n  return handleFdClose(ftruncate(fd\x2C len)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function ftruncate(handle\x2C len = 0) {\x0d\n  validateInteger(len\x2C 'len');\x0d\n  len = MathMax(0\x2C len);\x0d\n  return binding.ftruncate(handle.fd\x2C len\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function rm(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = await validateRmOptionsPromise(path\x2C options\x2C false);\x0d\n  return lazyRimRaf()(path\x2C options);\x0d\n}\x0d\n\x0d\nasync function rmdir(path\x2C options) {\x0d\n  path = pathModule.toNamespacedPath(getValidatedPath(path));\x0d\n  options = validateRmdirOptions(options);\x0d\n\x0d\n  if (options.recursive) {\x0d\n    emitRecursiveRmdirWarning();\x0d\n    const stats = await stat(path);\x0d\n    if (stats.isDirectory()) {\x0d\n      return lazyRimRaf()(path\x2C options);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return binding.rmdir(path\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fdatasync(handle) {\x0d\n  return binding.fdatasync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fsync(handle) {\x0d\n  return binding.fsync(handle.fd\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdir(path\x2C options) {\x0d\n  if (typeof options === 'number' || typeof options === 'string') {\x0d\n    options = { mode: options };\x0d\n  }\x0d\n  const {\x0d\n    recursive = false\x2C\x0d\n    mode = 0o777\x2C\x0d\n  } = options || kEmptyObject;\x0d\n  path = getValidatedPath(path);\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n\x0d\n  return binding.mkdir(pathModule.toNamespacedPath(path)\x2C\x0d\n                       parseFileMode(mode\x2C 'mode'\x2C 0o777)\x2C recursive\x2C\x0d\n                       kUsePromises);\x0d\n}\x0d\n\x0d\nasync function readdirRecursive(originalPath\x2C options) {\x0d\n  const result = [];\x0d\n  const queue = [\x0d\n    [\x0d\n      originalPath\x2C\x0d\n      await binding.readdir(\x0d\n        pathModule.toNamespacedPath(originalPath)\x2C\x0d\n        options.encoding\x2C\x0d\n        !!options.withFileTypes\x2C\x0d\n        kUsePromises\x2C\x0d\n      )\x2C\x0d\n    ]\x2C\x0d\n  ];\x0d\n\x0d\n\x0d\n  if (options.withFileTypes) {\x0d\n    while (queue.length > 0) {\x0d\n      // If we want to implement BFS make this a `shift` call instead of `pop`\x0d\n      const { 0: path\x2C 1: readdir } = ArrayPrototypePop(queue);\x0d\n      for (const dirent of getDirents(path\x2C readdir)) {\x0d\n        ArrayPrototypePush(result\x2C dirent);\x0d\n        if (dirent.isDirectory()) {\x0d\n          const direntPath = pathModule.join(path\x2C dirent.name);\x0d\n          ArrayPrototypePush(queue\x2C [\x0d\n            direntPath\x2C\x0d\n            await binding.readdir(\x0d\n              direntPath\x2C\x0d\n              options.encoding\x2C\x0d\n              true\x2C\x0d\n              kUsePromises\x2C\x0d\n            )\x2C\x0d\n          ]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    while (queue.length > 0) {\x0d\n      const { 0: path\x2C 1: readdir } = ArrayPrototypePop(queue);\x0d\n      for (const ent of readdir) {\x0d\n        const direntPath = pathModule.join(path\x2C ent);\x0d\n        const stat = binding.internalModuleStat(direntPath);\x0d\n        ArrayPrototypePush(\x0d\n          result\x2C\x0d\n          pathModule.relative(originalPath\x2C direntPath)\x2C\x0d\n        );\x0d\n        if (stat === 1) {\x0d\n          ArrayPrototypePush(queue\x2C [\x0d\n            direntPath\x2C\x0d\n            await binding.readdir(\x0d\n              pathModule.toNamespacedPath(direntPath)\x2C\x0d\n              options.encoding\x2C\x0d\n              false\x2C\x0d\n              kUsePromises\x2C\x0d\n            )\x2C\x0d\n          ]);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\nasync function readdir(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  if (options.recursive) {\x0d\n    return readdirRecursive(path\x2C options);\x0d\n  }\x0d\n  const result = await binding.readdir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n    !!options.withFileTypes\x2C\x0d\n    kUsePromises\x2C\x0d\n  );\x0d\n  return options.withFileTypes ?\x0d\n    getDirectoryEntriesPromise(path\x2C result) :\x0d\n    result;\x0d\n}\x0d\n\x0d\nasync function readlink(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path\x2C 'oldPath');\x0d\n  return binding.readlink(pathModule.toNamespacedPath(path)\x2C\x0d\n                          options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function symlink(target\x2C path\x2C type_) {\x0d\n  let type = (typeof type_ === 'string' ? type_ : null);\x0d\n  if (isWindows && type === null) {\x0d\n    try {\x0d\n      const absoluteTarget = pathModule.resolve(`${path}`\x2C '..'\x2C `${target}`);\x0d\n      type = (await stat(absoluteTarget)).isDirectory() ? 'dir' : 'file';\x0d\n    } catch {\x0d\n      // Default to 'file' if path is invalid or file does not exist\x0d\n      type = 'file';\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (permission.isEnabled()) {\x0d\n    // The permission model's security guarantees fall apart in the presence of\x0d\n    // relative symbolic links. Thus\x2C we have to prevent their creation.\x0d\n    if (typeof target !== 'string' || !isAbsolute(toPathIfFileURL(target))) {\x0d\n      throw new ERR_ACCESS_DENIED('relative symbolic link target');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  target = getValidatedPath(target\x2C 'target');\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.symlink(preprocessSymlinkDestination(target\x2C type\x2C path)\x2C\x0d\n                         pathModule.toNamespacedPath(path)\x2C\x0d\n                         stringToSymlinkType(type)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fstat(handle\x2C options = { bigint: false }) {\x0d\n  const result = await binding.fstat(handle.fd\x2C options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function lstat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.lstat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                     options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function stat(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.stat(pathModule.toNamespacedPath(path)\x2C\x0d\n                                    options.bigint\x2C kUsePromises);\x0d\n  return getStatsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function statfs(path\x2C options = { bigint: false }) {\x0d\n  path = getValidatedPath(path);\x0d\n  const result = await binding.statfs(pathModule.toNamespacedPath(path)\x2C\x0d\n                                      options.bigint\x2C kUsePromises);\x0d\n  return getStatFsFromBinding(result);\x0d\n}\x0d\n\x0d\nasync function link(existingPath\x2C newPath) {\x0d\n  existingPath = getValidatedPath(existingPath\x2C 'existingPath');\x0d\n  newPath = getValidatedPath(newPath\x2C 'newPath');\x0d\n  return binding.link(pathModule.toNamespacedPath(existingPath)\x2C\x0d\n                      pathModule.toNamespacedPath(newPath)\x2C\x0d\n                      kUsePromises);\x0d\n}\x0d\n\x0d\nasync function unlink(path) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.unlink(pathModule.toNamespacedPath(path)\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchmod(handle\x2C mode) {\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.fchmod(handle.fd\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chmod(path\x2C mode) {\x0d\n  path = getValidatedPath(path);\x0d\n  mode = parseFileMode(mode\x2C 'mode');\x0d\n  return binding.chmod(pathModule.toNamespacedPath(path)\x2C mode\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lchmod(path\x2C mode) {\x0d\n  if (O_SYMLINK === undefined)\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('lchmod()');\x0d\n\x0d\n  const fd = await open(path\x2C O_WRONLY | O_SYMLINK);\x0d\n  return handleFdClose(fchmod(fd\x2C mode)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function lchown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.lchown(pathModule.toNamespacedPath(path)\x2C\x0d\n                        uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function fchown(handle\x2C uid\x2C gid) {\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.fchown(handle.fd\x2C uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function chown(path\x2C uid\x2C gid) {\x0d\n  path = getValidatedPath(path);\x0d\n  validateInteger(uid\x2C 'uid'\x2C -1\x2C kMaxUserId);\x0d\n  validateInteger(gid\x2C 'gid'\x2C -1\x2C kMaxUserId);\x0d\n  return binding.chown(pathModule.toNamespacedPath(path)\x2C\x0d\n                       uid\x2C gid\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function utimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.utimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                        toUnixTimestamp(atime)\x2C\x0d\n                        toUnixTimestamp(mtime)\x2C\x0d\n                        kUsePromises);\x0d\n}\x0d\n\x0d\nasync function futimes(handle\x2C atime\x2C mtime) {\x0d\n  atime = toUnixTimestamp(atime\x2C 'atime');\x0d\n  mtime = toUnixTimestamp(mtime\x2C 'mtime');\x0d\n  return binding.futimes(handle.fd\x2C atime\x2C mtime\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function lutimes(path\x2C atime\x2C mtime) {\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.lutimes(pathModule.toNamespacedPath(path)\x2C\x0d\n                         toUnixTimestamp(atime)\x2C\x0d\n                         toUnixTimestamp(mtime)\x2C\x0d\n                         kUsePromises);\x0d\n}\x0d\n\x0d\nasync function realpath(path\x2C options) {\x0d\n  options = getOptions(options);\x0d\n  path = getValidatedPath(path);\x0d\n  return binding.realpath(pathModule.toNamespacedPath(path)\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function mkdtemp(prefix\x2C options) {\x0d\n  options = getOptions(options);\x0d\n\x0d\n  prefix = getValidatedPath(prefix\x2C 'prefix');\x0d\n  warnOnNonPortableTemplate(prefix);\x0d\n\x0d\n  let path;\x0d\n  if (typeof prefix === 'string') {\x0d\n    path = `${prefix}XXXXXX`;\x0d\n  } else {\x0d\n    path = Buffer.concat([prefix\x2C Buffer.from('XXXXXX')]);\x0d\n  }\x0d\n\x0d\n  return binding.mkdtemp(path\x2C options.encoding\x2C kUsePromises);\x0d\n}\x0d\n\x0d\nasync function writeFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n    mode: 0o666\x2C\x0d\n    flag: 'w'\x2C\x0d\n    flush: false\x2C\x0d\n  });\x0d\n  const flag = options.flag || 'w';\x0d\n  const flush = options.flush ?? false;\x0d\n\x0d\n  validateBoolean(flush\x2C 'options.flush');\x0d\n\x0d\n  if (!isArrayBufferView(data) && !isCustomIterable(data)) {\x0d\n    validateStringAfterArrayBufferView(data\x2C 'data');\x0d\n    data = Buffer.from(data\x2C options.encoding || 'utf8');\x0d\n  }\x0d\n\x0d\n  validateAbortSignal(options.signal);\x0d\n  if (path instanceof FileHandle)\x0d\n    return writeFileHandle(path\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C options.mode);\x0d\n  let writeOp = writeFileHandle(fd\x2C data\x2C options.signal\x2C options.encoding);\x0d\n\x0d\n  if (flush) {\x0d\n    writeOp = handleFdSync(writeOp\x2C fd);\x0d\n  }\x0d\n\x0d\n  return handleFdClose(writeOp\x2C fd.close);\x0d\n}\x0d\n\x0d\nfunction isCustomIterable(obj) {\x0d\n  return isIterable(obj) && !isArrayBufferView(obj) && typeof obj !== 'string';\x0d\n}\x0d\n\x0d\nasync function appendFile(path\x2C data\x2C options) {\x0d\n  options = getOptions(options\x2C { encoding: 'utf8'\x2C mode: 0o666\x2C flag: 'a' });\x0d\n  options = copyObject(options);\x0d\n  options.flag = options.flag || 'a';\x0d\n  return writeFile(path\x2C data\x2C options);\x0d\n}\x0d\n\x0d\nasync function readFile(path\x2C options) {\x0d\n  options = getOptions(options\x2C { flag: 'r' });\x0d\n  const flag = options.flag || 'r';\x0d\n\x0d\n  if (path instanceof FileHandle)\x0d\n    return readFileHandle(path\x2C options);\x0d\n\x0d\n  checkAborted(options.signal);\x0d\n\x0d\n  const fd = await open(path\x2C flag\x2C 0o666);\x0d\n  return handleFdClose(readFileHandle(fd\x2C options)\x2C fd.close);\x0d\n}\x0d\n\x0d\nasync function* _watch(filename\x2C options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  if (options.recursive != null) {\x0d\n    validateBoolean(options.recursive\x2C 'options.recursive');\x0d\n\x0d\n    // TODO(anonrig): Remove non-native watcher when/if libuv supports recursive.\x0d\n    // As of November 2022\x2C libuv does not support recursive file watch on all platforms\x2C\x0d\n    // e.g. Linux due to the limitations of inotify.\x0d\n    if (options.recursive && !isOSX && !isWindows) {\x0d\n      const watcher = new nonNativeWatcher.FSWatcher(options);\x0d\n      watcher[kFSWatchStart](filename);\x0d\n      yield* watcher;\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  yield* watch(filename\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  exports: {\x0d\n    access\x2C\x0d\n    copyFile\x2C\x0d\n    cp\x2C\x0d\n    open\x2C\x0d\n    opendir: promisify(opendir)\x2C\x0d\n    rename\x2C\x0d\n    truncate\x2C\x0d\n    rm\x2C\x0d\n    rmdir\x2C\x0d\n    mkdir\x2C\x0d\n    readdir\x2C\x0d\n    readlink\x2C\x0d\n    symlink\x2C\x0d\n    lstat\x2C\x0d\n    stat\x2C\x0d\n    statfs\x2C\x0d\n    link\x2C\x0d\n    unlink\x2C\x0d\n    chmod\x2C\x0d\n    lchmod\x2C\x0d\n    lchown\x2C\x0d\n    chown\x2C\x0d\n    utimes\x2C\x0d\n    lutimes\x2C\x0d\n    realpath\x2C\x0d\n    mkdtemp\x2C\x0d\n    writeFile\x2C\x0d\n    appendFile\x2C\x0d\n    readFile\x2C\x0d\n    watch: !isOSX && !isWindows ? _watch : watch\x2C\x0d\n    constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  FileHandle\x2C\x0d\n  kRef\x2C\x0d\n  kUnref\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ec96e86,94,0,32269,C0O0C4O32269,,
code-creation,JS,10,197575,0x2bb6ec99abe,2099, node:internal/fs/promises:1:1,0x2bb6ec96e00,~
code-source-info,0x2bb6ec99abe
code-creation,JS,10,197814,0x2bb6ec9a6a6,19,<instance_members_initializer> node:internal/fs/promises:141:1,0x2bb6ec98768,~
code-source-info,0x2bb6ec9a6a6,94,3614,10002,C0O3614C9O5360C18O10002,,
code-creation,Eval,10,198331,0x2bb6ec9dbb6,5, node:internal/fs/dir:1:1,0x2bb6ec9d8b0,~
script-source,95,node:internal/fs/dir,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  PromiseReject\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst pathModule = require('path');\x0d\nconst binding = internalBinding('fs');\x0d\nconst dirBinding = internalBinding('fs_dir');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_DIR_CLOSED\x2C\x0d\n    ERR_DIR_CONCURRENT_OPERATION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { FSReqCallback } = binding;\x0d\nconst internalUtil = require('internal/util');\x0d\nconst {\x0d\n  getDirent\x2C\x0d\n  getOptions\x2C\x0d\n  getValidatedPath\x2C\x0d\n  handleErrorFromBinding\x2C\x0d\n} = require('internal/fs/utils');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kDirHandle = Symbol('kDirHandle');\x0d\nconst kDirPath = Symbol('kDirPath');\x0d\nconst kDirBufferedEntries = Symbol('kDirBufferedEntries');\x0d\nconst kDirClosed = Symbol('kDirClosed');\x0d\nconst kDirOptions = Symbol('kDirOptions');\x0d\nconst kDirReadImpl = Symbol('kDirReadImpl');\x0d\nconst kDirReadPromisified = Symbol('kDirReadPromisified');\x0d\nconst kDirClosePromisified = Symbol('kDirClosePromisified');\x0d\nconst kDirOperationQueue = Symbol('kDirOperationQueue');\x0d\n\x0d\nclass Dir {\x0d\n  constructor(handle\x2C path\x2C options) {\x0d\n    if (handle == null) throw new ERR_MISSING_ARGS('handle');\x0d\n    this[kDirHandle] = handle;\x0d\n    this[kDirBufferedEntries] = [];\x0d\n    this[kDirPath] = path;\x0d\n    this[kDirClosed] = false;\x0d\n\x0d\n    // Either `null` or an Array of pending operations (= functions to be called\x0d\n    // once the current operation is done).\x0d\n    this[kDirOperationQueue] = null;\x0d\n\x0d\n    this[kDirOptions] = {\x0d\n      bufferSize: 32\x2C\x0d\n      ...getOptions(options\x2C {\x0d\n        encoding: 'utf8'\x2C\x0d\n      })\x2C\x0d\n    };\x0d\n\x0d\n    validateUint32(this[kDirOptions].bufferSize\x2C 'options.bufferSize'\x2C true);\x0d\n\x0d\n    this[kDirReadPromisified] = FunctionPrototypeBind(\x0d\n      internalUtil.promisify(this[kDirReadImpl])\x2C this\x2C false);\x0d\n    this[kDirClosePromisified] = FunctionPrototypeBind(\x0d\n      internalUtil.promisify(this.close)\x2C this);\x0d\n  }\x0d\n\x0d\n  get path() {\x0d\n    return this[kDirPath];\x0d\n  }\x0d\n\x0d\n  read(callback) {\x0d\n    return this[kDirReadImpl](true\x2C callback);\x0d\n  }\x0d\n\x0d\n  [kDirReadImpl](maybeSync\x2C callback) {\x0d\n    if (this[kDirClosed] === true) {\x0d\n      throw new ERR_DIR_CLOSED();\x0d\n    }\x0d\n\x0d\n    if (callback === undefined) {\x0d\n      return this[kDirReadPromisified]();\x0d\n    }\x0d\n\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    if (this[kDirOperationQueue] !== null) {\x0d\n      ArrayPrototypePush(this[kDirOperationQueue]\x2C () => {\x0d\n        this[kDirReadImpl](maybeSync\x2C callback);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (this[kDirBufferedEntries].length > 0) {\x0d\n      try {\x0d\n        const dirent = ArrayPrototypeShift(this[kDirBufferedEntries]);\x0d\n\x0d\n        if (this[kDirOptions].recursive && dirent.isDirectory()) {\x0d\n          this.readSyncRecursive(dirent);\x0d\n        }\x0d\n\x0d\n        if (maybeSync)\x0d\n          process.nextTick(callback\x2C null\x2C dirent);\x0d\n        else\x0d\n          callback(null\x2C dirent);\x0d\n        return;\x0d\n      } catch (error) {\x0d\n        return callback(error);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = (err\x2C result) => {\x0d\n      process.nextTick(() => {\x0d\n        const queue = this[kDirOperationQueue];\x0d\n        this[kDirOperationQueue] = null;\x0d\n        for (const op of queue) op();\x0d\n      });\x0d\n\x0d\n      if (err || result === null) {\x0d\n        return callback(err\x2C result);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        this.processReadResult(this[kDirPath]\x2C result);\x0d\n        const dirent = ArrayPrototypeShift(this[kDirBufferedEntries]);\x0d\n        if (this[kDirOptions].recursive && dirent.isDirectory()) {\x0d\n          this.readSyncRecursive(dirent);\x0d\n        }\x0d\n        callback(null\x2C dirent);\x0d\n      } catch (error) {\x0d\n        callback(error);\x0d\n      }\x0d\n    };\x0d\n\x0d\n    this[kDirOperationQueue] = [];\x0d\n    this[kDirHandle].read(\x0d\n      this[kDirOptions].encoding\x2C\x0d\n      this[kDirOptions].bufferSize\x2C\x0d\n      req\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  processReadResult(path\x2C result) {\x0d\n    for (let i = 0; i < result.length; i += 2) {\x0d\n      ArrayPrototypePush(\x0d\n        this[kDirBufferedEntries]\x2C\x0d\n        getDirent(\x0d\n          path\x2C\x0d\n          result[i]\x2C\x0d\n          result[i + 1]\x2C\x0d\n        )\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  readSyncRecursive(dirent) {\x0d\n    const path = pathModule.join(dirent.parentPath\x2C dirent.name);\x0d\n    const ctx = { path };\x0d\n    const handle = dirBinding.opendir(\x0d\n      pathModule.toNamespacedPath(path)\x2C\x0d\n      this[kDirOptions].encoding\x2C\x0d\n      undefined\x2C\x0d\n      ctx\x2C\x0d\n    );\x0d\n    handleErrorFromBinding(ctx);\x0d\n    const result = handle.read(\x0d\n      this[kDirOptions].encoding\x2C\x0d\n      this[kDirOptions].bufferSize\x2C\x0d\n      undefined\x2C\x0d\n      ctx\x2C\x0d\n    );\x0d\n\x0d\n    if (result) {\x0d\n      this.processReadResult(path\x2C result);\x0d\n    }\x0d\n\x0d\n    handle.close(undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n  }\x0d\n\x0d\n  readSync() {\x0d\n    if (this[kDirClosed] === true) {\x0d\n      throw new ERR_DIR_CLOSED();\x0d\n    }\x0d\n\x0d\n    if (this[kDirOperationQueue] !== null) {\x0d\n      throw new ERR_DIR_CONCURRENT_OPERATION();\x0d\n    }\x0d\n\x0d\n    if (this[kDirBufferedEntries].length > 0) {\x0d\n      const dirent = ArrayPrototypeShift(this[kDirBufferedEntries]);\x0d\n      if (this[kDirOptions].recursive && dirent.isDirectory()) {\x0d\n        this.readSyncRecursive(dirent);\x0d\n      }\x0d\n      return dirent;\x0d\n    }\x0d\n\x0d\n    const ctx = { path: this[kDirPath] };\x0d\n    const result = this[kDirHandle].read(\x0d\n      this[kDirOptions].encoding\x2C\x0d\n      this[kDirOptions].bufferSize\x2C\x0d\n      undefined\x2C\x0d\n      ctx\x2C\x0d\n    );\x0d\n    handleErrorFromBinding(ctx);\x0d\n\x0d\n    if (result === null) {\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    this.processReadResult(this[kDirPath]\x2C result);\x0d\n\x0d\n    const dirent = ArrayPrototypeShift(this[kDirBufferedEntries]);\x0d\n    if (this[kDirOptions].recursive && dirent.isDirectory()) {\x0d\n      this.readSyncRecursive(dirent);\x0d\n    }\x0d\n    return dirent;\x0d\n  }\x0d\n\x0d\n  close(callback) {\x0d\n    // Promise\x0d\n    if (callback === undefined) {\x0d\n      if (this[kDirClosed] === true) {\x0d\n        return PromiseReject(new ERR_DIR_CLOSED());\x0d\n      }\x0d\n      return this[kDirClosePromisified]();\x0d\n    }\x0d\n\x0d\n    // callback\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n\x0d\n    if (this[kDirClosed] === true) {\x0d\n      process.nextTick(callback\x2C new ERR_DIR_CLOSED());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (this[kDirOperationQueue] !== null) {\x0d\n      ArrayPrototypePush(this[kDirOperationQueue]\x2C () => {\x0d\n        this.close(callback);\x0d\n      });\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kDirClosed] = true;\x0d\n    const req = new FSReqCallback();\x0d\n    req.oncomplete = callback;\x0d\n    this[kDirHandle].close(req);\x0d\n  }\x0d\n\x0d\n  closeSync() {\x0d\n    if (this[kDirClosed] === true) {\x0d\n      throw new ERR_DIR_CLOSED();\x0d\n    }\x0d\n\x0d\n    if (this[kDirOperationQueue] !== null) {\x0d\n      throw new ERR_DIR_CONCURRENT_OPERATION();\x0d\n    }\x0d\n\x0d\n    this[kDirClosed] = true;\x0d\n    const ctx = { path: this[kDirPath] };\x0d\n    const result = this[kDirHandle].close(undefined\x2C ctx);\x0d\n    handleErrorFromBinding(ctx);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  async* entries() {\x0d\n    try {\x0d\n      while (true) {\x0d\n        const result = await this[kDirReadPromisified]();\x0d\n        if (result === null) {\x0d\n          break;\x0d\n        }\x0d\n        yield result;\x0d\n      }\x0d\n    } finally {\x0d\n      await this[kDirClosePromisified]();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Dir.prototype\x2C SymbolAsyncIterator\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: Dir.prototype.entries\x2C\x0d\n  enumerable: false\x2C\x0d\n  writable: true\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nfunction opendir(path\x2C options\x2C callback) {\x0d\n  callback = typeof options === 'function' ? options : callback;\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  path = getValidatedPath(path);\x0d\n  options = getOptions(options\x2C {\x0d\n    encoding: 'utf8'\x2C\x0d\n  });\x0d\n\x0d\n  function opendirCallback(error\x2C handle) {\x0d\n    if (error) {\x0d\n      callback(error);\x0d\n    } else {\x0d\n      callback(null\x2C new Dir(handle\x2C path\x2C options));\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const req = new FSReqCallback();\x0d\n  req.oncomplete = opendirCallback;\x0d\n\x0d\n  dirBinding.opendir(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n    options.encoding\x2C\x0d\n    req\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction opendirSync(path\x2C options) {\x0d\n  path = getValidatedPath(path);\x0d\n  options = getOptions(options\x2C { encoding: 'utf8' });\x0d\n\x0d\n  const handle = dirBinding.opendirSync(\x0d\n    pathModule.toNamespacedPath(path)\x2C\x0d\n  );\x0d\n\x0d\n  return new Dir(handle\x2C path\x2C options);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Dir\x2C\x0d\n  opendir\x2C\x0d\n  opendirSync\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ec9dbb6,95,0,8415,C0O0C4O8415,,
code-creation,JS,10,198826,0x2bb6ec9e61e,488, node:internal/fs/dir:1:1,0x2bb6ec9db30,~
code-source-info,0x2bb6ec9e61e,95,0,8415,C0O0C100O28C106O51C112O75C118O101C123O126C129O144C134O155C139O216C142O216C146O216C148O250C151O250C156O293C159O293C163O293C165O431C168O431C173O339C178O346C184O367C190O402C196O470C202O519C205O519C209O519C211O636C214O636C219O557C225O571C231O586C237O607C243O720C246O720C251O678C257O699C263O774C266O774C270O774C272O814C275O814C279O814C281O863C284O863C288O863C290O914C293O914C297O914C299O957C302O957C306O957C308O1002C311O1002C315O1002C317O1055C320O1055C324O1055C326O1116C329O1116C333O1116C335O1176C338O1176C342O1176C364O2197C418O1209C420O7294C423O7319C428O7330C436O7387C441O7397C452O7294C457O8355C464O8377C470O8385C476O8397C482O8370C487O8414,,
code-creation,Eval,10,199215,0x2bb6eca02d6,5, node:string_decoder:1:1,0x2bb6eca0060,~
script-source,96,node:string_decoder,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayBufferIsView\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  TypedArrayPrototypeSubarray\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst {\x0d\n  kIncompleteCharactersStart\x2C\x0d\n  kIncompleteCharactersEnd\x2C\x0d\n  kMissingBytes\x2C\x0d\n  kBufferedBytes\x2C\x0d\n  kEncodingField\x2C\x0d\n  kSize\x2C\x0d\n  decode\x2C\x0d\n  flush\x2C\x0d\n} = internalBinding('string_decoder');\x0d\nconst {\x0d\n  kIsEncodingSymbol\x2C\x0d\n  encodingsMap\x2C\x0d\n  normalizeEncoding: _normalizeEncoding\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst isEncoding = Buffer[kIsEncodingSymbol];\x0d\n\x0d\nconst kNativeDecoder = Symbol('kNativeDecoder');\x0d\n\x0d\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\x0d\n// modules monkey-patch it to support additional encodings\x0d\n/**\x0d\n * Normalize encoding notation\x0d\n * @param {string} enc\x0d\n * @returns {"utf8" | "utf16le" | "hex" | "ascii"\x0d\n *           | "base64" | "latin1" | "base64url"}\x0d\n * @throws {TypeError} Throws an error when encoding is invalid\x0d\n */\x0d\nfunction normalizeEncoding(enc) {\x0d\n  const nenc = _normalizeEncoding(enc);\x0d\n  if (nenc === undefined) {\x0d\n    if (Buffer.isEncoding === isEncoding || !Buffer.isEncoding(enc))\x0d\n      throw new ERR_UNKNOWN_ENCODING(enc);\x0d\n    return enc;\x0d\n  }\x0d\n  return nenc;\x0d\n}\x0d\n\x0d\n/**\x0d\n * StringDecoder provides an interface for efficiently splitting a series of\x0d\n * buffers into a series of JS strings without breaking apart multi-byte\x0d\n * characters.\x0d\n * @param {string} [encoding=utf-8]\x0d\n */\x0d\nfunction StringDecoder(encoding) {\x0d\n  this.encoding = normalizeEncoding(encoding);\x0d\n  this[kNativeDecoder] = Buffer.alloc(kSize);\x0d\n  this[kNativeDecoder][kEncodingField] = encodingsMap[this.encoding];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a decoded string\x2C omitting any incomplete multi-bytes\x0d\n * characters at the end of the Buffer\x2C or TypedArray\x2C or DataView\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @returns {string}\x0d\n * @throws {TypeError} Throws when buf is not in one of supported types\x0d\n */\x0d\nStringDecoder.prototype.write = function write(buf) {\x0d\n  if (typeof buf === 'string')\x0d\n    return buf;\x0d\n  if (!ArrayBufferIsView(buf))\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf'\x2C\x0d\n                                   ['Buffer'\x2C 'TypedArray'\x2C 'DataView']\x2C\x0d\n                                   buf);\x0d\n  if (!this[kNativeDecoder]) {\x0d\n    throw new ERR_INVALID_THIS('StringDecoder');\x0d\n  }\x0d\n  return decode(this[kNativeDecoder]\x2C buf);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns any remaining input stored in the internal buffer as a string.\x0d\n * After end() is called\x2C the stringDecoder object can be reused for new\x0d\n * input.\x0d\n * @param {string | Buffer | TypedArray | DataView} [buf]\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.end = function end(buf) {\x0d\n  let ret = '';\x0d\n  if (buf !== undefined)\x0d\n    ret = this.write(buf);\x0d\n  if (this[kNativeDecoder][kBufferedBytes] > 0)\x0d\n    ret += flush(this[kNativeDecoder]);\x0d\n  return ret;\x0d\n};\x0d\n\x0d\n/* Everything below this line is undocumented legacy stuff. */\x0d\n/**\x0d\n *\x0d\n * @param {string | Buffer | TypedArray | DataView} buf\x0d\n * @param {number} offset\x0d\n * @returns {string}\x0d\n */\x0d\nStringDecoder.prototype.text = function text(buf\x2C offset) {\x0d\n  this[kNativeDecoder][kMissingBytes] = 0;\x0d\n  this[kNativeDecoder][kBufferedBytes] = 0;\x0d\n  return this.write(buf.slice(offset));\x0d\n};\x0d\n\x0d\nObjectDefineProperties(StringDecoder.prototype\x2C {\x0d\n  lastChar: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return TypedArrayPrototypeSubarray(this[kNativeDecoder]\x2C\x0d\n                                         kIncompleteCharactersStart\x2C\x0d\n                                         kIncompleteCharactersEnd);\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  lastNeed: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kMissingBytes];\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n  lastTotal: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() {\x0d\n      return this[kNativeDecoder][kBufferedBytes] +\x0d\n             this[kNativeDecoder][kMissingBytes];\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nexports.StringDecoder = StringDecoder;\x0d\n
code-source-info,0x2bb6eca02d6,96,0,5307,C0O0C4O5307,,
code-creation,JS,10,199525,0x2bb6eca0866,356, node:string_decoder:1:1,0x2bb6eca0250,~
code-source-info,0x2bb6eca0866,96,0,5307,C0O0C70O1183C76O1205C81O1232C86O1243C92O1312C95O1312C100O1301C106O1492C109O1492C114O1343C120O1374C126O1403C132O1421C138O1440C144O1459C150O1469C156O1480C162O1622C165O1622C170O1539C175O1561C181O1597C187O1733C190O1733C195O1759C200O1660C206O1685C212O1706C218O1787C223O1793C226O1787C228O1840C231O1840C235O1840C237O3230C246O3246C250O3914C259O3928C263O4331C272O4346C276O4551C286O4577C291O4654C305O4892C310O4969C324O5056C329O5133C343O4514C348O5267C350O5289C355O5306,,
code-creation,Eval,10,200004,0x2bb6eca1b26,5, node:internal/fs/watchers:1:1,0x2bb6eca17e0,~
script-source,97,node:internal/fs/watchers,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeCall\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  UVException\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  createDeferredPromise\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  kFsStatsFieldsNumber\x2C\x0d\n  StatWatcher: _StatWatcher\x2C\x0d\n} = internalBinding('fs');\x0d\n\x0d\nconst { FSEvent } = internalBinding('fs_event_wrap');\x0d\nconst { UV_ENOSPC } = internalBinding('uv');\x0d\nconst { EventEmitter } = require('events');\x0d\n\x0d\nconst {\x0d\n  getStatsFromBinding\x2C\x0d\n  getValidatedPath\x2C\x0d\n} = require('internal/fs/utils');\x0d\n\x0d\nconst {\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { owner_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\n\x0d\nconst { toNamespacedPath } = require('path');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  Buffer: {\x0d\n    isEncoding\x2C\x0d\n  }\x2C\x0d\n} = require('buffer');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst kOldStatus = Symbol('kOldStatus');\x0d\nconst kUseBigint = Symbol('kUseBigint');\x0d\n\x0d\nconst kFSWatchStart = Symbol('kFSWatchStart');\x0d\nconst kFSStatWatcherStart = Symbol('kFSStatWatcherStart');\x0d\nconst KFSStatWatcherRefCount = Symbol('KFSStatWatcherRefCount');\x0d\nconst KFSStatWatcherMaxRefCount = Symbol('KFSStatWatcherMaxRefCount');\x0d\nconst kFSStatWatcherAddOrCleanRef = Symbol('kFSStatWatcherAddOrCleanRef');\x0d\n\x0d\nfunction emitStop(self) {\x0d\n  self.emit('stop');\x0d\n}\x0d\n\x0d\nfunction StatWatcher(bigint) {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._handle = null;\x0d\n  this[kOldStatus] = -1;\x0d\n  this[kUseBigint] = bigint;\x0d\n  this[KFSStatWatcherRefCount] = 1;\x0d\n  this[KFSStatWatcherMaxRefCount] = 1;\x0d\n}\x0d\nObjectSetPrototypeOf(StatWatcher.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(StatWatcher\x2C EventEmitter);\x0d\n\x0d\nfunction onchange(newStatus\x2C stats) {\x0d\n  const self = this[owner_symbol];\x0d\n  if (self[kOldStatus] === -1 &&\x0d\n      newStatus === -1 &&\x0d\n      stats[2/* new nlink */] === stats[16/* old nlink */]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  self[kOldStatus] = newStatus;\x0d\n  self.emit('change'\x2C getStatsFromBinding(stats)\x2C\x0d\n            getStatsFromBinding(stats\x2C kFsStatsFieldsNumber));\x0d\n}\x0d\n\x0d\n// At the moment if filename is undefined\x2C we\x0d\n// 1. Throw an Error if it's the first\x0d\n//    time Symbol('kFSStatWatcherStart') is called\x0d\n// 2. Return silently if Symbol('kFSStatWatcherStart') has already been called\x0d\n//    on a valid filename and the wrap has been initialized\x0d\n// This method is a noop if the watcher has already been started.\x0d\nStatWatcher.prototype[kFSStatWatcherStart] = function(filename\x2C\x0d\n                                                      persistent\x2C\x0d\n                                                      interval) {\x0d\n  if (this._handle !== null)\x0d\n    return;\x0d\n\x0d\n  this._handle = new _StatWatcher(this[kUseBigint]);\x0d\n  this._handle[owner_symbol] = this;\x0d\n  this._handle.onchange = onchange;\x0d\n  if (!persistent)\x0d\n    this.unref();\x0d\n\x0d\n  // uv_fs_poll is a little more powerful than ev_stat but we curb it for\x0d\n  // the sake of backwards compatibility.\x0d\n  this[kOldStatus] = -1;\x0d\n\x0d\n  filename = getValidatedPath(filename\x2C 'filename');\x0d\n  validateUint32(interval\x2C 'interval');\x0d\n  const err = this._handle.start(toNamespacedPath(filename)\x2C interval);\x0d\n  if (err) {\x0d\n    const error = new UVException({\x0d\n      errno: err\x2C\x0d\n      syscall: 'watch'\x2C\x0d\n      path: filename\x2C\x0d\n    });\x0d\n    error.filename = filename;\x0d\n    throw error;\x0d\n  }\x0d\n};\x0d\n\x0d\n// To maximize backward-compatibility for the end user\x2C\x0d\n// a no-op stub method has been added instead of\x0d\n// totally removing StatWatcher.prototype.start.\x0d\n// This should not be documented.\x0d\nStatWatcher.prototype.start = () => {};\x0d\n\x0d\n// FIXME(joyeecheung): this method is not documented while there is\x0d\n// another documented fs.unwatchFile(). The counterpart in\x0d\n// FSWatcher is .close()\x0d\n// This method is a noop if the watcher has not been started.\x0d\nStatWatcher.prototype.stop = function() {\x0d\n  if (this._handle === null)\x0d\n    return;\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this._handle.getAsyncId()\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitStop\x2C\x0d\n                             this);\x0d\n  this._handle.close();\x0d\n  this._handle = null;\x0d\n};\x0d\n\x0d\n// Clean up or add ref counters.\x0d\nStatWatcher.prototype[kFSStatWatcherAddOrCleanRef] = function(operate) {\x0d\n  if (operate === 'add') {\x0d\n    // Add a Ref\x0d\n    this[KFSStatWatcherRefCount]++;\x0d\n    this[KFSStatWatcherMaxRefCount]++;\x0d\n  } else if (operate === 'clean') {\x0d\n    // Clean up a single\x0d\n    this[KFSStatWatcherMaxRefCount]--;\x0d\n    this.unref();\x0d\n  } else if (operate === 'cleanAll') {\x0d\n    // Clean up all\x0d\n    this[KFSStatWatcherMaxRefCount] = 0;\x0d\n    this[KFSStatWatcherRefCount] = 0;\x0d\n    this._handle?.unref();\x0d\n  }\x0d\n};\x0d\n\x0d\nStatWatcher.prototype.ref = function() {\x0d\n  // Avoid refCount calling ref multiple times causing unref to have no effect.\x0d\n  if (this[KFSStatWatcherRefCount] === this[KFSStatWatcherMaxRefCount])\x0d\n    return this;\x0d\n  if (this._handle && this[KFSStatWatcherRefCount]++ === 0)\x0d\n    this._handle.ref();\x0d\n  return this;\x0d\n};\x0d\n\x0d\nStatWatcher.prototype.unref = function() {\x0d\n  // Avoid refCount calling unref multiple times causing ref to have no effect.\x0d\n  if (this[KFSStatWatcherRefCount] === 0) return this;\x0d\n  if (this._handle && --this[KFSStatWatcherRefCount] === 0)\x0d\n    this._handle.unref();\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction FSWatcher() {\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  this._handle = new FSEvent();\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  this._handle.onchange = (status\x2C eventType\x2C filename) => {\x0d\n    // TODO(joyeecheung): we may check self._handle.initialized here\x0d\n    // and return if that is false. This allows us to avoid firing the event\x0d\n    // after the handle is closed\x2C and to fire both UV_RENAME and UV_CHANGE\x0d\n    // if they are set by libuv at the same time.\x0d\n    if (status < 0) {\x0d\n      if (this._handle !== null) {\x0d\n        // We don't use this.close() here to avoid firing the close event.\x0d\n        this._handle.close();\x0d\n        this._handle = null;  // Make the handle garbage collectable.\x0d\n      }\x0d\n      const error = new UVException({\x0d\n        errno: status\x2C\x0d\n        syscall: 'watch'\x2C\x0d\n        path: filename\x2C\x0d\n      });\x0d\n      error.filename = filename;\x0d\n      this.emit('error'\x2C error);\x0d\n    } else {\x0d\n      this.emit('change'\x2C eventType\x2C filename);\x0d\n    }\x0d\n  };\x0d\n}\x0d\nObjectSetPrototypeOf(FSWatcher.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(FSWatcher\x2C EventEmitter);\x0d\n\x0d\n// At the moment if filename is undefined\x2C we\x0d\n// 1. Throw an Error if it's the first time Symbol('kFSWatchStart') is called\x0d\n// 2. Return silently if Symbol('kFSWatchStart') has already been called\x0d\n//    on a valid filename and the wrap has been initialized\x0d\n// 3. Return silently if the watcher has already been closed\x0d\n// This method is a noop if the watcher has already been started.\x0d\nFSWatcher.prototype[kFSWatchStart] = function(filename\x2C\x0d\n                                              persistent\x2C\x0d\n                                              recursive\x2C\x0d\n                                              encoding) {\x0d\n  if (this._handle === null) {  // closed\x0d\n    return;\x0d\n  }\x0d\n  assert(this._handle instanceof FSEvent\x2C 'handle must be a FSEvent');\x0d\n  if (this._handle.initialized) {  // already started\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  filename = getValidatedPath(filename\x2C 'filename');\x0d\n\x0d\n  const err = this._handle.start(toNamespacedPath(filename)\x2C\x0d\n                                 persistent\x2C\x0d\n                                 recursive\x2C\x0d\n                                 encoding);\x0d\n  if (err) {\x0d\n    const error = new UVException({\x0d\n      errno: err\x2C\x0d\n      syscall: 'watch'\x2C\x0d\n      path: filename\x2C\x0d\n      message: err === UV_ENOSPC ?\x0d\n        'System limit for number of file watchers reached' : ''\x2C\x0d\n    });\x0d\n    error.filename = filename;\x0d\n    throw error;\x0d\n  }\x0d\n};\x0d\n\x0d\n// To maximize backward-compatibility for the end user\x2C\x0d\n// a no-op stub method has been added instead of\x0d\n// totally removing FSWatcher.prototype.start.\x0d\n// This should not be documented.\x0d\nFSWatcher.prototype.start = () => {};\x0d\n\x0d\n// This method is a noop if the watcher has not been started or\x0d\n// has already been closed.\x0d\nFSWatcher.prototype.close = function() {\x0d\n  if (this._handle === null) {  // closed\x0d\n    return;\x0d\n  }\x0d\n  assert(this._handle instanceof FSEvent\x2C 'handle must be a FSEvent');\x0d\n  if (!this._handle.initialized) {  // not started\x0d\n    return;\x0d\n  }\x0d\n  this._handle.close();\x0d\n  this._handle = null;  // Make the handle garbage collectable.\x0d\n  process.nextTick(emitCloseNT\x2C this);\x0d\n};\x0d\n\x0d\nFSWatcher.prototype.ref = function() {\x0d\n  if (this._handle) this._handle.ref();\x0d\n  return this;\x0d\n};\x0d\n\x0d\nFSWatcher.prototype.unref = function() {\x0d\n  if (this._handle) this._handle.unref();\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(FSEvent.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\nlet kResistStopPropagation;\x0d\n\x0d\nasync function* watch(filename\x2C options = kEmptyObject) {\x0d\n  const path = toNamespacedPath(getValidatedPath(filename));\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const {\x0d\n    persistent = true\x2C\x0d\n    recursive = false\x2C\x0d\n    encoding = 'utf8'\x2C\x0d\n    signal\x2C\x0d\n  } = options;\x0d\n\x0d\n  validateBoolean(persistent\x2C 'options.persistent');\x0d\n  validateBoolean(recursive\x2C 'options.recursive');\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n\x0d\n  if (encoding && !isEncoding(encoding)) {\x0d\n    const reason = 'is invalid encoding';\x0d\n    throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'encoding'\x2C reason);\x0d\n  }\x0d\n\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n\x0d\n  const handle = new FSEvent();\x0d\n  let { promise\x2C resolve\x2C reject } = createDeferredPromise();\x0d\n  const oncancel = () => {\x0d\n    handle.close();\x0d\n    reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  };\x0d\n\x0d\n  try {\x0d\n    if (signal) {\x0d\n      kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n      signal.addEventListener('abort'\x2C oncancel\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n    }\x0d\n    handle.onchange = (status\x2C eventType\x2C filename) => {\x0d\n      if (status < 0) {\x0d\n        const error = new UVException({\x0d\n          errno: status\x2C\x0d\n          syscall: 'watch'\x2C\x0d\n          path: filename\x2C\x0d\n        });\x0d\n        error.filename = filename;\x0d\n        handle.close();\x0d\n        reject(error);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      resolve({ eventType\x2C filename });\x0d\n    };\x0d\n\x0d\n    const err = handle.start(path\x2C persistent\x2C recursive\x2C encoding);\x0d\n    if (err) {\x0d\n      const error = new UVException({\x0d\n        errno: err\x2C\x0d\n        syscall: 'watch'\x2C\x0d\n        path: filename\x2C\x0d\n        message: err === UV_ENOSPC ?\x0d\n          'System limit for number of file watchers reached' : ''\x2C\x0d\n      });\x0d\n      error.filename = filename;\x0d\n      handle.close();\x0d\n      throw error;\x0d\n    }\x0d\n\x0d\n    while (!signal?.aborted) {\x0d\n      yield await promise;\x0d\n      ({ promise\x2C resolve\x2C reject } = createDeferredPromise());\x0d\n    }\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  } finally {\x0d\n    handle.close();\x0d\n    signal?.removeEventListener('abort'\x2C oncancel);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FSWatcher\x2C\x0d\n  StatWatcher\x2C\x0d\n  kFSWatchStart\x2C\x0d\n  kFSStatWatcherStart\x2C\x0d\n  kFSStatWatcherAddOrCleanRef\x2C\x0d\n  watch\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6eca1b26,97,0,11649,C0O0C4O11649,,
code-creation,JS,10,200638,0x2bb6eca273e,751, node:internal/fs/watchers:1:1,0x2bb6eca1aa0,~
code-source-info,0x2bb6eca273e
code-creation,Eval,10,201356,0x2bb6eca74de,5, node:internal/fs/recursive_watch:1:1,0x2bb6eca7110,~
script-source,98,node:internal/fs/recursive_watch,'use strict';\x0d\n\x0d\nconst {\x0d\n  Promise\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { EventEmitter } = require('events');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { getValidatedPath } = require('internal/fs/utils');\x0d\nconst { kFSWatchStart\x2C StatWatcher } = require('internal/fs/watchers');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst { validateBoolean\x2C validateAbortSignal } = require('internal/validators');\x0d\nconst {\x0d\n  basename: pathBasename\x2C\x0d\n  join: pathJoin\x2C\x0d\n  relative: pathRelative\x2C\x0d\n  resolve: pathResolve\x2C\x0d\n} = require('path');\x0d\n\x0d\nlet internalSync;\x0d\n\x0d\nfunction lazyLoadFsSync() {\x0d\n  internalSync ??= require('fs');\x0d\n  return internalSync;\x0d\n}\x0d\n\x0d\nlet kResistStopPropagation;\x0d\n\x0d\nclass FSWatcher extends EventEmitter {\x0d\n  #options = null;\x0d\n  #closed = false;\x0d\n  #files = new SafeMap();\x0d\n  #watchers = new SafeMap();\x0d\n  #symbolicFiles = new SafeSet();\x0d\n  #rootPath = pathResolve();\x0d\n  #watchingFile = false;\x0d\n\x0d\n  constructor(options = kEmptyObject) {\x0d\n    super();\x0d\n\x0d\n    assert(typeof options === 'object');\x0d\n\x0d\n    const { persistent\x2C recursive\x2C signal\x2C encoding } = options;\x0d\n\x0d\n    // TODO(anonrig): Add non-recursive support to non-native-watcher for IBMi & AIX support.\x0d\n    if (recursive != null) {\x0d\n      validateBoolean(recursive\x2C 'options.recursive');\x0d\n    }\x0d\n\x0d\n    if (persistent != null) {\x0d\n      validateBoolean(persistent\x2C 'options.persistent');\x0d\n    }\x0d\n\x0d\n    if (signal != null) {\x0d\n      validateAbortSignal(signal\x2C 'options.signal');\x0d\n    }\x0d\n\x0d\n    if (encoding != null) {\x0d\n      // This is required since on macOS and Windows it throws ERR_INVALID_ARG_VALUE\x0d\n      if (typeof encoding !== 'string') {\x0d\n        throw new ERR_INVALID_ARG_VALUE(encoding\x2C 'options.encoding');\x0d\n      }\x0d\n    }\x0d\n\x0d\n    this.#options = { persistent\x2C recursive\x2C signal\x2C encoding };\x0d\n  }\x0d\n\x0d\n  close() {\x0d\n    if (this.#closed) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this.#closed = true;\x0d\n\x0d\n    for (const file of this.#files.keys()) {\x0d\n      this.#watchers.get(file).close();\x0d\n      this.#watchers.delete(file);\x0d\n    }\x0d\n\x0d\n    this.#files.clear();\x0d\n    this.#symbolicFiles.clear();\x0d\n    this.emit('close');\x0d\n  }\x0d\n\x0d\n  #unwatchFiles(file) {\x0d\n    this.#symbolicFiles.delete(file);\x0d\n\x0d\n    for (const filename of this.#files.keys()) {\x0d\n      if (StringPrototypeStartsWith(filename\x2C file)) {\x0d\n        this.#files.delete(filename);\x0d\n        this.#watchers.get(filename).close();\x0d\n        this.#watchers.delete(filename);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  #watchFolder(folder) {\x0d\n    const { readdirSync } = lazyLoadFsSync();\x0d\n\x0d\n    try {\x0d\n      const files = readdirSync(folder\x2C {\x0d\n        withFileTypes: true\x2C\x0d\n      });\x0d\n\x0d\n      for (const file of files) {\x0d\n        if (this.#closed) {\x0d\n          break;\x0d\n        }\x0d\n\x0d\n        const f = pathJoin(folder\x2C file.name);\x0d\n\x0d\n        if (!this.#files.has(f)) {\x0d\n          this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C f));\x0d\n\x0d\n          if (file.isSymbolicLink()) {\x0d\n            this.#symbolicFiles.add(f);\x0d\n          }\x0d\n\x0d\n          this.#watchFile(f);\x0d\n          if (file.isDirectory() && !file.isSymbolicLink()) {\x0d\n            this.#watchFolder(f);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    } catch (error) {\x0d\n      this.emit('error'\x2C error);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  #watchFile(file) {\x0d\n    if (this.#closed) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    const { watch\x2C statSync } = lazyLoadFsSync();\x0d\n\x0d\n    if (this.#files.has(file)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    {\x0d\n      const existingStat = statSync(file);\x0d\n      this.#files.set(file\x2C existingStat);\x0d\n    }\x0d\n\x0d\n    const watcher = watch(file\x2C {\x0d\n      persistent: this.#options.persistent\x2C\x0d\n    }\x2C (eventType\x2C filename) => {\x0d\n      const existingStat = this.#files.get(file);\x0d\n      const currentStats = statSync(file);\x0d\n\x0d\n      this.#files.set(file\x2C currentStats);\x0d\n\x0d\n      if (currentStats.birthtimeMs === 0 && existingStat.birthtimeMs !== 0) {\x0d\n        // The file is now deleted\x0d\n        this.#files.delete(file);\x0d\n        this.#watchers.delete(file);\x0d\n        watcher.close();\x0d\n        this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C file));\x0d\n        this.#unwatchFiles(file);\x0d\n      } else if (file === this.#rootPath && this.#watchingFile) {\x0d\n        // This case will only be triggered when watching a file with fs.watch\x0d\n        this.emit('change'\x2C 'change'\x2C pathBasename(file));\x0d\n      } else if (this.#symbolicFiles.has(file)) {\x0d\n        // Stats from watchFile does not return correct value for currentStats.isSymbolicLink()\x0d\n        // Since it is only valid when using fs.lstat(). Therefore\x2C check the existing symbolic files.\x0d\n        this.emit('change'\x2C 'rename'\x2C pathRelative(this.#rootPath\x2C file));\x0d\n      } else if (currentStats.isDirectory()) {\x0d\n        this.#watchFolder(file);\x0d\n      } else {\x0d\n        // Watching a directory will trigger a change event for child files)\x0d\n        this.emit('change'\x2C 'change'\x2C pathRelative(this.#rootPath\x2C file));\x0d\n      }\x0d\n    });\x0d\n    this.#watchers.set(file\x2C watcher);\x0d\n  }\x0d\n\x0d\n  [kFSWatchStart](filename) {\x0d\n    filename = pathResolve(getValidatedPath(filename));\x0d\n\x0d\n    try {\x0d\n      const file = lazyLoadFsSync().statSync(filename);\x0d\n\x0d\n      this.#rootPath = filename;\x0d\n      this.#closed = false;\x0d\n      this.#watchingFile = file.isFile();\x0d\n\x0d\n      this.#watchFile(filename);\x0d\n      if (file.isDirectory()) {\x0d\n        this.#watchFolder(filename);\x0d\n      }\x0d\n    } catch (error) {\x0d\n      if (error.code === 'ENOENT') {\x0d\n        error.filename = filename;\x0d\n        throw error;\x0d\n      }\x0d\n    }\x0d\n\x0d\n  }\x0d\n\x0d\n  ref() {\x0d\n    this.#files.forEach((file) => {\x0d\n      if (file instanceof StatWatcher) {\x0d\n        file.ref();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  unref() {\x0d\n    this.#files.forEach((file) => {\x0d\n      if (file instanceof StatWatcher) {\x0d\n        file.unref();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  [SymbolAsyncIterator]() {\x0d\n    const { signal } = this.#options;\x0d\n    const promiseExecutor = signal == null ?\x0d\n      (resolve) => {\x0d\n        this.once('change'\x2C (eventType\x2C filename) => {\x0d\n          resolve({ __proto__: null\x2C value: { eventType\x2C filename } });\x0d\n        });\x0d\n      } : (resolve\x2C reject) => {\x0d\n        const onAbort = () => {\x0d\n          this.close();\x0d\n          reject(new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n        };\x0d\n        if (signal.aborted) return onAbort();\x0d\n        kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n        signal.addEventListener('abort'\x2C onAbort\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n        this.once('change'\x2C (eventType\x2C filename) => {\x0d\n          signal.removeEventListener('abort'\x2C onAbort);\x0d\n          resolve({ __proto__: null\x2C value: { eventType\x2C filename } });\x0d\n        });\x0d\n      };\x0d\n    return {\x0d\n      next: () => (this.#closed ?\x0d\n        { __proto__: null\x2C done: true } :\x0d\n        new Promise(promiseExecutor))\x2C\x0d\n      return: () => {\x0d\n        this.close();\x0d\n        return { __proto__: null\x2C done: true };\x0d\n      }\x2C\x0d\n      [SymbolAsyncIterator]() { return this; }\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  FSWatcher\x2C\x0d\n  kFSWatchStart\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6eca74de,98,0,7168,C0O0C4O7168,,
code-creation,JS,10,201776,0x2bb6eca7e2e,493, node:internal/fs/recursive_watch:1:1,0x2bb6eca7458,~
code-source-info,0x2bb6eca7e2e,98,0,7168,C0O0C72O28C78O40C84O52C90O64C96O94C102O161C108O161C113O144C118O196C124O196C128O196C130O299C136O299C141O236C147O258C152O265C158O357C164O357C169O336C175O427C181O427C186O396C191O411C197O486C203O486C208O469C214O562C220O562C225O521C231O538C237O706C243O706C248O616C254O639C260O662C266O688C272O730C273O730C275O844C276O844C401O895C413O5089C433O5891C468O7112C475O7134C481O7148C487O7127C492O7167,,
code-creation,JS,10,201843,0x2bb6eca814e,107,<instance_members_initializer> node:internal/fs/recursive_watch:39:1,0x2bb6eca7860,~
code-source-info,0x2bb6eca814e,98,871,7108,C3O924C12O943C21O962C28O962C41O992C48O992C61O1027C68O1027C81O1057C88O1057C99O1091C106O7108,,
code-creation,Eval,10,202249,0x2bb6eca99d6,5, node:internal/streams/utils:1:1,0x2bb6eca9750,~
script-source,99,node:internal/streams/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolFor\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\n// We need to use SymbolFor to make these globally available\x0d\n// for interopt with readable-stream\x2C i.e. readable-stream\x0d\n// and node core needs to be able to read/write private state\x0d\n// from each other for proper interoperability.\x0d\nconst kIsDestroyed = SymbolFor('nodejs.stream.destroyed');\x0d\nconst kIsErrored = SymbolFor('nodejs.stream.errored');\x0d\nconst kIsReadable = SymbolFor('nodejs.stream.readable');\x0d\nconst kIsWritable = SymbolFor('nodejs.stream.writable');\x0d\nconst kIsDisturbed = SymbolFor('nodejs.stream.disturbed');\x0d\n\x0d\nconst kOnConstructed = Symbol('kOnConstructed');\x0d\n\x0d\nconst kIsClosedPromise = SymbolFor('nodejs.webstream.isClosedPromise');\x0d\nconst kControllerErrorFunction = SymbolFor('nodejs.webstream.controllerErrorFunction');\x0d\n\x0d\nconst kState = Symbol('kState');\x0d\nconst kObjectMode = 1 << 0;\x0d\nconst kErrorEmitted = 1 << 1;\x0d\nconst kAutoDestroy = 1 << 2;\x0d\nconst kEmitClose = 1 << 3;\x0d\nconst kDestroyed = 1 << 4;\x0d\nconst kClosed = 1 << 5;\x0d\nconst kCloseEmitted = 1 << 6;\x0d\nconst kErrored = 1 << 7;\x0d\nconst kConstructed = 1 << 8;\x0d\n\x0d\nfunction isReadableNodeStream(obj\x2C strict = false) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    typeof obj.pipe === 'function' &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    (\x0d\n      !strict ||\x0d\n      (typeof obj.pause === 'function' && typeof obj.resume === 'function')\x0d\n    ) &&\x0d\n    (!obj._writableState || obj._readableState?.readable !== false) && // Duplex\x0d\n    (!obj._writableState || obj._readableState) // Writable has .pipe.\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWritableNodeStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    typeof obj.write === 'function' &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    (!obj._readableState || obj._writableState?.writable !== false) // Duplex\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isDuplexNodeStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    (typeof obj.pipe === 'function' && obj._readableState) &&\x0d\n    typeof obj.on === 'function' &&\x0d\n    typeof obj.write === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isNodeStream(obj) {\x0d\n  return (\x0d\n    obj &&\x0d\n    (\x0d\n      obj._readableState ||\x0d\n      obj._writableState ||\x0d\n      (typeof obj.write === 'function' && typeof obj.on === 'function') ||\x0d\n      (typeof obj.pipe === 'function' && typeof obj.on === 'function')\x0d\n    )\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isReadableStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.pipeThrough === 'function' &&\x0d\n    typeof obj.getReader === 'function' &&\x0d\n    typeof obj.cancel === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWritableStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.getWriter === 'function' &&\x0d\n    typeof obj.abort === 'function'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isTransformStream(obj) {\x0d\n  return !!(\x0d\n    obj &&\x0d\n    !isNodeStream(obj) &&\x0d\n    typeof obj.readable === 'object' &&\x0d\n    typeof obj.writable === 'object'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isWebStream(obj) {\x0d\n  return isReadableStream(obj) || isWritableStream(obj) || isTransformStream(obj);\x0d\n}\x0d\n\x0d\nfunction isIterable(obj\x2C isAsync) {\x0d\n  if (obj == null) return false;\x0d\n  if (isAsync === true) return typeof obj[SymbolAsyncIterator] === 'function';\x0d\n  if (isAsync === false) return typeof obj[SymbolIterator] === 'function';\x0d\n  return typeof obj[SymbolAsyncIterator] === 'function' ||\x0d\n    typeof obj[SymbolIterator] === 'function';\x0d\n}\x0d\n\x0d\nfunction isDestroyed(stream) {\x0d\n  if (!isNodeStream(stream)) return null;\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n  const state = wState || rState;\x0d\n  return !!(stream.destroyed || stream[kIsDestroyed] || state?.destroyed);\x0d\n}\x0d\n\x0d\n// Have been end():d.\x0d\nfunction isWritableEnded(stream) {\x0d\n  if (!isWritableNodeStream(stream)) return null;\x0d\n  if (stream.writableEnded === true) return true;\x0d\n  const wState = stream._writableState;\x0d\n  if (wState?.errored) return false;\x0d\n  if (typeof wState?.ended !== 'boolean') return null;\x0d\n  return wState.ended;\x0d\n}\x0d\n\x0d\n// Have emitted 'finish'.\x0d\nfunction isWritableFinished(stream\x2C strict) {\x0d\n  if (!isWritableNodeStream(stream)) return null;\x0d\n  if (stream.writableFinished === true) return true;\x0d\n  const wState = stream._writableState;\x0d\n  if (wState?.errored) return false;\x0d\n  if (typeof wState?.finished !== 'boolean') return null;\x0d\n  return !!(\x0d\n    wState.finished ||\x0d\n    (strict === false && wState.ended === true && wState.length === 0)\x0d\n  );\x0d\n}\x0d\n\x0d\n// Have been push(null):d.\x0d\nfunction isReadableEnded(stream) {\x0d\n  if (!isReadableNodeStream(stream)) return null;\x0d\n  if (stream.readableEnded === true) return true;\x0d\n  const rState = stream._readableState;\x0d\n  if (!rState || rState.errored) return false;\x0d\n  if (typeof rState?.ended !== 'boolean') return null;\x0d\n  return rState.ended;\x0d\n}\x0d\n\x0d\n// Have emitted 'end'.\x0d\nfunction isReadableFinished(stream\x2C strict) {\x0d\n  if (!isReadableNodeStream(stream)) return null;\x0d\n  const rState = stream._readableState;\x0d\n  if (rState?.errored) return false;\x0d\n  if (typeof rState?.endEmitted !== 'boolean') return null;\x0d\n  return !!(\x0d\n    rState.endEmitted ||\x0d\n    (strict === false && rState.ended === true && rState.length === 0)\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isReadable(stream) {\x0d\n  if (stream && stream[kIsReadable] != null) return stream[kIsReadable];\x0d\n  if (typeof stream?.readable !== 'boolean') return null;\x0d\n  if (isDestroyed(stream)) return false;\x0d\n  return isReadableNodeStream(stream) &&\x0d\n    stream.readable &&\x0d\n    !isReadableFinished(stream);\x0d\n}\x0d\n\x0d\nfunction isWritable(stream) {\x0d\n  if (stream && stream[kIsWritable] != null) return stream[kIsWritable];\x0d\n  if (typeof stream?.writable !== 'boolean') return null;\x0d\n  if (isDestroyed(stream)) return false;\x0d\n  return isWritableNodeStream(stream) &&\x0d\n    stream.writable &&\x0d\n    !isWritableEnded(stream);\x0d\n}\x0d\n\x0d\nfunction isFinished(stream\x2C opts) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (isDestroyed(stream)) {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (opts?.readable !== false && isReadable(stream)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (opts?.writable !== false && isWritable(stream)) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n}\x0d\n\x0d\nfunction isWritableErrored(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (stream.writableErrored) {\x0d\n    return stream.writableErrored;\x0d\n  }\x0d\n\x0d\n  return stream._writableState?.errored ?? null;\x0d\n}\x0d\n\x0d\nfunction isReadableErrored(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (stream.readableErrored) {\x0d\n    return stream.readableErrored;\x0d\n  }\x0d\n\x0d\n  return stream._readableState?.errored ?? null;\x0d\n}\x0d\n\x0d\nfunction isClosed(stream) {\x0d\n  if (!isNodeStream(stream)) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  if (typeof stream.closed === 'boolean') {\x0d\n    return stream.closed;\x0d\n  }\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n\x0d\n  if (\x0d\n    typeof wState?.closed === 'boolean' ||\x0d\n    typeof rState?.closed === 'boolean'\x0d\n  ) {\x0d\n    return wState?.closed || rState?.closed;\x0d\n  }\x0d\n\x0d\n  if (typeof stream._closed === 'boolean' && isOutgoingMessage(stream)) {\x0d\n    return stream._closed;\x0d\n  }\x0d\n\x0d\n  return null;\x0d\n}\x0d\n\x0d\nfunction isOutgoingMessage(stream) {\x0d\n  return (\x0d\n    typeof stream._closed === 'boolean' &&\x0d\n    typeof stream._defaultKeepAlive === 'boolean' &&\x0d\n    typeof stream._removedConnection === 'boolean' &&\x0d\n    typeof stream._removedContLen === 'boolean'\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isServerResponse(stream) {\x0d\n  return (\x0d\n    typeof stream._sent100 === 'boolean' &&\x0d\n    isOutgoingMessage(stream)\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isServerRequest(stream) {\x0d\n  return (\x0d\n    typeof stream._consuming === 'boolean' &&\x0d\n    typeof stream._dumped === 'boolean' &&\x0d\n    stream.req?.upgradeOrConnect === undefined\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction willEmitClose(stream) {\x0d\n  if (!isNodeStream(stream)) return null;\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n  const state = wState || rState;\x0d\n\x0d\n  return (!state && isServerResponse(stream)) || !!(\x0d\n    state &&\x0d\n    state.autoDestroy &&\x0d\n    state.emitClose &&\x0d\n    state.closed === false\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction isDisturbed(stream) {\x0d\n  return !!(stream && (\x0d\n    stream[kIsDisturbed] ??\x0d\n    (stream.readableDidRead || stream.readableAborted)\x0d\n  ));\x0d\n}\x0d\n\x0d\nfunction isErrored(stream) {\x0d\n  return !!(stream && (\x0d\n    stream[kIsErrored] ??\x0d\n    stream.readableErrored ??\x0d\n    stream.writableErrored ??\x0d\n    stream._readableState?.errorEmitted ??\x0d\n    stream._writableState?.errorEmitted ??\x0d\n    stream._readableState?.errored ??\x0d\n    stream._writableState?.errored\x0d\n  ));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  kOnConstructed\x2C\x0d\n  isDestroyed\x2C\x0d\n  kIsDestroyed\x2C\x0d\n  isDisturbed\x2C\x0d\n  kIsDisturbed\x2C\x0d\n  isErrored\x2C\x0d\n  kIsErrored\x2C\x0d\n  isReadable\x2C\x0d\n  kIsReadable\x2C\x0d\n  kIsClosedPromise\x2C\x0d\n  kControllerErrorFunction\x2C\x0d\n  kIsWritable\x2C\x0d\n  isClosed\x2C\x0d\n  isDuplexNodeStream\x2C\x0d\n  isFinished\x2C\x0d\n  isIterable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableEnded\x2C\x0d\n  isReadableFinished\x2C\x0d\n  isReadableErrored\x2C\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n  isWritable\x2C\x0d\n  isWritableNodeStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isWritableEnded\x2C\x0d\n  isWritableFinished\x2C\x0d\n  isWritableErrored\x2C\x0d\n  isServerRequest\x2C\x0d\n  isServerResponse\x2C\x0d\n  willEmitClose\x2C\x0d\n  isTransformStream\x2C\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6eca99d6,99,0,9298,C0O0C4O9298,,
code-creation,JS,10,202786,0x2bb6ecaa7ce,592, node:internal/streams/utils:1:1,0x2bb6eca9950,~
code-source-info,0x2bb6ecaa7ce,99,0,9298,C0O0C181O28C187O52C193O71C198O85C203O369C207O369C211O369C213O427C217O427C221O427C223O484C227O484C231O484C233O542C237O542C241O542C243O601C247O601C251O601C253O665C257O665C262O719C266O719C271O800C275O800C280O873C284O873C289O912C292O943C295O973C298O1001C301O1029C304O1054C307O1085C310O1111C315O1141C320O8478C328O8500C334O8519C340O8535C346O8552C352O8568C358O8585C364O8599C370O8614C376O8629C382O8645C388O8666C394O8695C400O8711C406O8724C412O8747C418O8762C424O8777C430O8802C436O8823C442O8843C448O8866C454O8888C460O8905C466O8921C472O8936C478O8961C484O8982C490O9002C496O9025C502O9047C508O9067C514O9088C520O9106C526O9128C532O9155C538O9171C544O9189C550O9206C556O9221C562O9236C568O9248C574O9266C580O9279C586O8493C591O9297,,
tick,0x7ff6cc0e277b,203071,0,0x0,0,0x7ff6cbdaf070,0x2bb6ecaa90e,0x7ff64c443feb,0x7ff64c443ca1,0x2bb6ec99fa8,0x7ff64c443feb,0x7ff64c443ca1,0x2bb6ec94942,0x2bb6ec93a11,0x2bb6ec91fea,0x2bb6ec91d82,0x2bb6ec910bc,0x2bb6ec8f2ea,0x2bb6ec8ed36,0x8c1d17a531,0x7ff6cc2dfcd7
code-creation,Eval,10,204143,0x2bb6ecaf4a6,5, node:internal/readline/interface:1:1,0x2bb6ecae008,~
script-source,100,node:internal/readline/interface,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeReverse\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  DateNow\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathCeil\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMaxApply\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolDispose\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SafeStringIterator\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { codes } = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_VALUE\x2C\x0d\n  ERR_USE_AFTER_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateArray\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n  validateUint32\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n} = require('internal/util/inspect');\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  kSubstringSearch\x2C\x0d\n} = require('internal/readline/utils');\x0d\nlet emitKeypressEvents;\x0d\nlet kFirstEventParam;\x0d\nconst {\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n} = require('internal/readline/callbacks');\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\n\x0d\nconst kHistorySize = 30;\x0d\nconst kMaxUndoRedoStackSize = 2048;\x0d\nconst kMincrlfDelay = 100;\x0d\n// \\r\\n\x2C \\n\x2C or \\r followed by something other than \\n\x0d\nconst lineEnding = /\\r?\\n|\\r(?!\\n)/g;\x0d\n\x0d\nconst kLineObjectStream = Symbol('line object stream');\x0d\nconst kQuestionCancel = Symbol('kQuestionCancel');\x0d\nconst kQuestion = Symbol('kQuestion');\x0d\n\x0d\n// GNU readline library - keyseq-timeout is 500ms (default)\x0d\nconst ESCAPE_CODE_TIMEOUT = 500;\x0d\n\x0d\n// Max length of the kill ring\x0d\nconst kMaxLengthOfKillRing = 32;\x0d\n\x0d\nconst kAddHistory = Symbol('_addHistory');\x0d\nconst kBeforeEdit = Symbol('_beforeEdit');\x0d\nconst kDecoder = Symbol('_decoder');\x0d\nconst kDeleteLeft = Symbol('_deleteLeft');\x0d\nconst kDeleteLineLeft = Symbol('_deleteLineLeft');\x0d\nconst kDeleteLineRight = Symbol('_deleteLineRight');\x0d\nconst kDeleteRight = Symbol('_deleteRight');\x0d\nconst kDeleteWordLeft = Symbol('_deleteWordLeft');\x0d\nconst kDeleteWordRight = Symbol('_deleteWordRight');\x0d\nconst kGetDisplayPos = Symbol('_getDisplayPos');\x0d\nconst kHistoryNext = Symbol('_historyNext');\x0d\nconst kHistoryPrev = Symbol('_historyPrev');\x0d\nconst kInsertString = Symbol('_insertString');\x0d\nconst kLine = Symbol('_line');\x0d\nconst kLine_buffer = Symbol('_line_buffer');\x0d\nconst kKillRing = Symbol('_killRing');\x0d\nconst kKillRingCursor = Symbol('_killRingCursor');\x0d\nconst kMoveCursor = Symbol('_moveCursor');\x0d\nconst kNormalWrite = Symbol('_normalWrite');\x0d\nconst kOldPrompt = Symbol('_oldPrompt');\x0d\nconst kOnLine = Symbol('_onLine');\x0d\nconst kPreviousKey = Symbol('_previousKey');\x0d\nconst kPrompt = Symbol('_prompt');\x0d\nconst kPushToKillRing = Symbol('_pushToKillRing');\x0d\nconst kPushToUndoStack = Symbol('_pushToUndoStack');\x0d\nconst kQuestionCallback = Symbol('_questionCallback');\x0d\nconst kRedo = Symbol('_redo');\x0d\nconst kRedoStack = Symbol('_redoStack');\x0d\nconst kRefreshLine = Symbol('_refreshLine');\x0d\nconst kSawKeyPress = Symbol('_sawKeyPress');\x0d\nconst kSawReturnAt = Symbol('_sawReturnAt');\x0d\nconst kSetRawMode = Symbol('_setRawMode');\x0d\nconst kTabComplete = Symbol('_tabComplete');\x0d\nconst kTabCompleter = Symbol('_tabCompleter');\x0d\nconst kTtyWrite = Symbol('_ttyWrite');\x0d\nconst kUndo = Symbol('_undo');\x0d\nconst kUndoStack = Symbol('_undoStack');\x0d\nconst kWordLeft = Symbol('_wordLeft');\x0d\nconst kWordRight = Symbol('_wordRight');\x0d\nconst kWriteToOutput = Symbol('_writeToOutput');\x0d\nconst kYank = Symbol('_yank');\x0d\nconst kYanking = Symbol('_yanking');\x0d\nconst kYankPop = Symbol('_yankPop');\x0d\n\x0d\nfunction InterfaceConstructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n  this[kSawReturnAt] = 0;\x0d\n  // TODO(BridgeAR): Document this property. The name is not ideal\x2C so we\x0d\n  // might want to expose an alias and document that instead.\x0d\n  this.isCompletionEnabled = true;\x0d\n  this[kSawKeyPress] = false;\x0d\n  this[kPreviousKey] = null;\x0d\n  this.escapeCodeTimeout = ESCAPE_CODE_TIMEOUT;\x0d\n  this.tabSize = 8;\x0d\n\x0d\n  FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n\x0d\n  let history;\x0d\n  let historySize;\x0d\n  let removeHistoryDuplicates = false;\x0d\n  let crlfDelay;\x0d\n  let prompt = '> ';\x0d\n  let signal;\x0d\n\x0d\n  if (input?.input) {\x0d\n    // An options object was given\x0d\n    output = input.output;\x0d\n    completer = input.completer;\x0d\n    terminal = input.terminal;\x0d\n    history = input.history;\x0d\n    historySize = input.historySize;\x0d\n    signal = input.signal;\x0d\n    if (input.tabSize !== undefined) {\x0d\n      validateUint32(input.tabSize\x2C 'tabSize'\x2C true);\x0d\n      this.tabSize = input.tabSize;\x0d\n    }\x0d\n    removeHistoryDuplicates = input.removeHistoryDuplicates;\x0d\n    if (input.prompt !== undefined) {\x0d\n      prompt = input.prompt;\x0d\n    }\x0d\n    if (input.escapeCodeTimeout !== undefined) {\x0d\n      if (NumberIsFinite(input.escapeCodeTimeout)) {\x0d\n        this.escapeCodeTimeout = input.escapeCodeTimeout;\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_VALUE(\x0d\n          'input.escapeCodeTimeout'\x2C\x0d\n          this.escapeCodeTimeout\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (signal) {\x0d\n      validateAbortSignal(signal\x2C 'options.signal');\x0d\n    }\x0d\n\x0d\n    crlfDelay = input.crlfDelay;\x0d\n    input = input.input;\x0d\n  }\x0d\n\x0d\n  if (completer !== undefined && typeof completer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_VALUE('completer'\x2C completer);\x0d\n  }\x0d\n\x0d\n  if (history === undefined) {\x0d\n    history = [];\x0d\n  } else {\x0d\n    validateArray(history\x2C 'history');\x0d\n  }\x0d\n\x0d\n  if (historySize === undefined) {\x0d\n    historySize = kHistorySize;\x0d\n  }\x0d\n\x0d\n  validateNumber(historySize\x2C 'historySize'\x2C 0);\x0d\n\x0d\n  // Backwards compat; check the isTTY prop of the output stream\x0d\n  //  when `terminal` was not specified\x0d\n  if (terminal === undefined && !(output === null || output === undefined)) {\x0d\n    terminal = !!output.isTTY;\x0d\n  }\x0d\n\x0d\n  const self = this;\x0d\n\x0d\n  this.line = '';\x0d\n  this[kSubstringSearch] = null;\x0d\n  this.output = output;\x0d\n  this.input = input;\x0d\n  this[kUndoStack] = [];\x0d\n  this[kRedoStack] = [];\x0d\n  this.history = history;\x0d\n  this.historySize = historySize;\x0d\n\x0d\n  // The kill ring is a global list of blocks of text that were previously\x0d\n  // killed (deleted). If its size exceeds kMaxLengthOfKillRing\x2C the oldest\x0d\n  // element will be removed to make room for the latest deletion. With kill\x0d\n  // ring\x2C users are able to recall (yank) or cycle (yank pop) among previously\x0d\n  // killed texts\x2C quite similar to the behavior of Emacs.\x0d\n  this[kKillRing] = [];\x0d\n  this[kKillRingCursor] = 0;\x0d\n\x0d\n  this.removeHistoryDuplicates = !!removeHistoryDuplicates;\x0d\n  this.crlfDelay = crlfDelay ?\x0d\n    MathMax(kMincrlfDelay\x2C crlfDelay) :\x0d\n    kMincrlfDelay;\x0d\n  this.completer = completer;\x0d\n\x0d\n  this.setPrompt(prompt);\x0d\n\x0d\n  this.terminal = !!terminal;\x0d\n\x0d\n\x0d\n  function onerror(err) {\x0d\n    self.emit('error'\x2C err);\x0d\n  }\x0d\n\x0d\n  function ondata(data) {\x0d\n    self[kNormalWrite](data);\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    if (\x0d\n      typeof self[kLine_buffer] === 'string' &&\x0d\n        self[kLine_buffer].length > 0\x0d\n    ) {\x0d\n      self.emit('line'\x2C self[kLine_buffer]);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function ontermend() {\x0d\n    if (typeof self.line === 'string' && self.line.length > 0) {\x0d\n      self.emit('line'\x2C self.line);\x0d\n    }\x0d\n    self.close();\x0d\n  }\x0d\n\x0d\n  function onkeypress(s\x2C key) {\x0d\n    self[kTtyWrite](s\x2C key);\x0d\n    if (key && key.sequence) {\x0d\n      // If the key.sequence is half of a surrogate pair\x0d\n      // (>= 0xd800 and <= 0xdfff)\x2C refresh the line so\x0d\n      // the character is displayed appropriately.\x0d\n      const ch = StringPrototypeCodePointAt(key.sequence\x2C 0);\x0d\n      if (ch >= 0xd800 && ch <= 0xdfff) self[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onresize() {\x0d\n    self[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  this[kLineObjectStream] = undefined;\x0d\n\x0d\n  input.on('error'\x2C onerror);\x0d\n\x0d\n  if (!this.terminal) {\x0d\n    function onSelfCloseWithoutTerminal() {\x0d\n      input.removeListener('data'\x2C ondata);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C onend);\x0d\n    }\x0d\n\x0d\n    input.on('data'\x2C ondata);\x0d\n    input.on('end'\x2C onend);\x0d\n    self.once('close'\x2C onSelfCloseWithoutTerminal);\x0d\n    this[kDecoder] = new StringDecoder('utf8');\x0d\n  } else {\x0d\n    function onSelfCloseWithTerminal() {\x0d\n      input.removeListener('keypress'\x2C onkeypress);\x0d\n      input.removeListener('error'\x2C onerror);\x0d\n      input.removeListener('end'\x2C ontermend);\x0d\n      if (output !== null && output !== undefined) {\x0d\n        output.removeListener('resize'\x2C onresize);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    emitKeypressEvents ??= require('internal/readline/emitKeypressEvents');\x0d\n    emitKeypressEvents(input\x2C this);\x0d\n\x0d\n    // `input` usually refers to stdin\x0d\n    input.on('keypress'\x2C onkeypress);\x0d\n    input.on('end'\x2C ontermend);\x0d\n\x0d\n    this[kSetRawMode](true);\x0d\n    this.terminal = true;\x0d\n\x0d\n    // Cursor position on the line.\x0d\n    this.cursor = 0;\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    if (output !== null && output !== undefined)\x0d\n      output.on('resize'\x2C onresize);\x0d\n\x0d\n    self.once('close'\x2C onSelfCloseWithTerminal);\x0d\n  }\x0d\n\x0d\n  if (signal) {\x0d\n    const onAborted = () => self.close();\x0d\n    if (signal.aborted) {\x0d\n      process.nextTick(onAborted);\x0d\n    } else {\x0d\n      const disposable = EventEmitter.addAbortListener(signal\x2C onAborted);\x0d\n      self.once('close'\x2C disposable[SymbolDispose]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Current line\x0d\n  this.line = '';\x0d\n\x0d\n  input.resume();\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(InterfaceConstructor.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(InterfaceConstructor\x2C EventEmitter);\x0d\n\x0d\nclass Interface extends InterfaceConstructor {\x0d\n  // eslint-disable-next-line no-useless-constructor\x0d\n  constructor(input\x2C output\x2C completer\x2C terminal) {\x0d\n    super(input\x2C output\x2C completer\x2C terminal);\x0d\n  }\x0d\n  get columns() {\x0d\n    if (this.output && this.output.columns) return this.output.columns;\x0d\n    return Infinity;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Sets the prompt written to the output.\x0d\n   * @param {string} prompt\x0d\n   * @returns {void}\x0d\n   */\x0d\n  setPrompt(prompt) {\x0d\n    this[kPrompt] = prompt;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the current prompt used by `rl.prompt()`.\x0d\n   * @returns {string}\x0d\n   */\x0d\n  getPrompt() {\x0d\n    return this[kPrompt];\x0d\n  }\x0d\n\x0d\n  [kSetRawMode](mode) {\x0d\n    const wasInRawMode = this.input.isRaw;\x0d\n\x0d\n    if (typeof this.input.setRawMode === 'function') {\x0d\n      this.input.setRawMode(mode);\x0d\n    }\x0d\n\x0d\n    return wasInRawMode;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes the configured `prompt` to a new line in `output`.\x0d\n   * @param {boolean} [preserveCursor]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  prompt(preserveCursor) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal && process.env.TERM !== 'dumb') {\x0d\n      if (!preserveCursor) this.cursor = 0;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      this[kWriteToOutput](this[kPrompt]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kQuestion](query\x2C cb) {\x0d\n    if (this.closed) {\x0d\n      throw new ERR_USE_AFTER_CLOSE('readline');\x0d\n    }\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this.prompt();\x0d\n    } else {\x0d\n      this[kOldPrompt] = this[kPrompt];\x0d\n      this.setPrompt(query);\x0d\n      this[kQuestionCallback] = cb;\x0d\n      this.prompt();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kOnLine](line) {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      const cb = this[kQuestionCallback];\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      cb(line);\x0d\n    } else {\x0d\n      this.emit('line'\x2C line);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kBeforeEdit](oldText\x2C oldCursor) {\x0d\n    this[kPushToUndoStack](oldText\x2C oldCursor);\x0d\n  }\x0d\n\x0d\n  [kQuestionCancel]() {\x0d\n    if (this[kQuestionCallback]) {\x0d\n      this[kQuestionCallback] = null;\x0d\n      this.setPrompt(this[kOldPrompt]);\x0d\n      this.clearLine();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWriteToOutput](stringToWrite) {\x0d\n    validateString(stringToWrite\x2C 'stringToWrite');\x0d\n\x0d\n    if (this.output !== null && this.output !== undefined) {\x0d\n      this.output.write(stringToWrite);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kAddHistory]() {\x0d\n    if (this.line.length === 0) return '';\x0d\n\x0d\n    // If the history is disabled then return the line\x0d\n    if (this.historySize === 0) return this.line;\x0d\n\x0d\n    // If the trimmed line is empty then return the line\x0d\n    if (StringPrototypeTrim(this.line).length === 0) return this.line;\x0d\n\x0d\n    if (this.history.length === 0 || this.history[0] !== this.line) {\x0d\n      if (this.removeHistoryDuplicates) {\x0d\n        // Remove older history line if identical to new one\x0d\n        const dupIndex = ArrayPrototypeIndexOf(this.history\x2C this.line);\x0d\n        if (dupIndex !== -1) ArrayPrototypeSplice(this.history\x2C dupIndex\x2C 1);\x0d\n      }\x0d\n\x0d\n      ArrayPrototypeUnshift(this.history\x2C this.line);\x0d\n\x0d\n      // Only store so many\x0d\n      if (this.history.length > this.historySize)\x0d\n        ArrayPrototypePop(this.history);\x0d\n    }\x0d\n\x0d\n    this.historyIndex = -1;\x0d\n\x0d\n    // The listener could change the history object\x2C possibly\x0d\n    // to remove the last added entry if it is sensitive and should\x0d\n    // not be persisted in the history\x2C like a password\x0d\n    const line = this.history[0];\x0d\n\x0d\n    // Emit history event to notify listeners of update\x0d\n    this.emit('history'\x2C this.history);\x0d\n\x0d\n    return line;\x0d\n  }\x0d\n\x0d\n  [kRefreshLine]() {\x0d\n    // line length\x0d\n    const line = this[kPrompt] + this.line;\x0d\n    const dispPos = this[kGetDisplayPos](line);\x0d\n    const lineCols = dispPos.cols;\x0d\n    const lineRows = dispPos.rows;\x0d\n\x0d\n    // cursor position\x0d\n    const cursorPos = this.getCursorPos();\x0d\n\x0d\n    // First move to the bottom of the current line\x2C based on cursor pos\x0d\n    const prevRows = this.prevRows || 0;\x0d\n    if (prevRows > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -prevRows);\x0d\n    }\x0d\n\x0d\n    // Cursor to left edge.\x0d\n    cursorTo(this.output\x2C 0);\x0d\n    // erase data\x0d\n    clearScreenDown(this.output);\x0d\n\x0d\n    // Write the prompt and the current buffer content.\x0d\n    this[kWriteToOutput](line);\x0d\n\x0d\n    // Force terminal to allocate a new line\x0d\n    if (lineCols === 0) {\x0d\n      this[kWriteToOutput](' ');\x0d\n    }\x0d\n\x0d\n    // Move cursor to original position.\x0d\n    cursorTo(this.output\x2C cursorPos.cols);\x0d\n\x0d\n    const diff = lineRows - cursorPos.rows;\x0d\n    if (diff > 0) {\x0d\n      moveCursor(this.output\x2C 0\x2C -diff);\x0d\n    }\x0d\n\x0d\n    this.prevRows = cursorPos.rows;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Closes the `readline.Interface` instance.\x0d\n   * @returns {void}\x0d\n   */\x0d\n  close() {\x0d\n    if (this.closed) return;\x0d\n    this.pause();\x0d\n    if (this.terminal) {\x0d\n      this[kSetRawMode](false);\x0d\n    }\x0d\n    this.closed = true;\x0d\n    this.emit('close');\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Pauses the `input` stream.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  pause() {\x0d\n    if (this.paused) return;\x0d\n    this.input.pause();\x0d\n    this.paused = true;\x0d\n    this.emit('pause');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Resumes the `input` stream if paused.\x0d\n   * @returns {void | Interface}\x0d\n   */\x0d\n  resume() {\x0d\n    if (!this.paused) return;\x0d\n    this.input.resume();\x0d\n    this.paused = false;\x0d\n    this.emit('resume');\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Writes either `data` or a `key` sequence identified by\x0d\n   * `key` to the `output`.\x0d\n   * @param {string} d\x0d\n   * @param {{\x0d\n   *   ctrl?: boolean;\x0d\n   *   meta?: boolean;\x0d\n   *   shift?: boolean;\x0d\n   *   name?: string;\x0d\n   *   }} [key]\x0d\n   * @returns {void}\x0d\n   */\x0d\n  write(d\x2C key) {\x0d\n    if (this.paused) this.resume();\x0d\n    if (this.terminal) {\x0d\n      this[kTtyWrite](d\x2C key);\x0d\n    } else {\x0d\n      this[kNormalWrite](d);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kNormalWrite](b) {\x0d\n    if (b === undefined) {\x0d\n      return;\x0d\n    }\x0d\n    let string = this[kDecoder].write(b);\x0d\n    if (\x0d\n      this[kSawReturnAt] &&\x0d\n      DateNow() - this[kSawReturnAt] <= this.crlfDelay\x0d\n    ) {\x0d\n      if (StringPrototypeCodePointAt(string) === 10) string = StringPrototypeSlice(string\x2C 1);\x0d\n      this[kSawReturnAt] = 0;\x0d\n    }\x0d\n\x0d\n    // Run test() on the new string chunk\x2C not on the entire line buffer.\x0d\n    let newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n    if (newPartContainsEnding !== null) {\x0d\n      if (this[kLine_buffer]) {\x0d\n        string = this[kLine_buffer] + string;\x0d\n        this[kLine_buffer] = null;\x0d\n        lineEnding.lastIndex = 0; // Start the search from the beginning of the string.\x0d\n        newPartContainsEnding = RegExpPrototypeExec(lineEnding\x2C string);\x0d\n      }\x0d\n      this[kSawReturnAt] = StringPrototypeEndsWith(string\x2C '\\r') ?\x0d\n        DateNow() :\x0d\n        0;\x0d\n\x0d\n      const indexes = [0\x2C newPartContainsEnding.index\x2C lineEnding.lastIndex];\x0d\n      let nextMatch;\x0d\n      while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C string)) !== null) {\x0d\n        ArrayPrototypePush(indexes\x2C nextMatch.index\x2C lineEnding.lastIndex);\x0d\n      }\x0d\n      const lastIndex = indexes.length - 1;\x0d\n      // Either '' or (conceivably) the unfinished portion of the next line\x0d\n      this[kLine_buffer] = StringPrototypeSlice(string\x2C indexes[lastIndex]);\x0d\n      for (let i = 1; i < lastIndex; i += 2) {\x0d\n        this[kOnLine](StringPrototypeSlice(string\x2C indexes[i - 1]\x2C indexes[i]));\x0d\n      }\x0d\n    } else if (string) {\x0d\n      // No newlines this time\x2C save what we have for next time\x0d\n      if (this[kLine_buffer]) {\x0d\n        this[kLine_buffer] += string;\x0d\n      } else {\x0d\n        this[kLine_buffer] = string;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kInsertString](c) {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const beg = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const end = StringPrototypeSlice(\x0d\n        this.line\x2C\x0d\n        this.cursor\x2C\x0d\n        this.line.length\x2C\x0d\n      );\x0d\n      this.line = beg + c + end;\x0d\n      this.cursor += c.length;\x0d\n      this[kRefreshLine]();\x0d\n    } else {\x0d\n      const oldPos = this.getCursorPos();\x0d\n      this.line += c;\x0d\n      this.cursor += c.length;\x0d\n      const newPos = this.getCursorPos();\x0d\n\x0d\n      if (oldPos.rows < newPos.rows) {\x0d\n        this[kRefreshLine]();\x0d\n      } else {\x0d\n        this[kWriteToOutput](c);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async [kTabComplete](lastKeypressWasTab) {\x0d\n    this.pause();\x0d\n    const string = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    let value;\x0d\n    try {\x0d\n      value = await this.completer(string);\x0d\n    } catch (err) {\x0d\n      this[kWriteToOutput](`Tab completion error: ${inspect(err)}`);\x0d\n      return;\x0d\n    } finally {\x0d\n      this.resume();\x0d\n    }\x0d\n    this[kTabCompleter](lastKeypressWasTab\x2C value);\x0d\n  }\x0d\n\x0d\n  [kTabCompleter](lastKeypressWasTab\x2C { 0: completions\x2C 1: completeOn }) {\x0d\n    // Result and the text that was completed.\x0d\n\x0d\n    if (!completions || completions.length === 0) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    // If there is a common prefix to all matches\x2C then apply that portion.\x0d\n    const prefix = commonPrefix(\x0d\n      ArrayPrototypeFilter(completions\x2C (e) => e !== '')\x2C\x0d\n    );\x0d\n    if (StringPrototypeStartsWith(prefix\x2C completeOn) &&\x0d\n        prefix.length > completeOn.length) {\x0d\n      this[kInsertString](StringPrototypeSlice(prefix\x2C completeOn.length));\x0d\n      return;\x0d\n    } else if (!StringPrototypeStartsWith(completeOn\x2C prefix)) {\x0d\n      this.line = StringPrototypeSlice(this.line\x2C\x0d\n                                       0\x2C\x0d\n                                       this.cursor - completeOn.length) +\x0d\n                  prefix +\x0d\n                  StringPrototypeSlice(this.line\x2C\x0d\n                                       this.cursor\x2C\x0d\n                                       this.line.length);\x0d\n      this.cursor = this.cursor - completeOn.length + prefix.length;\x0d\n      this._refreshLine();\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!lastKeypressWasTab) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n\x0d\n    // Apply/show completions.\x0d\n    const completionsWidth = ArrayPrototypeMap(completions\x2C (e) =>\x0d\n      getStringWidth(e)\x2C\x0d\n    );\x0d\n    const width = MathMaxApply(completionsWidth) + 2; // 2 space padding\x0d\n    let maxColumns = MathFloor(this.columns / width) || 1;\x0d\n    if (maxColumns === Infinity) {\x0d\n      maxColumns = 1;\x0d\n    }\x0d\n    let output = '\\r\\n';\x0d\n    let lineIndex = 0;\x0d\n    let whitespace = 0;\x0d\n    for (let i = 0; i < completions.length; i++) {\x0d\n      const completion = completions[i];\x0d\n      if (completion === '' || lineIndex === maxColumns) {\x0d\n        output += '\\r\\n';\x0d\n        lineIndex = 0;\x0d\n        whitespace = 0;\x0d\n      } else {\x0d\n        output += StringPrototypeRepeat(' '\x2C whitespace);\x0d\n      }\x0d\n      if (completion !== '') {\x0d\n        output += completion;\x0d\n        whitespace = width - completionsWidth[i];\x0d\n        lineIndex++;\x0d\n      } else {\x0d\n        output += '\\r\\n';\x0d\n      }\x0d\n    }\x0d\n    if (lineIndex !== 0) {\x0d\n      output += '\\r\\n\\r\\n';\x0d\n    }\x0d\n    this[kWriteToOutput](output);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      const leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x2C\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      this[kMoveCursor](-match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|[^\\w\\s]+|\\w+)\\s*/\x2C trailing);\x0d\n      this[kMoveCursor](match[0].length);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLeft]() {\x0d\n    if (this.cursor > 0 && this.line.length > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthLeft(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - charSize) +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n\x0d\n      this.cursor -= charSize;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // The number of UTF-16 units comprising the character to the left\x0d\n      const charSize = charLengthAt(this.line\x2C this.cursor);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          this.cursor + charSize\x2C\x0d\n          this.line.length\x2C\x0d\n        );\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordLeft]() {\x0d\n    if (this.cursor > 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      // Reverse the string and match a word near beginning\x0d\n      // to avoid quadratic time complexity\x0d\n      let leading = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n      const reversed = ArrayPrototypeJoin(\x0d\n        ArrayPrototypeReverse(ArrayFrom(leading))\x2C\x0d\n        ''\x2C\x0d\n      );\x0d\n      const match = RegExpPrototypeExec(/^\\s*(?:[^\\w\\s]+|\\w+)?/\x2C reversed);\x0d\n      leading = StringPrototypeSlice(\x0d\n        leading\x2C\x0d\n        0\x2C\x0d\n        leading.length - match[0].length\x2C\x0d\n      );\x0d\n      this.line =\x0d\n        leading +\x0d\n        StringPrototypeSlice(this.line\x2C this.cursor\x2C this.line.length);\x0d\n      this.cursor = leading.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteWordRight]() {\x0d\n    if (this.cursor < this.line.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const trailing = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      const match = RegExpPrototypeExec(/^(?:\\s+|\\W+|\\w+)\\s*/\x2C trailing);\x0d\n      this.line =\x0d\n        StringPrototypeSlice(this.line\x2C 0\x2C this.cursor) +\x0d\n        StringPrototypeSlice(trailing\x2C match[0].length);\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kDeleteLineLeft]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.cursor = 0;\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kDeleteLineRight]() {\x0d\n    this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n    const del = StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n    this.line = StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    this[kPushToKillRing](del);\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kPushToKillRing](del) {\x0d\n    if (!del || del === this[kKillRing][0]) return;\x0d\n    ArrayPrototypeUnshift(this[kKillRing]\x2C del);\x0d\n    this[kKillRingCursor] = 0;\x0d\n    while (this[kKillRing].length > kMaxLengthOfKillRing)\x0d\n      ArrayPrototypePop(this[kKillRing]);\x0d\n  }\x0d\n\x0d\n  [kYank]() {\x0d\n    if (this[kKillRing].length > 0) {\x0d\n      this[kYanking] = true;\x0d\n      this[kInsertString](this[kKillRing][this[kKillRingCursor]]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kYankPop]() {\x0d\n    if (!this[kYanking]) {\x0d\n      return;\x0d\n    }\x0d\n    if (this[kKillRing].length > 1) {\x0d\n      const lastYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      this[kKillRingCursor]++;\x0d\n      if (this[kKillRingCursor] >= this[kKillRing].length) {\x0d\n        this[kKillRingCursor] = 0;\x0d\n      }\x0d\n      const currentYank = this[kKillRing][this[kKillRingCursor]];\x0d\n      const head =\x0d\n            StringPrototypeSlice(this.line\x2C 0\x2C this.cursor - lastYank.length);\x0d\n      const tail =\x0d\n            StringPrototypeSlice(this.line\x2C this.cursor);\x0d\n      this.line = head + currentYank + tail;\x0d\n      this.cursor = head.length + currentYank.length;\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  clearLine() {\x0d\n    this[kMoveCursor](+Infinity);\x0d\n    this[kWriteToOutput]('\\r\\n');\x0d\n    this.line = '';\x0d\n    this.cursor = 0;\x0d\n    this.prevRows = 0;\x0d\n  }\x0d\n\x0d\n  [kLine]() {\x0d\n    const line = this[kAddHistory]();\x0d\n    this[kUndoStack] = [];\x0d\n    this[kRedoStack] = [];\x0d\n    this.clearLine();\x0d\n    this[kOnLine](line);\x0d\n  }\x0d\n\x0d\n  [kPushToUndoStack](text\x2C cursor) {\x0d\n    if (ArrayPrototypePush(this[kUndoStack]\x2C { text\x2C cursor }) >\x0d\n        kMaxUndoRedoStackSize) {\x0d\n      ArrayPrototypeShift(this[kUndoStack]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kUndo]() {\x0d\n    if (this[kUndoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kRedoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kUndoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  [kRedo]() {\x0d\n    if (this[kRedoStack].length <= 0) return;\x0d\n\x0d\n    ArrayPrototypePush(\x0d\n      this[kUndoStack]\x2C\x0d\n      { text: this.line\x2C cursor: this.cursor }\x2C\x0d\n    );\x0d\n\x0d\n    const entry = ArrayPrototypePop(this[kRedoStack]);\x0d\n    this.line = entry.text;\x0d\n    this.cursor = entry.cursor;\x0d\n\x0d\n    this[kRefreshLine]();\x0d\n  }\x0d\n\x0d\n  // TODO(BridgeAR): Add underscores to the search part and a red background in\x0d\n  // case no match is found. This should only be the visual part and not the\x0d\n  // actual line content!\x0d\n  // TODO(BridgeAR): In case the substring based search is active and the end is\x0d\n  // reached\x2C show a comment how to search the history as before. E.g.\x2C using\x0d\n  // <ctrl> + N. Only show this after two/three UPs or DOWNs\x2C not on the first\x0d\n  // one.\x0d\n  [kHistoryNext]() {\x0d\n    if (this.historyIndex >= 0) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex - 1;\x0d\n      while (\x0d\n        index >= 0 &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index--;\x0d\n      }\x0d\n      if (index === -1) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kHistoryPrev]() {\x0d\n    if (this.historyIndex < this.history.length && this.history.length) {\x0d\n      this[kBeforeEdit](this.line\x2C this.cursor);\x0d\n      const search = this[kSubstringSearch] || '';\x0d\n      let index = this.historyIndex + 1;\x0d\n      while (\x0d\n        index < this.history.length &&\x0d\n        (!StringPrototypeStartsWith(this.history[index]\x2C search) ||\x0d\n          this.line === this.history[index])\x0d\n      ) {\x0d\n        index++;\x0d\n      }\x0d\n      if (index === this.history.length) {\x0d\n        this.line = search;\x0d\n      } else {\x0d\n        this.line = this.history[index];\x0d\n      }\x0d\n      this.historyIndex = index;\x0d\n      this.cursor = this.line.length; // Set cursor to end of line.\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Returns the last character's display position of the given string\x0d\n  [kGetDisplayPos](str) {\x0d\n    let offset = 0;\x0d\n    const col = this.columns;\x0d\n    let rows = 0;\x0d\n    str = stripVTControlCharacters(str);\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      if (char === '\\n') {\x0d\n        // Rows must be incremented by 1 even if offset = 0 or col = +Infinity.\x0d\n        rows += MathCeil(offset / col) || 1;\x0d\n        offset = 0;\x0d\n        continue;\x0d\n      }\x0d\n      // Tabs must be aligned by an offset of the tab size.\x0d\n      if (char === '\\t') {\x0d\n        offset += this.tabSize - (offset % this.tabSize);\x0d\n        continue;\x0d\n      }\x0d\n      const width = getStringWidth(char\x2C false /* stripVTControlCharacters */);\x0d\n      if (width === 0 || width === 1) {\x0d\n        offset += width;\x0d\n      } else {\x0d\n        // width === 2\x0d\n        if ((offset + 1) % col === 0) {\x0d\n          offset++;\x0d\n        }\x0d\n        offset += 2;\x0d\n      }\x0d\n    }\x0d\n    const cols = offset % col;\x0d\n    rows += (offset - cols) / col;\x0d\n    return { cols\x2C rows };\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Returns the real position of the cursor in relation\x0d\n   * to the input prompt + string.\x0d\n   * @returns {{\x0d\n   *   rows: number;\x0d\n   *   cols: number;\x0d\n   *   }}\x0d\n   */\x0d\n  getCursorPos() {\x0d\n    const strBeforeCursor =\x0d\n      this[kPrompt] + StringPrototypeSlice(this.line\x2C 0\x2C this.cursor);\x0d\n    return this[kGetDisplayPos](strBeforeCursor);\x0d\n  }\x0d\n\x0d\n  // This function moves cursor dx places to the right\x0d\n  // (-dx for left) and refreshes the line if it is needed.\x0d\n  [kMoveCursor](dx) {\x0d\n    if (dx === 0) {\x0d\n      return;\x0d\n    }\x0d\n    const oldPos = this.getCursorPos();\x0d\n    this.cursor += dx;\x0d\n\x0d\n    // Bounds check\x0d\n    if (this.cursor < 0) {\x0d\n      this.cursor = 0;\x0d\n    } else if (this.cursor > this.line.length) {\x0d\n      this.cursor = this.line.length;\x0d\n    }\x0d\n\x0d\n    const newPos = this.getCursorPos();\x0d\n\x0d\n    // Check if cursor stayed on the line.\x0d\n    if (oldPos.rows === newPos.rows) {\x0d\n      const diffWidth = newPos.cols - oldPos.cols;\x0d\n      moveCursor(this.output\x2C diffWidth\x2C 0);\x0d\n    } else {\x0d\n      this[kRefreshLine]();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Handle a write from the tty\x0d\n  [kTtyWrite](s\x2C key) {\x0d\n    const previousKey = this[kPreviousKey];\x0d\n    key = key || kEmptyObject;\x0d\n    this[kPreviousKey] = key;\x0d\n\x0d\n    if (!key.meta || key.name !== 'y') {\x0d\n      // Reset yanking state unless we are doing yank pop.\x0d\n      this[kYanking] = false;\x0d\n    }\x0d\n\x0d\n    // Activate or deactivate substring search.\x0d\n    if (\x0d\n      (key.name === 'up' || key.name === 'down') &&\x0d\n      !key.ctrl &&\x0d\n      !key.meta &&\x0d\n      !key.shift\x0d\n    ) {\x0d\n      if (this[kSubstringSearch] === null) {\x0d\n        this[kSubstringSearch] = StringPrototypeSlice(\x0d\n          this.line\x2C\x0d\n          0\x2C\x0d\n          this.cursor\x2C\x0d\n        );\x0d\n      }\x0d\n    } else if (this[kSubstringSearch] !== null) {\x0d\n      this[kSubstringSearch] = null;\x0d\n      // Reset the index in case there's no match.\x0d\n      if (this.history.length === this.historyIndex) {\x0d\n        this.historyIndex = -1;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Undo & Redo\x0d\n    if (typeof key.sequence === 'string') {\x0d\n      switch (StringPrototypeCodePointAt(key.sequence\x2C 0)) {\x0d\n        case 0x1f:\x0d\n          this[kUndo]();\x0d\n          return;\x0d\n        case 0x1e:\x0d\n          this[kRedo]();\x0d\n          return;\x0d\n        default:\x0d\n          break;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    // Ignore escape key\x2C fixes\x0d\n    // https://github.com/nodejs/node-v0.x-archive/issues/2876.\x0d\n    if (key.name === 'escape') return;\x0d\n\x0d\n    if (key.ctrl && key.shift) {\x0d\n      /* Control and shift pressed */\x0d\n      switch (key.name) {\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        case 'backspace':\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.ctrl) {\x0d\n      /* Control key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'c':\x0d\n          if (this.listenerCount('SIGINT') > 0) {\x0d\n            this.emit('SIGINT');\x0d\n          } else {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'h': // delete left\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete right or EOF\x0d\n          if (this.cursor === 0 && this.line.length === 0) {\x0d\n            // This readline instance is finished\x0d\n            this.close();\x0d\n          } else if (this.cursor < this.line.length) {\x0d\n            this[kDeleteRight]();\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'u': // Delete from current to start of line\x0d\n          this[kDeleteLineLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'k': // Delete from current to end of line\x0d\n          this[kDeleteLineRight]();\x0d\n          break;\x0d\n\x0d\n        case 'a': // Go to the start of the line\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'e': // Go to the end of the line\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'b': // back one character\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'f': // Forward one character\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'l': // Clear the whole screen\x0d\n          cursorTo(this.output\x2C 0\x2C 0);\x0d\n          clearScreenDown(this.output);\x0d\n          this[kRefreshLine]();\x0d\n          break;\x0d\n\x0d\n        case 'n': // next history item\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'p': // Previous history item\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Yank killed string\x0d\n          this[kYank]();\x0d\n          break;\x0d\n\x0d\n        case 'z':\x0d\n          if (process.platform === 'win32') break;\x0d\n          if (this.listenerCount('SIGTSTP') > 0) {\x0d\n            this.emit('SIGTSTP');\x0d\n          } else {\x0d\n            process.once('SIGCONT'\x2C () => {\x0d\n              // Don't raise events if stream has already been abandoned.\x0d\n              if (!this.paused) {\x0d\n                // Stream must be paused and resumed after SIGCONT to catch\x0d\n                // SIGINT\x2C SIGTSTP\x2C and EOF.\x0d\n                this.pause();\x0d\n                this.emit('SIGCONT');\x0d\n              }\x0d\n              // Explicitly re-enable "raw mode" and move the cursor to\x0d\n              // the correct position.\x0d\n              // See https://github.com/joyent/node/issues/3295.\x0d\n              this[kSetRawMode](true);\x0d\n              this[kRefreshLine]();\x0d\n            });\x0d\n            this[kSetRawMode](false);\x0d\n            process.kill(process.pid\x2C 'SIGTSTP');\x0d\n          }\x0d\n          break;\x0d\n\x0d\n        case 'w': // Delete backwards to a word boundary\x0d\n        // TODO(BridgeAR): The transmitted escape sequence is `\\b` and that is\x0d\n        // identical to <ctrl>-h. It should have a unique escape sequence.\x0d\n        // Falls through\x0d\n        case 'backspace':\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete': // Delete forward to a word boundary\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n      }\x0d\n    } else if (key.meta) {\x0d\n      /* Meta key pressed */\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'b': // backward word\x0d\n          this[kWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'f': // forward word\x0d\n          this[kWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'd': // delete forward word\x0d\n        case 'delete':\x0d\n          this[kDeleteWordRight]();\x0d\n          break;\x0d\n\x0d\n        case 'backspace': // Delete backwards to a word boundary\x0d\n          this[kDeleteWordLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'y': // Doing yank pop\x0d\n          this[kYankPop]();\x0d\n          break;\x0d\n      }\x0d\n    } else {\x0d\n      /* No modifier keys used */\x0d\n\x0d\n      // \\r bookkeeping is only relevant if a \\n comes right after.\x0d\n      if (this[kSawReturnAt] && key.name !== 'enter') this[kSawReturnAt] = 0;\x0d\n\x0d\n      switch (key.name) {\x0d\n        case 'return': // Carriage return\x2C i.e. \\r\x0d\n          this[kSawReturnAt] = DateNow();\x0d\n          this[kLine]();\x0d\n          break;\x0d\n\x0d\n        case 'enter':\x0d\n          // When key interval > crlfDelay\x0d\n          if (\x0d\n            this[kSawReturnAt] === 0 ||\x0d\n            DateNow() - this[kSawReturnAt] > this.crlfDelay\x0d\n          ) {\x0d\n            this[kLine]();\x0d\n          }\x0d\n          this[kSawReturnAt] = 0;\x0d\n          break;\x0d\n\x0d\n        case 'backspace':\x0d\n          this[kDeleteLeft]();\x0d\n          break;\x0d\n\x0d\n        case 'delete':\x0d\n          this[kDeleteRight]();\x0d\n          break;\x0d\n\x0d\n        case 'left':\x0d\n          // Obtain the code point to the left\x0d\n          this[kMoveCursor](-charLengthLeft(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'right':\x0d\n          this[kMoveCursor](+charLengthAt(this.line\x2C this.cursor));\x0d\n          break;\x0d\n\x0d\n        case 'home':\x0d\n          this[kMoveCursor](-Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'end':\x0d\n          this[kMoveCursor](+Infinity);\x0d\n          break;\x0d\n\x0d\n        case 'up':\x0d\n          this[kHistoryPrev]();\x0d\n          break;\x0d\n\x0d\n        case 'down':\x0d\n          this[kHistoryNext]();\x0d\n          break;\x0d\n\x0d\n        case 'tab':\x0d\n          // If tab completion enabled\x2C do that...\x0d\n          if (\x0d\n            typeof this.completer === 'function' &&\x0d\n            this.isCompletionEnabled\x0d\n          ) {\x0d\n            const lastKeypressWasTab =\x0d\n              previousKey && previousKey.name === 'tab';\x0d\n            this[kTabComplete](lastKeypressWasTab);\x0d\n            break;\x0d\n          }\x0d\n        // falls through\x0d\n        default:\x0d\n          if (typeof s === 'string' && s) {\x0d\n            // Erase state of previous searches.\x0d\n            lineEnding.lastIndex = 0;\x0d\n            let nextMatch;\x0d\n            // Keep track of the end of the last match.\x0d\n            let lastIndex = 0;\x0d\n            while ((nextMatch = RegExpPrototypeExec(lineEnding\x2C s)) !== null) {\x0d\n              this[kInsertString](StringPrototypeSlice(s\x2C lastIndex\x2C nextMatch.index));\x0d\n              ({ lastIndex } = lineEnding);\x0d\n              this[kLine]();\x0d\n              // Restore lastIndex as the call to kLine could have mutated it.\x0d\n              lineEnding.lastIndex = lastIndex;\x0d\n            }\x0d\n            // This ensures that the last line is written if it doesn't end in a newline.\x0d\n            // Note that the last line may be the first line\x2C in which case this still works.\x0d\n            this[kInsertString](StringPrototypeSlice(s\x2C lastIndex));\x0d\n          }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * Creates an `AsyncIterator` object that iterates through\x0d\n   * each line in the input stream as a string.\x0d\n   * @typedef {{\x0d\n   *   [Symbol.asyncIterator]: () => InterfaceAsyncIterator\x2C\x0d\n   *   next: () => Promise<string>\x0d\n   * }} InterfaceAsyncIterator\x0d\n   * @returns {InterfaceAsyncIterator}\x0d\n   */\x0d\n  [SymbolAsyncIterator]() {\x0d\n    if (this[kLineObjectStream] === undefined) {\x0d\n      kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\x0d\n      this[kLineObjectStream] = EventEmitter.on(\x0d\n        this\x2C 'line'\x2C {\x0d\n          close: ['close']\x2C\x0d\n          highWatermark: 1024\x2C\x0d\n          [kFirstEventParam]: true\x2C\x0d\n        });\x0d\n    }\x0d\n    return this[kLineObjectStream];\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Interface\x2C\x0d\n  InterfaceConstructor\x2C\x0d\n  kAddHistory\x2C\x0d\n  kDecoder\x2C\x0d\n  kDeleteLeft\x2C\x0d\n  kDeleteLineLeft\x2C\x0d\n  kDeleteLineRight\x2C\x0d\n  kDeleteRight\x2C\x0d\n  kDeleteWordLeft\x2C\x0d\n  kDeleteWordRight\x2C\x0d\n  kGetDisplayPos\x2C\x0d\n  kHistoryNext\x2C\x0d\n  kHistoryPrev\x2C\x0d\n  kInsertString\x2C\x0d\n  kLine\x2C\x0d\n  kLine_buffer\x2C\x0d\n  kMoveCursor\x2C\x0d\n  kNormalWrite\x2C\x0d\n  kOldPrompt\x2C\x0d\n  kOnLine\x2C\x0d\n  kPreviousKey\x2C\x0d\n  kPrompt\x2C\x0d\n  kQuestion\x2C\x0d\n  kQuestionCallback\x2C\x0d\n  kQuestionCancel\x2C\x0d\n  kRefreshLine\x2C\x0d\n  kSawKeyPress\x2C\x0d\n  kSawReturnAt\x2C\x0d\n  kSetRawMode\x2C\x0d\n  kTabComplete\x2C\x0d\n  kTabCompleter\x2C\x0d\n  kTtyWrite\x2C\x0d\n  kWordLeft\x2C\x0d\n  kWordRight\x2C\x0d\n  kWriteToOutput\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ecaf4a6,100,0,40434,C0O0C4O40434,,
code-creation,JS,10,206458,0x2bb6ecb207e,1875, node:internal/readline/interface:1:1,0x2bb6ecaf420,~
code-source-info,0x2bb6ecb207e
code-creation,Eval,10,207293,0x2bb6ecb628e,5, node:internal/readline/utils:1:1,0x2bb6ecb6098,~
script-source,101,node:internal/readline/utils,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringFromCharCode\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kUTF16SurrogateThreshold = 0x10000; // 2 ** 16\x0d\nconst kEscape = '\\x1b';\x0d\nconst kSubstringSearch = Symbol('kSubstringSearch');\x0d\n\x0d\nfunction CSI(strings\x2C ...args) {\x0d\n  let ret = `${kEscape}[`;\x0d\n  for (let n = 0; n < strings.length; n++) {\x0d\n    ret += strings[n];\x0d\n    if (n < args.length)\x0d\n      ret += args[n];\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nCSI.kEscape = kEscape;\x0d\nCSI.kClearToLineBeginning = CSI`1K`;\x0d\nCSI.kClearToLineEnd = CSI`0K`;\x0d\nCSI.kClearLine = CSI`2K`;\x0d\nCSI.kClearScreenDown = CSI`0J`;\x0d\n\x0d\n// TODO(BridgeAR): Treat combined characters as single character\x2C i.e\x2C\x0d\n// 'a\\u0301' and '\\u0301a' (both have the same visual output).\x0d\n// Check Canonical_Combining_Class in\x0d\n// http://userguide.icu-project.org/strings/properties\x0d\nfunction charLengthLeft(str\x2C i) {\x0d\n  if (i <= 0)\x0d\n    return 0;\x0d\n  if ((i > 1 &&\x0d\n      StringPrototypeCodePointAt(str\x2C i - 2) >= kUTF16SurrogateThreshold) ||\x0d\n      StringPrototypeCodePointAt(str\x2C i - 1) >= kUTF16SurrogateThreshold) {\x0d\n    return 2;\x0d\n  }\x0d\n  return 1;\x0d\n}\x0d\n\x0d\nfunction charLengthAt(str\x2C i) {\x0d\n  if (str.length <= i) {\x0d\n    // Pretend to move to the right. This is necessary to autocomplete while\x0d\n    // moving to the right.\x0d\n    return 1;\x0d\n  }\x0d\n  return StringPrototypeCodePointAt(str\x2C i) >= kUTF16SurrogateThreshold ? 2 : 1;\x0d\n}\x0d\n\x0d\n/*\x0d\n  Some patterns seen in terminal key escape codes\x2C derived from combos seen\x0d\n  at http://www.midnight-commander.org/browser/lib/tty/key.c\x0d\n\x0d\n  ESC letter\x0d\n  ESC [ letter\x0d\n  ESC [ modifier letter\x0d\n  ESC [ 1 ; modifier letter\x0d\n  ESC [ num char\x0d\n  ESC [ num ; modifier char\x0d\n  ESC O letter\x0d\n  ESC O modifier letter\x0d\n  ESC O 1 ; modifier letter\x0d\n  ESC N letter\x0d\n  ESC [ [ num ; modifier char\x0d\n  ESC [ [ 1 ; modifier letter\x0d\n  ESC ESC [ num char\x0d\n  ESC ESC O letter\x0d\n\x0d\n  - char is usually ~ but $ and ^ also happen with rxvt\x0d\n  - modifier is 1 +\x0d\n                (shift     * 1) +\x0d\n                (left_alt  * 2) +\x0d\n                (ctrl      * 4) +\x0d\n                (right_alt * 8)\x0d\n  - two leading ESCs apparently mean the same as one leading ESC\x0d\n*/\x0d\nfunction* emitKeys(stream) {\x0d\n  while (true) {\x0d\n    let ch = yield;\x0d\n    let s = ch;\x0d\n    let escaped = false;\x0d\n    const key = {\x0d\n      sequence: null\x2C\x0d\n      name: undefined\x2C\x0d\n      ctrl: false\x2C\x0d\n      meta: false\x2C\x0d\n      shift: false\x2C\x0d\n    };\x0d\n\x0d\n    if (ch === kEscape) {\x0d\n      escaped = true;\x0d\n      s += (ch = yield);\x0d\n\x0d\n      if (ch === kEscape) {\x0d\n        s += (ch = yield);\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (escaped && (ch === 'O' || ch === '[')) {\x0d\n      // ANSI escape sequence\x0d\n      let code = ch;\x0d\n      let modifier = 0;\x0d\n\x0d\n      if (ch === 'O') {\x0d\n        // ESC O letter\x0d\n        // ESC O modifier letter\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          modifier = (ch >> 0) - 1;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        code += ch;\x0d\n      } else if (ch === '[') {\x0d\n        // ESC [ letter\x0d\n        // ESC [ modifier letter\x0d\n        // ESC [ [ modifier letter\x0d\n        // ESC [ [ num char\x0d\n        s += (ch = yield);\x0d\n\x0d\n        if (ch === '[') {\x0d\n          // \\x1b[[A\x0d\n          //      ^--- escape codes might have a second bracket\x0d\n          code += ch;\x0d\n          s += (ch = yield);\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * Here and later we try to buffer just enough data to get\x0d\n         * a complete ascii sequence.\x0d\n         *\x0d\n         * We have basically two classes of ascii characters to process:\x0d\n         *\x0d\n         *\x0d\n         * 1. `\\x1b[24;5~` should be parsed as { code: '[24~'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+F12 in xterm.\x0d\n         *\x0d\n         *  - `;5` part is optional\x2C e.g. it could be `\\x1b[24~`\x0d\n         *  - first part can contain one or two digits\x0d\n         *  - there is also special case when there can be 3 digits\x0d\n         *    but without modifier. They are the case of paste bracket mode\x0d\n         *\x0d\n         * So the generic regexp is like /^(?:\\d\\d?(;\\d)?[~^$]|\\d{3}~)$/\x0d\n         *\x0d\n         *\x0d\n         * 2. `\\x1b[1;5H` should be parsed as { code: '[H'\x2C modifier: 5 }\x0d\n         *\x0d\n         * This particular example is featuring Ctrl+Home in xterm.\x0d\n         *\x0d\n         *  - `1;5` part is optional\x2C e.g. it could be `\\x1b[H`\x0d\n         *  - `1;` part is optional\x2C e.g. it could be `\\x1b[5H`\x0d\n         *\x0d\n         * So the generic regexp is like /^((\\d;)?\\d)?[A-Za-z]$/\x0d\n         *\x0d\n         */\x0d\n        const cmdStart = s.length - 1;\x0d\n\x0d\n        // Skip one or two leading digits\x0d\n        if (ch >= '0' && ch <= '9') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += (ch = yield);\x0d\n\x0d\n            if (ch >= '0' && ch <= '9') {\x0d\n              s += (ch = yield);\x0d\n            }\x0d\n          }\x0d\n        }\x0d\n\x0d\n        // skip modifier\x0d\n        if (ch === ';') {\x0d\n          s += (ch = yield);\x0d\n\x0d\n          if (ch >= '0' && ch <= '9') {\x0d\n            s += yield;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        /*\x0d\n         * We buffered enough data\x2C now trying to extract code\x0d\n         * and modifier from it\x0d\n         */\x0d\n        const cmd = StringPrototypeSlice(s\x2C cmdStart);\x0d\n        let match;\x0d\n\x0d\n        if ((match = RegExpPrototypeExec(/^(?:(\\d\\d?)(?:;(\\d))?([~^$])|(\\d{3}~))$/\x2C cmd))) {\x0d\n          if (match[4]) {\x0d\n            code += match[4];\x0d\n          } else {\x0d\n            code += match[1] + match[3];\x0d\n            modifier = (match[2] || 1) - 1;\x0d\n          }\x0d\n        } else if (\x0d\n          (match = RegExpPrototypeExec(/^((\\d;)?(\\d))?([A-Za-z])$/\x2C cmd))\x0d\n        ) {\x0d\n          code += match[4];\x0d\n          modifier = (match[3] || 1) - 1;\x0d\n        } else {\x0d\n          code += cmd;\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Parse the key modifier\x0d\n      key.ctrl = !!(modifier & 4);\x0d\n      key.meta = !!(modifier & 10);\x0d\n      key.shift = !!(modifier & 1);\x0d\n      key.code = code;\x0d\n\x0d\n      // Parse the key itself\x0d\n      switch (code) {\x0d\n        /* xterm/gnome ESC [ letter (with modifier) */\x0d\n        case '[P': key.name = 'f1'; break;\x0d\n        case '[Q': key.name = 'f2'; break;\x0d\n        case '[R': key.name = 'f3'; break;\x0d\n        case '[S': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter (without modifier) */\x0d\n        case 'OP': key.name = 'f1'; break;\x0d\n        case 'OQ': key.name = 'f2'; break;\x0d\n        case 'OR': key.name = 'f3'; break;\x0d\n        case 'OS': key.name = 'f4'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[11~': key.name = 'f1'; break;\x0d\n        case '[12~': key.name = 'f2'; break;\x0d\n        case '[13~': key.name = 'f3'; break;\x0d\n        case '[14~': key.name = 'f4'; break;\x0d\n\x0d\n        /* paste bracket mode */\x0d\n        case '[200~': key.name = 'paste-start'; break;\x0d\n        case '[201~': key.name = 'paste-end'; break;\x0d\n\x0d\n        /* from Cygwin and used in libuv */\x0d\n        case '[[A': key.name = 'f1'; break;\x0d\n        case '[[B': key.name = 'f2'; break;\x0d\n        case '[[C': key.name = 'f3'; break;\x0d\n        case '[[D': key.name = 'f4'; break;\x0d\n        case '[[E': key.name = 'f5'; break;\x0d\n\x0d\n        /* common */\x0d\n        case '[15~': key.name = 'f5'; break;\x0d\n        case '[17~': key.name = 'f6'; break;\x0d\n        case '[18~': key.name = 'f7'; break;\x0d\n        case '[19~': key.name = 'f8'; break;\x0d\n        case '[20~': key.name = 'f9'; break;\x0d\n        case '[21~': key.name = 'f10'; break;\x0d\n        case '[23~': key.name = 'f11'; break;\x0d\n        case '[24~': key.name = 'f12'; break;\x0d\n\x0d\n        /* xterm ESC [ letter */\x0d\n        case '[A': key.name = 'up'; break;\x0d\n        case '[B': key.name = 'down'; break;\x0d\n        case '[C': key.name = 'right'; break;\x0d\n        case '[D': key.name = 'left'; break;\x0d\n        case '[E': key.name = 'clear'; break;\x0d\n        case '[F': key.name = 'end'; break;\x0d\n        case '[H': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/gnome ESC O letter */\x0d\n        case 'OA': key.name = 'up'; break;\x0d\n        case 'OB': key.name = 'down'; break;\x0d\n        case 'OC': key.name = 'right'; break;\x0d\n        case 'OD': key.name = 'left'; break;\x0d\n        case 'OE': key.name = 'clear'; break;\x0d\n        case 'OF': key.name = 'end'; break;\x0d\n        case 'OH': key.name = 'home'; break;\x0d\n\x0d\n        /* xterm/rxvt ESC [ number ~ */\x0d\n        case '[1~': key.name = 'home'; break;\x0d\n        case '[2~': key.name = 'insert'; break;\x0d\n        case '[3~': key.name = 'delete'; break;\x0d\n        case '[4~': key.name = 'end'; break;\x0d\n        case '[5~': key.name = 'pageup'; break;\x0d\n        case '[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* putty */\x0d\n        case '[[5~': key.name = 'pageup'; break;\x0d\n        case '[[6~': key.name = 'pagedown'; break;\x0d\n\x0d\n        /* rxvt */\x0d\n        case '[7~': key.name = 'home'; break;\x0d\n        case '[8~': key.name = 'end'; break;\x0d\n\x0d\n        /* rxvt keys with modifiers */\x0d\n        case '[a': key.name = 'up'; key.shift = true; break;\x0d\n        case '[b': key.name = 'down'; key.shift = true; break;\x0d\n        case '[c': key.name = 'right'; key.shift = true; break;\x0d\n        case '[d': key.name = 'left'; key.shift = true; break;\x0d\n        case '[e': key.name = 'clear'; key.shift = true; break;\x0d\n\x0d\n        case '[2$': key.name = 'insert'; key.shift = true; break;\x0d\n        case '[3$': key.name = 'delete'; key.shift = true; break;\x0d\n        case '[5$': key.name = 'pageup'; key.shift = true; break;\x0d\n        case '[6$': key.name = 'pagedown'; key.shift = true; break;\x0d\n        case '[7$': key.name = 'home'; key.shift = true; break;\x0d\n        case '[8$': key.name = 'end'; key.shift = true; break;\x0d\n\x0d\n        case 'Oa': key.name = 'up'; key.ctrl = true; break;\x0d\n        case 'Ob': key.name = 'down'; key.ctrl = true; break;\x0d\n        case 'Oc': key.name = 'right'; key.ctrl = true; break;\x0d\n        case 'Od': key.name = 'left'; key.ctrl = true; break;\x0d\n        case 'Oe': key.name = 'clear'; key.ctrl = true; break;\x0d\n\x0d\n        case '[2^': key.name = 'insert'; key.ctrl = true; break;\x0d\n        case '[3^': key.name = 'delete'; key.ctrl = true; break;\x0d\n        case '[5^': key.name = 'pageup'; key.ctrl = true; break;\x0d\n        case '[6^': key.name = 'pagedown'; key.ctrl = true; break;\x0d\n        case '[7^': key.name = 'home'; key.ctrl = true; break;\x0d\n        case '[8^': key.name = 'end'; key.ctrl = true; break;\x0d\n\x0d\n        /* misc. */\x0d\n        case '[Z': key.name = 'tab'; key.shift = true; break;\x0d\n        default: key.name = 'undefined'; break;\x0d\n      }\x0d\n    } else if (ch === '\\r') {\x0d\n      // carriage return\x0d\n      key.name = 'return';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\n') {\x0d\n      // Enter\x2C should have been called linefeed\x0d\n      key.name = 'enter';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\t') {\x0d\n      // tab\x0d\n      key.name = 'tab';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === '\\b' || ch === '\\x7f') {\x0d\n      // backspace or ctrl+h\x0d\n      key.name = 'backspace';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === kEscape) {\x0d\n      // escape key\x0d\n      key.name = 'escape';\x0d\n      key.meta = escaped;\x0d\n    } else if (ch === ' ') {\x0d\n      key.name = 'space';\x0d\n      key.meta = escaped;\x0d\n    } else if (!escaped && ch <= '\\x1a') {\x0d\n      // ctrl+letter\x0d\n      key.name = StringFromCharCode(\x0d\n        StringPrototypeCharCodeAt(ch) + StringPrototypeCharCodeAt('a') - 1\x2C\x0d\n      );\x0d\n      key.ctrl = true;\x0d\n    } else if (RegExpPrototypeExec(/^[0-9A-Za-z]$/\x2C ch) !== null) {\x0d\n      // Letter\x2C number\x2C shift+letter\x0d\n      key.name = StringPrototypeToLowerCase(ch);\x0d\n      key.shift = RegExpPrototypeExec(/^[A-Z]$/\x2C ch) !== null;\x0d\n      key.meta = escaped;\x0d\n    } else if (escaped) {\x0d\n      // Escape sequence timeout\x0d\n      key.name = ch.length ? undefined : 'escape';\x0d\n      key.meta = true;\x0d\n    }\x0d\n\x0d\n    key.sequence = s;\x0d\n\x0d\n    if (s.length !== 0 && (key.name !== undefined || escaped)) {\x0d\n      /* Named character or sequence */\x0d\n      stream.emit('keypress'\x2C escaped ? undefined : s\x2C key);\x0d\n    } else if (charLengthAt(s\x2C 0) === s.length) {\x0d\n      /* Single unnamed character\x2C e.g. "." */\x0d\n      stream.emit('keypress'\x2C s\x2C key);\x0d\n    }\x0d\n    /* Unrecognized or broken escape sequence\x2C don't emit anything */\x0d\n  }\x0d\n}\x0d\n\x0d\n// This runs in O(n log n).\x0d\nfunction commonPrefix(strings) {\x0d\n  if (strings.length === 0) {\x0d\n    return '';\x0d\n  }\x0d\n  if (strings.length === 1) {\x0d\n    return strings[0];\x0d\n  }\x0d\n  const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(strings));\x0d\n  const min = sorted[0];\x0d\n  const max = sorted[sorted.length - 1];\x0d\n  for (let i = 0; i < min.length; i++) {\x0d\n    if (min[i] !== max[i]) {\x0d\n      return StringPrototypeSlice(min\x2C 0\x2C i);\x0d\n    }\x0d\n  }\x0d\n  return min;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  charLengthAt\x2C\x0d\n  charLengthLeft\x2C\x0d\n  commonPrefix\x2C\x0d\n  emitKeys\x2C\x0d\n  kSubstringSearch\x2C\x0d\n  CSI\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ecb628e,101,0,12802,C0O0C4O12802,,
code-creation,JS,10,207985,0x2bb6ecb66d6,237, node:internal/readline/utils:1:1,0x2bb6ecb6208,~
code-source-info,0x2bb6ecb66d6,101,0,12802,C0O0C61O28C67O52C73O75C79O99C85O122C91O152C97O183C103O208C109O239C114O301C120O301C122O338C124O338C126O372C129O372C134O609C136O621C140O664C144O664C148O659C152O696C156O696C160O691C164O723C168O723C172O718C176O756C180O756C184O751C188O12683C195O12705C201O12722C207O12741C213O12758C219O12771C225O12792C231O12698C236O12801,,
code-creation,JS,10,208178,0x2bb6ecb7886,76,CSI node:internal/readline/utils:19:13,0x2bb6ecb62c0,~
code-source-info,0x2bb6ecb7886,101,415,605,C0O415C8O449C20O480C22O495C26O485C31O515C33O529C43O552C47O545C52O567C54O578C64O504C69O467C73O591C75O602,,
code-creation,Eval,10,208381,0x2bb6ecb8cbe,5, node:internal/readline/callbacks:1:1,0x2bb6ecb8ad8,~
script-source,102,node:internal/readline/callbacks,'use strict';\x0d\n\x0d\nconst {\x0d\n  NumberIsNaN\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_CURSOR_POS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst {\x0d\n  CSI\x2C\x0d\n} = require('internal/readline/utils');\x0d\n\x0d\nconst {\x0d\n  kClearLine\x2C\x0d\n  kClearScreenDown\x2C\x0d\n  kClearToLineBeginning\x2C\x0d\n  kClearToLineEnd\x2C\x0d\n} = CSI;\x0d\n\x0d\n\x0d\n/**\x0d\n * moves the cursor to the x and y coordinate on the given stream\x0d\n */\x0d\n\x0d\nfunction cursorTo(stream\x2C x\x2C y\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (typeof y === 'function') {\x0d\n    callback = y;\x0d\n    y = undefined;\x0d\n  }\x0d\n\x0d\n  if (NumberIsNaN(x)) throw new ERR_INVALID_ARG_VALUE('x'\x2C x);\x0d\n  if (NumberIsNaN(y)) throw new ERR_INVALID_ARG_VALUE('y'\x2C y);\x0d\n\x0d\n  if (stream == null || (typeof x !== 'number' && typeof y !== 'number')) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (typeof x !== 'number') throw new ERR_INVALID_CURSOR_POS();\x0d\n\x0d\n  const data = typeof y !== 'number' ? CSI`${x + 1}G` : CSI`${y + 1};${x + 1}H`;\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * moves the cursor relative to its current location\x0d\n */\x0d\n\x0d\nfunction moveCursor(stream\x2C dx\x2C dy\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream == null || !(dx || dy)) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  let data = '';\x0d\n\x0d\n  if (dx < 0) {\x0d\n    data += CSI`${-dx}D`;\x0d\n  } else if (dx > 0) {\x0d\n    data += CSI`${dx}C`;\x0d\n  }\x0d\n\x0d\n  if (dy < 0) {\x0d\n    data += CSI`${-dy}A`;\x0d\n  } else if (dy > 0) {\x0d\n    data += CSI`${dy}B`;\x0d\n  }\x0d\n\x0d\n  return stream.write(data\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the current line the cursor is on:\x0d\n *   -1 for left of the cursor\x0d\n *   +1 for right of the cursor\x0d\n *    0 for the entire line\x0d\n */\x0d\n\x0d\nfunction clearLine(stream\x2C dir\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  const type =\x0d\n    dir < 0 ? kClearToLineBeginning : dir > 0 ? kClearToLineEnd : kClearLine;\x0d\n  return stream.write(type\x2C callback);\x0d\n}\x0d\n\x0d\n/**\x0d\n * clears the screen from the current position of the cursor down\x0d\n */\x0d\n\x0d\nfunction clearScreenDown(stream\x2C callback) {\x0d\n  if (callback !== undefined) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n  }\x0d\n\x0d\n  if (stream === null || stream === undefined) {\x0d\n    if (typeof callback === 'function') process.nextTick(callback\x2C null);\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  return stream.write(kClearScreenDown\x2C callback);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  clearLine\x2C\x0d\n  clearScreenDown\x2C\x0d\n  cursorTo\x2C\x0d\n  moveCursor\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ecb8cbe,102,0,2886,C0O0C4O2886,,
code-creation,JS,10,208582,0x2bb6ecb8f8e,179, node:internal/readline/callbacks:1:1,0x2bb6ecb8c38,~
code-source-info,0x2bb6ecb8f8e,102,0,2886,C0O0C56O28C62O150C65O150C70O80C75O87C81O115C87O215C90O215C95O192C101O269C104O269C109O259C115O403C118O319C124O334C130O355C136O381C142O2800C149O2822C155O2836C161O2856C167O2869C173O2815C178O2885,,
code-creation,JS,10,208882,0x2bb6ecbaa06,303,promisify node:internal/util:393:19,0x3fcdef87830,~
code-source-info,0x2bb6ecbaa06,16,11273,13172,C0O11273C17O11337C25O11378C33O11402C38O11381C55O11440C68O11440C73O11485C80O11498C82O11497C87O11543C94O11552C96O11551C100O11586C110O11586C115O11640C126O11672C136O11738C143O11647C148O11806C149O11974C156O11983C158O11982C161O11974C163O12559C174O12584C180O12584C185O12559C190O12622C201O12647C211O12709C218O12622C223O12801C233O12801C238O12872C245O12872C250O12915C252O12939C256O12920C261O13065C270O13102C276O13065C281O12948C286O12902C290O13122C297O13129C302O13169,,
code-creation,JS,10,209155,0x2bb6ecbb28e,112,EventEmitterMixin node:internal/event_target:1163:27,0x3fcdefaf1e8,~
script-source,48,node:internal/event_target,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayPrototypeReduce\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeWeakMap\x2C\x0d\n  SafeWeakRef\x2C\x0d\n  SafeWeakSet\x2C\x0d\n  String\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_EVENT_RECURSION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateInternalField\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\nconst webidl = require('internal/webidl');\x0d\n\x0d\nconst kIsEventTarget = SymbolFor('nodejs.event_target');\x0d\nconst kIsNodeEventTarget = Symbol('kIsNodeEventTarget');\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst {\x0d\n  kMaxEventTargetListeners\x2C\x0d\n  kMaxEventTargetListenersWarned\x2C\x0d\n} = EventEmitter;\x0d\n\x0d\nconst kEvents = Symbol('kEvents');\x0d\nconst kIsBeingDispatched = Symbol('kIsBeingDispatched');\x0d\nconst kStop = Symbol('kStop');\x0d\nconst kTarget = Symbol('kTarget');\x0d\nconst kHandlers = Symbol('kHandlers');\x0d\nconst kWeakHandler = Symbol('kWeak');\x0d\nconst kResistStopPropagation = Symbol('kResistStopPropagation');\x0d\n\x0d\nconst kHybridDispatch = SymbolFor('nodejs.internal.kHybridDispatch');\x0d\nconst kRemoveWeakListenerHelper = Symbol('nodejs.internal.removeWeakListenerHelper');\x0d\nconst kCreateEvent = Symbol('kCreateEvent');\x0d\nconst kNewListener = Symbol('kNewListener');\x0d\nconst kRemoveListener = Symbol('kRemoveListener');\x0d\nconst kIsNodeStyleListener = Symbol('kIsNodeStyleListener');\x0d\nconst kTrustEvent = Symbol('kTrustEvent');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kType = Symbol('type');\x0d\nconst kDetail = Symbol('detail');\x0d\n\x0d\nconst isTrustedSet = new SafeWeakSet();\x0d\nconst isTrusted = ObjectGetOwnPropertyDescriptor({\x0d\n  get isTrusted() {\x0d\n    return isTrustedSet.has(this);\x0d\n  }\x2C\x0d\n}\x2C 'isTrusted').get;\x0d\n\x0d\nconst isTrustedDescriptor = {\x0d\n  __proto__: null\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: isTrusted\x2C\x0d\n};\x0d\n\x0d\nfunction isEvent(value) {\x0d\n  return typeof value?.[kType] === 'string';\x0d\n}\x0d\n\x0d\nclass Event {\x0d\n  #cancelable = false;\x0d\n  #bubbles = false;\x0d\n  #composed = false;\x0d\n  #defaultPrevented = false;\x0d\n  #timestamp = now();\x0d\n  #propagationStopped = false;\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    validateObject(options\x2C 'options');\x0d\n    const { bubbles\x2C cancelable\x2C composed } = options;\x0d\n    this.#cancelable = !!cancelable;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#composed = !!composed;\x0d\n\x0d\n    this[kType] = `${type}`;\x0d\n    if (options?.[kTrustEvent]) {\x0d\n      isTrustedSet.add(this);\x0d\n    }\x0d\n\x0d\n    this[kTarget] = null;\x0d\n    this[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {boolean} [bubbles]\x0d\n   * @param {boolean} [cancelable]\x0d\n   */\x0d\n  initEvent(type\x2C bubbles = false\x2C cancelable = false) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n\x0d\n    if (this[kIsBeingDispatched]) {\x0d\n      return;\x0d\n    }\x0d\n    this[kType] = `${type}`;\x0d\n    this.#bubbles = !!bubbles;\x0d\n    this.#cancelable = !!cancelable;\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({\x0d\n      type: this[kType]\x2C\x0d\n      defaultPrevented: this.#defaultPrevented\x2C\x0d\n      cancelable: this.#cancelable\x2C\x0d\n      timeStamp: this.#timestamp\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  stopImmediatePropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this[kStop] = true;\x0d\n  }\x0d\n\x0d\n  preventDefault() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#defaultPrevented = true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get target() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get currentTarget() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {EventTarget}\x0d\n   */\x0d\n  get srcElement() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kTarget];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {string}\x0d\n   */\x0d\n  get type() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kType];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelable() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get defaultPrevented() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#cancelable && this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get timeStamp() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#timestamp;\x0d\n  }\x0d\n\x0d\n\x0d\n  // The following are non-op and unused properties/methods from Web API Event.\x0d\n  // These are not supported in Node.js and are provided purely for\x0d\n  // API completeness.\x0d\n  /**\x0d\n   * @returns {EventTarget[]}\x0d\n   */\x0d\n  composedPath() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? [this[kTarget]] : [];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get returnValue() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return !this.#cancelable || !this.#defaultPrevented;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get bubbles() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#bubbles;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get composed() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#composed;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {number}\x0d\n   */\x0d\n  get eventPhase() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this[kIsBeingDispatched] ? Event.AT_TARGET : Event.NONE;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get cancelBubble() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    return this.#propagationStopped;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  set cancelBubble(value) {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    if (value) {\x0d\n      this.#propagationStopped = true;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stopPropagation() {\x0d\n    if (!isEvent(this))\x0d\n      throw new ERR_INVALID_THIS('Event');\x0d\n    this.#propagationStopped = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event.prototype\x2C {\x0d\n    [SymbolToStringTag]: {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      enumerable: false\x2C\x0d\n      configurable: true\x2C\x0d\n      value: 'Event'\x2C\x0d\n    }\x2C\x0d\n    initEvent: kEnumerableProperty\x2C\x0d\n    stopImmediatePropagation: kEnumerableProperty\x2C\x0d\n    preventDefault: kEnumerableProperty\x2C\x0d\n    target: kEnumerableProperty\x2C\x0d\n    currentTarget: kEnumerableProperty\x2C\x0d\n    srcElement: kEnumerableProperty\x2C\x0d\n    type: kEnumerableProperty\x2C\x0d\n    cancelable: kEnumerableProperty\x2C\x0d\n    defaultPrevented: kEnumerableProperty\x2C\x0d\n    timeStamp: kEnumerableProperty\x2C\x0d\n    composedPath: kEnumerableProperty\x2C\x0d\n    returnValue: kEnumerableProperty\x2C\x0d\n    bubbles: kEnumerableProperty\x2C\x0d\n    composed: kEnumerableProperty\x2C\x0d\n    eventPhase: kEnumerableProperty\x2C\x0d\n    cancelBubble: kEnumerableProperty\x2C\x0d\n    stopPropagation: kEnumerableProperty\x2C\x0d\n    // Don't conform to the spec with isTrusted. The spec defines it as\x0d\n    // LegacyUnforgeable but defining it in the constructor has a big\x0d\n    // performance impact and the property doesn't seem to be useful outside of\x0d\n    // browsers.\x0d\n    isTrusted: isTrustedDescriptor\x2C\x0d\n  });\x0d\n\x0d\nconst staticProps = ['NONE'\x2C 'CAPTURING_PHASE'\x2C 'AT_TARGET'\x2C 'BUBBLING_PHASE'];\x0d\n\x0d\nObjectDefineProperties(\x0d\n  Event\x2C\x0d\n  ArrayPrototypeReduce(staticProps\x2C (result\x2C staticProp\x2C index = 0) => {\x0d\n    result[staticProp] = {\x0d\n      __proto__: null\x2C\x0d\n      writable: false\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: index\x2C\x0d\n    };\x0d\n    return result;\x0d\n  }\x2C {})\x2C\x0d\n);\x0d\n\x0d\nfunction isCustomEvent(value) {\x0d\n  return isEvent(value) && (value?.[kDetail] !== undefined);\x0d\n}\x0d\n\x0d\nclass CustomEvent extends Event {\x0d\n  /**\x0d\n   * @constructor\x0d\n   * @param {string} type\x0d\n   * @param {{\x0d\n   *   bubbles?: boolean\x2C\x0d\n   *   cancelable?: boolean\x2C\x0d\n   *   composed?: boolean\x2C\x0d\n   *   detail?: any\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  constructor(type\x2C options = kEmptyObject) {\x0d\n    if (arguments.length === 0)\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    super(type\x2C options);\x0d\n    this[kDetail] = options?.detail ?? null;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get detail() {\x0d\n    if (!isCustomEvent(this))\x0d\n      throw new ERR_INVALID_THIS('CustomEvent');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(CustomEvent.prototype\x2C {\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'CustomEvent'\x2C\x0d\n  }\x2C\x0d\n  detail: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nclass NodeCustomEvent extends Event {\x0d\n  constructor(type\x2C options) {\x0d\n    super(type\x2C options);\x0d\n    if (options?.detail) {\x0d\n      this.detail = options.detail;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Weak listener cleanup\x0d\n// This has to be lazy for snapshots to work\x0d\nlet weakListenersState = null;\x0d\n// The resource needs to retain the callback so that it doesn't\x0d\n// get garbage collected now that it's weak.\x0d\nlet objectToWeakListenerMap = null;\x0d\nfunction weakListeners() {\x0d\n  weakListenersState ??= new SafeFinalizationRegistry(\x0d\n    ({ eventTarget\x2C listener\x2C eventType }) => eventTarget.deref()?.[kRemoveWeakListenerHelper](eventType\x2C listener)\x2C\x0d\n  );\x0d\n  objectToWeakListenerMap ??= new SafeWeakMap();\x0d\n  return { registry: weakListenersState\x2C map: objectToWeakListenerMap };\x0d\n}\x0d\n\x0d\nconst kFlagOnce = 1 << 0;\x0d\nconst kFlagCapture = 1 << 1;\x0d\nconst kFlagPassive = 1 << 2;\x0d\nconst kFlagNodeStyle = 1 << 3;\x0d\nconst kFlagWeak = 1 << 4;\x0d\nconst kFlagRemoved = 1 << 5;\x0d\nconst kFlagResistStopPropagation = 1 << 6;\x0d\n\x0d\n// The listeners for an EventTarget are maintained as a linked list.\x0d\n// Unfortunately\x2C the way EventTarget is defined\x2C listeners are accounted\x0d\n// using the tuple [handler\x2Ccapture]\x2C and even if we don't actually make\x0d\n// use of capture or bubbling\x2C in order to be spec compliant we have to\x0d\n// take on the additional complexity of supporting it. Fortunately\x2C using\x0d\n// the linked list makes dispatching faster\x2C even if adding/removing is\x0d\n// slower.\x0d\nclass Listener {\x0d\n  constructor(eventTarget\x2C eventType\x2C previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n              isNodeStyleListener\x2C weak\x2C resistStopPropagation) {\x0d\n    this.next = undefined;\x0d\n    if (previous !== undefined)\x0d\n      previous.next = this;\x0d\n    this.previous = previous;\x0d\n    this.listener = listener;\x0d\n\x0d\n    let flags = 0b0;\x0d\n    if (once)\x0d\n      flags |= kFlagOnce;\x0d\n    if (capture)\x0d\n      flags |= kFlagCapture;\x0d\n    if (passive)\x0d\n      flags |= kFlagPassive;\x0d\n    if (isNodeStyleListener)\x0d\n      flags |= kFlagNodeStyle;\x0d\n    if (weak)\x0d\n      flags |= kFlagWeak;\x0d\n    if (resistStopPropagation)\x0d\n      flags |= kFlagResistStopPropagation;\x0d\n    this.flags = flags;\x0d\n\x0d\n    this.removed = false;\x0d\n\x0d\n    if (this.weak) {\x0d\n      this.callback = new SafeWeakRef(listener);\x0d\n      weakListeners().registry.register(listener\x2C {\x0d\n        __proto__: null\x2C\x0d\n        // Weak ref so the listener won't hold the eventTarget alive\x0d\n        eventTarget: new SafeWeakRef(eventTarget)\x2C\x0d\n        listener: this\x2C\x0d\n        eventType\x2C\x0d\n      }\x2C this);\x0d\n      // Make the retainer retain the listener in a WeakMap\x0d\n      weakListeners().map.set(weak\x2C listener);\x0d\n      this.listener = this.callback;\x0d\n    } else if (typeof listener === 'function') {\x0d\n      this.callback = listener;\x0d\n      this.listener = listener;\x0d\n    } else {\x0d\n      this.callback = async (...args) => {\x0d\n        if (listener.handleEvent)\x0d\n          await ReflectApply(listener.handleEvent\x2C listener\x2C args);\x0d\n      };\x0d\n      this.listener = listener;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  get once() {\x0d\n    return Boolean(this.flags & kFlagOnce);\x0d\n  }\x0d\n  get capture() {\x0d\n    return Boolean(this.flags & kFlagCapture);\x0d\n  }\x0d\n  get passive() {\x0d\n    return Boolean(this.flags & kFlagPassive);\x0d\n  }\x0d\n  get isNodeStyleListener() {\x0d\n    return Boolean(this.flags & kFlagNodeStyle);\x0d\n  }\x0d\n  get weak() {\x0d\n    return Boolean(this.flags & kFlagWeak);\x0d\n  }\x0d\n  get resistStopPropagation() {\x0d\n    return Boolean(this.flags & kFlagResistStopPropagation);\x0d\n  }\x0d\n  get removed() {\x0d\n    return Boolean(this.flags & kFlagRemoved);\x0d\n  }\x0d\n  set removed(value) {\x0d\n    if (value)\x0d\n      this.flags |= kFlagRemoved;\x0d\n    else\x0d\n      this.flags &= ~kFlagRemoved;\x0d\n  }\x0d\n\x0d\n  same(listener\x2C capture) {\x0d\n    const myListener = this.weak ? this.listener.deref() : this.listener;\x0d\n    return myListener === listener && this.capture === capture;\x0d\n  }\x0d\n\x0d\n  remove() {\x0d\n    if (this.previous !== undefined)\x0d\n      this.previous.next = this.next;\x0d\n    if (this.next !== undefined)\x0d\n      this.next.previous = this.previous;\x0d\n    this.removed = true;\x0d\n    if (this.weak)\x0d\n      weakListeners().registry.unregister(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction initEventTarget(self) {\x0d\n  self[kEvents] = new SafeMap();\x0d\n  self[kMaxEventTargetListeners] = EventEmitter.defaultMaxListeners;\x0d\n  self[kMaxEventTargetListenersWarned] = false;\x0d\n  self[kHandlers] = new SafeMap();\x0d\n}\x0d\n\x0d\nclass EventTarget {\x0d\n  // Used in checking whether an object is an EventTarget. This is a well-known\x0d\n  // symbol as EventTarget may be used cross-realm.\x0d\n  // Ref: https://github.com/nodejs/node/pull/33661\x0d\n  static [kIsEventTarget] = true;\x0d\n\x0d\n  constructor() {\x0d\n    initEventTarget(this);\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    if (this[kMaxEventTargetListeners] > 0 &&\x0d\n        size > this[kMaxEventTargetListeners] &&\x0d\n        !this[kMaxEventTargetListenersWarned]) {\x0d\n      this[kMaxEventTargetListenersWarned] = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error('Possible EventTarget memory leak detected. ' +\x0d\n                          `${size} ${type} listeners ` +\x0d\n                          `added to ${inspect(this\x2C { depth: -1 })}. Use ` +\x0d\n                          'events.setMaxListeners() to increase limit');\x0d\n      w.name = 'MaxListenersExceededWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      w.count = size;\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {}\x0d\n\x0d\n  /**\x0d\n   * @callback EventTargetCallback\x0d\n   * @param {Event} event\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @typedef {{ handleEvent: EventTargetCallback }} EventListener\x0d\n   */\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   *   once?: boolean\x2C\x0d\n   *   passive?: boolean\x2C\x0d\n   *   signal?: AbortSignal\x0d\n   * }} [options]\x0d\n   */\x0d\n  addEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n\x0d\n    // We validateOptions before the validateListener check because the spec\x0d\n    // requires us to hit getters.\x0d\n    const {\x0d\n      once\x2C\x0d\n      capture\x2C\x0d\n      passive\x2C\x0d\n      signal\x2C\x0d\n      isNodeStyleListener\x2C\x0d\n      weak\x2C\x0d\n      resistStopPropagation\x2C\x0d\n    } = validateEventListenerOptions(options);\x0d\n\x0d\n    validateAbortSignal(signal\x2C 'options.signal');\x0d\n\x0d\n    if (!validateEventListener(listener)) {\x0d\n      // The DOM silently allows passing undefined as a second argument\x0d\n      // No error code for this since it is a Warning\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const w = new Error(`addEventListener called with ${listener}` +\x0d\n                          ' which has no effect.');\x0d\n      w.name = 'AddEventListenerArgumentTypeWarning';\x0d\n      w.target = this;\x0d\n      w.type = type;\x0d\n      process.emitWarning(w);\x0d\n      return;\x0d\n    }\x0d\n    type = webidl.converters.DOMString(type);\x0d\n\x0d\n    if (signal) {\x0d\n      if (signal.aborted) {\x0d\n        return;\x0d\n      }\x0d\n      // TODO(benjamingr) make this weak somehow? ideally the signal would\x0d\n      // not prevent the event target from GC.\x0d\n      signal.addEventListener('abort'\x2C () => {\x0d\n        this.removeEventListener(type\x2C listener\x2C options);\x0d\n      }\x2C { __proto__: null\x2C once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true });\x0d\n    }\x0d\n\x0d\n    let root = this[kEvents].get(type);\x0d\n\x0d\n    if (root === undefined) {\x0d\n      root = { size: 1\x2C next: undefined\x2C resistStopPropagation: Boolean(resistStopPropagation) };\x0d\n      // This is the first handler in our linked list.\x0d\n      new Listener(this\x2C type\x2C root\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                   isNodeStyleListener\x2C weak\x2C resistStopPropagation);\x0d\n      this[kNewListener](\x0d\n        root.size\x2C\x0d\n        type\x2C\x0d\n        listener\x2C\x0d\n        once\x2C\x0d\n        capture\x2C\x0d\n        passive\x2C\x0d\n        weak);\x0d\n      this[kEvents].set(type\x2C root);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let previous = root;\x0d\n\x0d\n    // We have to walk the linked list to see if we have a match\x0d\n    while (handler !== undefined && !handler.same(listener\x2C capture)) {\x0d\n      previous = handler;\x0d\n      handler = handler.next;\x0d\n    }\x0d\n\x0d\n    if (handler !== undefined) { // Duplicate! Ignore\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    new Listener(this\x2C type\x2C previous\x2C listener\x2C once\x2C capture\x2C passive\x2C\x0d\n                 isNodeStyleListener\x2C weak\x2C resistStopPropagation);\x0d\n    root.size++;\x0d\n    root.resistStopPropagation ||= Boolean(resistStopPropagation);\x0d\n    this[kNewListener](root.size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   */\x0d\n  removeEventListener(type\x2C listener\x2C options = kEmptyObject) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 2)\x0d\n      throw new ERR_MISSING_ARGS('type'\x2C 'listener');\x0d\n    if (!validateEventListener(listener))\x0d\n      return;\x0d\n\x0d\n    type = webidl.converters.DOMString(type);\x0d\n    const capture = options?.capture === true;\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler.same(listener\x2C capture)) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kRemoveWeakListenerHelper](type\x2C listener) {\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined)\x0d\n      return;\x0d\n\x0d\n    const capture = listener.capture === true;\x0d\n\x0d\n    let handler = root.next;\x0d\n    while (handler !== undefined) {\x0d\n      if (handler === listener) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        if (root.size === 0)\x0d\n          this[kEvents].delete(type);\x0d\n        // Undefined is passed as the listener as the listener was GCed\x0d\n        this[kRemoveListener](root.size\x2C type\x2C undefined\x2C capture);\x0d\n        break;\x0d\n      }\x0d\n      handler = handler.next;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {Event} event\x0d\n   */\x0d\n  dispatchEvent(event) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    if (arguments.length < 1)\x0d\n      throw new ERR_MISSING_ARGS('event');\x0d\n\x0d\n    if (!(event instanceof Event))\x0d\n      throw new ERR_INVALID_ARG_TYPE('event'\x2C 'Event'\x2C event);\x0d\n\x0d\n    if (event[kIsBeingDispatched])\x0d\n      throw new ERR_EVENT_RECURSION(event.type);\x0d\n\x0d\n    this[kHybridDispatch](event\x2C event.type\x2C event);\x0d\n\x0d\n    return event.defaultPrevented !== true;\x0d\n  }\x0d\n\x0d\n  [kHybridDispatch](nodeValue\x2C type\x2C event) {\x0d\n    const createEvent = () => {\x0d\n      if (event === undefined) {\x0d\n        event = this[kCreateEvent](nodeValue\x2C type);\x0d\n        event[kTarget] = this;\x0d\n        event[kIsBeingDispatched] = true;\x0d\n      }\x0d\n      return event;\x0d\n    };\x0d\n    if (event !== undefined) {\x0d\n      event[kTarget] = this;\x0d\n      event[kIsBeingDispatched] = true;\x0d\n    }\x0d\n\x0d\n    const root = this[kEvents].get(type);\x0d\n    if (root === undefined || root.next === undefined) {\x0d\n      if (event !== undefined)\x0d\n        event[kIsBeingDispatched] = false;\x0d\n      return true;\x0d\n    }\x0d\n\x0d\n    let handler = root.next;\x0d\n    let next;\x0d\n\x0d\n    const iterationCondition = () => {\x0d\n      if (handler === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return root.resistStopPropagation || handler.passive || event?.[kStop] !== true;\x0d\n    };\x0d\n    while (iterationCondition()) {\x0d\n      // Cache the next item in case this iteration removes the current one\x0d\n      next = handler.next;\x0d\n\x0d\n      if (handler.removed || (event?.[kStop] === true && !handler.resistStopPropagation)) {\x0d\n        // Deal with the case an event is removed while event handlers are\x0d\n        // Being processed (removeEventListener called from a listener)\x0d\n        // And the case of event.stopImmediatePropagation() being called\x0d\n        // For events not flagged as resistStopPropagation\x0d\n        handler = next;\x0d\n        continue;\x0d\n      }\x0d\n      if (handler.once) {\x0d\n        handler.remove();\x0d\n        root.size--;\x0d\n        const { listener\x2C capture } = handler;\x0d\n        this[kRemoveListener](root.size\x2C type\x2C listener\x2C capture);\x0d\n      }\x0d\n\x0d\n      try {\x0d\n        let arg;\x0d\n        if (handler.isNodeStyleListener) {\x0d\n          arg = nodeValue;\x0d\n        } else {\x0d\n          arg = createEvent();\x0d\n        }\x0d\n        const callback = handler.weak ?\x0d\n          handler.callback.deref() : handler.callback;\x0d\n        let result;\x0d\n        if (callback) {\x0d\n          result = FunctionPrototypeCall(callback\x2C this\x2C arg);\x0d\n          if (!handler.isNodeStyleListener) {\x0d\n            arg[kIsBeingDispatched] = false;\x0d\n          }\x0d\n        }\x0d\n        if (result !== undefined && result !== null)\x0d\n          addCatch(result);\x0d\n      } catch (err) {\x0d\n        emitUncaughtException(err);\x0d\n      }\x0d\n\x0d\n      handler = next;\x0d\n    }\x0d\n\x0d\n    if (event !== undefined)\x0d\n      event[kIsBeingDispatched] = false;\x0d\n  }\x0d\n\x0d\n  [kCreateEvent](nodeValue\x2C type) {\x0d\n    return new NodeCustomEvent(type\x2C { detail: nodeValue });\x0d\n  }\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    if (!isEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('EventTarget');\x0d\n    const name = this.constructor.name;\x0d\n    if (depth < 0)\x0d\n      return name;\x0d\n\x0d\n    const opts = ObjectAssign({}\x2C options\x2C {\x0d\n      depth: NumberIsInteger(options.depth) ? options.depth - 1 : options.depth\x2C\x0d\n    });\x0d\n\x0d\n    return `${name} ${inspect({}\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(EventTarget.prototype\x2C {\x0d\n  addEventListener: kEnumerableProperty\x2C\x0d\n  removeEventListener: kEnumerableProperty\x2C\x0d\n  dispatchEvent: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'EventTarget'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction initNodeEventTarget(self) {\x0d\n  initEventTarget(self);\x0d\n}\x0d\n\x0d\nclass NodeEventTarget extends EventTarget {\x0d\n  static [kIsNodeEventTarget] = true;\x0d\n  static defaultMaxListeners = 10;\x0d\n\x0d\n  constructor() {\x0d\n    super();\x0d\n    initNodeEventTarget(this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} n\x0d\n   */\x0d\n  setMaxListeners(n) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    EventEmitter.setMaxListeners(n\x2C this);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {number}\x0d\n   */\x0d\n  getMaxListeners() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return this[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {string[]}\x0d\n   */\x0d\n  eventNames() {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    return ArrayFrom(this[kEvents].keys());\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @returns {number}\x0d\n   */\x0d\n  listenerCount(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    const root = this[kEvents].get(String(type));\x0d\n    return root !== undefined ? root.size : 0;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  off(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @param {{\x0d\n   *   capture?: boolean\x2C\x0d\n   * }} [options]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeListener(type\x2C listener\x2C options) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.removeEventListener(type\x2C listener\x2C options);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  on(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  addListener(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C { [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {any} arg\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  emit(type\x2C arg) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    validateString(type\x2C 'type');\x0d\n    const hadListeners = this.listenerCount(type) > 0;\x0d\n    this[kHybridDispatch](arg\x2C type);\x0d\n    return hadListeners;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} type\x0d\n   * @param {EventTargetCallback|EventListener} listener\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  once(type\x2C listener) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    this.addEventListener(type\x2C listener\x2C\x0d\n                          { once: true\x2C [kIsNodeStyleListener]: true });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {string} [type]\x0d\n   * @returns {NodeEventTarget}\x0d\n   */\x0d\n  removeAllListeners(type) {\x0d\n    if (!isNodeEventTarget(this))\x0d\n      throw new ERR_INVALID_THIS('NodeEventTarget');\x0d\n    if (type !== undefined) {\x0d\n      this[kEvents].delete(String(type));\x0d\n    } else {\x0d\n      this[kEvents].clear();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(NodeEventTarget.prototype\x2C {\x0d\n  setMaxListeners: kEnumerableProperty\x2C\x0d\n  getMaxListeners: kEnumerableProperty\x2C\x0d\n  eventNames: kEnumerableProperty\x2C\x0d\n  listenerCount: kEnumerableProperty\x2C\x0d\n  off: kEnumerableProperty\x2C\x0d\n  removeListener: kEnumerableProperty\x2C\x0d\n  on: kEnumerableProperty\x2C\x0d\n  addListener: kEnumerableProperty\x2C\x0d\n  once: kEnumerableProperty\x2C\x0d\n  emit: kEnumerableProperty\x2C\x0d\n  removeAllListeners: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\n// EventTarget API\x0d\n\x0d\nfunction validateEventListener(listener) {\x0d\n  if (typeof listener === 'function' ||\x0d\n      typeof listener?.handleEvent === 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  if (listener == null)\x0d\n    return false;\x0d\n\x0d\n  if (typeof listener === 'object') {\x0d\n    // Require `handleEvent` lazily.\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('listener'\x2C 'EventListener'\x2C listener);\x0d\n}\x0d\n\x0d\nfunction validateEventListenerOptions(options) {\x0d\n  if (typeof options === 'boolean')\x0d\n    return { capture: options };\x0d\n\x0d\n  if (options === null)\x0d\n    return kEmptyObject;\x0d\n  validateObject(options\x2C 'options'\x2C kValidateObjectAllowArray | kValidateObjectAllowFunction);\x0d\n  return {\x0d\n    once: Boolean(options.once)\x2C\x0d\n    capture: Boolean(options.capture)\x2C\x0d\n    passive: Boolean(options.passive)\x2C\x0d\n    signal: options.signal\x2C\x0d\n    weak: options[kWeakHandler]\x2C\x0d\n    resistStopPropagation: options[kResistStopPropagation] ?? false\x2C\x0d\n    isNodeStyleListener: Boolean(options[kIsNodeStyleListener])\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\n// Test whether the argument is an event object. This is far from a fool-proof\x0d\n// test\x2C for example this input will result in a false positive:\x0d\n// > isEventTarget({ constructor: EventTarget })\x0d\n// It stands in its current implementation as a compromise.\x0d\n// Ref: https://github.com/nodejs/node/pull/33661\x0d\nfunction isEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsEventTarget];\x0d\n}\x0d\n\x0d\nfunction isNodeEventTarget(obj) {\x0d\n  return obj?.constructor?.[kIsNodeEventTarget];\x0d\n}\x0d\n\x0d\nfunction addCatch(promise) {\x0d\n  const then = promise.then;\x0d\n  if (typeof then === 'function') {\x0d\n    FunctionPrototypeCall(then\x2C promise\x2C undefined\x2C function(err) {\x0d\n      // The callback is called with nextTick to avoid a follow-up\x0d\n      // rejection from this promise.\x0d\n      emitUncaughtException(err);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUncaughtException(err) {\x0d\n  process.nextTick(() => { throw err; });\x0d\n}\x0d\n\x0d\nfunction makeEventHandler(handler) {\x0d\n  // Event handlers are dispatched in the order they were first set\x0d\n  // See https://github.com/nodejs/node/pull/35949#issuecomment-722496598\x0d\n  function eventHandler(...args) {\x0d\n    if (typeof eventHandler.handler !== 'function') {\x0d\n      return;\x0d\n    }\x0d\n    return ReflectApply(eventHandler.handler\x2C this\x2C args);\x0d\n  }\x0d\n  eventHandler.handler = handler;\x0d\n  return eventHandler;\x0d\n}\x0d\n\x0d\nfunction defineEventHandler(emitter\x2C name\x2C event = name) {\x0d\n  // 8.1.5.1 Event handlers - basically `on[eventName]` attributes\x0d\n  const propName = `on${name}`;\x0d\n  function get() {\x0d\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\x0d\n    return this[kHandlers]?.get(event)?.handler ?? null;\x0d\n  }\x0d\n  ObjectDefineProperty(get\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: `get ${propName}`\x2C\x0d\n  });\x0d\n\x0d\n  function set(value) {\x0d\n    validateInternalField(this\x2C kHandlers\x2C 'EventTarget');\x0d\n    let wrappedHandler = this[kHandlers]?.get(event);\x0d\n    if (wrappedHandler) {\x0d\n      if (typeof wrappedHandler.handler === 'function') {\x0d\n        this[kEvents].get(event).size--;\x0d\n        const size = this[kEvents].get(event).size;\x0d\n        this[kRemoveListener](size\x2C event\x2C wrappedHandler.handler\x2C false);\x0d\n      }\x0d\n      wrappedHandler.handler = value;\x0d\n      if (typeof wrappedHandler.handler === 'function') {\x0d\n        this[kEvents].get(event).size++;\x0d\n        const size = this[kEvents].get(event).size;\x0d\n        this[kNewListener](size\x2C event\x2C value\x2C false\x2C false\x2C false\x2C false);\x0d\n      }\x0d\n    } else {\x0d\n      wrappedHandler = makeEventHandler(value);\x0d\n      this.addEventListener(event\x2C wrappedHandler);\x0d\n    }\x0d\n    this[kHandlers].set(event\x2C wrappedHandler);\x0d\n  }\x0d\n  ObjectDefineProperty(set\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: `set ${propName}`\x2C\x0d\n  });\x0d\n\x0d\n  ObjectDefineProperty(emitter\x2C propName\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get\x2C\x0d\n    set\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nconst EventEmitterMixin = (Superclass) => {\x0d\n  class MixedEventEmitter extends Superclass {\x0d\n    constructor(...args) {\x0d\n      args = new SafeArrayIterator(args);\x0d\n      super(...args);\x0d\n      FunctionPrototypeCall(EventEmitter\x2C this);\x0d\n    }\x0d\n  }\x0d\n  const protoProps = ObjectGetOwnPropertyDescriptors(EventEmitter.prototype);\x0d\n  delete protoProps.constructor;\x0d\n  const propertiesValues = ObjectValues(protoProps);\x0d\n  for (let i = 0; i < propertiesValues.length; i++) {\x0d\n    // We want to use null-prototype objects to not rely on globally mutable\x0d\n    // %Object.prototype%.\x0d\n    ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n  }\x0d\n  ObjectDefineProperties(MixedEventEmitter.prototype\x2C protoProps);\x0d\n  return MixedEventEmitter;\x0d\n};\x0d\n\x0d\nmodule.exports = {\x0d\n  Event\x2C\x0d\n  CustomEvent\x2C\x0d\n  EventEmitterMixin\x2C\x0d\n  EventTarget\x2C\x0d\n  NodeEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n  initEventTarget\x2C\x0d\n  initNodeEventTarget\x2C\x0d\n  kCreateEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kEvents\x2C\x0d\n  kWeakHandler\x2C\x0d\n  kResistStopPropagation\x2C\x0d\n  isEventTarget\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ecbb28e,48,32092,32800,C0O32145C22O32336C29O32368C32O32381C37O32336C42O32396C46O32455C51O32455C56O32497C58O32521C62O32502C67O32647C74O32684C80O32647C85O32530C90O32484C94O32704C99O32745C104O32704C109O32772C111O32797,,
new,MemoryChunk,0xc2df900000,262144
code-creation,JS,10,211376,0x2bb6ecbf696,188,readFile node:internal/fs/promises:1080:24,0x2bb6ec97db8,~
code-source-info,0x2bb6ecbf696,94,30704,31036,C10O30704C18O30725C23O30746C28O30735C35O30795C44O30813C46O30833C48O30822C53O30850C56O30857C69O30887C70O30893C73O30914C78O30893C82O30939C96O30945C109O30939C135O30973C141O30994C147O31026C152O30980C165O31033,,
code-creation,JS,10,211462,0xc2df903686,56,checkAborted node:internal/fs/promises:458:22,0x2bb6ec97048,~
code-source-info,0xc2df903686,94,11192,11294,C0O11206C7O11216C16O11232C23O11253C35O11279C48O11238C53O11232C55O11293,,
code-creation,JS,10,211543,0xc2df90384e,178,open node:internal/fs/promises:608:20,0x2bb6ec97228,~
code-source-info,0xc2df90384e,94,15870,16183,C10O15870C18O15895C23O15902C29O15949C34O15949C39O15974C55O15981C62O16020C69O16054C72O16062C79O16077C82O16088C87O16088C95O16165C104O16062C117O16048C142O16027C155O16180,,
code-creation,JS,10,211618,0xc2df903a0e,42, node:internal/fs/utils:719:42,0x3fcdef9e628,~
code-source-info,0xc2df903a0e,28,20776,20938,C14O20832C19O20832C24O20867C29O20867C34O20900C37O20907C41O20935,,
code-creation,JS,10,211720,0xc2df903bce,106,possiblyTransformPath node:internal/fs/utils:704:31,0x3fcdef9e5d8,~
code-source-info,0xc2df903bce,28,20242,20731,C0O20254C5O20269C10O20269C16O20289C22O20328C27O20335C31O20353C32O20366C39O20373C42O20373C47O20366C51O20399C56O20404C62O20426C67O20433C73O20648C80O20672C85O20684C88O20684C93O20672C98O20655C102O20707C103O20716C105O20728,,
code-creation,JS,10,211850,0xc2df90400e,515,stringToFlags node:internal/fs/utils:563:23,0x3fcdef9e3f8,~
code-source-info,0xc2df90400e
code-creation,JS,10,212008,0xc2df9043fe,86,parseFileMode node:internal/validators:69:23,0x3fcdef852c8,~
code-source-info,0xc2df9043fe,15,1953,2253,C0O1977C11O1995C17O2033C24O2057C27O2037C34O2093C41O2138C52O2099C57O2093C58O2161C66O2169C73O2205C78O2205C83O2237C85O2250,,
code-creation,JS,10,212096,0xc2df9045a6,148, node:internal/validators:137:40,0x3fcdef853b8,~
code-source-info,0xc2df9045a6,15,3882,4327,C16O3922C22O3960C38O3966C43O3960C44O4023C49O4028C55O4059C71O4065C76O4059C77O4134C87O4196C90O4214C92O4224C99O4239C104O4253C114O4292C127O4305C140O4259C145O4253C147O4326,,
code-creation,JS,10,212770,0xc2df904af6,224,link node:internal/modules/esm/module_job:77:18,0x2bb6ec90ea0,~
code-source-info,0xc2df904af6,92,2242,3087,C4O2242C26O2263C31O2288C43O2277C68O2275C72O2310C84O2322C93O2340C95O2329C99O2310C103O2662C105O2662C107O2690C112O2695C117O2702C127O2702C133O2928C135O2967C142O2973C154O2967C179O3027C189O3034C201O3080,,
code-creation,JS,10,213024,0xc2df904e8e,215,set node:internal/modules/esm/module_map:96:6,0x8c1d174128,~
code-source-info,0xc2df904e8e,84,3165,3772,C11O3178C21O3211C31O3211C36O3244C46O3244C51O3299C59O3299C64O3348C66O3356C81O3434C99O3440C104O3434C105O3503C117O3520C132O3545C134O3541C145O3585C156O3503C160O3648C162O3654C173O3654C187O3692C189O3715C193O3727C195O3740C209O3740C214O3767,,
code-creation,JS,10,213210,0xc2df90508e,89,logger node:internal/util/debuglog:100:18,0x3fcdef8f970,~
code-source-info,0xc2df90508e,22,3064,3265,C0O3064C3O3097C24O3122C30O3139C34O3129C38O3144C39O3160C45O3177C51O3186C55O3167C60O3191C61O3208C65O3215C72O3228C77O3224C83O3215C88O3253,,
code-creation,JS,10,213367,0xc2df9051f6,140,debug node:internal/util/debuglog:81:15,0x3fcdef8f8d0,~
code-source-info,0xc2df9051f6,22,2533,2939,C0O2533C3O2553C6O2553C9O2664C16O2685C22O2672C30O2670C36O2705C42O2742C47O2745C50O2742C54O2771C75O2796C81O2813C85O2803C89O2818C90O2834C96O2851C102O2860C106O2841C111O2865C112O2882C116O2889C123O2902C128O2898C134O2889C139O2927,,
code-creation,JS,10,213515,0xc2df9053a6,41,init node:internal/util/debuglog:77:16,0x3fcdef8f880,~
code-source-info,0xc2df9053a6,22,2431,2517,C0O2441C10O2447C14O2445C16O2485C26O2495C33O2493C40O2516,,
code-creation,JS,10,213598,0xc2df905496,2,testEnabled node:internal/util/debuglog:31:19,0x1c66f8d3e10,~
code-source-info,0xc2df905496,22,988,999,C0O994C1O999,,
code-creation,JS,10,213716,0xc2df90560e,116,debuglogImpl node:internal/util/debuglog:54:22,0x3fcdef8f638,~
code-source-info,0xc2df90560e,22,1607,2160,C0O1607C9O1627C18O1641C23O1669C34O1703C39O1711C43O1703C45O1723C55O1723C59O1756C71O1767C75O1772C83O2095C97O2113C99O2111C103O2134C112O2151C115O2157,,
code-creation,JS,10,213840,0xc2df9057c6,10, node:internal/modules/esm/module_map:12:63,0x8c1d173e58,~
code-source-info,0xc2df9057c6,84,292,319,C0O305C2O311C9O318,,
code-creation,JS,10,213911,0xc2df905876,2,noop node:internal/util/debuglog:46:14,0x3fcdef8f598,~
code-source-info,0xc2df905876,22,1449,1457,C1O1456,,
code-creation,JS,10,214145,0xc2df905c7e,440,run node:internal/modules/esm/module_job:216:12,0x2bb6ec8fe08,~
code-source-info,0xc2df905c7e,92,7850,9118,C10O7850C18O7871C23O7871C35O7860C58O7907C61O7938C63O7950C68O7950C74O8012C79O8019C84O8019C98O8001C136O8079C141O8084C151O8091C160O8126C166O8164C171O8126C177O8185C190O8195C194O8232C204O8264C212O8236C219O8299C232O8309C236O8399C243O8430C248O8437C256O8399C267O8469C276O8519C281O8526C286O8469C292O8531C303O8556C308O8611C313O8639C318O8646C323O8612C329O8679C336O8684C341O8711C355O8860C369O8802C375O8883C381O8963C387O8721C391O9044C393O9044C394O9065C399O9104C417O9113,,
code-creation,JS,10,214352,0xc2df905fb6,24,instantiate node:internal/modules/esm/module_job:109:14,0x2bb6ec8fd18,~
code-source-info,0xc2df905fb6,92,3497,3636,C0O3516C6O3578C11O3578C15O3571C19O3618C23O3631,,
code-creation,JS,10,214726,0xc2df90662e,940,_instantiate node:internal/modules/esm/module_job:116:21,0x2bb6ec8fd68,~
code-source-info,0xc2df90662e
code-creation,JS,10,215002,0xc2df906c9e,146,addJobsToDependencyGraph node:internal/modules/esm/module_job:118:38,0xc2df906368,~
code-source-info,0xc2df906c9e,92,3743,4010,C10O3743C18O3773C23O3789C28O3789C35O3816C44O3823C45O3840C50O3852C55O3852C60O3914C72O3898C98O3929C107O3977C110O3936C123O4003,,
code-creation,JS,10,215202,0xc2df906e46,122,FileHandle node:internal/fs/promises:145:14,0x2bb6ec97ea8,~
code-source-info,0xc2df906e46,94,3770,3943,C3O3790C24O3790C50O3804C55O3809C60O3818C64O3837C69O3842C77O3849C79O3873C87O3847C91O3889C96O3894C101O3901C105O3911C110O3916C114O3931C121O3942,,
code-creation,JS,10,215330,0xc2df906fc6,79,MixedEventEmitter node:internal/event_target:1165:16,0x2bb6ecbb070,~
code-source-info,0xc2df906fc6,48,32174,32308,C0O32174C8O32193C15O32200C21O32236C45O32236C57O32259C64O32281C70O32259C78O32307,,
code-creation,JS,10,215730,0xc2df90781e,709,readFileHandle node:internal/fs/promises:498:30,0x2bb6ec970e8,~
code-source-info,0xc2df90781e
code-creation,JS,10,216037,0xc2df907cfe,8,get fd node:internal/fs/promises:158:9,0x2bb6ec97f60,~
code-source-info,0xc2df907cfe,94,4020,4052,C0O4030C2O4042C4O4041C7O4047,,
code-creation,JS,10,216193,0xc2df907f06,79,handleFdClose node:internal/fs/promises:413:29,0x2bb6ec96f58,~
code-source-info,0xc2df907f06,94,10034,10388,C0O10034C23O10066C30O10100C43O10073C56O10385,,
code-creation,JS,10,216450,0xc2df90809e,33,allocUnsafeSlow node:buffer:411:50,0x3fcdef94820,~
script-source,24,node:buffer,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMin\x2C\x0d\n  MathTrunc\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  NumberMIN_SAFE_INTEGER\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n  TypedArrayPrototypeGetBuffer\x2C\x0d\n  TypedArrayPrototypeGetByteLength\x2C\x0d\n  TypedArrayPrototypeGetByteOffset\x2C\x0d\n  TypedArrayPrototypeFill\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n  TypedArrayPrototypeSlice\x2C\x0d\n  Uint8Array\x2C\x0d\n  Uint8ArrayPrototype\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  byteLengthUtf8\x2C\x0d\n  compare: _compare\x2C\x0d\n  compareOffset\x2C\x0d\n  createFromString\x2C\x0d\n  fill: bindingFill\x2C\x0d\n  isAscii: bindingIsAscii\x2C\x0d\n  isUtf8: bindingIsUtf8\x2C\x0d\n  indexOfBuffer\x2C\x0d\n  indexOfNumber\x2C\x0d\n  indexOfString\x2C\x0d\n  swap16: _swap16\x2C\x0d\n  swap32: _swap32\x2C\x0d\n  swap64: _swap64\x2C\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n} = internalBinding('buffer');\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n} = internalBinding('util');\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isInsideNodeModules\x2C\x0d\n  lazyDOMException\x2C\x0d\n  normalizeEncoding\x2C\x0d\n  kIsEncodingSymbol\x2C\x0d\n  defineLazyProperties\x2C\x0d\n  encodingsMap\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n  isTypedArray\x2C\x0d\n} = require('internal/util/types');\x0d\nconst {\x0d\n  inspect: utilInspect\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_BUFFER_OUT_OF_BOUNDS\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_BUFFER_SIZE\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateArray\x2C\x0d\n  validateBuffer\x2C\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n// Provide validateInteger() but with kMaxLength as the default maximum value.\x0d\nconst validateOffset = (value\x2C name\x2C min = 0\x2C max = kMaxLength) =>\x0d\n  validateInteger(value\x2C name\x2C min\x2C max);\x0d\n\x0d\nconst {\x0d\n  FastBuffer\x2C\x0d\n  markAsUntransferable\x2C\x0d\n  addBufferPrototypeMethods\x2C\x0d\n  createUnsafeBuffer\x2C\x0d\n} = require('internal/buffer');\x0d\n\x0d\nFastBuffer.prototype.constructor = Buffer;\x0d\nBuffer.prototype = FastBuffer.prototype;\x0d\naddBufferPrototypeMethods(Buffer.prototype);\x0d\n\x0d\nconst constants = ObjectDefineProperties({}\x2C {\x0d\n  MAX_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n  MAX_STRING_LENGTH: {\x0d\n    __proto__: null\x2C\x0d\n    value: kStringMaxLength\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.poolSize = 8 * 1024;\x0d\nlet poolSize\x2C poolOffset\x2C allocPool;\x0d\n\x0d\nfunction createPool() {\x0d\n  poolSize = Buffer.poolSize;\x0d\n  allocPool = createUnsafeBuffer(poolSize).buffer;\x0d\n  markAsUntransferable(allocPool);\x0d\n  poolOffset = 0;\x0d\n}\x0d\ncreatePool();\x0d\n\x0d\nfunction alignPool() {\x0d\n  // Ensure aligned slices\x0d\n  if (poolOffset & 0x7) {\x0d\n    poolOffset |= 0x7;\x0d\n    poolOffset++;\x0d\n  }\x0d\n}\x0d\n\x0d\nlet bufferWarningAlreadyEmitted = false;\x0d\nlet nodeModulesCheckCounter = 0;\x0d\nconst bufferWarning = 'Buffer() is deprecated due to security and usability ' +\x0d\n                      'issues. Please use the Buffer.alloc()\x2C ' +\x0d\n                      'Buffer.allocUnsafe()\x2C or Buffer.from() methods instead.';\x0d\n\x0d\nfunction showFlaggedDeprecation() {\x0d\n  if (bufferWarningAlreadyEmitted ||\x0d\n      ++nodeModulesCheckCounter > 10000 ||\x0d\n      (!require('internal/options').getOptionValue('--pending-deprecation') &&\x0d\n       isInsideNodeModules())) {\x0d\n    // We don't emit a warning\x2C because we either:\x0d\n    // - Already did so\x2C or\x0d\n    // - Already checked too many times whether a call is coming\x0d\n    //   from node_modules and want to stop slowing down things\x2C or\x0d\n    // - We aren't running with `--pending-deprecation` enabled\x2C\x0d\n    //   and the code is inside `node_modules`.\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.emitWarning(bufferWarning\x2C 'DeprecationWarning'\x2C 'DEP0005');\x0d\n  bufferWarningAlreadyEmitted = true;\x0d\n}\x0d\n\x0d\nfunction toInteger(n\x2C defaultVal) {\x0d\n  n = +n;\x0d\n  if (!NumberIsNaN(n) &&\x0d\n      n >= NumberMIN_SAFE_INTEGER &&\x0d\n      n <= NumberMAX_SAFE_INTEGER) {\x0d\n    return ((n % 1) === 0 ? n : MathFloor(n));\x0d\n  }\x0d\n  return defaultVal;\x0d\n}\x0d\n\x0d\nfunction _copy(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (!isUint8Array(source))\x0d\n    throw new ERR_INVALID_ARG_TYPE('source'\x2C ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n  if (!isUint8Array(target))\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n\x0d\n  if (targetStart === undefined) {\x0d\n    targetStart = 0;\x0d\n  } else {\x0d\n    targetStart = toInteger(targetStart\x2C 0);\x0d\n    if (targetStart < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('targetStart'\x2C '>= 0'\x2C targetStart);\x0d\n  }\x0d\n\x0d\n  if (sourceStart === undefined) {\x0d\n    sourceStart = 0;\x0d\n  } else {\x0d\n    sourceStart = toInteger(sourceStart\x2C 0);\x0d\n    if (sourceStart < 0 || sourceStart > source.length)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceStart'\x2C `>= 0 && <= ${source.length}`\x2C sourceStart);\x0d\n  }\x0d\n\x0d\n  if (sourceEnd === undefined) {\x0d\n    sourceEnd = source.length;\x0d\n  } else {\x0d\n    sourceEnd = toInteger(sourceEnd\x2C 0);\x0d\n    if (sourceEnd < 0)\x0d\n      throw new ERR_OUT_OF_RANGE('sourceEnd'\x2C '>= 0'\x2C sourceEnd);\x0d\n  }\x0d\n\x0d\n  if (targetStart >= target.length || sourceStart >= sourceEnd)\x0d\n    return 0;\x0d\n\x0d\n  return _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n}\x0d\n\x0d\nfunction _copyActual(source\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n  if (sourceEnd - sourceStart > target.length - targetStart)\x0d\n    sourceEnd = sourceStart + target.length - targetStart;\x0d\n\x0d\n  let nb = sourceEnd - sourceStart;\x0d\n  const sourceLen = source.length - sourceStart;\x0d\n  if (nb > sourceLen)\x0d\n    nb = sourceLen;\x0d\n\x0d\n  if (sourceStart !== 0 || sourceEnd < source.length)\x0d\n    source = new Uint8Array(source.buffer\x2C source.byteOffset + sourceStart\x2C nb);\x0d\n\x0d\n  TypedArrayPrototypeSet(target\x2C source\x2C targetStart);\x0d\n\x0d\n  return nb;\x0d\n}\x0d\n\x0d\n/**\x0d\n * The Buffer() constructor is deprecated in documentation and should not be\x0d\n * used moving forward. Rather\x2C developers should use one of the three new\x0d\n * factory APIs: Buffer.from()\x2C Buffer.allocUnsafe() or Buffer.alloc() based on\x0d\n * their specific needs. There is no runtime deprecation because of the extent\x0d\n * to which the Buffer constructor is used in the ecosystem currently -- a\x0d\n * runtime deprecation would introduce too much breakage at this time. It's not\x0d\n * likely that the Buffer constructors would ever actually be removed.\x0d\n * Deprecation Code: DEP0005\x0d\n */\x0d\nfunction Buffer(arg\x2C encodingOrOffset\x2C length) {\x0d\n  showFlaggedDeprecation();\x0d\n  // Common case.\x0d\n  if (typeof arg === 'number') {\x0d\n    if (typeof encodingOrOffset === 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('string'\x2C 'string'\x2C arg);\x0d\n    }\x0d\n    return Buffer.alloc(arg);\x0d\n  }\x0d\n  return Buffer.from(arg\x2C encodingOrOffset\x2C length);\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Buffer\x2C SymbolSpecies\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  get() { return FastBuffer; }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Functionally equivalent to Buffer(arg\x2C encoding) but throws a TypeError\x0d\n * if value is a number.\x0d\n * Buffer.from(str[\x2C encoding])\x0d\n * Buffer.from(array)\x0d\n * Buffer.from(buffer)\x0d\n * Buffer.from(arrayBuffer[\x2C byteOffset[\x2C length]])\x0d\n */\x0d\nBuffer.from = function from(value\x2C encodingOrOffset\x2C length) {\x0d\n  if (typeof value === 'string')\x0d\n    return fromString(value\x2C encodingOrOffset);\x0d\n\x0d\n  if (typeof value === 'object' && value !== null) {\x0d\n    if (isAnyArrayBuffer(value))\x0d\n      return fromArrayBuffer(value\x2C encodingOrOffset\x2C length);\x0d\n\x0d\n    const valueOf = value.valueOf && value.valueOf();\x0d\n    if (valueOf != null &&\x0d\n        valueOf !== value &&\x0d\n        (typeof valueOf === 'string' || typeof valueOf === 'object')) {\x0d\n      return from(valueOf\x2C encodingOrOffset\x2C length);\x0d\n    }\x0d\n\x0d\n    const b = fromObject(value);\x0d\n    if (b)\x0d\n      return b;\x0d\n\x0d\n    if (typeof value[SymbolToPrimitive] === 'function') {\x0d\n      const primitive = value[SymbolToPrimitive]('string');\x0d\n      if (typeof primitive === 'string') {\x0d\n        return fromString(primitive\x2C encodingOrOffset);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'first argument'\x2C\x0d\n    ['string'\x2C 'Buffer'\x2C 'ArrayBuffer'\x2C 'Array'\x2C 'Array-like Object']\x2C\x0d\n    value\x2C\x0d\n  );\x0d\n};\x0d\n\x0d\n/**\x0d\n * Creates the Buffer as a copy of the underlying ArrayBuffer of the view\x0d\n * rather than the contents of the view.\x0d\n * @param {TypedArray} view\x0d\n * @param {number} [offset]\x0d\n * @param {number} [length]\x0d\n * @returns {Buffer}\x0d\n */\x0d\nBuffer.copyBytesFrom = function copyBytesFrom(view\x2C offset\x2C length) {\x0d\n  if (!isTypedArray(view)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('view'\x2C [ 'TypedArray' ]\x2C view);\x0d\n  }\x0d\n\x0d\n  const viewLength = TypedArrayPrototypeGetLength(view);\x0d\n  if (viewLength === 0) {\x0d\n    return Buffer.alloc(0);\x0d\n  }\x0d\n\x0d\n  if (offset !== undefined || length !== undefined) {\x0d\n    if (offset !== undefined) {\x0d\n      validateInteger(offset\x2C 'offset'\x2C 0);\x0d\n      if (offset >= viewLength) return Buffer.alloc(0);\x0d\n    } else {\x0d\n      offset = 0;\x0d\n    }\x0d\n    let end;\x0d\n    if (length !== undefined) {\x0d\n      validateInteger(length\x2C 'length'\x2C 0);\x0d\n      end = offset + length;\x0d\n    } else {\x0d\n      end = viewLength;\x0d\n    }\x0d\n\x0d\n    view = TypedArrayPrototypeSlice(view\x2C offset\x2C end);\x0d\n  }\x0d\n\x0d\n  return fromArrayLike(new Uint8Array(\x0d\n    TypedArrayPrototypeGetBuffer(view)\x2C\x0d\n    TypedArrayPrototypeGetByteOffset(view)\x2C\x0d\n    TypedArrayPrototypeGetByteLength(view)));\x0d\n};\x0d\n\x0d\n// Identical to the built-in %TypedArray%.of()\x2C but avoids using the deprecated\x0d\n// Buffer() constructor. Must use arrow function syntax to avoid automatically\x0d\n// adding a `prototype` property and making the function a constructor.\x0d\n//\x0d\n// Refs: https://tc39.github.io/ecma262/#sec-%typedarray%.of\x0d\n// Refs: https://esdiscuss.org/topic/isconstructor#content-11\x0d\nconst of = (...items) => {\x0d\n  const newObj = createUnsafeBuffer(items.length);\x0d\n  for (let k = 0; k < items.length; k++)\x0d\n    newObj[k] = items[k];\x0d\n  return newObj;\x0d\n};\x0d\nBuffer.of = of;\x0d\n\x0d\nObjectSetPrototypeOf(Buffer\x2C Uint8Array);\x0d\n\x0d\n/**\x0d\n * Creates a new filled Buffer instance.\x0d\n * alloc(size[\x2C fill[\x2C encoding]])\x0d\n */\x0d\nBuffer.alloc = function alloc(size\x2C fill\x2C encoding) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  if (fill !== undefined && fill !== 0 && size > 0) {\x0d\n    const buf = createUnsafeBuffer(size);\x0d\n    return _fill(buf\x2C fill\x2C 0\x2C buf.length\x2C encoding);\x0d\n  }\x0d\n  return new FastBuffer(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to Buffer(num)\x2C by default creates a non-zero-filled Buffer\x0d\n * instance. If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafe = function allocUnsafe(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return allocate(size);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Equivalent to SlowBuffer(num)\x2C by default creates a non-zero-filled\x0d\n * Buffer instance that is not allocated off the pre-initialized pool.\x0d\n * If `--zero-fill-buffers` is set\x2C will zero-fill the buffer.\x0d\n */\x0d\nBuffer.allocUnsafeSlow = function allocUnsafeSlow(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return createUnsafeBuffer(size);\x0d\n};\x0d\n\x0d\n// If --zero-fill-buffers command line argument is set\x2C a zero-filled\x0d\n// buffer is returned.\x0d\nfunction SlowBuffer(size) {\x0d\n  validateNumber(size\x2C 'size'\x2C 0\x2C kMaxLength);\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(SlowBuffer.prototype\x2C Uint8ArrayPrototype);\x0d\nObjectSetPrototypeOf(SlowBuffer\x2C Uint8Array);\x0d\n\x0d\nfunction allocate(size) {\x0d\n  if (size <= 0) {\x0d\n    return new FastBuffer();\x0d\n  }\x0d\n  if (size < (Buffer.poolSize >>> 1)) {\x0d\n    if (size > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C size);\x0d\n    poolOffset += size;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return createUnsafeBuffer(size);\x0d\n}\x0d\n\x0d\nfunction fromStringFast(string\x2C ops) {\x0d\n  const length = ops.byteLength(string);\x0d\n\x0d\n  if (length >= (Buffer.poolSize >>> 1))\x0d\n    return createFromString(string\x2C ops.encodingVal);\x0d\n\x0d\n  if (length > (poolSize - poolOffset))\x0d\n    createPool();\x0d\n  let b = new FastBuffer(allocPool\x2C poolOffset\x2C length);\x0d\n  const actual = ops.write(b\x2C string\x2C 0\x2C length);\x0d\n  if (actual !== length) {\x0d\n    // byteLength() may overestimate. That's a rare case\x2C though.\x0d\n    b = new FastBuffer(allocPool\x2C poolOffset\x2C actual);\x0d\n  }\x0d\n  poolOffset += actual;\x0d\n  alignPool();\x0d\n  return b;\x0d\n}\x0d\n\x0d\nfunction fromString(string\x2C encoding) {\x0d\n  let ops;\x0d\n  if (typeof encoding !== 'string' || encoding.length === 0) {\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n    ops = encodingOps.utf8;\x0d\n  } else {\x0d\n    ops = getEncodingOps(encoding);\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    if (string.length === 0)\x0d\n      return new FastBuffer();\x0d\n  }\x0d\n  return fromStringFast(string\x2C ops);\x0d\n}\x0d\n\x0d\nfunction fromArrayBuffer(obj\x2C byteOffset\x2C length) {\x0d\n  // Convert byteOffset to integer\x0d\n  if (byteOffset === undefined) {\x0d\n    byteOffset = 0;\x0d\n  } else {\x0d\n    byteOffset = +byteOffset;\x0d\n    if (NumberIsNaN(byteOffset))\x0d\n      byteOffset = 0;\x0d\n  }\x0d\n\x0d\n  const maxLength = obj.byteLength - byteOffset;\x0d\n\x0d\n  if (maxLength < 0)\x0d\n    throw new ERR_BUFFER_OUT_OF_BOUNDS('offset');\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = maxLength;\x0d\n  } else {\x0d\n    // Convert length to non-negative integer.\x0d\n    length = +length;\x0d\n    if (length > 0) {\x0d\n      if (length > maxLength)\x0d\n        throw new ERR_BUFFER_OUT_OF_BOUNDS('length');\x0d\n    } else {\x0d\n      length = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return new FastBuffer(obj\x2C byteOffset\x2C length);\x0d\n}\x0d\n\x0d\nfunction fromArrayLike(obj) {\x0d\n  if (obj.length <= 0)\x0d\n    return new FastBuffer();\x0d\n  if (obj.length < (Buffer.poolSize >>> 1)) {\x0d\n    if (obj.length > (poolSize - poolOffset))\x0d\n      createPool();\x0d\n    const b = new FastBuffer(allocPool\x2C poolOffset\x2C obj.length);\x0d\n    TypedArrayPrototypeSet(b\x2C obj\x2C 0);\x0d\n    poolOffset += obj.length;\x0d\n    alignPool();\x0d\n    return b;\x0d\n  }\x0d\n  return new FastBuffer(obj);\x0d\n}\x0d\n\x0d\nfunction fromObject(obj) {\x0d\n  if (obj.length !== undefined || isAnyArrayBuffer(obj.buffer)) {\x0d\n    if (typeof obj.length !== 'number') {\x0d\n      return new FastBuffer();\x0d\n    }\x0d\n    return fromArrayLike(obj);\x0d\n  }\x0d\n\x0d\n  if (obj.type === 'Buffer' && ArrayIsArray(obj.data)) {\x0d\n    return fromArrayLike(obj.data);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Static methods\x0d\n\x0d\nBuffer.isBuffer = function isBuffer(b) {\x0d\n  return b instanceof Buffer;\x0d\n};\x0d\n\x0d\nBuffer.compare = function compare(buf1\x2C buf2) {\x0d\n  if (!isUint8Array(buf1)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf1'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf1);\x0d\n  }\x0d\n\x0d\n  if (!isUint8Array(buf2)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('buf2'\x2C ['Buffer'\x2C 'Uint8Array']\x2C buf2);\x0d\n  }\x0d\n\x0d\n  if (buf1 === buf2) {\x0d\n    return 0;\x0d\n  }\x0d\n\x0d\n  return _compare(buf1\x2C buf2);\x0d\n};\x0d\n\x0d\nBuffer.isEncoding = function isEncoding(encoding) {\x0d\n  return typeof encoding === 'string' && encoding.length !== 0 &&\x0d\n         normalizeEncoding(encoding) !== undefined;\x0d\n};\x0d\nBuffer[kIsEncodingSymbol] = Buffer.isEncoding;\x0d\n\x0d\nBuffer.concat = function concat(list\x2C length) {\x0d\n  validateArray(list\x2C 'list');\x0d\n\x0d\n  if (list.length === 0)\x0d\n    return new FastBuffer();\x0d\n\x0d\n  if (length === undefined) {\x0d\n    length = 0;\x0d\n    for (let i = 0; i < list.length; i++) {\x0d\n      if (list[i].length) {\x0d\n        length += list[i].length;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    validateOffset(length\x2C 'length');\x0d\n  }\x0d\n\x0d\n  const buffer = Buffer.allocUnsafe(length);\x0d\n  let pos = 0;\x0d\n  for (let i = 0; i < list.length; i++) {\x0d\n    const buf = list[i];\x0d\n    if (!isUint8Array(buf)) {\x0d\n      // TODO(BridgeAR): This should not be of type ERR_INVALID_ARG_TYPE.\x0d\n      // Instead\x2C find the proper error code for this.\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        `list[${i}]`\x2C ['Buffer'\x2C 'Uint8Array']\x2C list[i]);\x0d\n    }\x0d\n    pos += _copyActual(buf\x2C buffer\x2C pos\x2C 0\x2C buf.length);\x0d\n  }\x0d\n\x0d\n  // Note: `length` is always equal to `buffer.length` at this point\x0d\n  if (pos < length) {\x0d\n    // Zero-fill the remaining bytes if the specified `length` was more than\x0d\n    // the actual total length\x2C i.e. if we have some remaining allocated bytes\x0d\n    // there were not initialized.\x0d\n    TypedArrayPrototypeFill(buffer\x2C 0\x2C pos\x2C length);\x0d\n  }\x0d\n\x0d\n  return buffer;\x0d\n};\x0d\n\x0d\nfunction base64ByteLength(str\x2C bytes) {\x0d\n  // Handle padding\x0d\n  if (StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n  if (bytes > 1 && StringPrototypeCharCodeAt(str\x2C bytes - 1) === 0x3D)\x0d\n    bytes--;\x0d\n\x0d\n  // Base64 ratio: 3/4\x0d\n  return (bytes * 3) >>> 2;\x0d\n}\x0d\n\x0d\nconst encodingOps = {\x0d\n  utf8: {\x0d\n    encoding: 'utf8'\x2C\x0d\n    encodingVal: encodingsMap.utf8\x2C\x0d\n    byteLength: byteLengthUtf8\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.utf8Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.utf8Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf8\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ucs2: {\x0d\n    encoding: 'ucs2'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  utf16le: {\x0d\n    encoding: 'utf16le'\x2C\x0d\n    encodingVal: encodingsMap.utf16le\x2C\x0d\n    byteLength: (string) => string.length * 2\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.ucs2Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.ucs2Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.utf16le\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  latin1: {\x0d\n    encoding: 'latin1'\x2C\x0d\n    encodingVal: encodingsMap.latin1\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.latin1Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.latin1Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfString(buf\x2C val\x2C byteOffset\x2C encodingsMap.latin1\x2C dir)\x2C\x0d\n  }\x2C\x0d\n  ascii: {\x0d\n    encoding: 'ascii'\x2C\x0d\n    encodingVal: encodingsMap.ascii\x2C\x0d\n    byteLength: (string) => string.length\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.asciiWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.asciiSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.ascii)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.ascii\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64: {\x0d\n    encoding: 'base64'\x2C\x0d\n    encodingVal: encodingsMap.base64\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.base64Write(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64Slice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  base64url: {\x0d\n    encoding: 'base64url'\x2C\x0d\n    encodingVal: encodingsMap.base64url\x2C\x0d\n    byteLength: (string) => base64ByteLength(string\x2C string.length)\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) =>\x0d\n      buf.base64urlWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.base64urlSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.base64url)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.base64url\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n  hex: {\x0d\n    encoding: 'hex'\x2C\x0d\n    encodingVal: encodingsMap.hex\x2C\x0d\n    byteLength: (string) => string.length >>> 1\x2C\x0d\n    write: (buf\x2C string\x2C offset\x2C len) => buf.hexWrite(string\x2C offset\x2C len)\x2C\x0d\n    slice: (buf\x2C start\x2C end) => buf.hexSlice(start\x2C end)\x2C\x0d\n    indexOf: (buf\x2C val\x2C byteOffset\x2C dir) =>\x0d\n      indexOfBuffer(buf\x2C\x0d\n                    fromStringFast(val\x2C encodingOps.hex)\x2C\x0d\n                    byteOffset\x2C\x0d\n                    encodingsMap.hex\x2C\x0d\n                    dir)\x2C\x0d\n  }\x2C\x0d\n};\x0d\nfunction getEncodingOps(encoding) {\x0d\n  encoding += '';\x0d\n  switch (encoding.length) {\x0d\n    case 4:\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf8') return encodingOps.utf8;\x0d\n      if (encoding === 'ucs2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 5:\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'utf-8') return encodingOps.utf8;\x0d\n      if (encoding === 'ascii') return encodingOps.ascii;\x0d\n      if (encoding === 'ucs-2') return encodingOps.ucs2;\x0d\n      break;\x0d\n    case 7:\x0d\n      if (encoding === 'utf16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 8:\x0d\n      if (encoding === 'utf-16le' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'utf-16le')\x0d\n        return encodingOps.utf16le;\x0d\n      break;\x0d\n    case 6:\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      encoding = StringPrototypeToLowerCase(encoding);\x0d\n      if (encoding === 'latin1' || encoding === 'binary')\x0d\n        return encodingOps.latin1;\x0d\n      if (encoding === 'base64') return encodingOps.base64;\x0d\n      break;\x0d\n    case 3:\x0d\n      if (encoding === 'hex' || StringPrototypeToLowerCase(encoding) === 'hex')\x0d\n        return encodingOps.hex;\x0d\n      break;\x0d\n    case 9:\x0d\n      if (encoding === 'base64url' ||\x0d\n          StringPrototypeToLowerCase(encoding) === 'base64url')\x0d\n        return encodingOps.base64url;\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction byteLength(string\x2C encoding) {\x0d\n  if (typeof string !== 'string') {\x0d\n    if (isArrayBufferView(string) || isAnyArrayBuffer(string)) {\x0d\n      return string.byteLength;\x0d\n    }\x0d\n\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'string'\x2C ['string'\x2C 'Buffer'\x2C 'ArrayBuffer']\x2C string\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  const len = string.length;\x0d\n  if (len === 0)\x0d\n    return 0;\x0d\n\x0d\n  if (encoding) {\x0d\n    const ops = getEncodingOps(encoding);\x0d\n    if (ops) {\x0d\n      return ops.byteLength(string);\x0d\n    }\x0d\n  }\x0d\n  return byteLengthUtf8(string);\x0d\n}\x0d\n\x0d\nBuffer.byteLength = byteLength;\x0d\n\x0d\n// For backwards compatibility.\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'parent'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.buffer;\x0d\n  }\x2C\x0d\n});\x0d\nObjectDefineProperty(Buffer.prototype\x2C 'offset'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    if (!(this instanceof Buffer))\x0d\n      return undefined;\x0d\n    return this.byteOffset;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nBuffer.prototype.copy =\x0d\n  function copy(target\x2C targetStart\x2C sourceStart\x2C sourceEnd) {\x0d\n    return _copy(this\x2C target\x2C targetStart\x2C sourceStart\x2C sourceEnd);\x0d\n  };\x0d\n\x0d\n// No need to verify that "buf.length <= MAX_UINT32" since it's a read-only\x0d\n// property of a typed array.\x0d\n// This behaves neither like String nor Uint8Array in that we set start/end\x0d\n// to their upper/lower bounds if the value passed is out of range.\x0d\nBuffer.prototype.toString = function toString(encoding\x2C start\x2C end) {\x0d\n  if (arguments.length === 0) {\x0d\n    return this.utf8Slice(0\x2C this.length);\x0d\n  }\x0d\n\x0d\n  const len = this.length;\x0d\n\x0d\n  if (start <= 0)\x0d\n    start = 0;\x0d\n  else if (start >= len)\x0d\n    return '';\x0d\n  else\x0d\n    start |= 0;\x0d\n\x0d\n  if (end === undefined || end > len)\x0d\n    end = len;\x0d\n  else\x0d\n    end |= 0;\x0d\n\x0d\n  if (end <= start)\x0d\n    return '';\x0d\n\x0d\n  if (encoding === undefined)\x0d\n    return this.utf8Slice(start\x2C end);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n\x0d\n  return ops.slice(this\x2C start\x2C end);\x0d\n};\x0d\n\x0d\nBuffer.prototype.equals = function equals(otherBuffer) {\x0d\n  if (!isUint8Array(otherBuffer)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'otherBuffer'\x2C ['Buffer'\x2C 'Uint8Array']\x2C otherBuffer);\x0d\n  }\x0d\n\x0d\n  if (this === otherBuffer)\x0d\n    return true;\x0d\n  const len = TypedArrayPrototypeGetByteLength(this);\x0d\n  if (len !== TypedArrayPrototypeGetByteLength(otherBuffer))\x0d\n    return false;\x0d\n\x0d\n  return len === 0 || _compare(this\x2C otherBuffer) === 0;\x0d\n};\x0d\n\x0d\nlet INSPECT_MAX_BYTES = 50;\x0d\n// Override how buffers are presented by util.inspect().\x0d\nBuffer.prototype[customInspectSymbol] = function inspect(recurseTimes\x2C ctx) {\x0d\n  const max = INSPECT_MAX_BYTES;\x0d\n  const actualMax = MathMin(max\x2C this.length);\x0d\n  const remaining = this.length - max;\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C this.hexSlice(0\x2C actualMax)\x2C '$1 '));\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  // Inspect special properties as well\x2C if possible.\x0d\n  if (ctx) {\x0d\n    let extras = false;\x0d\n    const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n    const obj = { __proto__: null };\x0d\n    ArrayPrototypeForEach(getOwnNonIndexProperties(this\x2C filter)\x2C\x0d\n                          (key) => {\x0d\n                            extras = true;\x0d\n                            obj[key] = this[key];\x0d\n                          });\x0d\n    if (extras) {\x0d\n      if (this.length !== 0)\x0d\n        str += '\x2C ';\x0d\n      // '[Object: null prototype] {'.length === 26\x0d\n      // This is guarded with a test.\x0d\n      str += StringPrototypeSlice(utilInspect(obj\x2C {\x0d\n        ...ctx\x2C\x0d\n        breakLength: Infinity\x2C\x0d\n        compact: true\x2C\x0d\n      })\x2C 27\x2C -2);\x0d\n    }\x0d\n  }\x0d\n  return `<${this.constructor.name} ${str}>`;\x0d\n};\x0d\nBuffer.prototype.inspect = Buffer.prototype[customInspectSymbol];\x0d\n\x0d\nBuffer.prototype.compare = function compare(target\x2C\x0d\n                                            targetStart\x2C\x0d\n                                            targetEnd\x2C\x0d\n                                            sourceStart\x2C\x0d\n                                            sourceEnd) {\x0d\n  if (!isUint8Array(target)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('target'\x2C ['Buffer'\x2C 'Uint8Array']\x2C target);\x0d\n  }\x0d\n  if (arguments.length === 1)\x0d\n    return _compare(this\x2C target);\x0d\n\x0d\n  if (targetStart === undefined)\x0d\n    targetStart = 0;\x0d\n  else\x0d\n    validateOffset(targetStart\x2C 'targetStart');\x0d\n\x0d\n  if (targetEnd === undefined)\x0d\n    targetEnd = target.length;\x0d\n  else\x0d\n    validateOffset(targetEnd\x2C 'targetEnd'\x2C 0\x2C target.length);\x0d\n\x0d\n  if (sourceStart === undefined)\x0d\n    sourceStart = 0;\x0d\n  else\x0d\n    validateOffset(sourceStart\x2C 'sourceStart');\x0d\n\x0d\n  if (sourceEnd === undefined)\x0d\n    sourceEnd = this.length;\x0d\n  else\x0d\n    validateOffset(sourceEnd\x2C 'sourceEnd'\x2C 0\x2C this.length);\x0d\n\x0d\n  if (sourceStart >= sourceEnd)\x0d\n    return (targetStart >= targetEnd ? 0 : -1);\x0d\n  if (targetStart >= targetEnd)\x0d\n    return 1;\x0d\n\x0d\n  return compareOffset(this\x2C target\x2C targetStart\x2C sourceStart\x2C targetEnd\x2C\x0d\n                       sourceEnd);\x0d\n};\x0d\n\x0d\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`\x2C\x0d\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\x0d\n//\x0d\n// Arguments:\x0d\n// - buffer - a Buffer to search\x0d\n// - val - a string\x2C Buffer\x2C or number\x0d\n// - byteOffset - an index into `buffer`; will be clamped to an int32\x0d\n// - encoding - an optional encoding\x2C relevant if val is a string\x0d\n// - dir - true for indexOf\x2C false for lastIndexOf\x0d\nfunction bidirectionalIndexOf(buffer\x2C val\x2C byteOffset\x2C encoding\x2C dir) {\x0d\n  validateBuffer(buffer);\x0d\n\x0d\n  if (typeof byteOffset === 'string') {\x0d\n    encoding = byteOffset;\x0d\n    byteOffset = undefined;\x0d\n  } else if (byteOffset > 0x7fffffff) {\x0d\n    byteOffset = 0x7fffffff;\x0d\n  } else if (byteOffset < -0x80000000) {\x0d\n    byteOffset = -0x80000000;\x0d\n  }\x0d\n  // Coerce to Number. Values like null and [] become 0.\x0d\n  byteOffset = +byteOffset;\x0d\n  // If the offset is undefined\x2C "foo"\x2C {}\x2C coerces to NaN\x2C search whole buffer.\x0d\n  if (NumberIsNaN(byteOffset)) {\x0d\n    byteOffset = dir ? 0 : (buffer.length || buffer.byteLength);\x0d\n  }\x0d\n  dir = !!dir;  // Cast to bool.\x0d\n\x0d\n  if (typeof val === 'number')\x0d\n    return indexOfNumber(buffer\x2C val >>> 0\x2C byteOffset\x2C dir);\x0d\n\x0d\n  let ops;\x0d\n  if (encoding === undefined)\x0d\n    ops = encodingOps.utf8;\x0d\n  else\x0d\n    ops = getEncodingOps(encoding);\x0d\n\x0d\n  if (typeof val === 'string') {\x0d\n    if (ops === undefined)\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    return ops.indexOf(buffer\x2C val\x2C byteOffset\x2C dir);\x0d\n  }\x0d\n\x0d\n  if (isUint8Array(val)) {\x0d\n    const encodingVal =\x0d\n      (ops === undefined ? encodingsMap.utf8 : ops.encodingVal);\x0d\n    return indexOfBuffer(buffer\x2C val\x2C byteOffset\x2C encodingVal\x2C dir);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'value'\x2C ['number'\x2C 'string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C val\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nBuffer.prototype.indexOf = function indexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C true);\x0d\n};\x0d\n\x0d\nBuffer.prototype.lastIndexOf = function lastIndexOf(val\x2C byteOffset\x2C encoding) {\x0d\n  return bidirectionalIndexOf(this\x2C val\x2C byteOffset\x2C encoding\x2C false);\x0d\n};\x0d\n\x0d\nBuffer.prototype.includes = function includes(val\x2C byteOffset\x2C encoding) {\x0d\n  return this.indexOf(val\x2C byteOffset\x2C encoding) !== -1;\x0d\n};\x0d\n\x0d\n// Usage:\x0d\n//    buffer.fill(number[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(buffer[\x2C offset[\x2C end]])\x0d\n//    buffer.fill(string[\x2C offset[\x2C end]][\x2C encoding])\x0d\nBuffer.prototype.fill = function fill(value\x2C offset\x2C end\x2C encoding) {\x0d\n  return _fill(this\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n};\x0d\n\x0d\nfunction _fill(buf\x2C value\x2C offset\x2C end\x2C encoding) {\x0d\n  if (typeof value === 'string') {\x0d\n    if (offset === undefined || typeof offset === 'string') {\x0d\n      encoding = offset;\x0d\n      offset = 0;\x0d\n      end = buf.length;\x0d\n    } else if (typeof end === 'string') {\x0d\n      encoding = end;\x0d\n      end = buf.length;\x0d\n    }\x0d\n\x0d\n    const normalizedEncoding = normalizeEncoding(encoding);\x0d\n    if (normalizedEncoding === undefined) {\x0d\n      validateString(encoding\x2C 'encoding');\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (value.length === 0) {\x0d\n      // If value === '' default to zero.\x0d\n      value = 0;\x0d\n    } else if (value.length === 1) {\x0d\n      // Fast path: If `value` fits into a single byte\x2C use that numeric value.\x0d\n      if (normalizedEncoding === 'utf8') {\x0d\n        const code = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n        if (code < 128) {\x0d\n          value = code;\x0d\n        }\x0d\n      } else if (normalizedEncoding === 'latin1') {\x0d\n        value = StringPrototypeCharCodeAt(value\x2C 0);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    encoding = undefined;\x0d\n  }\x0d\n\x0d\n  if (offset === undefined) {\x0d\n    offset = 0;\x0d\n    end = buf.length;\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset');\x0d\n    // Invalid ranges are not set to a default\x2C so can range check early.\x0d\n    if (end === undefined) {\x0d\n      end = buf.length;\x0d\n    } else {\x0d\n      validateOffset(end\x2C 'end'\x2C 0\x2C buf.length);\x0d\n    }\x0d\n    if (offset >= end)\x0d\n      return buf;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (typeof value === 'number') {\x0d\n    // OOB check\x0d\n    const byteLen = TypedArrayPrototypeGetByteLength(buf);\x0d\n    const fillLength = end - offset;\x0d\n    if (offset > end || fillLength + offset > byteLen)\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n\x0d\n    TypedArrayPrototypeFill(buf\x2C value\x2C offset\x2C end);\x0d\n  } else {\x0d\n    const res = bindingFill(buf\x2C value\x2C offset\x2C end\x2C encoding);\x0d\n    if (res < 0) {\x0d\n      if (res === -1)\x0d\n        throw new ERR_INVALID_ARG_VALUE('value'\x2C value);\x0d\n      throw new ERR_BUFFER_OUT_OF_BOUNDS();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return buf;\x0d\n}\x0d\n\x0d\nBuffer.prototype.write = function write(string\x2C offset\x2C length\x2C encoding) {\x0d\n  // Buffer#write(string);\x0d\n  if (offset === undefined) {\x0d\n    return this.utf8Write(string\x2C 0\x2C this.length);\x0d\n  }\x0d\n  // Buffer#write(string\x2C encoding)\x0d\n  if (length === undefined && typeof offset === 'string') {\x0d\n    encoding = offset;\x0d\n    length = this.length;\x0d\n    offset = 0;\x0d\n\x0d\n  // Buffer#write(string\x2C offset[\x2C length][\x2C encoding])\x0d\n  } else {\x0d\n    validateOffset(offset\x2C 'offset'\x2C 0\x2C this.length);\x0d\n\x0d\n    const remaining = this.length - offset;\x0d\n\x0d\n    if (length === undefined) {\x0d\n      length = remaining;\x0d\n    } else if (typeof length === 'string') {\x0d\n      encoding = length;\x0d\n      length = remaining;\x0d\n    } else {\x0d\n      validateOffset(length\x2C 'length'\x2C 0\x2C this.length);\x0d\n      if (length > remaining)\x0d\n        length = remaining;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (!encoding)\x0d\n    return this.utf8Write(string\x2C offset\x2C length);\x0d\n\x0d\n  const ops = getEncodingOps(encoding);\x0d\n  if (ops === undefined)\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  return ops.write(this\x2C string\x2C offset\x2C length);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toJSON = function toJSON() {\x0d\n  if (this.length > 0) {\x0d\n    const data = new Array(this.length);\x0d\n    for (let i = 0; i < this.length; ++i)\x0d\n      data[i] = this[i];\x0d\n    return { type: 'Buffer'\x2C data };\x0d\n  }\x0d\n  return { type: 'Buffer'\x2C data: [] };\x0d\n};\x0d\n\x0d\nfunction adjustOffset(offset\x2C length) {\x0d\n  // Use Math.trunc() to convert offset to an integer value that can be larger\x0d\n  // than an Int32. Hence\x2C don't use offset | 0 or similar techniques.\x0d\n  offset = MathTrunc(offset);\x0d\n  if (offset === 0) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (offset < 0) {\x0d\n    offset += length;\x0d\n    return offset > 0 ? offset : 0;\x0d\n  }\x0d\n  if (offset < length) {\x0d\n    return offset;\x0d\n  }\x0d\n  return NumberIsNaN(offset) ? 0 : length;\x0d\n}\x0d\n\x0d\nBuffer.prototype.subarray = function subarray(start\x2C end) {\x0d\n  const srcLength = this.length;\x0d\n  start = adjustOffset(start\x2C srcLength);\x0d\n  end = end !== undefined ? adjustOffset(end\x2C srcLength) : srcLength;\x0d\n  const newLength = end > start ? end - start : 0;\x0d\n  return new FastBuffer(this.buffer\x2C this.byteOffset + start\x2C newLength);\x0d\n};\x0d\n\x0d\nBuffer.prototype.slice = function slice(start\x2C end) {\x0d\n  return this.subarray(start\x2C end);\x0d\n};\x0d\n\x0d\nfunction swap(b\x2C n\x2C m) {\x0d\n  const i = b[n];\x0d\n  b[n] = b[m];\x0d\n  b[m] = i;\x0d\n}\x0d\n\x0d\nBuffer.prototype.swap16 = function swap16() {\x0d\n  // For Buffer.length < 128\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 2 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('16-bits');\x0d\n  if (len < 128) {\x0d\n    for (let i = 0; i < len; i += 2)\x0d\n      swap(this\x2C i\x2C i + 1);\x0d\n    return this;\x0d\n  }\x0d\n  return _swap16(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap32 = function swap32() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 4 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('32-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 4) {\x0d\n      swap(this\x2C i\x2C i + 3);\x0d\n      swap(this\x2C i + 1\x2C i + 2);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap32(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.swap64 = function swap64() {\x0d\n  // For Buffer.length < 192\x2C it's generally faster to\x0d\n  // do the swap in javascript. For larger buffers\x2C\x0d\n  // dropping down to the native code is faster.\x0d\n  const len = this.length;\x0d\n  if (len % 8 !== 0)\x0d\n    throw new ERR_INVALID_BUFFER_SIZE('64-bits');\x0d\n  if (len < 192) {\x0d\n    for (let i = 0; i < len; i += 8) {\x0d\n      swap(this\x2C i\x2C i + 7);\x0d\n      swap(this\x2C i + 1\x2C i + 6);\x0d\n      swap(this\x2C i + 2\x2C i + 5);\x0d\n      swap(this\x2C i + 3\x2C i + 4);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n  return _swap64(this);\x0d\n};\x0d\n\x0d\nBuffer.prototype.toLocaleString = Buffer.prototype.toString;\x0d\n\x0d\nlet transcode;\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const {\x0d\n    icuErrName\x2C\x0d\n    transcode: _transcode\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  // Transcodes the Buffer from one encoding to another\x2C returning a new\x0d\n  // Buffer instance.\x0d\n  transcode = function transcode(source\x2C fromEncoding\x2C toEncoding) {\x0d\n    if (!isUint8Array(source)) {\x0d\n      throw new ERR_INVALID_ARG_TYPE('source'\x2C\x0d\n                                     ['Buffer'\x2C 'Uint8Array']\x2C source);\x0d\n    }\x0d\n    if (source.length === 0) return Buffer.alloc(0);\x0d\n\x0d\n    fromEncoding = normalizeEncoding(fromEncoding) || fromEncoding;\x0d\n    toEncoding = normalizeEncoding(toEncoding) || toEncoding;\x0d\n    const result = _transcode(source\x2C fromEncoding\x2C toEncoding);\x0d\n    if (typeof result !== 'number')\x0d\n      return result;\x0d\n\x0d\n    const code = icuErrName(result);\x0d\n    const err = genericNodeError(\x0d\n      `Unable to transcode Buffer [${code}]`\x2C\x0d\n      { code: code\x2C errno: result }\x2C\x0d\n    );\x0d\n    throw err;\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction btoa(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n  input = `${input}`;\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    if (input[n].charCodeAt(0) > 0xff)\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n  const buf = Buffer.from(input\x2C 'latin1');\x0d\n  return buf.toString('base64');\x0d\n}\x0d\n\x0d\n// Refs: https://infra.spec.whatwg.org/#forgiving-base64-decode\x0d\nconst kForgivingBase64AllowedChars = [\x0d\n  // ASCII whitespace\x0d\n  // Refs: https://infra.spec.whatwg.org/#ascii-whitespace\x0d\n  0x09\x2C 0x0A\x2C 0x0C\x2C 0x0D\x2C 0x20\x2C\x0d\n\x0d\n  // Uppercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('A') + i)\x2C\x0d\n\x0d\n  // Lowercase letters\x0d\n  ...ArrayFrom({ length: 26 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('a') + i)\x2C\x0d\n\x0d\n  // Decimal digits\x0d\n  ...ArrayFrom({ length: 10 }\x2C (_\x2C i) => StringPrototypeCharCodeAt('0') + i)\x2C\x0d\n\x0d\n  0x2B\x2C // +\x0d\n  0x2F\x2C // /\x0d\n  0x3D\x2C // =\x0d\n];\x0d\nconst kEqualSignIndex = ArrayPrototypeIndexOf(kForgivingBase64AllowedChars\x2C\x0d\n                                              0x3D);\x0d\n\x0d\nfunction atob(input) {\x0d\n  // The implementation here has not been performance optimized in any way and\x0d\n  // should not be.\x0d\n  // Refs: https://github.com/nodejs/node/pull/38433#issuecomment-828426932\x0d\n  if (arguments.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('input');\x0d\n  }\x0d\n\x0d\n  input = `${input}`;\x0d\n  let nonAsciiWhitespaceCharCount = 0;\x0d\n  let equalCharCount = 0;\x0d\n\x0d\n  for (let n = 0; n < input.length; n++) {\x0d\n    const index = ArrayPrototypeIndexOf(\x0d\n      kForgivingBase64AllowedChars\x2C\x0d\n      StringPrototypeCharCodeAt(input\x2C n));\x0d\n\x0d\n    if (index > 4) {\x0d\n      // The first 5 elements of `kForgivingBase64AllowedChars` are\x0d\n      // ASCII whitespace char codes.\x0d\n      nonAsciiWhitespaceCharCount++;\x0d\n\x0d\n      if (index === kEqualSignIndex) {\x0d\n        equalCharCount++;\x0d\n      } else if (equalCharCount) {\x0d\n        // The `=` char is only allowed at the end.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n\x0d\n      if (equalCharCount > 2) {\x0d\n        // Only one more `=` is permitted after the first equal sign.\x0d\n        throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n      }\x0d\n    } else if (index === -1) {\x0d\n      throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let reminder = nonAsciiWhitespaceCharCount % 4;\x0d\n\x0d\n  // See #2\x2C #3\x2C #4 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (!reminder) {\x0d\n    // Remove all trailing `=` characters and get the new reminder.\x0d\n    reminder = (nonAsciiWhitespaceCharCount - equalCharCount) % 4;\x0d\n  } else if (equalCharCount) {\x0d\n    // `=` should not in the input if there's a reminder.\x0d\n    throw lazyDOMException('Invalid character'\x2C 'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  // See #3 - https://infra.spec.whatwg.org/#forgiving-base64\x0d\n  if (reminder === 1) {\x0d\n    throw lazyDOMException(\x0d\n      'The string to be decoded is not correctly encoded.'\x2C\x0d\n      'InvalidCharacterError');\x0d\n  }\x0d\n\x0d\n  return Buffer.from(input\x2C 'base64').toString('latin1');\x0d\n}\x0d\n\x0d\nfunction isUtf8(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsUtf8(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['TypedArray'\x2C 'Buffer']\x2C input);\x0d\n}\x0d\n\x0d\nfunction isAscii(input) {\x0d\n  if (isTypedArray(input) || isAnyArrayBuffer(input)) {\x0d\n    return bindingIsAscii(input);\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('input'\x2C ['ArrayBuffer'\x2C 'Buffer'\x2C 'TypedArray']\x2C input);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Buffer\x2C\x0d\n  SlowBuffer\x2C\x0d\n  transcode\x2C\x0d\n  isUtf8\x2C\x0d\n  isAscii\x2C\x0d\n\x0d\n  // Legacy\x0d\n  kMaxLength\x2C\x0d\n  kStringMaxLength\x2C\x0d\n  btoa\x2C\x0d\n  atob\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n  INSPECT_MAX_BYTES: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get() { return INSPECT_MAX_BYTES; }\x2C\x0d\n    set(val) {\x0d\n      validateNumber(val\x2C 'INSPECT_MAX_BYTES'\x2C 0);\x0d\n      INSPECT_MAX_BYTES = val;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/blob'\x2C\x0d\n  ['Blob'\x2C 'resolveObjectURL']\x2C\x0d\n);\x0d\ndefineLazyProperties(\x0d\n  module.exports\x2C\x0d\n  'internal/file'\x2C\x0d\n  ['File']\x2C\x0d\n);\x0d\n
code-source-info,0xc2df90809e,24,12376,12471,C0O12388C12O12420C18O12388C23O12436C28O12443C32O12468,,
tick,0x7ff6cb699a48,220389,0,0x0,3,0x7ff6cbdbb8d0,0xc2df907920,0x7ff6cc2dfcd7
code-creation,JS,10,220529,0xc2df90ade6,177, node:internal/validators:175:40,0x3fcdef85540,~
code-source-info,0xc2df90ade6,15,4898,5355,C19O4942C25O4978C41O4984C46O4978C47O5038C54O5064C66O5096C83O5144C86O5144C92O5172C110O5243C136O5275C151O5319C169O5178C174O5172C176O5354,,
code-creation,JS,10,220798,0xc2df90affe,36, node:internal/fs/promises:416:5,0xc2df907dd8,~
code-source-info,0xc2df90affe,94,10120,10179,C0O10120C9O10132C21O10153C30O10132C35O10179,,
code-creation,JS,10,220930,0xc2df90b2f6,248,close node:internal/fs/promises:225:11,0x2bb6ec9a5f8,~
code-source-info,0xc2df90b2f6,94,5360,6183,C0O5373C7O5382C9O5381C15O5387C20O5404C27O5411C30O5428C31O5443C38O5452C40O5451C45O5477C52O5489C54O5488C57O5504C58O5519C65O5524C73O5530C77O5539C84O5548C86O5547C91O5555C96O5571C103O5576C108O5581C112O5594C119O5599C126O5616C136O5659C138O5658C142O5668C147O5668C157O5616C162O5614C168O5761C175O5766C182O5783C189O5825C199O5821C210O5783C215O5781C219O6126C222O6131C230O6131C235O6151C242O6163C244O6162C247O6178,,
code-creation,JS,10,221157,0xc2df90b82e,17, node:internal/fs/promises:239:9,0xc2df90b0e0,~
code-source-info,0xc2df90b82e,94,5686,5728,C0O5694C7O5699C11O5714C16O5727,,
code-creation,JS,10,221221,0xc2df90b8fe,3, node:internal/fs/promises:416:51,0xc2df90af50,~
code-source-info,0xc2df90b8fe,94,10166,10178,C0O10172C2O10178,,
code-creation,JS,10,221387,0xc2df90bb9e,213,validateAttributes node:internal/modules/esm/assert:56:28,0x8c1d1751a0,~
code-source-info,0xc2df90bb9e,85,1867,3252,C10O1867C19O1968C24O1968C29O2014C31O2026C35O2019C40O2046C42O2054C48O2058C53O2079C60O2126C66O2152C69O2147C75O2085C80O2079C81O2035C86O2001C90O2192C97O2205C101O2220C102O2251C112O2407C119O2757C130O2382C131O2394C132O2572C140O2577C147O2645C148O2657C149O2674C152O2721C157O2681C162O2727C163O2833C164O2845C165O2997C173O3002C180O3114C193O3120C198O3114C199O3191C202O3238C207O3198C212O3244,,
code-creation,JS,10,221602,0xc2df90bdce,31,validateLoadResult node:internal/modules/esm/loader:426:21,0x8c1d16d170,~
code-source-info,0xc2df90bdce,83,14957,15094,C0O14978C5O15007C13O15007C18O15043C23O15044C30O15093,,
code-creation,JS,10,221699,0xc2df90bef6,89,callTranslator node:internal/modules/esm/loader:272:28,0x2bb6ec8efd8,~
code-source-info,0xc2df90bef6,83,9251,9573,C0O9262C5O9275C10O9288C18O9337C23O9337C27O9353C32O9354C38O9381C40O9409C55O9415C60O9409C61O9490C83O9497C88O9566,,
code-creation,JS,10,221902,0xc2df90c246,216,moduleStrategy node:internal/modules/esm/translators:164:56,0x8c1d177ef0,~
code-source-info,0xc2df90c246,86,5591,6236,C0O5591C27O5618C40O5618C45O5663C50O5672C56O5694C68O5730C73O5694C77O5756C98O5756C104O5870C110O5891C126O5955C134O5891C139O6005C147O6005C152O5986C157O6062C162O6121C174O6184C178O6047C183O6219C193O6233,,
code-creation,JS,10,222035,0xc2df90d68e,83,assertBufferSource node:internal/modules/esm/translators:110:28,0x8c1d177bc8,~
code-source-info,0xc2df90d68e,86,3662,4070,C0O3697C10O3749C11O3756C12O3813C15O3813C19O3773C24O3792C29O3833C35O3860C41O3891C42O3898C43O3907C50O3960C77O3913C82O3907,,
code-creation,JS,10,222124,0xc2df90d7e6,31,lazyTypes node:internal/modules/esm/translators:27:19,0x8c1d177ad8,~
code-source-info,0xc2df90d7e6,86,556,657,C0O564C6O587C10O601C11O607C17O623C24O621C30O654,,
code-creation,JS,10,222221,0xc2df90d906,85,stringify node:internal/modules/esm/translators:131:19,0x8c1d177c18,~
code-source-info,0xc2df90d906,86,4319,4574,C0O4331C6O4363C8O4375C9O4381C20O4381C25O4449C31O4449C36O4433C41O4482C49O4511C58O4531C63O4490C69O4543C74O4558C79O4558C84O4571,,
code-creation,JS,10,222444,0xc2df90dade,314,TextDecoder node:internal/encoding:407:16,0x3fcdefb7fd8,~
script-source,58,node:internal/encoding,'use strict';\x0d\n\x0d\n// An implementation of the WHATWG Encoding Standard\x0d\n// https://encoding.spec.whatwg.org\x0d\n\x0d\nconst {\x0d\n  Boolean\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptors\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectValues\x2C\x0d\n  SafeMap\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ERR_ENCODING_NOT_SUPPORTED\x2C\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_INVALID_THIS\x2C\x0d\n  ERR_NO_ICU\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst kHandle = Symbol('handle');\x0d\nconst kFlags = Symbol('flags');\x0d\nconst kEncoding = Symbol('encoding');\x0d\nconst kDecoder = Symbol('decoder');\x0d\nconst kEncoder = Symbol('encoder');\x0d\nconst kFatal = Symbol('kFatal');\x0d\nconst kUTF8FastPath = Symbol('kUTF8FastPath');\x0d\nconst kIgnoreBOM = Symbol('kIgnoreBOM');\x0d\n\x0d\nconst {\x0d\n  getConstructorOf\x2C\x0d\n  customInspectSymbol: inspect\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBufferView\x2C\x0d\n  isUint8Array\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst {\x0d\n  validateString\x2C\x0d\n  validateObject\x2C\x0d\n  kValidateObjectAllowNullable\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n} = require('internal/validators');\x0d\nconst binding = internalBinding('encoding_binding');\x0d\nconst {\x0d\n  encodeInto\x2C\x0d\n  encodeIntoResults\x2C\x0d\n  encodeUtf8String\x2C\x0d\n  decodeUTF8\x2C\x0d\n} = binding;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nfunction validateEncoder(obj) {\x0d\n  if (obj == null || obj[kEncoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextEncoder');\x0d\n}\x0d\n\x0d\nfunction validateDecoder(obj) {\x0d\n  if (obj == null || obj[kDecoder] !== true)\x0d\n    throw new ERR_INVALID_THIS('TextDecoder');\x0d\n}\x0d\n\x0d\nconst CONVERTER_FLAGS_FLUSH = 0x1;\x0d\nconst CONVERTER_FLAGS_FATAL = 0x2;\x0d\nconst CONVERTER_FLAGS_IGNORE_BOM = 0x4;\x0d\n\x0d\nconst empty = new Uint8Array(0);\x0d\n\x0d\nconst encodings = new SafeMap([\x0d\n  ['unicode-1-1-utf-8'\x2C 'utf-8']\x2C\x0d\n  ['unicode11utf8'\x2C 'utf-8']\x2C\x0d\n  ['unicode20utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf8'\x2C 'utf-8']\x2C\x0d\n  ['utf-8'\x2C 'utf-8']\x2C\x0d\n  ['x-unicode20utf8'\x2C 'utf-8']\x2C\x0d\n  ['866'\x2C 'ibm866']\x2C\x0d\n  ['cp866'\x2C 'ibm866']\x2C\x0d\n  ['csibm866'\x2C 'ibm866']\x2C\x0d\n  ['ibm866'\x2C 'ibm866']\x2C\x0d\n  ['csisolatin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso-ir-101'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso88592'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2'\x2C 'iso-8859-2']\x2C\x0d\n  ['iso_8859-2:1987'\x2C 'iso-8859-2']\x2C\x0d\n  ['l2'\x2C 'iso-8859-2']\x2C\x0d\n  ['latin2'\x2C 'iso-8859-2']\x2C\x0d\n  ['csisolatin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso-ir-109'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso88593'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3'\x2C 'iso-8859-3']\x2C\x0d\n  ['iso_8859-3:1988'\x2C 'iso-8859-3']\x2C\x0d\n  ['l3'\x2C 'iso-8859-3']\x2C\x0d\n  ['latin3'\x2C 'iso-8859-3']\x2C\x0d\n  ['csisolatin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso-ir-110'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso88594'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4'\x2C 'iso-8859-4']\x2C\x0d\n  ['iso_8859-4:1988'\x2C 'iso-8859-4']\x2C\x0d\n  ['l4'\x2C 'iso-8859-4']\x2C\x0d\n  ['latin4'\x2C 'iso-8859-4']\x2C\x0d\n  ['csisolatincyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['cyrillic'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso-ir-144'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso88595'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5'\x2C 'iso-8859-5']\x2C\x0d\n  ['iso_8859-5:1988'\x2C 'iso-8859-5']\x2C\x0d\n  ['arabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['asmo-708'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596e'\x2C 'iso-8859-6']\x2C\x0d\n  ['csiso88596i'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatinarabic'\x2C 'iso-8859-6']\x2C\x0d\n  ['ecma-114'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-e'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-8859-6-i'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso-ir-127'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso88596'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6'\x2C 'iso-8859-6']\x2C\x0d\n  ['iso_8859-6:1987'\x2C 'iso-8859-6']\x2C\x0d\n  ['csisolatingreek'\x2C 'iso-8859-7']\x2C\x0d\n  ['ecma-118'\x2C 'iso-8859-7']\x2C\x0d\n  ['elot_928'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['greek8'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso-ir-126'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso88597'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7'\x2C 'iso-8859-7']\x2C\x0d\n  ['iso_8859-7:1987'\x2C 'iso-8859-7']\x2C\x0d\n  ['sun_eu_greek'\x2C 'iso-8859-7']\x2C\x0d\n  ['csiso88598e'\x2C 'iso-8859-8']\x2C\x0d\n  ['csisolatinhebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['hebrew'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-8859-8-e'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso-ir-138'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso88598'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8'\x2C 'iso-8859-8']\x2C\x0d\n  ['iso_8859-8:1988'\x2C 'iso-8859-8']\x2C\x0d\n  ['visual'\x2C 'iso-8859-8']\x2C\x0d\n  ['csiso88598i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['iso-8859-8-i'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['logical'\x2C 'iso-8859-8-i']\x2C\x0d\n  ['csisolatin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-ir-157'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso8859-10'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso885910'\x2C 'iso-8859-10']\x2C\x0d\n  ['l6'\x2C 'iso-8859-10']\x2C\x0d\n  ['latin6'\x2C 'iso-8859-10']\x2C\x0d\n  ['iso-8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso8859-13'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso885913'\x2C 'iso-8859-13']\x2C\x0d\n  ['iso-8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso8859-14'\x2C 'iso-8859-14']\x2C\x0d\n  ['iso885914'\x2C 'iso-8859-14']\x2C\x0d\n  ['csisolatin9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso885915'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso_8859-15'\x2C 'iso-8859-15']\x2C\x0d\n  ['l9'\x2C 'iso-8859-15']\x2C\x0d\n  ['iso-8859-16'\x2C 'iso-8859-16']\x2C\x0d\n  ['cskoi8r'\x2C 'koi8-r']\x2C\x0d\n  ['koi'\x2C 'koi8-r']\x2C\x0d\n  ['koi8'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8_r'\x2C 'koi8-r']\x2C\x0d\n  ['koi8-ru'\x2C 'koi8-u']\x2C\x0d\n  ['koi8-u'\x2C 'koi8-u']\x2C\x0d\n  ['csmacintosh'\x2C 'macintosh']\x2C\x0d\n  ['mac'\x2C 'macintosh']\x2C\x0d\n  ['macintosh'\x2C 'macintosh']\x2C\x0d\n  ['x-mac-roman'\x2C 'macintosh']\x2C\x0d\n  ['dos-874'\x2C 'windows-874']\x2C\x0d\n  ['iso-8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso8859-11'\x2C 'windows-874']\x2C\x0d\n  ['iso885911'\x2C 'windows-874']\x2C\x0d\n  ['tis-620'\x2C 'windows-874']\x2C\x0d\n  ['windows-874'\x2C 'windows-874']\x2C\x0d\n  ['cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['windows-1250'\x2C 'windows-1250']\x2C\x0d\n  ['x-cp1250'\x2C 'windows-1250']\x2C\x0d\n  ['cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['windows-1251'\x2C 'windows-1251']\x2C\x0d\n  ['x-cp1251'\x2C 'windows-1251']\x2C\x0d\n  ['ansi_x3.4-1968'\x2C 'windows-1252']\x2C\x0d\n  ['ascii'\x2C 'windows-1252']\x2C\x0d\n  ['cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp819'\x2C 'windows-1252']\x2C\x0d\n  ['csisolatin1'\x2C 'windows-1252']\x2C\x0d\n  ['ibm819'\x2C 'windows-1252']\x2C\x0d\n  ['iso-8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso-ir-100'\x2C 'windows-1252']\x2C\x0d\n  ['iso8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso88591'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1'\x2C 'windows-1252']\x2C\x0d\n  ['iso_8859-1:1987'\x2C 'windows-1252']\x2C\x0d\n  ['l1'\x2C 'windows-1252']\x2C\x0d\n  ['latin1'\x2C 'windows-1252']\x2C\x0d\n  ['us-ascii'\x2C 'windows-1252']\x2C\x0d\n  ['windows-1252'\x2C 'windows-1252']\x2C\x0d\n  ['x-cp1252'\x2C 'windows-1252']\x2C\x0d\n  ['cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['windows-1253'\x2C 'windows-1253']\x2C\x0d\n  ['x-cp1253'\x2C 'windows-1253']\x2C\x0d\n  ['cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['csisolatin5'\x2C 'windows-1254']\x2C\x0d\n  ['iso-8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso-ir-148'\x2C 'windows-1254']\x2C\x0d\n  ['iso8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso88599'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9'\x2C 'windows-1254']\x2C\x0d\n  ['iso_8859-9:1989'\x2C 'windows-1254']\x2C\x0d\n  ['l5'\x2C 'windows-1254']\x2C\x0d\n  ['latin5'\x2C 'windows-1254']\x2C\x0d\n  ['windows-1254'\x2C 'windows-1254']\x2C\x0d\n  ['x-cp1254'\x2C 'windows-1254']\x2C\x0d\n  ['cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['windows-1255'\x2C 'windows-1255']\x2C\x0d\n  ['x-cp1255'\x2C 'windows-1255']\x2C\x0d\n  ['cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['windows-1256'\x2C 'windows-1256']\x2C\x0d\n  ['x-cp1256'\x2C 'windows-1256']\x2C\x0d\n  ['cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['windows-1257'\x2C 'windows-1257']\x2C\x0d\n  ['x-cp1257'\x2C 'windows-1257']\x2C\x0d\n  ['cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['windows-1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-cp1258'\x2C 'windows-1258']\x2C\x0d\n  ['x-mac-cyrillic'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['x-mac-ukrainian'\x2C 'x-mac-cyrillic']\x2C\x0d\n  ['chinese'\x2C 'gbk']\x2C\x0d\n  ['csgb2312'\x2C 'gbk']\x2C\x0d\n  ['csiso58gb231280'\x2C 'gbk']\x2C\x0d\n  ['gb2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312'\x2C 'gbk']\x2C\x0d\n  ['gb_2312-80'\x2C 'gbk']\x2C\x0d\n  ['gbk'\x2C 'gbk']\x2C\x0d\n  ['iso-ir-58'\x2C 'gbk']\x2C\x0d\n  ['x-gbk'\x2C 'gbk']\x2C\x0d\n  ['gb18030'\x2C 'gb18030']\x2C\x0d\n  ['big5'\x2C 'big5']\x2C\x0d\n  ['big5-hkscs'\x2C 'big5']\x2C\x0d\n  ['cn-big5'\x2C 'big5']\x2C\x0d\n  ['csbig5'\x2C 'big5']\x2C\x0d\n  ['x-x-big5'\x2C 'big5']\x2C\x0d\n  ['cseucpkdfmtjapanese'\x2C 'euc-jp']\x2C\x0d\n  ['euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['x-euc-jp'\x2C 'euc-jp']\x2C\x0d\n  ['csiso2022jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['iso-2022-jp'\x2C 'iso-2022-jp']\x2C\x0d\n  ['csshiftjis'\x2C 'shift_jis']\x2C\x0d\n  ['ms932'\x2C 'shift_jis']\x2C\x0d\n  ['ms_kanji'\x2C 'shift_jis']\x2C\x0d\n  ['shift-jis'\x2C 'shift_jis']\x2C\x0d\n  ['shift_jis'\x2C 'shift_jis']\x2C\x0d\n  ['sjis'\x2C 'shift_jis']\x2C\x0d\n  ['windows-31j'\x2C 'shift_jis']\x2C\x0d\n  ['x-sjis'\x2C 'shift_jis']\x2C\x0d\n  ['cseuckr'\x2C 'euc-kr']\x2C\x0d\n  ['csksc56011987'\x2C 'euc-kr']\x2C\x0d\n  ['euc-kr'\x2C 'euc-kr']\x2C\x0d\n  ['iso-ir-149'\x2C 'euc-kr']\x2C\x0d\n  ['korean'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1987'\x2C 'euc-kr']\x2C\x0d\n  ['ks_c_5601-1989'\x2C 'euc-kr']\x2C\x0d\n  ['ksc5601'\x2C 'euc-kr']\x2C\x0d\n  ['ksc_5601'\x2C 'euc-kr']\x2C\x0d\n  ['windows-949'\x2C 'euc-kr']\x2C\x0d\n  ['csiso2022kr'\x2C 'replacement']\x2C\x0d\n  ['hz-gb-2312'\x2C 'replacement']\x2C\x0d\n  ['iso-2022-cn'\x2C 'replacement']\x2C\x0d\n  ['iso-2022-cn-ext'\x2C 'replacement']\x2C\x0d\n  ['iso-2022-kr'\x2C 'replacement']\x2C\x0d\n  ['replacement'\x2C 'replacement']\x2C\x0d\n  ['unicodefffe'\x2C 'utf-16be']\x2C\x0d\n  ['utf-16be'\x2C 'utf-16be']\x2C\x0d\n  ['csunicode'\x2C 'utf-16le']\x2C\x0d\n  ['iso-10646-ucs-2'\x2C 'utf-16le']\x2C\x0d\n  ['ucs-2'\x2C 'utf-16le']\x2C\x0d\n  ['unicode'\x2C 'utf-16le']\x2C\x0d\n  ['unicodefeff'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16le'\x2C 'utf-16le']\x2C\x0d\n  ['utf-16'\x2C 'utf-16le']\x2C\x0d\n  ['x-user-defined'\x2C 'x-user-defined']\x2C\x0d\n]);\x0d\n\x0d\n// Unfortunately\x2C String.prototype.trim also removes non-ascii whitespace\x2C\x0d\n// so we have to do this manually\x0d\nfunction trimAsciiWhitespace(label) {\x0d\n  let s = 0;\x0d\n  let e = label.length;\x0d\n  while (s < e && (\x0d\n    label[s] === '\\u0009' ||\x0d\n    label[s] === '\\u000a' ||\x0d\n    label[s] === '\\u000c' ||\x0d\n    label[s] === '\\u000d' ||\x0d\n    label[s] === '\\u0020')) {\x0d\n    s++;\x0d\n  }\x0d\n  while (e > s && (\x0d\n    label[e - 1] === '\\u0009' ||\x0d\n    label[e - 1] === '\\u000a' ||\x0d\n    label[e - 1] === '\\u000c' ||\x0d\n    label[e - 1] === '\\u000d' ||\x0d\n    label[e - 1] === '\\u0020')) {\x0d\n    e--;\x0d\n  }\x0d\n  return StringPrototypeSlice(label\x2C s\x2C e);\x0d\n}\x0d\n\x0d\nfunction getEncodingFromLabel(label) {\x0d\n  const enc = encodings.get(label);\x0d\n  if (enc !== undefined) return enc;\x0d\n  return encodings.get(trimAsciiWhitespace(label.toLowerCase()));\x0d\n}\x0d\n\x0d\nclass TextEncoder {\x0d\n  constructor() {\x0d\n    this[kEncoder] = true;\x0d\n  }\x0d\n\x0d\n  get encoding() {\x0d\n    validateEncoder(this);\x0d\n    return 'utf-8';\x0d\n  }\x0d\n\x0d\n  encode(input = '') {\x0d\n    validateEncoder(this);\x0d\n    return encodeUtf8String(`${input}`);\x0d\n  }\x0d\n\x0d\n  encodeInto(src\x2C dest) {\x0d\n    validateEncoder(this);\x0d\n    validateString(src\x2C 'src');\x0d\n    if (!dest || !isUint8Array(dest))\x0d\n      throw new ERR_INVALID_ARG_TYPE('dest'\x2C 'Uint8Array'\x2C dest);\x0d\n\x0d\n    encodeInto(src\x2C dest);\x0d\n    // We need to read from the binding here since the buffer gets refreshed\x0d\n    // from the snapshot.\x0d\n    const { 0: read\x2C 1: written } = encodeIntoResults;\x0d\n    return { read\x2C written };\x0d\n  }\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateEncoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const ctor = getConstructorOf(this);\x0d\n    const obj = { __proto__: {\x0d\n      constructor: ctor === null ? TextEncoder : ctor\x2C\x0d\n    } };\x0d\n    obj.encoding = this.encoding;\x0d\n    // Lazy to avoid circular dependency\x0d\n    return require('internal/util/inspect').inspect(obj\x2C opts);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(\x0d\n  TextEncoder.prototype\x2C {\x0d\n    'encode': kEnumerableProperty\x2C\x0d\n    'encodeInto': kEnumerableProperty\x2C\x0d\n    'encoding': kEnumerableProperty\x2C\x0d\n    [SymbolToStringTag]: { __proto__: null\x2C configurable: true\x2C value: 'TextEncoder' }\x2C\x0d\n  });\x0d\n\x0d\nconst TextDecoder =\x0d\n  internalBinding('config').hasIntl ?\x0d\n    makeTextDecoderICU() :\x0d\n    makeTextDecoderJS();\x0d\n\x0d\nconst kValidateObjectAllowObjectsAndNull = kValidateObjectAllowNullable |\x0d\n  kValidateObjectAllowArray |\x0d\n  kValidateObjectAllowFunction;\x0d\n\x0d\nfunction makeTextDecoderICU() {\x0d\n  const {\x0d\n    decode: _decode\x2C\x0d\n    getConverter\x2C\x0d\n  } = internalBinding('icu');\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        flags |= options.fatal ? CONVERTER_FLAGS_FATAL : 0;\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kIgnoreBOM] = Boolean(options?.ignoreBOM);\x0d\n      this[kFatal] = Boolean(options?.fatal);\x0d\n      // Only support fast path for UTF-8.\x0d\n      this[kUTF8FastPath] = enc === 'utf-8';\x0d\n      this[kHandle] = undefined;\x0d\n\x0d\n      if (!this[kUTF8FastPath]) {\x0d\n        this.#prepareConverter();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    #prepareConverter() {\x0d\n      if (this[kHandle] !== undefined) return;\x0d\n      const handle = getConverter(this[kEncoding]\x2C this[kFlags]);\x0d\n      if (handle === undefined)\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(this[kEncoding]);\x0d\n      this[kHandle] = handle;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = kEmptyObject) {\x0d\n      validateDecoder(this);\x0d\n\x0d\n      this[kUTF8FastPath] &&= !(options?.stream);\x0d\n\x0d\n      if (this[kUTF8FastPath]) {\x0d\n        return decodeUTF8(input\x2C this[kIgnoreBOM]\x2C this[kFatal]);\x0d\n      }\x0d\n\x0d\n      this.#prepareConverter();\x0d\n\x0d\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null)\x0d\n        flags |= options.stream ? 0 : CONVERTER_FLAGS_FLUSH;\x0d\n\x0d\n      return _decode(this[kHandle]\x2C input\x2C flags\x2C this.encoding);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\nfunction makeTextDecoderJS() {\x0d\n  let StringDecoder;\x0d\n  function lazyStringDecoder() {\x0d\n    if (StringDecoder === undefined)\x0d\n      ({ StringDecoder } = require('string_decoder'));\x0d\n    return StringDecoder;\x0d\n  }\x0d\n\x0d\n  const kBOMSeen = Symbol('BOM seen');\x0d\n\x0d\n  function hasConverter(encoding) {\x0d\n    return encoding === 'utf-8' || encoding === 'utf-16le';\x0d\n  }\x0d\n\x0d\n  class TextDecoder {\x0d\n    constructor(encoding = 'utf-8'\x2C options = kEmptyObject) {\x0d\n      encoding = `${encoding}`;\x0d\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\x0d\n\x0d\n      const enc = getEncodingFromLabel(encoding);\x0d\n      if (enc === undefined || !hasConverter(enc))\x0d\n        throw new ERR_ENCODING_NOT_SUPPORTED(encoding);\x0d\n\x0d\n      let flags = 0;\x0d\n      if (options !== null) {\x0d\n        if (options.fatal) {\x0d\n          throw new ERR_NO_ICU('"fatal" option');\x0d\n        }\x0d\n        flags |= options.ignoreBOM ? CONVERTER_FLAGS_IGNORE_BOM : 0;\x0d\n      }\x0d\n\x0d\n      this[kDecoder] = true;\x0d\n      // StringDecoder will normalize WHATWG encoding to Node.js encoding.\x0d\n      this[kHandle] = new (lazyStringDecoder())(enc);\x0d\n      this[kFlags] = flags;\x0d\n      this[kEncoding] = enc;\x0d\n      this[kBOMSeen] = false;\x0d\n    }\x0d\n\x0d\n    decode(input = empty\x2C options = kEmptyObject) {\x0d\n      validateDecoder(this);\x0d\n      if (isAnyArrayBuffer(input)) {\x0d\n        try {\x0d\n          input = Buffer.from(input);\x0d\n        } catch {\x0d\n          input = empty;\x0d\n        }\x0d\n      } else if (isArrayBufferView(input)) {\x0d\n        try {\x0d\n          input = Buffer.from(input.buffer\x2C input.byteOffset\x2C\x0d\n                              input.byteLength);\x0d\n        } catch {\x0d\n          input = empty;\x0d\n        }\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE('input'\x2C\x0d\n                                       ['ArrayBuffer'\x2C 'ArrayBufferView']\x2C\x0d\n                                       input);\x0d\n      }\x0d\n      validateObject(options\x2C 'options'\x2C kValidateObjectAllowObjectsAndNull);\x0d\n\x0d\n      if (this[kFlags] & CONVERTER_FLAGS_FLUSH) {\x0d\n        this[kBOMSeen] = false;\x0d\n      }\x0d\n\x0d\n      if (options !== null && options.stream) {\x0d\n        this[kFlags] &= ~CONVERTER_FLAGS_FLUSH;\x0d\n      } else {\x0d\n        this[kFlags] |= CONVERTER_FLAGS_FLUSH;\x0d\n      }\x0d\n\x0d\n      let result = this[kFlags] & CONVERTER_FLAGS_FLUSH ?\x0d\n        this[kHandle].end(input) :\x0d\n        this[kHandle].write(input);\x0d\n\x0d\n      if (result.length > 0 &&\x0d\n          !this[kBOMSeen] &&\x0d\n          !(this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM)) {\x0d\n        // If the very first result in the stream is a BOM\x2C and we are not\x0d\n        // explicitly told to ignore it\x2C then we discard it.\x0d\n        if (result[0] === '\\ufeff') {\x0d\n          result = StringPrototypeSlice(result\x2C 1);\x0d\n        }\x0d\n        this[kBOMSeen] = true;\x0d\n      }\x0d\n\x0d\n      return result;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return TextDecoder;\x0d\n}\x0d\n\x0d\n// Mix in some shared properties.\x0d\nconst sharedProperties = ObjectGetOwnPropertyDescriptors({\x0d\n  get encoding() {\x0d\n    validateDecoder(this);\x0d\n    return this[kEncoding];\x0d\n  }\x2C\x0d\n\x0d\n  get fatal() {\x0d\n    validateDecoder(this);\x0d\n    return (this[kFlags] & CONVERTER_FLAGS_FATAL) === CONVERTER_FLAGS_FATAL;\x0d\n  }\x2C\x0d\n\x0d\n  get ignoreBOM() {\x0d\n    validateDecoder(this);\x0d\n    return (this[kFlags] & CONVERTER_FLAGS_IGNORE_BOM) ===\x0d\n              CONVERTER_FLAGS_IGNORE_BOM;\x0d\n  }\x2C\x0d\n\x0d\n  [inspect](depth\x2C opts) {\x0d\n    validateDecoder(this);\x0d\n    if (typeof depth === 'number' && depth < 0)\x0d\n      return this;\x0d\n    const constructor = getConstructorOf(this) || TextDecoder;\x0d\n    const obj = { __proto__: { constructor } };\x0d\n    obj.encoding = this.encoding;\x0d\n    obj.fatal = this.fatal;\x0d\n    obj.ignoreBOM = this.ignoreBOM;\x0d\n    if (opts.showHidden) {\x0d\n      obj[kFlags] = this[kFlags];\x0d\n      obj[kHandle] = this[kHandle];\x0d\n    }\x0d\n    // Lazy to avoid circular dependency\x0d\n    const { inspect } = require('internal/util/inspect');\x0d\n    return `${constructor.name} ${inspect(obj)}`;\x0d\n  }\x2C\x0d\n});\x0d\nconst propertiesValues = ObjectValues(sharedProperties);\x0d\nfor (let i = 0; i < propertiesValues.length; i++) {\x0d\n  // We want to use null-prototype objects to not rely on globally mutable\x0d\n  // %Object.prototype%.\x0d\n  ObjectSetPrototypeOf(propertiesValues[i]\x2C null);\x0d\n}\x0d\nsharedProperties[inspect].enumerable = false;\x0d\n\x0d\nObjectDefineProperties(TextDecoder.prototype\x2C {\x0d\n  decode: kEnumerableProperty\x2C\x0d\n  ...sharedProperties\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'TextDecoder'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  getEncodingFromLabel\x2C\x0d\n  TextDecoder\x2C\x0d\n  TextEncoder\x2C\x0d\n};\x0d\n
code-source-info,0xc2df90dade
code-creation,JS,10,224054,0xc2df90f196,55,getEncodingFromLabel node:internal/encoding:335:30,0x3fcdefb7cc0,~
code-source-info,0xc2df90f196,58,9755,9909,C0O9780C5O9790C10O9790C16O9805C18O9828C20O9839C21O9843C26O9860C34O9890C39O9890C44O9864C49O9860C54O9906,,
code-creation,JS,10,224199,0xc2df90f55e,220,decode node:internal/encoding:443:11,0x3fcdefb8140,~
code-source-info,0xc2df90f55e,58,12874,13417,C8O12883C23O12900C30O12923C35O12923C39O12955C43O12960C61O12988C69O12975C73O13008C77O13017C79O13016C84O13044C95O13074C97O13073C105O13092C107O13091C114O13051C119O13101C120O13120C122O13125C128O13142C133O13155C147O13190C153O13155C158O13248C160O13258C164O13306C180O13319C186O13351C197O13371C199O13370C203O13400C214O13358C219O13410,,
code-creation,JS,10,224305,0xc2df90f77e,36,validateDecoder node:internal/encoding:69:25,0x3fcdefb7c20,~
code-source-info,0xc2df90f77e,58,1562,1666,C0O1573C7O1596C9O1595C18O1621C28O1627C33O1621C35O1665,,
code-creation,JS,10,224384,0xc2df90f886,10, node:internal/modules/esm/translators:47:63,0x8c1d177ea0,~
code-source-info,0xc2df90f886,86,1268,1295,C0O1281C2O1287C9O1294,,
code-creation,Script,10,224554,0xc2df91005e,271, file:///C:/coding/soodocode/scripts/profiler.js:1:1,0xc2df90fd60,~
script-source,103,file:///C:/coding/soodocode/scripts/profiler.js,import * as sc from "../build/index.js";\nconst limit = 100000;\nconst program = sc.parse(sc.tokenize(sc.symbolize(`DECLARE primeCount : INTEGER\x0d\nCONSTANT limit = ${limit}\x0d\nprimeCount <- 0\x0d\n\x0d\nDECLARE isPrime : ARRAY[2:${limit}] OF BOOLEAN\x0d\n\x0d\n// Initialise array\x0d\nFOR n <-- 2 TO limit\x0d\n    isPrime[n] <-- TRUE\x0d\nNEXT n\x0d\n\x0d\nFOR n <-- 2 TO limit\x0d\n    IF isPrime[n] THEN\x0d\n        // Print n if it is prime\x0d\n        OUTPUT n\x0d\n        primeCount <-- primeCount + 1\x0d\n        \x0d\n        // Then mark all its multiples as not prime\x0d\n        FOR i <-- 2 TO limit STEP n\x0d\n            isPrime[i] <-- FALSE\x0d\n        NEXT i\x0d\n    ENDIF\x0d\nNEXT n\x0d\n\x0d\nOUTPUT "There are " & primeCount & " primes in the range 2-" & limit\x0d\n`)));\nconst runtime = new sc.Runtime(() => sc.crash("No input in perf test runtime")\x2C () => { });\nfor (let i = 0; i < 10; i++) {\n    performance.mark("execution");\n    runtime.runProgram(program.nodes);\n    console.log(performance.measure("execution"\x2C "execution").duration.toFixed(4) + "ms");\n}\n
code-source-info,0xc2df91005e,103,0,993,C10O0C26O0C46O0C50O55C57O79C60O82C68O91C76O103C86O163C99O218C110O103C116O91C122O82C128O719C131O726C148O719C154O808C158O813C160O813C165O830C169O842C177O842C182O873C187O892C192O873C197O904C201O912C206O916C210O928C221O928C228O961C233O970C241O971C249O982C253O912C259O820C264O795C270O993,,
code-creation,JS,10,224794,0xc2df910686,81,registerModule node:internal/modules/esm/utils:154:24,0x3fcdefbe750,~
code-source-info,0xc2df910686,66,4752,5406,C0O4795C2O4804C4O4803C8O4836C10O4853C12O4849C19O4906C21O4902C28O4960C30O4956C37O5022C39O5018C44O5265C45O5272C46O5319C59O5345C63O5362C68O5379C73O5379C80O5405,,
code-creation,JS,10,224939,0xc2df9108b6,137, node:internal/modules/esm/module_job:86:41,0xc2df9049e0,~
code-source-info,0xc2df9108b6,92,2707,2916,C10O2707C18O2763C23O2774C28O2781C37O2805C46O2781C59O2763C85O2832C94O2851C97O2832C102O2893C114O2907,,
code-creation,RegExp,3,225193,0x7ff64c449400,940,%2F|%5C
code-creation,JS,11,225252,0x7ff64c4497c0,548,get pathname node:internal/url:1038:15,0x3fcdefa2a30,^
code-source-info,0x7ff64c4497c0,32,31290,31578,,,
code-creation,JS,11,225287,0x7ff64c449a00,136,get href node:internal/url:904:11,0x3fcdefa23d0,^
code-source-info,0x7ff64c449a00,32,27408,27589,,,
code-creation,JS,11,225320,0x7ff64c449ac0,316,<instance_members_initializer> node:internal/url:162:1,0x3fcdefa14f8,^
code-source-info,0x7ff64c449ac0,32,3639,4469,,,
code-creation,JS,11,225350,0x7ff64c449c40,124,URLContext node:internal/url:162:1,0x3fcdefa14a8,^
code-source-info,0x7ff64c449c40,32,3639,3639,,,
code-creation,JS,11,225382,0x7ff64c449d00,256,<instance_members_initializer> node:internal/url:766:1,0x3fcdefa2dd0,^
code-source-info,0x7ff64c449d00,32,22613,33593,,,
code-creation,JS,11,225440,0x7ff64c449e40,1868,#updateContext node:internal/url:853:17,0x3fcdefa2330,^
code-source-info,0x7ff64c449e40,32,25525,27199,,,
code-creation,JS,11,225479,0x7ff64c44a5c0,724,URL node:internal/url:784:14,0x3fcdefa21a0,^
code-source-info,0x7ff64c44a5c0,32,23269,23587,,,
code-creation,Script,10,226841,0xc2df91214e,45, file:///C:/coding/soodocode/build/index.js:1:1,0xc2df911bb0,~
script-source,104,file:///C:/coding/soodocode/build/index.js,export * from "./types.js";\nexport * from "./utils.js";\nexport * from "./lexer.js";\nexport * from "./lexer-types.js";\nexport * from "./parser.js";\nexport * from "./parser-types.js";\nexport * from "./runtime.js";\nexport * from "./runtime-types.js";\nexport * from "./statements.js";\nexport * from "./builtin_functions.js";\n
code-source-info,0xc2df91214e,104,0,321,C10O0C15O0C35O0C44O321,,
code-creation,JS,11,228549,0x7ff64c44a8c0,7024,realpathSync node:fs:2625:22,0x3fcdefb6128,^
code-source-info,0x7ff64c44a8c0,56,72118,76045,,,
code-creation,JS,11,228592,0x7ff64c44c440,432,isURL node:internal/url:762:15,0x3fcdefa2038,^
code-source-info,0x7ff64c44c440,32,22496,22609,,,
code-creation,JS,11,228622,0x7ff64c44c600,308,isFileType node:fs:211:20,0x3fcdefb42e8,^
code-source-info,0x7ff64c44c600,56,5497,5745,,,
code-creation,JS,11,228650,0x7ff64c44c780,316,SafePromise node:internal/per_context/primordials:455:16,0x23399f5c98,^
code-source-info,0x7ff64c44c780,6,13605,13636,,,
code-creation,JS,11,228682,0x7ff64c44c900,456,get hostname node:internal/url:1008:15,0x3fcdefa2880,^
code-source-info,0x7ff64c44c900,32,30516,30793,,,
code-creation,JS,11,228710,0x7ff64c44cb00,184,SideEffectFreeRegExpPrototypeSymbolReplace node:internal/util:765:52,0x3fcdef88e88,^
code-source-info,0x7ff64c44cb00,16,21858,21963,,,
code-creation,JS,11,228735,0x7ff64c44cc00,136,toString node:internal/url:898:11,0x3fcdefa2380,^
code-source-info,0x7ff64c44cc00,32,27213,27394,,,
code-creation,JS,11,228761,0x7ff64c44ccc0,244,shouldBeTreatedAsRelativeOrAbsolutePath node:internal/modules/esm/resolve:883:49,0x8c1d17dcc0,^
code-source-info,0x7ff64c44ccc0,87,34686,34833,,,
code-creation,JS,11,228787,0x7ff64c44ce00,152,isUint8Array node:internal/util/types:13:22,0x3fcdef89d68,^
code-source-info,0x7ff64c44ce00,18,269,356,,,
code-creation,JS,11,228823,0x7ff64c44cec0,996,extname node:internal/modules/esm/get_format:58:17,0x2bb6ec84f80,^
code-source-info,0x7ff64c44cec0,89,1613,1968,,,
code-creation,JS,11,230016,0x7ff64c44d2c0,140,get search node:internal/url:1055:13,0x3fcdefa2b10,^
code-source-info,0x7ff64c44d2c0,32,31778,31969,,,
code-creation,JS,11,230062,0x7ff64c44d380,884,fileURLToPath node:internal/url:1455:23,0x3fcdefa3508,^
code-source-info,0x7ff64c44d380,32,43679,44004,,,
code-creation,JS,11,230091,0x7ff64c44d740,320,#getModuleCachedImports node:internal/modules/esm/module_map:54:26,0x8c1d173ea8,^
code-source-info,0x7ff64c44d740,84,1916,2115,,,
code-creation,JS,11,230119,0x7ff64c44d8c0,300,getDefaultConditions node:internal/modules/esm/utils:50:30,0x3fcdefbe3c8,^
code-source-info,0x7ff64c44d8c0,66,1199,1279,,,
code-creation,JS,11,230149,0x7ff64c44da00,548,isRelativeSpecifier node:internal/modules/esm/resolve:869:29,0x8c1d17dc70,^
code-source-info,0x7ff64c44da00,87,34224,34483,,,
code-creation,JS,11,230177,0x7ff64c44dc40,276,SideEffectFreeRegExpPrototypeExec node:internal/util:740:43,0x3fcdef88de8,^
code-source-info,0x7ff64c44dc40,16,20772,20946,,,
code-creation,JS,11,230202,0x7ff64c44dd80,216,splitRoot node:fs:2577:33,0x3fcdefb6000,^
code-source-info,0x7ff64c44dd80,56,70789,70869,,,
code-creation,JS,11,230242,0x7ff64c44de80,1340,getPackageScopeConfig node:internal/modules/esm/package_config:28:31,0x2bb6ec83e98,^
code-source-info,0x7ff64c44de80,88,1129,2228,,,
code-creation,JS,11,230271,0x7ff64c44e400,132,get node:internal/modules/esm/module_map:67:6,0x8c1d173f98,^
code-source-info,0x7ff64c44e400,84,2300,2401,,,
code-creation,JS,11,230297,0x7ff64c44e4c0,300,getDefaultConditionsSet node:internal/modules/esm/utils:60:33,0x3fcdefbe660,^
code-source-info,0x7ff64c44e4c0,66,1448,1534,,,
code-creation,JS,11,230332,0x7ff64c44e600,168,toPathIfFileURL node:internal/url:1547:25,0x3fcdefa35f8,^
code-source-info,0x7ff64c44e600,32,47682,47799,,,
code-creation,JS,11,231840,0x7ff64c44e6c0,1072,getOptions node:internal/fs/utils:326:20,0x3fcdef9db38,^
code-source-info,0x7ff64c44e6c0,28,7877,8505,,,
code-creation,JS,11,231887,0x7ff64c44eb00,548,set search node:internal/url:1061:13,0x3fcdefa2b80,^
code-source-info,0x7ff64c44eb00,32,31985,32184,,,
code-creation,JS,11,231916,0x7ff64c44ed40,440,set hash node:internal/url:1086:11,0x3fcdefa2cc8,^
code-source-info,0x7ff64c44ed40,32,32811,32973,,,
code-creation,JS,11,231949,0x7ff64c44ef40,528,#ensureSearchParamsUpdated node:internal/url:839:29,0x3fcdefa22e0,^
code-source-info,0x7ff64c44ef40,32,24836,25256,,,
code-creation,JS,11,231976,0x7ff64c44f180,156,getPackageType node:internal/modules/esm/resolve:748:24,0x8c1d17db30,^
code-source-info,0x7ff64c44f180,87,30026,30119,,,
code-creation,JS,11,232006,0x7ff64c44f240,408,defaultGetFormatWithoutErrors node:internal/modules/esm/get_format:185:39,0x2bb6ec850c0,^
code-source-info,0x7ff64c44f240,89,6178,6381,,,
code-creation,JS,11,232032,0x7ff64c44f400,140,set node:internal/modules/esm/module_map:76:6,0x8c1d173fe8,^
code-source-info,0x7ff64c44f400,84,2551,2680,,,
code-creation,JS,11,232063,0x7ff64c44f4c0,652,resolve node:internal/modules/esm/loader:350:10,0x8c1d16cfe0,^
code-source-info,0x7ff64c44f4c0,83,12169,12760,,,
code-creation,JS,11,232089,0x7ff64c44f780,180,assert node:internal/assert:11:16,0x3fcdef81a90,^
code-source-info,0x7ff64c44f780,11,182,322,,,
code-creation,JS,11,232424,0x7ff64c44f880,1772,ModuleJob node:internal/modules/esm/module_job:55:14,0x2bb6ec8fcc8,^
code-source-info,0x7ff64c44f880,92,1432,3480,,,
code-creation,JS,11,232474,0x7ff64c44ff80,1224, node:internal/fs/utils:676:38,0x3fcdef9e588,^
code-source-info,0x7ff64c44ff80,28,19101,19833,,,
code-creation,JS,11,232501,0x7ff64c450480,44,noop node:internal/util/debuglog:46:14,0x3fcdef8f598,^
code-source-info,0x7ff64c450480,22,1449,1457,,,
code-creation,JS,11,232536,0x7ff64c4504c0,704,getModuleJob node:internal/modules/esm/loader:233:21,0x8c1d16ce50,^
code-source-info,0x7ff64c4504c0,83,7434,7654,,,
code-creation,JS,11,232564,0x7ff64c4507c0,340, node:internal/fs/utils:719:42,0x3fcdef9e628,^
code-source-info,0x7ff64c4507c0,28,20776,20938,,,
code-creation,JS,11,232593,0x7ff64c450940,544,get node:internal/modules/esm/module_map:91:6,0x8c1d1740d8,^
code-source-info,0x7ff64c450940,84,3014,3158,,,
code-creation,JS,11,232827,0x7ff64c450b80,1548,#createModuleJob node:internal/modules/esm/loader:271:19,0x8c1d16cd10,^
code-source-info,0x7ff64c450b80,83,9172,10387,,,
code-creation,JS,11,232873,0x7ff64c4511c0,1400,set node:internal/modules/esm/module_map:96:6,0x8c1d174128,^
code-source-info,0x7ff64c4511c0,84,3165,3772,,,
code-creation,JS,11,232904,0x7ff64c451780,652,getJobFromResolveResult node:internal/modules/esm/loader:243:26,0x8c1d16cef0,^
code-source-info,0x7ff64c451780,83,7929,8505,,,
code-creation,JS,11,232942,0x7ff64c451a40,1252,open node:internal/fs/promises:608:20,0x2bb6ec97228,^
code-source-info,0x7ff64c451a40,94,15870,16183,,,
code-creation,JS,11,233232,0x7ff64c451f40,964,FileHandle node:internal/fs/promises:145:14,0x2bb6ec97ea8,^
code-source-info,0x7ff64c451f40,94,3770,3943,,,
code-creation,JS,11,233277,0x7ff64c452340,888, node:internal/modules/esm/module_job:86:41,0xc2df9049e0,^
code-source-info,0x7ff64c452340,92,2707,2916,,,
code-creation,JS,11,233304,0x7ff64c452700,108,get fd node:internal/fs/promises:158:9,0x2bb6ec97f60,^
code-source-info,0x7ff64c452700,94,4020,4052,,,
code-creation,JS,11,233340,0x7ff64c452780,1180,readFile node:internal/fs/promises:1080:24,0x2bb6ec97db8,^
code-source-info,0x7ff64c452780,94,30704,31036,,,
code-creation,JS,11,233366,0x7ff64c452c40,108,SafeIterator node:internal/per_context/primordials:332:16,0x23399f4840,^
code-source-info,0x7ff64c452c40,6,9841,9903,,,
code-creation,JS,11,233390,0x7ff64c452cc0,40, node:internal/per_context/primordials:338:21,0x23399f4a80,^
code-source-info,0x7ff64c452cc0,6,9982,10013,,,
code-creation,JS,11,233500,0x7ff64c452d00,140,EventEmitter node:events:219:22,0x3fcdef90a50,^
script-source,23,node:events,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  Boolean\x2C\x0d\n  Error\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolFor\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\nconst kRejection = SymbolFor('nodejs.rejection');\x0d\n\x0d\nconst { kEmptyObject } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  inspect\x2C\x0d\n  identicalSequenceRange\x2C\x0d\n} = require('internal/util/inspect');\x0d\n\x0d\nlet spliceOne;\x0d\nlet FixedQueue;\x0d\nlet kFirstEventParam;\x0d\nlet kResistStopPropagation;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  kEnhanceStackBeforeInspector\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_UNHANDLED_ERROR\x2C\x0d\n  }\x2C\x0d\n  genericNodeError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateNumber\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kCapture = Symbol('kCapture');\x0d\nconst kErrorMonitor = Symbol('events.errorMonitor');\x0d\nconst kShapeMode = Symbol('shapeMode');\x0d\nconst kMaxEventTargetListeners = Symbol('events.maxEventTargetListeners');\x0d\nconst kMaxEventTargetListenersWarned =\x0d\n  Symbol('events.maxEventTargetListenersWarned');\x0d\nconst kWatermarkData = SymbolFor('nodejs.watermarkData');\x0d\n\x0d\nlet EventEmitterAsyncResource;\x0d\n// The EventEmitterAsyncResource has to be initialized lazily because event.js\x0d\n// is loaded so early in the bootstrap process\x2C before async_hooks is available.\x0d\n//\x0d\n// This implementation was adapted straight from addaleax's\x0d\n// eventemitter-asyncresource MIT-licensed userland module.\x0d\n// https://github.com/addaleax/eventemitter-asyncresource\x0d\nfunction lazyEventEmitterAsyncResource() {\x0d\n  if (EventEmitterAsyncResource === undefined) {\x0d\n    const {\x0d\n      AsyncResource\x2C\x0d\n    } = require('async_hooks');\x0d\n\x0d\n    const kEventEmitter = Symbol('kEventEmitter');\x0d\n    const kAsyncResource = Symbol('kAsyncResource');\x0d\n    class EventEmitterReferencingAsyncResource extends AsyncResource {\x0d\n      /**\x0d\n       * @param {EventEmitter} ee\x0d\n       * @param {string} [type]\x0d\n       * @param {{\x0d\n       *   triggerAsyncId?: number\x2C\x0d\n       *   requireManualDestroy?: boolean\x2C\x0d\n       * }} [options]\x0d\n       */\x0d\n      constructor(ee\x2C type\x2C options) {\x0d\n        super(type\x2C options);\x0d\n        this[kEventEmitter] = ee;\x0d\n      }\x0d\n\x0d\n      /**\x0d\n       * @type {EventEmitter}\x0d\n       */\x0d\n      get eventEmitter() {\x0d\n        if (this[kEventEmitter] === undefined)\x0d\n          throw new ERR_INVALID_THIS('EventEmitterReferencingAsyncResource');\x0d\n        return this[kEventEmitter];\x0d\n      }\x0d\n    }\x0d\n\x0d\n    EventEmitterAsyncResource =\x0d\n      class EventEmitterAsyncResource extends EventEmitter {\x0d\n        /**\x0d\n         * @param {{\x0d\n         *   name?: string\x2C\x0d\n         *   triggerAsyncId?: number\x2C\x0d\n         *   requireManualDestroy?: boolean\x2C\x0d\n         * }} [options]\x0d\n         */\x0d\n        constructor(options = undefined) {\x0d\n          let name;\x0d\n          if (typeof options === 'string') {\x0d\n            name = options;\x0d\n            options = undefined;\x0d\n          } else {\x0d\n            if (new.target === EventEmitterAsyncResource) {\x0d\n              validateString(options?.name\x2C 'options.name');\x0d\n            }\x0d\n            name = options?.name || new.target.name;\x0d\n          }\x0d\n          super(options);\x0d\n\x0d\n          this[kAsyncResource] =\x0d\n            new EventEmitterReferencingAsyncResource(this\x2C name\x2C options);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @param {symbol\x2Cstring} event\x0d\n         * @param  {...any} args\x0d\n         * @returns {boolean}\x0d\n         */\x0d\n        emit(event\x2C ...args) {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          const { asyncResource } = this;\x0d\n          ArrayPrototypeUnshift(args\x2C super.emit\x2C this\x2C event);\x0d\n          return ReflectApply(asyncResource.runInAsyncScope\x2C asyncResource\x2C\x0d\n                              args);\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @returns {void}\x0d\n         */\x0d\n        emitDestroy() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          this.asyncResource.emitDestroy();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get asyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.asyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {number}\x0d\n         */\x0d\n        get triggerAsyncId() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this.asyncResource.triggerAsyncId();\x0d\n        }\x0d\n\x0d\n        /**\x0d\n         * @type {EventEmitterReferencingAsyncResource}\x0d\n         */\x0d\n        get asyncResource() {\x0d\n          if (this[kAsyncResource] === undefined)\x0d\n            throw new ERR_INVALID_THIS('EventEmitterAsyncResource');\x0d\n          return this[kAsyncResource];\x0d\n        }\x0d\n      };\x0d\n  }\x0d\n  return EventEmitterAsyncResource;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new `EventEmitter` instance.\x0d\n * @param {{ captureRejections?: boolean; }} [opts]\x0d\n * @constructs {EventEmitter}\x0d\n */\x0d\nfunction EventEmitter(opts) {\x0d\n  EventEmitter.init.call(this\x2C opts);\x0d\n}\x0d\nmodule.exports = EventEmitter;\x0d\nmodule.exports.addAbortListener = addAbortListener;\x0d\nmodule.exports.once = once;\x0d\nmodule.exports.on = on;\x0d\nmodule.exports.getEventListeners = getEventListeners;\x0d\nmodule.exports.getMaxListeners = getMaxListeners;\x0d\n// Backwards-compat with node 0.10.x\x0d\nEventEmitter.EventEmitter = EventEmitter;\x0d\n\x0d\nEventEmitter.usingDomains = false;\x0d\n\x0d\nEventEmitter.captureRejectionSymbol = kRejection;\x0d\nObjectDefineProperty(EventEmitter\x2C 'captureRejections'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return EventEmitter.prototype[kCapture];\x0d\n  }\x2C\x0d\n  set(value) {\x0d\n    validateBoolean(value\x2C 'EventEmitter.captureRejections');\x0d\n\x0d\n    EventEmitter.prototype[kCapture] = value;\x0d\n  }\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'EventEmitterAsyncResource'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: lazyEventEmitterAsyncResource\x2C\x0d\n  set: undefined\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.errorMonitor = kErrorMonitor;\x0d\n\x0d\n// The default for captureRejections is false\x0d\nObjectDefineProperty(EventEmitter.prototype\x2C kCapture\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: false\x2C\x0d\n  writable: true\x2C\x0d\n  enumerable: false\x2C\x0d\n});\x0d\n\x0d\nEventEmitter.prototype._events = undefined;\x0d\nEventEmitter.prototype._eventsCount = 0;\x0d\nEventEmitter.prototype._maxListeners = undefined;\x0d\n\x0d\n// By default EventEmitters will print a warning if more than 10 listeners are\x0d\n// added to it. This is a useful default which helps finding memory leaks.\x0d\nlet defaultMaxListeners = 10;\x0d\nlet isEventTarget;\x0d\n\x0d\nfunction checkListener(listener) {\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n}\x0d\n\x0d\nObjectDefineProperty(EventEmitter\x2C 'defaultMaxListeners'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get: function() {\x0d\n    return defaultMaxListeners;\x0d\n  }\x2C\x0d\n  set: function(arg) {\x0d\n    validateNumber(arg\x2C 'defaultMaxListeners'\x2C 0);\x0d\n    defaultMaxListeners = arg;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperties(EventEmitter\x2C {\x0d\n  kMaxEventTargetListeners: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListeners\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n  kMaxEventTargetListenersWarned: {\x0d\n    __proto__: null\x2C\x0d\n    value: kMaxEventTargetListenersWarned\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: false\x2C\x0d\n    writable: false\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * Sets the max listeners.\x0d\n * @param {number} n\x0d\n * @param {EventTarget[] | EventEmitter[]} [eventTargets]\x0d\n * @returns {void}\x0d\n */\x0d\nEventEmitter.setMaxListeners =\x0d\n  function(n = defaultMaxListeners\x2C ...eventTargets) {\x0d\n    validateNumber(n\x2C 'setMaxListeners'\x2C 0);\x0d\n    if (eventTargets.length === 0) {\x0d\n      defaultMaxListeners = n;\x0d\n    } else {\x0d\n      if (isEventTarget === undefined)\x0d\n        isEventTarget = require('internal/event_target').isEventTarget;\x0d\n\x0d\n      for (let i = 0; i < eventTargets.length; i++) {\x0d\n        const target = eventTargets[i];\x0d\n        if (isEventTarget(target)) {\x0d\n          target[kMaxEventTargetListeners] = n;\x0d\n          target[kMaxEventTargetListenersWarned] = false;\x0d\n        } else if (typeof target.setMaxListeners === 'function') {\x0d\n          target.setMaxListeners(n);\x0d\n        } else {\x0d\n          throw new ERR_INVALID_ARG_TYPE(\x0d\n            'eventTargets'\x2C\x0d\n            ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n            target);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n// If you're updating this function definition\x2C please also update any\x0d\n// re-definitions\x2C such as the one in the Domain module (lib/domain.js).\x0d\nEventEmitter.init = function(opts) {\x0d\n\x0d\n  if (this._events === undefined ||\x0d\n      this._events === ObjectGetPrototypeOf(this)._events) {\x0d\n    this._events = { __proto__: null };\x0d\n    this._eventsCount = 0;\x0d\n    this[kShapeMode] = false;\x0d\n  } else {\x0d\n    this[kShapeMode] = true;\x0d\n  }\x0d\n\x0d\n  this._maxListeners = this._maxListeners || undefined;\x0d\n\x0d\n\x0d\n  if (opts?.captureRejections) {\x0d\n    validateBoolean(opts.captureRejections\x2C 'options.captureRejections');\x0d\n    this[kCapture] = Boolean(opts.captureRejections);\x0d\n  } else {\x0d\n    // Assigning the kCapture property directly saves an expensive\x0d\n    // prototype lookup in a very sensitive hot path.\x0d\n    this[kCapture] = EventEmitter.prototype[kCapture];\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction addCatch(that\x2C promise\x2C type\x2C args) {\x0d\n  if (!that[kCapture]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Handle Promises/A+ spec\x2C then could be a getter\x0d\n  // that throws on second use.\x0d\n  try {\x0d\n    const then = promise.then;\x0d\n\x0d\n    if (typeof then === 'function') {\x0d\n      then.call(promise\x2C undefined\x2C function(err) {\x0d\n        // The callback is called with nextTick to avoid a follow-up\x0d\n        // rejection from this promise.\x0d\n        process.nextTick(emitUnhandledRejectionOrErr\x2C that\x2C err\x2C type\x2C args);\x0d\n      });\x0d\n    }\x0d\n  } catch (err) {\x0d\n    that.emit('error'\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitUnhandledRejectionOrErr(ee\x2C err\x2C type\x2C args) {\x0d\n  if (typeof ee[kRejection] === 'function') {\x0d\n    ee[kRejection](err\x2C type\x2C ...args);\x0d\n  } else {\x0d\n    // We have to disable the capture rejections mechanism\x2C otherwise\x0d\n    // we might end up in an infinite loop.\x0d\n    const prev = ee[kCapture];\x0d\n\x0d\n    // If the error handler throws\x2C it is not catchable and it\x0d\n    // will end up in 'uncaughtException'. We restore the previous\x0d\n    // value of kCapture in case the uncaughtException is present\x0d\n    // and the exception is handled.\x0d\n    try {\x0d\n      ee[kCapture] = false;\x0d\n      ee.emit('error'\x2C err);\x0d\n    } finally {\x0d\n      ee[kCapture] = prev;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Increases the max listeners of the event emitter.\x0d\n * @param {number} n\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\x0d\n  validateNumber(n\x2C 'setMaxListeners'\x2C 0);\x0d\n  this._maxListeners = n;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction _getMaxListeners(that) {\x0d\n  if (that._maxListeners === undefined)\x0d\n    return EventEmitter.defaultMaxListeners;\x0d\n  return that._maxListeners;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the current max listener value for the event emitter.\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\x0d\n  return _getMaxListeners(this);\x0d\n};\x0d\n\x0d\nfunction enhanceStackTrace(err\x2C own) {\x0d\n  let ctorInfo = '';\x0d\n  try {\x0d\n    const { name } = this.constructor;\x0d\n    if (name !== 'EventEmitter')\x0d\n      ctorInfo = ` on ${name} instance`;\x0d\n  } catch {\x0d\n    // Continue regardless of error.\x0d\n  }\x0d\n  const sep = `\\nEmitted 'error' event${ctorInfo} at:\\n`;\x0d\n\x0d\n  const errStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(err.stack\x2C '\\n')\x2C 1);\x0d\n  const ownStack = ArrayPrototypeSlice(\x0d\n    StringPrototypeSplit(own.stack\x2C '\\n')\x2C 1);\x0d\n\x0d\n  const { len\x2C offset } = identicalSequenceRange(ownStack\x2C errStack);\x0d\n  if (len > 0) {\x0d\n    ArrayPrototypeSplice(ownStack\x2C offset + 1\x2C len - 2\x2C\x0d\n                         '    [... lines matching original stack trace ...]');\x0d\n  }\x0d\n\x0d\n  return err.stack + sep + ArrayPrototypeJoin(ownStack\x2C '\\n');\x0d\n}\x0d\n\x0d\n/**\x0d\n * Synchronously calls each of the listeners registered\x0d\n * for the event.\x0d\n * @param {string | symbol} type\x0d\n * @param {...any} [args]\x0d\n * @returns {boolean}\x0d\n */\x0d\nEventEmitter.prototype.emit = function emit(type\x2C ...args) {\x0d\n  let doError = (type === 'error');\x0d\n\x0d\n  const events = this._events;\x0d\n  if (events !== undefined) {\x0d\n    if (doError && events[kErrorMonitor] !== undefined)\x0d\n      this.emit(kErrorMonitor\x2C ...args);\x0d\n    doError = (doError && events.error === undefined);\x0d\n  } else if (!doError)\x0d\n    return false;\x0d\n\x0d\n  // If there is no 'error' event listener then throw.\x0d\n  if (doError) {\x0d\n    let er;\x0d\n    if (args.length > 0)\x0d\n      er = args[0];\x0d\n    if (er instanceof Error) {\x0d\n      try {\x0d\n        const capture = {};\x0d\n        ErrorCaptureStackTrace(capture\x2C EventEmitter.prototype.emit);\x0d\n        ObjectDefineProperty(er\x2C kEnhanceStackBeforeInspector\x2C {\x0d\n          __proto__: null\x2C\x0d\n          value: FunctionPrototypeBind(enhanceStackTrace\x2C this\x2C er\x2C capture)\x2C\x0d\n          configurable: true\x2C\x0d\n        });\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      // Note: The comments on the `throw` lines are intentional\x2C they show\x0d\n      // up in Node's output if this results in an unhandled exception.\x0d\n      throw er; // Unhandled 'error' event\x0d\n    }\x0d\n\x0d\n    let stringifiedEr;\x0d\n    try {\x0d\n      stringifiedEr = inspect(er);\x0d\n    } catch {\x0d\n      stringifiedEr = er;\x0d\n    }\x0d\n\x0d\n    // At least give some kind of context to the user\x0d\n    const err = new ERR_UNHANDLED_ERROR(stringifiedEr);\x0d\n    err.context = er;\x0d\n    throw err; // Unhandled 'error' event\x0d\n  }\x0d\n\x0d\n  const handler = events[type];\x0d\n\x0d\n  if (handler === undefined)\x0d\n    return false;\x0d\n\x0d\n  if (typeof handler === 'function') {\x0d\n    const result = handler.apply(this\x2C args);\x0d\n\x0d\n    // We check if result is undefined first because that\x0d\n    // is the most common case so we do not pay any perf\x0d\n    // penalty\x0d\n    if (result !== undefined && result !== null) {\x0d\n      addCatch(this\x2C result\x2C type\x2C args);\x0d\n    }\x0d\n  } else {\x0d\n    const len = handler.length;\x0d\n    const listeners = arrayClone(handler);\x0d\n    for (let i = 0; i < len; ++i) {\x0d\n      const result = listeners[i].apply(this\x2C args);\x0d\n\x0d\n      // We check if result is undefined first because that\x0d\n      // is the most common case so we do not pay any perf\x0d\n      // penalty.\x0d\n      // This code is duplicated because extracting it away\x0d\n      // would make it non-inlineable.\x0d\n      if (result !== undefined && result !== null) {\x0d\n        addCatch(this\x2C result\x2C type\x2C args);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return true;\x0d\n};\x0d\n\x0d\nfunction _addListener(target\x2C type\x2C listener\x2C prepend) {\x0d\n  let m;\x0d\n  let events;\x0d\n  let existing;\x0d\n\x0d\n  checkListener(listener);\x0d\n\x0d\n  events = target._events;\x0d\n  if (events === undefined) {\x0d\n    events = target._events = { __proto__: null };\x0d\n    target._eventsCount = 0;\x0d\n  } else {\x0d\n    // To avoid recursion in the case that type === "newListener"! Before\x0d\n    // adding it to the listeners\x2C first emit "newListener".\x0d\n    if (events.newListener !== undefined) {\x0d\n      target.emit('newListener'\x2C type\x2C\x0d\n                  listener.listener ?? listener);\x0d\n\x0d\n      // Re-assign `events` because a newListener handler could have caused the\x0d\n      // this._events to be assigned to a new object\x0d\n      events = target._events;\x0d\n    }\x0d\n    existing = events[type];\x0d\n  }\x0d\n\x0d\n  if (existing === undefined) {\x0d\n    // Optimize the case of one listener. Don't need the extra array object.\x0d\n    events[type] = listener;\x0d\n    ++target._eventsCount;\x0d\n  } else {\x0d\n    if (typeof existing === 'function') {\x0d\n      // Adding the second element\x2C need to change to array.\x0d\n      existing = events[type] =\x0d\n        prepend ? [listener\x2C existing] : [existing\x2C listener];\x0d\n      // If we've already got an array\x2C just append.\x0d\n    } else if (prepend) {\x0d\n      existing.unshift(listener);\x0d\n    } else {\x0d\n      existing.push(listener);\x0d\n    }\x0d\n\x0d\n    // Check for listener leak\x0d\n    m = _getMaxListeners(target);\x0d\n    if (m > 0 && existing.length > m && !existing.warned) {\x0d\n      existing.warned = true;\x0d\n      // No error code for this since it is a Warning\x0d\n      const w = genericNodeError(\x0d\n        `Possible EventEmitter memory leak detected. ${existing.length} ${String(type)} listeners ` +\x0d\n        `added to ${inspect(target\x2C { depth: -1 })}. Use emitter.setMaxListeners() to increase limit`\x2C\x0d\n        { name: 'MaxListenersExceededWarning'\x2C emitter: target\x2C type: type\x2C count: existing.length });\x0d\n      process.emitWarning(w);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return target;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a listener to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.addListener = function addListener(type\x2C listener) {\x0d\n  return _addListener(this\x2C type\x2C listener\x2C false);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\x0d\n\x0d\n/**\x0d\n * Adds the `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependListener =\x0d\n    function prependListener(type\x2C listener) {\x0d\n      return _addListener(this\x2C type\x2C listener\x2C true);\x0d\n    };\x0d\n\x0d\nfunction onceWrapper() {\x0d\n  if (!this.fired) {\x0d\n    this.target.removeListener(this.type\x2C this.wrapFn);\x0d\n    this.fired = true;\x0d\n    if (arguments.length === 0)\x0d\n      return this.listener.call(this.target);\x0d\n    return this.listener.apply(this.target\x2C arguments);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction _onceWrap(target\x2C type\x2C listener) {\x0d\n  const state = { fired: false\x2C wrapFn: undefined\x2C target\x2C type\x2C listener };\x0d\n  const wrapped = onceWrapper.bind(state);\x0d\n  wrapped.listener = listener;\x0d\n  state.wrapFn = wrapped;\x0d\n  return wrapped;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the event emitter.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.once = function once(type\x2C listener) {\x0d\n  checkListener(listener);\x0d\n\x0d\n  this.on(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n  return this;\x0d\n};\x0d\n\x0d\n/**\x0d\n * Adds a one-time `listener` function to the beginning of\x0d\n * the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.prependOnceListener =\x0d\n    function prependOnceListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      this.prependListener(type\x2C _onceWrap(this\x2C type\x2C listener));\x0d\n      return this;\x0d\n    };\x0d\n\x0d\n/**\x0d\n * Removes the specified `listener` from the listeners array.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeListener =\x0d\n    function removeListener(type\x2C listener) {\x0d\n      checkListener(listener);\x0d\n\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      const list = events[type];\x0d\n      if (list === undefined)\x0d\n        return this;\x0d\n\x0d\n      if (list === listener || list.listener === listener) {\x0d\n        this._eventsCount -= 1;\x0d\n\x0d\n        if (this[kShapeMode]) {\x0d\n          events[type] = undefined;\x0d\n        } else if (this._eventsCount === 0) {\x0d\n          this._events = { __proto__: null };\x0d\n        } else {\x0d\n          delete events[type];\x0d\n          if (events.removeListener)\x0d\n            this.emit('removeListener'\x2C type\x2C list.listener || listener);\x0d\n        }\x0d\n      } else if (typeof list !== 'function') {\x0d\n        let position = -1;\x0d\n\x0d\n        for (let i = list.length - 1; i >= 0; i--) {\x0d\n          if (list[i] === listener || list[i].listener === listener) {\x0d\n            position = i;\x0d\n            break;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        if (position < 0)\x0d\n          return this;\x0d\n\x0d\n        if (position === 0)\x0d\n          list.shift();\x0d\n        else {\x0d\n          if (spliceOne === undefined)\x0d\n            spliceOne = require('internal/util').spliceOne;\x0d\n          spliceOne(list\x2C position);\x0d\n        }\x0d\n\x0d\n        if (list.length === 1)\x0d\n          events[type] = list[0];\x0d\n\x0d\n        if (events.removeListener !== undefined)\x0d\n          this.emit('removeListener'\x2C type\x2C listener);\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\x0d\n\x0d\n/**\x0d\n * Removes all listeners from the event emitter. (Only\x0d\n * removes listeners for a specific event name if specified\x0d\n * as `type`).\x0d\n * @param {string | symbol} [type]\x0d\n * @returns {EventEmitter}\x0d\n */\x0d\nEventEmitter.prototype.removeAllListeners =\x0d\n    function removeAllListeners(type) {\x0d\n      const events = this._events;\x0d\n      if (events === undefined)\x0d\n        return this;\x0d\n\x0d\n      // Not listening for removeListener\x2C no need to emit\x0d\n      if (events.removeListener === undefined) {\x0d\n        if (arguments.length === 0) {\x0d\n          this._events = { __proto__: null };\x0d\n          this._eventsCount = 0;\x0d\n        } else if (events[type] !== undefined) {\x0d\n          if (--this._eventsCount === 0)\x0d\n            this._events = { __proto__: null };\x0d\n          else\x0d\n            delete events[type];\x0d\n        }\x0d\n        this[kShapeMode] = false;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      // Emit removeListener for all listeners on all events\x0d\n      if (arguments.length === 0) {\x0d\n        for (const key of ReflectOwnKeys(events)) {\x0d\n          if (key === 'removeListener') continue;\x0d\n          this.removeAllListeners(key);\x0d\n        }\x0d\n        this.removeAllListeners('removeListener');\x0d\n        this._events = { __proto__: null };\x0d\n        this._eventsCount = 0;\x0d\n        this[kShapeMode] = false;\x0d\n        return this;\x0d\n      }\x0d\n\x0d\n      const listeners = events[type];\x0d\n\x0d\n      if (typeof listeners === 'function') {\x0d\n        this.removeListener(type\x2C listeners);\x0d\n      } else if (listeners !== undefined) {\x0d\n        // LIFO order\x0d\n        for (let i = listeners.length - 1; i >= 0; i--) {\x0d\n          this.removeListener(type\x2C listeners[i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      return this;\x0d\n    };\x0d\n\x0d\nfunction _listeners(target\x2C type\x2C unwrap) {\x0d\n  const events = target._events;\x0d\n\x0d\n  if (events === undefined)\x0d\n    return [];\x0d\n\x0d\n  const evlistener = events[type];\x0d\n  if (evlistener === undefined)\x0d\n    return [];\x0d\n\x0d\n  if (typeof evlistener === 'function')\x0d\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\x0d\n\x0d\n  return unwrap ?\x0d\n    unwrapListeners(evlistener) : arrayClone(evlistener);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.listeners = function listeners(type) {\x0d\n  return _listeners(this\x2C type\x2C true);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners and wrappers for\x0d\n * the event name specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\x0d\n  return _listeners(this\x2C type\x2C false);\x0d\n};\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to the event name\x0d\n * specified as `type`.\x0d\n * @deprecated since v3.2.0\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} type\x0d\n * @returns {number}\x0d\n */\x0d\nEventEmitter.listenerCount = function(emitter\x2C type) {\x0d\n  if (typeof emitter.listenerCount === 'function') {\x0d\n    return emitter.listenerCount(type);\x0d\n  }\x0d\n  return FunctionPrototypeCall(listenerCount\x2C emitter\x2C type);\x0d\n};\x0d\n\x0d\nEventEmitter.prototype.listenerCount = listenerCount;\x0d\n\x0d\n/**\x0d\n * Returns the number of listeners listening to event name\x0d\n * specified as `type`.\x0d\n * @param {string | symbol} type\x0d\n * @param {Function} listener\x0d\n * @returns {number}\x0d\n */\x0d\nfunction listenerCount(type\x2C listener) {\x0d\n  const events = this._events;\x0d\n\x0d\n  if (events !== undefined) {\x0d\n    const evlistener = events[type];\x0d\n\x0d\n    if (typeof evlistener === 'function') {\x0d\n      if (listener != null) {\x0d\n        return listener === evlistener || listener === evlistener.listener ? 1 : 0;\x0d\n      }\x0d\n\x0d\n      return 1;\x0d\n    } else if (evlistener !== undefined) {\x0d\n      if (listener != null) {\x0d\n        let matching = 0;\x0d\n\x0d\n        for (let i = 0\x2C l = evlistener.length; i < l; i++) {\x0d\n          if (evlistener[i] === listener || evlistener[i].listener === listener) {\x0d\n            matching++;\x0d\n          }\x0d\n        }\x0d\n\x0d\n        return matching;\x0d\n      }\x0d\n\x0d\n      return evlistener.length;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return 0;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array listing the events for which\x0d\n * the emitter has registered listeners.\x0d\n * @returns {any[]}\x0d\n */\x0d\nEventEmitter.prototype.eventNames = function eventNames() {\x0d\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\x0d\n};\x0d\n\x0d\nfunction arrayClone(arr) {\x0d\n  // At least since V8 8.3\x2C this implementation is faster than the previous\x0d\n  // which always used a simple for-loop\x0d\n  switch (arr.length) {\x0d\n    case 2: return [arr[0]\x2C arr[1]];\x0d\n    case 3: return [arr[0]\x2C arr[1]\x2C arr[2]];\x0d\n    case 4: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]];\x0d\n    case 5: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]];\x0d\n    case 6: return [arr[0]\x2C arr[1]\x2C arr[2]\x2C arr[3]\x2C arr[4]\x2C arr[5]];\x0d\n  }\x0d\n  return ArrayPrototypeSlice(arr);\x0d\n}\x0d\n\x0d\nfunction unwrapListeners(arr) {\x0d\n  const ret = arrayClone(arr);\x0d\n  for (let i = 0; i < ret.length; ++i) {\x0d\n    const orig = ret[i].listener;\x0d\n    if (typeof orig === 'function')\x0d\n      ret[i] = orig;\x0d\n  }\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns a copy of the array of listeners for the event name\x0d\n * specified as `type`.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @param {string | symbol} type\x0d\n * @returns {Function[]}\x0d\n */\x0d\nfunction getEventListeners(emitterOrTarget\x2C type) {\x0d\n  // First check if EventEmitter\x0d\n  if (typeof emitterOrTarget.listeners === 'function') {\x0d\n    return emitterOrTarget.listeners(type);\x0d\n  }\x0d\n  // Require event target lazily to avoid always loading it\x0d\n  const { isEventTarget\x2C kEvents } = require('internal/event_target');\x0d\n  if (isEventTarget(emitterOrTarget)) {\x0d\n    const root = emitterOrTarget[kEvents].get(type);\x0d\n    const listeners = [];\x0d\n    let handler = root?.next;\x0d\n    while (handler?.listener !== undefined) {\x0d\n      const listener = handler.listener?.deref ?\x0d\n        handler.listener.deref() : handler.listener;\x0d\n      listeners.push(listener);\x0d\n      handler = handler.next;\x0d\n    }\x0d\n    return listeners;\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns the max listeners set.\x0d\n * @param {EventEmitter | EventTarget} emitterOrTarget\x0d\n * @returns {number}\x0d\n */\x0d\nfunction getMaxListeners(emitterOrTarget) {\x0d\n  if (typeof emitterOrTarget?.getMaxListeners === 'function') {\x0d\n    return _getMaxListeners(emitterOrTarget);\x0d\n  } else if (emitterOrTarget?.[kMaxEventTargetListeners]) {\x0d\n    return emitterOrTarget[kMaxEventTargetListeners];\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_TYPE('emitter'\x2C\x0d\n                                 ['EventEmitter'\x2C 'EventTarget']\x2C\x0d\n                                 emitterOrTarget);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a `Promise` that is fulfilled when the emitter\x0d\n * emits the given event.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string} name\x0d\n * @param {{ signal: AbortSignal; }} [options]\x0d\n * @returns {Promise}\x0d\n */\x0d\nasync function once(emitter\x2C name\x2C options = kEmptyObject) {\x0d\n  const signal = options?.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const errorListener = (err) => {\x0d\n      emitter.removeListener(name\x2C resolver);\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      reject(err);\x0d\n    };\x0d\n    const resolver = (...args) => {\x0d\n      if (typeof emitter.removeListener === 'function') {\x0d\n        emitter.removeListener('error'\x2C errorListener);\x0d\n      }\x0d\n      if (signal != null) {\x0d\n        eventTargetAgnosticRemoveListener(signal\x2C 'abort'\x2C abortListener);\x0d\n      }\x0d\n      resolve(args);\x0d\n    };\x0d\n\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    const opts = { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true };\x0d\n    eventTargetAgnosticAddListener(emitter\x2C name\x2C resolver\x2C opts);\x0d\n    if (name !== 'error' && typeof emitter.once === 'function') {\x0d\n      // EventTarget does not have `error` event semantics like Node\x0d\n      // EventEmitters\x2C we listen to `error` events only on EventEmitters.\x0d\n      emitter.once('error'\x2C errorListener);\x0d\n    }\x0d\n    function abortListener() {\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C name\x2C resolver);\x0d\n      eventTargetAgnosticRemoveListener(emitter\x2C 'error'\x2C errorListener);\x0d\n      reject(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n    }\x0d\n    if (signal != null) {\x0d\n      eventTargetAgnosticAddListener(\x0d\n        signal\x2C 'abort'\x2C abortListener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst AsyncIteratorPrototype = ObjectGetPrototypeOf(\x0d\n  ObjectGetPrototypeOf(async function* () {}).prototype);\x0d\n\x0d\nfunction createIterResult(value\x2C done) {\x0d\n  return { value\x2C done };\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticRemoveListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.removeListener === 'function') {\x0d\n    emitter.removeListener(name\x2C listener);\x0d\n  } else if (typeof emitter.removeEventListener === 'function') {\x0d\n    emitter.removeEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction eventTargetAgnosticAddListener(emitter\x2C name\x2C listener\x2C flags) {\x0d\n  if (typeof emitter.on === 'function') {\x0d\n    if (flags?.once) {\x0d\n      emitter.once(name\x2C listener);\x0d\n    } else {\x0d\n      emitter.on(name\x2C listener);\x0d\n    }\x0d\n  } else if (typeof emitter.addEventListener === 'function') {\x0d\n    emitter.addEventListener(name\x2C listener\x2C flags);\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('emitter'\x2C 'EventEmitter'\x2C emitter);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an `AsyncIterator` that iterates `event` events.\x0d\n * @param {EventEmitter} emitter\x0d\n * @param {string | symbol} event\x0d\n * @param {{\x0d\n *    signal: AbortSignal;\x0d\n *    close?: string[];\x0d\n *    highWatermark?: number\x2C\x0d\n *    lowWatermark?: number\x0d\n *   }} [options]\x0d\n * @returns {AsyncIterator}\x0d\n */\x0d\nfunction on(emitter\x2C event\x2C options = kEmptyObject) {\x0d\n  // Parameters validation\x0d\n  const signal = options.signal;\x0d\n  validateAbortSignal(signal\x2C 'options.signal');\x0d\n  if (signal?.aborted)\x0d\n    throw new AbortError(undefined\x2C { cause: signal?.reason });\x0d\n  const highWatermark = options.highWatermark ?? NumberMAX_SAFE_INTEGER;\x0d\n  validateInteger(highWatermark\x2C 'options.highWatermark'\x2C 1);\x0d\n  const lowWatermark = options.lowWatermark ?? 1;\x0d\n  validateInteger(lowWatermark\x2C 'options.lowWatermark'\x2C 1);\x0d\n\x0d\n  // Preparing controlling queues and variables\x0d\n  FixedQueue ??= require('internal/fixed_queue');\x0d\n  const unconsumedEvents = new FixedQueue();\x0d\n  const unconsumedPromises = new FixedQueue();\x0d\n  let paused = false;\x0d\n  let error = null;\x0d\n  let finished = false;\x0d\n  let size = 0;\x0d\n\x0d\n  const iterator = ObjectSetPrototypeOf({\x0d\n    next() {\x0d\n      // First\x2C we consume all unread events\x0d\n      if (size) {\x0d\n        const value = unconsumedEvents.shift();\x0d\n        size--;\x0d\n        if (paused && size < lowWatermark) {\x0d\n          emitter.resume();\x0d\n          paused = false;\x0d\n        }\x0d\n        return PromiseResolve(createIterResult(value\x2C false));\x0d\n      }\x0d\n\x0d\n      // Then we error\x2C if an error happened\x0d\n      // This happens one time if at all\x2C because after 'error'\x0d\n      // we stop listening\x0d\n      if (error) {\x0d\n        const p = PromiseReject(error);\x0d\n        // Only the first element errors\x0d\n        error = null;\x0d\n        return p;\x0d\n      }\x0d\n\x0d\n      // If the iterator is finished\x2C resolve to done\x0d\n      if (finished) return closeHandler();\x0d\n\x0d\n      // Wait until an event happens\x0d\n      return new Promise(function(resolve\x2C reject) {\x0d\n        unconsumedPromises.push({ resolve\x2C reject });\x0d\n      });\x0d\n    }\x2C\x0d\n\x0d\n    return() {\x0d\n      return closeHandler();\x0d\n    }\x2C\x0d\n\x0d\n    throw(err) {\x0d\n      if (!err || !(err instanceof Error)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE('EventEmitter.AsyncIterator'\x2C\x0d\n                                       'Error'\x2C err);\x0d\n      }\x0d\n      errorHandler(err);\x0d\n    }\x2C\x0d\n    [SymbolAsyncIterator]() {\x0d\n      return this;\x0d\n    }\x2C\x0d\n    [kWatermarkData]: {\x0d\n      /**\x0d\n       * The current queue size\x0d\n       */\x0d\n      get size() {\x0d\n        return size;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * The low watermark. The emitter is resumed every time size is lower than it\x0d\n       */\x0d\n      get low() {\x0d\n        return lowWatermark;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * The high watermark. The emitter is paused every time size is higher than it\x0d\n       */\x0d\n      get high() {\x0d\n        return highWatermark;\x0d\n      }\x2C\x0d\n      /**\x0d\n       * It checks whether the emitter is paused by the watermark controller or not\x0d\n       */\x0d\n      get isPaused() {\x0d\n        return paused;\x0d\n      }\x2C\x0d\n    }\x2C\x0d\n  }\x2C AsyncIteratorPrototype);\x0d\n\x0d\n  // Adding event handlers\x0d\n  const { addEventListener\x2C removeAll } = listenersController();\x0d\n  kFirstEventParam ??= require('internal/events/symbols').kFirstEventParam;\x0d\n  addEventListener(emitter\x2C event\x2C options[kFirstEventParam] ? eventHandler : function(...args) {\x0d\n    return eventHandler(args);\x0d\n  });\x0d\n  if (event !== 'error' && typeof emitter.on === 'function') {\x0d\n    addEventListener(emitter\x2C 'error'\x2C errorHandler);\x0d\n  }\x0d\n  const closeEvents = options?.close;\x0d\n  if (closeEvents?.length) {\x0d\n    for (let i = 0; i < closeEvents.length; i++) {\x0d\n      addEventListener(emitter\x2C closeEvents[i]\x2C closeHandler);\x0d\n    }\x0d\n  }\x0d\n  if (signal) {\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    eventTargetAgnosticAddListener(\x0d\n      signal\x2C\x0d\n      'abort'\x2C\x0d\n      abortListener\x2C\x0d\n      { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n  }\x0d\n\x0d\n  return iterator;\x0d\n\x0d\n  function abortListener() {\x0d\n    errorHandler(new AbortError(undefined\x2C { cause: signal?.reason }));\x0d\n  }\x0d\n\x0d\n  function eventHandler(value) {\x0d\n    if (unconsumedPromises.isEmpty()) {\x0d\n      size++;\x0d\n      if (!paused && size > highWatermark) {\x0d\n        paused = true;\x0d\n        emitter.pause();\x0d\n      }\x0d\n      unconsumedEvents.push(value);\x0d\n    } else unconsumedPromises.shift().resolve(createIterResult(value\x2C false));\x0d\n  }\x0d\n\x0d\n  function errorHandler(err) {\x0d\n    if (unconsumedPromises.isEmpty()) error = err;\x0d\n    else unconsumedPromises.shift().reject(err);\x0d\n\x0d\n    closeHandler();\x0d\n  }\x0d\n\x0d\n  function closeHandler() {\x0d\n    removeAll();\x0d\n    finished = true;\x0d\n    const doneResult = createIterResult(undefined\x2C true);\x0d\n    while (!unconsumedPromises.isEmpty()) {\x0d\n      unconsumedPromises.shift().resolve(doneResult);\x0d\n    }\x0d\n\x0d\n    return PromiseResolve(doneResult);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction listenersController() {\x0d\n  const listeners = [];\x0d\n\x0d\n  return {\x0d\n    addEventListener(emitter\x2C event\x2C handler\x2C flags) {\x0d\n      eventTargetAgnosticAddListener(emitter\x2C event\x2C handler\x2C flags);\x0d\n      ArrayPrototypePush(listeners\x2C [emitter\x2C event\x2C handler\x2C flags]);\x0d\n    }\x2C\x0d\n    removeAll() {\x0d\n      while (listeners.length > 0) {\x0d\n        ReflectApply(eventTargetAgnosticRemoveListener\x2C undefined\x2C ArrayPrototypePop(listeners));\x0d\n      }\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nlet queueMicrotask;\x0d\n\x0d\nfunction addAbortListener(signal\x2C listener) {\x0d\n  if (signal === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  validateFunction(listener\x2C 'listener');\x0d\n\x0d\n  let removeEventListener;\x0d\n  if (signal.aborted) {\x0d\n    queueMicrotask ??= require('internal/process/task_queues').queueMicrotask;\x0d\n    queueMicrotask(() => listener());\x0d\n  } else {\x0d\n    kResistStopPropagation ??= require('internal/event_target').kResistStopPropagation;\x0d\n    // TODO(atlowChemi) add { subscription: true } and return directly\x0d\n    signal.addEventListener('abort'\x2C listener\x2C { __proto__: null\x2C once: true\x2C [kResistStopPropagation]: true });\x0d\n    removeEventListener = () => {\x0d\n      signal.removeEventListener('abort'\x2C listener);\x0d\n    };\x0d\n  }\x0d\n  return {\x0d\n    __proto__: null\x2C\x0d\n    [SymbolDispose]() {\x0d\n      removeEventListener?.();\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\n
code-source-info,0x7ff64c452d00,23,6744,6794,,,
tick,0x7ff863b9f25f,235958,0,0x0,0,0x7ff6cbdb21d0,0xc2df906ebf,0x7ff64c451e64,0x7ff6cc2dfcd7
code-creation,JS,11,235998,0x7ff64c452dc0,632,MixedEventEmitter node:internal/event_target:1165:16,0x2bb6ecbb070,^
code-source-info,0x7ff64c452dc0,48,32174,32308,,,
code-creation,JS,11,236056,0x7ff64c453080,192,<instance_members_initializer> node:internal/fs/promises:141:1,0x2bb6ec98768,^
code-source-info,0x7ff64c453080,94,3614,10002,,,
code-creation,JS,11,236945,0x7ff64c453180,1756,close node:internal/fs/promises:225:11,0x2bb6ec9a5f8,^
code-source-info,0x7ff64c453180,94,5360,6183,,,
code-creation,JS,11,237026,0x7ff64c453880,524,handleFdClose node:internal/fs/promises:413:29,0x2bb6ec96f58,^
code-source-info,0x7ff64c453880,94,10034,10388,,,
code-creation,JS,11,237087,0x7ff64c453ac0,484,checkAborted node:internal/fs/promises:458:22,0x2bb6ec97048,^
code-source-info,0x7ff64c453ac0,94,11192,11294,,,
code-creation,JS,11,237145,0x7ff64c453cc0,340,FastBuffer node:internal/buffer:960:14,0x3fcdef99ed0,^
code-source-info,0x7ff64c453cc0,25,27335,27426,,,
code-creation,JS,11,237196,0x7ff64c453e40,316,allocUnsafeSlow node:buffer:411:50,0x3fcdef94820,^
code-source-info,0x7ff64c453e40,24,12376,12471,,,
code-creation,JS,11,237256,0x7ff64c453fc0,552,createUnsafeBuffer node:internal/buffer:1061:28,0x3fcdef9a8b0,^
code-source-info,0x7ff64c453fc0,25,31378,31494,,,
code-creation,JS,11,237298,0x7ff64c454200,168, node:internal/per_context/primordials:472:21,0x23399f5fb8,^
code-source-info,0x7ff64c454200,6,14332,14381,,,
code-creation,JS,11,237340,0x7ff64c4542c0,296, node:internal/per_context/primordials:471:15,0x23399f5ee8,^
code-source-info,0x7ff64c4542c0,6,14301,14428,,,
code-creation,JS,11,237383,0x7ff64c454400,332, node:internal/per_context/primordials:468:43,0x23399f5dc0,^
code-source-info,0x7ff64c454400,6,14153,14434,,,
code-creation,JS,11,237425,0x7ff64c454580,304, node:internal/fs/promises:416:5,0xc2df907dd8,^
code-source-info,0x7ff64c454580,94,10120,10179,,,
code-creation,Script,10,237634,0xc2df91a20e,45, file:///C:/coding/soodocode/build/types.js:1:1,0xc2df91a0f0,~
script-source,105,file:///C:/coding/soodocode/build/types.js,export {};\n
code-source-info,0xc2df91a20e,105,0,11,C10O0C15O0C35O0C44O11,,
code-creation,Script,10,238434,0xc2df91c27e,157, file:///C:/coding/soodocode/build/utils.js:1:1,0xc2df91ad38,~
script-source,106,file:///C:/coding/soodocode/build/utils.js,export function getText(tokens) {\n    return tokens.map(t => t.text).join(" ");\n}\nexport function applyRangeTransformers(text\x2C ranges) {\n    let offset = 0;\n    for (const [range\x2C start\x2C end\x2C transformer_] of ranges) {\n        const transformer = transformer_ ?? (x => x);\n        const newRange = range.map(n => n + offset);\n        text = text.slice(0\x2C newRange[0]) + start + transformer(text.slice(...newRange)) + end + text.slice(newRange[1]);\n        offset += start.length;\n    }\n    return text;\n}\nexport function splitArray(arr\x2C split) {\n    const output = [[]];\n    if (typeof split == "function") {\n        for (let i = 0; i < arr.length; i++) {\n            if (split(arr[i]\x2C i\x2C arr))\n                output.push([]);\n            else\n                output.at(-1).push(arr[i]);\n        }\n    }\n    else {\n        for (const el of arr) {\n            if (el == split[0])\n                output.push([]);\n            else\n                output.at(-1).push(el);\n        }\n    }\n    return output;\n}\nexport function splitTokens(arr\x2C split) {\n    const output = [[]];\n    for (const el of arr) {\n        if (el.type == split)\n            output.push([]);\n        else\n            output.at(-1).push(el);\n    }\n    return output;\n}\nexport function splitTokensWithSplitter(arr\x2C split) {\n    const output = [{ group: [] }];\n    for (const el of arr) {\n        if (el.type == split) {\n            output.at(-1).splitter = el;\n            output.push({ group: [] });\n        }\n        else\n            output.at(-1).group.push(el);\n    }\n    return output;\n}\nexport function splitTokensOnComma(arr) {\n    const output = [[]];\n    let parenNestLevel = 0\x2C bracketNestLevel = 0;\n    for (const token of arr) {\n        if (token.type == "parentheses.open")\n            parenNestLevel++;\n        else if (token.type == "parentheses.close")\n            parenNestLevel--;\n        else if (token.type == "bracket.open")\n            bracketNestLevel++;\n        else if (token.type == "bracket.close")\n            bracketNestLevel--;\n        if (parenNestLevel == 0 && bracketNestLevel == 0 && token.type == "punctuation.comma")\n            output.push([]);\n        else\n            output.at(-1).push(token);\n    }\n    return output;\n}\nexport function findLastNotInGroup(arr\x2C target) {\n    let parenNestLevel = 0\x2C bracketNestLevel = 0;\n    for (const [i\x2C token] of [...arr.entries()].reverse()) {\n        if (token.type == "parentheses.open")\n            parenNestLevel++;\n        else if (token.type == "parentheses.close")\n            parenNestLevel--;\n        else if (token.type == "bracket.open")\n            bracketNestLevel++;\n        else if (token.type == "bracket.close")\n            bracketNestLevel--;\n        if (parenNestLevel == 0 && bracketNestLevel == 0 && token.type == target)\n            return i;\n    }\n    return null;\n}\nexport function getUniqueNamesFromCommaSeparatedTokenList(tokens\x2C nextToken\x2C validNames = ["name"]) {\n    const names = [];\n    let expected = "name";\n    for (const token of tokens) {\n        if (expected == "name") {\n            if (validNames.includes(token.type)) {\n                names.push(token);\n                expected = "comma";\n            }\n            else\n                fail(f.quote `Expected a name\x2C got ${token}`\x2C token);\n        }\n        else {\n            if (token.type == "punctuation.comma") {\n                expected = "name";\n            }\n            else\n                fail(f.quote `Expected a comma\x2C got ${token}`\x2C token);\n        }\n    }\n    if (expected == "name")\n        fail(`Expected a name\x2C found ${nextToken?.text ?? "end of input"}`\x2C nextToken);\n    if (new Set(names.map(t => t.text)).size !== names.length) {\n        const duplicateToken = names.find((a\x2C i) => names.find((b\x2C j) => a.text == b.text && i != j)) ?? crash(`Unable to find the duplicate name in ${names.join(" ")}`);\n        fail(f.quote `Duplicate name ${duplicateToken} in list`\x2C duplicateToken\x2C tokens);\n    }\n    return names;\n}\nexport function getTotalRange(tokens) {\n    if (tokens.length == 0)\n        crash(`Cannot get range from an empty list of tokens`);\n    return tokens.map(t => Array.isArray(t) ? t : (typeof t.range == "function" ? t.range() : t.range)).reduce((acc\x2C t) => [Math.min(acc[0]\x2C t[0])\x2C Math.max(acc[1]\x2C t[1])]\x2C [Infinity\x2C -Infinity]);\n}\nexport function isRange(input) {\n    return Array.isArray(input) && input.length == 2 && typeof input[0] == "number" && typeof input[1] == "number";\n}\nexport function getRange(input) {\n    if (!input)\n        return input;\n    if (isRange(input))\n        return input;\n    if (Array.isArray(input))\n        return getTotalRange(input);\n    if (typeof input.range == "function")\n        return input.range();\n    else\n        return input.range;\n}\nexport function findRange(args) {\n    for (const arg of args) {\n        if (typeof arg == "object" && arg != null && "range" in arg && isRange(arg.range))\n            return arg.range;\n        if (Array.isArray(arg) && isRange(arg[0]))\n            return getTotalRange(arg);\n        if (Array.isArray(arg) && arg.length > 0 && isRange(arg[0].range))\n            return getTotalRange(arg);\n    }\n    return undefined;\n}\nexport class SoodocodeError extends Error {\n    constructor(message\x2C rangeSpecific\x2C rangeGeneral\x2C rangeOther) {\n        super(message);\n        this.rangeSpecific = rangeSpecific;\n        this.rangeGeneral = rangeGeneral;\n        this.rangeOther = rangeOther;\n        this.modified = false;\n    }\n    formatMessage(text) {\n        return this.message.replace("$rc"\x2C this.rangeOther ? text.slice(...this.rangeOther) : `<empty>`).replace("$r"\x2C this.rangeSpecific ? (text.slice(...this.rangeSpecific) || "<empty>") :\n            this.rangeGeneral ? (text.slice(...this.rangeGeneral) || "<empty>") :\n                `<empty>`);\n    }\n}\nexport function fail(message\x2C rangeSpecific\x2C rangeGeneral) {\n    throw new SoodocodeError(message\x2C getRange(rangeSpecific)\x2C getRange(rangeGeneral));\n}\nexport function crash(message) {\n    throw new Error(message);\n}\nexport function impossible() {\n    throw new Error(`this shouldn't be possible...`);\n}\nexport function Abstract(input\x2C context) {\n    return class __temp extends input {\n        constructor(...args) {\n            super(...args);\n            if (this.constructor === __temp)\n                throw new Error(`Cannot construct abstract class ${input.name}`);\n        }\n    };\n}\nexport function errorBoundary({ predicate = (() => true)\x2C message } = {}) {\n    return function decorator(func\x2C _ctx) {\n        return function replacedFunction(...args) {\n            try {\n                return func.apply(this\x2C args);\n            }\n            catch (err) {\n                if (err instanceof SoodocodeError) {\n                    if (message && !err.modified) {\n                        err.message = message(...args) + err.message;\n                        err.rangeOther = findRange(args);\n                    }\n                    if (err.rangeSpecific === undefined)\n                        err.rangeSpecific = findRange(args);\n                    else if (err.rangeGeneral === undefined && predicate(...args)) {\n                        const _rangeGeneral = findRange(args);\n                        if (_rangeGeneral && err.rangeSpecific && (_rangeGeneral[0] == err.rangeSpecific[0] && _rangeGeneral[1] == err.rangeSpecific[1]))\n                            err.rangeGeneral = null;\n                        else\n                            err.rangeGeneral = _rangeGeneral;\n                    }\n                    err.modified = true;\n                }\n                throw err;\n            }\n        };\n    };\n}\nexport function escapeHTML(input) {\n    if (input == undefined)\n        return "";\n    return input.replaceAll(/&(?!(amp;)|(lt;)|(gt;))/g\x2C "&amp;").replaceAll("<"\x2C "&lt;").replaceAll(">"\x2C "&gt;");\n}\nexport function parseError(thing) {\n    if (thing instanceof Error) {\n        return thing.toString();\n    }\n    else if (typeof thing == "string") {\n        return thing;\n    }\n    else if (thing != null && typeof thing == "object" && "toString" in thing && typeof thing.toString == "function") {\n        return thing.toString();\n    }\n    else {\n        console.log("[[FINDTAG]] Unable to parse the following error object");\n        console.log(thing);\n        return "Unable to parse error object";\n    }\n}\nexport function* zip(...iters) {\n    while (true) {\n        const values = iters.map(i => i.next());\n        if (values.some(v => v.done))\n            break;\n        yield values.map(v => v.value);\n    }\n}\nexport function tagProcessor(transformer) {\n    return function (stringChunks\x2C ...varChunks) {\n        return String.raw({ raw: stringChunks }\x2C ...varChunks.map((chunk\x2C i) => transformer(chunk\x2C i\x2C stringChunks\x2C varChunks)));\n    };\n}\nfunction formatText(input) {\n    if (typeof input == "string")\n        return input;\n    else if (Array.isArray(input)) {\n        if (input[0] == "unresolved" && typeof input[1] == "string")\n            return input[1];\n        return input.map(formatText).join(" ");\n    }\n    else\n        return input.fmtText();\n}\nfunction formatQuoted(input) {\n    let str;\n    if (typeof input == "string")\n        str = input;\n    else if (Array.isArray(input)) {\n        if (input[0] == "unresolved" && typeof input[1] == "string")\n            str = input[1];\n        str = input.map(formatText).join(" ");\n    }\n    else\n        return input.fmtQuoted?.() ?? `"${input.fmtText()}"`;\n    if (str.length == 0)\n        str = `[empty]`;\n    return `${str}`;\n}\nfunction formatDebug(input) {\n    if (typeof input == "string")\n        return input;\n    else if (Array.isArray(input)) {\n        if (input[0] == "unresolved" && typeof input[1] == "string")\n            return `UnresolvedVariableType[${input[1]}]`;\n        return `[${input.map(formatDebug).join("\x2C ")}]`;\n    }\n    else\n        return input.fmtDebug();\n}\nexport const f = {\n    text: tagProcessor(formatText)\x2C\n    quote: tagProcessor(formatQuoted)\x2C\n    debug: tagProcessor(formatDebug)\x2C\n};\nexport function forceType(input) { }\n
code-source-info,0xc2df91c27e,106,0,10059,C10O0C45O0C65O0C72O5209C99O5180C102O9904C107O9916C114O9916C122O9953C126O9953C134O9992C141O9992C151O9904C156O10059,,
code-creation,Script,10,239914,0xc2df91febe,212, file:///C:/coding/soodocode/build/lexer.js:1:1,0xc2df91e500,~
script-source,107,file:///C:/coding/soodocode/build/lexer.js,import { Symbol\x2C Token } from "./lexer-types.js";\nimport { crash\x2C f\x2C fail\x2C impossible } from "./utils.js";\nexport const symbolTypeData = [\n    [/<-{1\x2C2}/\x2C "operator.assignment"]\x2C\n    [">="\x2C "operator.greater_than_equal"]\x2C\n    ["<="\x2C "operator.less_than_equal"]\x2C\n    ["<>"\x2C "operator.not_equal_to"]\x2C\n    ["//"\x2C "comment.singleline"]\x2C\n    ["/*"\x2C "comment.multiline.open"]\x2C\n    ["*/"\x2C "comment.multiline.close"]\x2C\n    ["="\x2C "operator.equal_to"]\x2C\n    [">"\x2C "operator.greater_than"]\x2C\n    ["<"\x2C "operator.less_than"]\x2C\n    ["+"\x2C "operator.add"]\x2C\n    ["-"\x2C "operator.minus"]\x2C\n    ["*"\x2C "operator.multiply"]\x2C\n    ["/"\x2C "operator.divide"]\x2C\n    ["^"\x2C "operator.pointer"]\x2C\n    ["&"\x2C "operator.string_concatenate"]\x2C\n    ["("\x2C "parentheses.open"]\x2C\n    [")"\x2C "parentheses.close"]\x2C\n    ["["\x2C "bracket.open"]\x2C\n    ["]"\x2C "bracket.close"]\x2C\n    ["{"\x2C "brace.open"]\x2C\n    ["}"\x2C "brace.close"]\x2C\n    ["'"\x2C "quote.single"]\x2C\n    ["\\""\x2C "quote.double"]\x2C\n    [":"\x2C "punctuation.colon"]\x2C\n    [";"\x2C "punctuation.semicolon"]\x2C\n    ["\x2C"\x2C "punctuation.comma"]\x2C\n    ["."\x2C "punctuation.period"]\x2C\n    [" "\x2C "space"]\x2C\n    ["\\t"\x2C "space"]\x2C\n    ["\\n"\x2C "newline"]\x2C\n    [["isNumber"]\x2C "numeric_fragment"]\x2C\n    [["isAlphanumeric"]\x2C "word"]\x2C\n    [/^./u\x2C "unknown"]\x2C\n];\nexport const tokenNameTypeData = ((d) => d)({\n    "AND": "operator.and"\x2C\n    "APPEND": "keyword.file_mode.append"\x2C\n    "ARRAY": "keyword.array"\x2C\n    "BYREF": "keyword.pass_mode.by_reference"\x2C\n    "BYVAL": "keyword.pass_mode.by_value"\x2C\n    "CALL": "keyword.call"\x2C\n    "CASE": "keyword.case"\x2C\n    "CLASS": "keyword.class"\x2C\n    "CLOSEFILE": "keyword.close_file"\x2C\n    "CONSTANT": "keyword.constant"\x2C\n    "DECLARE": "keyword.declare"\x2C\n    "DEFINE": "keyword.define"\x2C\n    "DIV": "operator.integer_divide"\x2C\n    "ELSE": "keyword.else"\x2C\n    "ENDCASE": "keyword.case_end"\x2C\n    "ENDCLASS": "keyword.class_end"\x2C\n    "ENDFUNCTION": "keyword.function_end"\x2C\n    "ENDIF": "keyword.if_end"\x2C\n    "ENDPROCEDURE": "keyword.procedure_end"\x2C\n    "ENDTYPE": "keyword.type_end"\x2C\n    "ENDWHILE": "keyword.while_end"\x2C\n    "FALSE": "boolean.false"\x2C\n    "FOR": "keyword.for"\x2C\n    "FUNCTION": "keyword.function"\x2C\n    "GETRECORD": "keyword.get_record"\x2C\n    "IF": "keyword.if"\x2C\n    "INHERITS": "keyword.inherits"\x2C\n    "INPUT": "keyword.input"\x2C\n    "MOD": "operator.mod"\x2C\n    "NEW": "keyword.new"\x2C\n    "NEXT": "keyword.for_end"\x2C\n    "NOT": "operator.not"\x2C\n    "OF": "keyword.of"\x2C\n    "OPENFILE": "keyword.open_file"\x2C\n    "OR": "operator.or"\x2C\n    "OTHERWISE": "keyword.otherwise"\x2C\n    "OUTPUT": "keyword.output"\x2C\n    "PRIVATE": "keyword.class_modifier.private"\x2C\n    "PROCEDURE": "keyword.procedure"\x2C\n    "PUBLIC": "keyword.class_modifier.public"\x2C\n    "PUTRECORD": "keyword.put_record"\x2C\n    "RANDOM": "keyword.file_mode.random"\x2C\n    "READ": "keyword.file_mode.read"\x2C\n    "READFILE": "keyword.read_file"\x2C\n    "REPEAT": "keyword.dowhile"\x2C\n    "RETURN": "keyword.return"\x2C\n    "RETURNS": "keyword.returns"\x2C\n    "SEEK": "keyword.seek"\x2C\n    "SET": "keyword.set"\x2C\n    "STEP": "keyword.step"\x2C\n    "SUPER": "keyword.super"\x2C\n    "THEN": "keyword.then"\x2C\n    "TO": "keyword.to"\x2C\n    "TRUE": "boolean.true"\x2C\n    "TYPE": "keyword.type"\x2C\n    "UNTIL": "keyword.dowhile_end"\x2C\n    "WHILE": "keyword.while"\x2C\n    "WRITE": "keyword.file_mode.write"\x2C\n    "WRITEFILE": "keyword.write_file"\x2C\n});\nclass SymbolizerIO {\n    constructor(string\x2C offset = 0) {\n        this.string = string;\n        this.offset = offset;\n        this.lastMatched = null;\n        this.lastMatchedRange = null;\n        this.output = [];\n    }\n    inc(amount) {\n        this.offset += amount;\n    }\n    at() {\n        return this.string[this.offset];\n    }\n    cons(input) {\n        if (input instanceof RegExp) {\n            const matchData = input.exec(this.string.slice(this.offset));\n            if (matchData == null || matchData.index != 0)\n                return false;\n            this.lastMatched = matchData[0];\n            this.lastMatchedRange = [this.offset\x2C this.offset + matchData[0].length];\n            this.offset += matchData[0].length;\n            return true;\n        }\n        else {\n            if (this.string.slice(this.offset\x2C this.offset + input.length) == input) {\n                this.lastMatched = input;\n                this.lastMatchedRange = [this.offset\x2C this.offset + input.length];\n                this.offset += input.length;\n                return true;\n            }\n            else\n                return false;\n        }\n    }\n    has() {\n        return this.string[this.offset] != undefined;\n    }\n    read() {\n        this.lastMatchedRange ?? (this.lastMatchedRange = [this.offset\x2C this.offset]);\n        this.lastMatched ?? (this.lastMatched = "");\n        this.lastMatchedRange[1]++;\n        this.lastMatched += this.string[this.offset++];\n        return this.string[this.offset - 1];\n    }\n    length() {\n        return this.string.length;\n    }\n    writeText(type\x2C text\x2C range) {\n        this.output.push(new Symbol(type\x2C text\x2C range));\n    }\n    write(type) {\n        if (!this.lastMatched || !this.lastMatchedRange)\n            crash(`Cannot write symbol\x2C no stored match`);\n        this.output.push(new Symbol(type\x2C this.lastMatched\x2C this.lastMatchedRange.slice()));\n        this.lastMatched = this.lastMatchedRange = null;\n    }\n    isNumber() {\n        if (!this.has())\n            return false;\n        const code = this.at().charCodeAt(0);\n        return (code >= 48 && code <= 57);\n    }\n    isAlphanumeric() {\n        if (!this.has())\n            return false;\n        const code = this.at().charCodeAt(0);\n        return (code >= 48 && code <= 57) ||\n            (code >= 65 && code <= 90) ||\n            (code >= 97 && code <= 122) || code === 95;\n    }\n}\nSymbolizerIO.prototype;\nexport function symbolize(input) {\n    const str = new SymbolizerIO(input);\n    toNextCharacter: while (str.has()) {\n        for (const [identifier\x2C symbolType] of symbolTypeData) {\n            if (typeof identifier == "string" || identifier instanceof RegExp) {\n                if (str.cons(identifier)) {\n                    str.write(symbolType);\n                    continue toNextCharacter;\n                }\n            }\n            else {\n                const func = SymbolizerIO.prototype[identifier[0]];\n                if (func.call(str)) {\n                    do {\n                        str.read();\n                    } while (func.call(str));\n                    str.write(symbolType);\n                    continue toNextCharacter;\n                }\n            }\n        }\n        impossible();\n    }\n    return {\n        program: input\x2C\n        symbols: str.output\n    };\n}\nexport function tokenize(input) {\n    const tokens = [];\n    const state = {\n        sComment: null\x2C\n        mComment: null\x2C\n        sString: null\x2C\n        dString: null\x2C\n        decimalNumber: "none"\x2C\n    };\n    let currentString = "";\n    let symbol;\n    for (symbol of input.symbols) {\n        if (state.decimalNumber == "allowDecimal" && symbol.type !== "punctuation.period")\n            state.decimalNumber = "none";\n        if (state.sComment) {\n            if (symbol.type === "newline") {\n                state.sComment = null;\n                symbol.type;\n                tokens.push(symbol.toToken());\n            }\n        }\n        else if (symbol.type === "comment.multiline.close") {\n            if (state.mComment)\n                state.mComment = null;\n            else\n                fail(`Cannot close multiline comment\x2C no open multiline comment`\x2C symbol);\n        }\n        else if (state.mComment) {\n        }\n        else if (state.sString) {\n            currentString += symbol.text;\n            if (symbol.type === "quote.single") {\n                state.sString = null;\n                if (currentString.length != 3)\n                    fail(`Character ${currentString} has an invalid length: expected one character`\x2C [symbol.range[1] - currentString.length\x2C symbol.range[1]]);\n                tokens.push(new Token("char"\x2C currentString\x2C [symbol.range[1] - 3\x2C symbol.range[1]]));\n                currentString = "";\n            }\n        }\n        else if (state.dString) {\n            currentString += symbol.text;\n            if (symbol.type === "quote.double") {\n                state.dString = null;\n                tokens.push(new Token("string"\x2C currentString\x2C [symbol.range[1] - currentString.length\x2C symbol.range[1]]));\n                currentString = "";\n            }\n        }\n        else if (symbol.type === "comment.singleline")\n            state.sComment = symbol;\n        else if (symbol.type === "comment.multiline.open")\n            state.mComment = symbol;\n        else if (state.decimalNumber == "requireNumber") {\n            const num = tokens.at(-1) ?? impossible();\n            if (symbol.type == "numeric_fragment") {\n                num.text += "." + symbol.text;\n                num.range[1] += (1 + symbol.text.length);\n                if (isNaN(Number(num.text)))\n                    crash(f.quote `Invalid parsed number ${symbol}`);\n                state.decimalNumber = "none";\n            }\n            else\n                fail(`Expected a number to follow "${num.text}."\x2C but found ${symbol.type}`\x2C symbol);\n        }\n        else if (state.decimalNumber == "allowDecimal" && symbol.type == "punctuation.period") {\n            state.decimalNumber = "requireNumber";\n        }\n        else if (symbol.type === "quote.single") {\n            state.sString = symbol;\n            currentString += symbol.text;\n        }\n        else if (symbol.type === "quote.double") {\n            state.dString = symbol;\n            currentString += symbol.text;\n        }\n        else if (symbol.type === "space")\n            void 0;\n        else if (symbol.type === "unknown")\n            fail(f.quote `Invalid character ${symbol}`\x2C symbol);\n        else if (symbol.type === "numeric_fragment") {\n            state.decimalNumber = "allowDecimal";\n            if (isNaN(Number(symbol.text)))\n                crash(`Invalid parsed number ${symbol.text}`);\n            tokens.push(new Token("number.decimal"\x2C symbol.text\x2C symbol.range.slice()));\n        }\n        else if (symbol.type === "word") {\n            write(tokenNameTypeData[symbol.text] ?? "name");\n        }\n        else {\n            symbol.type;\n            tokens.push(symbol.toToken());\n        }\n    }\n    if (state.mComment)\n        fail(`Unclosed multiline comment`\x2C state.mComment);\n    if (state.dString)\n        fail(`Unclosed double-quoted string`\x2C state.dString);\n    if (state.sString)\n        fail(`Unclosed single-quoted string`\x2C state.sString);\n    if (state.decimalNumber == "requireNumber")\n        fail(`Expected a numeric fragment\x2C but found end of input`\x2C input.symbols.at(-1).rangeAfter());\n    return {\n        program: input.program\x2C\n        tokens\n    };\n    function write(type) {\n        tokens.push(new Token(type\x2C symbol.text\x2C symbol.range.slice()));\n    }\n}\n
code-source-info,0xc2df91febe,107,0,10862,C10O0C31O0C51O0C55O137C111O137C114O1257C124O1267C128O1257C201O3261C203O5654C206O5667C211O10862,,
code-creation,JS,10,240677,0xc2df920026,3, file:///C:/coding/soodocode/build/lexer.js:39:35,0xc2df91eb18,~
code-source-info,0xc2df920026,107,1258,1266,C0O1265C2O1266,,
code-creation,Script,10,241863,0xc2df9223ee,194, file:///C:/coding/soodocode/build/lexer-types.js:1:1,0xc2df921070,~
script-source,108,file:///C:/coding/soodocode/build/lexer-types.js,import { crash\x2C getRange\x2C getTotalRange } from "./utils.js";\nexport const symbolTypes = [\n    "numeric_fragment"\x2C\n    "quote.single"\x2C "quote.double"\x2C\n    "brace.open"\x2C "brace.close"\x2C\n    "bracket.open"\x2C "bracket.close"\x2C\n    "parentheses.open"\x2C "parentheses.close"\x2C\n    "punctuation.colon"\x2C "punctuation.semicolon"\x2C "punctuation.comma"\x2C "punctuation.period"\x2C\n    "comment.singleline"\x2C "comment.multiline.open"\x2C "comment.multiline.close"\x2C\n    "word"\x2C\n    "unknown"\x2C\n    "space"\x2C\n    "newline"\x2C\n    "operator.add"\x2C "operator.minus"\x2C "operator.multiply"\x2C "operator.divide"\x2C "operator.mod"\x2C "operator.integer_divide"\x2C "operator.and"\x2C "operator.or"\x2C "operator.not"\x2C "operator.equal_to"\x2C "operator.not_equal_to"\x2C "operator.less_than"\x2C "operator.greater_than"\x2C "operator.less_than_equal"\x2C "operator.greater_than_equal"\x2C "operator.assignment"\x2C "operator.pointer"\x2C "operator.string_concatenate"\n];\nexport class Symbol {\n    constructor(type\x2C text\x2C range) {\n        this.type = type;\n        this.text = text;\n        this.range = range;\n    }\n    toToken() {\n        return new Token(TokenType(this.type)\x2C this.text\x2C this.range);\n    }\n    fmtDebug() {\n        return `Symbol [${this.type} ${this.text}]`;\n    }\n    fmtText() {\n        return this.text;\n    }\n    clearRange() {\n        this.range = [-1\x2C -1];\n        return this;\n    }\n    rangeBefore() {\n        return [this.range[0] - 1\x2C this.range[0]];\n    }\n    rangeAfter() {\n        return [this.range[1]\x2C this.range[1] + 1];\n    }\n}\nexport function symbol(type\x2C text) {\n    if (Array.isArray(type))\n        return new Symbol(type[0]\x2C type[1]\x2C [-1\x2C -1]);\n    else\n        return new Symbol(type\x2C text\x2C [-1\x2C -1]);\n}\nexport const tokenTypes = [\n    "number.decimal"\x2C\n    "string"\x2C "char"\x2C\n    "brace.open"\x2C "brace.close"\x2C\n    "bracket.open"\x2C "bracket.close"\x2C\n    "parentheses.open"\x2C "parentheses.close"\x2C\n    "punctuation.colon"\x2C "punctuation.semicolon"\x2C "punctuation.comma"\x2C "punctuation.period"\x2C\n    "comment"\x2C\n    "name"\x2C\n    "boolean.true"\x2C "boolean.false"\x2C\n    "keyword.declare"\x2C "keyword.define"\x2C "keyword.constant"\x2C "keyword.output"\x2C "keyword.input"\x2C "keyword.call"\x2C\n    "keyword.if"\x2C "keyword.then"\x2C "keyword.else"\x2C "keyword.if_end"\x2C\n    "keyword.for"\x2C "keyword.to"\x2C "keyword.for_end"\x2C "keyword.step"\x2C\n    "keyword.while"\x2C "keyword.while_end"\x2C "keyword.dowhile"\x2C "keyword.dowhile_end"\x2C\n    "keyword.function"\x2C "keyword.function_end"\x2C "keyword.procedure"\x2C "keyword.procedure_end"\x2C "keyword.return"\x2C "keyword.returns"\x2C "keyword.pass_mode.by_reference"\x2C "keyword.pass_mode.by_value"\x2C\n    "keyword.type"\x2C "keyword.type_end"\x2C\n    "keyword.open_file"\x2C "keyword.read_file"\x2C "keyword.write_file"\x2C "keyword.close_file"\x2C\n    "keyword.get_record"\x2C "keyword.put_record"\x2C "keyword.seek"\x2C\n    "keyword.file_mode.read"\x2C "keyword.file_mode.write"\x2C "keyword.file_mode.append"\x2C "keyword.file_mode.random"\x2C\n    "keyword.case"\x2C "keyword.of"\x2C "keyword.case_end"\x2C "keyword.otherwise"\x2C\n    "keyword.class"\x2C "keyword.class_end"\x2C "keyword.new"\x2C "keyword.super"\x2C "keyword.inherits"\x2C\n    "keyword.class_modifier.private"\x2C "keyword.class_modifier.public"\x2C\n    "keyword.array"\x2C "keyword.set"\x2C\n    "newline"\x2C\n    "operator.add"\x2C "operator.minus"\x2C "operator.multiply"\x2C "operator.divide"\x2C "operator.mod"\x2C "operator.integer_divide"\x2C "operator.and"\x2C "operator.or"\x2C "operator.not"\x2C "operator.equal_to"\x2C "operator.not_equal_to"\x2C "operator.less_than"\x2C "operator.greater_than"\x2C "operator.less_than_equal"\x2C "operator.greater_than_equal"\x2C "operator.assignment"\x2C "operator.pointer"\x2C "operator.string_concatenate"\n];\nexport function TokenType(input) {\n    if (tokenTypes.includes(input))\n        return input;\n    crash(`"${input}" is not a valid token type`);\n}\nexport class Token {\n    constructor(type\x2C text\x2C range) {\n        this.type = type;\n        this.text = text;\n        this.range = range;\n    }\n    fmtText() {\n        return this.text;\n    }\n    fmtDebug() {\n        return `Token [${this.type} ${this.text}]`;\n    }\n    clone() {\n        return new Token(this.type\x2C this.text\x2C this.range);\n    }\n    extendRange(other) {\n        this.range = getTotalRange([getRange(other)\x2C this]);\n        return this;\n    }\n    clearRange() {\n        this.range = [-1\x2C -1];\n        return this;\n    }\n    rangeBefore() {\n        return [this.range[0] - 1\x2C this.range[0]];\n    }\n    rangeAfter() {\n        return [this.range[1]\x2C this.range[1] + 1];\n    }\n}\nexport function token(type\x2C text) {\n    if (Array.isArray(type))\n        return new Token(type[0]\x2C type[1]\x2C [-1\x2C -1]);\n    else\n        return new Token(type\x2C text\x2C [-1\x2C -1]);\n}\n
code-source-info,0xc2df9223ee,108,0,4544,C10O0C28O0C48O0C55O88C59O88C112O895C115O1689C119O1689C188O3681C193O4544,,
code-creation,Script,10,243534,0xc2df92560e,253, file:///C:/coding/soodocode/build/parser.js:1:1,0xc2df924058,~
script-source,109,file:///C:/coding/soodocode/build/parser.js,import { Token } from "./lexer-types.js";\nimport { ExpressionASTArrayAccessNode\x2C ExpressionASTArrayTypeNode\x2C ExpressionASTBranchNode\x2C ExpressionASTClassInstantiationNode\x2C ExpressionASTFunctionCallNode\x2C operators\x2C operatorsByPriority\x2C ProgramASTBranchNode\x2C ProgramASTBranchNodeType } from "./parser-types.js";\nimport { PrimitiveVariableType } from "./runtime-types.js";\nimport { CaseBranchRangeStatement\x2C CaseBranchStatement\x2C statements } from "./statements.js";\nimport { crash\x2C errorBoundary\x2C f\x2C fail\x2C findLastNotInGroup\x2C impossible\x2C SoodocodeError\x2C splitTokens\x2C splitTokensOnComma\x2C splitTokensWithSplitter } from "./utils.js";\nexport const parseFunctionArguments = errorBoundary()((tokens) => {\n    if (tokens.length == 0)\n        return new Map();\n    let passMode = "value";\n    let type = null;\n    const argumentz = splitTokens(tokens\x2C "punctuation.comma").map(section => {\n        let passMode;\n        let type;\n        let offset = 0;\n        if (section[0]?.type == "keyword.pass_mode.by_reference") {\n            offset = 1;\n            passMode = "reference";\n        }\n        else if (section[0]?.type == "keyword.pass_mode.by_value") {\n            offset = 1;\n            passMode = "value";\n        }\n        else\n            passMode = null;\n        if (section[offset + 0]?.type != "name")\n            fail(f.quote `Expected a name\x2C got ${section[offset + 0] ?? "end of function arguments"}`\x2C section[offset + 0] ?? (section[offset - 1] ?? tokens.at(-1)).rangeAfter());\n        if (section.length == offset + 1) {\n            type = null;\n        }\n        else {\n            if (section[offset + 1]?.type != "punctuation.colon")\n                fail(f.quote `Expected a colon\x2C got ${section[offset + 1] ?? "end of function arguments"}`\x2C section[offset + 1] ?? (section[offset + 0] ?? tokens.at(-1)).rangeAfter());\n            type = processTypeData(parseType(section.slice(offset + 2)));\n        }\n        return [\n            section[offset + 0]\x2C\n            { passMode\x2C type }\n        ];\n    })\n        .map(([name\x2C data]) => [name\x2C {\n            passMode: data.passMode ? passMode = data.passMode : passMode\x2C\n            type: data.type\n        }])\n        .reverse()\n        .map(([name\x2C data]) => [name\x2C {\n            passMode: data.passMode\x2C\n            type: data.type ? type = data.type : type ?? fail(f.quote `Type not specified for function argument ${name}`\x2C name)\n        }])\n        .reverse();\n    const argumentsMap = new Map(argumentz.map(([name\x2C data]) => [name.text\x2C data]));\n    if (argumentsMap.size != argumentz.length) {\n        const [duplicateArgument] = argumentz.find((a\x2C i) => argumentz.find((b\x2C j) => a[0].text == b[0].text && i != j)) ??\n            crash(f.debug `Unable to find the duplicate function argument in ${tokens}`);\n        fail(f.quote `Duplicate function argument ${duplicateArgument}`\x2C duplicateArgument);\n    }\n    return argumentsMap;\n});\nexport const processTypeData = errorBoundary()((typeNode) => {\n    if (typeNode instanceof Token) {\n        return PrimitiveVariableType.get(typeNode.text) ?? ["unresolved"\x2C typeNode.text];\n    }\n    else\n        return typeNode.toData();\n});\nexport const parseType = errorBoundary()((tokens) => {\n    if (tokens.length == 1) {\n        if (tokens[0].type == "name")\n            return tokens[0];\n        else\n            fail(f.quote `Cannot parse type from ${tokens}`);\n    }\n    if (!(tokens[0]?.type == "keyword.array" &&\n        tokens[1]?.type == "bracket.open" &&\n        tokens.at(-2)?.type == "keyword.of" &&\n        tokens.at(-1)?.type == "name"))\n        fail(f.quote `Cannot parse type from ${tokens}`);\n    return new ExpressionASTArrayTypeNode(splitTokensWithSplitter(tokens.slice(2\x2C -3)\x2C "punctuation.comma").map(({ group\x2C splitter }) => {\n        if (group.length != 3)\n            fail(f.quote `Invalid array range specifier ${group}`\x2C group.length ? group : splitter);\n        if (group[0].type != "number.decimal")\n            fail(f.quote `Expected a number\x2C got ${group[0]}`\x2C group[0]);\n        if (group[1].type != "punctuation.colon")\n            fail(f.quote `Expected a colon\x2C got ${group[1]}`\x2C group[1]);\n        if (group[2].type != "number.decimal")\n            fail(f.quote `Expected a number\x2C got ${group[2]}`\x2C group[2]);\n        return [group[0]\x2C group[2]];\n    })\x2C tokens.at(-1)\x2C tokens);\n});\nexport function splitTokensToStatements(tokens) {\n    const statementData = [\n        [CaseBranchStatement\x2C 2]\x2C\n        [CaseBranchStatement\x2C 3]\x2C\n        [CaseBranchRangeStatement\x2C 4]\x2C\n        [CaseBranchRangeStatement\x2C 5]\x2C\n        [CaseBranchRangeStatement\x2C 6]\x2C\n    ];\n    return splitTokens(tokens\x2C "newline").map(ts => {\n        for (const [statement\x2C length] of statementData) {\n            if (ts.length > length && Array.isArray(checkStatement(statement\x2C ts.slice(0\x2C length))))\n                return [ts.slice(0\x2C length)\x2C ts.slice(length)];\n        }\n        return [ts];\n    }).flat(1).filter(ts => ts.length > 0);\n}\nexport function parse({ program\x2C tokens }) {\n    const lines = splitTokensToStatements(tokens);\n    const programNodes = [];\n    function getActiveBuffer() {\n        if (blockStack.length == 0)\n            return programNodes;\n        else\n            return blockStack.at(-1).nodeGroups.at(-1);\n    }\n    const blockStack = [];\n    for (const line of lines) {\n        const statement = parseStatement(line\x2C blockStack.at(-1) ?? null);\n        if (statement.category == "normal") {\n            getActiveBuffer().push(statement);\n        }\n        else if (statement.category == "block") {\n            const node = new ProgramASTBranchNode(ProgramASTBranchNodeType(statement.stype)\x2C [statement]\x2C [[]]);\n            getActiveBuffer().push(node);\n            blockStack.push(node);\n        }\n        else if (statement.category == "block_end") {\n            const lastNode = blockStack.at(-1);\n            if (!lastNode)\n                fail(`Unexpected statement: no open blocks`\x2C statement);\n            else if (statement instanceof lastNode.controlStatements[0].type.blockEndStatement()) {\n                lastNode.controlStatements.push(statement);\n                lastNode.controlStatements[0].type.checkBlock(lastNode);\n                blockStack.pop();\n            }\n            else\n                fail(f.quote `Unexpected statement: current block is of type ${lastNode.controlStatements[0].stype}`\x2C statement\x2C null);\n        }\n        else if (statement.category == "block_multi_split") {\n            const lastNode = blockStack.at(-1);\n            if (!lastNode)\n                fail(`Unexpected statement: ${statement.stype} statements must be inside a block`\x2C statement\x2C null);\n            let errorMessage;\n            if ((errorMessage = lastNode.controlStatements[0].type.supportsSplit(lastNode\x2C statement)) !== true)\n                fail(`Unexpected statement: ${errorMessage}`\x2C statement\x2C null);\n            lastNode.controlStatements.push(statement);\n            lastNode.nodeGroups.push([]);\n        }\n        else\n            statement.category;\n    }\n    if (blockStack.length)\n        fail(f.quote `There were unclosed blocks: ${blockStack.at(-1).controlStatements[0]} requires a matching ${blockStack.at(-1).controlStatements[0].type.blockEndStatement().type} statement`\x2C blockStack.at(-1).controlStatements[0]\x2C null);\n    return {\n        program\x2C\n        nodes: programNodes\n    };\n}\nexport function getPossibleStatements(tokens\x2C context) {\n    const ctx = context?.controlStatements[0].type;\n    let validStatements = (tokens[0].type in statements.byStartKeyword\n        ? statements.byStartKeyword[tokens[0].type]\n        : statements.irregular);\n    if (ctx?.allowOnly) {\n        const allowedValidStatements = validStatements.filter(s => ctx.allowOnly?.has(s.type));\n        if (allowedValidStatements.length == 0) {\n            fail(`No valid statement definitions\\nInput could have been ${validStatements.map(s => `"${s.type}"`).join(" or ")}\x2C but the only statements allowed in block ${context.type} are ${[...ctx.allowOnly].map(s => `"${s}"`).join(" or ")}`);\n        }\n        else\n            validStatements = allowedValidStatements;\n    }\n    validStatements = validStatements.filter(s => !s.blockType || s.blockType == context?.type.split(".")[0]);\n    if (validStatements.length == 0) {\n        fail(`No valid statement definitions`);\n    }\n    return validStatements;\n}\nexport const parseStatement = errorBoundary()((tokens\x2C context) => {\n    if (tokens.length < 1)\n        crash("Empty statement");\n    const possibleStatements = getPossibleStatements(tokens\x2C context);\n    const errors = [];\n    for (const possibleStatement of possibleStatements) {\n        const result = checkStatement(possibleStatement\x2C tokens);\n        if (Array.isArray(result)) {\n            try {\n                return new possibleStatement(result.map(x => x instanceof Token\n                    ? x\n                    : (x.type == "expression" ? parseExpression : parseType)(tokens.slice(x.start\x2C x.end + 1))));\n            }\n            catch (err) {\n                if (err instanceof SoodocodeError)\n                    errors.push({\n                        message: err.message\x2C\n                        priority: 10\x2C\n                        range: err.rangeSpecific ?? null\x2C\n                        err\n                    });\n                else\n                    throw err;\n            }\n        }\n        else {\n            if (possibleStatement.suppressErrors)\n                result.priority = 0;\n            errors.push(result);\n        }\n    }\n    let maxError = errors[0];\n    for (const error of errors) {\n        if (error.priority >= maxError.priority)\n            maxError = error;\n    }\n    if (maxError.err)\n        throw maxError.err;\n    else\n        fail(maxError.message\x2C maxError.range\x2C tokens);\n});\nexport function isLiteral(type) {\n    switch (type) {\n        case "boolean.false":\n        case "boolean.true":\n        case "number.decimal":\n        case "string":\n        case "char":\n            return true;\n        default: return false;\n    }\n}\nexport const checkStatement = errorBoundary()((statement\x2C input) => {\n    if (input.length == 0)\n        crash(`checkStatement() called with empty input`);\n    if (statement.category == "block_multi_split" && !statement.blockType)\n        crash(`block_multi_split statements must have a block type specified.`);\n    const output = [];\n    let i\x2C j;\n    for (i = (statement.tokens[0] == "#") ? 1 : 0\x2C j = 0; i < statement.tokens.length; i++) {\n        if (statement.tokens[i] == ".+" || statement.tokens[i] == ".*" || statement.tokens[i] == "expr+" || statement.tokens[i] == "type+") {\n            const allowEmpty = statement.tokens[i] == ".*";\n            const start = j;\n            if (j >= input.length) {\n                if (allowEmpty)\n                    continue;\n                else\n                    return {\n                        message: statement.tokens[i] == ".+" ? `Expected something\x2C got end of line` :\n                            statement.tokens[i] == "expr+" ? `Expected an expression\x2C got end of line` :\n                                statement.tokens[i] == "type+" ? `Expected a type\x2C got end of line` :\n                                    impossible()\x2C\n                        priority: 4\x2C\n                        range: input.at(-1).rangeAfter()\n                    };\n            }\n            let anyTokensSkipped = false;\n            while (statement.tokens[i + 1] != input[j].type) {\n                anyTokensSkipped = true;\n                j++;\n                if (j >= input.length) {\n                    if (i == statement.tokens.length - 1)\n                        break;\n                    return { message: `Expected a ${statement.tokens[i + 1]}\x2C got end of line`\x2C priority: 4\x2C range: input.at(-1).rangeAfter() };\n                }\n            }\n            const end = j - 1;\n            if (!anyTokensSkipped && !allowEmpty)\n                return {\n                    message: statement.tokens[i] == ".+" ? `Expected something before this token` :\n                        statement.tokens[i] == "expr+" ? `Expected an expression before this token` :\n                            statement.tokens[i] == "type+" ? `Expected a type before this token` :\n                                impossible()\x2C\n                    priority: 6\x2C\n                    range: input[j].range\n                };\n            if (statement.tokens[i] == "expr+")\n                output.push({ type: "expression"\x2C start\x2C end });\n            else if (statement.tokens[i] == "type+")\n                output.push({ type: "type"\x2C start\x2C end });\n            else\n                output.push(...input.slice(start\x2C end + 1));\n        }\n        else {\n            if (j >= input.length)\n                return { message: `Expected ${statement.tokens[i]}\x2C found end of line`\x2C priority: 4\x2C range: input.at(-1).rangeAfter() };\n            if (statement.tokens[i] == "#")\n                impossible();\n            else if (statement.tokens[i] == "." || statement.tokens[i] == input[j].type || (statement.tokens[i] == "file_mode" && input[j].type.startsWith("keyword.file_mode.")) || (statement.tokens[i] == "class_modifier" && input[j].type.startsWith("keyword.class_modifier.")) || (statement.tokens[i] == "name" && input[j].type == "keyword.new")) {\n                output.push(input[j]);\n                j++;\n            }\n            else if (statement.tokens[i] == "literal" || statement.tokens[i] == "literal|otherwise") {\n                if (isLiteral(input[j].type) || (statement.tokens[i] == "literal|otherwise" && input[j].type == "keyword.otherwise"))\n                    output.push(input[j++]);\n                else if (input[j].type == "operator.minus" && j + 1 < input.length && input[j + 1].type == "number.decimal") {\n                    const negativeNumber = input[j + 1].clone();\n                    negativeNumber.extendRange(input[j]);\n                    negativeNumber.text = input[j].text + negativeNumber.text;\n                    output.push(negativeNumber);\n                    j += 2;\n                }\n                else\n                    return { message: f.text `Expected a ${statement.tokens[i]}\x2C got "${input[j]}"`\x2C priority: 8\x2C range: input[j].range };\n            }\n            else\n                return { message: f.text `Expected a ${statement.tokens[i]}\x2C got "${input[j]}"`\x2C priority: 5\x2C range: input[j].range };\n        }\n    }\n    if (j != input.length)\n        return { message: f.quote `Expected end of line\x2C found ${input[j]}`\x2C priority: 7\x2C range: input[j].range };\n    return output;\n});\nfunction cannotEndExpression(token) {\n    return token.type.startsWith("operator.") || token.type == "parentheses.open" || token.type == "bracket.open";\n}\nfunction canBeUnaryOperator(token) {\n    return Object.values(operators).find(o => o.type.startsWith("unary_prefix") && o.token == token.type);\n}\nexport const expressionLeafNodeTypes = ["number.decimal"\x2C "name"\x2C "string"\x2C "char"\x2C "boolean.false"\x2C "boolean.true"];\nexport const parseExpressionLeafNode = errorBoundary()((token) => {\n    if (expressionLeafNodeTypes.includes(token.type))\n        return token;\n    else\n        fail(`Invalid expression leaf node`);\n});\nexport const parseExpression = errorBoundary({\n    predicate: (_input\x2C recursive) => !recursive\x2C\n    message: () => `Cannot parse expression "$rc": `\n})((input\x2C recursive = false) => {\n    if (!Array.isArray(input))\n        crash(`parseExpression(): expected array of tokens\x2C got ${input}`);\n    if (input.length == 1)\n        return parseExpressionLeafNode(input[0]);\n    for (const operatorsOfCurrentPriority of operatorsByPriority) {\n        let parenNestLevel = 0\x2C bracketNestLevel = 0;\n        for (let i = input.length - 1; i >= 0; i--) {\n            if (input[i].type == "parentheses.close")\n                parenNestLevel++;\n            else if (input[i].type == "parentheses.open")\n                parenNestLevel--;\n            else if (input[i].type == "bracket.close")\n                bracketNestLevel++;\n            else if (input[i].type == "bracket.open")\n                bracketNestLevel--;\n            if (parenNestLevel < 0)\n                fail(`Unclosed parentheses`\x2C input[i]);\n            if (bracketNestLevel < 0)\n                fail(`Unclosed square bracket`\x2C input[i]);\n            let operator;\n            if (parenNestLevel == 0 && bracketNestLevel == 0 &&\n                operatorsOfCurrentPriority.find(o => (operator = o).token == input[i].type)) {\n                if (operator.type.startsWith("unary_prefix")) {\n                    const right = input.slice(i + 1);\n                    if (i != 0) {\n                        if (operator.type == "unary_prefix_o_postfix" && (right.every(n => operatorsOfCurrentPriority.some(o => o.token == n.type && o.type == "unary_postfix_o_prefix" || o.type == "unary_prefix_o_postfix"))))\n                            continue;\n                        if (canBeUnaryOperator(input[i - 1]))\n                            continue;\n                        fail(f.text `Unexpected expression on left side of operator ${input[i]}`\x2C input[i]);\n                    }\n                    if (right.length == 0)\n                        fail(f.text `Expected expression on right side of operator ${input[i]}`\x2C input[i].rangeAfter());\n                    if (right.length == 1 && operator.name == "operator.negate" && right[0].type == "number.decimal") {\n                        const negativeNumber = right[0].clone();\n                        negativeNumber.extendRange(input[i]);\n                        negativeNumber.text = input[i].text + negativeNumber.text;\n                        return negativeNumber;\n                    }\n                    return new ExpressionASTBranchNode(input[i]\x2C operator\x2C [parseExpression(right\x2C true)]\x2C input);\n                }\n                else if (operator.type.startsWith("unary_postfix")) {\n                    const left = input.slice(0\x2C i);\n                    if (i != input.length - 1) {\n                        if (operator.type == "unary_postfix_o_prefix" && left.length == 0)\n                            continue;\n                        fail(f.text `Unexpected expression on left side of operator ${input[i]}`\x2C input[i]);\n                    }\n                    if (left.length == 0)\n                        fail(f.text `Expected expression on left side of operator ${input[i]}`\x2C input[i].rangeBefore());\n                    return new ExpressionASTBranchNode(input[i]\x2C operator\x2C [parseExpression(left\x2C true)]\x2C input);\n                }\n                else {\n                    const left = input.slice(0\x2C i);\n                    const right = input.slice(i + 1);\n                    if (left.length == 0) {\n                        if (operator.type == "binary_o_unary_prefix")\n                            continue;\n                        else\n                            fail(f.text `Expected expression on left side of operator ${input[i]}`\x2C input[i].rangeBefore());\n                    }\n                    if (right.length == 0)\n                        fail(f.text `Expected expression on right side of operator ${input[i]}`\x2C input[i].rangeAfter());\n                    if (operator.type == "binary_o_unary_prefix") {\n                        if (cannotEndExpression(input[i - 1]))\n                            continue;\n                    }\n                    if (operator == operators.access) {\n                        if (!(right.length == 1 && right[0].type == "name"))\n                            continue;\n                    }\n                    return new ExpressionASTBranchNode(input[i]\x2C operator\x2C [parseExpression(left\x2C true)\x2C parseExpression(right\x2C true)]\x2C input);\n                }\n            }\n        }\n        if (parenNestLevel != 0) {\n            input.reduce((acc\x2C item) => {\n                if (item.type == "parentheses.open")\n                    acc++;\n                else if (item.type == "parentheses.close")\n                    acc--;\n                if (acc < 0)\n                    fail(`No parentheses group to close`\x2C item);\n                return acc;\n            }\x2C 0);\n            impossible();\n        }\n        if (bracketNestLevel != 0) {\n            input.reduce((acc\x2C item) => {\n                if (item.type == "bracket.open")\n                    acc++;\n                else if (item.type == "bracket.close")\n                    acc--;\n                if (acc < 0)\n                    fail(`No bracket group to close`\x2C item);\n                return acc;\n            }\x2C 0);\n            impossible();\n        }\n    }\n    if (input[0]?.type == "keyword.new" && input[1]?.type == "name" && input[2]?.type == "parentheses.open" && input.at(-1)?.type == "parentheses.close") {\n        return new ExpressionASTClassInstantiationNode(input[1]\x2C input.length == 4\n            ? []\n            : splitTokensOnComma(input.slice(3\x2C -1)).map(e => parseExpression(e\x2C true))\x2C input);\n    }\n    const parenIndex = findLastNotInGroup(input\x2C "parentheses.open");\n    if (parenIndex != null && parenIndex > 0 && input.at(-1)?.type == "parentheses.close") {\n        const target = input.slice(0\x2C parenIndex);\n        const indicesTokens = input.slice(parenIndex + 1\x2C -1);\n        if (target.length == 0)\n            crash(`Missing function in function call expression`);\n        const parsedTarget = parseExpression(target\x2C true);\n        if (parsedTarget instanceof Token || parsedTarget instanceof ExpressionASTBranchNode)\n            return new ExpressionASTFunctionCallNode(parsedTarget\x2C indicesTokens.length == 0\n                ? []\n                : splitTokensOnComma(indicesTokens).map(e => parseExpression(e\x2C true))\x2C input);\n        else\n            fail(f.quote `${parsedTarget} is not a valid function name\x2C function names must be a single word\x2C or the result of a property access`);\n    }\n    if (input[0]?.type == "parentheses.open" && input.at(-1)?.type == "parentheses.close")\n        return parseExpression(input.slice(1\x2C -1)\x2C true);\n    const bracketIndex = findLastNotInGroup(input\x2C "bracket.open");\n    if (bracketIndex != null && input.at(-1)?.type == "bracket.close") {\n        const target = input.slice(0\x2C bracketIndex);\n        const indicesTokens = input.slice(bracketIndex + 1\x2C -1);\n        if (target.length == 0)\n            fail(`Missing target in array index expression`);\n        if (indicesTokens.length == 0)\n            fail(`Missing indices in array index expression`);\n        const parsedTarget = parseExpression(target\x2C true);\n        return new ExpressionASTArrayAccessNode(parsedTarget\x2C splitTokensOnComma(indicesTokens).map(e => parseExpression(e\x2C true))\x2C input);\n    }\n    fail(`No operators found`);\n});\n
code-source-info,0xc2df92560e,109,0,22704,C10O0C40O0C60O0C67O666C73O666C82O681C86O666C89O2934C95O2934C104O2949C108O2934C111O3171C117O3171C126O3186C130O3171C133O8391C139O8391C148O8406C152O8391C155O10078C161O10078C170O10093C174O10078C177O14934C181O14934C184O15052C190O15052C199O15067C203O15052C206O15247C217O15278C225O15326C233O15247C243O15368C247O15247C252O22704,,
code-creation,JS,11,245973,0x7ff64c4546c0,740,serializeKey node:internal/modules/esm/module_map:36:15,0x8c1d173f48,^
code-source-info,0x7ff64c4546c0,84,1271,1887,,,
code-creation,JS,11,246033,0x7ff64c4549c0,1060, node:internal/per_context/primordials:540:15,0x23399f6f58,^
code-source-info,0x7ff64c4549c0,6,16752,17181,,,
code-creation,JS,11,246079,0x7ff64c454e00,628,defaultResolve node:internal/modules/esm/loader:380:17,0x8c1d16d080,^
code-source-info,0x7ff64c454e00,83,13440,13777,,,
code-creation,JS,11,246125,0x7ff64c4550c0,736,moduleProvider node:internal/modules/esm/loader:285:7,0x2bb6ec8f078,^
code-source-info,0x7ff64c4550c0,83,9748,9824,,,
code-creation,JS,11,246173,0x7ff64c4553c0,1812,encodePathChars node:internal/url:1484:25,0x3fcdefa3558,^
code-source-info,0x7ff64c4553c0,32,44862,45627,,,
code-creation,JS,11,246566,0x7ff64c455b00,3380,finalizeResolution node:internal/modules/esm/resolve:237:28,0x8c1d17d770,^
code-source-info,0x7ff64c455b00,87,9202,10689,,,
code-creation,JS,11,246640,0x7ff64c456880,3104,pathToFileURL node:internal/url:1499:23,0x3fcdefa35a8,^
code-source-info,0x7ff64c456880,32,45653,47654,,,
code-creation,JS,13,246983,0x7ff64c4574c0,196,isPathSeparator node:path:52:25,0x3fcdef9efd8,*
code-source-info,0x7ff64c4574c0,30,1794,1876,C0O1794C39O1818C71O1873C141O1794,,
code-creation,Script,10,247472,0xc2df92a256,380, file:///C:/coding/soodocode/build/parser-types.js:1:1,0xc2df927ed0,~
script-source,110,file:///C:/coding/soodocode/build/parser-types.js,import { ArrayVariableType\x2C PrimitiveVariableType } from "./runtime-types.js";\nimport { crash\x2C f\x2C getTotalRange } from "./utils.js";\nexport class ExpressionASTBranchNode {\n    constructor(operatorToken\x2C operator\x2C nodes\x2C allTokens) {\n        this.operatorToken = operatorToken;\n        this.operator = operator;\n        this.nodes = nodes;\n        this.allTokens = allTokens;\n        this.range = getTotalRange(allTokens);\n    }\n    toString() {\n        return this.allTokens.map(t => t.text).join(" ");\n    }\n    fmtText() {\n        if (this.operator.type.startsWith("unary_prefix")) {\n            return `(${this.operatorToken.text} ${this.nodes[0].fmtText()})`;\n        }\n        else if (this.operator.type.startsWith("unary_postfix")) {\n            return `(${this.nodes[0].fmtText()} ${this.operatorToken.text})`;\n        }\n        else {\n            return `(${this.nodes[0].fmtText()} ${this.operatorToken.text} ${this.nodes[1].fmtText()})`;\n        }\n    }\n    fmtDebug() {\n        return `[${this.operator.name} ${this.nodes.map(n => n.fmtDebug()).join(" ")}]`;\n    }\n}\nexport class ExpressionASTFunctionCallNode {\n    constructor(functionName\x2C args\x2C allTokens) {\n        this.functionName = functionName;\n        this.args = args;\n        this.allTokens = allTokens;\n        this.range = getTotalRange(allTokens);\n    }\n    toString() {\n        return this.allTokens.map(t => t.text).join(" ");\n    }\n    fmtText() {\n        return f.text `${this.functionName}(${this.args.map(n => n.fmtText()).join("\x2C ")})`;\n    }\n    fmtDebug() {\n        return f.debug `${this.functionName}(${this.args.map(n => n.fmtDebug()).join(" ")})`;\n    }\n}\nexport class ExpressionASTClassInstantiationNode {\n    constructor(className\x2C args\x2C allTokens) {\n        this.className = className;\n        this.args = args;\n        this.allTokens = allTokens;\n        this.range = getTotalRange(allTokens);\n    }\n    toString() {\n        return this.allTokens.map(t => t.text).join(" ");\n    }\n    fmtText() {\n        return `NEW ${this.className.text}(${this.args.map(n => n.fmtText()).join("\x2C ")})`;\n    }\n    fmtDebug() {\n        return `NEW ${this.className.text}(${this.args.map(n => n.fmtDebug()).join(" ")})`;\n    }\n}\nexport class ExpressionASTArrayAccessNode {\n    constructor(target\x2C indices\x2C allTokens) {\n        this.target = target;\n        this.indices = indices;\n        this.allTokens = allTokens;\n        this.range = getTotalRange(allTokens);\n    }\n    toString() {\n        return this.allTokens.map(t => t.text).join(" ");\n    }\n    fmtText() {\n        return `${this.target.fmtText()}[${this.indices.map(n => n.fmtText()).join("\x2C ")}]`;\n    }\n    fmtDebug() {\n        return `${this.target.fmtDebug()}[${this.indices.map(n => n.fmtDebug()).join(" ")}]`;\n    }\n}\nexport class ExpressionASTArrayTypeNode {\n    constructor(lengthInformation\x2C elementType\x2C allTokens) {\n        this.lengthInformation = lengthInformation;\n        this.elementType = elementType;\n        this.allTokens = allTokens;\n        this.range = getTotalRange(allTokens);\n    }\n    toData() {\n        return new ArrayVariableType(this.lengthInformation.map(bounds => bounds.map(t => Number(t.text)))\x2C PrimitiveVariableType.resolve(this.elementType.text));\n    }\n    fmtText() {\n        return `ARRAY[${this.lengthInformation.map(([l\x2C h]) => `${l.text}:${h.text}`).join("\x2C ")}] OF ${this.elementType.text}`;\n    }\n    fmtDebug() {\n        return `ARRAY[${this.lengthInformation.map(([l\x2C h]) => `${l.fmtDebug()} : ${h.fmtDebug()}`).join("\x2C ")}] OF ${this.elementType.fmtDebug()}`;\n    }\n}\nexport class Operator {\n    constructor(args) {\n        Object.assign(this\x2C args);\n    }\n    fmtText() {\n        return `${this.name}`;\n    }\n    fmtDebug() {\n        return `Operator [${this.name}] (${this.category} ${this.type})`;\n    }\n}\nexport const operatorsByPriority = ((input) => input.map(row => row.map(o => new Operator({\n    token: o.token\x2C\n    category: o.category\x2C\n    type: o.type ?? "binary"\x2C\n    name: o.name ?? o.token\x2C\n}))))([\n    [\n        {\n            token: "operator.or"\x2C\n            category: "logical"\n        }\n    ]\x2C [\n        {\n            token: "operator.and"\x2C\n            category: "logical"\n        }\n    ]\x2C [\n        {\n            token: "operator.equal_to"\x2C\n            category: "logical"\n        }\x2C {\n            token: "operator.not_equal_to"\x2C\n            category: "logical"\n        }\n    ]\x2C [\n        {\n            token: "operator.less_than"\x2C\n            category: "logical"\n        }\x2C {\n            token: "operator.less_than_equal"\x2C\n            category: "logical"\n        }\x2C {\n            token: "operator.greater_than"\x2C\n            category: "logical"\n        }\x2C {\n            token: "operator.greater_than_equal"\x2C\n            category: "logical"\n        }\n    ]\x2C [\n        {\n            token: "operator.add"\x2C\n            category: "arithmetic"\n        }\x2C {\n            name: "operator.subtract"\x2C\n            token: "operator.minus"\x2C\n            category: "arithmetic"\x2C\n            type: "binary_o_unary_prefix"\n        }\x2C {\n            token: "operator.string_concatenate"\x2C\n            category: "string"\n        }\n    ]\x2C [\n        {\n            token: "operator.multiply"\x2C\n            category: "arithmetic"\n        }\x2C {\n            token: "operator.divide"\x2C\n            category: "arithmetic"\n        }\x2C {\n            token: "operator.integer_divide"\x2C\n            category: "arithmetic"\n        }\x2C {\n            token: "operator.mod"\x2C\n            category: "arithmetic"\n        }\n    ]\x2C\n    [\n        {\n            token: "operator.pointer"\x2C\n            name: "operator.pointer_reference"\x2C\n            category: "special"\x2C\n            type: "unary_prefix_o_postfix"\n        }\x2C\n        {\n            token: "operator.not"\x2C\n            category: "logical"\x2C\n            type: "unary_prefix"\n        }\x2C\n        {\n            token: "operator.minus"\x2C\n            name: "operator.negate"\x2C\n            category: "arithmetic"\x2C\n            type: "unary_prefix"\n        }\x2C\n    ]\x2C\n    [\n        {\n            token: "operator.pointer"\x2C\n            name: "operator.pointer_dereference"\x2C\n            category: "special"\x2C\n            type: "unary_postfix_o_prefix"\n        }\n    ]\x2C\n    [\n        {\n            token: "punctuation.period"\x2C\n            name: "operator.access"\x2C\n            category: "special"\x2C\n        }\n    ]\n]);\nexport const operators = Object.fromEntries(operatorsByPriority.flat().map(o => [\n    o.name.startsWith("operator.") ? o.name.split("operator.")[1] : o.name\x2C o\n]));\nexport class ProgramASTBranchNode {\n    constructor(type\x2C controlStatements\x2C nodeGroups) {\n        this.type = type;\n        this.controlStatements = controlStatements;\n        this.nodeGroups = nodeGroups;\n    }\n    range() {\n        return getTotalRange(this.controlStatements.concat(this.nodeGroups.flat()));\n    }\n}\nexport const programASTBranchNodeTypes = ["if"\x2C "for"\x2C "for.step"\x2C "while"\x2C "dowhile"\x2C "function"\x2C "procedure"\x2C "switch"\x2C "type"\x2C "class"\x2C "class_function"\x2C "class_procedure"];\nexport function ProgramASTBranchNodeType(input) {\n    if (programASTBranchNodeTypes.includes(input))\n        return input;\n    crash(`"${input}" is not a valid program AST branch node type`);\n}\n
code-source-info,0xc2df92a256,110,0,7174,C10O0C28O0C48O0C90O140C128O1086C166O1652C204O2212C242O2768C275O3561C278O3830C288O3997C292O3830C295O6343C299O6350C304O6362C308O6382C313O6382C318O6388C328O6389C334O6350C339O6343C367O6490C370O6844C374O6844C379O7174,,
code-creation,JS,10,247895,0xc2df92a4f6,16, file:///C:/coding/soodocode/build/parser-types.js:108:37,0xc2df928d50,~
code-source-info,0xc2df92a4f6,110,3831,3996,C0O3848C10O3848C15O3996,,
code-creation,JS,11,248342,0x7ff64c4575c0,4708,defaultResolve node:internal/modules/esm/resolve:1064:24,0x8c1d17de50,^
code-source-info,0x7ff64c4575c0,87,41583,45321,,,
code-creation,JS,11,248385,0x7ff64c458840,308,onFulfilled node:internal/per_context/primordials:543:25,0x23399f7100,^
code-source-info,0x7ff64c458840,6,16887,16968,,,
code-creation,JS,11,248412,0x7ff64c4589c0,124,getTranslators node:internal/modules/esm/loader:52:24,0x8c1d16cbd0,^
code-source-info,0x7ff64c4589c0,83,1554,1656,,,
code-creation,JS,11,248686,0x7ff64c458a80,332, node:internal/per_context/primordials:539:40,0x23399f6e30,^
code-source-info,0x7ff64c458a80,6,16716,17182,,,
code-creation,JS,11,248737,0x7ff64c458c00,1600,getCrossRelmRegex node:internal/util:746:27,0x3fcdef88e38,^
code-source-info,0x7ff64c458c00,16,21021,21803,,,
code-creation,JS,11,248787,0x7ff64c459280,2284,moduleResolve node:internal/modules/esm/resolve:896:23,0x8c1d17dd10,^
code-source-info,0x7ff64c459280,87,35227,36615,,,
code-creation,Script,10,249954,0xc2df92e0c6,144, file:///C:/coding/soodocode/build/runtime.js:1:1,0xc2df92ccb8,~
script-source,111,file:///C:/coding/soodocode/build/runtime.js,var __runInitializers = (this && this.__runInitializers) || function (thisArg\x2C initializers\x2C value) {\n    var useValue = arguments.length > 2;\n    for (var i = 0; i < initializers.length; i++) {\n        value = useValue ? initializers[i].call(thisArg\x2C value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n};\nvar __esDecorate = (this && this.__esDecorate) || function (ctor\x2C descriptorIn\x2C decorators\x2C contextIn\x2C initializers\x2C extraInitializers) {\n    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }\n    var kind = contextIn.kind\x2C key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";\n    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target\x2C contextIn.name) : {});\n    var _\x2C done = false;\n    for (var i = decorators.length - 1; i >= 0; i--) {\n        var context = {};\n        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };\n        var result = (0\x2C decorators[i])(kind === "accessor" ? { get: descriptor.get\x2C set: descriptor.set } : descriptor[key]\x2C context);\n        if (kind === "accessor") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== "object") throw new TypeError("Object expected");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        }\n        else if (_ = accept(result)) {\n            if (kind === "field") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target\x2C contextIn.name\x2C descriptor);\n    done = true;\n};\nimport { builtinFunctions } from "./builtin_functions.js";\nimport { Token } from "./lexer-types.js";\nimport { ExpressionASTArrayAccessNode\x2C ExpressionASTBranchNode\x2C ExpressionASTClassInstantiationNode\x2C ExpressionASTFunctionCallNode\x2C operators } from "./parser-types.js";\nimport { ArrayVariableType\x2C ClassVariableType\x2C EnumeratedVariableType\x2C PointerVariableType\x2C PrimitiveVariableType\x2C RecordVariableType\x2C SetVariableType } from "./runtime-types.js";\nimport { ClassFunctionStatement\x2C ClassProcedureStatement\x2C ClassStatement\x2C FunctionStatement\x2C ProcedureStatement\x2C Statement } from "./statements.js";\nimport { SoodocodeError\x2C crash\x2C errorBoundary\x2C f\x2C fail\x2C impossible\x2C zip } from "./utils.js";\nexport function typesEqual(a\x2C b) {\n    return a == b ||\n        (Array.isArray(a) && Array.isArray(b) && a[1] == b[1]) ||\n        (a instanceof ArrayVariableType && b instanceof ArrayVariableType && a.arraySizes.toString() == b.arraySizes.toString() && (a.type == b.type ||\n            Array.isArray(a.type) && Array.isArray(b.type) && a.type[1] == b.type[1])) ||\n        (a instanceof PointerVariableType && b instanceof PointerVariableType && typesEqual(a.target\x2C b.target)) ||\n        (a instanceof SetVariableType && b instanceof SetVariableType && a.baseType == b.baseType);\n}\nexport function checkClassMethodsCompatible(base\x2C derived) {\n    if (base.accessModifier != derived.accessModifier)\n        fail(f.text `Method was ${base.accessModifier} in base class\x2C cannot override it with a ${derived.accessModifier} method`\x2C derived.accessModifierToken);\n    if (base.stype != derived.stype)\n        fail(f.text `Method was a ${base.stype.split("_")[1]} in base class\x2C cannot override it with a ${derived.stype.split("_")[1]}`\x2C derived.methodKeywordToken);\n    if (base.args.size != derived.args.size)\n        fail(`Functions have different numbers of arguments.`\x2C derived.argsRange);\n    for (const [[aName\x2C aType]\x2C [bName\x2C bType]] of zip(base.args.entries()\x2C derived.args.entries())) {\n        if (!typesEqual(aType.type\x2C bType.type))\n            fail(f.quote `Argument ${bName} in derived class is not assignable to argument ${aName} in base class: type ${aType.type} is not assignable to type ${bType.type}.`\x2C derived.argsRange);\n        if (aType.passMode != bType.passMode)\n            fail(f.quote `Argument ${bName} in derived class is not assignable to argument ${aName} in base class because their pass modes are different.`\x2C derived.argsRange);\n    }\n    if (base instanceof ClassFunctionStatement && derived instanceof ClassFunctionStatement) {\n        if (!typesEqual(derived.returnType\x2C base.returnType))\n            fail(f.quote `Return type ${derived.returnType} is not assignable to ${base.returnType}`\x2C derived.returnTypeToken);\n    }\n}\nexport class Files {\n    constructor() {\n        this.files = {};\n        this.backupFiles = null;\n    }\n    getFile(filename\x2C create = false) {\n        return this.files[filename] ?? (create ? this.files[filename] = {\n            name: filename\x2C text: ""\n        } : undefined);\n    }\n    makeBackup() {\n        this.backupFiles = JSON.stringify(this.files);\n    }\n    canLoadBackup() {\n        return this.backupFiles != null;\n    }\n    loadBackup() {\n        if (this.backupFiles)\n            this.files = JSON.parse(this.backupFiles);\n    }\n}\nlet Runtime = (() => {\n    var _a;\n    let _instanceExtraInitializers = [];\n    let _processArrayAccess_decorators;\n    let _processRecordAccess_decorators;\n    let _evaluateExpr_decorators;\n    return _a = class Runtime {\n            constructor(_input\x2C _output) {\n                this._input = (__runInitializers(this\x2C _instanceExtraInitializers)\x2C _input);\n                this._output = _output;\n                this.scopes = [];\n                this.functions = {};\n                this.openFiles = {};\n                this.fs = new Files();\n            }\n            processArrayAccess(expr\x2C operation\x2C arg2) {\n                const _variable = this.evaluateExpr(expr.target\x2C "variable");\n                if (!(_variable.type instanceof ArrayVariableType))\n                    fail(f.quote `Cannot convert variable of type ${_variable.type} to an array`\x2C expr.target);\n                const variable = _variable;\n                const varTypeData = variable.type;\n                if (arg2 instanceof ArrayVariableType)\n                    fail(f.quote `Cannot evaluate expression starting with "array access": expected the expression to evaluate to a value of type ${arg2}\x2C but the array access produces a result of type ${varTypeData.type}`\x2C expr.target);\n                if (expr.indices.length != variable.type.lengthInformation.length)\n                    fail(`Cannot evaluate expression starting with "array access": \\\x0d\n${variable.type.lengthInformation.length}-dimensional array requires ${variable.type.lengthInformation.length} indices\x2C \\\x0d\nbut found ${expr.indices.length} indices`\x2C expr.indices);\n                const indexes = expr.indices.map(e => [e\x2C this.evaluateExpr(e\x2C PrimitiveVariableType.INTEGER)[1]]);\n                let invalidIndexIndex;\n                if ((invalidIndexIndex = indexes.findIndex(([_expr\x2C value]\x2C index) => value > varTypeData.lengthInformation[index][1] ||\n                    value < varTypeData.lengthInformation[index][0])) != -1)\n                    fail(`Array index out of bounds: \\\x0d\nvalue ${indexes[invalidIndexIndex][1]} was not in range \\\x0d\n(${varTypeData.lengthInformation[invalidIndexIndex].join(" to ")})`\x2C indexes[invalidIndexIndex][0]);\n                const index = indexes.reduce((acc\x2C [_expr\x2C value]\x2C index) => (acc + value - varTypeData.lengthInformation[index][0]) * (index == indexes.length - 1 ? 1 : varTypeData.arraySizes[index])\x2C 0);\n                if (index >= variable.value.length)\n                    crash(`Array index bounds check failed`);\n                if (operation == "get") {\n                    const type = arg2;\n                    if (type == "variable") {\n                        return {\n                            type: this.resolveVariableType(varTypeData.type)\x2C\n                            declaration: variable.declaration\x2C\n                            mutable: true\x2C\n                            get value() { return variable.value[index]; }\x2C\n                            set value(val) { variable.value[index] = val; }\n                        };\n                    }\n                    const output = variable.value[index];\n                    if (output == null)\n                        fail(f.text `Cannot use the value of uninitialized variable ${expr.target}[${indexes.map(([_expr\x2C val]) => val).join("\x2C ")}]`\x2C expr.target);\n                    if (type)\n                        return [type\x2C this.coerceValue(output\x2C this.resolveVariableType(varTypeData.type)\x2C type)];\n                    else\n                        return [this.resolveVariableType(varTypeData.type)\x2C output];\n                }\n                else {\n                    variable.value[index] = this.evaluateExpr(arg2\x2C this.resolveVariableType(varTypeData.type))[1];\n                }\n            }\n            processRecordAccess(expr\x2C operation\x2C arg2) {\n                if (!(expr.nodes[1] instanceof Token))\n                    crash(`Second node in record access expression was not a token`);\n                const property = expr.nodes[1].text;\n                if (operation == "set" || arg2 == "variable") {\n                    const variable = this.evaluateExpr(expr.nodes[0]\x2C "variable");\n                    if (variable.type instanceof RecordVariableType) {\n                        const outputType = variable.type.fields[property] ?? fail(f.quote `Property ${property} does not exist on type ${variable.type}`\x2C expr.nodes[1]);\n                        if (arg2 == "variable") {\n                            return {\n                                type: outputType\x2C\n                                declaration: variable.declaration\x2C\n                                mutable: true\x2C\n                                get value() { return variable.value[property]; }\x2C\n                                set value(val) {\n                                    variable.value[property] = val;\n                                }\n                            };\n                        }\n                        else {\n                            const value = arg2;\n                            variable.value[property] = this.evaluateExpr(value\x2C outputType)[1];\n                        }\n                    }\n                    else if (variable.type instanceof ClassVariableType) {\n                        const propertyStatement = variable.type.properties[property] ?? fail(f.quote `Property ${property} does not exist on type ${variable.type}`\x2C expr.nodes[1]);\n                        if (propertyStatement.accessModifier == "private" && !this.canAccessClass(variable.type))\n                            fail(f.quote `Property ${property} is private and cannot be accessed outside of the class`\x2C expr.nodes[1]);\n                        const outputType = this.resolveVariableType(propertyStatement.varType);\n                        if (arg2 == "variable") {\n                            return {\n                                type: outputType\x2C\n                                declaration: variable.declaration\x2C\n                                mutable: true\x2C\n                                get value() { return variable.value.properties[property]; }\x2C\n                                set value(val) {\n                                    variable.value.properties[property] = val;\n                                }\n                            };\n                        }\n                        else {\n                            const value = arg2;\n                            variable.value[property] = this.evaluateExpr(value\x2C outputType)[1];\n                        }\n                    }\n                    else\n                        fail(f.quote `Cannot access property ${property} on variable of type ${variable.type} because it is not a record or class type and cannot have proprties`\x2C expr.nodes[0]);\n                }\n                else {\n                    const type = arg2;\n                    const [objType\x2C obj] = this.evaluateExpr(expr.nodes[0]);\n                    if (objType instanceof RecordVariableType) {\n                        if (type == "function")\n                            fail(f.quote `Expected this expression to evaluate to a function\x2C but found a property access on a variable of type ${type}\x2C which cannot have functions as properties`);\n                        const outputType = objType.fields[property] ?? fail(f.quote `Property ${property} does not exist on value of type ${objType}`\x2C expr.nodes[1]);\n                        const value = obj[property];\n                        if (value === null)\n                            fail(f.text `Cannot use the value of uninitialized variable "${expr.nodes[0]}.${property}"`\x2C expr.nodes[1]);\n                        if (type)\n                            return [type\x2C this.coerceValue(value\x2C outputType\x2C type)];\n                        else\n                            return [outputType\x2C value];\n                    }\n                    else if (objType instanceof ClassVariableType) {\n                        const classInstance = obj;\n                        const classType = classInstance.type;\n                        if (type == "function") {\n                            const method = objType.methods[property]\n                                ? (classType.methods[property] ?? crash(`Inherited method not present`))\n                                : classType.methods[property]\n                                    ? fail(f.quote `Method ${property} does not exist on type ${objType}.\x0d\nThe data in the variable ${expr.nodes[0]} is of type ${classType.fmtPlain()} which has the method\x2C \\\x0d\nbut the type of the variable is ${objType.fmtPlain()}.\x0d\nhelp: change the type of the variable to ${classType.fmtPlain()}`\x2C expr.nodes[1])\n                                    : fail(f.quote `Method ${property} does not exist on type ${objType}`\x2C expr.nodes[1]);\n                            if (method.controlStatements[0].accessModifier == "private" && !this.canAccessClass(objType))\n                                fail(f.quote `Property ${property} is private and cannot be accessed outside of the class`\x2C expr.nodes[1]);\n                            return [method\x2C classInstance];\n                        }\n                        else {\n                            const propertyStatement = objType.properties[property] ?? (classType.methods[property]\n                                ? fail(f.quote `Property ${property} does not exist on type ${objType}.\x0d\nThe data in the variable ${expr.nodes[0]} is of type ${classType.fmtPlain()} which has the property\x2C \\\x0d\nbut the type of the variable is ${objType.fmtPlain()}.\x0d\nhelp: change the type of the variable to ${classType.fmtPlain()}`\x2C expr.nodes[1])\n                                : fail(f.quote `Property ${property} does not exist on type ${objType}`\x2C expr.nodes[1]));\n                            if (propertyStatement.accessModifier == "private" && !this.canAccessClass(objType))\n                                fail(f.quote `Property ${property} is private and cannot be accessed outside of the class`\x2C expr.nodes[1]);\n                            const outputType = this.resolveVariableType(propertyStatement.varType);\n                            const value = obj.properties[property];\n                            if (value === null)\n                                fail(f.text `Cannot use the value of uninitialized variable "${expr.nodes[0]}.${property}"`\x2C expr.nodes[1]);\n                            if (type)\n                                return [type\x2C this.coerceValue(value\x2C outputType\x2C type)];\n                            else\n                                return [outputType\x2C value];\n                        }\n                    }\n                    else\n                        fail(f.quote `Cannot access property on value of type ${objType} because it is not a record type and cannot have proprties`\x2C expr.nodes[0]);\n                }\n            }\n            evaluateExpr(expr\x2C type\x2C _recursive = false) {\n                if (expr == undefined)\n                    crash(`expr was ${expr}`);\n                if (expr instanceof Token)\n                    return this.evaluateToken(expr\x2C type);\n                if (expr instanceof ExpressionASTArrayAccessNode) {\n                    if (type == "function")\n                        fail(`Expected this expression to evaluate to a function\x2C but found an array access\x2C which cannot return a function.`);\n                    return this.processArrayAccess(expr\x2C "get"\x2C type);\n                }\n                if (expr instanceof ExpressionASTFunctionCallNode) {\n                    if (type == "variable")\n                        fail(`Expected this expression to evaluate to a variable\x2C but found a function call\x2C which can only return values\x2C not variables.`);\n                    if (type == "function")\n                        fail(`Expected this expression to evaluate to a function\x2C but found a function call\x2C which cannot return a function.`);\n                    if (expr.functionName instanceof Token) {\n                        const fn = this.getFunction(expr.functionName.text);\n                        if ("name" in fn) {\n                            const output = this.callBuiltinFunction(fn\x2C expr.args);\n                            if (type)\n                                return [type\x2C this.coerceValue(output[1]\x2C output[0]\x2C type)];\n                            else\n                                return output;\n                        }\n                        else {\n                            if (fn.type == "procedure")\n                                fail(f.quote `Procedure ${expr.functionName} does not return a value.`);\n                            const statement = fn.controlStatements[0];\n                            const output = this.callFunction(fn\x2C expr.args\x2C true);\n                            if (type)\n                                return [type\x2C this.coerceValue(output\x2C this.resolveVariableType(statement.returnType)\x2C type)];\n                            else\n                                return [this.resolveVariableType(statement.returnType)\x2C output];\n                        }\n                    }\n                    else if (expr.functionName instanceof ExpressionASTBranchNode) {\n                        const func = this.evaluateExpr(expr.functionName\x2C "function");\n                        if (Array.isArray(func)) {\n                            if (func[0].type == "class_procedure")\n                                fail(f.quote `Expected this expression to return a value\x2C but the function ${expr.functionName} is a procedure which does not return a value`);\n                            return this.callClassMethod(func[0]\x2C func[1]\x2C expr.args\x2C true);\n                        }\n                        else\n                            crash(`Branched function call node should not be able to return regular functions`);\n                    }\n                    else\n                        crash(`Function name was an unexpected node type`);\n                }\n                if (expr instanceof ExpressionASTClassInstantiationNode) {\n                    if (type == "variable")\n                        fail(`Expected this expression to evaluate to a variable\x2C but found a class instantiation expression\x2C which can only return a class instance\x2C not a variable.`);\n                    if (type == "function")\n                        fail(`Expected this expression to evaluate to a function\x2C but found a class instantiation expression\x2C which can only return a class instance\x2C not a function.`);\n                    const clazz = this.getClass(expr.className.text);\n                    const output = clazz.construct(this\x2C expr.args);\n                    if (type)\n                        return [type\x2C this.coerceValue(output\x2C clazz\x2C type)];\n                    else\n                        return [clazz\x2C output];\n                }\n                if (expr.operator.category == "special") {\n                    switch (expr.operator) {\n                        case operators.access:\n                            return this.processRecordAccess(expr\x2C "get"\x2C type);\n                        case operators.pointer_reference: {\n                            if (type == "variable" || type == "function")\n                                fail(`Expected this expression to evaluate to a ${type}\x2C but found a referencing expression\x2C which returns a pointer`);\n                            if (type && !(type instanceof PointerVariableType))\n                                fail(f.quote `Expected result to be of type ${type}\x2C but the reference operator will return a pointer`);\n                            let variable;\n                            try {\n                                variable = this.evaluateExpr(expr.nodes[0]\x2C "variable"\x2C true);\n                            }\n                            catch (err) {\n                                if (err instanceof SoodocodeError) {\n                                    const [targetType\x2C targetValue] = this.evaluateExpr(expr.nodes[0]\x2C type?.target\x2C true);\n                                    const pointerType = this.getPointerTypeFor(targetType) ?? fail(f.quote `Cannot find a pointer type for ${targetType}`);\n                                    return [pointerType\x2C {\n                                            type: targetType\x2C\n                                            declaration: "dynamic"\x2C\n                                            mutable: true\x2C\n                                            value: targetValue\n                                        }];\n                                }\n                                else\n                                    throw err;\n                            }\n                            const pointerType = this.getPointerTypeFor(variable.type) ?? fail(f.quote `Cannot find a pointer type for ${variable.type}`);\n                            if (type)\n                                return [pointerType\x2C this.coerceValue(variable\x2C pointerType\x2C type)];\n                            else\n                                return [pointerType\x2C variable];\n                        }\n                        case operators.pointer_dereference: {\n                            if (type == "function")\n                                fail(`Expected this expression to evaluate to a function\x2C but found a dereferencing expression\x2C which cannot return a function`);\n                            const [pointerVariableType\x2C variableValue] = this.evaluateExpr(expr.nodes[0]\x2C undefined\x2C true);\n                            if (variableValue == null)\n                                fail(`Cannot dereference uninitialized pointer`\x2C expr.nodes[0]);\n                            if (!(pointerVariableType instanceof PointerVariableType))\n                                fail(f.quote `Cannot dereference value of type ${pointerVariableType} because it is not a pointer`\x2C expr.nodes[0]);\n                            const pointerVariableData = variableValue;\n                            if (type == "variable") {\n                                if (!pointerVariableData.mutable)\n                                    fail(`Cannot assign to constant`\x2C expr);\n                                return pointerVariableData;\n                            }\n                            else {\n                                if (pointerVariableData.value == null)\n                                    fail(f.quote `Cannot dereference ${expr.nodes[0]} and use the value\x2C because the underlying value has not been initialized`\x2C expr.nodes[0]);\n                                if (type)\n                                    return [pointerVariableType.target\x2C this.coerceValue(pointerVariableData.value\x2C pointerVariableType.target\x2C type)];\n                                else\n                                    return [pointerVariableType.target\x2C pointerVariableData.value];\n                            }\n                        }\n                        default: impossible();\n                    }\n                }\n                if (type == "variable" || type == "function")\n                    fail(`Cannot evaluate this expression as a ${type}`);\n                if (type?.is("REAL"\x2C "INTEGER") || expr.operator.category == "arithmetic") {\n                    if (type && !type.is("REAL"\x2C "INTEGER"))\n                        fail(f.quote `expected the expression to evaluate to a value of type ${type}\x2C but the operator ${expr.operator} returns a number`);\n                    const guessedType = type ?? PrimitiveVariableType.REAL;\n                    let value;\n                    if (expr.operator.type == "unary_prefix") {\n                        const [_operandType\x2C operand] = this.evaluateExpr(expr.nodes[0]\x2C guessedType\x2C true);\n                        switch (expr.operator) {\n                            case operators.negate:\n                                return [PrimitiveVariableType.INTEGER\x2C -operand];\n                            default: crash("impossible");\n                        }\n                    }\n                    const [_leftType\x2C left] = this.evaluateExpr(expr.nodes[0]\x2C guessedType\x2C true);\n                    const [_rightType\x2C right] = this.evaluateExpr(expr.nodes[1]\x2C guessedType\x2C true);\n                    switch (expr.operator) {\n                        case operators.add:\n                            value = left + right;\n                            break;\n                        case operators.subtract:\n                            value = left - right;\n                            break;\n                        case operators.multiply:\n                            value = left * right;\n                            break;\n                        case operators.divide:\n                            if (right == 0)\n                                fail(`Division by zero`);\n                            value = left / right;\n                            if (type?.is("INTEGER"))\n                                fail(`Arithmetic operation evaluated to value of type REAL\x2C cannot be coerced to INTEGER\x0d\nhelp: try using DIV instead of / to produce an integer as the result`);\n                            break;\n                        case operators.integer_divide:\n                            if (right == 0)\n                                fail(`Division by zero`);\n                            value = Math.trunc(left / right);\n                            break;\n                        case operators.mod:\n                            if (right == 0)\n                                fail(`Division by zero`);\n                            value = left % right;\n                            break;\n                        default:\n                            fail(f.quote `Expected the expression to evaluate to a value of type ${type ?? impossible()}\x2C but the operator ${expr.operator} produces a result of another type`);\n                    }\n                    return [guessedType\x2C value];\n                }\n                if (type?.is("BOOLEAN") || expr.operator.category == "logical") {\n                    if (type && !type.is("BOOLEAN"))\n                        fail(f.quote `Expected the expression to evaluate to a value of type ${type}\x2C but the operator ${expr.operator} returns a boolean`);\n                    if (expr.operator.type == "unary_prefix") {\n                        switch (expr.operator) {\n                            case operators.not:\n                                return [PrimitiveVariableType.BOOLEAN\x2C !this.evaluateExpr(expr.nodes[0]\x2C PrimitiveVariableType.BOOLEAN\x2C true)[1]];\n                            default: crash("impossible");\n                        }\n                    }\n                    switch (expr.operator) {\n                        case operators.and:\n                            return [PrimitiveVariableType.BOOLEAN\x2C this.evaluateExpr(expr.nodes[0]\x2C PrimitiveVariableType.BOOLEAN\x2C true)[1] && this.evaluateExpr(expr.nodes[1]\x2C PrimitiveVariableType.BOOLEAN\x2C true)[1]];\n                        case operators.or:\n                            return [PrimitiveVariableType.BOOLEAN\x2C this.evaluateExpr(expr.nodes[0]\x2C PrimitiveVariableType.BOOLEAN\x2C true)[1] || this.evaluateExpr(expr.nodes[1]\x2C PrimitiveVariableType.BOOLEAN\x2C true)[1]];\n                        case operators.equal_to:\n                        case operators.not_equal_to: {\n                            const [leftType\x2C left] = this.evaluateExpr(expr.nodes[0]\x2C undefined\x2C true);\n                            const [rightType\x2C right] = this.evaluateExpr(expr.nodes[1]\x2C undefined\x2C true);\n                            const typesMatch = (leftType == rightType) ||\n                                (leftType.is("INTEGER") && rightType.is("REAL")) ||\n                                (leftType.is("REAL") && rightType.is("INTEGER"));\n                            const is_equal = typesMatch && (left == right);\n                            if (expr.operator == operators.equal_to)\n                                return [PrimitiveVariableType.BOOLEAN\x2C is_equal];\n                            else\n                                return [PrimitiveVariableType.BOOLEAN\x2C !is_equal];\n                        }\n                        case operators.greater_than:\n                            return [PrimitiveVariableType.BOOLEAN\x2C this.evaluateExpr(expr.nodes[0]\x2C PrimitiveVariableType.REAL\x2C true)[1] > this.evaluateExpr(expr.nodes[1]\x2C PrimitiveVariableType.REAL\x2C true)[1]];\n                        case operators.greater_than_equal:\n                            return [PrimitiveVariableType.BOOLEAN\x2C this.evaluateExpr(expr.nodes[0]\x2C PrimitiveVariableType.REAL\x2C true)[1] >= this.evaluateExpr(expr.nodes[1]\x2C PrimitiveVariableType.REAL\x2C true)[1]];\n                        case operators.less_than:\n                            return [PrimitiveVariableType.BOOLEAN\x2C this.evaluateExpr(expr.nodes[0]\x2C PrimitiveVariableType.REAL\x2C true)[1] < this.evaluateExpr(expr.nodes[1]\x2C PrimitiveVariableType.REAL\x2C true)[1]];\n                        case operators.less_than_equal:\n                            return [PrimitiveVariableType.BOOLEAN\x2C this.evaluateExpr(expr.nodes[0]\x2C PrimitiveVariableType.REAL\x2C true)[1] <= this.evaluateExpr(expr.nodes[1]\x2C PrimitiveVariableType.REAL\x2C true)[1]];\n                        default:\n                            fail(f.quote `Expected the expression to evaluate to a value of type ${type}\x2C but the operator ${expr.operator} returns another type`);\n                    }\n                }\n                if (type?.is("STRING") || expr.operator.category == "string") {\n                    if (type && !type.is("STRING"))\n                        fail(f.quote `expected the expression to evaluate to a value of type ${type}\x2C but the operator ${expr.operator} returns a string`);\n                    switch (expr.operator) {\n                        case operators.string_concatenate:\n                            return [PrimitiveVariableType.STRING\x2C this.evaluateExpr(expr.nodes[0]\x2C PrimitiveVariableType.STRING\x2C true)[1] + this.evaluateExpr(expr.nodes[1]\x2C PrimitiveVariableType.STRING\x2C true)[1]];\n                        default:\n                            fail(f.quote `Expected the expression to evaluate to a value of type ${type}\x2C but the operator ${expr.operator} returns another type`);\n                    }\n                }\n                expr.operator.category;\n                impossible();\n            }\n            evaluateToken(token\x2C type) {\n                if (token.type == "name") {\n                    if (type == "function")\n                        return this.getFunction(token.text);\n                    const enumType = this.getEnumFromValue(token.text);\n                    if (enumType) {\n                        if (type == "variable")\n                            fail(f.quote `Cannot evaluate token ${token.text} as a variable`);\n                        if (!type || type === enumType)\n                            return [enumType\x2C token.text];\n                        else\n                            fail(f.quote `Cannot convert value of type ${enumType} to ${type}`);\n                    }\n                    else {\n                        const variable = this.getVariable(token.text);\n                        if (!variable)\n                            fail(f.quote `Undeclared variable ${token}`);\n                        if (type == "variable")\n                            return variable;\n                        if (variable.value == null)\n                            fail(`Cannot use the value of uninitialized variable ${token.text}`);\n                        if (type !== undefined)\n                            return [type\x2C this.coerceValue(variable.value\x2C variable.type\x2C type)];\n                        else\n                            return [variable.type\x2C variable.value];\n                    }\n                }\n                if (type == "variable" || type == "function")\n                    fail(f.quote `Cannot evaluate token ${token.text} as a ${type}`);\n                switch (token.type) {\n                    case "boolean.false":\n                        if (!type || type.is("BOOLEAN"))\n                            return [PrimitiveVariableType.BOOLEAN\x2C false];\n                        else if (type.is("STRING"))\n                            return [PrimitiveVariableType.STRING\x2C "FALSE"];\n                        else\n                            fail(f.text `Cannot convert value FALSE to type ${type}`);\n                        break;\n                    case "boolean.true":\n                        if (!type || type.is("BOOLEAN"))\n                            return [PrimitiveVariableType.BOOLEAN\x2C true];\n                        else if (type.is("STRING"))\n                            return [PrimitiveVariableType.STRING\x2C "TRUE"];\n                        else\n                            fail(f.text `Cannot convert value TRUE to type ${type}`);\n                        break;\n                    case "number.decimal":\n                        if (!type || type.is("INTEGER"\x2C "REAL"\x2C "STRING")) {\n                            const val = Number(token.text);\n                            if (!Number.isFinite(val))\n                                fail(f.quote `Value ${token} cannot be converted to a number: too large`);\n                            if (type?.is("INTEGER")) {\n                                if (!Number.isInteger(val))\n                                    fail(f.quote `Value ${token} cannot be converted to an integer`);\n                                if (!Number.isSafeInteger(val))\n                                    fail(f.quote `Value ${token} cannot be converted to an integer: too large`);\n                                return [PrimitiveVariableType.INTEGER\x2C val];\n                            }\n                            else if (type?.is("STRING")) {\n                                return [PrimitiveVariableType.STRING\x2C token.text];\n                            }\n                            else {\n                                return [PrimitiveVariableType.REAL\x2C val];\n                            }\n                        }\n                        else\n                            fail(f.quote `Cannot convert number to type ${type}`);\n                        break;\n                    case "string":\n                        if (!type || type.is("STRING"))\n                            return [PrimitiveVariableType.STRING\x2C token.text.slice(1\x2C -1)];\n                        else\n                            fail(f.quote `Cannot convert value ${token} to type ${type}`);\n                        break;\n                    case "char":\n                        if (!type || type.is("CHAR"))\n                            return [PrimitiveVariableType.CHAR\x2C token.text.slice(1\x2C -1)];\n                        else\n                            fail(f.quote `Cannot convert value ${token} to type ${type}`);\n                        break;\n                    default: fail(f.quote `Cannot evaluate token ${token} of type ${token.type}`);\n                }\n            }\n            static evaluateToken(token\x2C type) {\n                try {\n                    return this.prototype.evaluateToken.call(new Proxy({}\x2C {\n                        get() { throw new _a.NotStaticError(); }\x2C\n                    })\x2C token\x2C type);\n                }\n                catch (err) {\n                    if (err instanceof _a.NotStaticError)\n                        fail(f.quote `Cannot evaluate token ${token} in a static context`\x2C token);\n                    else\n                        throw err;\n                }\n            }\n            resolveVariableType(type) {\n                if (type instanceof PrimitiveVariableType || type instanceof ArrayVariableType)\n                    return type;\n                else\n                    return this.getType(type[1]) ?? fail(f.quote `Type ${type[1]} does not exist`);\n            }\n            getVariable(name) {\n                for (let i = this.scopes.length - 1; i >= 0; i--) {\n                    if (this.scopes[i].variables[name])\n                        return this.scopes[i].variables[name];\n                }\n                return null;\n            }\n            getType(name) {\n                for (let i = this.scopes.length - 1; i >= 0; i--) {\n                    if (this.scopes[i].types[name])\n                        return this.scopes[i].types[name];\n                }\n                return null;\n            }\n            getEnumFromValue(name) {\n                for (let i = this.scopes.length - 1; i >= 0; i--) {\n                    const data = Object.values(this.scopes[i].types)\n                        .find((data) => data instanceof EnumeratedVariableType && data.values.includes(name));\n                    if (data)\n                        return data;\n                }\n                return null;\n            }\n            getPointerTypeFor(type) {\n                for (let i = this.scopes.length - 1; i >= 0; i--) {\n                    const data = Object.values(this.scopes[i].types)\n                        .find((data) => data instanceof PointerVariableType && typesEqual(data.target\x2C type));\n                    if (data)\n                        return data;\n                }\n                return null;\n            }\n            getCurrentScope() {\n                return this.scopes.at(-1) ?? crash(`No scope?`);\n            }\n            canAccessClass(clazz) {\n                for (const { statement } of this.scopes.slice().reverse()) {\n                    if (statement instanceof ClassStatement)\n                        return statement == clazz.statement;\n                    if (statement.constructor == FunctionStatement || statement.constructor == ProcedureStatement)\n                        return false;\n                }\n                return false;\n            }\n            getFunction(name) {\n                return this.functions[name] ?? builtinFunctions[name] ?? fail(f.quote `Function ${name} has not been defined.`);\n            }\n            getClass(name) {\n                for (let i = this.scopes.length - 1; i >= 0; i--) {\n                    if (this.scopes[i].types[name]) {\n                        if (!(this.scopes[i].types[name] instanceof ClassVariableType))\n                            fail(f.quote `Type ${name} is not a class\x2C it is ${this.scopes[i].types[name]}`);\n                        return this.scopes[i].types[name];\n                    }\n                }\n                fail(f.quote `Class ${name} has not been defined.`);\n            }\n            getCurrentFunction() {\n                const scope = this.scopes.findLast((s) => s.statement instanceof FunctionStatement || s.statement instanceof ProcedureStatement || s.statement instanceof ClassFunctionStatement || s.statement instanceof ClassProcedureStatement);\n                if (!scope)\n                    return null;\n                if (scope.statement instanceof ClassFunctionStatement || scope.statement instanceof ClassProcedureStatement)\n                    return scope.statement;\n                else\n                    return this.functions[scope.statement.name] ?? crash(`Function ${scope.statement.name} does not exist`);\n            }\n            coerceValue(value\x2C from\x2C to) {\n                if (typesEqual(from\x2C to))\n                    return value;\n                if (from.is("STRING") && to.is("CHAR"))\n                    return value;\n                if (from.is("INTEGER") && to.is("REAL"))\n                    return value;\n                if (from.is("REAL") && to.is("INTEGER"))\n                    return Math.trunc(value);\n                if (to.is("STRING")) {\n                    if (from.is("BOOLEAN"\x2C "CHAR"\x2C "DATE"\x2C "INTEGER"\x2C "REAL"\x2C "STRING"))\n                        return value.toString();\n                    else if (from instanceof ArrayVariableType)\n                        return `[${value.join("\x2C")}]`;\n                }\n                if (from instanceof ClassVariableType && to instanceof ClassVariableType && from.inherits(to))\n                    return value;\n                fail(f.quote `Cannot coerce value of type ${from} to ${to}`);\n            }\n            cloneValue(type\x2C value) {\n                if (value == null)\n                    return value;\n                if (typeof value == "string")\n                    return value;\n                if (typeof value == "number")\n                    return value;\n                if (typeof value == "boolean")\n                    return value;\n                if (value instanceof Date)\n                    return new Date(value);\n                if (Array.isArray(value))\n                    return value.slice().map(v => this.cloneValue(this.resolveVariableType(type.type)\x2C v));\n                if (type instanceof PointerVariableType)\n                    return value;\n                if (type instanceof RecordVariableType)\n                    return Object.fromEntries(Object.entries(value)\n                        .map(([k\x2C v]) => [k\x2C this.cloneValue(type.fields[k]\x2C v)]));\n                if (type instanceof ClassVariableType)\n                    return {\n                        properties: Object.fromEntries(Object.entries(value.properties)\n                            .map(([k\x2C v]) => [k\x2C this.cloneValue(this.resolveVariableType(type.properties[k].varType)\x2C v)]))\x2C\n                        type: value.type\n                    };\n                crash(f.quote `Cannot clone value of type ${type}`);\n            }\n            assembleScope(func\x2C args) {\n                if (func.args.size != args.length)\n                    fail(`Incorrect number of arguments for function ${func.name}`);\n                const scope = {\n                    statement: func\x2C\n                    variables: {}\x2C\n                    types: {}\x2C\n                };\n                for (const [i\x2C [name\x2C { type\x2C passMode }]] of [...func.args.entries()].entries()) {\n                    const rType = this.resolveVariableType(type);\n                    if (passMode == "reference") {\n                        const varData = this.evaluateExpr(args[i]\x2C "variable");\n                        if (!typesEqual(varData.type\x2C rType))\n                            fail(f.quote `Expected the argument to be of type ${rType}\x2C but it was of type ${varData.type}. Cannot coerce BYREF arguments\x2C please change the variable's type.`);\n                        scope.variables[name] = {\n                            declaration: func\x2C\n                            mutable: true\x2C\n                            type: rType\x2C\n                            get value() { return varData.value ?? fail(`Variable (passed by reference) has not been initialized`); }\x2C\n                            set value(value) { varData.value = value; }\n                        };\n                    }\n                    else {\n                        const value = this.evaluateExpr(args[i]\x2C rType)[1];\n                        scope.variables[name] = {\n                            declaration: func\x2C\n                            mutable: true\x2C\n                            type: rType\x2C\n                            value: this.cloneValue(rType\x2C value)\n                        };\n                    }\n                }\n                return scope;\n            }\n            callFunction(funcNode\x2C args\x2C requireReturnValue) {\n                const func = funcNode.controlStatements[0];\n                if (func instanceof ProcedureStatement && requireReturnValue)\n                    fail(`Cannot use return value of ${func.name}() as it is a procedure`);\n                const scope = this.assembleScope(func\x2C args);\n                const output = this.runBlock(funcNode.nodeGroups[0]\x2C scope);\n                if (func instanceof ProcedureStatement) {\n                    return null;\n                }\n                else {\n                    if (!output)\n                        fail(f.quote `Function ${func.name} did not return a value`);\n                    return output.value;\n                }\n            }\n            callClassMethod(funcNode\x2C instance\x2C args\x2C requireReturnValue) {\n                const func = funcNode.controlStatements[0];\n                if (func instanceof ClassProcedureStatement && requireReturnValue)\n                    fail(`Cannot use return value of ${func.name}() as it is a procedure`);\n                const classScope = instance.type.getScope(this\x2C instance);\n                const methodScope = this.assembleScope(func\x2C args);\n                const output = this.runBlock(funcNode.nodeGroups[0]\x2C classScope\x2C methodScope);\n                if (func instanceof ClassProcedureStatement) {\n                    return null;\n                }\n                else {\n                    return output ? [this.resolveVariableType(func.returnType)\x2C output.value] : fail(f.quote `Function ${func.name} did not return a value`);\n                }\n            }\n            callBuiltinFunction(fn\x2C args\x2C returnType) {\n                if (fn.args.size != args.length)\n                    fail(f.quote `Incorrect number of arguments for function ${fn.name}`);\n                if (!fn.returnType)\n                    fail(f.quote `Builtin function ${fn.name} does not return a value`);\n                const processedArgs = [];\n                let i = 0;\n                nextArg: for (const { type } of fn.args.values()) {\n                    const errors = [];\n                    for (const possibleType of type) {\n                        try {\n                            processedArgs.push(this.evaluateExpr(args[i]\x2C possibleType)[1]);\n                            i++;\n                            continue nextArg;\n                        }\n                        catch (err) {\n                            if (err instanceof SoodocodeError)\n                                errors.push(err);\n                            else\n                                throw err;\n                        }\n                    }\n                    throw errors.at(-1);\n                }\n                if (returnType)\n                    return [returnType\x2C this.coerceValue(fn.impl.apply(this\x2C processedArgs)\x2C fn.returnType\x2C returnType)];\n                else\n                    return [fn.returnType\x2C fn.impl.apply(this\x2C processedArgs)];\n            }\n            runBlock(code\x2C ...scopes) {\n                this.scopes.push(...scopes);\n                let returned = null;\n                for (const node of code) {\n                    let result;\n                    if (node instanceof Statement) {\n                        result = node.run(this);\n                    }\n                    else {\n                        result = node.controlStatements[0].runBlock(this\x2C node);\n                    }\n                    if (result) {\n                        if (result.type == "function_return") {\n                            returned = result.value;\n                            break;\n                        }\n                    }\n                }\n                if (scopes.length > 0 && this.scopes.splice(-scopes.length).length != scopes.length)\n                    crash(`Scope somehow disappeared`);\n                if (returned !== null) {\n                    return {\n                        type: "function_return"\x2C\n                        value: returned\n                    };\n                }\n            }\n            runProgram(code) {\n                this.runBlock(code\x2C {\n                    statement: "global"\x2C\n                    variables: {}\x2C\n                    types: {}\n                });\n                for (const filename in this.openFiles) {\n                    if (this.openFiles[filename] == undefined)\n                        delete this.openFiles[filename];\n                    else\n                        fail(f.quote `File ${filename} was not closed`);\n                }\n            }\n            getOpenFile(filename\x2C modes\x2C operationDescription) {\n                const data = (this.openFiles[filename] ?? fail(f.quote `File ${filename} is not open or does not exist.`));\n                if (modes && operationDescription && !modes.includes(data.mode))\n                    fail(f.quote `${operationDescription} requires the file to have been opened with mode ${modes.map(m => `"${m}"`).join(" or ")}\x2C but the mode is ${data.mode}`);\n                return data;\n            }\n        }\x2C\n        (() => {\n            const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;\n            _processArrayAccess_decorators = [errorBoundary()];\n            _processRecordAccess_decorators = [errorBoundary()];\n            _evaluateExpr_decorators = [errorBoundary({\n                    predicate: (_expr\x2C _type\x2C recursive) => !recursive\x2C\n                    message: () => `Cannot evaluate expression $rc: `\n                })];\n            __esDecorate(_a\x2C null\x2C _processArrayAccess_decorators\x2C { kind: "method"\x2C name: "processArrayAccess"\x2C static: false\x2C private: false\x2C access: { has: obj => "processArrayAccess" in obj\x2C get: obj => obj.processArrayAccess }\x2C metadata: _metadata }\x2C null\x2C _instanceExtraInitializers);\n            __esDecorate(_a\x2C null\x2C _processRecordAccess_decorators\x2C { kind: "method"\x2C name: "processRecordAccess"\x2C static: false\x2C private: false\x2C access: { has: obj => "processRecordAccess" in obj\x2C get: obj => obj.processRecordAccess }\x2C metadata: _metadata }\x2C null\x2C _instanceExtraInitializers);\n            __esDecorate(_a\x2C null\x2C _evaluateExpr_decorators\x2C { kind: "method"\x2C name: "evaluateExpr"\x2C static: false\x2C private: false\x2C access: { has: obj => "evaluateExpr" in obj\x2C get: obj => obj.evaluateExpr }\x2C metadata: _metadata }\x2C null\x2C _instanceExtraInitializers);\n            if (_metadata) Object.defineProperty(_a\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        })()\x2C\n        _a.NotStaticError = class extends Error {\n        }\x2C\n        _a;\n})();\nexport { Runtime };\n
code-source-info,0xc2df92e0c6,111,0,51330,C10O0C28O0C48O0C55O24C59O38C69O24C71O358C75O372C85O358C127O4879C130O5433C135O51306C138O5433C143O51330,,
code-creation,JS,10,252013,0xc2df92f11e,225, file:///C:/coding/soodocode/build/runtime.js:88:16,0xc2df92de38,~
code-source-info,0xc2df92f11e,111,5434,51305,C0O5434C17O5491C19O5491C21O5503C22O5503C24O5543C25O5543C27O5584C28O5584C30O5614C183O5624C185O51227C190O51227C193O51257C196O51273C218O51257C222O51300C224O51303,,
code-creation,JS,10,252058,0xc2df92fcae,381, file:///C:/coding/soodocode/build/runtime.js:824:10,0xc2df92ea60,~
code-source-info,0xc2df92fcae
tick,0x7ff6cbd529f0,252144,1,0x7ff6cb856350,3,0x7ff6cc23aba0,0xc2df90c2a8,0xc2df90bf49,0x7ff64c4552e0,0x7ff6cc2dfcd7
code-creation,Script,10,253790,0xc2df93474e,580, file:///C:/coding/soodocode/build/runtime-types.js:1:1,0xc2df9324f0,~
script-source,112,file:///C:/coding/soodocode/build/runtime-types.js,import { crash\x2C f\x2C fail } from "./utils.js";\nexport class BaseVariableType {\n    is(...type) {\n        return false;\n    }\n    fmtQuoted() {\n        return `"${this.fmtText()}"`;\n    }\n}\nexport class PrimitiveVariableType extends BaseVariableType {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    fmtDebug() {\n        return `PrimitiveVariableType ${this.name}`;\n    }\n    fmtText() {\n        return this.name;\n    }\n    is(...type) {\n        return type.includes(this.name);\n    }\n    static valid(input) {\n        return input == "INTEGER" || input == "REAL" || input == "STRING" || input == "CHAR" || input == "BOOLEAN" || input == "DATE";\n    }\n    static get(type) {\n        return this.valid(type) ? this[type] : undefined;\n    }\n    static resolve(type) {\n        return this.get(type) ?? ["unresolved"\x2C type];\n    }\n    getInitValue(runtime\x2C requireInit) {\n        if (requireInit)\n            return {\n                INTEGER: 0\x2C\n                REAL: 0\x2C\n                STRING: ""\x2C\n                CHAR: ''\x2C\n                BOOLEAN: false\x2C\n                DATE: new Date()\n            }[this.name];\n        else\n            return null;\n    }\n}\nPrimitiveVariableType.INTEGER = new PrimitiveVariableType("INTEGER");\nPrimitiveVariableType.REAL = new PrimitiveVariableType("REAL");\nPrimitiveVariableType.STRING = new PrimitiveVariableType("STRING");\nPrimitiveVariableType.CHAR = new PrimitiveVariableType("CHAR");\nPrimitiveVariableType.BOOLEAN = new PrimitiveVariableType("BOOLEAN");\nPrimitiveVariableType.DATE = new PrimitiveVariableType("DATE");\nexport class ArrayVariableType extends BaseVariableType {\n    constructor(lengthInformation\x2C type) {\n        super();\n        this.lengthInformation = lengthInformation;\n        this.type = type;\n        if (this.lengthInformation.some(b => b[1] < b[0]))\n            fail(`Invalid length information: upper bound cannot be less than lower bound`);\n        if (this.lengthInformation.some(b => b.some(n => !Number.isSafeInteger(n))))\n            fail(`Invalid length information: bound was not an integer`);\n        this.arraySizes = this.lengthInformation.map(b => b[1] - b[0] + 1);\n        this.totalLength = this.arraySizes.reduce((a\x2C b) => a * b\x2C 1);\n    }\n    fmtText() {\n        return f.text `ARRAY[${this.lengthInformation.map(([l\x2C h]) => `${l}:${h}`).join("\x2C ")}] OF ${this.type}`;\n    }\n    fmtDebug() {\n        return f.debug `ARRAY[${this.lengthInformation.map(([l\x2C h]) => `${l}:${h}`).join("\x2C ")}] OF ${this.type}`;\n    }\n    getInitValue(runtime\x2C requireInit) {\n        const type = runtime.resolveVariableType(this.type);\n        if (type instanceof ArrayVariableType)\n            crash(`Attempted to initialize array of arrays`);\n        return Array.from({ length: this.totalLength }\x2C () => type.getInitValue(runtime\x2C true));\n    }\n}\nexport class RecordVariableType extends BaseVariableType {\n    constructor(name\x2C fields) {\n        super();\n        this.name = name;\n        this.fields = fields;\n    }\n    fmtText() {\n        return `${this.name} (user-defined record type)`;\n    }\n    fmtQuoted() {\n        return `"${this.name}" (user-defined record type)`;\n    }\n    fmtDebug() {\n        return `RecordVariableType [${this.name}] (fields: ${Object.keys(this.fields).join("\x2C ")})`;\n    }\n    getInitValue(runtime\x2C requireInit) {\n        return Object.fromEntries(Object.entries(this.fields)\n            .map(([k\x2C v]) => [k\x2C v.getInitValue(runtime\x2C false)]));\n    }\n}\nexport class PointerVariableType extends BaseVariableType {\n    constructor(name\x2C target) {\n        super();\n        this.name = name;\n        this.target = target;\n    }\n    fmtText() {\n        return f.text `${this.name} (user-defined pointer type ^${this.target})`;\n    }\n    fmtQuoted() {\n        return f.text `"${this.name}" (user-defined pointer type ^${this.target})`;\n    }\n    fmtDebug() {\n        return f.debug `PointerVariableType [${this.name}] to "${this.target}"`;\n    }\n    getInitValue(runtime) {\n        return null;\n    }\n}\nexport class EnumeratedVariableType extends BaseVariableType {\n    constructor(name\x2C values) {\n        super();\n        this.name = name;\n        this.values = values;\n    }\n    fmtText() {\n        return `${this.name} (user-defined enumerated type)`;\n    }\n    fmtQuoted() {\n        return `"${this.name}" (user-defined enumerated type)`;\n    }\n    fmtDebug() {\n        return f.debug `EnumeratedVariableType [${this.name}] (values: ${this.values.join("\x2C ")})`;\n    }\n    getInitValue(runtime) {\n        return null;\n    }\n}\nexport class SetVariableType extends BaseVariableType {\n    constructor(name\x2C baseType) {\n        super();\n        this.name = name;\n        this.baseType = baseType;\n    }\n    fmtText() {\n        return f.text `${this.name} (user-defined set type containing "${this.baseType}")`;\n    }\n    toQuotedString() {\n        return f.text `"${this.name}" (user-defined set type containing "${this.baseType}")`;\n    }\n    fmtDebug() {\n        return f.debug `SetVariableType [${this.name}] (contains: ${this.baseType})`;\n    }\n    getInitValue(runtime) {\n        fail(`Cannot declare a set variable with the DECLARE statement\x2C please use the DEFINE statement`);\n    }\n}\nexport class ClassVariableType extends BaseVariableType {\n    constructor(statement\x2C properties = {}\x2C methods = {}) {\n        super();\n        this.statement = statement;\n        this.properties = properties;\n        this.methods = methods;\n        this.name = this.statement.name.text;\n        this.baseClass = null;\n    }\n    fmtText() {\n        return f.text `${this.name} (user-defined class type)`;\n    }\n    fmtPlain() {\n        return this.name;\n    }\n    toQuotedString() {\n        return f.quote `"${this.name}" (user-defined class type)`;\n    }\n    fmtDebug() {\n        return f.debug `ClassVariableType [${this.name}]`;\n    }\n    getInitValue(runtime) {\n        return null;\n    }\n    inherits(other) {\n        return this.baseClass != null && (other == this.baseClass || this.baseClass.inherits(other));\n    }\n    construct(runtime\x2C args) {\n        const data = {\n            properties: Object.fromEntries(Object.entries(this.properties).map(([k\x2C v]) => [k\x2C\n                runtime.resolveVariableType(v.varType).getInitValue(runtime\x2C false)\n            ]))\x2C\n            type: this\n        };\n        runtime.callClassMethod(this.methods["NEW"] ?? fail(`No constructor was defined for class ${this.name}`)\x2C data\x2C args);\n        return data;\n    }\n    getScope(runtime\x2C instance) {\n        return {\n            statement: this.statement\x2C\n            types: {}\x2C\n            variables: Object.fromEntries(Object.entries(this.properties).map(([k\x2C v]) => [k\x2C {\n                    type: runtime.resolveVariableType(v.varType)\x2C\n                    get value() { return instance.properties[k]; }\x2C\n                    set value(value) { instance.properties[k] = value; }\x2C\n                    declaration: v\x2C\n                    mutable: true\x2C\n                }]))\n        };\n    }\n}\n
code-source-info,0xc2df93474e,112,0,6991,C10O0C28O0C48O0C82O52C85O230C142O194C145O1184C149O1220C158O1216C163O1214C167O1254C171O1287C180O1283C185O1281C189O1318C193O1353C202O1349C207O1347C211O1386C215O1419C224O1415C229O1413C233O1450C237O1486C246O1482C251O1480C255O1520C259O1553C268O1549C274O1547C288O1623C329O1591C332O2874C374O2841C377O3512C419O3478C422O4059C464O4022C467O4578C509O4548C512O5242C574O5210C579O6991,,
code-creation,JS,11,254558,0x7ff64c459b80,384,lazyTypes node:internal/modules/esm/translators:27:19,0x8c1d177ad8,^
code-source-info,0x7ff64c459b80,86,556,657,,,
code-creation,JS,11,254599,0x7ff64c459d40,152, node:internal/fs/promises:239:9,0xc2df90b0e0,^
code-source-info,0x7ff64c459d40,94,5686,5728,,,
code-creation,JS,11,254630,0x7ff64c459e00,44, node:internal/fs/promises:416:51,0xc2df90af50,^
code-source-info,0x7ff64c459e00,94,10166,10178,,,
code-creation,JS,11,254666,0x7ff64c459e40,760,registerModule node:internal/modules/esm/utils:154:24,0x3fcdefbe750,^
code-source-info,0x7ff64c459e40,66,4752,5406,,,
code-creation,JS,11,254698,0x7ff64c45a180,576,getConditionsSet node:internal/modules/esm/utils:87:26,0x3fcdefbe700,^
code-source-info,0x7ff64c45a180,66,2185,2528,,,
code-creation,JS,11,254741,0x7ff64c45a400,1528,link node:internal/modules/esm/module_job:77:18,0x2bb6ec90ea0,^
code-source-info,0x7ff64c45a400,92,2242,3087,,,
code-creation,JS,11,254772,0x7ff64c45aa40,724,stringify node:internal/modules/esm/translators:131:19,0x8c1d177c18,^
code-source-info,0x7ff64c45aa40,86,4319,4574,,,
code-creation,JS,11,254802,0x7ff64c45ad40,648,assertBufferSource node:internal/modules/esm/translators:110:28,0x8c1d177bc8,^
code-source-info,0x7ff64c45ad40,86,3662,4070,,,
new,MemoryChunk,0x18122800000,262144
new,MemoryChunk,0x10d2e80000,262144
new,MemoryChunk,0x31013100000,262144
new,MemoryChunk,0x999ce80000,262144
new,MemoryChunk,0x2c01bf40000,262144
code-creation,Script,10,260598,0xc2df93cd16,566, file:///C:/coding/soodocode/build/statements.js:1:1,0xc2df937908,~
script-source,113,file:///C:/coding/soodocode/build/statements.js,var __esDecorate = (this && this.__esDecorate) || function (ctor\x2C descriptorIn\x2C decorators\x2C contextIn\x2C initializers\x2C extraInitializers) {\n    function accept(f) { if (f !== void 0 && typeof f !== "function") throw new TypeError("Function expected"); return f; }\n    var kind = contextIn.kind\x2C key = kind === "getter" ? "get" : kind === "setter" ? "set" : "value";\n    var target = !descriptorIn && ctor ? contextIn["static"] ? ctor : ctor.prototype : null;\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target\x2C contextIn.name) : {});\n    var _\x2C done = false;\n    for (var i = decorators.length - 1; i >= 0; i--) {\n        var context = {};\n        for (var p in contextIn) context[p] = p === "access" ? {} : contextIn[p];\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n        context.addInitializer = function (f) { if (done) throw new TypeError("Cannot add initializers after decoration has completed"); extraInitializers.push(accept(f || null)); };\n        var result = (0\x2C decorators[i])(kind === "accessor" ? { get: descriptor.get\x2C set: descriptor.set } : descriptor[key]\x2C context);\n        if (kind === "accessor") {\n            if (result === void 0) continue;\n            if (result === null || typeof result !== "object") throw new TypeError("Object expected");\n            if (_ = accept(result.get)) descriptor.get = _;\n            if (_ = accept(result.set)) descriptor.set = _;\n            if (_ = accept(result.init)) initializers.unshift(_);\n        }\n        else if (_ = accept(result)) {\n            if (kind === "field") initializers.unshift(_);\n            else descriptor[key] = _;\n        }\n    }\n    if (target) Object.defineProperty(target\x2C contextIn.name\x2C descriptor);\n    done = true;\n};\nvar __runInitializers = (this && this.__runInitializers) || function (thisArg\x2C initializers\x2C value) {\n    var useValue = arguments.length > 2;\n    for (var i = 0; i < initializers.length; i++) {\n        value = useValue ? initializers[i].call(thisArg\x2C value) : initializers[i].call(thisArg);\n    }\n    return useValue ? value : void 0;\n};\nvar __setFunctionName = (this && this.__setFunctionName) || function (f\x2C name\x2C prefix) {\n    if (typeof name === "symbol") name = name.description ? "[".concat(name.description\x2C "]") : "";\n    return Object.defineProperty(f\x2C "name"\x2C { configurable: true\x2C value: prefix ? "".concat(prefix\x2C " "\x2C name) : name });\n};\nimport { builtinFunctions } from "./builtin_functions.js";\nimport { Token\x2C TokenType } from "./lexer-types.js";\nimport { ExpressionASTFunctionCallNode\x2C ProgramASTBranchNode\x2C ProgramASTBranchNodeType } from "./parser-types.js";\nimport { expressionLeafNodeTypes\x2C isLiteral\x2C parseExpression\x2C parseFunctionArguments\x2C processTypeData } from "./parser.js";\nimport { ClassVariableType\x2C EnumeratedVariableType\x2C PointerVariableType\x2C PrimitiveVariableType\x2C RecordVariableType\x2C SetVariableType } from "./runtime-types.js";\nimport { Runtime\x2C checkClassMethodsCompatible } from "./runtime.js";\nimport { Abstract\x2C crash\x2C f\x2C fail\x2C getTotalRange\x2C getUniqueNamesFromCommaSeparatedTokenList\x2C splitTokensOnComma } from "./utils.js";\nexport const statementTypes = [\n    "declare"\x2C "define"\x2C "constant"\x2C "assignment"\x2C "output"\x2C "input"\x2C "return"\x2C "call"\x2C\n    "type"\x2C "type.pointer"\x2C "type.enum"\x2C "type.set"\x2C "type.end"\x2C\n    "if"\x2C "if.end"\x2C "else"\x2C\n    "switch"\x2C "switch.end"\x2C "case"\x2C "case.range"\x2C\n    "for"\x2C "for.step"\x2C "for.end"\x2C\n    "while"\x2C "while.end"\x2C\n    "dowhile"\x2C "dowhile.end"\x2C\n    "function"\x2C "function.end"\x2C\n    "procedure"\x2C "procedure.end"\x2C\n    "openfile"\x2C "readfile"\x2C "writefile"\x2C "closefile"\x2C\n    "seek"\x2C "getrecord"\x2C "putrecord"\x2C\n    "class"\x2C "class.inherits"\x2C "class.end"\x2C\n    "class_property"\x2C\n    "class_procedure"\x2C "class_procedure.end"\x2C\n    "class_function"\x2C "class_function.end"\x2C\n];\nexport function StatementType(input) {\n    if (statementTypes.includes(input))\n        return input;\n    crash(`"${input}" is not a valid statement type`);\n}\nexport const statements = {\n    byStartKeyword: {}\x2C\n    byType: {}\x2C\n    irregular: []\x2C\n};\nlet Statement = (() => {\n    let _classDecorators = [Abstract];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    var Statement = _classThis = class {\n        constructor(tokens) {\n            this.tokens = tokens;\n            this.type = this.constructor;\n            this.stype = this.type.type;\n            this.category = this.type.category;\n            this.range = getTotalRange(tokens);\n        }\n        fmtText() {\n            return this.tokens.map(t => t.fmtText()).join(" ");\n        }\n        fmtDebug() {\n            return this.tokens.map(t => t.fmtDebug()).join(" ");\n        }\n        static blockEndStatement() {\n            if (this.category != "block")\n                crash(`Statement ${this.type} has no block end statement because it is not a block statement`);\n            return statements.byType[StatementType(this.type.split(".")[0] + ".end")] ?? crash(`${name} is not a valid statement type`);\n        }\n        example() {\n            return this.type.example;\n        }\n        static supportsSplit(block\x2C statement) {\n            return true;\n        }\n        static checkBlock(block) {\n        }\n        run(runtime) {\n            crash(`Missing runtime implementation for statement ${this.stype}`);\n        }\n        runBlock(runtime\x2C node) {\n            if (this.category == "block")\n                crash(`Missing runtime implementation for block statement ${this.stype}`);\n            else\n                crash(`Cannot run statement ${this.stype} as a block\x2C because it is not a block statement`);\n        }\n    };\n    __setFunctionName(_classThis\x2C "Statement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        Statement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.category = null;\n    _classThis.example = null;\n    _classThis.tokens = null;\n    _classThis.suppressErrors = false;\n    _classThis.blockType = null;\n    _classThis.allowOnly = null;\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return Statement = _classThis;\n})();\nexport { Statement };\nfunction statement(type\x2C example\x2C ...args) {\n    return function (input) {\n        var _a\x2C _b\x2C _c\x2C _d\x2C _e\x2C _f\x2C _g;\n        var _h;\n        input.type = type;\n        input.example = example;\n        if (args[0] == "block" || args[0] == "block_end" || args[0] == "block_multi_split") {\n            input.category = args[0];\n            args.shift();\n        }\n        else {\n            input.category = "normal";\n        }\n        if (args[0] == "auto" && input.category == "block") {\n            args.shift();\n            statement(StatementType(type + ".end")\x2C "[unknown]"\x2C "block_end"\x2C TokenType(args[0] + "_end"))((_h = class __endStatement extends Statement {\n                }\x2C\n                _h.blockType = ProgramASTBranchNodeType(type)\x2C\n                _h));\n        }\n        if (args.length < 1)\n            crash(`Invalid statement definitions! All statements must contain at least one token`);\n        if (args.find((v\x2C i\x2C args) => (v == "expr+" || v == ".+" || v == ".*") &&\n            (args[i + 1] == "expr+" || args[i + 1] == ".+" || args[i + 1] == ".*" || args[i + 1] == "type+")))\n            crash(`Invalid statement definitions! Variadic fragment specifiers cannot be adjacent.`);\n        if (args[0] == "#") {\n            statements.irregular.push(input);\n        }\n        else {\n            const firstToken = args[0];\n            switch (firstToken) {\n                case ".":\n                case ".*":\n                case ".+":\n                case "expr+":\n                case "type+":\n                case "literal":\n                case "literal|otherwise":\n                    crash(`Invalid statement definitions! Statements starting with matcher ${firstToken} must be irregular`);\n                    break;\n                case "class_modifier":\n                    ((_a = statements.byStartKeyword)["keyword.class_modifier.private"] ?? (_a["keyword.class_modifier.private"] = [])).push(input);\n                    ((_b = statements.byStartKeyword)["keyword.class_modifier.public"] ?? (_b["keyword.class_modifier.public"] = [])).push(input);\n                    break;\n                case "file_mode":\n                    ((_c = statements.byStartKeyword)["keyword.file_mode.read"] ?? (_c["keyword.file_mode.read"] = [])).push(input);\n                    ((_d = statements.byStartKeyword)["keyword.file_mode.write"] ?? (_d["keyword.file_mode.write"] = [])).push(input);\n                    ((_e = statements.byStartKeyword)["keyword.file_mode.append"] ?? (_e["keyword.file_mode.append"] = [])).push(input);\n                    ((_f = statements.byStartKeyword)["keyword.file_mode.random"] ?? (_f["keyword.file_mode.random"] = [])).push(input);\n                    break;\n                default:\n                    ((_g = statements.byStartKeyword)[firstToken] ?? (_g[firstToken] = [])).push(input);\n            }\n        }\n        if (statements.byType[type])\n            crash(`Invalid statement definitions! Statement for type ${type} already registered`);\n        statements.byType[type] = input;\n        input.tokens = args;\n        return input;\n    };\n}\nlet DeclareStatement = (() => {\n    let _classDecorators = [statement("declare"\x2C "DECLARE variable: TYPE"\x2C "keyword.declare"\x2C ".+"\x2C "punctuation.colon"\x2C "type+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var DeclareStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.variables = [];\n            this.variables = getUniqueNamesFromCommaSeparatedTokenList(tokens.slice(1\x2C -2)\x2C tokens.at(-2)).map(t => t.text);\n            this.varType = processTypeData(tokens.at(-1));\n        }\n        run(runtime) {\n            const varType = runtime.resolveVariableType(this.varType);\n            for (const variable of this.variables) {\n                if (runtime.getVariable(variable))\n                    fail(`Variable ${variable} was already declared`);\n                runtime.getCurrentScope().variables[variable] = {\n                    type: varType\x2C\n                    value: typeof varType == "string" ? null : varType.getInitValue(runtime\x2C false)\x2C\n                    declaration: this\x2C\n                    mutable: true\x2C\n                };\n            }\n        }\n    };\n    __setFunctionName(_classThis\x2C "DeclareStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        DeclareStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return DeclareStatement = _classThis;\n})();\nexport { DeclareStatement };\nlet ConstantStatement = (() => {\n    let _classDecorators = [statement("constant"\x2C "CONSTANT x = 1.5"\x2C "keyword.constant"\x2C "name"\x2C "operator.equal_to"\x2C "literal")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ConstantStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            const [_constant\x2C name\x2C _equals\x2C expr] = tokens;\n            this.name = name.text;\n            this.expr = expr;\n        }\n        run(runtime) {\n            if (runtime.getVariable(this.name))\n                fail(`Constant ${this.name} was already declared`);\n            const [type\x2C value] = Runtime.evaluateToken(this.expr);\n            runtime.getCurrentScope().variables[this.name] = {\n                type\x2C\n                get value() { return value; }\x2C\n                set value(value) { crash(`Attempted assignment to constant`); }\x2C\n                declaration: this\x2C\n                mutable: false\x2C\n            };\n        }\n    };\n    __setFunctionName(_classThis\x2C "ConstantStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ConstantStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ConstantStatement = _classThis;\n})();\nexport { ConstantStatement };\nlet DefineStatement = (() => {\n    let _classDecorators = [statement("define"\x2C "DEFINE PrimesBelow20 (2\x2C 3\x2C 5\x2C 7\x2C 11\x2C 13\x2C 17\x2C 19): myIntegerSet"\x2C "keyword.define"\x2C "name"\x2C "parentheses.open"\x2C ".+"\x2C "parentheses.close"\x2C "punctuation.colon"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var DefineStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.name = tokens[1];\n            this.variableType = tokens.at(-1);\n            this.values = getUniqueNamesFromCommaSeparatedTokenList(tokens.slice(3\x2C -3)\x2C tokens.at(-3)\x2C expressionLeafNodeTypes);\n        }\n        run(runtime) {\n            const type = runtime.getType(this.variableType.text) ?? fail(`Nonexistent variable type ${this.variableType.text}`\x2C this.variableType);\n            if (!(type instanceof SetVariableType))\n                fail(`DEFINE can only be used on set types\x2C please use a declare statement instead`\x2C this.variableType);\n            runtime.getCurrentScope().variables[this.name.text] = {\n                type\x2C\n                declaration: this\x2C\n                mutable: true\x2C\n                value: this.values.map(t => Runtime.evaluateToken(t\x2C type.baseType)[1])\n            };\n        }\n    };\n    __setFunctionName(_classThis\x2C "DefineStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        DefineStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return DefineStatement = _classThis;\n})();\nexport { DefineStatement };\nlet TypePointerStatement = (() => {\n    let _classDecorators = [statement("type.pointer"\x2C "TYPE IntPointer = ^INTEGER"\x2C "keyword.type"\x2C "name"\x2C "operator.equal_to"\x2C "operator.pointer"\x2C "type+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var TypePointerStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            let targetType;\n            [\x2C { text: this.name }\x2C \x2C \x2C targetType] = tokens;\n            this.targetType = processTypeData(targetType);\n        }\n        run(runtime) {\n            runtime.getCurrentScope().types[this.name] = new PointerVariableType(this.name\x2C runtime.resolveVariableType(this.targetType));\n        }\n    };\n    __setFunctionName(_classThis\x2C "TypePointerStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        TypePointerStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return TypePointerStatement = _classThis;\n})();\nexport { TypePointerStatement };\nlet TypeEnumStatement = (() => {\n    let _classDecorators = [statement("type.enum"\x2C "TYPE Weekend = (Sunday\x2C Saturday)"\x2C "keyword.type"\x2C "name"\x2C "operator.equal_to"\x2C "parentheses.open"\x2C ".+"\x2C "parentheses.close")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var TypeEnumStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.name = tokens[1];\n            this.values = getUniqueNamesFromCommaSeparatedTokenList(tokens.slice(4\x2C -1)\x2C tokens.at(-1));\n        }\n        run(runtime) {\n            runtime.getCurrentScope().types[this.name.text] = new EnumeratedVariableType(this.name.text\x2C this.values.map(t => t.text));\n        }\n    };\n    __setFunctionName(_classThis\x2C "TypeEnumStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        TypeEnumStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return TypeEnumStatement = _classThis;\n})();\nexport { TypeEnumStatement };\nlet TypeSetStatement = (() => {\n    let _classDecorators = [statement("type.set"\x2C "TYPE myIntegerSet = SET OF INTEGER"\x2C "keyword.type"\x2C "name"\x2C "operator.equal_to"\x2C "keyword.set"\x2C "keyword.of"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var TypeSetStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.name = tokens[1];\n            this.setType = PrimitiveVariableType.get(tokens[5].text) ?? fail(`Sets of non-primitive types are not supported.`);\n        }\n        run(runtime) {\n            runtime.getCurrentScope().types[this.name.text] = new SetVariableType(this.name.text\x2C this.setType);\n        }\n    };\n    __setFunctionName(_classThis\x2C "TypeSetStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        TypeSetStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return TypeSetStatement = _classThis;\n})();\nexport { TypeSetStatement };\nlet TypeRecordStatement = (() => {\n    let _classDecorators = [statement("type"\x2C "TYPE StudentData"\x2C "block"\x2C "auto"\x2C "keyword.type"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var TypeRecordStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.name = tokens[1];\n        }\n        runBlock(runtime\x2C node) {\n            const fields = {};\n            for (const statement of node.nodeGroups[0]) {\n                if (!(statement instanceof DeclareStatement))\n                    fail(`Statements in a record type block can only be declaration statements`);\n                const type = runtime.resolveVariableType(statement.varType);\n                statement.variables.forEach(v => fields[v] = type);\n            }\n            runtime.getCurrentScope().types[this.name.text] = new RecordVariableType(this.name.text\x2C fields);\n        }\n    };\n    __setFunctionName(_classThis\x2C "TypeRecordStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        TypeRecordStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return TypeRecordStatement = _classThis;\n})();\nexport { TypeRecordStatement };\nlet AssignmentStatement = (() => {\n    let _classDecorators = [statement("assignment"\x2C "x <- 5"\x2C "#"\x2C "expr+"\x2C "operator.assignment"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var AssignmentStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [this.target\x2C \x2C this.expr] = tokens;\n            if (this.target instanceof Token && isLiteral(this.target.type))\n                fail(f.quote `Cannot assign to literal token ${this.target}`\x2C this.target\x2C this);\n        }\n        run(runtime) {\n            const variable = runtime.evaluateExpr(this.target\x2C "variable");\n            if (!variable.mutable)\n                fail(f.quote `Cannot assign to constant ${this.target}`);\n            variable.value = runtime.evaluateExpr(this.expr\x2C variable.type)[1];\n        }\n    };\n    __setFunctionName(_classThis\x2C "AssignmentStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        AssignmentStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return AssignmentStatement = _classThis;\n})();\nexport { AssignmentStatement };\nlet OutputStatement = (() => {\n    let _classDecorators = [statement("output"\x2C `OUTPUT "message"`\x2C "keyword.output"\x2C ".+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var OutputStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.outMessage = splitTokensOnComma(tokens.slice(1)).map(parseExpression);\n        }\n        run(runtime) {\n            let outStr = "";\n            for (const token of this.outMessage) {\n                const expr = runtime.evaluateExpr(token\x2C PrimitiveVariableType.STRING)[1];\n                outStr += expr;\n            }\n            runtime._output(outStr);\n        }\n    };\n    __setFunctionName(_classThis\x2C "OutputStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        OutputStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return OutputStatement = _classThis;\n})();\nexport { OutputStatement };\nlet InputStatement = (() => {\n    let _classDecorators = [statement("input"\x2C "INPUT y"\x2C "keyword.input"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var InputStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.name = tokens[1].text;\n        }\n        run(runtime) {\n            const variable = runtime.getVariable(this.name);\n            if (!variable)\n                fail(`Undeclared variable ${this.name}`\x2C this.tokens[1]);\n            if (!variable.mutable)\n                fail(`Cannot INPUT ${this.name} because it is a constant`);\n            const input = runtime._input(f.text `Enter the value for variable "${this.name}" (type: ${variable.type})`);\n            switch (variable.type) {\n                case PrimitiveVariableType.BOOLEAN:\n                    variable.value = input.toLowerCase() != "false";\n                    break;\n                case PrimitiveVariableType.INTEGER: {\n                    const value = Number(input);\n                    if (isNaN(value))\n                        fail(`input was an invalid number`);\n                    if (!Number.isSafeInteger(value))\n                        fail(`input was an invalid integer`);\n                    variable.value = value;\n                    break;\n                }\n                case PrimitiveVariableType.REAL: {\n                    const value = Number(input);\n                    if (isNaN(value))\n                        fail(`input was an invalid number`);\n                    if (!Number.isSafeInteger(value))\n                        fail(`input was an invalid integer`);\n                    variable.value = value;\n                    break;\n                }\n                case PrimitiveVariableType.STRING:\n                    variable.value = input;\n                    break;\n                case PrimitiveVariableType.CHAR:\n                    if (input.length == 1)\n                        variable.value = input;\n                    else\n                        fail(`input was not a valid character: contained more than one character`);\n                    break;\n                default:\n                    fail(f.quote `Cannot INPUT variable of type ${variable.type}`\x2C this);\n            }\n        }\n    };\n    __setFunctionName(_classThis\x2C "InputStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        InputStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return InputStatement = _classThis;\n})();\nexport { InputStatement };\nlet ReturnStatement = (() => {\n    let _classDecorators = [statement("return"\x2C "RETURN z + 5"\x2C "keyword.return"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ReturnStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.expr = tokens[1];\n        }\n        run(runtime) {\n            const fn = runtime.getCurrentFunction();\n            if (!fn)\n                fail(`RETURN is only valid within a function.`);\n            let type;\n            if (fn instanceof ProgramASTBranchNode) {\n                const statement = fn.controlStatements[0];\n                if (statement instanceof ProcedureStatement)\n                    fail(`Procedures cannot return a value.`\x2C this);\n                type = statement.returnType;\n            }\n            else {\n                if (fn instanceof ClassProcedureStatement)\n                    fail(`Procedures cannot return a value.`\x2C this);\n                type = fn.returnType;\n            }\n            return {\n                type: "function_return"\x2C\n                value: runtime.evaluateExpr(this.expr\x2C runtime.resolveVariableType(type))[1]\n            };\n        }\n    };\n    __setFunctionName(_classThis\x2C "ReturnStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ReturnStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ReturnStatement = _classThis;\n})();\nexport { ReturnStatement };\nlet CallStatement = (() => {\n    let _classDecorators = [statement("call"\x2C "CALL Func(5)"\x2C "keyword.call"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var CallStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            if (tokens[1] instanceof ExpressionASTFunctionCallNode) {\n                this.func = tokens[1];\n            }\n            else\n                fail(`CALL can only be used to call functions or procedures`);\n        }\n        run(runtime) {\n            const func = runtime.evaluateExpr(this.func.functionName\x2C "function");\n            if (Array.isArray(func)) {\n                runtime.callClassMethod(func[0]\x2C func[1]\x2C this.func.args);\n            }\n            else {\n                if ("name" in func)\n                    fail(`CALL cannot be used on builtin functions\x2C because they have no side effects`);\n                if (func.controlStatements[0] instanceof FunctionStatement)\n                    fail(`CALL cannot be used on functions because "Functions should only be called as part of an expression." according to Cambridge.`);\n                runtime.callFunction(func\x2C this.func.args);\n            }\n        }\n    };\n    __setFunctionName(_classThis\x2C "CallStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        CallStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return CallStatement = _classThis;\n})();\nexport { CallStatement };\nlet IfStatement = (() => {\n    let _classDecorators = [statement("if"\x2C "IF a < 5 THEN"\x2C "block"\x2C "auto"\x2C "keyword.if"\x2C "expr+"\x2C "keyword.then")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var IfStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.condition = tokens[1];\n        }\n        runBlock(runtime\x2C node) {\n            if (runtime.evaluateExpr(this.condition\x2C PrimitiveVariableType.BOOLEAN)[1]) {\n                return runtime.runBlock(node.nodeGroups[0]);\n            }\n            else if (node.controlStatements[1] instanceof ElseStatement && node.nodeGroups[1]) {\n                return runtime.runBlock(node.nodeGroups[1]);\n            }\n        }\n    };\n    __setFunctionName(_classThis\x2C "IfStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        IfStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return IfStatement = _classThis;\n})();\nexport { IfStatement };\nlet ElseStatement = (() => {\n    let _classDecorators = [statement("else"\x2C "ELSE"\x2C "block_multi_split"\x2C "keyword.else")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ElseStatement = _classThis = class extends _classSuper {\n    };\n    __setFunctionName(_classThis\x2C "ElseStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ElseStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.blockType = "if";\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ElseStatement = _classThis;\n})();\nexport { ElseStatement };\nlet SwitchStatement = (() => {\n    let _classDecorators = [statement("switch"\x2C "CASE OF x"\x2C "block"\x2C "auto"\x2C "keyword.case"\x2C "keyword.of"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var SwitchStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [\x2C \x2C this.expression] = tokens;\n        }\n        static supportsSplit(block\x2C statement) {\n            if (block.nodeGroups.at(-1).length == 0 && block.nodeGroups.length != 1)\n                return `Previous case branch was empty. (Fallthrough is not supported.)`;\n            return true;\n        }\n        static checkBlock({ nodeGroups\x2C controlStatements }) {\n            if (nodeGroups[0].length > 0)\n                fail(`Statements are not allowed before the first case branch`\x2C nodeGroups[0]);\n            let err;\n            if (err = controlStatements.slice(1\x2C -1).find((s\x2C i\x2C arr) => s instanceof CaseBranchStatement && s.value.type == "keyword.otherwise" && i != arr.length - 1))\n                fail(`OTHERWISE case branch must be the last case branch`\x2C err);\n        }\n        runBlock(runtime\x2C { controlStatements\x2C nodeGroups }) {\n            const [switchType\x2C switchValue] = runtime.evaluateExpr(this.expression);\n            for (const [i\x2C statement] of controlStatements.entries()) {\n                if (i == 0)\n                    continue;\n                if (statement instanceof this.type.blockEndStatement())\n                    break;\n                else if (statement instanceof CaseBranchStatement) {\n                    const caseToken = statement.value;\n                    if (caseToken.type == "keyword.otherwise" && i != controlStatements.length - 2)\n                        crash(`OTHERWISE case branch must be the last case branch`);\n                    if (statement.branchMatches(switchType\x2C switchValue)) {\n                        runtime.runBlock(nodeGroups[i] ?? crash(`Missing node group in switch block`));\n                        break;\n                    }\n                }\n                else {\n                    console.error(controlStatements\x2C nodeGroups);\n                    crash(`Invalid set of control statements for switch block`);\n                }\n            }\n        }\n    };\n    __setFunctionName(_classThis\x2C "SwitchStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        SwitchStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return SwitchStatement = _classThis;\n})();\nexport { SwitchStatement };\nlet CaseBranchStatement = (() => {\n    let _classDecorators = [statement("case"\x2C "5: "\x2C "block_multi_split"\x2C "#"\x2C "literal|otherwise"\x2C "punctuation.colon")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var CaseBranchStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [this.value] = tokens;\n        }\n        branchMatches(switchType\x2C switchValue) {\n            if (this.value.type == "keyword.otherwise")\n                return true;\n            const [_caseType\x2C caseValue] = Runtime.evaluateToken(this.value\x2C switchType);\n            return switchValue == caseValue;\n        }\n    };\n    __setFunctionName(_classThis\x2C "CaseBranchStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        CaseBranchStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.blockType = "switch";\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return CaseBranchStatement = _classThis;\n})();\nexport { CaseBranchStatement };\nlet CaseBranchRangeStatement = (() => {\n    let _classDecorators = [statement("case.range"\x2C "5 TO 10: "\x2C "block_multi_split"\x2C "#"\x2C "literal"\x2C "keyword.to"\x2C "literal"\x2C "punctuation.colon")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = CaseBranchStatement;\n    var CaseBranchRangeStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            if (!CaseBranchRangeStatement.allowedTypes.includes(tokens[0].type))\n                fail(`Token of type ${tokens[0].type} is not valid in range cases: expected a number or character`\x2C tokens[0]);\n            if (tokens[2].type != tokens[0].type)\n                fail(`Token of type ${tokens[2].type} does not match the other range bound: expected a ${tokens[0].type}`\x2C tokens[2]);\n            this.upperBound = tokens[2];\n        }\n        branchMatches(switchType\x2C switchValue) {\n            if (this.value.type == "keyword.otherwise")\n                return true;\n            const [_lType\x2C lValue] = Runtime.evaluateToken(this.value\x2C switchType);\n            const [_uType\x2C uValue] = Runtime.evaluateToken(this.upperBound\x2C switchType);\n            return lValue <= switchValue && switchValue <= uValue;\n        }\n    };\n    __setFunctionName(_classThis\x2C "CaseBranchRangeStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        CaseBranchRangeStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.blockType = "switch";\n    _classThis.allowedTypes = ["number.decimal"\x2C "char"];\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return CaseBranchRangeStatement = _classThis;\n})();\nexport { CaseBranchRangeStatement };\nlet ForStatement = (() => {\n    let _classDecorators = [statement("for"\x2C "FOR i <- 1 TO 10"\x2C "block"\x2C "keyword.for"\x2C "name"\x2C "operator.assignment"\x2C "expr+"\x2C "keyword.to"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ForStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.name = tokens[1].text;\n            this.lowerBound = tokens[3];\n            this.upperBound = tokens[5];\n        }\n        step(_runtime) {\n            return 1;\n        }\n        runBlock(runtime\x2C node) {\n            const lower = runtime.evaluateExpr(this.lowerBound\x2C PrimitiveVariableType.INTEGER)[1];\n            const upper = runtime.evaluateExpr(this.upperBound\x2C PrimitiveVariableType.INTEGER)[1];\n            if (upper < lower)\n                return;\n            const end = node.controlStatements[1];\n            if (end.name !== this.name)\n                fail(`Incorrect NEXT statement: expected variable "${this.name}" from for loop\x2C got variable "${end.name}"`);\n            const step = this.step(runtime);\n            for (let i = lower; i <= upper; i += step) {\n                const result = runtime.runBlock(node.nodeGroups[0]\x2C {\n                    statement: this\x2C\n                    variables: {\n                        [this.name]: {\n                            declaration: this\x2C\n                            mutable: false\x2C\n                            type: PrimitiveVariableType.INTEGER\x2C\n                            get value() { return i; }\x2C\n                            set value(value) { crash(`Attempted assignment to constant`); }\x2C\n                        }\n                    }\x2C\n                    types: {}\n                });\n                if (result)\n                    return result;\n            }\n        }\n    };\n    __setFunctionName(_classThis\x2C "ForStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ForStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ForStatement = _classThis;\n})();\nexport { ForStatement };\nlet ForStepStatement = (() => {\n    let _classDecorators = [statement("for.step"\x2C "FOR x <- 1 TO 20 STEP 2"\x2C "block"\x2C "keyword.for"\x2C "name"\x2C "operator.assignment"\x2C "expr+"\x2C "keyword.to"\x2C "expr+"\x2C "keyword.step"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = ForStatement;\n    var ForStepStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.stepToken = tokens[7];\n        }\n        step(runtime) {\n            return runtime.evaluateExpr(this.stepToken\x2C PrimitiveVariableType.INTEGER)[1];\n        }\n    };\n    __setFunctionName(_classThis\x2C "ForStepStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ForStepStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ForStepStatement = _classThis;\n})();\nexport { ForStepStatement };\nlet ForEndStatement = (() => {\n    let _classDecorators = [statement("for.end"\x2C "NEXT i"\x2C "block_end"\x2C "keyword.for_end"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ForEndStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.name = tokens[1].text;\n        }\n    };\n    __setFunctionName(_classThis\x2C "ForEndStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ForEndStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.blockType = "for";\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ForEndStatement = _classThis;\n})();\nexport { ForEndStatement };\nlet WhileStatement = (() => {\n    let _classDecorators = [statement("while"\x2C "WHILE c < 20"\x2C "block"\x2C "auto"\x2C "keyword.while"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var WhileStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.condition = tokens[1];\n        }\n        runBlock(runtime\x2C node) {\n            while (runtime.evaluateExpr(this.condition\x2C PrimitiveVariableType.BOOLEAN)[1]) {\n                const result = runtime.runBlock(node.nodeGroups[0]\x2C {\n                    statement: this\x2C\n                    variables: {}\x2C\n                    types: {}\x2C\n                });\n                if (result)\n                    return result;\n            }\n        }\n    };\n    __setFunctionName(_classThis\x2C "WhileStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        WhileStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return WhileStatement = _classThis;\n})();\nexport { WhileStatement };\nlet DoWhileStatement = (() => {\n    let _classDecorators = [statement("dowhile"\x2C "REPEAT"\x2C "block"\x2C "keyword.dowhile")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var DoWhileStatement = _classThis = class extends _classSuper {\n        runBlock(runtime\x2C node) {\n            let i = 0;\n            do {\n                const result = runtime.runBlock(node.nodeGroups[0]\x2C {\n                    statement: this\x2C\n                    variables: {}\x2C\n                    types: {}\x2C\n                });\n                if (result)\n                    return result;\n                if (++i > DoWhileStatement.maxLoops)\n                    fail(`Too many loop iterations`\x2C node.controlStatements[0]\x2C node.controlStatements);\n            } while (!runtime.evaluateExpr(node.controlStatements[1].condition\x2C PrimitiveVariableType.BOOLEAN)[1]);\n        }\n    };\n    __setFunctionName(_classThis\x2C "DoWhileStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        DoWhileStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.maxLoops = 10000;\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return DoWhileStatement = _classThis;\n})();\nexport { DoWhileStatement };\nlet DoWhileEndStatement = (() => {\n    let _classDecorators = [statement("dowhile.end"\x2C "UNTIL flag = false"\x2C "block_end"\x2C "keyword.dowhile_end"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var DoWhileEndStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.condition = tokens[1];\n        }\n    };\n    __setFunctionName(_classThis\x2C "DoWhileEndStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        DoWhileEndStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.blockType = "dowhile";\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return DoWhileEndStatement = _classThis;\n})();\nexport { DoWhileEndStatement };\nlet FunctionStatement = (() => {\n    let _classDecorators = [statement("function"\x2C "FUNCTION name(arg1: TYPE) RETURNS INTEGER"\x2C "block"\x2C "auto"\x2C "keyword.function"\x2C "name"\x2C "parentheses.open"\x2C ".*"\x2C "parentheses.close"\x2C "keyword.returns"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var FunctionStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.args = parseFunctionArguments(tokens.slice(3\x2C -3));\n            this.argsRange = this.args.size > 0 ? getTotalRange(tokens.slice(3\x2C -3)) : tokens[2].rangeAfter();\n            this.returnType = processTypeData(tokens.at(-1));\n            this.returnTypeToken = tokens.at(-1);\n            this.name = tokens[1].text;\n        }\n        runBlock(runtime\x2C node) {\n            if (this.name in runtime.functions)\n                fail(`Duplicate function definition for ${this.name}`);\n            else if (this.name in builtinFunctions)\n                fail(`Function ${this.name} is already defined as a builtin function`);\n            runtime.functions[this.name] = node;\n        }\n    };\n    __setFunctionName(_classThis\x2C "FunctionStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        FunctionStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return FunctionStatement = _classThis;\n})();\nexport { FunctionStatement };\nlet ProcedureStatement = (() => {\n    let _classDecorators = [statement("procedure"\x2C "PROCEDURE name(arg1: TYPE)"\x2C "block"\x2C "auto"\x2C "keyword.procedure"\x2C "name"\x2C "parentheses.open"\x2C ".*"\x2C "parentheses.close")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ProcedureStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.args = parseFunctionArguments(tokens.slice(3\x2C -1));\n            this.argsRange = this.args.size > 0 ? getTotalRange(tokens.slice(3\x2C -1)) : tokens[2].rangeAfter();\n            this.name = tokens[1].text;\n        }\n        runBlock(runtime\x2C node) {\n            runtime.functions[this.name] = node;\n        }\n    };\n    __setFunctionName(_classThis\x2C "ProcedureStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ProcedureStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ProcedureStatement = _classThis;\n})();\nexport { ProcedureStatement };\nlet OpenFileStatement = (() => {\n    let _classDecorators = [statement("openfile"\x2C `OPENFILE "file.txt" FOR READ`\x2C "keyword.open_file"\x2C "expr+"\x2C "keyword.for"\x2C "file_mode")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var OpenFileStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [\x2C this.filename\x2C \x2C this.mode] = tokens;\n        }\n        run(runtime) {\n            const name = runtime.evaluateExpr(this.filename\x2C PrimitiveVariableType.STRING)[1];\n            const mode = this.mode.text;\n            const file = runtime.fs.getFile(name\x2C mode == "WRITE") ?? fail(`File ${name} does not exist.`);\n            if (mode == "READ") {\n                runtime.openFiles[name] = {\n                    file\x2C\n                    mode\x2C\n                    lines: file.text.split("\\n").slice(0\x2C -1)\x2C\n                    lineNumber: 0\n                };\n            }\n            else if (mode == "RANDOM") {\n                fail(`Not yet implemented`);\n            }\n            else {\n                if (mode == "WRITE")\n                    file.text = "";\n                runtime.openFiles[name] = {\n                    file\x2C\n                    mode\x2C\n                };\n            }\n        }\n    };\n    __setFunctionName(_classThis\x2C "OpenFileStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        OpenFileStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return OpenFileStatement = _classThis;\n})();\nexport { OpenFileStatement };\nlet CloseFileStatement = (() => {\n    let _classDecorators = [statement("closefile"\x2C `CLOSEFILE "file.txt"`\x2C "keyword.close_file"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var CloseFileStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [\x2C this.filename] = tokens;\n        }\n        run(runtime) {\n            const name = runtime.evaluateExpr(this.filename\x2C PrimitiveVariableType.STRING)[1];\n            if (runtime.openFiles[name])\n                runtime.openFiles[name] = undefined;\n            else if (name in runtime.openFiles)\n                fail(f.quote `Cannot close file ${name}\x2C because it has already been closed.`);\n            else\n                fail(f.quote `Cannot close file ${name}\x2C because it was never opened.`);\n        }\n    };\n    __setFunctionName(_classThis\x2C "CloseFileStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        CloseFileStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return CloseFileStatement = _classThis;\n})();\nexport { CloseFileStatement };\nlet ReadFileStatement = (() => {\n    let _classDecorators = [statement("readfile"\x2C `READFILE "file.txt"\x2C OutputVar`\x2C "keyword.read_file"\x2C "expr+"\x2C "punctuation.comma"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ReadFileStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [\x2C this.filename\x2C \x2C this.output] = tokens;\n        }\n        run(runtime) {\n            const name = runtime.evaluateExpr(this.filename\x2C PrimitiveVariableType.STRING)[1];\n            const data = runtime.getOpenFile(name\x2C ["READ"]\x2C `Reading from a file with READFILE`);\n            if (data.lineNumber >= data.lines.length)\n                fail(`End of file reached`);\n            const output = runtime.evaluateExpr(this.output\x2C "variable");\n            output.value = data.lines[data.lineNumber++];\n        }\n    };\n    __setFunctionName(_classThis\x2C "ReadFileStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ReadFileStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ReadFileStatement = _classThis;\n})();\nexport { ReadFileStatement };\nlet WriteFileStatement = (() => {\n    let _classDecorators = [statement("writefile"\x2C `WRITEFILE "file.txt"\x2C "hello world"`\x2C "keyword.write_file"\x2C "expr+"\x2C "punctuation.comma"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var WriteFileStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [\x2C this.filename\x2C \x2C this.data] = tokens;\n        }\n        run(runtime) {\n            const name = runtime.evaluateExpr(this.filename\x2C PrimitiveVariableType.STRING)[1];\n            const data = runtime.getOpenFile(name\x2C ["WRITE"\x2C "APPEND"]\x2C `Writing to a file with WRITEFILE`);\n            data.file.text += runtime.evaluateExpr(this.data\x2C PrimitiveVariableType.STRING)[1] + "\\n";\n        }\n    };\n    __setFunctionName(_classThis\x2C "WriteFileStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        WriteFileStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return WriteFileStatement = _classThis;\n})();\nexport { WriteFileStatement };\nlet SeekStatement = (() => {\n    let _classDecorators = [statement("seek"\x2C `SEEK "file.txt"\x2C 5`\x2C "keyword.seek"\x2C "expr+"\x2C "punctuation.comma"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var SeekStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [\x2C this.filename\x2C \x2C this.index] = tokens;\n        }\n        run(runtime) {\n            const index = runtime.evaluateExpr(this.index\x2C PrimitiveVariableType.INTEGER)[1];\n            if (index < 0)\n                fail(`SEEK index must be positive`);\n            const name = runtime.evaluateExpr(this.filename\x2C PrimitiveVariableType.STRING)[1];\n            const data = runtime.getOpenFile(name\x2C ["RANDOM"]\x2C `SEEK statement`);\n            fail(`Not yet implemented`);\n        }\n    };\n    __setFunctionName(_classThis\x2C "SeekStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        SeekStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return SeekStatement = _classThis;\n})();\nexport { SeekStatement };\nlet GetRecordStatement = (() => {\n    let _classDecorators = [statement("getrecord"\x2C `GETRECORD "file.txt"\x2C Record`\x2C "keyword.get_record"\x2C "expr+"\x2C "punctuation.comma"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var GetRecordStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [\x2C this.filename\x2C \x2C this.variable] = tokens;\n        }\n        run(runtime) {\n            const name = runtime.evaluateExpr(this.filename\x2C PrimitiveVariableType.STRING)[1];\n            const data = runtime.getOpenFile(name\x2C ["RANDOM"]\x2C `GETRECORD statement`);\n            const variable = runtime.evaluateExpr(this.variable\x2C "variable");\n            fail(`Not yet implemented`);\n        }\n    };\n    __setFunctionName(_classThis\x2C "GetRecordStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        GetRecordStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return GetRecordStatement = _classThis;\n})();\nexport { GetRecordStatement };\nlet PutRecordStatement = (() => {\n    let _classDecorators = [statement("putrecord"\x2C `PUTRECORD "file.txt"\x2C Record`\x2C "keyword.put_record"\x2C "expr+"\x2C "punctuation.comma"\x2C "expr+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var PutRecordStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            [\x2C this.filename\x2C \x2C this.variable] = tokens;\n        }\n        run(runtime) {\n            const name = runtime.evaluateExpr(this.filename\x2C PrimitiveVariableType.STRING)[1];\n            const data = runtime.getOpenFile(name\x2C ["RANDOM"]\x2C `PUTRECORD statement`);\n            const [type\x2C value] = runtime.evaluateExpr(this.variable);\n            fail(`Not yet implemented`);\n        }\n    };\n    __setFunctionName(_classThis\x2C "PutRecordStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        PutRecordStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return PutRecordStatement = _classThis;\n})();\nexport { PutRecordStatement };\nlet ClassStatement = (() => {\n    let _classDecorators = [statement("class"\x2C "CLASS Dog"\x2C "block"\x2C "auto"\x2C "keyword.class"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ClassStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.name = tokens[1];\n        }\n        initializeClass(runtime\x2C branchNode) {\n            const classData = new ClassVariableType(this);\n            for (const node of branchNode.nodeGroups[0]) {\n                if (node instanceof ProgramASTBranchNode) {\n                    if (node.controlStatements[0] instanceof ClassFunctionStatement || node.controlStatements[0] instanceof ClassProcedureStatement) {\n                        const method = node.controlStatements[0];\n                        if (classData.methods[method.name]) {\n                            fail(f.quote `Duplicate declaration of class method ${method.name}`\x2C this\x2C classData.methods[method.name]);\n                        }\n                        else {\n                            node.controlStatements[0];\n                            classData.methods[method.name] = node;\n                        }\n                    }\n                    else {\n                        console.error({ branchNode\x2C node });\n                        crash(`Invalid node in class block`);\n                    }\n                }\n                else if (node instanceof ClassPropertyStatement) {\n                    for (const variable of node.variables) {\n                        if (classData.properties[variable]) {\n                            fail(f.quote `Duplicate declaration of class property ${variable}`\x2C this\x2C classData.properties[variable]);\n                        }\n                        else {\n                            classData.properties[variable] = node;\n                        }\n                    }\n                }\n                else {\n                    console.error({ branchNode\x2C node });\n                    crash(`Invalid node in class block`);\n                }\n            }\n            return classData;\n        }\n        runBlock(runtime\x2C branchNode) {\n            if (runtime.getCurrentScope().types[this.name.text])\n                fail(f.quote `Type ${this.name.text} already exists in the current scope`);\n            const data = this.initializeClass(runtime\x2C branchNode);\n            runtime.getCurrentScope().types[this.name.text] = data;\n        }\n    };\n    __setFunctionName(_classThis\x2C "ClassStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ClassStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.allowOnly = new Set(["class_property"\x2C "class_procedure"\x2C "class_function"\x2C "class.end"]);\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ClassStatement = _classThis;\n})();\nexport { ClassStatement };\nlet ClassInheritsStatement = (() => {\n    let _classDecorators = [statement("class.inherits"\x2C "CLASS Dog INHERITS Animal"\x2C "block"\x2C "keyword.class"\x2C "name"\x2C "keyword.inherits"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = ClassStatement;\n    var ClassInheritsStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.superClassName = tokens[3];\n        }\n        initializeClass(runtime\x2C branchNode) {\n            const baseClass = runtime.getClass(this.superClassName.text);\n            const extensions = super.initializeClass(runtime\x2C branchNode);\n            extensions.baseClass = baseClass;\n            for (const [key\x2C value] of Object.entries(baseClass.properties)) {\n                if (extensions.properties[key]) {\n                    fail(f.quote `Property ${key} has already been defined in base class ${this.superClassName.text}`\x2C extensions.properties[key]);\n                }\n                else {\n                    extensions.properties[key] = value;\n                }\n            }\n            for (const [key\x2C value] of Object.entries(baseClass.methods)) {\n                if (extensions.methods[key]) {\n                    checkClassMethodsCompatible(baseClass.methods[key].controlStatements[0]\x2C extensions.methods[key].controlStatements[0]);\n                }\n                else {\n                    extensions.methods[key] = value;\n                }\n            }\n            return extensions;\n        }\n    };\n    __setFunctionName(_classThis\x2C "ClassInheritsStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ClassInheritsStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ClassInheritsStatement = _classThis;\n})();\nexport { ClassInheritsStatement };\nlet ClassPropertyStatement = (() => {\n    let _classDecorators = [statement("class_property"\x2C "PUBLIC variable: TYPE"\x2C "class_modifier"\x2C ".+"\x2C "punctuation.colon"\x2C "type+")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = DeclareStatement;\n    var ClassPropertyStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens);\n            this.accessModifierToken = tokens[0];\n            this.accessModifier = this.accessModifierToken.type.split("keyword.class_modifier.")[1];\n        }\n        run(runtime) {\n            crash(`Class sub-statements cannot be run normally`);\n        }\n    };\n    __setFunctionName(_classThis\x2C "ClassPropertyStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ClassPropertyStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.blockType = "class";\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ClassPropertyStatement = _classThis;\n})();\nexport { ClassPropertyStatement };\nlet ClassProcedureStatement = (() => {\n    let _classDecorators = [statement("class_procedure"\x2C "PUBLIC PROCEDURE func(arg1: INTEGER\x2C arg2: pDATE)"\x2C "block"\x2C "class_modifier"\x2C "keyword.procedure"\x2C "name"\x2C "parentheses.open"\x2C ".*"\x2C "parentheses.close")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = ProcedureStatement;\n    var ClassProcedureStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens.slice(1));\n            this.tokens.unshift(tokens[0]);\n            this.accessModifierToken = tokens[0];\n            this.methodKeywordToken = tokens[1];\n            this.accessModifier = this.accessModifierToken.type.split("keyword.class_modifier.")[1];\n            if (this.name == "NEW" && this.accessModifier == "private")\n                fail(`Constructors cannot be private\x2C because running private constructors is impossible`\x2C this.accessModifierToken);\n        }\n        runBlock() {\n            crash(`Class sub-statements cannot be run normally`);\n        }\n    };\n    __setFunctionName(_classThis\x2C "ClassProcedureStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ClassProcedureStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.blockType = "class";\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ClassProcedureStatement = _classThis;\n})();\nexport { ClassProcedureStatement };\nlet ClassProcedureEndStatement = (() => {\n    let _classDecorators = [statement("class_procedure.end"\x2C "ENDPROCEDURE"\x2C "block_end"\x2C "keyword.procedure_end")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ClassProcedureEndStatement = _classThis = class extends _classSuper {\n    };\n    __setFunctionName(_classThis\x2C "ClassProcedureEndStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ClassProcedureEndStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ClassProcedureEndStatement = _classThis;\n})();\nexport { ClassProcedureEndStatement };\nlet ClassFunctionStatement = (() => {\n    let _classDecorators = [statement("class_function"\x2C "PUBLIC FUNCTION func(arg1: INTEGER\x2C arg2: pDATE) RETURNS INTEGER"\x2C "block"\x2C "class_modifier"\x2C "keyword.function"\x2C "name"\x2C "parentheses.open"\x2C ".*"\x2C "parentheses.close"\x2C "keyword.returns"\x2C "name")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = FunctionStatement;\n    var ClassFunctionStatement = _classThis = class extends _classSuper {\n        constructor(tokens) {\n            super(tokens.slice(1));\n            this.tokens.unshift(tokens[0]);\n            this.accessModifierToken = tokens[0];\n            this.methodKeywordToken = tokens[1];\n            this.accessModifier = this.accessModifierToken.type.split("keyword.class_modifier.")[1];\n        }\n        runBlock() {\n            crash(`Class sub-statements cannot be run normally`);\n        }\n    };\n    __setFunctionName(_classThis\x2C "ClassFunctionStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ClassFunctionStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n    })();\n    _classThis.blockType = "class";\n    (() => {\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ClassFunctionStatement = _classThis;\n})();\nexport { ClassFunctionStatement };\nlet ClassFunctionEndStatement = (() => {\n    let _classDecorators = [statement("class_function.end"\x2C "ENDFUNCTION"\x2C "block_end"\x2C "keyword.function_end")];\n    let _classDescriptor;\n    let _classExtraInitializers = [];\n    let _classThis;\n    let _classSuper = Statement;\n    var ClassFunctionEndStatement = _classThis = class extends _classSuper {\n    };\n    __setFunctionName(_classThis\x2C "ClassFunctionEndStatement");\n    (() => {\n        const _metadata = typeof Symbol === "function" && Symbol.metadata ? Object.create(_classSuper[Symbol.metadata] ?? null) : void 0;\n        __esDecorate(null\x2C _classDescriptor = { value: _classThis }\x2C _classDecorators\x2C { kind: "class"\x2C name: _classThis.name\x2C metadata: _metadata }\x2C null\x2C _classExtraInitializers);\n        ClassFunctionEndStatement = _classThis = _classDescriptor.value;\n        if (_metadata) Object.defineProperty(_classThis\x2C Symbol.metadata\x2C { enumerable: true\x2C configurable: true\x2C writable: true\x2C value: _metadata });\n        __runInitializers(_classThis\x2C _classExtraInitializers);\n    })();\n    return ClassFunctionEndStatement = _classThis;\n})();\nexport { ClassFunctionEndStatement };\n
code-source-info,0xc2df93cd
code-creation,JS,10,265979,0xc2df93d3d6,128, file:///C:/coding/soodocode/build/statements.js:1532:34,0xc2df93c8c8,~
code-source-info,0xc2df93d3d6,113,79325,80395,C0O79325C20O79360C44O79361C55O79360C57O79455C58O79455C60O79507C62O79507C64O79519C65O79519C67O79553C72O79553C74O79600C95O79611C97O79600C99O79652C110O79652C115O79716C120O80339C123O80347C125O80380C127O80393,,
code-creation,JS,10,266035,0xc2df93d646,211, file:///C:/coding/soodocode/build/statements.js:1541:6,0xc2df93d198,~
code-source-info,0xc2df93d646,113,79717,80338,C0O79751C7O79783C11O79790C17O79801C21O79808C28O79815C31O79827C35O79834C39O79826C48O79808C57O79871C71O79918C79O79907C87O79932C97O79973C100O79984C110O80000C118O80019C121O79871C126O80053C131O80111C138O80092C144O80079C146O80126C150O80141C154O80148C161O80163C164O80175C168O80182C180O80255C184O80148C189O80277C196O80295C201O80307C204O80277C210O80337,,
code-creation,JS,10,266106,0xc2df93db3e,171, file:///C:/coding/soodocode/build/statements.js:1500:31,0xc2df93c890,~
code-source-info,0xc2df93db3e,113,77569,79252,C0O77569C20O77604C65O77605C76O77604C78O77840C79O77840C81O77892C83O77892C85O77904C86O77904C88O77938C93O77938C95O77990C121O78001C123O77990C125O78459C136O78459C141O78520C146O79076C149O79084C154O79105C158O79120C163O79199C166O79207C168O79237C170O79250,,
code-creation,JS,10,266166,0xc2df93dcbe,22, file:///C:/coding/soodocode/build/statements.js:1526:6,0xc2df93d898,~
code-source-info,0xc2df93dcbe,113,79121,79198,C0O79137C7O79155C12O79167C15O79137C21O79197,,
code-creation,JS,10,266199,0xc2df93de96,191, file:///C:/coding/soodocode/build/statements.js:1519:6,0xc2df93d860,~
code-source-info,0xc2df93de96,113,78521,79075,C0O78555C7O78587C11O78594C17O78605C21O78612C28O78619C31O78631C35O78638C39O78630C48O78612C57O78675C71O78722C79O78711C87O78736C97O78777C100O78788C110O78804C118O78823C121O78675C126O78857C131O78912C138O78893C144O78880C146O78927C150O78942C154O78949C161O78964C164O78976C168O78983C180O79056C184O78949C190O79074,,
code-creation,JS,10,266265,0xc2df93e26e,128, file:///C:/coding/soodocode/build/statements.js:1481:35,0xc2df93c858,~
code-source-info,0xc2df93e26e,113,76418,77495,C0O76418C20O76453C44O76454C55O76453C57O76551C58O76551C60O76603C62O76603C64O76615C65O76615C67O76649C72O76649C74O76697C95O76708C97O76697C99O76749C110O76749C115O76814C120O77438C123O77446C125O77480C127O77493,,
code-creation,JS,10,266318,0xc2df93e4de,211, file:///C:/coding/soodocode/build/statements.js:1490:6,0xc2df93e030,~
code-source-info,0xc2df93e4de,113,76815,77437,C0O76849C7O76881C11O76888C17O76899C21O76906C28O76913C31O76925C35O76932C39O76924C48O76906C57O76969C71O77016C79O77005C87O77030C97O77071C100O77082C110O77098C118O77117C121O76969C126O77151C131O77210C138O77191C144O77178C146O77225C150O77240C154O77247C161O77262C164O77274C168O77281C180O77354C184O77247C189O77376C196O77394C201O77406C204O77376C210O77436,,
code-creation,JS,10,266389,0xc2df93e9ce,165, file:///C:/coding/soodocode/build/statements.js:1447:32,0xc2df93c820,~
code-source-info,0xc2df93e9ce,113,74489,76343,C0O74489C20O74524C59O74525C70O74524C72O74720C73O74720C75O74772C77O74772C79O74784C80O74784C82O74818C87O74818C89O74872C115O74883C117O74872C119O75547C130O75547C135O75609C140O76166C143O76174C148O76195C152O76210C157O76289C160O76297C162O76328C164O76341,,
code-creation,JS,10,266447,0xc2df93eb46,22, file:///C:/coding/soodocode/build/statements.js:1475:6,0xc2df93e730,~
code-source-info,0xc2df93eb46,113,76211,76288,C0O76227C7O76245C12O76257C15O76227C21O76287,,
code-creation,JS,10,266478,0xc2df93ed1e,191, file:///C:/coding/soodocode/build/statements.js:1468:6,0xc2df93e6f8,~
code-source-info,0xc2df93ed1e,113,75610,76165,C0O75644C7O75676C11O75683C17O75694C21O75701C28O75708C31O75720C35O75727C39O75719C48O75701C57O75764C71O75811C79O75800C87O75825C97O75866C100O75877C110O75893C118O75912C121O75764C126O75946C131O76002C138O75983C144O75970C146O76017C150O76032C154O76039C161O76054C164O76066C168O76073C180O76146C184O76039C190O76164,,
code-creation,JS,10,266544,0xc2df93f1c6,156, file:///C:/coding/soodocode/build/statements.js:1417:31,0xc2df93c7e8,~
code-source-info,0xc2df93f1c6,113,72954,74418,C0O72954C20O72989C50O72990C61O72989C63O73107C64O73107C66O73159C68O73159C70O73171C71O73171C73O73205C78O73205C80O73256C106O73267C108O73256C110O73625C121O73625C126O73686C131O74242C134O74250C139O74271C143O74286C148O74365C151O74373C153O74403C155O74416,,
code-creation,JS,10,266601,0xc2df93f336,22, file:///C:/coding/soodocode/build/statements.js:1441:6,0xc2df93ef40,~
code-source-info,0xc2df93f336,113,74287,74364,C0O74303C7O74321C12O74333C15O74303C21O74363,,
code-creation,JS,10,266633,0xc2df93f50e,191, file:///C:/coding/soodocode/build/statements.js:1434:6,0xc2df93ef08,~
code-source-info,0xc2df93f50e,113,73687,74241,C0O73721C7O73753C11O73760C17O73771C21O73778C28O73785C31O73797C35O73804C39O73796C48O73778C57O73841C71O73888C79O73877C87O73902C97O73943C100O73954C110O73970C118O73989C121O73841C126O74023C131O74078C138O74059C144O74046C146O74093C150O74108C154O74115C161O74130C164O74142C168O74149C180O74222C184O74115C190O74240,,
code-creation,JS,10,266698,0xc2df93f96e,154, file:///C:/coding/soodocode/build/statements.js:1372:31,0xc2df93c7b0,~
code-source-info,0xc2df93f96e,113,70596,72884,C0O70596C20O70631C53O70632C64O70631C66O70761C67O70761C69O70813C71O70813C73O70825C74O70825C76O70859C81O70859C83O70908C92O70935C121O70919C123O70908C125O72150C136O72150C141O72211C146O72831C149O72839C151O72869C153O72882,,
code-creation,JS,10,266754,0xc2df93fbf6,211, file:///C:/coding/soodocode/build/statements.js:1407:6,0xc2df93f6f8,~
code-source-info,0xc2df93fbf6,113,72212,72830,C0O72246C7O72278C11O72285C17O72296C21O72303C28O72310C31O72322C35O72329C39O72321C48O72303C57O72366C71O72413C79O72402C87O72427C97O72468C100O72479C110O72495C118O72514C121O72366C126O72548C131O72603C138O72584C144O72571C146O72618C150O72633C154O72640C161O72655C164O72667C168O72674C180O72747C184O72640C189O72769C196O72787C201O72799C204O72769C210O72829,,
code-creation,JS,10,266826,0x2bb6ecbf95e,175, file:///C:/coding/soodocode/build/statements.js:1304:23,0xc2df93c778,~
code-source-info,0x2bb6ecbf95e,113,67162,70534,C0O67162C20O67197C50O67198C61O67197C63O67282C64O67282C66O67334C68O67334C70O67346C71O67346C73O67380C78O67380C80O67416C111O67427C113O67416C115O69695C126O69695C131O69748C136O70296C139O70304C142O70331C153O70327C158O70325C162O70410C167O70489C170O70497C172O70519C174O70532,,
code-creation,JS,10,266887,0x2bb6ecbfade,22, file:///C:/coding/soodocode/build/statements.js:1366:6,0xc2df93fe98,~
code-source-info,0x2bb6ecbfade,113,70411,70488,C0O70427C7O70445C12O70457C15O70427C21O70487,,
code-creation,JS,10,266918,0x2bb6ecbfcb6,191, file:///C:/coding/soodocode/build/statements.js:1359:6,0xc2df93fe60,~
code-source-info,0x2bb6ecbfcb6,113,69749,70295,C0O69783C7O69815C11O69822C17O69833C21O69840C28O69847C31O69859C35O69866C39O69858C48O69840C57O69903C71O69950C79O69939C87O69964C97O70005C100O70016C110O70032C118O70051C121O69903C126O70085C131O70132C138O70113C144O70100C146O70147C150O70162C154O70169C161O70184C164O70196C168O70203C180O70276C184O70169C190O70294,,
code-creation,JS,10,266982,0x8c1d17ecb6,139, file:///C:/coding/soodocode/build/statements.js:1275:27,0xc2df93c740,~
code-source-info,0x8c1d17ecb6,113,65579,67104,C0O65579C20O65614C50O65615C61O65614C63O65741C64O65741C66O65793C68O65793C70O65805C71O65805C73O65839C78O65839C80O65879C106O65890C108O65879C110O66382C121O66382C126O66439C131O67055C134O67063C136O67089C138O67102,,
tick,0x7ff863b9fab3,267158,1,0x7ff6cb856350,3,0x7ff6cc23aba0,0xc2df90c2a8,0xc2df90bf49,0x7ff64c4552e0,0x7ff6cc2dfcd7
code-creation,JS,10,267188,0x8c1d17ef2e,211, file:///C:/coding/soodocode/build/statements.js:1294:6,0x2bb6ecbfea0,~
code-source-info,0x8c1d17ef2e,113,66440,67054,C0O66474C7O66506C11O66513C17O66524C21O66531C28O66538C31O66550C35O66557C39O66549C48O66531C57O66594C71O66641C79O66630C87O66655C97O66696C100O66707C110O66723C118O66742C121O66594C126O66776C131O66827C138O66808C144O66795C146O66842C150O66857C154O66864C161O66879C164O66891C168O66898C180O66971C184O66864C189O66993C196O67011C201O67023C204O66993C210O67053,,
code-creation,JS,10,267309,0x8c1d17f3ae,139, file:///C:/coding/soodocode/build/statements.js:1246:27,0xc2df93c708,~
code-source-info,0x8c1d17f3ae,113,63985,65517,C0O63985C20O64020C50O64021C61O64020C63O64147C64O64147C66O64199C68O64199C70O64211C71O64211C73O64245C78O64245C80O64285C106O64296C108O64285C110O64795C121O64795C126O64852C131O65468C134O65476C136O65502C138O65515,,
code-creation,JS,10,267428,0x8c1d17f626,211, file:///C:/coding/soodocode/build/statements.js:1265:6,0x8c1d17f148,~
code-source-info,0x8c1d17f626,113,64853,65467,C0O64887C7O64919C11O64926C17O64937C21O64944C28O64951C31O64963C35O64970C39O64962C48O64944C57O65007C71O65054C79O65043C87O65068C97O65109C100O65120C110O65136C118O65155C121O65007C126O65189C131O65240C138O65221C144O65208C146O65255C150O65270C154O65277C161O65292C164O65304C168O65311C180O65384C184O65277C189O65406C196O65424C201O65436C204O65406C210O65466,,
code-creation,JS,10,267541,0x8c1d17faa6,139, file:///C:/coding/soodocode/build/statements.js:1215:22,0xc2df93c6d0,~
code-source-info,0x8c1d17faa6,113,62349,63928,C0O62349C20O62384C50O62385C61O62384C63O62490C64O62490C66O62542C68O62542C70O62554C71O62554C73O62588C78O62588C80O62623C106O62634C108O62623C110O63221C121O63221C126O63273C131O63884C134O63892C136O63913C138O63926,,
code-creation,JS,10,267621,0x8c1d17fd1e,211, file:///C:/coding/soodocode/build/statements.js:1236:6,0x8c1d17f840,~
code-source-info,0x8c1d17fd1e,113,63274,63883,C0O63308C7O63340C11O63347C17O63358C21O63365C28O63372C31O63384C35O63391C39O63383C48O63365C57O63428C71O63475C79O63464C87O63489C97O63530C100O63541C110O63557C118O63576C121O63428C126O63610C131O63656C138O63637C144O63624C146O63671C150O63686C154O63693C161O63708C164O63720C168O63727C180O63800C184O63693C189O63822C196O63840C201O63852C204O63822C210O63882,,
code-creation,JS,10,267736,0x2c01bf41346,139, file:///C:/coding/soodocode/build/statements.js:1187:27,0xc2df93c698,~
code-source-info,0x2c01bf41346,113,60751,62292,C0O60751C20O60786C50O60787C61O60786C63O60920C64O60920C66O60972C68O60972C70O60984C71O60984C73O61018C78O61018C80O61058C106O61069C108O61058C110O61570C121O61570C126O61627C131O62243C134O62251C136O62277C138O62290,,
code-creation,JS,10,267822,0x2c01bf415be,211, file:///C:/coding/soodocode/build/statements.js:1205:6,0x8c1d17ff38,~
code-source-info,0x2c01bf415be,113,61628,62242,C0O61662C7O61694C11O61701C17O61712C21O61719C28O61726C31O61738C35O61745C39O61737C48O61719C57O61782C71O61829C79O61818C87O61843C97O61884C100O61895C110O61911C118O61930C121O61782C126O61964C131O62015C138O61996C144O61983C146O62030C150O62045C154O62052C161O62067C164O62079C168O62086C180O62159C184O62052C189O62181C196O62199C201O62211C204O62181C210O62241,,
code-creation,JS,10,267931,0x2c01bf41a3e,139, file:///C:/coding/soodocode/build/statements.js:1156:26,0xc2df93c660,~
code-source-info,0x2c01bf41a3e,113,59040,60690,C0O59040C20O59075C50O59076C61O59075C63O59202C64O59202C66O59254C68O59254C70O59266C71O59266C73O59300C78O59300C80O59339C106O59350C108O59339C110O59971C121O59971C126O60027C131O60642C134O60650C136O60675C138O60688,,
code-creation,JS,10,268014,0x2c01bf41cb6,211, file:///C:/coding/soodocode/build/statements.js:1177:6,0x2c01bf417d8,~
code-source-info,0x2c01bf41cb6,113,60028,60641,C0O60062C7O60094C11O60101C17O60112C21O60119C28O60126C31O60138C35O60145C39O60137C48O60119C57O60182C71O60229C79O60218C87O60243C97O60284C100O60295C110O60311C118O60330C121O60182C126O60364C131O60414C138O60395C144O60382C146O60429C150O60444C154O60451C161O60466C164O60478C168O60485C180O60558C184O60451C189O60580C196O60598C201O60610C204O60580C210O60640,,
code-creation,JS,10,268123,0x2c01bf4212e,133, file:///C:/coding/soodocode/build/statements.js:1124:27,0xc2df93c628,~
code-source-info,0x2c01bf4212e,113,57364,58979,C0O57364C20O57399C44O57400C55O57399C57O57488C58O57488C60O57540C62O57540C64O57552C65O57552C67O57586C72O57586C74O57626C100O57637C102O57626C104O58257C115O58257C120O58314C125O58930C128O58938C130O58964C132O58977,,
code-creation,JS,10,268204,0x2c01bf4239e,211, file:///C:/coding/soodocode/build/statements.js:1146:6,0x2c01bf41ed0,~
code-source-info,0x2c01bf4239e,113,58315,58929,C0O58349C7O58381C11O58388C17O58399C21O58406C28O58413C31O58425C35O58432C39O58424C48O58406C57O58469C71O58516C79O58505C87O58530C97O58571C100O58582C110O58598C118O58617C121O58469C126O58651C131O58702C138O58683C144O58670C146O58717C150O58732C154O58739C161O58754C164O58766C168O58773C180O58846C184O58739C189O58868C196O58886C201O58898C204O58868C210O58928,,
code-creation,JS,10,268312,0x2c01bf42826,139, file:///C:/coding/soodocode/build/statements.js:1077:26,0xc2df93c5f0,~
code-source-info,0x2c01bf42826,113,55259,57303,C0O55259C20O55294C50O55295C61O55294C63O55417C64O55417C66O55469C68O55469C70O55481C71O55481C73O55515C78O55515C80O55554C106O55565C108O55554C110O56584C121O56584C126O56640C131O57255C134O57263C136O57288C138O57301,,
code-creation,JS,10,268392,0x2c01bf42a9e,211, file:///C:/coding/soodocode/build/statements.js:1114:6,0x2c01bf425b8,~
code-source-info,0x2c01bf42a9e,113,56641,57254,C0O56675C7O56707C11O56714C17O56725C21O56732C28O56739C31O56751C35O56758C39O56750C48O56732C57O56795C71O56842C79O56831C87O56856C97O56897C100O56908C110O56924C118O56943C121O56795C126O56977C131O57027C138O57008C144O56995C146O57042C150O57057C154O57064C161O57079C164O57091C168O57098C180O57171C184O57064C189O57193C196O57211C201O57223C204O57193C210O57253,,
code-creation,JS,10,268500,0x2c01bf42f3e,148, file:///C:/coding/soodocode/build/statements.js:1049:27,0xc2df93c5b8,~
code-source-info,0x2c01bf42f3e,113,53714,55198,C0O53714C20O53749C59O53750C70O53749C72O53906C73O53906C75O53958C77O53958C79O53970C80O53970C82O54004C87O54004C89O54044C115O54055C117O54044C119O54476C130O54476C135O54533C140O55149C143O55157C145O55183C147O55196,,
code-creation,JS,10,268582,0x2c01bf431be,211, file:///C:/coding/soodocode/build/statements.js:1067:6,0x2c01bf42cb8,~
code-source-info,0x2c01bf431be,113,54534,55148,C0O54568C7O54600C11O54607C17O54618C21O54625C28O54632C31O54644C35O54651C39O54643C48O54625C57O54688C71O54735C79O54724C87O54749C97O54790C100O54801C110O54817C118O54836C121O54688C126O54870C131O54921C138O54902C144O54889C146O54936C150O54951C154O54958C161O54973C164O54985C168O54992C180O55065C184O54958C189O55087C196O55105C201O55117C204O55087C210O55147,,
code-creation,JS,10,268690,0x2c01bf43666,154, file:///C:/coding/soodocode/build/statements.js:1015:26,0xc2df93c580,~
code-source-info,0x2c01bf43666,113,51761,53653,C0O51761C20O51796C65O51797C76O51796C78O51993C79O51993C81O52045C83O52045C85O52057C86O52057C88O52091C93O52091C95O52130C121O52141C123O52130C125O52934C136O52934C141O52990C146O53605C149O53613C151O53638C153O53651,,
code-creation,JS,10,268759,0x2c01bf438e6,211, file:///C:/coding/soodocode/build/statements.js:1039:6,0x2c01bf433d8,~
code-source-info,0x2c01bf438e6,113,52991,53604,C0O53025C7O53057C11O53064C17O53075C21O53082C28O53089C31O53101C35O53108C39O53100C48O53082C57O53145C71O53192C79O53181C87O53206C97O53247C100O53258C110O53274C118O53293C121O53145C126O53327C131O53377C138O53358C144O53345C146O53392C150O53407C154O53414C161O53429C164O53441C168O53448C180O53521C184O53414C189O53543C196O53561C201O53573C204O53543C210O53603,,
code-creation,JS,10,268853,0x2c01bf43d46,148, file:///C:/coding/soodocode/build/statements.js:989:28,0xc2df93c548,~
code-source-info,0x2c01bf43d46,113,50477,51699,C0O50477C20O50512C47O50513C58O50512C60O50615C61O50615C63O50667C65O50667C67O50679C68O50679C70O50713C75O50713C77O50754C98O50765C100O50754C102O50913C113O50913C118O50971C123O51524C126O51532C131O51553C135O51570C140O51649C143O51657C145O51684C147O51697,,
code-creation,JS,10,268929,0x2c01bf43eae,22, file:///C:/coding/soodocode/build/statements.js:1009:6,0x2c01bf43ae8,~
code-source-info,0x2c01bf43eae,113,51571,51648,C0O51587C7O51605C12O51617C15O51587C21O51647,,
code-creation,JS,10,268970,0x2c01bf44086,191, file:///C:/coding/soodocode/build/statements.js:1002:6,0x2c01bf43ab0,~
code-source-info,0x2c01bf44086,113,50972,51523,C0O51006C7O51038C11O51045C17O51056C21O51063C28O51070C31O51082C35O51089C39O51081C48O51063C57O51126C71O51173C79O51162C87O51187C97O51228C100O51239C110O51255C118O51274C121O51126C126O51308C131O51360C138O51341C144O51328C146O51375C150O51390C154O51397C161O51412C164O51424C168O51431C180O51504C184O51397C190O51522,,
code-creation,JS,10,269058,0x2c01bf44516,152, file:///C:/coding/soodocode/build/statements.js:953:25,0xc2df93c510,~
code-source-info,0x2c01bf44516,113,48737,50416,C0O48737C20O48772C44O48773C55O48772C57O48842C58O48842C60O48894C62O48894C64O48906C65O48906C67O48940C72O48940C74O48978C100O48989C102O48978C104O49644C115O49644C120O49699C125O50249C128O50257C135O50277C139O50290C144O50369C147O50377C149O50401C151O50414,,
code-creation,JS,10,269135,0x2c01bf4467e,22, file:///C:/coding/soodocode/build/statements.js:983:6,0x2c01bf442a8,~
code-source-info,0x2c01bf4467e,113,50291,50368,C0O50307C7O50325C12O50337C15O50307C21O50367,,
code-creation,JS,10,269176,0x2c01bf44856,191, file:///C:/coding/soodocode/build/statements.js:976:6,0x2c01bf44270,~
code-source-info,0x2c01bf44856,113,49700,50248,C0O49734C7O49766C11O49773C17O49784C21O49791C28O49798C31O49810C35O49817C39O49809C48O49791C57O49854C71O49901C79O49890C87O49915C97O49956C100O49967C110O49983C118O50002C121O49854C126O50036C131O50085C138O50066C144O50053C146O50100C150O50115C154O50122C161O50137C164O50149C168O50156C180O50229C184O50122C190O50247,,
code-creation,JS,10,269263,0x2c01bf44cae,139, file:///C:/coding/soodocode/build/statements.js:919:23,0xc2df93c4d8,~
code-source-info,0x2c01bf44cae,113,47147,48681,C0O47147C20O47182C50O47183C61O47182C63O47271C64O47271C66O47323C68O47323C70O47335C71O47335C73O47369C78O47369C80O47405C106O47416C108O47405C110O47971C121O47971C126O48024C131O48636C134O48644C136O48666C138O48679,,
code-creation,JS,10,269332,0x2c01bf44f26,211, file:///C:/coding/soodocode/build/statements.js:943:6,0x2c01bf44a40,~
code-source-info,0x2c01bf44f26,113,48025,48635,C0O48059C7O48091C11O48098C17O48109C21O48116C28O48123C31O48135C35O48142C39O48134C48O48116C57O48179C71O48226C79O48215C87O48240C97O48281C100O48292C110O48308C118O48327C121O48179C126O48361C131O48408C138O48389C144O48376C146O48423C150O48438C154O48445C161O48460C164O48472C168O48479C180O48552C184O48445C189O48574C196O48592C201O48604C204O48574C210O48634,,
code-creation,JS,10,269430,0x2c01bf45386,148, file:///C:/coding/soodocode/build/statements.js:893:24,0xc2df93c4a0,~
code-source-info,0x2c01bf45386,113,45911,47092,C0O45911C20O45946C47O45947C58O45946C60O46028C61O46028C63O46080C65O46080C67O46092C68O46092C70O46126C75O46126C77O46163C98O46174C100O46163C102O46322C113O46322C118O46376C123O46925C126O46933C131O46954C135O46967C140O47046C143O47054C145O47077C147O47090,,
code-creation,JS,10,269507,0x2c01bf454ee,22, file:///C:/coding/soodocode/build/statements.js:913:6,0x2c01bf45128,~
code-source-info,0x2c01bf454ee,113,46968,47045,C0O46984C7O47002C12O47014C15O46984C21O47044,,
code-creation,JS,10,269548,0x2c01bf456c6,191, file:///C:/coding/soodocode/build/statements.js:906:6,0x2c01bf450f0,~
code-source-info,0x2c01bf456c6,113,46377,46924,C0O46411C7O46443C11O46450C17O46461C21O46468C28O46475C31O46487C35O46494C39O46486C48O46468C57O46531C71O46578C79O46567C87O46592C97O46633C100O46644C110O46660C118O46679C121O46531C126O46713C131O46761C138O46742C144O46729C146O46776C150O46791C154O46798C161O46813C164O46825C168O46832C180O46905C184O46798C190O46923,,
code-creation,JS,10,269635,0x2c01bf45b36,154, file:///C:/coding/soodocode/build/statements.js:867:25,0xc2df93c468,~
code-source-info,0x2c01bf45b36,113,44508,45854,C0O44508C20O44543C65O44544C76O44543C78O44715C79O44715C81O44767C83O44767C85O44779C86O44779C88O44813C93O44813C95O44854C121O44865C123O44854C125O45138C136O45138C141O45193C146O45807C149O45815C151O45839C153O45852,,
code-creation,JS,10,269705,0x2c01bf45db6,211, file:///C:/coding/soodocode/build/statements.js:883:6,0x2c01bf458b0,~
code-source-info,0x2c01bf45db6,113,45194,45806,C0O45228C7O45260C11O45267C17O45278C21O45285C28O45292C31O45304C35O45311C39O45303C48O45285C57O45348C71O45395C79O45384C87O45409C97O45450C100O45461C110O45477C118O45496C121O45348C126O45530C131O45579C138O45560C144O45547C146O45594C150O45609C154O45616C161O45631C164O45643C168O45650C180O45723C184O45616C189O45745C196O45763C201O45775C204O45745C210O45805,,
code-creation,JS,10,269798,0x2c01bf462f6,153, file:///C:/coding/soodocode/build/statements.js:812:21,0xc2df93c430,~
code-source-info,0x2c01bf462f6,113,41875,44454,C0O41875C20O41910C59O41911C70O41910C72O42045C73O42045C75O42097C77O42097C79O42109C80O42109C82O42143C87O42143C89O42177C120O42188C122O42177C124O43750C135O43750C140O43801C145O44411C148O44419C150O44439C152O44452,,
code-creation,JS,10,269869,0x2c01bf46576,211, file:///C:/coding/soodocode/build/statements.js:857:6,0x2c01bf46058,~
code-source-info,0x2c01bf46576,113,43802,44410,C0O43836C7O43868C11O43875C17O43886C21O43893C28O43900C31O43912C35O43919C39O43911C48O43893C57O43956C71O44003C79O43992C87O44017C97O44058C100O44069C110O44085C118O44104C121O43956C126O44138C131O44183C138O44164C144O44151C146O44198C150O44213C154O44220C161O44235C164O44247C168O44254C180O44327C184O44220C189O44349C196O44367C201O44379C204O44349C210O44409,,
code-creation,JS,10,269970,0x2c01bf46a9e,173, file:///C:/coding/soodocode/build/statements.js:774:33,0xc2df93c3f8,~
code-source-info,0x2c01bf46a9e,113,39697,41813,C0O39697C20O39732C56O39733C67O39732C69O39863C70O39863C72O39915C74O39915C76O39927C77O39927C79O39961C84O39961C86O40017C112O40028C114O40017C116O40955C127O40955C132O41018C137O41576C140O41584C145O41605C149O41621C156O41645C160O41679C165O41758C168O41766C170O41798C172O41811,,
code-creation,JS,10,270061,0x2c01bf46c1e,22, file:///C:/coding/soodocode/build/statements.js:806:6,0x2c01bf467c8,~
code-source-info,0x2c01bf46c1e,113,41680,41757,C0O41696C7O41714C12O41726C15O41696C21O41756,,
code-creation,JS,10,270106,0x2c01bf46df6,191, file:///C:/coding/soodocode/build/statements.js:798:6,0x2c01bf46790,~
code-source-info,0x2c01bf46df6,113,41019,41575,C0O41053C7O41085C11O41092C17O41103C21O41110C28O41117C31O41129C35O41136C39O41128C48O41110C57O41173C71O41220C79O41209C87O41234C97O41275C100O41286C110O41302C118O41321C121O41173C126O41355C131O41412C138O41393C144O41380C146O41427C150O41442C154O41449C161O41464C164O41476C168O41483C180O41556C184O41449C190O41574,,
code-creation,JS,10,270205,0x2c01bf4729e,156, file:///C:/coding/soodocode/build/statements.js:742:28,0xc2df93c3c0,~
code-source-info,0x2c01bf4729e,113,38132,39628,C0O38132C20O38167C50O38168C61O38167C63O38271C64O38271C66O38323C68O38323C70O38335C71O38335C73O38369C78O38369C80O38410C106O38421C108O38410C110O38843C121O38843C126O38901C131O39454C134O39462C139O39483C143O39499C148O39578C151O39586C153O39613C155O39626,,
code-creation,JS,10,270292,0x2c01bf4740e,22, file:///C:/coding/soodocode/build/statements.js:768:6,0x2c01bf47018,~
code-source-info,0x2c01bf4740e,113,39500,39577,C0O39516C7O39534C12O39546C15O39516C21O39576,,
code-creation,JS,10,270337,0x2c01bf475e6,191, file:///C:/coding/soodocode/build/statements.js:761:6,0x2c01bf46fe0,~
code-source-info,0x2c01bf475e6,113,38902,39453,C0O38936C7O38968C11O38975C17O38986C21O38993C28O39000C31O39012C35O39019C39O39011C48O38993C57O39056C71O39103C79O39092C87O39117C97O39158C100O39169C110O39185C118O39204C121O39056C126O39238C131O39290C138O39271C144O39258C146O39305C150O39320C154O39327C161O39342C164O39354C168O39361C180O39434C184O39327C190O39452,,
code-creation,JS,10,270433,0x2c01bf47b26,152, file:///C:/coding/soodocode/build/statements.js:685:24,0xc2df93c388,~
code-source-info,0x2c01bf47b26,113,35035,38072,C0O35035C20O35070C53O35071C64O35070C66O35170C67O35170C69O35222C71O35222C73O35234C74O35234C76O35268C81O35268C83O35305C119O35316C121O35305C123O37359C134O37359C139O37413C144O38026C147O38034C149O38057C151O38070,,
code-creation,JS,10,270508,0x2c01bf47da6,211, file:///C:/coding/soodocode/build/statements.js:732:6,0x2c01bf47870,~
code-source-info,0x2c01bf47da6,113,37414,38025,C0O37448C7O37480C11O37487C17O37498C21O37505C28O37512C31O37524C35O37531C39O37523C48O37505C57O37568C71O37615C79O37604C87O37629C97O37670C100O37681C110O37697C118O37716C121O37568C126O37750C131O37798C138O37779C144O37766C146O37813C150O37828C154O37835C161O37850C164O37862C168O37869C180O37942C184O37835C189O37964C196O37982C201O37994C204O37964C210O38024,,
code-creation,JS,10,270595,0x2c01bf481fe,145, file:///C:/coding/soodocode/build/statements.js:663:22,0xc2df93c350,~
code-source-info,0x2c01bf481fe,113,33924,34981,C0O33924C20O33959C44O33960C55O33959C57O34033C58O34033C60O34085C62O34085C64O34097C65O34097C67O34131C72O34131C74O34166C95O34177C97O34166C99O34218C110O34218C115O34270C120O34817C123O34825C128O34846C132O34858C137O34937C140O34945C142O34966C144O34979,,
code-creation,JS,10,270665,0x2c01bf4835e,22, file:///C:/coding/soodocode/build/statements.js:679:6,0x2c01bf47fa8,~
code-source-info,0x2c01bf4835e,113,34859,34936,C0O34875C7O34893C12O34905C15O34875C21O34935,,
code-creation,JS,10,270703,0x2c01bf48536,191, file:///C:/coding/soodocode/build/statements.js:672:6,0x2c01bf47f70,~
code-source-info,0x2c01bf48536,113,34271,34816,C0O34305C7O34337C11O34344C17O34355C21O34362C28O34369C31O34381C35O34388C39O34380C48O34362C57O34425C71O34472C79O34461C87O34486C97O34527C100O34538C110O34554C118O34573C121O34425C126O34607C131O34653C138O34634C144O34621C146O34668C150O34683C154O34690C161O34705C164O34717C168O34724C180O34797C184O34690C190O34815,,
code-creation,JS,10,270784,0x2c01bf48996,142, file:///C:/coding/soodocode/build/statements.js:632:20,0xc2df93c318,~
code-source-info,0x2c01bf48996,113,32367,33874,C0O32367C20O32402C53O32403C64O32402C66O32502C67O32502C69O32554C71O32554C73O32566C74O32566C76O32600C81O32600C83O32633C109O32644C111O32633C113O33173C124O33173C129O33223C134O33832C137O33840C139O33859C141O33872,,
code-creation,JS,10,270848,0x2c01bf48c0e,211, file:///C:/coding/soodocode/build/statements.js:653:6,0x2c01bf48720,~
code-source-info,0x2c01bf48c0e,113,33224,33831,C0O33258C7O33290C11O33297C17O33308C21O33315C28O33322C31O33334C35O33341C39O33333C48O33315C57O33378C71O33425C79O33414C87O33439C97O33480C100O33491C110O33507C118O33526C121O33378C126O33560C131O33604C138O33585C144O33572C146O33619C150O33634C154O33641C161O33656C164O33668C168O33675C180O33748C184O33641C189O33770C196O33788C201O33800C204O33770C210O33830,,
code-creation,JS,10,270937,0x2c01bf49086,133, file:///C:/coding/soodocode/build/statements.js:592:22,0xc2df93c2e0,~
code-source-info,0x2c01bf49086,113,30326,32317,C0O30326C20O30361C44O30362C55O30361C57O30431C58O30431C60O30483C62O30483C64O30495C65O30495C67O30529C72O30529C74O30564C100O30575C102O30564C104O31610C115O31610C120O31662C125O32273C128O32281C130O32302C132O32315,,
code-creation,JS,10,271004,0x2c01bf492f6,211, file:///C:/coding/soodocode/build/statements.js:622:6,0x2c01bf48e28,~
code-source-info,0x2c01bf492f6,113,31663,32272,C0O31697C7O31729C11O31736C17O31747C21O31754C28O31761C31O31773C35O31780C39O31772C48O31754C57O31817C71O31864C79O31853C87O31878C97O31919C100O31930C110O31946C118O31965C121O31817C126O31999C131O32045C138O32026C144O32013C146O32060C150O32075C154O32082C161O32097C164O32109C168O32116C180O32189C184O32082C189O32211C196O32229C201O32241C204O32211C210O32271,,
code-creation,JS,10,271092,0x2c01bf4976e,133, file:///C:/coding/soodocode/build/statements.js:548:24,0xc2df93c2a8,~
code-source-info,0x2c01bf4976e,113,28296,30272,C0O28296C20O28331C44O28332C55O28331C57O28405C58O28405C60O28457C62O28457C64O28469C65O28469C67O28503C72O28503C74O28540C100O28551C102O28540C104O29559C115O29559C120O29613C125O30226C128O30234C130O30257C132O30270,,
code-creation,JS,10,271157,0x2c01bf499de,211, file:///C:/coding/soodocode/build/statements.js:582:6,0x2c01bf49510,~
code-source-info,0x2c01bf499de,113,29614,30225,C0O29648C7O29680C11O29687C17O29698C21O29705C28O29712C31O29724C35O29731C39O29723C48O29705C57O29768C71O29815C79O29804C87O29829C97O29870C100O29881C110O29897C118O29916C121O29768C126O29950C131O29998C138O29979C144O29966C146O30013C150O30028C154O30035C161O30050C164O30062C168O30069C180O30142C184O30035C189O30164C196O30182C201O30194C204O30164C210O30224,,
code-creation,JS,10,271245,0x2c01bf49e56,133, file:///C:/coding/soodocode/build/statements.js:483:23,0xc2df93c270,~
code-source-info,0x2c01bf49e56,113,25171,28241,C0O25171C20O25206C44O25207C55O25206C57O25272C58O25272C60O25324C62O25324C64O25336C65O25336C67O25370C72O25370C74O25406C100O25417C102O25406C104O27531C115O27531C120O27584C125O28196C128O28204C130O28226C132O28239,,
code-creation,JS,10,271309,0x2c01bf4a0c6,211, file:///C:/coding/soodocode/build/statements.js:538:6,0x2c01bf49bf8,~
code-source-info,0x2c01bf4a0c6,113,27585,28195,C0O27619C7O27651C11O27658C17O27669C21O27676C28O27683C31O27695C35O27702C39O27694C48O27676C57O27739C71O27786C79O27775C87O27800C97O27841C100O27852C110O27868C118O27887C121O27739C126O27921C131O27968C138O27949C144O27936C146O27983C150O27998C154O28005C161O28020C164O28032C168O28039C180O28112C184O28005C189O28134C196O28152C201O28164C204O28134C210O28194,,
code-creation,JS,10,271396,0x2c01bf4a53e,133, file:///C:/coding/soodocode/build/statements.js:452:24,0xc2df93c238,~
code-source-info,0x2c01bf4a53e,113,23664,25116,C0O23664C20O23699C44O23700C55O23699C57O23774C58O23774C60O23826C62O23826C64O23838C65O23838C67O23872C72O23872C74O23909C100O23920C102O23909C104O24403C115O24403C120O24457C125O25070C128O25078C130O25101C132O25114,,
code-creation,JS,10,271461,0x2c01bf4a7ae,211, file:///C:/coding/soodocode/build/statements.js:473:6,0x2c01bf4a2e0,~
code-source-info,0x2c01bf4a7ae,113,24458,25069,C0O24492C7O24524C11O24531C17O24542C21O24549C28O24556C31O24568C35O24575C39O24567C48O24549C57O24612C71O24659C79O24648C87O24673C97O24714C100O24725C110O24741C118O24760C121O24612C126O24794C131O24842C138O24823C144O24810C146O24857C150O24872C154O24879C161O24894C164O24906C168O24913C180O24986C184O24879C189O25008C196O25026C201O25038C204O25008C210O25068,,
code-creation,JS,10,271548,0x2c01bf4ac2e,139, file:///C:/coding/soodocode/build/statements.js:421:28,0xc2df93c200,~
code-source-info,0x2c01bf4ac2e,113,21973,23604,C0O21973C20O22008C50O22009C61O22008C63O22099C64O22099C66O22151C68O22151C70O22163C71O22163C73O22197C78O22197C80O22238C106O22249C108O22238C110O22879C121O22879C126O22937C131O23554C134O23562C136O23589C138O23602,,
code-creation,JS,10,271612,0x2c01bf4aea6,211, file:///C:/coding/soodocode/build/statements.js:442:6,0x2c01bf4a9c8,~
code-source-info,0x2c01bf4aea6,113,22938,23553,C0O22972C7O23004C11O23011C17O23022C21O23029C28O23036C31O23048C35O23055C39O23047C48O23029C57O23092C71O23139C79O23128C87O23153C97O23194C100O23205C110O23221C118O23240C121O23092C126O23274C131O23326C138O23307C144O23294C146O23341C150O23356C154O23363C161O23378C164O23390C168O23397C180O23470C184O23363C189O23492C196O23510C201O23522C204O23492C210O23552,,
code-creation,JS,10,271702,0x2c01bf4b32e,139, file:///C:/coding/soodocode/build/statements.js:388:28,0xc2df93c1c8,~
code-source-info,0x2c01bf4b32e,113,20204,21909,C0O20204C20O20239C50O20240C61O20239C63O20329C64O20329C66O20381C68O20381C70O20393C71O20393C73O20427C78O20427C80O20468C106O20479C108O20468C110O21184C121O21184C126O21242C131O21859C134O21867C136O21894C138O21907,,
code-creation,JS,10,271767,0x2c01bf4b5a6,211, file:///C:/coding/soodocode/build/statements.js:411:6,0x2c01bf4b0c0,~
code-source-info,0x2c01bf4b5a6,113,21243,21858,C0O21277C7O21309C11O21316C17O21327C21O21334C28O21341C31O21353C35O21360C39O21352C48O21334C57O21397C71O21444C79O21433C87O21458C97O21499C100O21510C110O21526C118O21545C121O21397C126O21579C131O21631C138O21612C144O21599C146O21646C150O21661C154O21668C161O21683C164O21695C168O21702C180O21775C184O21668C189O21797C196O21815C201O21827C204O21797C210O21857,,
code-creation,JS,10,271853,0x2c01bf4ba36,145, file:///C:/coding/soodocode/build/statements.js:361:25,0xc2df93c190,~
code-source-info,0x2c01bf4ba36,113,18675,20143,C0O18675C20O18710C56O18711C67O18710C69O18863C70O18863C72O18915C74O18915C76O18927C77O18927C79O18961C84O18961C86O18999C112O19010C114O18999C116O19427C127O19427C132O19482C137O20096C140O20104C142O20128C144O20141,,
code-creation,JS,10,271918,0x2c01bf4bcae,211, file:///C:/coding/soodocode/build/statements.js:378:6,0x2c01bf4b7c0,~
code-source-info,0x2c01bf4bcae,113,19483,20095,C0O19517C7O19549C11O19556C17O19567C21O19574C28O19581C31O19593C35O19600C39O19592C48O19574C57O19637C71O19684C79O19673C87O19698C97O19739C100O19750C110O19766C118O19785C121O19637C126O19819C131O19868C138O19849C144O19836C146O19883C150O19898C154O19905C161O19920C164O19932C168O19939C180O20012C184O19905C189O20034C196O20052C201O20064C204O20034C210O20094,,
code-creation,JS,10,272006,0x2c01bf4c146,145, file:///C:/coding/soodocode/build/statements.js:334:26,0xc2df93c158,~
code-source-info,0x2c01bf4c146,113,17134,18616,C0O17134C20O17169C56O17170C67O17169C69O17332C70O17332C72O17384C74O17384C76O17396C77O17396C79O17430C84O17430C86O17469C112O17480C114O17469C116O17897C127O17897C132O17953C137O18568C140O18576C142O18601C144O18614,,
code-creation,JS,10,272071,0x2c01bf4c3be,211, file:///C:/coding/soodocode/build/statements.js:351:6,0x2c01bf4bec8,~
code-source-info,0x2c01bf4c3be,113,17954,18567,C0O17988C7O18020C11O18027C17O18038C21O18045C28O18052C31O18064C35O18071C39O18063C48O18045C57O18108C71O18155C79O18144C87O18169C97O18210C100O18221C110O18237C118O18256C121O18108C126O18290C131O18340C138O18321C144O18308C146O18355C150O18370C154O18377C161O18392C164O18404C168O18411C180O18484C184O18377C189O18506C196O18524C201O18536C204O18506C210O18566,,
code-creation,JS,10,272157,0x2c01bf4c84e,142, file:///C:/coding/soodocode/build/statements.js:306:29,0xc2df93c120,~
code-source-info,0x2c01bf4c84e,113,15587,17071,C0O15587C20O15622C53O15623C64O15622C66O15763C67O15763C69O15815C71O15815C73O15827C74O15827C76O15861C81O15861C83O15903C109O15914C111O15903C113O16343C124O16343C129O16402C134O17020C137O17028C139O17056C141O17069,,
code-creation,JS,10,272221,0x2c01bf4cac6,211, file:///C:/coding/soodocode/build/statements.js:324:6,0x2c01bf4c5d8,~
code-source-info,0x2c01bf4cac6,113,16403,17019,C0O16437C7O16469C11O16476C17O16487C21O16494C28O16501C31O16513C35O16520C39O16512C48O16494C57O16557C71O16604C79O16593C87O16618C97O16659C100O16670C110O16686C118O16705C121O16557C126O16739C131O16792C138O16773C144O16760C146O16807C150O16822C154O16829C161O16844C164O16856C168O16863C180O16936C184O16829C189O16958C196O16976C201O16988C204O16958C210O17018,,
code-creation,JS,10,272307,0x2c01bf4cf5e,148, file:///C:/coding/soodocode/build/statements.js:270:24,0xc2df93c0e8,~
code-source-info,0x2c01bf4cf5e,113,13499,15526,C0O13499C20O13534C59O13535C70O13534C72O13734C73O13734C75O13786C77O13786C79O13798C80O13798C82O13832C87O13832C89O13869C115O13880C117O13869C119O14813C130O14813C135O14867C140O15480C143O15488C145O15511C147O15524,,
code-creation,JS,10,272375,0x2c01bf4d1de,211, file:///C:/coding/soodocode/build/statements.js:296:6,0x2c01bf4cce0,~
code-source-info,0x2c01bf4d1de,113,14868,15479,C0O14902C7O14934C11O14941C17O14952C21O14959C28O14966C31O14978C35O14985C39O14977C48O14959C57O15022C71O15069C79O15058C87O15083C97O15124C100O15135C110O15151C118O15170C121O15022C126O15204C131O15252C138O15233C144O15220C146O15267C150O15282C154O15289C161O15304C164O15316C168O15323C180O15396C184O15289C189O15418C196O15436C201O15448C204O15418C210O15478,,
code-creation,JS,10,272461,0x2c01bf4d696,139, file:///C:/coding/soodocode/build/statements.js:233:26,0xc2df93c0b0,~
code-source-info,0x2c01bf4d696,113,11680,13441,C0O11680C20O11715C50O11716C61O11715C63O11828C64O11828C66O11880C68O11880C70O11892C71O11892C73O11926C78O11926C80O11965C106O11976C108O11965C110O12722C121O12722C126O12778C131O13393C134O13401C136O13426C138O13439,,
code-creation,JS,10,272526,0x2c01bf4d90e,211, file:///C:/coding/soodocode/build/statements.js:260:6,0x2c01bf4d428,~
code-source-info,0x2c01bf4d90e,113,12779,13392,C0O12813C7O12845C11O12852C17O12863C21O12870C28O12877C31O12889C35O12896C39O12888C48O12870C57O12933C71O12980C79O12969C87O12994C97O13035C100O13046C110O13062C118O13081C121O12933C126O13115C131O13165C138O13146C144O13133C146O13180C150O13195C154O13202C161O13217C164O13229C168O13236C180O13309C184O13202C189O13331C196O13349C201O13361C204O13331C210O13391,,
code-creation,JS,10,272612,0x2c01bf4dd96,139, file:///C:/coding/soodocode/build/statements.js:195:25,0xc2df93c078,~
code-source-info,0x2c01bf4dd96,113,9697,11621,C0O9697C20O9732C50O9733C61O9732C63O9845C64O9845C66O9897C68O9897C70O9909C71O9909C73O9943C78O9943C80O9981C106O9992C108O9981C110O10905C121O10905C126O10960C131O11574C134O11582C136O11606C138O11619,,
code-creation,JS,10,272676,0x2c01bf4e00e,211, file:///C:/coding/soodocode/build/statements.js:223:6,0x2c01bf4db28,~
code-source-info,0x2c01bf4e00e,113,10961,11573,C0O10995C7O11027C11O11034C17O11045C21O11052C28O11059C31O11071C35O11078C39O11070C48O11052C57O11115C71O11162C79O11151C87O11176C97O11217C100O11228C110O11244C118O11263C121O11115C126O11297C131O11346C138O11327C144O11314C146O11361C150O11376C154O11383C161O11398C164O11410C168O11417C180O11490C184O11383C189O11512C196O11530C201O11542C204O11512C210O11572,,
code-creation,JS,10,272763,0x2c01bf4e7e6,196, file:///C:/coding/soodocode/build/statements.js:73:18,0xc2df93c040,~
code-source-info,0x2c01bf4e7e6,113,4083,6545,C0O4083C17O4118C24O4119C35O4118C37O4138C38O4138C40O4190C42O4190C44O4202C45O4202C47O4234C107O4245C109O4234C111O5661C122O5661C127O5709C132O6220C135O6228C139O6248C143O6260C147O6279C151O6291C155O6309C159O6321C163O6347C167O6360C171O6381C175O6393C179O6414C183O6426C188O6505C191O6513C193O6530C195O6543,,
code-creation,JS,10,272845,0x2c01bf4e986,22, file:///C:/coding/soodocode/build/statements.js:128:6,0x2c01bf4e490,~
code-source-info,0x2c01bf4e986,113,6427,6504,C0O6443C7O6461C12O6473C15O6443C21O6503,,
code-creation,JS,10,272883,0x2c01bf4eb56,171, file:///C:/coding/soodocode/build/statements.js:116:6,0x2c01bf4e458,~
code-source-info,0x2c01bf4eb56,113,5710,6219,C0O5744C7O5776C11O5783C17O5794C21O5801C28O5801C37O5832C51O5879C59O5868C67O5893C77O5934C80O5945C90O5961C98O5980C101O5832C106O6014C111O6056C118O6037C124O6024C126O6071C130O6086C134O6093C141O6108C144O6120C148O6127C160O6200C164O6093C170O6218,,
code-creation,JS,13,273046,0x7ff64c45b000,1668,normalizeString node:path:66:25,0x3fcdef9f2c0,*
code-source-info,0x7ff64c45bx3fcdef9efd8
code-creation,JS,11,274744,0x7ff64c45b700,4604,read node:internal/modules/package_json_reader:48:14,0x3fcdefbdf00,^
code-source-info,0x7ff64c45b700,65,1172,3995,,,
code-creation,JS,11,274813,0x7ff64c45c940,1324,moduleStrategy node:internal/modules/esm/translators:164:56,0x8c1d177ef0,^
code-source-info,0x7ff64c45c940,86,5591,6236,,,
code-creation,JS,11,274860,0x7ff64c45ce80,564,callTranslator node:internal/modules/esm/loader:272:28,0x2bb6ec8efd8,^
code-source-info,0x7ff64c45ce80,83,9251,9573,,,
code-creation,JS,11,274900,0x7ff64c45d100,480,throwIfInvalidParentURL node:internal/modules/esm/resolve:1046:33,0x8c1d17de00,^
code-source-info,0x7ff64c45d100,87,40677,40925,,,
code-creation,Script,10,275727,0x2c01bf5563e,493, file:///C:/coding/soodocode/build/builtin_functions.js:1:1,0x2c01bf536e0,~
script-source,114,file:///C:/coding/soodocode/build/builtin_functions.js,import { PrimitiveVariableType } from "./runtime-types.js";\nimport { fail\x2C f } from "./utils.js";\nexport const builtinFunctions = ((d) => Object.fromEntries(Object.entries(d).map(([name\x2C data]) => [name\x2C {\n        args: new Map(data.args.map(a => [a[0]\x2C {\n                passMode: "reference"\x2C\n                type: (Array.isArray(a[1]) ? a[1] : [a[1]]).map(t => PrimitiveVariableType.get(t))\n            }]))\x2C\n        name\x2C\n        impl: data.impl\x2C\n        returnType: PrimitiveVariableType.get(data.returnType)\n    }])))({\n    LEFT: {\n        args: [\n            ["ThisString"\x2C "STRING"]\x2C\n            ["x"\x2C "INTEGER"]\x2C\n        ]\x2C\n        returnType: "STRING"\x2C\n        impl(str\x2C num) {\n            if (num < 0)\n                fail(`Number ${num} is negative`);\n            if (num > str.length)\n                fail(`Number ${num} is greater than the length of the string (${str.length})`);\n            return str.slice(0\x2C num);\n        }\x2C\n    }\x2C\n    RIGHT: {\n        args: [\n            ["ThisString"\x2C "STRING"]\x2C\n            ["x"\x2C "INTEGER"]\x2C\n        ]\x2C\n        returnType: "STRING"\x2C\n        impl(str\x2C num) {\n            if (num < 0)\n                fail(`Number ${num} is negative`);\n            if (num > str.length)\n                fail(`Number ${num} is greater than the length of the string (${str.length})`);\n            return str.slice(-num);\n        }\x2C\n    }\x2C\n    MID: {\n        args: [\n            ["ThisString"\x2C "STRING"]\x2C\n            ["x"\x2C "INTEGER"]\x2C\n            ["y"\x2C "INTEGER"]\x2C\n        ]\x2C\n        returnType: "STRING"\x2C\n        impl(str\x2C start\x2C length) {\n            if (start < 1)\n                fail(`Start index ${start} is less than 1`);\n            if (length < 1)\n                fail(`Slice length ${length} is less than 1`);\n            if (length + start - 1 > str.length)\n                fail(`End of slice (${length} + ${start}) is greater than the length of the string (${str.length})`);\n            return str.slice(start - 1\x2C start + length - 1);\n        }\x2C\n    }\x2C\n    LENGTH: {\n        args: [\n            ["ThisString"\x2C "STRING"]\x2C\n        ]\x2C\n        returnType: "INTEGER"\x2C\n        impl(str) {\n            return str.length;\n        }\x2C\n    }\x2C\n    TO_UPPER: {\n        args: [\n            ["x"\x2C ["STRING"\x2C "CHAR"]]\x2C\n        ]\x2C\n        returnType: "STRING"\x2C\n        impl(str) {\n            return str.toUpperCase();\n        }\x2C\n    }\x2C\n    TO_LOWER: {\n        args: [\n            ["x"\x2C ["STRING"\x2C "CHAR"]]\x2C\n        ]\x2C\n        returnType: "STRING"\x2C\n        impl(str) {\n            return str.toLowerCase();\n        }\x2C\n    }\x2C\n    UCASE: {\n        args: [\n            ["x"\x2C "CHAR"]\x2C\n        ]\x2C\n        returnType: "CHAR"\x2C\n        impl(str) {\n            return str.toUpperCase();\n        }\x2C\n    }\x2C\n    LCASE: {\n        args: [\n            ["x"\x2C "CHAR"]\x2C\n        ]\x2C\n        returnType: "CHAR"\x2C\n        impl(str) {\n            return str.toLowerCase();\n        }\x2C\n    }\x2C\n    NUM_TO_STR: {\n        args: [\n            ["x"\x2C "REAL"]\x2C\n        ]\x2C\n        returnType: "STRING"\x2C\n        impl(num) {\n            return num.toString();\n        }\x2C\n    }\x2C\n    STR_TO_NUM: {\n        args: [\n            ["x"\x2C ["STRING"\x2C "CHAR"]]\x2C\n        ]\x2C\n        returnType: "REAL"\x2C\n        impl(str) {\n            const out = Number(str);\n            if (isNaN(out) || !Number.isFinite(out))\n                fail(f.quote `Cannot convert ${str} to a number`);\n            return out;\n        }\x2C\n    }\x2C\n    IS_NUM: {\n        args: [\n            ["ThisString"\x2C ["STRING"\x2C "CHAR"]]\x2C\n        ]\x2C\n        returnType: "BOOLEAN"\x2C\n        impl(str) {\n            const out = Number(str);\n            return !isNaN(out) && Number.isFinite(out);\n        }\x2C\n    }\x2C\n    ASC: {\n        args: [\n            ["ThisChar"\x2C "CHAR"]\x2C\n        ]\x2C\n        returnType: "INTEGER"\x2C\n        impl(str) {\n            return str.charCodeAt(0);\n        }\x2C\n    }\x2C\n    CHR: {\n        args: [\n            ["x"\x2C "INTEGER"]\x2C\n        ]\x2C\n        returnType: "CHAR"\x2C\n        impl(x) {\n            return String.fromCharCode(x);\n        }\x2C\n    }\x2C\n    INT: {\n        args: [\n            ["x"\x2C "REAL"]\x2C\n        ]\x2C\n        returnType: "INTEGER"\x2C\n        impl(x) {\n            return Math.trunc(x);\n        }\x2C\n    }\x2C\n    RAND: {\n        args: [\n            ["x"\x2C "INTEGER"]\x2C\n        ]\x2C\n        returnType: "REAL"\x2C\n        impl(x) {\n            return Math.random() * x;\n        }\x2C\n    }\x2C\n    DAY: {\n        args: [\n            ["ThisDate"\x2C "DATE"]\x2C\n        ]\x2C\n        returnType: "INTEGER"\x2C\n        impl(x) {\n            return x.getDate();\n        }\n    }\x2C\n    MONTH: {\n        args: [\n            ["ThisDate"\x2C "DATE"]\x2C\n        ]\x2C\n        returnType: "INTEGER"\x2C\n        impl(x) {\n            return x.getMonth();\n        }\n    }\x2C\n    YEAR: {\n        args: [\n            ["ThisDate"\x2C "DATE"]\x2C\n        ]\x2C\n        returnType: "INTEGER"\x2C\n        impl(x) {\n            return x.getFullYear();\n        }\n    }\x2C\n    DAYINDEX: {\n        args: [\n            ["ThisDate"\x2C "DATE"]\x2C\n        ]\x2C\n        returnType: "INTEGER"\x2C\n        impl(x) {\n            return x.getDay() + 1;\n        }\n    }\x2C\n    SETDATE: {\n        args: [\n            ["Day"\x2C "INTEGER"]\x2C\n            ["Month"\x2C "INTEGER"]\x2C\n            ["Year"\x2C "INTEGER"]\x2C\n        ]\x2C\n        returnType: "DATE"\x2C\n        impl(d\x2C m\x2C y) {\n            return new Date(y\x2C m\x2C d);\n        }\n    }\x2C\n    TODAY: {\n        args: []\x2C\n        returnType: "DATE"\x2C\n        impl() {\n            return new Date();\n        }\n    }\x2C\n    EOF: {\n        args: [\n            ["Filename"\x2C "STRING"]\n        ]\x2C\n        returnType: "BOOLEAN"\x2C\n        impl(filename) {\n            const file = this.getOpenFile(filename\x2C ["READ"]\x2C `EOF function`);\n            return file.lineNumber >= file.lines.length;\n        }\n    }\n});\n
code-source-info,0x2c01bf5563e,114,0,5697,C10O0C28O0C48O0C55O130C65O536C70O671C84O961C89O1096C103O1382C108O1547C122O2011C127O2117C141O2192C146O2298C160O2380C165O2486C179O2565C184O2657C198O2736C203O2828C217O2912C222O3006C236O3087C241O3191C255O3414C260O3530C274O3662C279O3764C293O3841C298O3936C312O4016C317O4111C331O4183C336O4278C350O4353C355O4455C369O4525C374O4627C388O4697C393O4799C407O4876C412O4978C426O5053C431O5217C445O5299C450O5355C464O5421C469O5524C483O523C487O130C492O5697,,
code-creation,JS,10,276171,0x2c01bf559fe,46, file:///C:/coding/soodocode/build/builtin_functions.js:3:34,0x2c01bf539f0,~
code-source-info,0x2c01bf559fe,114,131,522,C0O145C4O145C9O157C13O164C18O164C24O174C34O175C40O145C45O522,,
code-creation,JS,10,277091,0x2c01bf5b5d6,12,setHasStartedUserESMExecution node:internal/modules/helpers:353:32,0x3fcdefbdca8,~
code-source-info,0x2c01bf5b5d6,64,11298,11348,C0O11308C4O11336C11O11347,,
code-creation,JS,10,277195,0x2c01bf5b8be,14,tagProcessor file:///C:/coding/soodocode/build/utils.js:239:29,0xc2df91bdd0,~
code-source-info,0x2c01bf5b8be,106,8577,8782,C0O8577C9O8597C13O8780,,
code-creation,JS,10,277384,0x2c01bf5cf66,49,PrimitiveVariableType file:///C:/coding/soodocode/build/runtime-types.js:11:16,0xc2df932af0,~
code-source-info,0x2c01bf5cf66,112,264,321,C3O281C24O281C36O298C41O308C48O320,,
code-creation,JS,10,277446,0x2c01bf5d056,2,BaseVariableType file:///C:/coding/soodocode/build/runtime-types.js:2:8,0xc2df932a00,~
code-source-info,0x2c01bf5d056,112,52,52,C1O52,,
code-creation,JS,10,277607,0x2c01bf5e436,16, file:///C:/coding/soodocode/build/parser-types.js:108:58,0xc2df92a450,~
code-source-info,0x2c01bf5e436,110,3852,3995,C0O3863C10O3863C15O3995,,
code-creation,JS,10,277674,0x2c01bf5e5d6,65, file:///C:/coding/soodocode/build/parser-types.js:108:73,0x2c01bf5e390,~
code-source-info,0x2c01bf5e5d6,110,3867,3994,C0O3872C11O3900C19O3923C27O3945C41O3975C49O3985C59O3872C64O3994,,
code-creation,JS,10,277747,0x2c01bf5e81e,17,Operator file:///C:/coding/soodocode/build/parser-types.js:98:16,0xc2df928c60,~
code-source-info,0x2c01bf5e81e,110,3593,3642,C0O3610C4O3617C9O3617C16O3641,,
code-creation,JS,10,277932,0x2c01bf5edce,73, file:///C:/coding/soodocode/build/parser-types.js:209:76,0xc2df928d88,~
code-source-info,0x2c01bf5edce,110,6393,6479,C0O6398C7O6406C12O6411C20O6411C27O6439C32O6444C40O6444C48O6462C53O6470C66O6476C72O6479,,
code-creation,JS,11,278062,0x7ff64c45d300,420, file:///C:/coding/soodocode/build/parser-types.js:209:76,0xc2df928d88,^
code-source-info,0x7ff64c45d300,110,6393,6479,,,
code-creation,JS,11,278120,0x7ff64c45d4c0,2072, node:internal/per_context/primordials:514:15,0x23399f69a0,^
code-source-info,0x7ff64c45d4c0,6,15828,16363,,,
code-creation,JS,11,278155,0x7ff64c45dd00,536, node:internal/per_context/primordials:524:53,0x23399f6c08,^
code-source-info,0x7ff64c45dd00,6,16229,16341,,,
code-creation,JS,11,278188,0x7ff64c45df40,332, node:internal/per_context/primordials:513:45,0x23399f6878,^
code-source-info,0x7ff64c45df40,6,15792,16364,,,
code-creation,JS,11,278229,0x7ff64c45e0c0,1004,addJobsToDependencyGraph node:internal/modules/esm/module_job:118:38,0xc2df906368,^
code-source-info,0x7ff64c45e0c0,92,3743,4010,,,
code-creation,JS,11,278257,0x7ff64c45e4c0,120,Operator file:///C:/coding/soodocode/build/parser-types.js:98:16,0xc2df928c60,^
code-source-info,0x7ff64c45e4c0,110,3593,3642,,,
code-creation,JS,11,278289,0x7ff64c45e580,532, file:///C:/coding/soodocode/build/parser-types.js:108:73,0x2c01bf5e390,^
code-source-info,0x7ff64c45e580,110,3867,3994,,,
code-creation,JS,11,278316,0x7ff64c45e7c0,116, file:///C:/coding/soodocode/build/parser-types.js:108:58,0xc2df92a450,^
code-source-info,0x7ff64c45e7c0,110,3852,3995,,,
code-creation,JS,10,278567,0x2c01bf60806,257, file:///C:/coding/soodocode/build/builtin_functions.js:3:82,0x2c01bf55940,~
code-source-info,0x2c01bf60806,114,179,520,C0O179C20O181C57O187C152O197C161O198C173O224C177O233C182O238C192O238C200O220C211O420C215O445C223O471C229O493C234O502C239O493C256O520,,
code-creation,JS,10,278669,0x2c01bf60c86,99, file:///C:/coding/soodocode/build/builtin_functions.js:4:37,0x2c01bf60638,~
code-source-info,0x2c01bf60c86,114,242,408,C0O247C8O249C23O318C27O324C34O333C38O324C47O341C61O349C71O355C81O355C98O408,,
code-creation,JS,10,278743,0x2c01bf6109e,17, file:///C:/coding/soodocode/build/builtin_functions.js:6:65,0x2c01bf60b10,~
code-source-info,0x2c01bf6109e,114,359,392,C0O386C6O386C11O386C16O392,,
code-creation,JS,10,278799,0x2c01bf61186,21,get file:///C:/coding/soodocode/build/runtime-types.js:27:15,0xc2df932c80,~
code-source-info,0x2c01bf61186,112,692,764,C0O721C5O721C14O739C20O758,,
code-creation,JS,10,278854,0x2c01bf6129e,41,valid file:///C:/coding/soodocode/build/runtime-types.js:24:17,0xc2df932c30,~
code-source-info,0x2c01bf6129e,112,527,677,C0O545C2O558C9O580C16O599C23O620C30O639C37O661C40O671,,
code-creation,JS,10,279142,0x2c01bf627d6,44,errorBoundary file:///C:/coding/soodocode/build/utils.js:182:30,0xc2df91bc40,~
code-source-info,0x2c01bf627d6,106,6425,7633,C0O6425C21O6428C33O6454C39O6476C43O7631,,
code-creation,JS,10,279344,0x2c01bf62f8e,489,__esDecorate file:///C:/coding/soodocode/build/runtime.js:8:60,0xc2df92dc28,~
code-source-info,0x2c01bf62f8e
code-creation,JS,10,279505,0x2c01bf637be,14,decorator file:///C:/coding/soodocode/build/utils.js:183:30,0x2c01bf62710,~
code-source-info,0x2c01bf637be,106,6501,7630,C0O6501C9O6524C13O7624,,
code-creation,JS,10,279560,0x2c01bf638fe,28,accept file:///C:/coding/soodocode/build/runtime.js:9:20,0x2c01bf62d60,~
code-source-info,0x2c01bf638fe,111,496,600,C0O502C10O547C19O553C24O547C25O589C27O598,,
code-creation,JS,10,279690,0x2c01bf63f46,100,__setFunctionName file:///C:/coding/soodocode/build/statements.js:35:70,0xc2df93bff0,~
code-source-info,0x2c01bf63f46,113,2189,2432,C0O2213C6O2255C15O2273C20O2285C28O2273C40O2313C44O2327C52O2342C62O2382C67O2394C81O2394C90O2422C94O2327C99O2430,,
code-creation,JS,10,279885,0x2c01bf645ae,489,__esDecorate file:///C:/coding/soodocode/build/statements.js:1:60,0xc2df93bf20,~
code-source-info,0x2c01bf645ae,113,59,1779,C0O59C15O287C20O299C22O304C33O332C45O381C51O398C53O414C63O439C71O478C77O495C79O504C83O511C88O554C93O511C103O585C104O585C106O620C110O627C114O634C115O634C120O669C122O695C136O690C149O690C150O706C152O721C168O750C171O717C179O681C183O787C199O772C212O772C213O803C219O825C227O831C230O813C238O763C242O844C246O867C250O1054C252O1054C258O1064C268O1099C276O1120C290O1138C294O1058C300O1163C302O1172C307O1202C311O1225C313O1247C323O1298C332O1304C337O1298C338O1350C341O1372C346O1358C351O1356C353O1378C355O1393C359O1410C362O1432C367O1418C372O1416C374O1438C376O1453C380O1470C383O1492C388O1478C393O1476C395O1512C400O1512C407O1547C410O1555C415O1553C417O1585C419O1594C424O1620C429O1620C436O1649C438O1665C442O641C447O596C455O1690C459O1702C463O1709C468O1742C479O1709C484O1765C485O1770C488O1778,,
code-creation,JS,10,280038,0x2c01bf64d2e,44,Abstract file:///C:/coding/soodocode/build/utils.js:173:25,0xc2df91bbc8,~
code-source-info,0x2c01bf64d2e,106,6132,6395,C0O6132C9O6155C21O6183C43O6393,,
code-creation,JS,10,280112,0x2c01bf65006,28,accept file:///C:/coding/soodocode/build/statements.js:2:20,0x2c01bf64380,~
code-source-info,0x2c01bf65006,113,157,261,C0O163C10O208C19O214C24O208C25O250C27O259,,
code-creation,JS,10,280197,0x2c01bf652ee,84,__runInitializers file:///C:/coding/soodocode/build/statements.js:28:70,0xc2df93bfa0,~
code-source-info,0x2c01bf652ee,113,1850,2118,C0O1850C2O1912C9O1919C13O1941C15O1961C19O1946C24O1984C30O2015C34O2019C39O2019C49O2054C53O2058C58O2058C65O1970C70O1928C74O2083C83O2116,,
code-creation,JS,10,280264,0x2c01bf6553e,33,statement file:///C:/coding/soodocode/build/statements.js:134:19,0xc2df93bea8,~
code-source-info,0x2c01bf6553e,113,6590,9672,C0O6590C28O6621C32O9670,,
code-creation,JS,10,280500,0x2c01bf65db6,827, file:///C:/coding/soodocode/build/statements.js:135:21,0x2c01bf65498,~
code-source-info,0x2c01bf65db
code-creation,JS,10,280701,0x2c01bf663ce,84, file:///C:/coding/soodocode/build/statements.js:156:23,0x2c01bf65a38,~
code-source-info,0x2c01bf663ce,113,7502,7670,C0O7559C2O7521C9O7537C16O7550C23O7582C26O7579C32O7587C39O7608C42O7605C48O7613C55O7631C58O7628C64O7636C71O7654C74O7651C80O7659C83O7670,,
code-creation,JS,10,280904,0x2c01bf673f6,49,StatementType file:///C:/coding/soodocode/build/statements.js:63:30,0xc2df93be58,~
code-source-info,0x2c01bf673f6,113,3847,3975,C0O3861C6O3880C11O3880C18O3905C20O3918C21O3923C32O3933C43O3923C48O3974,,
code-creation,JS,10,280967,0x2c01bf67556,49,TokenType file:///C:/coding/soodocode/build/lexer-types.js:74:26,0xc2df9215b0,~
code-source-info,0x2c01bf67556,108,3553,3673,C0O3567C6O3582C11O3582C18O3607C20O3620C21O3625C32O3635C43O3625C48O3672,,
code-creation,JS,10,281036,0x2c01bf6779e,49,ProgramASTBranchNodeType file:///C:/coding/soodocode/build/parser-types.js:223:41,0xc2df9285d0,~
code-source-info,0x2c01bf6779e,110,7020,7173,C0O7034C6O7064C11O7064C18O7089C20O7102C21O7107C32O7117C43O7107C48O7172,,
code-creation,JS,11,281254,0x7ff64c45e880,3908,__esDecorate file:///C:/coding/soodocode/build/statements.js:1:60,0xc2df93bf20,^
code-source-info,0x7ff64c45e880,113,59,1779,,,
code-creation,JS,11,281288,0x7ff64c45f800,156,get file:///C:/coding/soodocode/build/runtime-types.js:27:15,0xc2df932c80,^
code-source-info,0x7ff64c45f800,112,692,764,,,
code-creation,JS,11,281314,0x7ff64c45f8c0,160, file:///C:/coding/soodocode/build/builtin_functions.js:6:65,0x2c01bf60b10,^
code-source-info,0x7ff64c45f8c0,114,359,392,,,
code-creation,JS,11,281346,0x7ff64c45f980,580, file:///C:/coding/soodocode/build/builtin_functions.js:4:37,0x2c01bf60638,^
code-source-info,0x7ff64c45f980,114,242,408,,,
code-creation,JS,11,281373,0x7ff64c45fc00,312,valid file:///C:/coding/soodocode/build/runtime-types.js:24:17,0xc2df932c30,^
code-source-info,0x7ff64c45fc00,112,527,677,,,
code-creation,JS,11,281416,0x7ff64c45fd80,1720, file:///C:/coding/soodocode/build/builtin_functions.js:3:82,0x2c01bf55940,^
code-source-info,0x7ff64c45fd80,114,179,520,,,
code-creation,JS,11,281446,0x7ff64c460480,528, file:///C:/coding/soodocode/build/statements.js:156:23,0x2c01bf65a38,^
code-source-info,0x7ff64c460480,113,7502,7670,,,
code-creation,JS,11,281474,0x7ff64c4606c0,500,statement file:///C:/coding/soodocode/build/statements.js:134:19,0xc2df93bea8,^
code-source-info,0x7ff64c4606c0,113,6590,9672,,,
code-creation,JS,11,281747,0x7ff64c460900,6500, file:///C:/coding/soodocode/build/statements.js:135:21,0x2c01bf65498,^
code-source-info,0x7ff64c460900,113,6637,9669,,,
code-creation,JS,11,281782,0x7ff64c462280,240,accept file:///C:/coding/soodocode/build/statements.js:2:20,0x2c01bf64380,^
code-source-info,0x7ff64c462280,113,157,261,,,
code-creation,JS,10,282519,0x2c01bf6f1a6,474,symbolize file:///C:/coding/soodocode/build/lexer.js:173:26,0xc2df91ea50,~
code-source-info,0x2c01bf6f1a6,107,5703,6570,C0O5729C7O5729C13O5786C18O5786C24O5842C47O5837C75O5837C93O5815C134O5827C245O5872C251O5931C254O5920C259O5965C264O5965C271O6009C276O6009C281O6048C289O6154C294O6167C300O6187C303O6176C307O6218C312O6218C319O6284C324O6284C328O6326C333O6326C340O6251C344O6362C349O6362C354O6401C360O5803C435O6477C441O6477C444O5775C452O6501C459O6527C463O6555C473O6568,,
code-creation,JS,10,282618,0x2c01bf6f53e,43,SymbolizerIO file:///C:/coding/soodocode/build/lexer.js:101:16,0xc2df91eb50,~
code-source-info,0x2c01bf6f53e,107,3297,3482,C13O3328C15O3340C19O3358C21O3370C25O3388C26O3405C30O3421C31O3443C35O3459C37O3471C42O3481,,
code-creation,JS,10,282685,0x2c01bf6f856,15,has file:///C:/coding/soodocode/build/lexer.js:135:8,0xc2df91ec90,~
code-source-info,0x2c01bf6f856,107,4415,4479,C0O4440C5O4452C9O4446C13O4460C14O4473,,
code-creation,JS,10,282775,0x2c01bf6f9fe,240,cons file:///C:/coding/soodocode/build/lexer.js:114:9,0xc2df91ec40,~
code-source-info,0x2c01bf6f9fe,107,3604,4407,C0O3643C3O3632C8O3689C13O3699C18O3706C23O3717C28O3706C34O3689C40O3739C43O3774C49O3780C54O3802C55O3815C56O3828C57O3856C60O3845C64O3873C71O3903C82O3916C88O3934C92O3938C96O3923C105O3895C109O3959C115O3983C119O3987C126O3971C130O4007C131O4019C132O4066C137O4073C142O4084C147O4097C152O4112C156O4104C160O4073C169O4120C174O4148C176O4165C180O4190C187O4220C198O4233C203O4248C207O4240C216O4212C220O4273C225O4294C232O4285C236O4318C237O4330C238O4378C239O4391,,
code-creation,JS,11,282977,0x7ff64c462380,3700,symbolize file:///C:/coding/soodocode/build/lexer.js:173:26,0xc2df91ea50,^
code-source-info,0x7ff64c462380,107,5703,6570,,,
tick,0x7ff863c0d0e4,283084,0,0x0,0,0x7ff6cbdb2110,0x2c01bf6f30e,0xc2df9100cc,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,11,283121,0x7ff64c463240,616,__setFunctionName file:///C:/coding/soodocode/build/statements.js:35:70,0xc2df93bff0,^
code-source-info,0x7ff64c463240,113,2189,2432,,,
code-creation,JS,11,283241,0x7ff64c4634c0,588,__runInitializers file:///C:/coding/soodocode/build/statements.js:28:70,0xc2df93bfa0,^
code-source-info,0x7ff64c4634c0,113,1850,2118,,,
code-creation,JS,11,283323,0x7ff64c463740,516,errorBoundary file:///C:/coding/soodocode/build/utils.js:182:30,0xc2df91bc40,^
code-source-info,0x7ff64c463740,106,6425,7633,,,
code-creation,JS,11,283372,0x7ff64c463980,164,decorator file:///C:/coding/soodocode/build/utils.js:183:30,0x2c01bf62710,^
code-source-info,0x7ff64c463980,106,6501,7630,,,
code-creation,JS,10,283612,0x2c01bf70416,49,isNumber file:///C:/coding/soodocode/build/lexer.js:157:13,0xc2df91ee20,~
code-source-info,0x2c01bf70416,107,5232,5382,C0O5255C5O5255C11O5274C12O5287C13O5314C18O5314C23O5318C30O5319C36O5342C38O5355C45O5369C48O5376,,
code-creation,JS,10,283724,0x2c01bf7053e,13,at file:///C:/coding/soodocode/build/lexer.js:111:7,0xc2df91ebf0,~
code-source-info,0x2c01bf7053e,107,3544,3595,C0O3569C5O3581C9O3575C12O3589,,
code-creation,JS,10,283847,0x2c01bf70636,84,isAlphanumeric file:///C:/coding/soodocode/build/lexer.js:163:19,0xc2df91ee70,~
code-source-info,0x2c01bf70636,107,5401,5651,C0O5424C5O5424C11O5443C12O5456C13O5483C18O5483C23O5487C30O5488C36O5511C38O5524C45O5538C52O5566C59O5580C66O5608C73O5622C80O5638C83O5645,,
code-creation,JS,10,284017,0x2c01bf70806,128,read file:///C:/coding/soodocode/build/lexer.js:138:9,0xc2df91ece0,~
code-source-info,0x2c01bf70806,107,4488,4775,C0O4506C15O4557C26O4570C36O4549C42O4593C53O4626C59O4646C72O4665C76O4677C81O4702C96O4720C102O4708C108O4694C112O4745C117O4757C121O4764C124O4751C127O4769,,
code-creation,JS,10,284231,0x2c01bf70af6,91,write file:///C:/coding/soodocode/build/lexer.js:151:10,0xc2df91edd0,~
code-source-info,0x2c01bf70af6,107,4939,5219,C0O4966C6O4987C12O5017C21O5017C25O5077C30O5084C35O5093C41O5111C46O5129C51O5146C56O5146C66O5089C72O5084C77O5165C79O5206C85O5182C90O5218,,
code-creation,JS,10,284357,0x2c01bf70c6e,20,Symbol file:///C:/coding/soodocode/build/lexer-types.js:17:16,0xc2df921650,~
code-source-info,0x2c01bf70c6e,108,925,1032,C0O955C2O965C6O981C8O991C12O1007C14O1018C19O1031,,
code-creation,RegExp,3,284532,0x7ff64c463a40,876,<-{1\x2C2}
code-creation,JS,11,285037,0x7ff64c463dc0,636,write file:///C:/coding/soodocode/build/lexer.js:151:10,0xc2df91edd0,^
code-source-info,0x7ff64c463dc0,107,4939,5219,,,
code-creation,JS,11,285105,0x7ff64c464080,160,has file:///C:/coding/soodocode/build/lexer.js:135:8,0xc2df91ec90,^
code-source-info,0x7ff64c464080,107,4415,4479,,,
code-creation,JS,11,285164,0x7ff64c464140,104,at file:///C:/coding/soodocode/build/lexer.js:111:7,0xc2df91ebf0,^
code-source-info,0x7ff64c464140,107,3544,3595,,,
code-creation,JS,11,285226,0x7ff64c4641c0,1412,cons file:///C:/coding/soodocode/build/lexer.js:114:9,0xc2df91ec40,^
code-source-info,0x7ff64c4641c0,107,3604,4407,,,
code-creation,JS,11,285277,0x7ff64c464780,576,isAlphanumeric file:///C:/coding/soodocode/build/lexer.js:163:19,0xc2df91ee70,^
code-source-info,0x7ff64c464780,107,5401,5651,,,
code-creation,JS,11,285329,0x7ff64c464a00,776,read file:///C:/coding/soodocode/build/lexer.js:138:9,0xc2df91ece0,^
code-source-info,0x7ff64c464a00,107,4488,4775,,,
code-creation,JS,11,285369,0x7ff64c464d40,124,Symbol file:///C:/coding/soodocode/build/lexer-types.js:17:16,0xc2df921650,^
code-source-info,0x7ff64c464d40,108,925,1032,,,
new,MemoryChunk,0x213166c0000,262144
new,MemoryChunk,0x3e413680000,262144
new,MemoryChunk,0x13a35f80000,262144
code-creation,JS,10,292046,0x2c01bf726ee,1488,tokenize file:///C:/coding/soodocode/build/lexer.js:201:25,0xc2df91eaa0,~
code-source-info,0x2c01bf726ee,107,6595,10861,C0O6595C16O6624C18O6624C20O6646C25O6804C28O6816C29O6816C31O6849C53O6833C82O6878C89O6892C97O6920C104O6925C109O6963C111O6983C115O7011C121O7035C124O7046C131O7051C136O7084C137O7099C141O7123C144O7130C148O7152C151O7159C159O7171C164O7171C169O7159C176O7220C179O7231C186O7236C191O7291C197O7317C198O7332C204O7373C216O7373C223O7481C231O7526C237O7549C240O7573C251O7591C254O7602C261O7607C266O7645C267O7659C271O7701C278O7708C283O7734C294O7752C315O7823C322O7828C326O7848C330O7832C343O7863C350O7868C357O7734C362O7891C365O7898C370O7907C379O7921C392O7944C400O7949C403O7953C418O7965C426O7970C438O7903C444O7898C449O7994C454O8061C460O8084C463O8108C474O8126C477O8137C484O8142C489O8180C490O8194C494O8218C497O8225C502O8234C511O8250C524O8273C532O8278C537O8298C541O8282C556O8313C564O8318C576O8230C582O8225C587O8342C592O8399C595O8410C602O8415C607O8453C609O8468C615O8491C618O8502C625O8507C630O8549C632O8564C638O8597C645O8611C650O8657C653O8664C661O8664C670O8674C676O8674C680O8700C683O8711C690O8716C695O8757C706O8782C710O8773C716O8766C720O8808C738O8832C743O8837C747O8823C753O8817C757O8862C765O8883C770O8872C775O8866C781O8911C787O8917C793O8919C798O8925C805O8925C812O8911C816O8977C818O8997C824O9054C833O9095C851O9123C863O9054C870O9173C877O9187C885O9215C892O9220C897O9259C899O9279C905O9321C908O9332C915O9337C920O9371C922O9385C926O9407C929O9431C942O9460C945O9471C952O9476C957O9510C959O9524C963O9546C966O9570C979O9599C982O9610C989O9615C994O9640C997O9661C1000O9672C1007O9677C1012O9704C1018O9709C1024O9711C1029O9717C1036O9717C1046O9704C1053O9770C1056O9781C1063O9786C1068O9824C1070O9844C1074O9874C1085O9898C1090O9884C1095O9878C1101O9922C1113O9960C1122O9922C1126O9981C1129O9988C1134O9997C1146O10028C1155O10041C1161O10047C1167O10047C1175O9993C1181O9988C1188O10081C1191O10092C1198O10097C1203O10129C1212O10154C1216O10146C1229O10123C1235O10209C1238O10216C1242O10234C1245O10241C1253O10253C1258O10253C1263O10241C1268O6828C1336O10295C1342O10313C1351O10354C1356O10313C1361O10379C1367O10396C1376O10440C1381O10396C1386O10464C1392O10481C1401O10525C1406O10481C1411O10549C1418O10563C1423O10591C1432O10657C1437O10665C1445O10665C1451O10671C1456O10672C1461O10591C1466O10691C1471O10723C1481O10740C1487O10753,,
code-creation,JS,10,292527,0x2c01bf731e6,64,write file:///C:/coding/soodocode/build/lexer.js:305:19,0x2c01bf721e0,~
code-source-info,0x2c01bf731e6,107,10772,10859,C0O10789C5O10796C10O10805C18O10817C21O10824C28O10830C31O10837C36O10843C41O10843C51O10801C57O10796C63O10858,,
code-creation,JS,10,292610,0x2c01bf73326,20,Token file:///C:/coding/soodocode/build/lexer-types.js:80:16,0xc2df921880,~
code-source-info,0x2c01bf73326,108,3710,3817,C0O3740C2O3750C6O3766C8O3776C12O3792C14O3803C19O3816,,
code-creation,JS,10,292704,0x2c01bf7359e,38,toToken file:///C:/coding/soodocode/build/lexer-types.js:22:12,0xc2df9216a0,~
code-source-info,0x2c01bf7359e,108,1044,1125,C0O1057C6O1074C10O1089C15O1074C20O1101C25O1112C32O1064C37O1119,,
code-creation,JS,11,293033,0x7ff64c464e00,10668,tokenize file:///C:/coding/soodocode/build/lexer.js:201:25,0xc2df91eaa0,^
code-source-info,0x7ff64c464e00,107,6595,10861,,,
code-creation,JS,11,293093,0x7ff64c4677c0,320,isNumber file:///C:/coding/soodocode/build/lexer.js:157:13,0xc2df91ee20,^
code-source-info,0x7ff64c4677c0,107,5232,5382,,,
code-creation,JS,11,293125,0x7ff64c467940,124,Token file:///C:/coding/soodocode/build/lexer-types.js:80:16,0xc2df921880,^
code-source-info,0x7ff64c467940,108,3710,3817,,,
code-creation,JS,11,293161,0x7ff64c467a00,512,write file:///C:/coding/soodocode/build/lexer.js:305:19,0x2c01bf721e0,^
code-source-info,0x7ff64c467a00,107,10772,10859,,,
code-creation,JS,11,293195,0x7ff64c467c40,292,toToken file:///C:/coding/soodocode/build/lexer-types.js:22:12,0xc2df9216a0,^
code-source-info,0x7ff64c467c40,108,1044,1125,,,
code-creation,JS,11,293230,0x7ff64c467d80,384,TokenType file:///C:/coding/soodocode/build/lexer-types.js:74:26,0xc2df9215b0,^
code-source-info,0x7ff64c467d80,108,3553,3673,,,
code-creation,JS,10,293677,0x2c01bf74bc6,924,parse file:///C:/coding/soodocode/build/parser.js:105:22,0xc2df924f90,~
code-source-info,0x2c01bf74bc6,109,4973,7359,C0O4976C5O4985C25O5015C29O5015C34O5073C36O5073C38O5277C40O5277C42O5304C59O5296C89O5296C92O5339C103O5371C113O5371C128O5339C134O5410C142O5419C147O5446C152O5463C158O5464C165O5518C173O5527C178O5566C185O5591C192O5626C198O5591C215O5635C227O5566C233O5666C238O5683C244O5684C249O5708C253O5719C259O5719C266O5768C274O5777C279O5824C283O5835C293O5835C299O5855C301O5886C312O5886C319O5994C326O6011C331O6015C337O6020C343O6020C347O5974C352O6068C358O6086C364O6086C369O6128C376O6145C381O6149C387O6154C393O6154C398O6192C402O6203C408O6203C414O6257C421O6262C428O6264C434O6270C439O6329C446O6346C451O6350C457O6270C471O6257C478O6414C486O6423C491O6478C495O6489C505O6489C511O6509C513O6540C524O6580C547O6540C552O6657C554O6712C561O6729C566O6733C572O6738C578O6738C590O6800C603O6830C615O6800C620O6885C626O6903C632O6903C637O6941C643O6952C653O6952C660O7007C664O5285C740O7027C743O7042C749O7058C755O7063C761O7065C766O7071C775O7113C785O7113C792O7119C799O7137C808O7175C818O7175C825O7181C832O7199C837O7202C843O7207C849O7208C855O7227C861O7071C871O7257C880O7257C886O7263C892O7281C899O7058C904O7297C911O7314C917O7338C923O7357,,
code-creation,JS,10,294040,0x2c01bf75486,202,splitTokensToStatements file:///C:/coding/soodocode/build/parser.js:89:40,0xc2df924f40,~
code-source-info,0x2c01bf75486,109,4366,4951,C0O4366C8O4403C22O4414C47O4448C72O4482C97O4521C122O4560C139O4403C141O4601C150O4608C156O4638C166O4639C172O4912C180O4913C186O4920C196O4921C201O4949,,
code-creation,JS,10,294156,0x2c01bf75756,171,splitTokens file:///C:/coding/soodocode/build/utils.js:34:28,0xc2df91b808,~
code-source-info,0x2c01bf75756,106,1034,1236,C0O1068C5O1095C22O1089C50O1089C53O1117C60O1122C65O1151C73O1151C80O1193C88O1193C94O1199C99O1200C104O1078C168O1220C170O1234,,
code-creation,JS,13,294276,0x7ff64c467f40,1876,cons file:///C:/coding/soodocode/build/lexer.js:114:9,0xc2df91ec40,*
code-source-info,0x7ff64c467f40,107,3604,4407,C0O3604C39O3699C47O3632C172O3689C196O3699C233O3706C310O3689C345O3739C368O3774C392O3780C411O3856C432O3845C457O3856C470O3845C536O3873C622O3903C631O3934C648O3938C680O3987C684O3938C688O3923C705O3895C731O3971C736O4019C769O3815C778O4066C815O4073C837O4084C841O4073C845O4294C855O4073C888O4112C923O4104C933O4073C989O4120C1038O4391C1050O4165C1091O4073C1121O4190C1204O4220C1212O4240C1216O4212C1241O4285C1245O4330C1257O3604C1304O3632C1394O3706C1495O4073,,
code-creation,JS,10,294448,0x2c01bf762d6,407, file:///C:/coding/soodocode/build/parser.js:97:47,0x2c01bf751b8,~
code-source-info,0x2c01bf762d6,109,4643,4911,C0O4693C22O4688C50O4688C67O4671C106O4682C213O4729C220O4736C225O4748C229O4754C234O4762C240O4791C248O4791C255O4762C261O4754C268O4827C275O4838C282O4838C295O4859C300O4859C317O4659C391O4893C400O4901C406O4905,,
code-creation,JS,10,294589,0x2c01bf76646,262,replacedFunction file:///C:/coding/soodocode/build/utils.js:184:41,0x2c01bf63718,~
code-source-info,0x2c01bf76646,106,6556,7623,C0O6556C6O6602C9O6614C14O6614C20O6632C32O6689C35O6708C40O6697C45O6746C56O6766C62O6802C71O6816C77O6816C86O6839C90O6833C93O6814C97O6872C100O6889C104O6889C108O6887C112O6948C115O6956C121O7009C124O7029C128O7029C132O7027C138O7071C141O7079C153O7109C159O7109C166O7177C170O7177C175O7218C180O7243C187O7274C194O7285C200O7298C203O7278C210O7318C217O7329C224O7342C227O7322C232O7376C236O7393C242O7458C247O7475C251O7534C255O7547C259O7589C261O7589,,
code-creation,JS,10,294938,0x2c01bf76e16,1581, file:///C:/coding/soodocode/build/parser.js:228:47,0xc2df925290,~
code-source-info,0x2c01bf76e16,109,10094,14591,C0O10132C6O10139C11O10153C20O10153C24O10222C31O10231C36O10268C42O10287C51O10287C55O10379C58O10391C60O10394C62O10421C68O10427C74O10431C85O10450C87O10469C92O10476C96O10457C101O10513C108O10519C114O10523C119O10544C126O10550C132O10554C137O10575C144O10581C150O10585C155O10609C162O10615C168O10619C173O10674C180O10680C186O10684C190O10719C193O10749C197O10740C202O10775C206O10811C208O10862C213O10914C220O10920C226O10924C235O11012C242O11018C248O11022C257O11121C264O11127C270O11131C279O11217C285O11217C292O11305C300O11305C306O11311C311O11312C321O11347C322O11397C324O11433C331O11442C334O11439C340O11455C344O11459C348O11447C353O11483C355O11524C360O11560C364O11551C369O11609C374O11616C378O11623C381O11596C386O11652C388O11679C396O11721C403O11730C406O11727C423O11781C431O11781C437O11787C442O11788C452O11803C453O11416C457O11860C459O11862C463O11879C469O11905C471O11933C476O11981C483O11987C489O11991C498O12076C505O12082C511O12086C520O12182C527O12188C533O12192C542O12275C548O12275C557O12354C561O12358C571O12382C572O12409C579O12415C585O12419C590O12454C602O12481C608O12488C612O12454C619O12527C626O12533C632O12537C637O12572C649O12593C655O12600C659O12572C666O12648C671O12662C678O12679C682O12662C692O12648C699O12738C703O12729C708O12762C716O12802C723O12808C740O12860C748O12860C754O12866C759O12867C769O12882C770O12909C777O12915C783O12919C788O12943C794O12943C799O12988C806O12994C812O12998C817O13018C824O13024C830O13036C834O13040C838O13028C843O13059C850O13065C856O13069C863O13092C867O13096C872O13101C880O13101C887O13149C894O13155C900O13159C907O13187C911O13191C916O13196C924O13196C931O13249C938O13255C944O13259C951O13277C955O13281C962O13286C967O13330C974O13340C978O13330C983O13362C990O13412C997O13418C1003O13422C1008O13448C1015O13454C1021O13458C1026O13500C1032O13519C1036O13523C1041O13504C1047O13543C1054O13549C1060O13553C1067O13584C1071O13588C1078O13593C1083O13645C1090O13650C1098O13655C1102O13645C1109O13684C1111O13693C1115O13697C1122O13702C1129O13727C1133O13739C1137O13731C1144O13757C1147O13754C1151O13762C1158O13767C1163O13833C1165O13841C1168O13838C1172O13846C1177O13846C1182O13890C1189O13907C1193O13890C1198O13933C1200O13960C1207O13964C1216O13986C1224O13969C1230O13953C1238O14019C1243O14019C1253O14061C1264O14128C1272O14146C1278O14148C1287O14153C1294O14177C1301O14183C1310O14201C1317O14153C1337O14234C1344O14238C1362O14246C1365O14294C1373O14312C1379O14314C1388O14319C1395O14343C1402O14349C1411O14367C1418O14319C1438O14400C1445O14404C1463O14412C1464O10485C1471O10401C1479O14448C1483O14439C1491O14464C1499O14482C1505O14484C1514O14490C1523O14526C1530O14490C1552O14558C1559O14562C1577O14570C1578O14575C1580O14589,,
code-creation,JS,10,295263,0x2c01bf7783e,44,isLiteral file:///C:/coding/soodocode/build/parser.js:217:26,0xc2df925060,~
code-source-info,0x2c01bf7783e,109,9821,10047,C0O9834C40O9996C41O10008C42O10026C43O10039,,
code-creation,JS,10,295351,0x2c01bf77b36,66, file:///C:/coding/soodocode/build/utils.js:240:21,0x2c01bf5b818,~
code-source-info,0x2c01bf77b36,106,8613,8779,C0O8613C21O8652C25O8666C37O8677C44O8706C54O8706C60O8666C65O8773,,
code-creation,JS,10,295419,0x2c01bf77cde,27, file:///C:/coding/soodocode/build/utils.js:241:67,0x2c01bf77a48,~
code-source-info,0x2c01bf77cde,106,8710,8770,C0O8724C7O8746C12O8760C21O8724C26O8770,,
code-creation,JS,10,295490,0x2c01bf77e06,90,formatText file:///C:/coding/soodocode/build/utils.js:244:20,0xc2df91be98,~
code-source-info,0x2c01bf77e06,106,8802,9099,C0O8816C6O8854C8O8867C9O8877C13O8887C18O8887C25O8913C26O8922C32O8926C39O8957C46O8986C48O8998C51O9002C52O9024C60O9024C66O9039C74O9040C79O9050C80O9087C85O9087C89O9097,,
code-creation,JS,10,295564,0x2c01bf77f66,5,fmtText file:///C:/coding/soodocode/build/lexer-types.js:85:12,0xc2df9218d0,~
code-source-info,0x2c01bf77f66,108,3829,3865,C0O3854C4O3859,,
code-creation,JS,11,295715,0x7ff64c468700,2988, file:///C:/coding/soodocode/build/parser.js:97:47,0x2c01bf751b8,^
code-source-info,0x7ff64c468700,109,4643,4911,,,
code-creation,JS,11,295760,0x7ff64c4692c0,1292,splitTokens file:///C:/coding/soodocode/build/utils.js:34:28,0xc2df91b808,^
code-source-info,0x7ff64c4692c0,106,1034,1236,,,
code-creation,JS,11,295788,0x7ff64c469800,228, file:///C:/coding/soodocode/build/utils.js:241:67,0x2c01bf77a48,^
code-source-info,0x7ff64c469800,106,8710,8770,,,
code-creation,JS,11,296095,0x7ff64c469900,8748, file:///C:/coding/soodocode/build/parser.js:228:47,0xc2df925290,^
code-source-info,0x7ff64c469900,109,10094,14591,,,
code-creation,JS,11,296129,0x7ff64c46bb40,336,isLiteral file:///C:/coding/soodocode/build/parser.js:217:26,0xc2df925060,^
code-source-info,0x7ff64c46bb40,109,9821,10047,,,
code-creation,JS,11,296153,0x7ff64c46bcc0,56,fmtText file:///C:/coding/soodocode/build/lexer-types.js:85:12,0xc2df9218d0,^
code-source-info,0x7ff64c46bcc0,108,3829,3865,,,
code-creation,JS,11,296181,0x7ff64c46bd40,600, file:///C:/coding/soodocode/build/utils.js:240:21,0x2c01bf5b818,^
code-source-info,0x7ff64c46bd40,106,8613,8779,,,
code-creation,JS,11,296213,0x7ff64c46bfc0,604,formatText file:///C:/coding/soodocode/build/utils.js:244:20,0xc2df91be98,^
code-source-info,0x7ff64c46bfc0,106,8802,9099,,,
code-creation,JS,10,296369,0x2c01bf79966,10, file:///C:/coding/soodocode/build/parser.js:103:23,0x2c01bf75208,~
code-source-info,0x2c01bf79966,109,4928,4947,C0O4937C6O4944C9O4947,,
code-creation,JS,10,296545,0x2c01bf79cae,540, file:///C:/coding/soodocode/build/parser.js:176:47,0xc2df925240,~
code-source-info,0x2c01bf79cae,109,8407,9793,C0O8407C9O8434C12O8445C19O8452C24O8465C33O8465C37O8522C44O8522C50O8581C53O8621C70O8600C100O8600C103O8666C114O8666C120O8717C125O8727C131O8727C141O8816C153O8816C162O8787C186O9038C190O9057C195O9046C200O9100C216O9144C228O9226C246O9273C250O9100C257O9342C259O9342C264O9426C270O9458C271O9474C275O9498C281O9498C286O8589C360O9547C361O9553C365O9582C382O9573C412O9573C415O9610C421O9631C425O9619C430O9653C435O9562C503O9694C509O9722C513O9707C514O9744C520O9758C525O9776C533O9744C539O9792,,
code-creation,JS,10,296712,0x2c01bf7a3be,302,getPossibleStatements file:///C:/coding/soodocode/build/parser.js:157:38,0xc2df925010,~
code-source-info,0x2c01bf7a3be,109,7397,8360,C0O7397C12O7433C17O7440C23O7459C27O7462C34O7433C36O7495C37O7502C41O7506C46O7514C52O7525C56O7511C61O7550C67O7561C73O7582C77O7586C81O7575C86O7602C92O7613C97O7629C102O7636C111O7706C121O7706C127O7782C133O7789C138O7809C147O7887C157O7887C163O7910C171O7911C190O7977C208O7997C212O7997C214O8008C224O8008C230O8026C238O8027C248O7809C254O8079C259O8165C269O8165C275O8262C281O8269C286O8285C295O8285C299O8335C301O8358,,
code-creation,JS,10,296810,0x2c01bf7a6ee,47, file:///C:/coding/soodocode/build/parser.js:170:46,0x2c01bf7a280,~
code-source-info,0x2c01bf7a6ee,109,8172,8235,C0O8180C7O8195C17O8215C22O8221C30O8222C37O8232C43O8205C46O8235,,
code-creation,JS,10,296922,0x2c01bf7a96e,72, file:///C:/coding/soodocode/build/parser.js:185:57,0x2c01bf79a90,~
code-source-info,0x2c01bf7a96e,109,8820,8978,C0O8838C5O8827C14O8893C21O8898C26O8916C33O8934C42O8952C47O8960C52O8969C56O8973C60O8952C67O8944C71O8978,,
code-creation,JS,10,297050,0x2c01bf7abee,285, file:///C:/coding/soodocode/build/parser.js:65:42,0xc2df9251f0,~
code-source-info,0x2c01bf7abee,109,3187,4324,C0O3216C7O3223C12O3239C13O3249C17O3253C24O3258C29O3281C30O3294C33O3298C34O3324C40O3329C46O3331C51O3337C55O3337C62O3324C66O3384C67O3396C73O3399C83O3406C90O3442C96O3445C106O3452C111O3488C119O3488C127O3494C137O3501C142O3535C150O3535C158O3541C168O3548C173O3568C179O3573C185O3575C190O3581C194O3581C201O3568C205O3622C211O3660C217O3691C228O3691C238O3660C244O3725C254O3726C260O4306C268O4306C279O3629C284O4322,,
code-creation,JS,10,297172,0x2c01bf7af1e,149,_classThis file:///C:/coding/soodocode/build/statements.js:202:20,0x2c01bf4da88,~
code-source-info,0x2c01bf7af1e,113,10041,10305,C3O10064C27O10064C39O10091C44O10106C48O10124C51O10141C57O10190C68O10190C75O10211C83O10211C89O10141C95O10218C105O10219C110O10139C114O10249C117O10264C123O10287C131O10287C137O10264C141O10262C148O10304,,
code-creation,JS,10,297258,0x2c01bf7b146,94,__temp file:///C:/coding/soodocode/build/utils.js:175:20,0x2c01bf64b40,~
code-source-info,0x2c01bf7b146,106,6210,6386,C0O6210C8O6234C32O6234C44O6262C47O6271C54O6287C56O6283C61O6311C73O6368C84O6317C89O6311C93O6385,,
code-creation,JS,10,297327,0x2c01bf7b2be,56,_classThis file:///C:/coding/soodocode/build/statements.js:79:20,0x2c01bf4e188,~
code-source-info,0x2c01bf7b2be,113,4274,4507,C0O4297C2O4309C6O4348C10O4341C14O4391C19O4396C23O4384C27O4435C32O4440C36O4428C40O4475C46O4475C50O4473C55O4506,,
code-creation,JS,10,297435,0x2c01bf7b87e,81,getTotalRange file:///C:/coding/soodocode/build/utils.js:119:30,0xc2df91b998,~
code-source-info,0x2c01bf7b87e,106,4005,4306,C0O4031C6O4038C11O4052C18O4052C22O4126C32O4126C38O4211C55O4282C65O4293C68O4292C74O4212C80O4304,,
code-creation,JS,10,297500,0x2c01bf7ba1e,44, file:///C:/coding/soodocode/build/utils.js:122:23,0x2c01bf7b720,~
code-source-info,0x2c01bf7ba1e,106,4130,4210,C0O4135C4O4141C9O4141C20O4168C28O4192C33O4192C39O4204C43O4210,,
code-creation,JS,10,297572,0x2c01bf7bb7e,73, file:///C:/coding/soodocode/build/utils.js:122:112,0x2c01bf7b770,~
code-source-info,0x2c01bf7bb7e,106,4219,4279,C0O4231C7O4232C11O4237C17O4244C22O4250C26O4237C39O4256C43O4261C50O4268C56O4274C60O4261C72O4279,,
code-creation,JS,10,297738,0x2c01bf7c106,467,getUniqueNamesFromCommaSeparatedTokenList file:///C:/coding/soodocode/build/utils.js:91:58,0xc2df91b948,~
code-source-info,0x2c01bf7c
code-creation,JS,10,297847,0x2c01bf7c4b6,5, file:///C:/coding/soodocode/build/utils.js:113:27,0x2c01bf7be28,~
code-source-info,0x2c01bf7c4b6,106,3650,3661,C0O3657C4O3661,,
code-creation,JS,10,297888,0x2c01bf7c58e,5, file:///C:/coding/soodocode/build/statements.js:205:112,0x2c01bf7ae48,~
code-source-info,0x2c01bf7c58e,113,10223,10234,C0O10230C4O10234,,
code-creation,JS,10,297946,0x2c01bf7c6c6,64, file:///C:/coding/soodocode/build/parser.js:58:48,0xc2df9251a0,~
code-source-info,0x2c01bf7c6c6,109,2950,3143,C0O2994C5O2983C10O3011C16O3040C21O3053C26O3040C43O3086C53O3092C54O3132C59O3132C63O3141,,
code-creation,JS,10,298018,0x2c01bf7c85e,59,getActiveBuffer file:///C:/coding/soodocode/build/parser.js:108:29,0x2c01bf74888,~
code-source-info,0x2c01bf7c85e,109,5105,5253,C0O5118C5O5133C11O5140C16O5158C20O5178C21O5204C26O5222C34O5222C40O5228C45O5239C53O5240C58O5247,,
code-creation,JS,10,298120,0x2c01bf7ca6e,290,_classThis file:///C:/coding/soodocode/build/statements.js:240:20,0x2c01bf4d358,~
code-source-info,0x2c01bf7ca6e,113,12025,12198,C3O12048C27O12048C39O12116C59O12082C96O12093C133O12099C170O12108C266O12136C269O12153C273O12146C277O12171C282O12181C289O12197,,
code-creation,JS,10,298621,0x2c01bf7d8d6,3313, file:///C:/coding/soodocode/build/parser.js:325:4,0xc2df925448,~
code-source-info,0x2c01bf7d8d
tick,0x7ff6cb699a48,299207,0,0x0,3,0x7ff6cbdbb8d0,0x2c01bf76654,0x2c01bf7a9b1,0x7ff6cc35c821,0x2c01bf79d47,0x2c01bf76654,0x2c01bf74c46,0xc2df9100d8,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,299306,0x2c01bf7ec1e,41, file:///C:/coding/soodocode/build/parser.js:316:56,0xc2df9252e0,~
code-source-info,0x2c01bf7ec1e,109,15068,15213,C0O15085C6O15113C11O15128C16O15113C23O15143C25O15156C26O15174C35O15174C40O15212,,
code-creation,JS,10,299516,0x2c01bf7ee1e,337,_classThis file:///C:/coding/soodocode/build/statements.js:428:20,0x2c01bf4a928,~
code-source-info,0x2c01bf7ee1e,113,22298,22569,C3O22321C27O22321C39O22375C59O22354C131O22369C235O22397C238O22406C243O22424C248O22413C253O22433C262O22448C267O22455C272O22433C278O22478C284O22483C290O22485C295O22491C302O22530C307O22491C317O22545C328O22478C336O22568,,
code-creation,JS,10,299990,0x2c01bf7f666,198,splitTokensWithSplitter file:///C:/coding/soodocode/build/utils.js:44:40,0xc2df91b858,~
code-source-info,0x2c01bf7f666,106,1276,1559,C0O1310C5O1348C22O1342C50O1342C53O1370C60O1375C65O1406C73O1406C81O1422C85O1447C95O1447C102O1510C110O1510C116O1516C121O1522C126O1523C131O1331C195O1543C197O1557,,
code-creation,JS,10,300239,0x2c01bf7fa06,284, file:///C:/coding/soodocode/build/parser.js:77:113,0x2c01bf7aa58,~
code-source-info,0x2c01bf7fa06,109,3730,4296,C0O3733C5O3740C10O3775C17O3782C22O3800C28O3805C34O3807C39O3813C43O3813C50O3861C63O3800C68O3897C69O3906C73O3910C80O3915C85O3948C91O3953C97O3955C102O3961C107O3992C111O3961C119O4004C123O3948C128O4018C130O4027C134O4031C141O4036C146O4072C152O4077C158O4079C163O4085C169O4115C173O4085C182O4127C186O4072C191O4141C193O4150C197O4154C204O4159C209O4192C215O4197C221O4199C226O4205C232O4236C236O4205C245O4248C249O4192C254O4262C262O4275C274O4285C283O4290,,
code-creation,JS,10,300451,0x2c01bf7fcb6,34,ExpressionASTArrayTypeNode file:///C:/coding/soodocode/build/parser-types.js:81:16,0xc2df928b20,~
code-source-info,0x2c01bf7fcb6,110,2818,3044,C0O2872C2O2895C6O2924C8O2941C12O2964C14O2979C18O3013C24O3013C28O3011C33O3043,,
code-creation,JS,10,300688,0x3e4136b6886,62,toData file:///C:/coding/soodocode/build/parser-types.js:87:11,0xc2df928b70,~
code-source-info,0x3e4136b6886,110,3055,3228,C0O3068C6O3102C11O3120C21O3120C27O3168C33O3190C38O3203C43O3215C48O3190C56O3075C61O3222,,
code-creation,JS,10,300808,0x3e4136b6a3e,16, file:///C:/coding/soodocode/build/parser-types.js:88:65,0x2c01bf7ffa8,~
code-source-info,0x3e4136b6a3e,110,3124,3165,C0O3141C10O3141C15O3165,,
code-creation,JS,10,300897,0x3e4136b6b5e,14, file:///C:/coding/soodocode/build/parser-types.js:88:86,0x3e4136b6998,~
code-source-info,0x3e4136b6b5e,110,3145,3164,C0O3150C4O3159C9O3150C13O3164,,
code-creation,JS,10,301000,0x3e4136b6c86,31,resolve file:///C:/coding/soodocode/build/runtime-types.js:30:19,0xc2df932cd0,~
code-source-info,0x3e4136b6c86,112,783,852,C0O812C5O812C24O840C30O846,,
code-creation,JS,10,301178,0x3e4136b7006,194,ArrayVariableType file:///C:/coding/soodocode/build/runtime-types.js:54:16,0xc2df932d70,~
code-source-info,0x3e4136b7006,112,1657,2243,C3O1693C24O1693C36O1710C41O1733C45O1762C50O1772C54O1788C57O1797C62O1815C72O1815C79O1851C88O1851C92O1940C95O1949C100O1967C110O1967C117O2029C126O2029C130O2099C134O2122C139O2140C149O2140C154O2115C158O2175C162O2199C167O2210C180O2210C186O2192C193O2242,,
code-creation,JS,10,301349,0x3e4136b7416,14, file:///C:/coding/soodocode/build/runtime-types.js:58:41,0x3e4136b6e10,~
code-source-info,0x3e4136b7416,112,1820,1836,C0O1830C2O1826C7O1833C10O1830C13O1836,,
code-creation,JS,10,301448,0x3e4136b7556,16, file:///C:/coding/soodocode/build/runtime-types.js:60:41,0x3e4136b6e60,~
code-source-info,0x3e4136b7556,112,1972,2014,C0O1979C10O1979C15O2014,,
code-creation,JS,10,301528,0x3e4136b7676,16, file:///C:/coding/soodocode/build/runtime-types.js:60:53,0x3e4136b74b0,~
code-source-info,0x3e4136b7676,112,1984,2013,C0O1989C4O1997C9O1997C15O2013,,
code-creation,JS,10,301603,0x3e4136b7746,17, file:///C:/coding/soodocode/build/runtime-types.js:62:54,0x3e4136b6eb0,~
code-source-info,0x3e4136b7746,112,2144,2164,C0O2161C2O2150C7O2157C10O2154C13O2161C16O2164,,
code-creation,JS,10,301682,0x3e4136b785e,6, file:///C:/coding/soodocode/build/runtime-types.js:63:51,0x3e4136b6f00,~
code-source-info,0x3e4136b785e,112,2217,2232,C0O2229C2O2229C5O2232,,
code-creation,JS,10,301814,0x3e4136b7a8e,84,_classThis file:///C:/coding/soodocode/build/statements.js:819:20,0x2c01bf45f30,~
code-source-info,0x3e4136b7a8e,113,42237,42406,C3O42260C27O42260C39O42287C44O42305C48O42309C52O42297C56O42327C61O42351C64O42343C68O42368C73O42392C76O42384C83O42405,,
code-creation,JS,10,301946,0x3e4136b7efe,20,ProgramASTBranchNode file:///C:/coding/soodocode/build/parser-types.js:213:16,0xc2df928dd8,~
code-source-info,0x3e4136b7efe,110,6534,6695,C0O6582C2O6592C6O6608C8O6631C12O6660C14O6676C19O6694,,
code-creation,JS,10,302096,0x3e4136b819e,38, file:///C:/coding/soodocode/build/parser.js:347:49,0x2c01bf7d0f0,~
code-source-info,0x3e4136b819e,109,16449,16491,C0O16475C2O16464C8O16469C17O16478C24O16484C26O16483C30O16487C34O16475C37O16491,,
code-creation,JS,10,302418,0x3e4136b83ce,422,findLastNotInGroup file:///C:/coding/soodocode/build/utils.js:75:35,0xc2df91b8f8,~
code-source-info,0x3e4136b83ce,106,2262,2834,C0O2303C2O2325C4O2365C9O2365C13O2365C15O2376C20O2376C42O2352C70O2352C88O2344C129O2347C240O2407C247O2412C252O2447C259O2488C266O2493C271O2529C278O2570C285O2575C290O2606C297O2649C304O2654C309O2686C314O2714C315O2733C321O2758C326O2772C333O2777C338O2800C346O2332C420O2820C421O2832,,
code-creation,JS,10,302616,0x3e4136b8786,261,splitTokensOnComma file:///C:/coding/soodocode/build/utils.js:56:35,0xc2df91b8a8,~
code-source-info,0x3e4136b8786,106,1594,2227,C0O1621C5O1652C7O1674C9O1701C26O1692C54O1692C57O1726C64O1731C69O1766C76O1807C83O1812C88O1848C95O1889C102O1894C107O1925C114O1968C121O1973C126O2005C131O2033C132O2052C138O2077C143O2091C150O2096C155O2139C163O2139C170O2181C178O2181C184O2187C189O2188C194O1681C258O2211C260O2225,,
code-creation,JS,10,302745,0x3e4136b89be,14, file:///C:/coding/soodocode/build/parser.js:456:101,0x2c01bf7d2d0,~
code-source-info,0x3e4136b89be,109,22622,22651,C0O22627C8O22627C13O22651,,
code-creation,JS,10,302825,0x3e4136b8ac6,34,ExpressionASTArrayAccessNode file:///C:/coding/soodocode/build/parser-types.js:64:16,0xc2df9289e0,~
code-source-info,0x3e4136b8ac6,110,2264,2445,C0O2303C2O2315C6O2333C8O2346C12O2365C14O2380C18O2414C24O2414C28O2412C33O2444,,
code-creation,JS,10,302995,0x3e4136b8e06,60,_classThis file:///C:/coding/soodocode/build/statements.js:900:20,0x2c01bf450a0,~
code-source-info,0x3e4136b8e06,113,46223,46310,C3O46246C27O46246C39O46273C44O46291C48O46295C52O46283C59O46309,,
code-creation,JS,10,303166,0x3e4136b92f6,118,blockEndStatement file:///C:/coding/soodocode/build/statements.js:92:33,0x2c01bf4e278,~
code-source-info,0x3e4136b92f6,113,4730,5035,C0O4756C7O4765C12O4793C21O4817C36O4793C40O4901C46O4919C51O4926C55O4945C60O4950C68O4950C75O4960C81O4964C85O4926C89O4925C96O4978C102O4987C113O4978C117O5025,,
code-creation,JS,10,303263,0x3e4136b945e,2,checkBlock file:///C:/coding/soodocode/build/statements.js:103:26,0x2c01bf4e368,~
code-source-info,0x3e4136b945e,113,5213,5232,C1O5231,,
code-creation,JS,10,303505,0x3e4136b9716,55,_classThis file:///C:/coding/soodocode/build/statements.js:639:20,0x2c01bf48680,~
code-source-info,0x3e4136b9716,113,32693,32780,C3O32716C27O32716C39O32743C44O32766C47O32758C54O32779,,
code-creation,JS,10,303665,0x3e4136b9c9e,91,_classThis file:///C:/coding/soodocode/build/statements.js:459:20,0x2c01bf4a240,~
code-source-info,0x3e4136b9c9e,113,23969,24104,C3O23992C27O23992C39O24019C42O24037C48O24063C56O24063C62O24037C67O24072C72O24077C78O24073C83O24035C90O24103,,
code-creation,JS,11,303894,0x7ff64c46c240,1776,replacedFunction file:///C:/coding/soodocode/build/utils.js:184:41,0x2c01bf63718,^
code-source-info,0x7ff64c46c240,106,6556,7623,,,
code-creation,JS,11,303942,0x7ff64c46c940,80, file:///C:/coding/soodocode/build/parser.js:103:23,0x2c01bf75208,^
code-source-info,0x7ff64c46c940,109,4928,4947,,,
code-creation,JS,11,303984,0x7ff64c46c9c0,384, file:///C:/coding/soodocode/build/utils.js:122:112,0x2c01bf7b770,^
code-source-info,0x7ff64c46c9c0,106,4219,4279,,,
code-creation,JS,11,304027,0x7ff64c46cb80,332, file:///C:/coding/soodocode/build/utils.js:122:23,0x2c01bf7b720,^
code-source-info,0x7ff64c46cb80,106,4130,4210,,,
code-creation,JS,11,304071,0x7ff64c46cd00,588, file:///C:/coding/soodocode/build/parser.js:185:57,0x2c01bf79a90,^
code-source-info,0x7ff64c46cd00,109,8820,8978,,,
code-creation,JS,11,304116,0x7ff64c46cf80,372, file:///C:/coding/soodocode/build/parser.js:347:49,0x2c01bf7d0f0,^
code-source-info,0x7ff64c46cf80,109,16449,16491,,,
code-creation,JS,11,304160,0x7ff64c46d140,488,getTotalRange file:///C:/coding/soodocode/build/utils.js:119:30,0xc2df91b998,^
code-source-info,0x7ff64c46d140,106,4005,4306,,,
code-creation,JS,11,304200,0x7ff64c46d340,400,_classThis file:///C:/coding/soodocode/build/statements.js:79:20,0x2c01bf4e188,^
code-source-info,0x7ff64c46d340,113,4274,4507,,,
code-creation,JS,11,304340,0x7ff64c46d500,356, file:///C:/coding/soodocode/build/parser.js:316:56,0xc2df9252e0,^
code-source-info,0x7ff64c46d500,109,15068,15213,,,
code-creation,JS,10,304421,0x3e4136ba876,40,ExpressionASTBranchNode file:///C:/coding/soodocode/build/parser-types.js:4:16,0xc2df928620,~
code-source-info,0x3e4136ba876,110,187,427,C0O241C2O260C6O285C8O299C12O319C14O330C18O347C20O362C24O396C30O396C34O394C39O426,,
code-creation,JS,11,304778,0x7ff64c46d680,19632, file:///C:/coding/soodocode/build/parser.js:325:4,0xc2df925448,^
code-source-info,0x7ff64c46d680,109,15369,22701,,,
code-creation,JS,10,305032,0x3e4136bc1e6,35,fail file:///C:/coding/soodocode/build/utils.js:164:21,0xc2df91bad8,~
code-source-info,0x3e4136bc1e6,106,5825,5955,C0O5870C6O5904C10O5904C15O5929C19O5929C29O5876C34O5870,,
code-creation,JS,10,305138,0x3e4136bc2fe,68,getRange file:///C:/coding/soodocode/build/utils.js:127:25,0xc2df91ba38,~
code-source-info,0x3e4136bc2fe,106,4482,4753,C0O4496C4O4516C6O4529C7O4534C11O4538C17O4562C19O4575C20O4580C24O4590C29O4590C36O4614C40O4621C44O4642C45O4664C53O4706C58O4706C62O4714C63O4745C67O4751,,
code-creation,JS,10,305238,0x3e4136bc45e,78,SoodocodeError file:///C:/coding/soodocode/build/utils.js:151:16,0xc2df91bf88,~
code-source-info,0x3e4136bc45e,106,5232,5469,C3O5293C27O5293C39O5317C44O5336C48O5361C53O5379C57O5403C62O5419C66O5441C70O5455C77O5468,,
code-creation,JS,10,305407,0x3e4136bc866,3,message file:///C:/coding/soodocode/build/parser.js:324:14,0xc2df9253c0,~
code-source-info,0x3e4136bc866,109,15326,15365,C0O15332C2O15365,,
code-creation,JS,10,305552,0x3e4136bc9a6,272,findRange file:///C:/coding/soodocode/build/utils.js:139:26,0xc2df91ba88,~
code-source-info,0x3e4136bc9a6,106,4779,5172,C0O4810C17O4803C45O4803C48O4826C64O4879C69O4889C73O4901C78O4889C84O4932C94O4947C98O4957C103O4957C110O4973C115O4984C119O4973C125O5002C129O5009C139O5037C143O5047C148O5047C155O5067C161O5074C166O5081C171O5092C175O5096C180O5081C186O5116C190O5123C200O4792C270O5153C271O5170,,
code-creation,JS,10,305682,0x3e4136bcbee,44,isRange file:///C:/coding/soodocode/build/utils.js:124:24,0xc2df91b9e8,~
code-source-info,0x3e4136bcbee,106,4330,4457,C0O4344C4O4357C9O4357C16O4381C23O4388C29O4408C38O4439C43O4455,,
code-creation,JS,10,305857,0x3e4136bd246,55,_classThis file:///C:/coding/soodocode/build/statements.js:874:20,0x2c01bf45810,~
code-source-info,0x3e4136bd246,113,44914,45001,C3O44937C27O44937C39O44964C44O44987C47O44979C54O45000,,
code-creation,JS,10,306267,0x3e4136bd8fe,38,__endStatement file:///C:/coding/soodocode/build/statements.js:149:114,0x2c01bf659e8,~
code-source-info,0x3e4136bd8fe,113,7196,7196,C0O7196C5O7196C29O7196C37O7196,,
code-creation,JS,10,306622,0x3e4136bdf06,60,Runtime file:///C:/coding/soodocode/build/runtime.js:95:24,0xc2df92e1a8,~
code-source-info,0x3e4136bdf06,111,5665,5978,C0O5701C7O5740C10O5716C15O5769C17O5713C21O5794C23O5807C27O5834C29O5846C33O5868C34O5883C38O5905C39O5920C43O5956C49O5952C54O5950C59O5977,,
code-creation,JS,10,306756,0x3e4136be096,84,__runInitializers file:///C:/coding/soodocode/build/runtime.js:1:70,0xc2df92dbd8,~
code-source-info,0x3e4136be096,111,69,337,C0O69C2O131C9O138C13O160C15O180C19O165C24O203C30O234C34O238C39O238C49O273C53O277C58O277C65O189C70O147C74O302C83O335,,
code-creation,JS,10,306859,0x3e4136be3c6,12,Files file:///C:/coding/soodocode/build/runtime.js:68:16,0xc2df92dca8,~
code-source-info,0x3e4136be3c6,111,4908,4976,C0O4921C1O4932C5O4946C6O4963C11O4975,,
code-creation,JS,10,306966,0x3e4136be646,113,get node:internal/util:635:17,0x3fcdef88970,~
code-source-info,0x3e4136be646,16,18163,18397,C0O18175C8O18211C19O18233C22O18211C27O18263C33O18292C37O18305C38O18322C57O18338C60O18330C69O18326C77O18350C89O18360C94O18364C96O18363C102O18356C108O18377C112O18390,,
code-creation,Eval,10,307177,0x3e4136beaa6,5, node:perf_hooks:1:1,0x3e4136be960,~
script-source,115,node:perf_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nconst { PerformanceEntry } = require('internal/perf/performance_entry');\x0d\nconst { PerformanceResourceTiming } = require('internal/perf/resource_timing');\x0d\nconst {\x0d\n  PerformanceObserver\x2C\x0d\n  PerformanceObserverEntryList\x2C\x0d\n} = require('internal/perf/observe');\x0d\nconst {\x0d\n  PerformanceMark\x2C\x0d\n  PerformanceMeasure\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  Performance\x2C\x0d\n  performance\x2C\x0d\n} = require('internal/perf/performance');\x0d\n\x0d\nconst {\x0d\n  createHistogram\x2C\x0d\n} = require('internal/histogram');\x0d\n\x0d\nconst monitorEventLoopDelay = require('internal/perf/event_loop_delay');\x0d\n\x0d\nmodule.exports = {\x0d\n  Performance\x2C\x0d\n  PerformanceEntry\x2C\x0d\n  PerformanceMark\x2C\x0d\n  PerformanceMeasure\x2C\x0d\n  PerformanceObserver\x2C\x0d\n  PerformanceObserverEntryList\x2C\x0d\n  PerformanceResourceTiming\x2C\x0d\n  monitorEventLoopDelay\x2C\x0d\n  createHistogram\x2C\x0d\n  performance\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperty(module.exports\x2C 'constants'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: false\x2C\x0d\n  enumerable: true\x2C\x0d\n  value: constants\x2C\x0d\n});\x0d\n
code-source-info,0x3e4136beaa6,115,0,1115,C0O0C4O1115,,
code-creation,JS,10,307436,0x3e4136becd6,216, node:perf_hooks:1:1,0x3e4136bea20,~
code-source-info,0x3e4136becd6,115,0,1115,C0O28C5O98C8O98C13O82C18O162C21O162C26O141C31O245C34O245C39O215C44O358C47O358C52O299C57O323C62O449C65O449C70O404C75O424C80O532C83O532C88O498C93O514C98O606C101O606C106O584C111O670C114O670C119O716C126O738C132O754C138O775C144O795C150O818C156O842C162O875C168O905C174O931C180O951C186O731C190O999C205O1098C209O971C215O1114,,
code-creation,Eval,10,307856,0x3e4136bf5be,5, node:internal/perf/performance_entry:1:1,0x3e4136bf3c8,~
script-source,116,node:internal/perf/performance_entry,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { validateInternalField } = require('internal/validators');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst kName = Symbol('PerformanceEntry.Name');\x0d\nconst kEntryType = Symbol('PerformanceEntry.EntryType');\x0d\nconst kStartTime = Symbol('PerformanceEntry.StartTime');\x0d\nconst kDuration = Symbol('PerformanceEntry.Duration');\x0d\nconst kDetail = Symbol('NodePerformanceEntry.Detail');\x0d\nconst kSkipThrow = Symbol('kSkipThrow');\x0d\n\x0d\nfunction isPerformanceEntry(obj) {\x0d\n  return obj?.[kName] !== undefined;\x0d\n}\x0d\n\x0d\nclass PerformanceEntry {\x0d\n  constructor(\x0d\n    skipThrowSymbol = undefined\x2C\x0d\n    name = undefined\x2C\x0d\n    type = undefined\x2C\x0d\n    start = undefined\x2C\x0d\n    duration = undefined\x2C\x0d\n  ) {\x0d\n    if (skipThrowSymbol !== kSkipThrow) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n\x0d\n    this[kName] = name;\x0d\n    this[kEntryType] = type;\x0d\n    this[kStartTime] = start;\x0d\n    this[kDuration] = duration;\x0d\n  }\x0d\n\x0d\n  get name() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return this[kName];\x0d\n  }\x0d\n\x0d\n  get entryType() {\x0d\n    validateInternalField(this\x2C kEntryType\x2C 'PerformanceEntry');\x0d\n    return this[kEntryType];\x0d\n  }\x0d\n\x0d\n  get startTime() {\x0d\n    validateInternalField(this\x2C kStartTime\x2C 'PerformanceEntry');\x0d\n    return this[kStartTime];\x0d\n  }\x0d\n\x0d\n  get duration() {\x0d\n    validateInternalField(this\x2C kDuration\x2C 'PerformanceEntry');\x0d\n    return this[kDuration];\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `${this.constructor.name} ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return {\x0d\n      name: this[kName]\x2C\x0d\n      entryType: this[kEntryType]\x2C\x0d\n      startTime: this[kStartTime]\x2C\x0d\n      duration: this[kDuration]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceEntry.prototype\x2C {\x0d\n  name: kEnumerableProperty\x2C\x0d\n  entryType: kEnumerableProperty\x2C\x0d\n  startTime: kEnumerableProperty\x2C\x0d\n  duration: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nfunction createPerformanceEntry(name\x2C type\x2C start\x2C duration) {\x0d\n  return new PerformanceEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Node.js specific extension to PerformanceEntry.\x0d\n */\x0d\nclass PerformanceNodeEntry extends PerformanceEntry {\x0d\n  get detail() {\x0d\n    validateInternalField(this\x2C kDetail\x2C 'NodePerformanceEntry');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kName\x2C 'PerformanceEntry');\x0d\n    return {\x0d\n      name: this[kName]\x2C\x0d\n      entryType: this[kEntryType]\x2C\x0d\n      startTime: this[kStartTime]\x2C\x0d\n      duration: this[kDuration]\x2C\x0d\n      detail: this[kDetail]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createPerformanceNodeEntry(name\x2C type\x2C start\x2C duration\x2C detail) {\x0d\n  const entry = new PerformanceNodeEntry(kSkipThrow\x2C name\x2C type\x2C start\x2C duration);\x0d\n\x0d\n  entry[kDetail] = detail;\x0d\n\x0d\n  return entry;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  createPerformanceEntry\x2C\x0d\n  PerformanceEntry\x2C\x0d\n  isPerformanceEntry\x2C\x0d\n  PerformanceNodeEntry\x2C\x0d\n  createPerformanceNodeEntry\x2C\x0d\n  kSkipThrow\x2C\x0d\n};\x0d\n
code-source-info,0x3e4136bf5be,116,0,3412,C0O0C4O3412,,
code-creation,JS,10,308249,0x13a35f9abc6,370, node:internal/perf/performance_entry:1:1,0x3e4136bf538,~
code-source-info,0x13a35f9abc6,116,0,3412,C0O0C53O28C58O55C63O145C66O145C71O102C76O109C82O247C85O247C90O208C95O221C100O308C103O308C108O282C114O363C117O363C122O351C128O397C131O397C135O397C137O450C140O450C144O450C146O508C149O508C153O508C155O565C158O565C162O565C164O619C167O619C171O619C173O678C176O678C180O678C211O1665C238O782C240O2158C243O2198C255O2220C261O2255C267O2290C273O2324C279O2356C283O2158C291O2624C319O2589C321O3246C328O3268C334O3295C340O3316C346O3339C352O3364C358O3395C364O3261C369O3411,,
code-creation,Eval,10,308872,0x13a35f9c2be,5, node:internal/perf/resource_timing:1:1,0x13a35f9c0b8,~
script-source,117,node:internal/perf/resource_timing,'use strict';\x0d\n// https://developer.mozilla.org/en-US/docs/Web/API/PerformanceResourceTiming\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst { PerformanceEntry\x2C kSkipThrow } = require('internal/perf/performance_entry');\x0d\nconst assert = require('internal/assert');\x0d\nconst { enqueue\x2C bufferResourceTiming } = require('internal/perf/observe');\x0d\nconst { validateInternalField } = require('internal/validators');\x0d\nconst { kEnumerableProperty } = require('internal/util');\x0d\n\x0d\nconst kCacheMode = Symbol('kCacheMode');\x0d\nconst kRequestedUrl = Symbol('kRequestedUrl');\x0d\nconst kTimingInfo = Symbol('kTimingInfo');\x0d\nconst kInitiatorType = Symbol('kInitiatorType');\x0d\n\x0d\nclass PerformanceResourceTiming extends PerformanceEntry {\x0d\n  constructor(skipThrowSymbol = undefined\x2C name = undefined\x2C type = undefined) {\x0d\n    if (skipThrowSymbol !== kSkipThrow) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n\x0d\n    super(skipThrowSymbol\x2C name\x2C type);\x0d\n  }\x0d\n\x0d\n  get name() {\x0d\n    validateInternalField(this\x2C kRequestedUrl\x2C 'PerformanceResourceTiming');\x0d\n    return this[kRequestedUrl];\x0d\n  }\x0d\n\x0d\n  get startTime() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].startTime;\x0d\n  }\x0d\n\x0d\n  get duration() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].endTime - this[kTimingInfo].startTime;\x0d\n  }\x0d\n\x0d\n  get initiatorType() {\x0d\n    validateInternalField(this\x2C kInitiatorType\x2C 'PerformanceResourceTiming');\x0d\n    return this[kInitiatorType];\x0d\n  }\x0d\n\x0d\n  get workerStart() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].finalServiceWorkerStartTime;\x0d\n  }\x0d\n\x0d\n  get redirectStart() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].redirectStartTime;\x0d\n  }\x0d\n\x0d\n  get redirectEnd() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].redirectEndTime;\x0d\n  }\x0d\n\x0d\n  get fetchStart() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].postRedirectStartTime;\x0d\n  }\x0d\n\x0d\n  get domainLookupStart() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].finalConnectionTimingInfo?.domainLookupStartTime;\x0d\n  }\x0d\n\x0d\n  get domainLookupEnd() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].finalConnectionTimingInfo?.domainLookupEndTime;\x0d\n  }\x0d\n\x0d\n  get connectStart() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].finalConnectionTimingInfo?.connectionStartTime;\x0d\n  }\x0d\n\x0d\n  get connectEnd() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].finalConnectionTimingInfo?.connectionEndTime;\x0d\n  }\x0d\n\x0d\n  get secureConnectionStart() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo]\x0d\n      .finalConnectionTimingInfo?.secureConnectionStartTime;\x0d\n  }\x0d\n\x0d\n  get nextHopProtocol() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo]\x0d\n      .finalConnectionTimingInfo?.ALPNNegotiatedProtocol;\x0d\n  }\x0d\n\x0d\n  get requestStart() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].finalNetworkRequestStartTime;\x0d\n  }\x0d\n\x0d\n  get responseStart() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].finalNetworkResponseStartTime;\x0d\n  }\x0d\n\x0d\n  get responseEnd() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].endTime;\x0d\n  }\x0d\n\x0d\n  get encodedBodySize() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].encodedBodySize;\x0d\n  }\x0d\n\x0d\n  get decodedBodySize() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    return this[kTimingInfo].decodedBodySize;\x0d\n  }\x0d\n\x0d\n  get transferSize() {\x0d\n    validateInternalField(this\x2C kTimingInfo\x2C 'PerformanceResourceTiming');\x0d\n    if (this[kCacheMode] === 'local') return 0;\x0d\n    if (this[kCacheMode] === 'validated') return 300;\x0d\n\x0d\n    return this[kTimingInfo].encodedBodySize + 300;\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kInitiatorType\x2C 'PerformanceResourceTiming');\x0d\n    return {\x0d\n      name: this.name\x2C\x0d\n      entryType: this.entryType\x2C\x0d\n      startTime: this.startTime\x2C\x0d\n      duration: this.duration\x2C\x0d\n      initiatorType: this[kInitiatorType]\x2C\x0d\n      nextHopProtocol: this.nextHopProtocol\x2C\x0d\n      workerStart: this.workerStart\x2C\x0d\n      redirectStart: this.redirectStart\x2C\x0d\n      redirectEnd: this.redirectEnd\x2C\x0d\n      fetchStart: this.fetchStart\x2C\x0d\n      domainLookupStart: this.domainLookupStart\x2C\x0d\n      domainLookupEnd: this.domainLookupEnd\x2C\x0d\n      connectStart: this.connectStart\x2C\x0d\n      connectEnd: this.connectEnd\x2C\x0d\n      secureConnectionStart: this.secureConnectionStart\x2C\x0d\n      requestStart: this.requestStart\x2C\x0d\n      responseStart: this.responseStart\x2C\x0d\n      responseEnd: this.responseEnd\x2C\x0d\n      transferSize: this.transferSize\x2C\x0d\n      encodedBodySize: this.encodedBodySize\x2C\x0d\n      decodedBodySize: this.decodedBodySize\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(PerformanceResourceTiming.prototype\x2C {\x0d\n  initiatorType: kEnumerableProperty\x2C\x0d\n  nextHopProtocol: kEnumerableProperty\x2C\x0d\n  workerStart: kEnumerableProperty\x2C\x0d\n  redirectStart: kEnumerableProperty\x2C\x0d\n  redirectEnd: kEnumerableProperty\x2C\x0d\n  fetchStart: kEnumerableProperty\x2C\x0d\n  domainLookupStart: kEnumerableProperty\x2C\x0d\n  domainLookupEnd: kEnumerableProperty\x2C\x0d\n  connectStart: kEnumerableProperty\x2C\x0d\n  connectEnd: kEnumerableProperty\x2C\x0d\n  secureConnectionStart: kEnumerableProperty\x2C\x0d\n  requestStart: kEnumerableProperty\x2C\x0d\n  responseStart: kEnumerableProperty\x2C\x0d\n  responseEnd: kEnumerableProperty\x2C\x0d\n  transferSize: kEnumerableProperty\x2C\x0d\n  encodedBodySize: kEnumerableProperty\x2C\x0d\n  decodedBodySize: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceResourceTiming'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction createPerformanceResourceTiming(requestedUrl\x2C initiatorType\x2C timingInfo\x2C cacheMode = '') {\x0d\n  const resourceTiming = new PerformanceResourceTiming(kSkipThrow\x2C requestedUrl\x2C 'resource');\x0d\n\x0d\n  resourceTiming[kInitiatorType] = initiatorType;\x0d\n  resourceTiming[kRequestedUrl] = requestedUrl;\x0d\n  // https://fetch.spec.whatwg.org/#fetch-timing-info\x0d\n  // This class is using timingInfo assuming it's already validated.\x0d\n  // The spec doesn't say to validate it in the class construction.\x0d\n  resourceTiming[kTimingInfo] = timingInfo;\x0d\n  resourceTiming[kCacheMode] = cacheMode;\x0d\n\x0d\n  return resourceTiming;\x0d\n}\x0d\n\x0d\n// https://w3c.github.io/resource-timing/#dfn-mark-resource-timing\x0d\nfunction markResourceTiming(\x0d\n  timingInfo\x2C\x0d\n  requestedUrl\x2C\x0d\n  initiatorType\x2C\x0d\n  global\x2C\x0d\n  cacheMode\x2C\x0d\n) {\x0d\n  // https://w3c.github.io/resource-timing/#dfn-setup-the-resource-timing-entry\x0d\n  assert(\x0d\n    cacheMode === '' || cacheMode === 'local'\x2C\x0d\n    'cache must be an empty string or \\'local\\''\x2C\x0d\n  );\x0d\n  const resource = createPerformanceResourceTiming(\x0d\n    requestedUrl\x2C\x0d\n    initiatorType\x2C\x0d\n    timingInfo\x2C\x0d\n    cacheMode\x2C\x0d\n  );\x0d\n\x0d\n  enqueue(resource);\x0d\n  bufferResourceTiming(resource);\x0d\n  return resource;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  PerformanceResourceTiming\x2C\x0d\n  markResourceTiming\x2C\x0d\n};\x0d\n
code-source-info,0x13a35f9c2be,117,0,7668,C0O0C4O7668,,
code-creation,JS,10,309420,0x13a35f9d67e,502, node:internal/perf/resource_timing:1:1,0x13a35f9c238,~
code-source-info,0x13a35f9d67e,117,0,7668,C0O0C49O107C54O134C59O145C64O244C67O244C72O201C77O208C83O314C86O314C91O281C96O299C102O374C105O374C109O374C111O445C114O445C119O411C125O420C131O514C134O514C139O488C145O579C148O579C153O555C158O627C161O627C165O627C167O672C170O672C174O672C176O718C179O718C183O718C185O765C188O765C192O765C194O834C336O794C338O5498C341O5547C353O5578C359O5619C365O5656C371O5695C377O5732C383O5768C389O5811C395O5852C401O5890C407O5926C413O5973C419O6011C425O6050C431O6087C437O6125C443O6166C449O6207C455O6239C461O6264C463O6284C472O5498C477O7591C484O7613C490O7643C496O7606C501O7667,,
code-creation,Eval,10,310443,0x13a35f9f64e,5, node:internal/perf/observe:1:1,0x13a35f9efe0,~
script-source,118,node:internal/perf/observe,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayFrom\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  Error\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectFreeze\x2C\x0d\n  ObjectKeys\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_GC\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP2\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_HTTP\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_NET\x2C\x0d\n    NODE_PERFORMANCE_ENTRY_TYPE_DNS\x2C\x0d\n  }\x2C\x0d\n  installGarbageCollectionTracking\x2C\x0d\n  observerCounts\x2C\x0d\n  removeGarbageCollectionTracking\x2C\x0d\n  setupObservers\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nconst {\x0d\n  isPerformanceEntry\x2C\x0d\n  createPerformanceNodeEntry\x2C\x0d\n} = require('internal/perf/performance_entry');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateInternalField\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  deprecate\x2C\x0d\n  lazyDOMException\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  setImmediate\x2C\x0d\n} = require('timers');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kDispatch = Symbol('kDispatch');\x0d\nconst kMaybeBuffer = Symbol('kMaybeBuffer');\x0d\nconst kDeprecatedFields = Symbol('kDeprecatedFields');\x0d\n\x0d\nconst kDeprecationMessage =\x0d\n  'Custom PerformanceEntry accessors are deprecated. ' +\x0d\n  'Please use the detail property.';\x0d\n\x0d\nconst kTypeSingle = 0;\x0d\nconst kTypeMultiple = 1;\x0d\n\x0d\nlet gcTrackingInstalled = false;\x0d\n\x0d\nconst kSupportedEntryTypes = ObjectFreeze([\x0d\n  'dns'\x2C\x0d\n  'function'\x2C\x0d\n  'gc'\x2C\x0d\n  'http'\x2C\x0d\n  'http2'\x2C\x0d\n  'mark'\x2C\x0d\n  'measure'\x2C\x0d\n  'net'\x2C\x0d\n  'resource'\x2C\x0d\n]);\x0d\n\x0d\n// Performance timeline entry Buffers\x0d\nlet markEntryBuffer = [];\x0d\nlet measureEntryBuffer = [];\x0d\nlet resourceTimingBuffer = [];\x0d\nlet resourceTimingSecondaryBuffer = [];\x0d\nconst kPerformanceEntryBufferWarnSize = 1e6;\x0d\n// https://www.w3.org/TR/timing-entrytypes-registry/#registry\x0d\n// Default buffer limit for resource timing entries.\x0d\nlet resourceTimingBufferSizeLimit = 250;\x0d\nlet dispatchBufferFull;\x0d\nlet resourceTimingBufferFullPending = false;\x0d\n\x0d\nconst kClearPerformanceEntryBuffers = ObjectFreeze({\x0d\n  'mark': 'performance.clearMarks'\x2C\x0d\n  'measure': 'performance.clearMeasures'\x2C\x0d\n});\x0d\nconst kWarnedEntryTypes = new SafeMap();\x0d\n\x0d\nconst kObservers = new SafeSet();\x0d\nconst kPending = new SafeSet();\x0d\nlet isPending = false;\x0d\n\x0d\nfunction queuePending() {\x0d\n  if (isPending) return;\x0d\n  isPending = true;\x0d\n  setImmediate(() => {\x0d\n    isPending = false;\x0d\n    const pendings = ArrayFrom(kPending.values());\x0d\n    kPending.clear();\x0d\n    for (const pending of pendings)\x0d\n      pending[kDispatch]();\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction getObserverType(type) {\x0d\n  switch (type) {\x0d\n    case 'gc': return NODE_PERFORMANCE_ENTRY_TYPE_GC;\x0d\n    case 'http2': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP2;\x0d\n    case 'http': return NODE_PERFORMANCE_ENTRY_TYPE_HTTP;\x0d\n    case 'net': return NODE_PERFORMANCE_ENTRY_TYPE_NET;\x0d\n    case 'dns': return NODE_PERFORMANCE_ENTRY_TYPE_DNS;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeDecrementObserverCounts(entryTypes) {\x0d\n  for (const type of entryTypes) {\x0d\n    const observerType = getObserverType(type);\x0d\n\x0d\n    if (observerType !== undefined) {\x0d\n      observerCounts[observerType]--;\x0d\n\x0d\n      if (observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC &&\x0d\n          observerCounts[observerType] === 0) {\x0d\n        removeGarbageCollectionTracking();\x0d\n        gcTrackingInstalled = false;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeIncrementObserverCount(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n\x0d\n  if (observerType !== undefined) {\x0d\n    observerCounts[observerType]++;\x0d\n    if (!gcTrackingInstalled &&\x0d\n        observerType === NODE_PERFORMANCE_ENTRY_TYPE_GC) {\x0d\n      installGarbageCollectionTracking();\x0d\n      gcTrackingInstalled = true;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kSkipThrow = Symbol('kSkipThrow');\x0d\nconst performanceObserverSorter = (first\x2C second) => {\x0d\n  return first.startTime - second.startTime;\x0d\n};\x0d\n\x0d\nclass PerformanceObserverEntryList {\x0d\n  constructor(skipThrowSymbol = undefined\x2C entries = []) {\x0d\n    if (skipThrowSymbol !== kSkipThrow) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n\x0d\n    this[kBuffer] = ArrayPrototypeSort(entries\x2C performanceObserverSorter);\x0d\n  }\x0d\n\x0d\n  getEntries() {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    return ArrayPrototypeSlice(this[kBuffer]);\x0d\n  }\x0d\n\x0d\n  getEntriesByType(type) {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    }\x0d\n    type = `${type}`;\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.entryType === type);\x0d\n  }\x0d\n\x0d\n  getEntriesByName(name\x2C type = undefined) {\x0d\n    validateInternalField(this\x2C kBuffer\x2C 'PerformanceObserverEntryList');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n    name = `${name}`;\x0d\n    if (type != null /** not nullish */) {\x0d\n      return ArrayPrototypeFilter(\x0d\n        this[kBuffer]\x2C\x0d\n        (entry) => entry.name === name && entry.entryType === type);\x0d\n    }\x0d\n    return ArrayPrototypeFilter(\x0d\n      this[kBuffer]\x2C\x0d\n      (entry) => entry.name === name);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserverEntryList ${inspect(this[kBuffer]\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceObserverEntryList.prototype\x2C {\x0d\n  getEntries: kEnumerableProperty\x2C\x0d\n  getEntriesByType: kEnumerableProperty\x2C\x0d\n  getEntriesByName: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceObserverEntryList'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nclass PerformanceObserver {\x0d\n  #buffer = [];\x0d\n  #entryTypes = new SafeSet();\x0d\n  #type;\x0d\n  #callback;\x0d\n\x0d\n  constructor(callback) {\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n    this.#callback = callback;\x0d\n  }\x0d\n\x0d\n  observe(options = kEmptyObject) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    const {\x0d\n      entryTypes\x2C\x0d\n      type\x2C\x0d\n      buffered\x2C\x0d\n    } = { ...options };\x0d\n    if (entryTypes === undefined && type === undefined)\x0d\n      throw new ERR_MISSING_ARGS('options.entryTypes'\x2C 'options.type');\x0d\n    if (entryTypes != null && type != null)\x0d\n      throw new ERR_INVALID_ARG_VALUE('options.entryTypes'\x2C\x0d\n                                      entryTypes\x2C\x0d\n                                      'options.entryTypes can not set with ' +\x0d\n                                      'options.type together');\x0d\n\x0d\n    switch (this.#type) {\x0d\n      case undefined:\x0d\n        if (entryTypes !== undefined) this.#type = kTypeMultiple;\x0d\n        if (type !== undefined) this.#type = kTypeSingle;\x0d\n        break;\x0d\n      case kTypeSingle:\x0d\n        if (entryTypes !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to multiple observations'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n      case kTypeMultiple:\x0d\n        if (type !== undefined)\x0d\n          throw lazyDOMException(\x0d\n            'PerformanceObserver can not change to single observation'\x2C\x0d\n            'InvalidModificationError');\x0d\n        break;\x0d\n    }\x0d\n\x0d\n    if (this.#type === kTypeMultiple) {\x0d\n      if (!ArrayIsArray(entryTypes)) {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'options.entryTypes'\x2C\x0d\n          'string[]'\x2C\x0d\n          entryTypes);\x0d\n      }\x0d\n      maybeDecrementObserverCounts(this.#entryTypes);\x0d\n      this.#entryTypes.clear();\x0d\n      for (let n = 0; n < entryTypes.length; n++) {\x0d\n        if (ArrayPrototypeIncludes(kSupportedEntryTypes\x2C entryTypes[n])) {\x0d\n          this.#entryTypes.add(entryTypes[n]);\x0d\n          maybeIncrementObserverCount(entryTypes[n]);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      if (!ArrayPrototypeIncludes(kSupportedEntryTypes\x2C type))\x0d\n        return;\x0d\n      this.#entryTypes.add(type);\x0d\n      maybeIncrementObserverCount(type);\x0d\n      if (buffered) {\x0d\n        const entries = filterBufferMapByNameAndType(undefined\x2C type);\x0d\n        ArrayPrototypePushApply(this.#buffer\x2C entries);\x0d\n        kPending.add(this);\x0d\n        if (kPending.size)\x0d\n          queuePending();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (this.#entryTypes.size)\x0d\n      kObservers.add(this);\x0d\n    else\x0d\n      this.disconnect();\x0d\n  }\x0d\n\x0d\n  disconnect() {\x0d\n    maybeDecrementObserverCounts(this.#entryTypes);\x0d\n    kObservers.delete(this);\x0d\n    kPending.delete(this);\x0d\n    this.#buffer = [];\x0d\n    this.#entryTypes.clear();\x0d\n    this.#type = undefined;\x0d\n  }\x0d\n\x0d\n  takeRecords() {\x0d\n    const list = this.#buffer;\x0d\n    this.#buffer = [];\x0d\n    return list;\x0d\n  }\x0d\n\x0d\n  static get supportedEntryTypes() {\x0d\n    return kSupportedEntryTypes;\x0d\n  }\x0d\n\x0d\n  [kMaybeBuffer](entry) {\x0d\n    if (!this.#entryTypes.has(entry.entryType))\x0d\n      return;\x0d\n    ArrayPrototypePush(this.#buffer\x2C entry);\x0d\n    kPending.add(this);\x0d\n    if (kPending.size)\x0d\n      queuePending();\x0d\n  }\x0d\n\x0d\n  [kDispatch]() {\x0d\n    const entryList = new PerformanceObserverEntryList(kSkipThrow\x2C this.takeRecords());\x0d\n\x0d\n    this.#callback(entryList\x2C this);\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceObserver ${inspect({\x0d\n      connected: kObservers.has(this)\x2C\x0d\n      pending: kPending.has(this)\x2C\x0d\n      entryTypes: ArrayFrom(this.#entryTypes)\x2C\x0d\n      buffer: this.#buffer\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceObserver.prototype\x2C {\x0d\n  observe: kEnumerableProperty\x2C\x0d\n  disconnect: kEnumerableProperty\x2C\x0d\n  takeRecords: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceObserver'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n/**\x0d\n * https://www.w3.org/TR/performance-timeline/#dfn-queue-a-performanceentry\x0d\n *\x0d\n * Add the performance entry to the interested performance observer's queue.\x0d\n */\x0d\nfunction enqueue(entry) {\x0d\n  if (!isPerformanceEntry(entry))\x0d\n    throw new ERR_INVALID_ARG_TYPE('entry'\x2C 'PerformanceEntry'\x2C entry);\x0d\n\x0d\n  for (const obs of kObservers) {\x0d\n    obs[kMaybeBuffer](entry);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add the user timing entry to the global buffer.\x0d\n */\x0d\nfunction bufferUserTiming(entry) {\x0d\n  const entryType = entry.entryType;\x0d\n  let buffer;\x0d\n  if (entryType === 'mark') {\x0d\n    buffer = markEntryBuffer;\x0d\n  } else if (entryType === 'measure') {\x0d\n    buffer = measureEntryBuffer;\x0d\n  } else {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  ArrayPrototypePush(buffer\x2C entry);\x0d\n  const count = buffer.length;\x0d\n\x0d\n  if (count > kPerformanceEntryBufferWarnSize &&\x0d\n    !kWarnedEntryTypes.has(entryType)) {\x0d\n    kWarnedEntryTypes.set(entryType\x2C true);\x0d\n    // No error code for this since it is a Warning\x0d\n    // eslint-disable-next-line no-restricted-syntax\x0d\n    const w = new Error('Possible perf_hooks memory leak detected. ' +\x0d\n                        `${count} ${entryType} entries added to the global ` +\x0d\n                        'performance entry buffer. Use ' +\x0d\n                        `${kClearPerformanceEntryBuffers[entryType]} to ` +\x0d\n                        'clear the buffer.');\x0d\n    w.name = 'MaxPerformanceEntryBufferExceededWarning';\x0d\n    w.entryType = entryType;\x0d\n    w.count = count;\x0d\n    process.emitWarning(w);\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Add the resource timing entry to the global buffer if the buffer size is not\x0d\n * exceeding the buffer limit\x2C or dispatch a buffer full event on the global\x0d\n * performance object.\x0d\n *\x0d\n * See also https://www.w3.org/TR/resource-timing-2/#dfn-add-a-performanceresourcetiming-entry\x0d\n */\x0d\nfunction bufferResourceTiming(entry) {\x0d\n  if (resourceTimingBuffer.length < resourceTimingBufferSizeLimit && !resourceTimingBufferFullPending) {\x0d\n    ArrayPrototypePush(resourceTimingBuffer\x2C entry);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!resourceTimingBufferFullPending) {\x0d\n    resourceTimingBufferFullPending = true;\x0d\n    setImmediate(() => {\x0d\n      while (resourceTimingSecondaryBuffer.length > 0) {\x0d\n        const excessNumberBefore = resourceTimingSecondaryBuffer.length;\x0d\n        dispatchBufferFull('resourcetimingbufferfull');\x0d\n\x0d\n        // Calculate the number of items to be pushed to the global buffer.\x0d\n        const numbersToPreserve = MathMax(\x0d\n          MathMin(resourceTimingBufferSizeLimit - resourceTimingBuffer.length\x2C resourceTimingSecondaryBuffer.length)\x2C\x0d\n          0\x2C\x0d\n        );\x0d\n        const excessNumberAfter = resourceTimingSecondaryBuffer.length - numbersToPreserve;\x0d\n        for (let idx = 0; idx < numbersToPreserve; idx++) {\x0d\n          ArrayPrototypePush(resourceTimingBuffer\x2C resourceTimingSecondaryBuffer[idx]);\x0d\n        }\x0d\n\x0d\n        if (excessNumberBefore <= excessNumberAfter) {\x0d\n          resourceTimingSecondaryBuffer = [];\x0d\n        }\x0d\n      }\x0d\n      resourceTimingBufferFullPending = false;\x0d\n    });\x0d\n  }\x0d\n\x0d\n  ArrayPrototypePush(resourceTimingSecondaryBuffer\x2C entry);\x0d\n}\x0d\n\x0d\n// https://w3c.github.io/resource-timing/#dom-performance-setresourcetimingbuffersize\x0d\nfunction setResourceTimingBufferSize(maxSize) {\x0d\n  // If the maxSize parameter is less than resource timing buffer current\x0d\n  // size\x2C no PerformanceResourceTiming objects are to be removed from the\x0d\n  // performance entry buffer.\x0d\n  resourceTimingBufferSizeLimit = maxSize;\x0d\n}\x0d\n\x0d\nfunction setDispatchBufferFull(fn) {\x0d\n  dispatchBufferFull = fn;\x0d\n}\x0d\n\x0d\nfunction clearEntriesFromBuffer(type\x2C name) {\x0d\n  if (type !== 'mark' && type !== 'measure' && type !== 'resource') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (type === 'mark') {\x0d\n    markEntryBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(markEntryBuffer\x2C (entry) => entry.name !== name);\x0d\n  } else if (type === 'measure') {\x0d\n    measureEntryBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(measureEntryBuffer\x2C (entry) => entry.name !== name);\x0d\n  } else {\x0d\n    resourceTimingBuffer = name === undefined ?\x0d\n      [] : ArrayPrototypeFilter(resourceTimingBuffer\x2C (entry) => entry.name !== name);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction filterBufferMapByNameAndType(name\x2C type) {\x0d\n  let bufferList;\x0d\n  if (type === 'mark') {\x0d\n    bufferList = markEntryBuffer;\x0d\n  } else if (type === 'measure') {\x0d\n    bufferList = measureEntryBuffer;\x0d\n  } else if (type === 'resource') {\x0d\n    bufferList = resourceTimingBuffer;\x0d\n  } else if (type !== undefined) {\x0d\n    // Unrecognized type;\x0d\n    return [];\x0d\n  } else {\x0d\n    bufferList = [];\x0d\n    ArrayPrototypePushApply(bufferList\x2C markEntryBuffer);\x0d\n    ArrayPrototypePushApply(bufferList\x2C measureEntryBuffer);\x0d\n    ArrayPrototypePushApply(bufferList\x2C resourceTimingBuffer);\x0d\n  }\x0d\n  if (name !== undefined) {\x0d\n    bufferList = ArrayPrototypeFilter(bufferList\x2C (buffer) => buffer.name === name);\x0d\n  } else if (type !== undefined) {\x0d\n    bufferList = ArrayPrototypeSlice(bufferList);\x0d\n  }\x0d\n\x0d\n  return ArrayPrototypeSort(bufferList\x2C performanceObserverSorter);\x0d\n}\x0d\n\x0d\nfunction observerCallback(name\x2C type\x2C startTime\x2C duration\x2C details) {\x0d\n  const entry =\x0d\n    createPerformanceNodeEntry(\x0d\n      name\x2C\x0d\n      type\x2C\x0d\n      startTime\x2C\x0d\n      duration\x2C\x0d\n      details);\x0d\n\x0d\n  if (details !== undefined) {\x0d\n    // GC\x2C HTTP2\x2C and HTTP PerformanceEntry used additional\x0d\n    // properties directly off the entry. Those have been\x0d\n    // moved into the details property. The existing accessors\x0d\n    // are still included but are deprecated.\x0d\n    entry[kDeprecatedFields] = new SafeMap();\x0d\n\x0d\n    const detailKeys = ObjectKeys(details);\x0d\n    const props = {};\x0d\n    for (let n = 0; n < detailKeys.length; n++) {\x0d\n      const key = detailKeys[n];\x0d\n      entry[kDeprecatedFields].set(key\x2C details[key]);\x0d\n      props[key] = {\x0d\n        configurable: true\x2C\x0d\n        enumerable: true\x2C\x0d\n        get: deprecate(() => {\x0d\n          return entry[kDeprecatedFields].get(key);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n        set: deprecate((value) => {\x0d\n          entry[kDeprecatedFields].set(key\x2C value);\x0d\n        }\x2C kDeprecationMessage\x2C 'DEP0152')\x2C\x0d\n      };\x0d\n    }\x0d\n    ObjectDefineProperties(entry\x2C props);\x0d\n  }\x0d\n\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nsetupObservers(observerCallback);\x0d\n\x0d\nfunction hasObserver(type) {\x0d\n  const observerType = getObserverType(type);\x0d\n  return observerCounts[observerType] > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction startPerf(target\x2C key\x2C context = {}) {\x0d\n  target[key] = {\x0d\n    ...context\x2C\x0d\n    startTime: now()\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction stopPerf(target\x2C key\x2C context = {}) {\x0d\n  const ctx = target[key];\x0d\n  if (!ctx) {\x0d\n    return;\x0d\n  }\x0d\n  const startTime = ctx.startTime;\x0d\n  const entry = createPerformanceNodeEntry(\x0d\n    ctx.name\x2C\x0d\n    ctx.type\x2C\x0d\n    startTime\x2C\x0d\n    now() - startTime\x2C\x0d\n    { ...ctx.detail\x2C ...context.detail }\x2C\x0d\n  );\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  PerformanceObserver\x2C\x0d\n  PerformanceObserverEntryList\x2C\x0d\n  enqueue\x2C\x0d\n  hasObserver\x2C\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n\x0d\n  bufferUserTiming\x2C\x0d\n  bufferResourceTiming\x2C\x0d\n  setResourceTimingBufferSize\x2C\x0d\n  setDispatchBufferFull\x2C\x0d\n};\x0d\n
code-source-info,0x13a35f9f64e,118,0,17335,C0O0C4O17335,,
code-creation,JS,10,311643,0x13a35fa0d5e,1209, node:internal/perf/observe:1:1,0x13a35f9f5c8,~
code-source-info,0x13a35fa0d5e
code-creation,JS,10,311866,0x13a35fa1496,50,<instance_members_initializer> node:internal/perf/observe:243:1,0x13a35f9ffb8,~
code-source-info,0x13a35fa1496,118,6178,9904,C3O6219C13O6240C20O6240C34O6258C43O6268C49O9904,,
code-creation,JS,13,312201,0x7ff64c472340,9676,symbolize file:///C:/coding/soodocode/build/lexer.js:173:26,0xc2df91ea50,*
code-source-info,0x7ff64cxc2df91ec90S0xc2df91ec40S0xc2df91ece0S0xc2df91edd0S0xc2df921650
code-creation,Eval,10,313086,0x13a35fa6cc6,5, node:internal/perf/usertiming:1:1,0x13a35fa6a00,~
script-source,119,node:internal/perf/usertiming,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SafeArrayIterator\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { PerformanceEntry\x2C kSkipThrow } = require('internal/perf/performance_entry');\x0d\nconst { now } = require('internal/perf/utils');\x0d\nconst { enqueue\x2C bufferUserTiming } = require('internal/perf/observe');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\n\x0d\nconst {\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  validateInternalField\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_PERFORMANCE_INVALID_TIMESTAMP\x2C\x0d\n    ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { structuredClone } = internalBinding('messaging');\x0d\nconst {\x0d\n  lazyDOMException\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst kDetail = Symbol('kDetail');\x0d\n\x0d\nconst markTimings = new SafeMap();\x0d\n\x0d\nconst nodeTimingReadOnlyAttributes = new SafeSet(new SafeArrayIterator([\x0d\n  'nodeStart'\x2C\x0d\n  'v8Start'\x2C\x0d\n  'environment'\x2C\x0d\n  'loopStart'\x2C\x0d\n  'loopExit'\x2C\x0d\n  'bootstrapComplete'\x2C\x0d\n]));\x0d\n\x0d\nfunction getMark(name) {\x0d\n  if (name === undefined) return;\x0d\n  if (typeof name === 'number') {\x0d\n    if (name < 0)\x0d\n      throw new ERR_PERFORMANCE_INVALID_TIMESTAMP(name);\x0d\n    return name;\x0d\n  }\x0d\n  name = `${name}`;\x0d\n  if (nodeTimingReadOnlyAttributes.has(name))\x0d\n    return nodeTiming[name];\x0d\n  const ts = markTimings.get(name);\x0d\n  if (ts === undefined)\x0d\n    throw lazyDOMException(`The "${name}" performance mark has not been set`\x2C 'SyntaxError');\x0d\n  return ts;\x0d\n}\x0d\n\x0d\nclass PerformanceMark extends PerformanceEntry {\x0d\n  constructor(name\x2C options = undefined) {\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n    name = `${name}`;\x0d\n    if (nodeTimingReadOnlyAttributes.has(name))\x0d\n      throw new ERR_INVALID_ARG_VALUE('name'\x2C name);\x0d\n    if (options != null) {\x0d\n      validateObject(options\x2C 'options');\x0d\n    }\x0d\n    const startTime = options?.startTime ?? now();\x0d\n    validateNumber(startTime\x2C 'startTime');\x0d\n    if (startTime < 0)\x0d\n      throw new ERR_PERFORMANCE_INVALID_TIMESTAMP(startTime);\x0d\n    markTimings.set(name\x2C startTime);\x0d\n\x0d\n    let detail = options?.detail;\x0d\n    detail = detail != null ?\x0d\n      structuredClone(detail) :\x0d\n      null;\x0d\n\x0d\n    super(kSkipThrow\x2C name\x2C 'mark'\x2C startTime\x2C 0);\x0d\n    this[kDetail] = detail;\x0d\n  }\x0d\n\x0d\n  get detail() {\x0d\n    validateInternalField(this\x2C kDetail\x2C 'PerformanceMark');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      name: this.name\x2C\x0d\n      entryType: this.entryType\x2C\x0d\n      startTime: this.startTime\x2C\x0d\n      duration: this.duration\x2C\x0d\n      detail: this[kDetail]\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(PerformanceMark.prototype\x2C {\x0d\n  detail: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceMark'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nclass PerformanceMeasure extends PerformanceEntry {\x0d\n  constructor(\x0d\n    skipThrowSymbol = undefined\x2C\x0d\n    name = undefined\x2C\x0d\n    type = undefined\x2C\x0d\n    start = undefined\x2C\x0d\n    duration = undefined\x2C\x0d\n  ) {\x0d\n    if (skipThrowSymbol !== kSkipThrow) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n\x0d\n    super(skipThrowSymbol\x2C name\x2C type\x2C start\x2C duration);\x0d\n  }\x0d\n\x0d\n  get detail() {\x0d\n    validateInternalField(this\x2C kDetail\x2C 'PerformanceMeasure');\x0d\n    return this[kDetail];\x0d\n  }\x0d\n}\x0d\nObjectDefineProperties(PerformanceMeasure.prototype\x2C {\x0d\n  detail: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'PerformanceMeasure'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nfunction createPerformanceMeasure(name\x2C start\x2C duration\x2C detail) {\x0d\n  const measure = new PerformanceMeasure(kSkipThrow\x2C name\x2C 'measure'\x2C start\x2C duration);\x0d\n\x0d\n  measure[kDetail] = detail;\x0d\n\x0d\n  return measure;\x0d\n}\x0d\n\x0d\nfunction mark(name\x2C options) {\x0d\n  const mark = new PerformanceMark(name\x2C options);\x0d\n  enqueue(mark);\x0d\n  bufferUserTiming(mark);\x0d\n  return mark;\x0d\n}\x0d\n\x0d\nfunction calculateStartDuration(startOrMeasureOptions\x2C endMark) {\x0d\n  startOrMeasureOptions ??= 0;\x0d\n  let start;\x0d\n  let end;\x0d\n  let duration;\x0d\n  let optionsValid = false;\x0d\n  if (typeof startOrMeasureOptions === 'object') {\x0d\n    ({ start\x2C end\x2C duration } = startOrMeasureOptions);\x0d\n    optionsValid = start !== undefined || end !== undefined;\x0d\n  }\x0d\n  if (optionsValid) {\x0d\n    if (endMark !== undefined) {\x0d\n      throw new ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS(\x0d\n        'endMark must not be specified');\x0d\n    }\x0d\n\x0d\n    if (start === undefined && end === undefined) {\x0d\n      throw new ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS(\x0d\n        'One of options.start or options.end is required');\x0d\n    }\x0d\n    if (start !== undefined && end !== undefined && duration !== undefined) {\x0d\n      throw new ERR_PERFORMANCE_MEASURE_INVALID_OPTIONS(\x0d\n        'Must not have options.start\x2C options.end\x2C and ' +\x0d\n        'options.duration specified');\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (endMark !== undefined) {\x0d\n    end = getMark(endMark);\x0d\n  } else if (optionsValid && end !== undefined) {\x0d\n    end = getMark(end);\x0d\n  } else if (optionsValid && start !== undefined && duration !== undefined) {\x0d\n    end = getMark(start) + getMark(duration);\x0d\n  } else {\x0d\n    end = now();\x0d\n  }\x0d\n\x0d\n  if (typeof startOrMeasureOptions === 'string') {\x0d\n    start = getMark(startOrMeasureOptions);\x0d\n  } else if (optionsValid && start !== undefined) {\x0d\n    start = getMark(start);\x0d\n  } else if (optionsValid && duration !== undefined && end !== undefined) {\x0d\n    start = end - getMark(duration);\x0d\n  } else {\x0d\n    start = 0;\x0d\n  }\x0d\n\x0d\n  duration = end - start;\x0d\n  return { start\x2C duration };\x0d\n}\x0d\n\x0d\nfunction measure(name\x2C startOrMeasureOptions\x2C endMark) {\x0d\n  validateString(name\x2C 'name');\x0d\n  const {\x0d\n    start\x2C\x0d\n    duration\x2C\x0d\n  } = calculateStartDuration(startOrMeasureOptions\x2C endMark);\x0d\n  let detail = startOrMeasureOptions?.detail;\x0d\n  detail = detail != null ? structuredClone(detail) : null;\x0d\n  const measure = createPerformanceMeasure(name\x2C start\x2C duration\x2C detail);\x0d\n  enqueue(measure);\x0d\n  bufferUserTiming(measure);\x0d\n  return measure;\x0d\n}\x0d\n\x0d\nfunction clearMarkTimings(name) {\x0d\n  if (name !== undefined) {\x0d\n    name = `${name}`;\x0d\n    if (nodeTimingReadOnlyAttributes.has(name))\x0d\n      throw new ERR_INVALID_ARG_VALUE('name'\x2C name);\x0d\n    markTimings.delete(name);\x0d\n    return;\x0d\n  }\x0d\n  markTimings.clear();\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  PerformanceMark\x2C\x0d\n  PerformanceMeasure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n};\x0d\n
code-source-info,0x13a35fa6cc6,119,0,6505,C0O0C4O6505,,
code-creation,JS,10,313480,0x13a35fa774e,522, node:internal/perf/usertiming:1:1,0x13a35fa6c40,~
code-source-info,0x13a35fa774e,119,0,6505,C0O0C101O28C106O55C111O67C116O79C121O101C126O112C131O193C134O193C139O160C144O178C150O254C153O254C158O246C164O325C167O325C172O295C178O304C184O379C187O379C191O379C193O515C196O515C201O430C207O449C213O468C219O487C225O748C228O748C233O568C238O575C244O605C250O633C256O656C262O696C268O807C271O807C276O787C282O896C285O896C290O849C296O870C301O941C304O941C308O941C310O983C312O983C317O983C319O1054C326O1050C334O1038C339O1038C341O1686C374O1656C376O2780C379O2819C391O2843C397O2868C399O2888C408O2780C413O3015C440O2982C442O3468C445O3510C457O3534C463O3559C465O3579C474O3468C479O6396C486O6418C492O6438C498O6461C504O6482C510O6491C516O6411C521O6504,,
code-creation,Eval,10,313783,0x13a35fa86fe,5, node:internal/perf/nodetiming:1:1,0x13a35fa8508,~
script-source,120,node:internal/perf/nodetiming,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { PerformanceEntry } = require('internal/perf/performance_entry');\x0d\n\x0d\nconst {\x0d\n  now\x2C\x0d\n  getMilestoneTimestamp\x2C\x0d\n} = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_MILESTONE_NODE_START\x2C\x0d\n    NODE_PERFORMANCE_MILESTONE_V8_START\x2C\x0d\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\x0d\n    NODE_PERFORMANCE_MILESTONE_LOOP_EXIT\x2C\x0d\n    NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE\x2C\x0d\n    NODE_PERFORMANCE_MILESTONE_ENVIRONMENT\x2C\x0d\n  }\x2C\x0d\n  loopIdleTime\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nclass PerformanceNodeTiming {\x0d\n  constructor() {\x0d\n    ObjectDefineProperties(this\x2C {\x0d\n      name: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        value: 'node'\x2C\x0d\n      }\x2C\x0d\n\x0d\n      entryType: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        value: 'node'\x2C\x0d\n      }\x2C\x0d\n\x0d\n      startTime: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        value: 0\x2C\x0d\n      }\x2C\x0d\n\x0d\n      duration: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        get: now\x2C\x0d\n      }\x2C\x0d\n\x0d\n      nodeStart: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        get() {\x0d\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_NODE_START);\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n\x0d\n      v8Start: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        get() {\x0d\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_V8_START);\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n\x0d\n      environment: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        get() {\x0d\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_ENVIRONMENT);\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n\x0d\n      loopStart: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        get() {\x0d\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_LOOP_START);\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n\x0d\n      loopExit: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        get() {\x0d\n          return getMilestoneTimestamp(NODE_PERFORMANCE_MILESTONE_LOOP_EXIT);\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n\x0d\n      bootstrapComplete: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        get() {\x0d\n          return getMilestoneTimestamp(\x0d\n            NODE_PERFORMANCE_MILESTONE_BOOTSTRAP_COMPLETE);\x0d\n        }\x2C\x0d\n      }\x2C\x0d\n\x0d\n      idleTime: {\x0d\n        __proto__: null\x2C\x0d\n        enumerable: true\x2C\x0d\n        configurable: true\x2C\x0d\n        get: loopIdleTime\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `PerformanceNodeTiming ${inspect(this.toJSON()\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      name: 'node'\x2C\x0d\n      entryType: 'node'\x2C\x0d\n      startTime: this.startTime\x2C\x0d\n      duration: this.duration\x2C\x0d\n      nodeStart: this.nodeStart\x2C\x0d\n      v8Start: this.v8Start\x2C\x0d\n      bootstrapComplete: this.bootstrapComplete\x2C\x0d\n      environment: this.environment\x2C\x0d\n      loopStart: this.loopStart\x2C\x0d\n      loopExit: this.loopExit\x2C\x0d\n      idleTime: this.idleTime\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(\x0d\n  PerformanceNodeTiming.prototype\x2C\x0d\n  PerformanceEntry.prototype);\x0d\n\x0d\nmodule.exports = new PerformanceNodeTiming();\x0d\n
code-source-info,0x13a35fa86fe,120,0,3676,C0O0C4O3676,,
code-creation,JS,10,314088,0x13a35fa8bd6,227, node:internal/perf/nodetiming:1:1,0x13a35fa8678,~
code-source-info,0x13a35fa8bd6,120,0,3676,C0O0C38O28C44O55C49O127C52O127C57O106C62O221C65O221C70O185C76O193C82O303C85O303C90O288C95O352C98O352C103O340C109O694C112O694C117O394C122O401C128O445C134O487C140O531C146O574C152O626C158O675C173O2874C199O3583C204O3614C209O3536C214O3629C216O3646C221O3644C226O3675,,
code-creation,JS,10,314274,0x13a35fa9b66,169,PerformanceNodeTiming node:internal/perf/nodetiming:34:14,0x13a35fa8730,~
code-source-info,0x13a35fa9b66,120,773,2867,C0O783C10O1235C17O1333C29O1368C34O1461C48O1589C53O1682C67O1812C72O1905C86O2036C91O2129C105O2258C110O2351C124O2488C129O2581C143O2732C150O2830C162O783C168O2866,,
code-creation,Eval,10,314680,0x13a35fab46e,5, node:internal/perf/performance:1:1,0x13a35fab1d8,~
script-source,121,node:internal/perf/performance,'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  EventTarget\x2C\x0d\n  Event\x2C\x0d\n  kTrustEvent\x2C\x0d\n  initEventTarget\x2C\x0d\n  defineEventHandler\x2C\x0d\n} = require('internal/event_target');\x0d\n\x0d\nconst { now\x2C getTimeOriginTimestamp } = require('internal/perf/utils');\x0d\n\x0d\nconst { markResourceTiming } = require('internal/perf/resource_timing');\x0d\n\x0d\nconst {\x0d\n  mark\x2C\x0d\n  measure\x2C\x0d\n  clearMarkTimings\x2C\x0d\n} = require('internal/perf/usertiming');\x0d\nconst {\x0d\n  clearEntriesFromBuffer\x2C\x0d\n  filterBufferMapByNameAndType\x2C\x0d\n  setResourceTimingBufferSize\x2C\x0d\n  setDispatchBufferFull\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst { eventLoopUtilization } = require('internal/perf/event_loop_utilization');\x0d\nconst nodeTiming = require('internal/perf/nodetiming');\x0d\nconst timerify = require('internal/perf/timerify');\x0d\nconst { customInspectSymbol: kInspect\x2C kEnumerableProperty\x2C kEmptyObject } = require('internal/util');\x0d\nconst { inspect } = require('util');\x0d\nconst { validateInternalField } = require('internal/validators');\x0d\nconst { convertToInt } = require('internal/webidl');\x0d\n\x0d\nconst kPerformanceBrand = Symbol('performance');\x0d\n\x0d\nclass Performance extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0) return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `Performance ${inspect({\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  clearMarks(name = undefined) {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    if (name !== undefined) {\x0d\n      name = `${name}`;\x0d\n    }\x0d\n    clearMarkTimings(name);\x0d\n    clearEntriesFromBuffer('mark'\x2C name);\x0d\n  }\x0d\n\x0d\n  clearMeasures(name = undefined) {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    if (name !== undefined) {\x0d\n      name = `${name}`;\x0d\n    }\x0d\n    clearEntriesFromBuffer('measure'\x2C name);\x0d\n  }\x0d\n\x0d\n  clearResourceTimings(name = undefined) {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    if (name !== undefined) {\x0d\n      name = `${name}`;\x0d\n    }\x0d\n    clearEntriesFromBuffer('resource'\x2C name);\x0d\n  }\x0d\n\x0d\n  getEntries() {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    return filterBufferMapByNameAndType();\x0d\n  }\x0d\n\x0d\n  getEntriesByName(name) {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n    name = `${name}`;\x0d\n    return filterBufferMapByNameAndType(name\x2C undefined);\x0d\n  }\x0d\n\x0d\n  getEntriesByType(type) {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('type');\x0d\n    }\x0d\n    type = `${type}`;\x0d\n    return filterBufferMapByNameAndType(undefined\x2C type);\x0d\n  }\x0d\n\x0d\n  mark(name\x2C options = kEmptyObject) {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n    return mark(name\x2C options);\x0d\n  }\x0d\n\x0d\n  measure(name\x2C startOrMeasureOptions = kEmptyObject\x2C endMark = undefined) {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('name');\x0d\n    }\x0d\n    return measure(name\x2C startOrMeasureOptions\x2C endMark);\x0d\n  }\x0d\n\x0d\n  now() {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    return now();\x0d\n  }\x0d\n\x0d\n  setResourceTimingBufferSize(maxSize) {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    if (arguments.length === 0) {\x0d\n      throw new ERR_MISSING_ARGS('maxSize');\x0d\n    }\x0d\n    // unsigned long\x0d\n    maxSize = convertToInt('maxSize'\x2C maxSize\x2C 32);\x0d\n    return setResourceTimingBufferSize(maxSize);\x0d\n  }\x0d\n\x0d\n  get timeOrigin() {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    return getTimeOriginTimestamp();\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    validateInternalField(this\x2C kPerformanceBrand\x2C 'Performance');\x0d\n    return {\x0d\n      nodeTiming: this.nodeTiming\x2C\x0d\n      timeOrigin: this.timeOrigin\x2C\x0d\n      eventLoopUtilization: this.eventLoopUtilization()\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Performance.prototype\x2C {\x0d\n  clearMarks: kEnumerableProperty\x2C\x0d\n  clearMeasures: kEnumerableProperty\x2C\x0d\n  clearResourceTimings: kEnumerableProperty\x2C\x0d\n  getEntries: kEnumerableProperty\x2C\x0d\n  getEntriesByName: kEnumerableProperty\x2C\x0d\n  getEntriesByType: kEnumerableProperty\x2C\x0d\n  mark: kEnumerableProperty\x2C\x0d\n  measure: kEnumerableProperty\x2C\x0d\n  now: kEnumerableProperty\x2C\x0d\n  timeOrigin: kEnumerableProperty\x2C\x0d\n  toJSON: kEnumerableProperty\x2C\x0d\n  setResourceTimingBufferSize: kEnumerableProperty\x2C\x0d\n  [SymbolToStringTag]: {\x0d\n    __proto__: null\x2C\x0d\n    writable: false\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    value: 'Performance'\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Node.js specific extensions.\x0d\n  eventLoopUtilization: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    // Node.js specific extensions.\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    value: eventLoopUtilization\x2C\x0d\n  }\x2C\x0d\n  nodeTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    // Node.js specific extensions.\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    value: nodeTiming\x2C\x0d\n  }\x2C\x0d\n  // In the browser\x2C this function is not public.  However\x2C it must be used inside fetch\x0d\n  // which is a Node.js dependency\x2C not a internal module\x0d\n  markResourceTiming: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    // Node.js specific extensions.\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    value: markResourceTiming\x2C\x0d\n  }\x2C\x0d\n  timerify: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    // Node.js specific extensions.\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    value: timerify\x2C\x0d\n  }\x2C\x0d\n});\x0d\ndefineEventHandler(Performance.prototype\x2C 'resourcetimingbufferfull');\x0d\n\x0d\nfunction createPerformance() {\x0d\n  return ReflectConstruct(function Performance() {\x0d\n    initEventTarget(this);\x0d\n    this[kPerformanceBrand] = true;\x0d\n  }\x2C []\x2C Performance);\x0d\n}\x0d\n\x0d\nconst performance = createPerformance();\x0d\n\x0d\nfunction dispatchBufferFull(type) {\x0d\n  const event = new Event(type\x2C {\x0d\n    [kTrustEvent]: true\x2C\x0d\n  });\x0d\n  performance.dispatchEvent(event);\x0d\n}\x0d\nsetDispatchBufferFull(dispatchBufferFull);\x0d\n\x0d\nmodule.exports = {\x0d\n  Performance\x2C\x0d\n  performance\x2C\x0d\n};\x0d\n
code-source-info,0x13a35fab46e,121,0,6561,C0O0C4O6561,,
code-creation,JS,10,315137,0x13a35fac49e,727, node:internal/perf/performance:1:1,0x13a35fab3e8,~
code-source-info,0x13a35fac49e
tick,0x7ff6cb62059c,315266,1,0x7ff6cb82fd80,3,0x7ff6cc23aba0,0x7ff64c443f26,0x7ff64c443ca1,0x3e4136bed29,0x7ff64c443feb,0x7ff64c443ca1,0x3e4136be682,0x7ff6cc3362ce,0xc2df910103,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,Eval,10,315423,0x13a35fad626,5, node:internal/perf/event_loop_utilization:1:1,0x13a35fad490,~
script-source,122,node:internal/perf/event_loop_utilization,'use strict';\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    NODE_PERFORMANCE_MILESTONE_LOOP_START\x2C\x0d\n  }\x2C\x0d\n  loopIdleTime\x2C\x0d\n  milestones\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nfunction eventLoopUtilization(util1\x2C util2) {\x0d\n  // Get the original milestone timestamps that calculated from the beginning\x0d\n  // of the process.\x0d\n  return internalEventLoopUtilization(\x0d\n    milestones[NODE_PERFORMANCE_MILESTONE_LOOP_START] / 1e6\x2C\x0d\n    loopIdleTime()\x2C\x0d\n    util1\x2C\x0d\n    util2\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction internalEventLoopUtilization(loopStart\x2C loopIdleTime\x2C util1\x2C util2) {\x0d\n  if (loopStart <= 0) {\x0d\n    return { idle: 0\x2C active: 0\x2C utilization: 0 };\x0d\n  }\x0d\n\x0d\n  if (util2) {\x0d\n    const idle = util1.idle - util2.idle;\x0d\n    const active = util1.active - util2.active;\x0d\n    return { idle\x2C active\x2C utilization: active / (idle + active) };\x0d\n  }\x0d\n\x0d\n  // Using process.hrtime() to get the time from the beginning of the process\x2C\x0d\n  // and offset it by the loopStart time (which is also calculated from the\x0d\n  // beginning of the process).\x0d\n  const now = process.hrtime();\x0d\n  const active = now[0] * 1e3 + now[1] / 1e6 - loopStart - loopIdleTime;\x0d\n\x0d\n  if (!util1) {\x0d\n    return {\x0d\n      idle: loopIdleTime\x2C\x0d\n      active\x2C\x0d\n      utilization: active / (loopIdleTime + active)\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  const idleDelta = loopIdleTime - util1.idle;\x0d\n  const activeDelta = active - util1.active;\x0d\n  const utilization = activeDelta / (idleDelta + activeDelta);\x0d\n  return {\x0d\n    idle: idleDelta\x2C\x0d\n    active: activeDelta\x2C\x0d\n    utilization\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  internalEventLoopUtilization\x2C\x0d\n  eventLoopUtilization\x2C\x0d\n};\x0d\n
code-source-info,0x13a35fad626,122,0,1587,C0O0C4O1587,,
code-creation,JS,10,315549,0x13a35fad7d6,85, node:internal/perf/event_loop_utilization:1:1,0x13a35fad5a0,~
code-source-info,0x13a35fad7d6,122,0,1587,C0O0C29O128C32O128C37O39C42O46C48O94C54O111C60O1505C67O1527C73O1560C79O1520C84O1586,,
code-creation,Eval,10,315745,0x13a35fadf2e,5, node:internal/perf/timerify:1:1,0x13a35fadd08,~
script-source,123,node:internal/perf/timerify,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  MathCeil\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectConstruct\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { createPerformanceNodeEntry } = require('internal/perf/performance_entry');\x0d\nconst { now } = require('internal/perf/utils');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isHistogram\x2C\x0d\n} = require('internal/histogram');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  enqueue\x2C\x0d\n} = require('internal/perf/observe');\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nfunction processComplete(name\x2C start\x2C args\x2C histogram) {\x0d\n  const duration = now() - start;\x0d\n  if (histogram !== undefined)\x0d\n    histogram.record(MathCeil(duration * 1e6));\x0d\n  const entry =\x0d\n    createPerformanceNodeEntry(\x0d\n      name\x2C\x0d\n      'function'\x2C\x0d\n      start\x2C\x0d\n      duration\x2C\x0d\n      args);\x0d\n\x0d\n  for (let n = 0; n < args.length; n++)\x0d\n    entry[n] = args[n];\x0d\n\x0d\n  enqueue(entry);\x0d\n}\x0d\n\x0d\nfunction timerify(fn\x2C options = kEmptyObject) {\x0d\n  validateFunction(fn\x2C 'fn');\x0d\n\x0d\n  validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    histogram\x2C\x0d\n  } = options;\x0d\n\x0d\n  if (histogram !== undefined &&\x0d\n      (!isHistogram(histogram) || typeof histogram.record !== 'function')) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'options.histogram'\x2C\x0d\n      'RecordableHistogram'\x2C\x0d\n      histogram);\x0d\n  }\x0d\n\x0d\n  function timerified(...args) {\x0d\n    const isConstructorCall = new.target !== undefined;\x0d\n    const start = now();\x0d\n    const result = isConstructorCall ?\x0d\n      ReflectConstruct(fn\x2C args\x2C fn) :\x0d\n      ReflectApply(fn\x2C this\x2C args);\x0d\n    if (!isConstructorCall && typeof result?.finally === 'function') {\x0d\n      return result.finally(\x0d\n        FunctionPrototypeBind(\x0d\n          processComplete\x2C\x0d\n          result\x2C\x0d\n          fn.name\x2C\x0d\n          start\x2C\x0d\n          args\x2C\x0d\n          histogram));\x0d\n    }\x0d\n    processComplete(fn.name\x2C start\x2C args\x2C histogram);\x0d\n    return result;\x0d\n  }\x0d\n\x0d\n  ObjectDefineProperties(timerified\x2C {\x0d\n    length: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: fn.length\x2C\x0d\n    }\x2C\x0d\n    name: {\x0d\n      __proto__: null\x2C\x0d\n      configurable: false\x2C\x0d\n      enumerable: true\x2C\x0d\n      value: `timerified ${fn.name}`\x2C\x0d\n    }\x2C\x0d\n  });\x0d\n\x0d\n  return timerified;\x0d\n}\x0d\n\x0d\nmodule.exports = timerify;\x0d\n
code-source-info,0x13a35fadf2e,123,0,2389,C0O0C4O2389,,
code-creation,JS,10,315918,0x13a35fae136,202, node:internal/perf/timerify:1:1,0x13a35fadea8,~
code-source-info,0x13a35fae136,123,0,2389,C0O0C55O28C61O54C67O81C73O94C79O111C85O189C88O189C93O158C99O250C102O250C107O242C113O338C116O338C121O296C127O317C133O402C136O402C141O384C147O494C150O494C155O454C160O461C166O550C169O550C174O536C180O617C183O617C188O598C194O2361C196O2376C201O2388,,
code-creation,Eval,10,316291,0x13a35faec4e,5, node:internal/histogram:1:1,0x13a35fae978,~
script-source,124,node:internal/histogram,'use strict';\x0d\n\x0d\nconst {\x0d\n  MapPrototypeEntries\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberMAX_SAFE_INTEGER\x2C\x0d\n  ObjectFromEntries\x2C\x0d\n  ReflectConstruct\x2C\x0d\n  SafeMap\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  Histogram: _Histogram\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol: kInspect\x2C\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst { inspect } = require('util');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n  validateNumber\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kMap = Symbol('kMap');\x0d\nconst kRecordable = Symbol('kRecordable');\x0d\n\x0d\nconst {\x0d\n  kClone\x2C\x0d\n  kDeserialize\x2C\x0d\n  makeTransferable\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nfunction isHistogram(object) {\x0d\n  return object?.[kHandle] !== undefined;\x0d\n}\x0d\n\x0d\nclass Histogram {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  [kInspect](depth\x2C options) {\x0d\n    if (depth < 0)\x0d\n      return this;\x0d\n\x0d\n    const opts = {\x0d\n      ...options\x2C\x0d\n      depth: options.depth == null ? null : options.depth - 1\x2C\x0d\n    };\x0d\n\x0d\n    return `Histogram ${inspect({\x0d\n      min: this.min\x2C\x0d\n      max: this.max\x2C\x0d\n      mean: this.mean\x2C\x0d\n      exceeds: this.exceeds\x2C\x0d\n      stddev: this.stddev\x2C\x0d\n      count: this.count\x2C\x0d\n      percentiles: this.percentiles\x2C\x0d\n    }\x2C opts)}`;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {number}\x0d\n   */\x0d\n  get count() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.count();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {bigint}\x0d\n   */\x0d\n  get countBigInt() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.countBigInt();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {number}\x0d\n   */\x0d\n  get min() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.min();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {bigint}\x0d\n   */\x0d\n  get minBigInt() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.minBigInt();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {number}\x0d\n   */\x0d\n  get max() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.max();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {bigint}\x0d\n   */\x0d\n  get maxBigInt() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.maxBigInt();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {number}\x0d\n   */\x0d\n  get mean() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.mean();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {number}\x0d\n   */\x0d\n  get exceeds() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.exceeds();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {bigint}\x0d\n   */\x0d\n  get exceedsBigInt() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.exceedsBigInt();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {number}\x0d\n   */\x0d\n  get stddev() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    return this[kHandle]?.stddev();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} percentile\x0d\n   * @returns {number}\x0d\n   */\x0d\n  percentile(percentile) {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    validateNumber(percentile\x2C 'percentile');\x0d\n    if (NumberIsNaN(percentile) || percentile <= 0 || percentile > 100)\x0d\n      throw new ERR_OUT_OF_RANGE('percentile'\x2C '> 0 && <= 100'\x2C percentile);\x0d\n\x0d\n    return this[kHandle]?.percentile(percentile);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} percentile\x0d\n   * @returns {bigint}\x0d\n   */\x0d\n  percentileBigInt(percentile) {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    validateNumber(percentile\x2C 'percentile');\x0d\n    if (NumberIsNaN(percentile) || percentile <= 0 || percentile > 100)\x0d\n      throw new ERR_OUT_OF_RANGE('percentile'\x2C '> 0 && <= 100'\x2C percentile);\x0d\n\x0d\n    return this[kHandle]?.percentileBigInt(percentile);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {Map<number\x2Cnumber>}\x0d\n   */\x0d\n  get percentiles() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    this[kMap].clear();\x0d\n    this[kHandle]?.percentiles(this[kMap]);\x0d\n    return this[kMap];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @readonly\x0d\n   * @type {Map<number\x2Cbigint>}\x0d\n   */\x0d\n  get percentilesBigInt() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    this[kMap].clear();\x0d\n    this[kHandle]?.percentilesBigInt(this[kMap]);\x0d\n    return this[kMap];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {void}\x0d\n   */\x0d\n  reset() {\x0d\n    if (!isHistogram(this))\x0d\n      throw new ERR_INVALID_THIS('Histogram');\x0d\n    this[kHandle]?.reset();\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/histogram:internalHistogram'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n\x0d\n  toJSON() {\x0d\n    return {\x0d\n      count: this.count\x2C\x0d\n      min: this.min\x2C\x0d\n      max: this.max\x2C\x0d\n      mean: this.mean\x2C\x0d\n      exceeds: this.exceeds\x2C\x0d\n      stddev: this.stddev\x2C\x0d\n      percentiles: ObjectFromEntries(MapPrototypeEntries(this.percentiles))\x2C\x0d\n    };\x0d\n  }\x0d\n}\x0d\n\x0d\nclass RecordableHistogram extends Histogram {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number|bigint} val\x0d\n   * @returns {void}\x0d\n   */\x0d\n  record(val) {\x0d\n    if (this[kRecordable] === undefined)\x0d\n      throw new ERR_INVALID_THIS('RecordableHistogram');\x0d\n    if (typeof val === 'bigint') {\x0d\n      this[kHandle]?.record(val);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    validateInteger(val\x2C 'val'\x2C 1);\x0d\n\x0d\n    this[kHandle]?.record(val);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {void}\x0d\n   */\x0d\n  recordDelta() {\x0d\n    if (this[kRecordable] === undefined)\x0d\n      throw new ERR_INVALID_THIS('RecordableHistogram');\x0d\n    this[kHandle]?.recordDelta();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {RecordableHistogram} other\x0d\n   */\x0d\n  add(other) {\x0d\n    if (this[kRecordable] === undefined)\x0d\n      throw new ERR_INVALID_THIS('RecordableHistogram');\x0d\n    if (other[kRecordable] === undefined)\x0d\n      throw new ERR_INVALID_ARG_TYPE('other'\x2C 'RecordableHistogram'\x2C other);\x0d\n    this[kHandle]?.add(other[kHandle]);\x0d\n  }\x0d\n\x0d\n  [kClone]() {\x0d\n    const handle = this[kHandle];\x0d\n    return {\x0d\n      data: { handle }\x2C\x0d\n      deserializeInfo: 'internal/histogram:internalRecordableHistogram'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ handle }) {\x0d\n    this[kHandle] = handle;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction internalHistogram(handle) {\x0d\n  return makeTransferable(ReflectConstruct(\x0d\n    function() {\x0d\n      this[kHandle] = handle;\x0d\n      this[kMap] = new SafeMap();\x0d\n    }\x2C []\x2C Histogram));\x0d\n}\x0d\ninternalHistogram.prototype[kDeserialize] = () => {};\x0d\n\x0d\nfunction internalRecordableHistogram(handle) {\x0d\n  return makeTransferable(ReflectConstruct(\x0d\n    function() {\x0d\n      this[kHandle] = handle;\x0d\n      this[kMap] = new SafeMap();\x0d\n      this[kRecordable] = true;\x0d\n    }\x2C []\x2C RecordableHistogram));\x0d\n}\x0d\ninternalRecordableHistogram.prototype[kDeserialize] = () => {};\x0d\n\x0d\n/**\x0d\n * @param {{\x0d\n *   lowest? : number\x2C\x0d\n *   highest? : number\x2C\x0d\n *   figures? : number\x0d\n * }} [options]\x0d\n * @returns {RecordableHistogram}\x0d\n */\x0d\nfunction createHistogram(options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n  const {\x0d\n    lowest = 1\x2C\x0d\n    highest = NumberMAX_SAFE_INTEGER\x2C\x0d\n    figures = 3\x2C\x0d\n  } = options;\x0d\n  if (typeof lowest !== 'bigint')\x0d\n    validateInteger(lowest\x2C 'options.lowest'\x2C 1\x2C NumberMAX_SAFE_INTEGER);\x0d\n  if (typeof highest !== 'bigint') {\x0d\n    validateInteger(highest\x2C 'options.highest'\x2C\x0d\n                    2 * lowest\x2C NumberMAX_SAFE_INTEGER);\x0d\n  } else if (highest < 2n * lowest) {\x0d\n    throw new ERR_INVALID_ARG_VALUE.RangeError('options.highest'\x2C highest);\x0d\n  }\x0d\n  validateInteger(figures\x2C 'options.figures'\x2C 1\x2C 5);\x0d\n  return internalRecordableHistogram(new _Histogram(lowest\x2C highest\x2C figures));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  Histogram\x2C\x0d\n  RecordableHistogram\x2C\x0d\n  internalHistogram\x2C\x0d\n  internalRecordableHistogram\x2C\x0d\n  isHistogram\x2C\x0d\n  kDestroy\x2C\x0d\n  kHandle\x2C\x0d\n  kMap\x2C\x0d\n  createHistogram\x2C\x0d\n};\x0d\n
code-source-info,0x13a35faec4e,124,0,8434,C0O0C4O8434,,
code-creation,JS,10,316799,0x13a35fb05ae,611, node:internal/histogram:1:1,0x13a35faebc8,~
code-source-info,0x13a35fb05ae,124,0,8434,C0O0C96O28C102O52C108O68C114O95C120O117C126O138C132O150C137O218C140O218C145O201C151O317C154O317C159O285C164O298C170O366C173O366C178O354C184O548C187O548C192O404C197O411C203O441C209O469C215O496C221O519C227O650C230O650C235O590C241O610C247O629C253O702C256O702C261O739C264O739C268O739C270O772C273O772C277O772C279O809C282O809C286O809C288O897C291O897C296O846C301O857C306O874C321O1114C417O5052C427O5221C455O1024C460O5596C482O6577C491O6756C513O5562C515O7037C520O7047C524O7061C528O7324C531O7352C536O7362C540O7376C544O8248C551O8270C557O8284C563O8308C569O8330C575O8362C581O8378C587O8391C593O8403C599O8412C605O8263C610O8433,,
code-creation,JS,10,317154,0x13a35fb28b6,155,defineEventHandler node:internal/event_target:1116:28,0x3fcdefaf168,~
code-source-info,0x13a35fb28b6,48,30578,32062,C0O30578C24O30602C36O30698C41O30703C46O30857C56O30878C66O30934C77O30857C82O31820C92O31841C102O31897C113O31820C118O31921C125O31951C132O31990C138O32000C148O31921C154O32061,,
code-creation,JS,10,317258,0x13a35fb2b56,24,createPerformance node:internal/perf/performance:223:27,0x13a35fab4a0,~
code-source-info,0x13a35fb2b56,121,6118,6266,C0O6126C15O6250C18O6133C23O6263,,
code-creation,JS,10,317309,0x13a35fb342e,21,Performance node:internal/perf/performance:224:47,0x13a35fb2aa8,~
code-source-info,0x13a35fb342e,121,6170,6244,C0O6180C5O6180C9O6208C11O6213C15O6232C20O6243,,
code-creation,JS,10,317358,0x13a35fb35ae,11,Performance node:internal/perf/performance:52:14,0x13a35fab568,~
code-source-info,0x13a35fb35ae,121,1353,1404,C0O1363C5O1369C10O1363,,
code-creation,JS,10,317398,0x13a35fb367e,11,EventTarget node:internal/event_target:561:14,0x3fcdefae728,~
code-source-info,0x13a35fb367e,48,14440,14477,C0O14450C5O14450C10O14476,,
code-creation,JS,10,317449,0x13a35fb37de,68,initEventTarget node:internal/event_target:548:25,0x3fcdefae6d8,~
code-source-info,0x13a35fb37de,48,13978,14178,C0O13990C2O13995C7O14010C10O14006C15O14004C19O14024C21O14029C26O14057C29O14070C33O14055C37O14094C39O14099C43O14131C47O14143C49O14148C54O14165C57O14161C62O14159C67O14177,,
code-creation,JS,10,317515,0x13a35fb39ee,5,get node:events:281:16,0x3fcdef90d48,~
code-source-info,0x13a35fb39ee,23,8499,8541,C0O8509C4O8536,,
code-creation,JS,10,317594,0x13a35fb3bce,10,setDispatchBufferFull node:internal/perf/observe:483:31,0x13a35f9f900,~
code-source-info,0x13a35fb3bce,118,13730,13767,C0O13740C2O13759C9O13766,,
code-creation,Eval,10,317736,0x13a35fb532e,5, node:internal/perf/event_loop_delay:1:1,0x13a35fb5118,~
script-source,125,node:internal/perf/event_loop_delay,'use strict';\x0d\nconst {\x0d\n  ReflectConstruct\x2C\x0d\n  SafeMap\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  createELDHistogram\x2C\x0d\n} = internalBinding('performance');\x0d\n\x0d\nconst {\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  Histogram\x2C\x0d\n  kHandle\x2C\x0d\n  kMap\x2C\x0d\n} = require('internal/histogram');\x0d\n\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  makeTransferable\x2C\x0d\n} = require('internal/worker/js_transferable');\x0d\n\x0d\nconst kEnabled = Symbol('kEnabled');\x0d\n\x0d\nclass ELDHistogram extends Histogram {\x0d\n  constructor(i) {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  enable() {\x0d\n    if (this[kEnabled] === undefined)\x0d\n      throw new ERR_INVALID_THIS('ELDHistogram');\x0d\n    if (this[kEnabled]) return false;\x0d\n    this[kEnabled] = true;\x0d\n    this[kHandle].start();\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @returns {boolean}\x0d\n   */\x0d\n  disable() {\x0d\n    if (this[kEnabled] === undefined)\x0d\n      throw new ERR_INVALID_THIS('ELDHistogram');\x0d\n    if (!this[kEnabled]) return false;\x0d\n    this[kEnabled] = false;\x0d\n    this[kHandle].stop();\x0d\n    return true;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {{\x0d\n *   resolution : number\x0d\n * }} [options]\x0d\n * @returns {ELDHistogram}\x0d\n */\x0d\nfunction monitorEventLoopDelay(options = kEmptyObject) {\x0d\n  validateObject(options\x2C 'options');\x0d\n\x0d\n  const { resolution = 10 } = options;\x0d\n  validateInteger(resolution\x2C 'options.resolution'\x2C 1);\x0d\n\x0d\n  return makeTransferable(ReflectConstruct(\x0d\n    function() {\x0d\n      this[kEnabled] = false;\x0d\n      this[kHandle] = createELDHistogram(resolution);\x0d\n      this[kMap] = new SafeMap();\x0d\n    }\x2C []\x2C ELDHistogram));\x0d\n}\x0d\n\x0d\nmodule.exports = monitorEventLoopDelay;\x0d\n
code-source-info,0x13a35fb532e,125,0,1814,C0O0C4O1814,,
code-creation,JS,10,317876,0x13a35fb5756,228, node:internal/perf/event_loop_delay:1:1,0x13a35fb52a8,~
code-source-info,0x13a35fb5756,125,0,1814,C0O0C49O26C55O47C61O59C66O172C69O172C74O106C79O113C85O143C91O239C94O239C99O214C105O326C108O326C113O285C119O305C125O409C128O409C133O372C138O386C144O398C150O473C153O473C158O454C164O536C167O536C172O513C178O600C181O600C185O600C187O650C218O623C220O1773C222O1788C227O1813,,
code-creation,JS,10,318058,0x13a35fb61c6,77,mark node:internal/perf/performance:118:7,0x13a35fab7e8,~
code-source-info,0x13a35fb61c6,121,3098,3321,C0O3098C11O3115C18O3136C25O3164C34O3136C39O3218C45O3225C50O3241C60O3247C65O3241C66O3289C71O3296C76O3316,,
code-creation,JS,10,318134,0x13a35fb6326,46, node:internal/validators:523:47,0x3fcdef85c18,~
code-source-info,0x13a35fb6326,15,15257,15471,C0O15295C12O15349C15O15349C22O15405C38O15411C43O15405C45O15470,,
code-creation,JS,10,318202,0x13a35fb6446,40,mark node:internal/perf/usertiming:157:14,0x13a35fa6d98,~
code-source-info,0x13a35fb6446,119,3904,4037,C0O3938C13O3938C19O3977C24O3977C28O3995C33O3995C37O4022C39O4034,,
code-creation,JS,10,318299,0x13a35fb6da6,276,PerformanceMark node:internal/perf/usertiming:70:14,0x13a35fa6ed8,~
code-source-info,0x13a35fb6da6,119,1719,2462,C0O1719C18O1768C24O1775C29O1791C39O1797C44O1791C45O1839C49O1862C54O1895C59O1895C66O1913C79O1919C84O1913C85O1965C90O1995C98O1995C103O2061C110O2068C123O2083C126O2083C130O2095C138O2095C143O2140C144O2154C149O2166C156O2172C161O2166C162O2227C167O2239C172O2239C178O2281C185O2288C193O2303C198O2336C201O2336C209O2382C211O2388C219O2382C246O2382C258O2434C263O2439C268O2448C275O2461,,
code-creation,JS,10,318421,0x13a35fb7026,116,PerformanceEntry node:internal/perf/performance_entry:34:14,0x3e4136bf6e0,~
code-source-info,0x13a35fb7026,116,821,1180,C50O966C52O990C54O986C59O1011C64O1017C69O1011C70O1062C72O1067C77O1074C81O1087C83O1092C88O1104C92O1117C94O1122C99O1134C103O1148C105O1153C110O1164C115O1179,,
code-creation,JS,10,318518,0x13a35fb78fe,165,enqueue node:internal/perf/observe:391:17,0x13a35f9f7c0,~
code-source-info,0x13a35fb78fe,118,10421,10614,C0O10434C5O10439C11O10471C27O10477C32O10471C33O10562C55O10555C83O10555C86O10581C88O10585C90O10584C94O10598C99O10544C164O10613,,
code-creation,JS,10,318577,0x13a35fb7aa6,20,isPerformanceEntry node:internal/perf/performance_entry:29:28,0x3e4136bf5f0,~
code-source-info,0x13a35fb7aa6,116,730,778,C0O741C9O754C11O753C18O761C19O775,,
code-creation,JS,10,318672,0x13a35fb7d5e,204,bufferUserTiming node:internal/perf/observe:403:26,0x13a35f9f810,~
code-source-info,0x13a35fb7d5e,118,10705,11735,C0O10742C5O10760C7O10771C9O10785C14O10804C21O10840C23O10854C28O10876C35O10922C36O10929C37O10940C42O10940C47O10999C52O11012C54O11024C56O11022C63O11065C66O11083C71O11083C78O11106C83O11124C90O11124C96O11268C106O11353C116O11362C126O11323C132O11403C138O11493C143O11522C153O11463C159O11540C165O11268C171O11594C173O11601C177O11652C179O11664C183O11682C185O11690C189O11704C192O11712C197O11712C203O11734,,
code-creation,JS,10,318761,0x13a35fb7fa6,29,get entryType node:internal/perf/performance_entry:56:16,0x3e4136bf7b8,~
code-source-info,0x13a35fb7fa6,116,1308,1413,C0O1318C7O1346C16O1318C21O1384C23O1396C25O1395C28O1408,,
code-creation,JS,10,318855,0x13a35fb81be,110,runProgram file:///C:/coding/soodocode/build/runtime.js:804:23,0xc2df92e9c0,~
code-source-info,0x13a35fb81be,111,48758,49237,C0O48788C5O48797C10O48788C16O48975C31O48958C44O48958C45O49017C52O49026C58O49087C65O49097C69O49157C75O49162C81O49164C86O49170C90O49170C97O49157C104O48947C109O49236,,
code-creation,JS,10,318988,0x13a35fb870e,292,runBlock file:///C:/coding/soodocode/build/runtime.js:777:21,0xc2df92e970,~
code-source-info,0x13a35fb870e,111,47682,48735,C0O47682C8O47723C13O47730C21O47730C26O47778C28O47819C45O47811C73O47811C76O47851C78O47899C83O47888C88O47950C93O47950C101O48048C107O48065C111O48069C116O48069C123O48133C127O48182C134O48187C139O48257C144O48292C146O47800C211O48392C217O48399C222O48411C227O48418C232O48433C236O48425C239O48418C245O48440C250O48458C254O48448C259O48486C268O48486C272O48538C276O48583C283O48672C289O48703C291O48734,,
code-creation,JS,10,319123,0x13a35fb8b06,241,run file:///C:/coding/soodocode/build/statements.js:208:12,0x2c01bf4dad8,~
code-source-info,0x13a35fb8b06,113,10317,10893,C0O10365C5O10390C10O10365C16O10440C38O10423C66O10423C69O10481C74O10481C81O10524C92O10541C103O10524C107O10599C112O10599C117O10616C122O10627C129O10667C145O10747C153O10747C165O10810C171O10637C175O10412C240O10892,,
code-creation,JS,10,319221,0x13a35fb8dbe,82,resolveVariableType file:///C:/coding/soodocode/build/runtime.js:568:32,0xc2df92e438,~
code-source-info,0x13a35fb8dbe,111,37001,37273,C0O37046C5O37035C10O37087C15O37076C20O37126C22O37138C23O37192C30O37204C34O37192C43O37212C49O37217C55O37219C60O37225C66O37237C70O37225C77O37212C81O37259,,
code-creation,JS,10,319298,0x13a35fb8f1e,75,getVariable file:///C:/coding/soodocode/build/runtime.js:574:24,0xc2df92e488,~
code-source-info,0x13a35fb8f1e,111,37297,37553,C0O37340C5O37347C9O37354C13O37361C14O37361C19O37403C26O37409C30O37413C37O37422C42O37466C49O37472C53O37476C60O37485C63O37492C64O37368C69O37322C73O37527C74O37539,,
code-creation,JS,10,319371,0x13a35fb90a6,36,getCurrentScope file:///C:/coding/soodocode/build/runtime.js:606:28,0xc2df92e5c8,~
code-source-info,0x13a35fb90a6,111,38676,38759,C0O38709C5O38716C13O38716C22O38726C31O38726C35O38745,,
code-creation,JS,10,319445,0x13a35fb935e,32,getInitValue file:///C:/coding/soodocode/build/runtime-types.js:33:17,0xc2df932d20,~
code-source-info,0x13a35fb935e,112,869,1181,C0O902C4O931C9O1105C13O1101C22O1131C26O1125C29O1137C30O1163C31O1175,,
code-creation,JS,10,319555,0x13a35fb96e6,293,run file:///C:/coding/soodocode/build/statements.js:246:12,0x2c01bf4d3a8,~
code-source-info,0x13a35fb96e6,113,12210,12710,C0O12210C8O12246C13O12263C18O12246C25O12286C34O12308C49O12286C53O12372C59O12380C64O12399C69O12380C75O12372C92O12357C129O12363C225O12426C230O12426C235O12443C240O12459C252O12485C258O12648C287O12465C292O12709,,
code-creation,JS,10,319665,0x13a35fb9b36,127,evaluateToken file:///C:/coding/soodocode/build/runtime.js:555:33,0xc2df92e3c0,~
code-source-info,0x13a35fb9b36,111,36454,36969,C3O36524C8O36534C13O36548C18O36557C29O36593C39O36553C51O36548C56O36672C68O36741C76O36763C80O36749C85O36803C91O36808C97O36810C102O36816C106O36816C113O36803C120O36927C122O36927C126O36968,,
code-creation,JS,10,319936,0x13a35fba8be,1306,evaluateToken file:///C:/coding/soodocode/build/runtime.js:472:26,0xc2df92e370,~
code-source-info,0x13a35fba8be
code-creation,JS,10,320252,0x13a35fbb41e,96,run file:///C:/coding/soodocode/build/statements.js:434:12,0x2c01bf4a978,~
code-source-info,0x13a35fbb41e,113,22581,22867,C0O22630C5O22648C13O22630C20O22695C26O22720C32O22725C38O22727C43O22733C47O22767C52O22733C59O22720C63O22815C68O22833C73O22848C78O22815C87O22853C90O22805C95O22866,,
code-creation,JS,10,320934,0x13a35fbce1e,6919,evaluateExpr file:///C:/coding/soodocode/build/runtime.js:250:25,0xc2df92e320,~
code-source-info,0x13a35fbce1e
code-creation,JS,10,321683,0x13a35fbf2ae,143,getEnumFromValue file:///C:/coding/soodocode/build/runtime.js:588:29,0xc2df92e528,~
code-source-info,0x13a35fbf2ae,111,37850,38234,C0O37850C9O37893C14O37900C18O37907C31O38190C40O37921C48O37914C49O37914C65O37960C69O37967C74O37979C81O37985C85O37989C90O37967C96O38020C106O38021C112O38127C114O38161C116O38173C124O37875C141O38208C142O38220,,
code-creation,JS,10,321768,0x13a35fbf48e,19,is file:///C:/coding/soodocode/build/runtime-types.js:21:7,0xc2df932be0,~
code-source-info,0x13a35fbf48e,112,452,510,C0O452C3O484C8O498C13O484C18O504,,
code-creation,JS,10,321861,0x13a35fbf6a6,93,getInitValue file:///C:/coding/soodocode/build/runtime-types.js:71:17,0xc2df932e60,~
code-source-info,0x13a35fbf6a6,112,2534,2831,C0O2534C12O2580C15O2588C20O2613C25O2588C30O2580C32O2628C39O2648C41O2637C46O2679C55O2679C59O2737C63O2750C73O2770C86O2750C92O2825,,
new,MemoryChunk,0x205c8b80000,806912
code-creation,JS,10,322306,0x13a35fbf87e,22, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,~
code-source-info,0x13a35fbf87e,112,2785,2823,C0O2796C5O2796C15O2796C21O2823,,
code-creation,JS,11,322407,0x7ff64c474b40,252,getInitValue file:///C:/coding/soodocode/build/runtime-types.js:33:17,0xc2df932d20,^
code-source-info,0x7ff64c474b40,112,869,1181,,,
code-creation,JS,11,322442,0x7ff64c474c80,344, file:///C:/coding/soodocode/build/parser.js:170:46,0x2c01bf7a280,^
code-source-info,0x7ff64c474c80,109,8172,8235,,,
code-creation,JS,11,322503,0x7ff64c474e00,3000,findLastNotInGroup file:///C:/coding/soodocode/build/utils.js:75:35,0xc2df91b8f8,^
code-source-info,0x7ff64c474e00,106,2262,2834,,,
code-creation,JS,11,322541,0x7ff64c475a00,672,__temp file:///C:/coding/soodocode/build/utils.js:175:20,0x2c01bf64b40,^
code-source-info,0x7ff64c475a00,106,6210,6386,,,
new,MemoryChunk,0x198e40000,262144
new,MemoryChunk,0x77e2f40000,262144
new,MemoryChunk,0x2fc10980000,262144
new,MemoryChunk,0x1adbca00000,262144
new,MemoryChunk,0x17e1ea40000,262144
new,MemoryChunk,0x3d34b340000,262144
new,MemoryChunk,0xdb561c0000,262144
new,MemoryChunk,0x3f000580000,262144
new,MemoryChunk,0x5c3c40000,262144
new,MemoryChunk,0x1cc93540000,262144
code-creation,JS,13,325887,0x7ff64c475cc0,540,getInitValue file:///C:/coding/soodocode/build/runtime-types.js:33:17,0xc2df932d20,*
code-source-info,0x7ff64c475cc0,112,869,1181,C0O869C39O902C120O1101C162O1131C200O1125C219O1137C252O1175C261O869C308O902C356O1125,,
code-creation,JS,13,325966,0x7ff64c475f00,168, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c475f00,112,2785,2823,C0O2785C39O1101I0C80O2823C113O2785,F0O2796,S0xc2df932d20
new,MemoryChunk,0x26a07600000,262144
new,MemoryChunk,0x37e19f00000,262144
tick,0x7ff6cc0eb764,331088,0,0x0,0,0x7ff6cc2220d0,0x7ff64c475f50,0x7ff6cc351d3c,0x13a35fbf6fc,0x13a35fb8b9f,0x13a35fb876b,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc222834,347138,0,0x0,0,0x7ff6cc2220d0,0x7ff64c475f50,0x7ff6cc351d3c,0x13a35fbf6fc,0x13a35fb8b9f,0x13a35fb876b,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,359754,0x5c3c41bf6,367,runBlock file:///C:/coding/soodocode/build/statements.js:828:17,0x2c01bf45fd0,~
code-source-info,0x5c3c41bf6,113,42480,43738,C0O42532C5O42550C10O42562C16O42584C21O42532C30O42592C34O42631C39O42649C44O42661C50O42683C55O42631C64O42691C68O42708C70O42718C75O42743C76O42750C77O42780C84O42797C88O42822C93O42836C97O42827C102O42858C111O42916C126O42958C141O42858C145O42998C150O42998C156O43038C165O43727C187O43059C192O43062C195O43059C200O43047C205O43047C223O43109C228O43123C234O43133C245O43171C249O43208C254O43240C260O43247C268O43290C272O43374C279O43396C327O43109C334O43668C336O43700C338O43714C344O43025C366O43737,,
code-creation,JS,10,359922,0x5c3c41f46,5,get value file:///C:/coding/soodocode/build/statements.js:252:26,0x13a35fb94a8,~
code-source-info,0x5c3c41f46,113,12516,12536,C0O12521C4O12534,,
code-creation,JS,10,360050,0x5c3c42116,294,coerceValue file:///C:/coding/soodocode/build/runtime.js:640:24,0xc2df92e758,~
code-source-info,0x5c3c42116,111,40609,41539,C0O40645C4O40649C11O40691C13O40704C14O40730C22O40730C29O40749C37O40749C44O40781C46O40794C47O40820C55O40820C62O40840C70O40840C77O40872C79O40885C80O40911C88O40911C95O40928C103O40928C110O40963C114O40975C119O40975C124O40988C125O41012C133O41012C140O41057C166O41057C173O41154C178O41154C182O41165C183O41211C188O41200C193O41254C196O41271C204O41271C219O41284C220O41339C225O41328C230O41374C235O41363C240O41400C245O41400C252O41434C254O41447C255O41464C261O41469C267O41471C272O41477C282O41477C288O41464C293O41538,,
code-creation,JS,10,360207,0x5c3c423f6,265,typesEqual file:///C:/coding/soodocode/build/runtime.js:41:27,0xc2df92db38,~
code-source-info,0x5c3c423f6,111,2839,3394,C0O2852C2O2861C7O2878C11O2884C16O2884C23O2898C27O2904C32O2904C41O2919C47O2927C50O2923C55O2957C60O2946C65O2991C70O2980C75O3014C80O3025C85O3025C90O3041C95O3052C100O3052C104O3036C109O3069C114O3079C118O3074C123O3099C127O3105C132O3115C137O3105C144O3124C148O3130C153O3140C158O3130C165O3151C172O3155C176O3164C183O3168C186O3159C191O3199C196O3188C201O3235C206O3224C211O3258C215O3271C220O3281C225O3258C232O3315C237O3304C242O3347C247O3336C252O3368C257O3382C261O3377C264O3392,,
code-creation,JS,10,360310,0x5c3c4264e,3,step file:///C:/coding/soodocode/build/statements.js:825:13,0x2c01bf45f80,~
code-source-info,0x5c3c4264e,113,42419,42463,C0O42444C2O42453,,
code-creation,JS,10,360556,0x5c3c43136,844,processArrayAccess file:///C:/coding/soodocode/build/runtime.js:103:31,0xc2df92e1f8,~
code-source-info,0x5c3c
code-creation,JS,10,360744,0x5c3c4380e,54, file:///C:/coding/soodocode/build/runtime.js:115:50,0x5c3c42bd0,~
code-source-info,0x5c3c4380e,111,7080,7144,C0O7085C9O7086C19O7094C24O7110C30O7132C35O7094C44O7140C53O7144,,
code-creation,JS,10,360797,0x5c3c43926,5,get value file:///C:/coding/soodocode/build/statements.js:845:38,0x5c3c41940,~
code-source-info,0x5c3c43926,113,43442,43458,C0O43447C4O43456,,
code-creation,JS,10,360860,0x5c3c43a3e,205, file:///C:/coding/soodocode/build/runtime.js:117:60,0x5c3c42c20,~
code-source-info,0x5c3c43a3e,111,7245,7390,C0O7245C20O7247C57O7254C155O7320C157O7280C160O7292C167O7309C173O7316C176O7278C183O7351C186O7363C193O7380C198O7387C201O7349C204O7390,,
code-creation,JS,10,360938,0x5c3c43c86,228, file:///C:/coding/soodocode/build/runtime.js:122:46,0x5c3c42c70,~
code-source-info,0x5c3c43c86,111,7661,7816,C3O7661C23O7668C60O7675C158O7749C160O7698C166O7708C169O7720C176O7737C181O7744C184O7706C190O7761C193O7769C197O7776C200O7758C211O7786C214O7798C221O7808C224O7749C227O7816,,
code-creation,JS,10,361041,0x5c3c44046,23,set value file:///C:/coding/soodocode/build/runtime.js:133:38,0x5c3c42d50,~
code-source-info,0x5c3c44046,111,8392,8430,C0O8400C5O8409C12O8415C17O8422C22O8429,,
code-creation,JS,11,361424,0x7ff64c476000,1448, file:///C:/coding/soodocode/build/runtime.js:117:60,0x5c3c42c20,^
code-source-info,0x7ff64c476000,111,7245,7390,,,
code-creation,JS,11,361458,0x7ff64c4765c0,176, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,^
code-source-info,0x7ff64c4765c0,112,2785,2823,,,
code-creation,JS,11,361485,0x7ff64c476680,136,is file:///C:/coding/soodocode/build/runtime-types.js:21:7,0xc2df932be0,^
code-source-info,0x7ff64c476680,112,452,510,,,
code-creation,JS,11,361528,0x7ff64c476740,1100,getEnumFromValue file:///C:/coding/soodocode/build/runtime.js:588:29,0xc2df92e528,^
code-source-info,0x7ff64c476740,111,37850,38234,,,
code-creation,JS,11,361558,0x7ff64c476bc0,544,getVariable file:///C:/coding/soodocode/build/runtime.js:574:24,0xc2df92e488,^
code-source-info,0x7ff64c476bc0,111,37297,37553,,,
code-creation,JS,11,361583,0x7ff64c476e00,92,get value file:///C:/coding/soodocode/build/statements.js:845:38,0x5c3c41940,^
code-source-info,0x7ff64c476e00,113,43442,43458,,,
code-creation,JS,11,361610,0x7ff64c476e80,344, file:///C:/coding/soodocode/build/runtime.js:115:50,0x5c3c42bd0,^
code-source-info,0x7ff64c476e80,111,7080,7144,,,
code-creation,JS,11,361639,0x7ff64c477000,216,set value file:///C:/coding/soodocode/build/runtime.js:133:38,0x5c3c42d50,^
code-source-info,0x7ff64c477000,111,8392,8430,,,
code-creation,JS,11,361781,0x7ff64c477100,660,run file:///C:/coding/soodocode/build/statements.js:434:12,0x2c01bf4a978,^
code-source-info,0x7ff64c477100,113,22581,22867,,,
code-creation,JS,11,361827,0x7ff64c4773c0,1632, file:///C:/coding/soodocode/build/runtime.js:122:46,0x5c3c42c70,^
code-source-info,0x7ff64c4773c0,111,7661,7816,,,
code-creation,JS,11,361876,0x7ff64c477a40,2148,runBlock file:///C:/coding/soodocode/build/runtime.js:777:21,0xc2df92e970,^
code-source-info,0x7ff64c477a40,111,47682,48735,,,
code-creation,JS,11,362199,0x7ff64c4782c0,5604,processArrayAccess file:///C:/coding/soodocode/build/runtime.js:103:31,0xc2df92e1f8,^
code-source-info,0x7ff64c4782c0,111,6009,9186,,,
code-creation,JS,11,362258,0x7ff64c4798c0,2748,runBlock file:///C:/coding/soodocode/build/statements.js:828:17,0x2c01bf45fd0,^
code-source-info,0x7ff64c4798c0,113,42480,43738,,,
code-creation,JS,11,362546,0x7ff64c47a3c0,9408,evaluateToken file:///C:/coding/soodocode/build/runtime.js:472:26,0xc2df92e370,^
code-source-info,0x7ff64c47a3c0,111,31810,36421,,,
tick,0x7ff66c288195,363092,0,0x0,0,0x7ff64c46c2b6,0x13a35fbce94,0x7ff64c46c2b6,0x7ff64c477174,0x7ff64c477cca,0x7ff64c47a1c8,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,11,366773,0x7ff64c47c8c0,1924,typesEqual file:///C:/coding/soodocode/build/runtime.js:41:27,0xc2df92db38,^
code-source-info,0x7ff64c47c8c0,111,2839,3394,,,
code-creation,JS,11,366862,0x7ff64c47d080,724,resolveVariableType file:///C:/coding/soodocode/build/runtime.js:568:32,0xc2df92e438,^
code-source-info,0x7ff64c47d080,111,37001,37273,,,
code-creation,JS,11,366936,0x7ff64c47d380,2040,coerceValue file:///C:/coding/soodocode/build/runtime.js:640:24,0xc2df92e758,^
code-source-info,0x7ff64c47d380,111,40609,41539,,,
new,MemoryChunk,0x7ff64c480000,262144
code-creation,JS,11,368097,0x7ff64c483040,38780,evaluateExpr file:///C:/coding/soodocode/build/runtime.js:250:25,0xc2df92e320,^
code-source-info,0x7ff64c483040,111,16319,31784,,,
code-creation,JS,13,372145,0x7ff64c48c800,1268,getVariable file:///C:/coding/soodocode/build/runtime.js:574:24,0xc2df92e488,*
code-source-info,0x7ff64c48c800,111,37297,37553,C0O37297C39O37340C77O37347C97O37354C106O37361C123O37409C141O37413C180O37422C272O37466C299O37472C356O37476C393O37485C411O37492C437O37368C443O37322C512O37361C528O37403C551O37409C607O37413C644O37422C745O37368C751O37322C766O37539C778O37466C805O37472C862O37476C899O37485C917O37492C922O37297C968O37422C1024O37322C1063O37422C1119O37322,,
code-creation,JS,13,373035,0x7ff64c48cd40,1800,getEnumFromValue file:///C:/coding/soodocode/build/runtime.js:588:29,0xc2df92e528,*
code-source-info,0x7ff64c48cd40,111,37850,38234,C0O37850C119O37893C161O37900C182O37907C263O38190C272O37921C307O37914C430O37979C443O37985C485O37989C522O37967C571O38020C712O38021C1163O38127C1243O37875C1273O38220C1306O38173C1311O37850C1456O38021C1577O38127C1633O37875,,
tick,0x7ff66c2bcf0d,379202,0,0x0,0,0x7ff64c4831f7,0x7ff64c46c2b6,0x7ff64c4784ae,0x7ff64c46c2b6,0x7ff64c4833f9,0x7ff64c46c2b6,0x7ff64c477174,0x7ff64c477cca,0x7ff64c47a1c8,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,385753,0x7ff64c48d4c0,2024, file:///C:/coding/soodocode/build/runtime.js:115:50,0x5c3c42bd0,*
code-source-info,0x7ff64c48d4c0,111,7080,7144,C0O7080C84O7085C170O7086C186O7094C233O7110C278O7132C319O7094C351O6556I0C399O6614I0C456O7140C603O7144C632O7080C697O6632I0C711O6708I0C746O6697I0C907O6766I0C1055O6816I0C1097O6839I0C1128O6833I0C1204O6814I0C1217O6833I0C1224O6814I0C1253O6889I0C1316O6887I0C1373O6956I0C1400O7079I0C1405O7029I0C1468O7027I0C1528O7547I0C1557O7589I0C1588O6708I0C1630O7110,F0O7094,S0x2c01bf63718
new,MemoryChunk,0x39c990c0000,262144
code-creation,JS,13,387648,0x7ff64c48dd40,880, file:///C:/coding/soodocode/build/runtime.js:117:60,0x5c3c42c20,*
code-source-info,0x7ff64c48dd40,111,7245,7390,C0O7245C76O7247C145O7254C234O7320C242O7280C255O7292C289O7309C348O7316C395O7278C416O7387C424O7390C486O7245C532O7309C758O7280,,
code-creation,JS,13,387753,0x7ff64c48e100,1064, file:///C:/coding/soodocode/build/runtime.js:122:46,0x5c3c42c70,*
code-source-info,0x7ff64c48e100,111,7661,7816,C0O7661C76O7668C145O7675C234O7698C290O7708C303O7720C337O7737C394O7744C441O7706C459O7761C472O7769C492O7776C496O7737C504O7776C507O7758C523O7798C528O7816C561O7661C607O7737C868O7761C917O7708,,
new,MemoryChunk,0x3a575a80000,262144
new,MemoryChunk,0x215c2600000,262144
new,MemoryChunk,0xbaab300000,262144
new,MemoryChunk,0x28743b00000,262144
new,MemoryChunk,0x37ede800000,262144
new,MemoryChunk,0x14eeab40000,262144
new,MemoryChunk,0x38843200000,262144
new,MemoryChunk,0x21a0e280000,262144
new,MemoryChunk,0x14731b00000,262144
new,MemoryChunk,0x3300b500000,262144
new,MemoryChunk,0x2ddd9400000,262144
new,MemoryChunk,0x6c22e80000,262144
new,MemoryChunk,0x15384000000,262144
new,MemoryChunk,0x296ee880000,262144
new,MemoryChunk,0x8ce9e40000,262144
new,MemoryChunk,0x335abe00000,262144
new,MemoryChunk,0x21153c00000,262144
tick,0x7ff6cc0e398f,395098,0,0x0,1
code-creation,JS,13,396446,0x7ff64c48e580,4792,runBlock file:///C:/coding/soodocode/build/runtime.js:777:21,0xc2df92e970,*
code-source-info,0x7ff64c48ex2c01bf4a978S0x2c01bf63718
code-creation,JS,13,401265,0x7ff64c48fa00,716,set value file:///C:/coding/soodocode/build/runtime.js:133:38,0x5c3c42d50,*
code-source-info,0x7ff64c48fa00,111,8392,8430,C0O8392C43O8400C64O8409C102O8415C115O8422C242O8429C275O8392C321O8422C531O8415C577O8400,,
code-creation,JS,13,405425,0x7ff64c48fd00,2272,runBlock file:///C:/coding/soodocode/build/statements.js:828:17,0x2c01bf45fd0,*
code-source-info,0x7ff64c48fd00,113,42480,43738,C0O42480C60O43047C215O43727C261O43062C305O43059C336O43047C373O43109C411O43123C452O43133C627O43171C664O43208C692O43240C784O43247C850O43290C858O43374C905O43396C1312O43109C1359O43668C1439O43714C1451O43025C1476O43737C1509O43714C1511O42480C1665O43396C1819O43668C1875O43025C1964O43374,,
code-creation,JS,13,405567,0x7ff64c490680,1880,replacedFunction file:///C:/coding/soodocode/build/utils.js:184:41,0x2c01bf63718,*
code-source-info,0x7ff64c490680,106,6556,7623,C0O6556C189O6602C197O6614C252O6632C278O6556C360O6632C374O6708C423O6697C640O6746C793O6766C954O6816C986O6839C1017O6833C1093O6814C1106O6833C1113O6814C1142O6889C1219O6887C1305O6956C1341O7079C1346O7029C1422O7027C1482O7547C1506O7589C1537O6746C1576O6708,,
code-creation,JS,13,407711,0x7ff64c490e40,7868,processArrayAccess file:///C:/coding/soodocode/build/runtime.js:103:31,0xc2df92e1f8,*
code-source-info,0x7ff64c490exc2df92e438S0x5c3c42c70S0x5c3c42bd0S0x2c01bf63718S0x5c3c42c20
code-creation,JS,13,408507,0x7ff64c492e40,252,is file:///C:/coding/soodocode/build/runtime-types.js:21:7,0xc2df932be0,*
code-source-info,0x7ff64c492e40,112,452,510,C0O452C104O498C145O484C166O504C192O452,,
new,MemoryChunk,0x17652100000,262144
tick,0x7ff66c2dbe56,411125,0,0x0,0,0x7ff64c47ad3a,0x7ff64c48324b,0x7ff64c48ea47,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,411748,0x7ff64c492f80,6720,evaluateToken file:///C:/coding/soodocode/build/runtime.js:472:26,0xc2df92e370,*
code-source-info,0x7ff64c492fxc2df932be0S0xc2df92e488S0xc2df92e528S0xc2df92e758S0xc2df92db38
new,MemoryChunk,0x25417680000,262144
new,MemoryChunk,0x432bc0000,262144
new,MemoryChunk,0x3a93f640000,262144
new,MemoryChunk,0x2fce8840000,262144
new,MemoryChunk,0x24f91a00000,262144
code-creation,JS,13,426392,0x7ff64c494b40,1088, file:///C:/coding/soodocode/build/runtime.js:122:46,0x5c3c42c70,*
code-source-info,0x7ff64c494b40,111,7661,7816,C0O7661C76O7668C145O7675C234O7698C290O7708C303O7720C337O7737C394O7744C441O7706C459O7761C472O7769C486O7737C494O7769C522O7776C529O7758C545O7798C550O7816C583O7661C629O7737C890O7761C939O7708,,
tick,0x7ff64c4782e1,427103,0,0x0,0,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,434914,0x7ff64c494fc0,208,get value file:///C:/coding/soodocode/build/statements.js:845:38,0x5c3c41940,*
code-source-info,0x7ff64c494fc0,113,43442,43458,C0O43442C35O43447C52O43456C78O43442C140O43447,,
new,MemoryChunk,0x1c73bc00000,262144
new,MemoryChunk,0x21717b40000,262144
new,MemoryChunk,0x9b9cb80000,262144
code-creation,JS,13,441709,0x7ff64c4950c0,8000,processArrayAccess file:///C:/coding/soodocode/build/runtime.js:103:31,0xc2df92e1f8,*
code-source-info,0x7ff64c4950cxc2df92e438S0x5c3c42c70S0x5c3c42c20S0x5c3c42bd0S0x2c01bf63718
tick,0x7ff66c2b33d8,443163,0,0x0,0,0x7ff64c4832e4,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3bfa9840000,262144
new,MemoryChunk,0x1840fa00000,262144
new,MemoryChunk,0x383d0800000,262144
new,MemoryChunk,0x634e200000,262144
new,MemoryChunk,0x2b790500000,262144
new,MemoryChunk,0x320dfd40000,262144
new,MemoryChunk,0x1f9a2c00000,262144
new,MemoryChunk,0x10229cc0000,262144
new,MemoryChunk,0x3d595980000,262144
new,MemoryChunk,0x39005e80000,262144
new,MemoryChunk,0x24c7ec00000,262144
new,MemoryChunk,0x36b9dac0000,262144
new,MemoryChunk,0x20630a40000,262144
new,MemoryChunk,0x2afed00000,262144
new,MemoryChunk,0x31431e00000,262144
new,MemoryChunk,0xc26e600000,262144
new,MemoryChunk,0x32cc7380000,262144
new,MemoryChunk,0x3ede0a40000,262144
new,MemoryChunk,0x3003ff00000,262144
new,MemoryChunk,0x57dfa40000,262144
new,MemoryChunk,0x235ace40000,262144
new,MemoryChunk,0x2188d080000,262144
new,MemoryChunk,0x1f28bc00000,262144
new,MemoryChunk,0x259c64c0000,262144
new,MemoryChunk,0x305cffc0000,262144
new,MemoryChunk,0x35b32c0000,262144
new,MemoryChunk,0x12bf2240000,262144
new,MemoryChunk,0x1b57c540000,262144
new,MemoryChunk,0x6e72dc0000,262144
new,MemoryChunk,0x3cee040000,262144
new,MemoryChunk,0x37780ec0000,262144
new,MemoryChunk,0x1e800780000,262144
new,MemoryChunk,0xbf51f40000,262144
new,MemoryChunk,0x39e7ddc0000,262144
tick,0x7ff64c492f84,459148,0,0x0,0,0x7ff64c48ea47,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x38500580000,262144
new,MemoryChunk,0x35bec880000,262144
new,MemoryChunk,0x3658f2c0000,262144
new,MemoryChunk,0x2f856c00000,262144
new,MemoryChunk,0x19b3e100000,262144
tick,0x7ff6cbf177bd,474130,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49016e,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3bcbb700000,262144
new,MemoryChunk,0x7e59a80000,262144
new,MemoryChunk,0x19e18c0000,262144
new,MemoryChunk,0x120df080000,262144
tick,0x7ff6cbb6e8ea,489116,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49016e,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xad08940000,262144
new,MemoryChunk,0x18dc5dc0000,262144
new,MemoryChunk,0x3e1453c0000,262144
new,MemoryChunk,0x1810e4c0000,262144
new,MemoryChunk,0x1d67af40000,262144
tick,0x7ff64c493449,505106,0,0x0,0,0x7ff64c48324b,0x7ff64c48ea47,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x26970b40000,262144
new,MemoryChunk,0x9dea440000,262144
new,MemoryChunk,0x21d7abc0000,262144
new,MemoryChunk,0x1d534240000,262144
new,MemoryChunk,0x305c9280000,262144
code-creation,JS,13,510849,0x7ff64c497140,2896,evaluateExpr file:///C:/coding/soodocode/build/runtime.js:250:25,0xc2df92e320,*
code-source-info,0x7ff64c497140,111,16319,31784,C0O16319C47O16370C73O16476C100O16465C236O16515C316O16541C342O16578C369O16567C492O16639C540O16830C638O6556I0C727O6614I0C781O16868C786O16678C818O16923C845O16912C850O16413C881O16431C901O16319C947O16465C1027O16567C1135O6632I0C1149O6708I0C1184O6697I0C1401O6746I0C1560O6766I0C1710O6816I0C1742O6839I0C1773O6833I0C1849O6814I0C1862O6833I0C1869O6814I0C1898O6889I0C1961O6887I0C2040O6956I0C2075O7079I0C2080O7029I0C2146O7027I0C2206O7547I0C2227O7589I0C2258O6746I0C2296O6708I0C2335O16678C2383O16923C2426O16578C2469O16476C2512O16413,F0O16830,S0x2c01bf63718
new,MemoryChunk,0x27948a40000,262144
new,MemoryChunk,0x36f3e340000,262144
new,MemoryChunk,0x31055500000,262144
new,MemoryChunk,0x2f8d1900000,262144
new,MemoryChunk,0x36f717c0000,262144
new,MemoryChunk,0xc7f8e00000,262144
new,MemoryChunk,0x3e479bc0000,262144
new,MemoryChunk,0x30013680000,262144
new,MemoryChunk,0x39ddffc0000,262144
new,MemoryChunk,0x1c5ee00000,262144
new,MemoryChunk,0xc49ac80000,262144
new,MemoryChunk,0x68554c0000,262144
new,MemoryChunk,0x39441c0000,262144
new,MemoryChunk,0x19e8cbc0000,262144
new,MemoryChunk,0x26346380000,262144
new,MemoryChunk,0x13572f40000,262144
new,MemoryChunk,0x375f9400000,262144
new,MemoryChunk,0x397fc9c0000,262144
new,MemoryChunk,0x33933900000,262144
new,MemoryChunk,0x318dfb80000,262144
new,MemoryChunk,0x3c1d0a00000,262144
new,MemoryChunk,0x10fc5140000,262144
new,MemoryChunk,0x7bc4340000,262144
new,MemoryChunk,0x24130780000,262144
new,MemoryChunk,0x22fea700000,262144
new,MemoryChunk,0xd26a680000,262144
new,MemoryChunk,0x108cc080000,262144
new,MemoryChunk,0x2d5dcc0000,262144
new,MemoryChunk,0x2d1b2cc0000,262144
new,MemoryChunk,0x3c84ad80000,262144
new,MemoryChunk,0x18da7780000,262144
new,MemoryChunk,0x2b20bd00000,262144
new,MemoryChunk,0x29030780000,262144
new,MemoryChunk,0x3f14c440000,262144
new,MemoryChunk,0x29b61180000,262144
new,MemoryChunk,0x31d2e6c0000,262144
new,MemoryChunk,0x2f804f40000,262144
new,MemoryChunk,0x16f76dc0000,262144
new,MemoryChunk,0x28289600000,262144
new,MemoryChunk,0x37bb9c80000,262144
new,MemoryChunk,0x9368400000,262144
new,MemoryChunk,0x390e1300000,262144
new,MemoryChunk,0x19c5eac0000,262144
new,MemoryChunk,0x14b27bc0000,262144
new,MemoryChunk,0x316a2540000,262144
new,MemoryChunk,0x1b749dc0000,262144
new,MemoryChunk,0x22391700000,262144
new,MemoryChunk,0x310b2cc0000,262144
new,MemoryChunk,0x3a305a40000,262144
new,MemoryChunk,0x3c6123c0000,262144
new,MemoryChunk,0x1be00cc0000,262144
new,MemoryChunk,0x1dc46380000,262144
new,MemoryChunk,0x21cfbe80000,262144
new,MemoryChunk,0x383f5b40000,262144
new,MemoryChunk,0x1c467680000,262144
new,MemoryChunk,0x3101dc0000,262144
new,MemoryChunk,0x22e2cd80000,262144
new,MemoryChunk,0x3eaee240000,262144
new,MemoryChunk,0x3670f3c0000,262144
new,MemoryChunk,0x1cde6840000,262144
new,MemoryChunk,0x3d6034c0000,262144
new,MemoryChunk,0x2aac2a40000,262144
new,MemoryChunk,0x7521200000,262144
new,MemoryChunk,0xadca00000,262144
new,MemoryChunk,0x2e2a82c0000,262144
new,MemoryChunk,0x2a2a8980000,262144
tick,0x7ff863c0d2e4,521213,0,0x0,1
new,MemoryChunk,0x177f6700000,262144
new,MemoryChunk,0x8fbb600000,262144
new,MemoryChunk,0x32691cc0000,262144
new,MemoryChunk,0x76e5b00000,262144
delete,MemoryChunk,0x21717b40000
delete,MemoryChunk,0x39e7ddc0000
delete,MemoryChunk,0x35bec880000
delete,MemoryChunk,0x7e59a80000
delete,MemoryChunk,0x3bcbb700000
delete,MemoryChunk,0x120df080000
delete,MemoryChunk,0x19b3e100000
delete,MemoryChunk,0xad08940000
delete,MemoryChunk,0x1c73bc00000
delete,MemoryChunk,0x9b9cb80000
delete,MemoryChunk,0x18dc5dc0000
delete,MemoryChunk,0x3e1453c0000
delete,MemoryChunk,0x1810e4c0000
delete,MemoryChunk,0x1d67af40000
delete,MemoryChunk,0x26970b40000
delete,MemoryChunk,0x19e18c0000
delete,MemoryChunk,0x21d7abc0000
delete,MemoryChunk,0x305c9280000
delete,MemoryChunk,0x2a2a8980000
delete,MemoryChunk,0x1d534240000
delete,MemoryChunk,0x2e2a82c0000
delete,MemoryChunk,0x76e5b00000
delete,MemoryChunk,0x177f6700000
delete,MemoryChunk,0x8fbb600000
delete,MemoryChunk,0x32691cc0000
tick,0x7ff6cbe9a57b,537117,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49016e,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,538311,0x7ff64c4950c0,2304, file:///C:/coding/soodocode/build/runtime.js:115:50,0x5c3c42bd0,*
code-source-info,0x7ff64c4950c0,111,7080,7144,C0O7080C81O7085C209O7086C255O7094C301O7110C346O7132C383O7094C436O6556I0C480O6614I0C533O7140C680O7144C709O7080C840O6632I0C854O6708I0C889O6697I0C1050O6766I0C1198O6816I0C1240O6839I0C1271O6833I0C1347O6814I0C1360O6833I0C1367O6814I0C1396O6889I0C1459O6887I0C1516O6956I0C1543O7079I0C1548O7029I0C1611O7027I0C1671O7547I0C1700O7589I0C1731O6708I0C1773O7110,F0O7094,S0x2c01bf63718
code-creation,JS,13,552947,0x7ff64c497d40,8220,processArrayAccess file:///C:/coding/soodocode/build/runtime.js:103:31,0xc2df92e1f8,*
code-source-info,0x7ff64c497dx5c3c42c20S0xc2df92e438S0x5c3c42c70S0x5c3c42bd0S0x2c01bf63718
tick,0x7ff6cca9a19c,553435,0,0x0,4,0x7ff6cbdb33e0,0x7ff6cc38fce9,0x7ff64c49301a,0x7ff64c49727c,0x7ff64c48ea47,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c27be49,569166,0,0x0,0,0x7ff64c493354,0x7ff64c49727c,0x7ff64c48ea47,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06af42,585172,0,0x0,1
tick,0x7ff6cbeb9abb,600235,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49965d,0x7ff64c49744d,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3c6a3fc0000,262144
new,MemoryChunk,0x1783bcc0000,262144
new,MemoryChunk,0xae2b240000,262144
new,MemoryChunk,0x39bb140000,262144
new,MemoryChunk,0x2b9e2900000,262144
new,MemoryChunk,0x26571dc0000,262144
new,MemoryChunk,0x15130a00000,262144
new,MemoryChunk,0x3c892400000,262144
tick,0x7ff6cbeb0c0d,615144,0,0x0,0,0x7ff6cc054640,0x7ff64c48eaa2,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3047e3c0000,262144
tick,0x7ff6cbb6e938,631155,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49016e,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2a8c5d80000,262144
new,MemoryChunk,0x28862640000,262144
new,MemoryChunk,0x3a84fb80000,262144
new,MemoryChunk,0x155700000,262144
new,MemoryChunk,0x2fec1c0000,262144
new,MemoryChunk,0x292a08c0000,262144
new,MemoryChunk,0x11a5f340000,262144
new,MemoryChunk,0x10514740000,262144
new,MemoryChunk,0x316b8f00000,262144
new,MemoryChunk,0x22bbea00000,262144
new,MemoryChunk,0x12d31f40000,262144
tick,0x7ff64c497304,647171,0,0x0,0,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2c0fca00000,262144
new,MemoryChunk,0x19aaecc0000,262144
new,MemoryChunk,0x3ed3140000,262144
new,MemoryChunk,0x2641ccc0000,262144
new,MemoryChunk,0xe3638c0000,262144
new,MemoryChunk,0x2f621780000,262144
new,MemoryChunk,0x3ff34140000,262144
new,MemoryChunk,0x2eead00000,262144
new,MemoryChunk,0x36ea84c0000,262144
tick,0x7ff6cc14fe33,663154,0,0x0,0,0x7ff6cc054640,0x7ff64c48eaa2,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x21e77b40000,262144
tick,0x7ff66c2dc1ef,679139,0,0x0,0,0x7ff64c493582,0x7ff64c49727c,0x7ff64c49077c,0x7ff64c4984b3,0x7ff64c49744d,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1649fac0000,262144
new,MemoryChunk,0x117e8dc0000,262144
new,MemoryChunk,0xc525640000,262144
new,MemoryChunk,0x1889ef80000,262144
new,MemoryChunk,0x3f0de140000,262144
new,MemoryChunk,0x6e3bb40000,262144
new,MemoryChunk,0x3c24f500000,262144
new,MemoryChunk,0xd8db540000,262144
new,MemoryChunk,0x1f238b80000,262144
tick,0x7ff6cbdaee52,695136,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49016e,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xdcb6340000,262144
new,MemoryChunk,0x25ff8700000,262144
new,MemoryChunk,0x3d7f15c0000,262144
new,MemoryChunk,0x3b136d00000,262144
new,MemoryChunk,0x3a2d740000,262144
new,MemoryChunk,0x54dbd00000,262144
new,MemoryChunk,0x197f8700000,262144
new,MemoryChunk,0x3791aa80000,262144
new,MemoryChunk,0x29f73140000,262144
tick,0x7ff6cc06c1d1,711237,0,0x0,1
new,MemoryChunk,0x8fb7780000,262144
new,MemoryChunk,0x10a093c0000,262144
new,MemoryChunk,0x15005200000,262144
tick,0x7ff64c498f0d,727414,0,0x0,0,0x7ff64c49744d,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x315d3b40000,262144
new,MemoryChunk,0x1874f440000,262144
new,MemoryChunk,0x1b801040000,262144
new,MemoryChunk,0x93ac700000,262144
new,MemoryChunk,0x38d813c0000,262144
new,MemoryChunk,0x10b97e40000,262144
new,MemoryChunk,0x34abb640000,262144
new,MemoryChunk,0x206b2340000,262144
tick,0x7ff66c2dc0e0,743171,0,0x0,0,0x7ff64c493582,0x7ff64c49727c,0x7ff64c49077c,0x7ff64c4984b3,0x7ff64c49744d,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2b89ac00000,262144
tick,0x7ff66c2dbf7a,759168,0,0x0,0,0x7ff64c493582,0x7ff64c49727c,0x7ff64c49077c,0x7ff64c4984b3,0x7ff64c49744d,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x6446740000,262144
new,MemoryChunk,0x1b7c5300000,262144
new,MemoryChunk,0x2839d1c0000,262144
new,MemoryChunk,0x2a9f7180000,262144
new,MemoryChunk,0x365ed780000,262144
new,MemoryChunk,0x3d5e8940000,262144
new,MemoryChunk,0x362bb40000,262144
new,MemoryChunk,0xa27e440000,262144
new,MemoryChunk,0x1c31e640000,262144
new,MemoryChunk,0x3f483b40000,262144
new,MemoryChunk,0x3e618fc0000,262144
tick,0x7ff6cc0ffcdc,775209,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49016e,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c48fec9,791141,0,0x0,0,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x374cae40000,262144
new,MemoryChunk,0x3c81fcc0000,262144
new,MemoryChunk,0x23e15740000,262144
new,MemoryChunk,0x5394640000,262144
new,MemoryChunk,0x31a76e40000,262144
new,MemoryChunk,0x167c4640000,262144
new,MemoryChunk,0x146bf440000,262144
new,MemoryChunk,0x85ccd00000,262144
new,MemoryChunk,0x21de3280000,262144
new,MemoryChunk,0x28711040000,262144
new,MemoryChunk,0x14860d00000,262144
tick,0x7ff6cbf9a514,807221,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4937c4,0x7ff64c49727c,0x7ff64c49077c,0x7ff64c4984b3,0x7ff64c49744d,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xa812c40000,262144
new,MemoryChunk,0x66f0140000,262144
new,MemoryChunk,0x2523a700000,262144
new,MemoryChunk,0x11ccdf40000,262144
new,MemoryChunk,0x34893c40000,262144
new,MemoryChunk,0x29bef00000,262144
new,MemoryChunk,0x3e1e5900000,262144
new,MemoryChunk,0x2fba9b40000,262144
tick,0x7ff6cc06c1d1,823819,0,0x0,1
tick,0x7ff64c4902a6,839178,0,0x0,0,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x6b5f100000,262144
new,MemoryChunk,0x36b443c0000,262144
new,MemoryChunk,0x3ea3d400000,262144
new,MemoryChunk,0x397e2100000,262144
new,MemoryChunk,0x5ad1900000,262144
new,MemoryChunk,0x31732480000,262144
new,MemoryChunk,0x1ffe2740000,262144
new,MemoryChunk,0x190c5740000,262144
new,MemoryChunk,0xed363c0000,262144
new,MemoryChunk,0x32d08fc0000,262144
new,MemoryChunk,0x6127d00000,262144
new,MemoryChunk,0x129f4dc0000,262144
tick,0x7ff6cbf1d1e7,855178,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49016e,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc075c33,871172,0,0x0,1
new,MemoryChunk,0x3b67b140000,262144
new,MemoryChunk,0x3bac780000,262144
new,MemoryChunk,0x1b867b80000,262144
new,MemoryChunk,0x150c8e40000,262144
new,MemoryChunk,0x11db1300000,262144
new,MemoryChunk,0x1133d280000,262144
new,MemoryChunk,0x2cfbc400000,262144
new,MemoryChunk,0x328c78c0000,262144
new,MemoryChunk,0xb354540000,262144
new,MemoryChunk,0x22680880000,262144
tick,0x7ff66c2dc320,887203,0,0x0,0,0x7ff64c49301a,0x7ff64c49727c,0x7ff64c48ea47,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x23091b40000,262144
new,MemoryChunk,0x27ee5580000,262144
new,MemoryChunk,0x3197e8c0000,262144
new,MemoryChunk,0x301685c0000,262144
new,MemoryChunk,0x1dedc580000,262144
new,MemoryChunk,0x2ede0c80000,262144
new,MemoryChunk,0x231f2100000,262144
new,MemoryChunk,0x167c4e80000,262144
new,MemoryChunk,0x10422ec0000,262144
new,MemoryChunk,0x33f0be00000,262144
delete,MemoryChunk,0x39bb140000
delete,MemoryChunk,0x2b9e2900000
delete,MemoryChunk,0x15130a00000
delete,MemoryChunk,0x3c6a3fc0000
delete,MemoryChunk,0xae2b240000
delete,MemoryChunk,0x26571dc0000
delete,MemoryChunk,0x3c892400000
delete,MemoryChunk,0x3047e3c0000
delete,MemoryChunk,0x2a8c5d80000
delete,MemoryChunk,0x28862640000
delete,MemoryChunk,0x11a5f340000
tick,0x7ff863c0d0e4,903124,0,0x0,1
delete,MemoryChunk,0x12d31f40000
delete,MemoryChunk,0x3a84fb80000
delete,MemoryChunk,0x292a08c0000
delete,MemoryChunk,0x22bbea00000
delete,MemoryChunk,0x155700000
delete,MemoryChunk,0x316b8f00000
delete,MemoryChunk,0x2fec1c0000
delete,MemoryChunk,0x2c0fca00000
delete,MemoryChunk,0x36ea84c0000
delete,MemoryChunk,0x19aaecc0000
delete,MemoryChunk,0xe3638c0000
delete,MemoryChunk,0x2641ccc0000
delete,MemoryChunk,0x3ff34140000
delete,MemoryChunk,0x2eead00000
delete,MemoryChunk,0x21e77b40000
delete,MemoryChunk,0x117e8dc0000
delete,MemoryChunk,0x3f0de140000
delete,MemoryChunk,0xd8db540000
delete,MemoryChunk,0xc525640000
delete,MemoryChunk,0x6e3bb40000
delete,MemoryChunk,0x1f238b80000
delete,MemoryChunk,0x1783bcc0000
delete,MemoryChunk,0x1649fac0000
delete,MemoryChunk,0x1889ef80000
delete,MemoryChunk,0x2f621780000
delete,MemoryChunk,0xdcb6340000
delete,MemoryChunk,0x25ff8700000
delete,MemoryChunk,0x197f8700000
delete,MemoryChunk,0x54dbd00000
delete,MemoryChunk,0x10514740000
delete,MemoryChunk,0x3d7f15c0000
delete,MemoryChunk,0x3a2d740000
delete,MemoryChunk,0x8fb7780000
delete,MemoryChunk,0x3b136d00000
delete,MemoryChunk,0x3791aa80000
delete,MemoryChunk,0x1b801040000
delete,MemoryChunk,0x10b97e40000
delete,MemoryChunk,0x3ed3140000
delete,MemoryChunk,0x93ac700000
delete,MemoryChunk,0x1874f440000
delete,MemoryChunk,0x38d813c0000
delete,MemoryChunk,0x315d3b40000
delete,MemoryChunk,0x2b89ac00000
delete,MemoryChunk,0x6446740000
delete,MemoryChunk,0x1b7c5300000
delete,MemoryChunk,0x3d5e8940000
delete,MemoryChunk,0x365ed780000
delete,MemoryChunk,0x10a093c0000
delete,MemoryChunk,0x2839d1c0000
delete,MemoryChunk,0x362bb40000
delete,MemoryChunk,0x3c24f500000
delete,MemoryChunk,0x2a9f7180000
delete,MemoryChunk,0x1c31e640000
delete,MemoryChunk,0xa27e440000
delete,MemoryChunk,0x23e15740000
delete,MemoryChunk,0x34abb640000
delete,MemoryChunk,0x206b2340000
delete,MemoryChunk,0x3e618fc0000
delete,MemoryChunk,0x374cae40000
delete,MemoryChunk,0x3c81fcc0000
delete,MemoryChunk,0x167c4640000
delete,MemoryChunk,0x5394640000
delete,MemoryChunk,0x14860d00000
delete,MemoryChunk,0x31a76e40000
delete,MemoryChunk,0x146bf440000
delete,MemoryChunk,0x85ccd00000
delete,MemoryChunk,0x21de3280000
delete,MemoryChunk,0x2523a700000
delete,MemoryChunk,0x29f73140000
delete,MemoryChunk,0x34893c40000
delete,MemoryChunk,0x3e1e5900000
delete,MemoryChunk,0x66f0140000
delete,MemoryChunk,0xa812c40000
delete,MemoryChunk,0x15005200000
delete,MemoryChunk,0x11ccdf40000
delete,MemoryChunk,0x6b5f100000
delete,MemoryChunk,0x28711040000
delete,MemoryChunk,0x36b443c0000
delete,MemoryChunk,0x1ffe2740000
delete,MemoryChunk,0x5ad1900000
delete,MemoryChunk,0x129f4dc0000
delete,MemoryChunk,0x3ea3d400000
delete,MemoryChunk,0x397e2100000
delete,MemoryChunk,0x190c5740000
delete,MemoryChunk,0x6127d00000
delete,MemoryChunk,0xed363c0000
delete,MemoryChunk,0x150c8e40000
delete,MemoryChunk,0x32d08fc0000
delete,MemoryChunk,0x11db1300000
delete,MemoryChunk,0x3f483b40000
delete,MemoryChunk,0x1b867b80000
delete,MemoryChunk,0x3b67b140000
delete,MemoryChunk,0x3bac780000
delete,MemoryChunk,0x22680880000
delete,MemoryChunk,0x1133d280000
delete,MemoryChunk,0x23091b40000
delete,MemoryChunk,0x167c4e80000
delete,MemoryChunk,0x10422ec0000
delete,MemoryChunk,0x2cfbc400000
delete,MemoryChunk,0x31732480000
delete,MemoryChunk,0x301685c0000
delete,MemoryChunk,0x2fba9b40000
delete,MemoryChunk,0x1dedc580000
delete,MemoryChunk,0x33f0be00000
delete,MemoryChunk,0xb354540000
delete,MemoryChunk,0x27ee5580000
delete,MemoryChunk,0x29bef00000
delete,MemoryChunk,0x2ede0c80000
delete,MemoryChunk,0x3197e8c0000
delete,MemoryChunk,0x231f2100000
tick,0x7ff6cbf12fc8,919181,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49965d,0x7ff64c49744d,0x7ff64c48e895,0x7ff64c49024f,0x13a35fb8782,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,926048,0x24f91a02ee6,113,runBlock file:///C:/coding/soodocode/build/statements.js:643:17,0x2c01bf486d0,~
code-source-info,0x24f91a02ee6,113,32797,33161,C0O32839C5O32857C10O32868C16O32890C21O32839C30O32898C35O32936C40O32950C46O32960C50O32936C55O32965C56O33006C63O33023C67O33038C72O33027C77O33060C84O33070C89O33108C94O33122C101O33132C105O33108C110O33137C112O33160,,
code-creation,JS,10,926333,0x24f91a031ee,170,run file:///C:/coding/soodocode/build/statements.js:463:12,0x2c01bf4a290,~
code-source-info,0x24f91a031ee,113,24116,24391,C0O24153C3O24194C25O24180C53O24180C56O24245C61O24265C67O24287C72O24245C81O24294C85O24315C87O24325C94O24169C158O24365C163O24365C169O24390,,
code-creation,JS,10,926430,0x24f91a033f6,2, file:///C:/coding/soodocode/scripts/profiler.js:29:81,0xc2df90ff10,~
code-source-info,0x24f91a033f6,103,783,792,C1O791,,
code-creation,JS,10,926577,0x24f91a036b6,34,step file:///C:/coding/soodocode/build/statements.js:878:13,0x2c01bf45860,~
code-source-info,0x24f91a036b6,113,45014,45126,C0O45053C5O45071C10O45082C16O45104C21O45053C30O45112C33O45116,,
tick,0x7ff863b7a16f,935182,0,0x0,1
code-creation,JS,13,940974,0x7ff64c4950c0,2304, file:///C:/coding/soodocode/build/runtime.js:115:50,0x5c3c42bd0,*
code-source-info,0x7ff64c4950c0,111,7080,7144,C0O7080C81O7085C209O7086C255O7094C301O7110C346O7132C383O7094C436O6556I0C480O6614I0C533O7140C680O7144C709O7080C840O6632I0C854O6708I0C889O6697I0C1050O6766I0C1198O6816I0C1240O6839I0C1271O6833I0C1347O6814I0C1360O6833I0C1367O6814I0C1396O6889I0C1459O6887I0C1516O6956I0C1543O7079I0C1548O7029I0C1611O7027I0C1671O7547I0C1700O7589I0C1731O6708I0C1773O7110,F0O7094,S0x2c01bf63718
code-creation,JS,13,946221,0x7ff64c499e80,7292,runBlock file:///C:/coding/soodocode/build/statements.js:828:17,0x2c01bf45fd0,*
code-source-info,0x7ff64c499exc2df92e970S0x2c01bf4a978S0x2c01bf63718
code-creation,JS,13,946586,0x7ff64c49bcc0,1088, file:///C:/coding/soodocode/build/runtime.js:122:46,0x5c3c42c70,*
code-source-info,0x7ff64c49bcc0,111,7661,7816,C0O7661C76O7668C145O7675C234O7698C290O7708C303O7720C337O7737C394O7744C441O7706C459O7761C472O7769C486O7737C494O7769C522O7776C529O7758C545O7798C550O7816C583O7661C629O7737C890O7761C939O7708,,
code-creation,JS,13,951056,0x7ff64c49c140,880, file:///C:/coding/soodocode/build/runtime.js:117:60,0x5c3c42c20,*
code-source-info,0x7ff64c49c140,111,7245,7390,C0O7245C76O7247C145O7254C234O7320C242O7280C255O7292C289O7309C348O7316C395O7278C416O7387C424O7390C486O7245C532O7309C758O7280,,
tick,0x7ff6ccaacd85,951249,0,0x0,4,0x7ff6cbdb3590,0x7ff64c4907c0,0x7ff64c477348,0x7ff64c477cca,0x7ff64c47a1c8,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,951681,0x7ff64c49c500,5260,runBlock file:///C:/coding/soodocode/build/runtime.js:777:21,0xc2df92e970,*
code-source-info,0x7ff64c49cx2c01bf4a978S0x2c01bf63718
code-creation,JS,13,960642,0x7ff64c49db80,464,resolveVariableType file:///C:/coding/soodocode/build/runtime.js:568:32,0xc2df92e438,*
code-source-info,0x7ff64c49db80,111,37001,37273,C0O37001C39O37046C66O37035C172O37138C198O37087C225O37076C230O37001C276O37035C351O37087C396O37046,,
code-creation,JS,13,963959,0x7ff64c49dd80,6164,runBlock file:///C:/coding/soodocode/build/statements.js:828:17,0x2c01bf45fd0,*
code-source-info,0x7ff64c49ddxc2df92e970S0x2c01bf4a978S0x2c01bf63718
code-creation,JS,13,966633,0x7ff64c49f7c0,9496,processArrayAccess file:///C:/coding/soodocode/build/runtime.js:103:31,0xc2df92e1f8,*
code-source-info,0x7ff64c49f7cxc2df92e438S0x5c3c42c70S0x5c3c42c20S0x5c3c42bd0S0x2c01bf63718
tick,0x7ff6cbebba8f,967155,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ee2fc,983196,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c48cf7b,0x7ff64c47a509,0x7ff64c48324b,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,987574,0x3a93f6423ee,58,SetVariableType file:///C:/coding/soodocode/build/runtime-types.js:137:16,0xc2df933360,~
code-source-info,0x3a93f6423ee,112,4612,4713,C3O4639C24O4639C36O4656C41O4666C45O4682C50O4696C57O4712,,
code-creation,JS,10,987684,0x3a93f642556,58,PointerVariableType file:///C:/coding/soodocode/build/runtime-types.js:99:16,0xc2df933040,~
code-source-info,0x3a93f642556,112,3546,3641,C3O3571C24O3571C36O3588C41O3598C45O3614C50O3626C57O3640,,
code-creation,JS,13,987767,0x7ff64c4a1e40,12000,evaluateToken file:///C:/coding/soodocode/build/runtime.js:472:26,0xc2df92e370,*
code-source-info,0x7ff64c4a1exc2df932be0S0xc2df92e528S0xc2df92e488S0xc2df92e758S0xc2df92db38
tick,0x7ff66c242e7e,999341,0,0x0,0,0x7ff64c49f96d,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2975e1c0000,262144
new,MemoryChunk,0x2a7bd7c0000,262144
new,MemoryChunk,0x13927880000,262144
new,MemoryChunk,0x19056e40000,262144
new,MemoryChunk,0x166f40c0000,262144
new,MemoryChunk,0x320a6e40000,262144
new,MemoryChunk,0x763ba00000,262144
new,MemoryChunk,0xf76eb80000,262144
new,MemoryChunk,0x17918100000,262144
tick,0x7ff66c332b14,1015182,0,0x0,0,0x7ff64c48324b,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda9303,1031157,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3dbeea40000,262144
new,MemoryChunk,0x33c6bf40000,262144
new,MemoryChunk,0x2d712d40000,262144
new,MemoryChunk,0xfdee880000,262144
new,MemoryChunk,0x1a22b40000,262144
new,MemoryChunk,0x3f528cc0000,262144
new,MemoryChunk,0x28ffbcc0000,262144
new,MemoryChunk,0x252ef340000,262144
new,MemoryChunk,0x2cca69c0000,262144
tick,0x7ff6cbf6d2e2,1047141,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc389,1062165,0,0x0,0,0x7ff64c4831f7,0x7ff64c49f96d,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b90ed00000,262144
new,MemoryChunk,0x1d32c240000,262144
new,MemoryChunk,0x202ee880000,262144
new,MemoryChunk,0x27126000000,262144
new,MemoryChunk,0x38bd0e80000,262144
new,MemoryChunk,0xa995f40000,262144
new,MemoryChunk,0x123cfa00000,262144
new,MemoryChunk,0xa5ee9c0000,262144
new,MemoryChunk,0x1efe9980000,262144
new,MemoryChunk,0x2b921f00000,262144
tick,0x7ff64c4833fe,1078223,0,0x0,0,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177dd,1094181,0,0x0,0,0x7ff64c4a1f01,0x7ff64c48324b,0x7ff64c49e7cc,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x21da1bc0000,262144
new,MemoryChunk,0x1d5dd840000,262144
new,MemoryChunk,0x1d0639c0000,262144
new,MemoryChunk,0x1b369680000,262144
new,MemoryChunk,0x5a916c0000,262144
new,MemoryChunk,0x3a93b180000,262144
new,MemoryChunk,0x1335a180000,262144
new,MemoryChunk,0xa9dbd80000,262144
new,MemoryChunk,0x34feb900000,262144
tick,0x7ff6cc2a8b7b,1110191,0,0x0,0,0x7ff66c2daafa,0x7ff64c49e82a,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2419c4,1126209,0,0x0,0,0x7ff64c49e7cc,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3ebf9c40000,262144
new,MemoryChunk,0x20726ec0000,262144
new,MemoryChunk,0x776a80000,262144
new,MemoryChunk,0x1ea12d00000,262144
new,MemoryChunk,0x335ce900000,262144
new,MemoryChunk,0x3dd5d100000,262144
new,MemoryChunk,0xdd16000000,262144
new,MemoryChunk,0x1bc61600000,262144
new,MemoryChunk,0x11d73880000,262144
tick,0x7ff64c48309b,1142229,0,0x0,0,0x7ff64c49e7cc,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x37dd6440000,262144
new,MemoryChunk,0x16bc8780000,262144
new,MemoryChunk,0x2761bcc0000,262144
tick,0x7ff6cc075060,1158232,0,0x0,1
new,MemoryChunk,0x2b926500000,262144
new,MemoryChunk,0x9d5eb00000,262144
new,MemoryChunk,0x15d3e2c0000,262144
new,MemoryChunk,0xd4a1740000,262144
new,MemoryChunk,0x32156dc0000,262144
code-creation,JS,10,1162638,0x1bc616398be,34,ExpressionASTFunctionCallNode file:///C:/coding/soodocode/build/parser-types.js:30:16,0xc2df928760,~
code-source-info,0x1bc616398be,110,1139,1329,C0O1181C2O1199C6O1223C8O1233C12O1249C14O1264C18O1298C24O1298C28O1296C33O1328,,
code-creation,JS,10,1162759,0x1bc61639a2e,34,ExpressionASTClassInstantiationNode file:///C:/coding/soodocode/build/parser-types.js:47:16,0xc2df9288a0,~
code-source-info,0x1bc61639a2e,110,1711,1892,C0O1750C2O1765C6O1786C8O1796C12O1812C14O1827C18O1861C24O1861C28O1859C33O1891,,
code-creation,JS,13,1162862,0x7ff64c4a4f80,5980,evaluateExpr file:///C:/coding/soodocode/build/runtime.js:250:25,0xc2df92e320,*
code-source-info,0x7ff64c4a4f80,111,16319,31784,C0O16319C47O16370C79O16476C106O16465C236O16515C316O16541C342O16578C369O16567C492O16639C531O16830C629O6556I0C726O6614I0C780O16868C785O16678C817O16923C844O16912C940O16985C945O19441C972O19430C1068O19509C1073O20301C1105O20310C1109O20319C1154O24448C1196O24470C1235O24575C1265O24583C1293O24585C1450O24672C1529O24690C1701O24737C1728O24742C1755O24744C1760O24909C1790O25005C1814O25014C1842O25019C1884O25488C1940O25506C1944O25511C1991O25488C2055O25483C2083O25464C2152O25475C2242O25589C2287O25607C2314O25612C2360O25589C2421O25584C2449O25563C2515O25575C2592O25670C2616O25711C2643O25721C2691O25850C2696O25767C2772O27313C2858O27321C2866O27334C2874O27341C2882O25101C2887O24917C2914O24939C2919O24615C2943O24624C2948O24505C2979O24550C3003O20409C3030O20419C3035O16413C3066O16431C3086O16319C3141O16465C3230O16567C3330O6632I0C3344O6708I0C3379O6697I0C3596O6746I0C3755O6766I0C3905O6816I0C3937O6839I0C3968O6833I0C4044O6814I0C4057O6833I0C4064O6814I0C4093O6889I0C4156O6887I0C4235O6956I0C4270O7079I0C4275O7029I0C4341O7027I0C4401O7547I0C4422O7589I0C4453O6746I0C4491O6708I0C4530O16678C4578O16912C4664O19430C4750O24585C4806O24672C4862O24690C4918O24742C4965O24737C5035O25711C5082O24917C5125O24505C5164O20409C5207O19441C5249O16923C5291O16578C5333O16476C5375O16413,F0O16830,S0x2c01bf63718
tick,0x7ff6cc2a5beb,1174177,0,0x0,0,0x7ff66c2daafa,0x7ff64c49e82a,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5441b00000,262144
new,MemoryChunk,0x1671da40000,262144
new,MemoryChunk,0x29d07780000,262144
tick,0x7ff6cc06a9d8,1189792,0,0x0,1
new,MemoryChunk,0x3c3786c0000,262144
new,MemoryChunk,0xf2840c0000,262144
new,MemoryChunk,0x10be6640000,262144
new,MemoryChunk,0x1787e480000,262144
new,MemoryChunk,0xb564d40000,262144
new,MemoryChunk,0x27d81180000,262144
new,MemoryChunk,0x264ae640000,262144
new,MemoryChunk,0x1011ed40000,262144
tick,0x7ff6cc0f378a,1205703,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b80ee40000,262144
new,MemoryChunk,0x23cd1000000,262144
new,MemoryChunk,0x13efe1c0000,262144
new,MemoryChunk,0x335fdf00000,262144
new,MemoryChunk,0x2c668ec0000,262144
new,MemoryChunk,0x38086cc0000,262144
new,MemoryChunk,0x2f1aa580000,262144
new,MemoryChunk,0x367c4900000,262144
new,MemoryChunk,0x36e63580000,262144
new,MemoryChunk,0x21e30900000,262144
new,MemoryChunk,0x1135bb40000,262144
tick,0x7ff6cc0ffc9d,1221719,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fe25,1237830,0,0x0,0,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x24f91a02f18,0x13a35fb8782,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3540c740000,262144
new,MemoryChunk,0x2f897140000,262144
new,MemoryChunk,0x16e8ac00000,262144
new,MemoryChunk,0x3adec940000,262144
new,MemoryChunk,0x17ad8600000,262144
new,MemoryChunk,0x8fc4080000,262144
new,MemoryChunk,0xa66df00000,262144
new,MemoryChunk,0x2c247a40000,262144
tick,0x7ff6cbf6d326,1253694,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06f655,1269710,0,0x0,1
new,MemoryChunk,0x1c4c7300000,262144
new,MemoryChunk,0x12065200000,262144
new,MemoryChunk,0x1bebc200000,262144
new,MemoryChunk,0x2d912c00000,262144
new,MemoryChunk,0x3fe227c0000,262144
new,MemoryChunk,0x103c6240000,262144
new,MemoryChunk,0x39f77f80000,262144
new,MemoryChunk,0x1f969480000,262144
new,MemoryChunk,0x1f7d7940000,262144
tick,0x7ff66c2dbe56,1285708,0,0x0,0,0x7ff64c4a2958,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2780c740000,262144
new,MemoryChunk,0x17fafcc0000,262144
new,MemoryChunk,0xa75200000,262144
new,MemoryChunk,0x2c2b0440000,262144
new,MemoryChunk,0x26eb69c0000,262144
new,MemoryChunk,0xaadd540000,262144
new,MemoryChunk,0x34503580000,262144
new,MemoryChunk,0x1d09e7c0000,262144
new,MemoryChunk,0x1a7048c0000,262144
new,MemoryChunk,0x97cbe40000,262144
tick,0x7ff863c10a14,1301684,0,0x0,1
tick,0x7ff6cbeb4da6,1317718,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xa476080000,262144
new,MemoryChunk,0x3f41fc00000,262144
new,MemoryChunk,0x3f22a280000,262144
new,MemoryChunk,0x1e153440000,262144
new,MemoryChunk,0x29c4fa40000,262144
new,MemoryChunk,0x250ded80000,262144
new,MemoryChunk,0x2e9d90c0000,262144
new,MemoryChunk,0x1f46e740000,262144
new,MemoryChunk,0x3ce1f880000,262144
new,MemoryChunk,0x1f1a400000,262144
new,MemoryChunk,0x22ba00c0000,262144
tick,0x7ff6cbebcec8,1333702,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x174ce580000,262144
new,MemoryChunk,0x13948840000,262144
tick,0x7ff6cc06d7a9,1349858,0,0x0,1
new,MemoryChunk,0x143aad40000,262144
new,MemoryChunk,0xf0634c0000,262144
new,MemoryChunk,0xb673880000,262144
new,MemoryChunk,0x3ebfaf00000,262144
new,MemoryChunk,0x33a1b3c0000,262144
new,MemoryChunk,0xa6dcb40000,262144
delete,MemoryChunk,0x25417680000
delete,MemoryChunk,0x432bc0000
delete,MemoryChunk,0x3658f2c0000
delete,MemoryChunk,0x19056e40000
delete,MemoryChunk,0x328c78c0000
delete,MemoryChunk,0xfdee880000
delete,MemoryChunk,0x763ba00000
delete,MemoryChunk,0x3dbeea40000
delete,MemoryChunk,0x3f528cc0000
delete,MemoryChunk,0x252ef340000
delete,MemoryChunk,0x202ee880000
delete,MemoryChunk,0x38bd0e80000
delete,MemoryChunk,0x28ffbcc0000
delete,MemoryChunk,0x1b90ed00000
delete,MemoryChunk,0x2b921f00000
delete,MemoryChunk,0x1d32c240000
delete,MemoryChunk,0xa995f40000
delete,MemoryChunk,0x27126000000
delete,MemoryChunk,0x1d5dd840000
delete,MemoryChunk,0x5a916c0000
delete,MemoryChunk,0x1b369680000
delete,MemoryChunk,0x1d0639c0000
delete,MemoryChunk,0xa5ee9c0000
delete,MemoryChunk,0x21da1bc0000
delete,MemoryChunk,0x1335a180000
delete,MemoryChunk,0x3ebf9c40000
delete,MemoryChunk,0x335ce900000
delete,MemoryChunk,0x20726ec0000
delete,MemoryChunk,0x1ea12d00000
delete,MemoryChunk,0x3dd5d100000
delete,MemoryChunk,0xdd16000000
delete,MemoryChunk,0x776a80000
delete,MemoryChunk,0x2761bcc0000
delete,MemoryChunk,0x9d5eb00000
delete,MemoryChunk,0x16bc8780000
delete,MemoryChunk,0x2b926500000
delete,MemoryChunk,0x37dd6440000
delete,MemoryChunk,0xd4a1740000
delete,MemoryChunk,0x5441b00000
delete,MemoryChunk,0x1efe9980000
delete,MemoryChunk,0x1011ed40000
delete,MemoryChunk,0x27d81180000
delete,MemoryChunk,0x3c3786c0000
delete,MemoryChunk,0x15d3e2c0000
delete,MemoryChunk,0x29d07780000
delete,MemoryChunk,0x1671da40000
delete,MemoryChunk,0xf2840c0000
delete,MemoryChunk,0x10be6640000
delete,MemoryChunk,0x1787e480000
delete,MemoryChunk,0x264ae640000
delete,MemoryChunk,0x38086cc0000
delete,MemoryChunk,0x2f1aa580000
delete,MemoryChunk,0x36e63580000
delete,MemoryChunk,0x2c668ec0000
delete,MemoryChunk,0x23cd1000000
delete,MemoryChunk,0x3a93b180000
delete,MemoryChunk,0x3adec940000
delete,MemoryChunk,0x2f897140000
delete,MemoryChunk,0x8fc4080000
delete,MemoryChunk,0x3540c740000
delete,MemoryChunk,0x17ad8600000
delete,MemoryChunk,0x2c247a40000
delete,MemoryChunk,0x12065200000
delete,MemoryChunk,0x1135bb40000
delete,MemoryChunk,0x103c6240000
delete,MemoryChunk,0x1f969480000
delete,MemoryChunk,0x16e8ac00000
delete,MemoryChunk,0x2d912c00000
delete,MemoryChunk,0x3fe227c0000
delete,MemoryChunk,0x1bebc200000
delete,MemoryChunk,0x39f77f80000
delete,MemoryChunk,0x1f7d7940000
delete,MemoryChunk,0x1c4c7300000
delete,MemoryChunk,0xb564d40000
delete,MemoryChunk,0x367c4900000
delete,MemoryChunk,0x26eb69c0000
delete,MemoryChunk,0x2c2b0440000
delete,MemoryChunk,0x11d73880000
delete,MemoryChunk,0xaadd540000
delete,MemoryChunk,0x34503580000
delete,MemoryChunk,0x17fafcc0000
delete,MemoryChunk,0x97cbe40000
delete,MemoryChunk,0xa75200000
delete,MemoryChunk,0x3f41fc00000
delete,MemoryChunk,0x34feb900000
delete,MemoryChunk,0x2cca69c0000
delete,MemoryChunk,0x3f22a280000
delete,MemoryChunk,0x1e153440000
delete,MemoryChunk,0x250ded80000
delete,MemoryChunk,0xa476080000
delete,MemoryChunk,0x29c4fa40000
delete,MemoryChunk,0x2e9d90c0000
delete,MemoryChunk,0x22ba00c0000
delete,MemoryChunk,0x1f1a400000
delete,MemoryChunk,0xf0634c0000
delete,MemoryChunk,0x17918100000
delete,MemoryChunk,0x166f40c0000
delete,MemoryChunk,0xf76eb80000
delete,MemoryChunk,0xa6dcb40000
delete,MemoryChunk,0x1f46e740000
delete,MemoryChunk,0x143aad40000
delete,MemoryChunk,0xa9dbd80000
delete,MemoryChunk,0x174ce580000
delete,MemoryChunk,0x1d09e7c0000
delete,MemoryChunk,0xb673880000
delete,MemoryChunk,0x123cfa00000
delete,MemoryChunk,0x3ebfaf00000
delete,MemoryChunk,0x33a1b3c0000
delete,MemoryChunk,0x32156dc0000
delete,MemoryChunk,0x13948840000
tick,0x7ff6cbf1c3dd,1364671,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec6b37,1380723,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c299b29,1396715,0,0x0,0,0x7ff64c49e82a,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,1413149,0,0x0,1
tick,0x7ff66c2dc36f,1428703,0,0x0,0,0x7ff64c4a2958,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49e372,1444734,0,0x0,0,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c494fc4,1460836,0,0x0,0,0x7ff64c4a32e1,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x265ac240000,262144
new,MemoryChunk,0x123b7ac0000,262144
new,MemoryChunk,0x32dfb180000,262144
new,MemoryChunk,0x10ec5900000,262144
new,MemoryChunk,0x4028880000,262144
new,MemoryChunk,0x3a8ae7c0000,262144
tick,0x7ff6cbf1c418,1476748,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c30a011,1492749,0,0x0,0,0x7ff64c49ea88,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1edbc100000,262144
new,MemoryChunk,0x22a13480000,262144
new,MemoryChunk,0x3b8f4400000,262144
new,MemoryChunk,0x12b46140000,262144
new,MemoryChunk,0x3c0356c0000,262144
new,MemoryChunk,0x1bfd4700000,262144
new,MemoryChunk,0x2f16cac0000,262144
new,MemoryChunk,0x7bb53c0000,262144
tick,0x7ff66c2dc0b2,1508728,0,0x0,0,0x7ff64c4a1f01,0x7ff64c4a50bc,0x7ff64c49e7cc,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2b6acf00000,262144
new,MemoryChunk,0x10a1c180000,262144
new,MemoryChunk,0x1244e740000,262144
new,MemoryChunk,0xb350cc0000,262144
new,MemoryChunk,0x1e40040000,262144
new,MemoryChunk,0x33983580000,262144
new,MemoryChunk,0x21fc41c0000,262144
new,MemoryChunk,0x1be58580000,262144
new,MemoryChunk,0x2f332280000,262144
new,MemoryChunk,0x16478880000,262144
new,MemoryChunk,0x88e1fc0000,262144
tick,0x7ff6cbec37f2,1524707,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c30b3d2,1540692,0,0x0,0,0x7ff64c49ea88,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x26bc8b80000,262144
new,MemoryChunk,0x3440f4c0000,262144
new,MemoryChunk,0xb33df40000,262144
new,MemoryChunk,0x25202500000,262144
new,MemoryChunk,0x27ac1a80000,262144
new,MemoryChunk,0x2e3c5640000,262144
new,MemoryChunk,0x1aff7600000,262144
new,MemoryChunk,0x2c208080000,262144
new,MemoryChunk,0x177c1a80000,262144
tick,0x7ff6cbec2a4d,1556685,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0f2362,1572727,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2993b00000,262144
new,MemoryChunk,0x3ba65540000,262144
new,MemoryChunk,0x320e6500000,262144
new,MemoryChunk,0x23aba4c0000,262144
new,MemoryChunk,0x1dda5480000,262144
new,MemoryChunk,0x3b804b00000,262144
new,MemoryChunk,0x34908d40000,262144
new,MemoryChunk,0x15df4380000,262144
new,MemoryChunk,0x3d62edc0000,262144
new,MemoryChunk,0x30ae52c0000,262144
tick,0x7ff6cbda64dc,1588703,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5149bc0000,262144
new,MemoryChunk,0x38dd7d40000,262144
new,MemoryChunk,0x19877040000,262144
new,MemoryChunk,0x19d15180000,262144
new,MemoryChunk,0x31bbabc0000,262144
new,MemoryChunk,0x526afc0000,262144
new,MemoryChunk,0x11630f80000,262144
new,MemoryChunk,0x3784db80000,262144
new,MemoryChunk,0x2bf90700000,262144
tick,0x7ff6cc3177dd,1604706,0,0x0,0,0x7ff64c4a1eda,0x7ff64c4a50bc,0x7ff64c49e7cc,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c3f3,1620868,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xdaf6700000,262144
new,MemoryChunk,0x36345e00000,262144
new,MemoryChunk,0x32aec800000,262144
new,MemoryChunk,0x22e1c680000,262144
new,MemoryChunk,0x2bb69b80000,262144
new,MemoryChunk,0x1cb54240000,262144
new,MemoryChunk,0x12f6500000,262144
new,MemoryChunk,0xdde06c0000,262144
new,MemoryChunk,0x61c51c0000,262144
new,MemoryChunk,0x19a9e640000,262144
tick,0x7ff6cc0f23bd,1636743,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x255a8e80000,262144
new,MemoryChunk,0xa4044c0000,262144
new,MemoryChunk,0x13b0ed80000,262144
new,MemoryChunk,0xc88700000,262144
new,MemoryChunk,0x15cca8c0000,262144
new,MemoryChunk,0x72db7c0000,262144
new,MemoryChunk,0x38323600000,262144
new,MemoryChunk,0x2ef16500000,262144
new,MemoryChunk,0x2e5e2b00000,262144
tick,0x7ff66c2dbf85,1652695,0,0x0,0,0x7ff64c4a32bb,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0fd1ec,1668703,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x61ee9c0000,262144
new,MemoryChunk,0x3cee7d80000,262144
new,MemoryChunk,0x2598fd00000,262144
new,MemoryChunk,0x9aa7440000,262144
new,MemoryChunk,0x12026b00000,262144
new,MemoryChunk,0x17196d40000,262144
new,MemoryChunk,0x1b41af40000,262144
new,MemoryChunk,0x282b87c0000,262144
new,MemoryChunk,0x168459c0000,262144
tick,0x7ff6cc130245,1684748,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1bb11340000,262144
new,MemoryChunk,0x2d0158c0000,262144
new,MemoryChunk,0x2c6bb780000,262144
new,MemoryChunk,0x309c6a00000,262144
tick,0x7ff863c0d2e4,1700728,0,0x0,1
new,MemoryChunk,0x1fb09a40000,262144
new,MemoryChunk,0x1d5cf80000,262144
new,MemoryChunk,0x3b39f600000,262144
new,MemoryChunk,0x20421f40000,262144
new,MemoryChunk,0x375e9c00000,262144
new,MemoryChunk,0x10eb8400000,262144
tick,0x7ff66c2dc0b2,1715716,0,0x0,0,0x7ff64c4a1eda,0x7ff64c4a50bc,0x7ff64c49e7cc,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x24748f00000,262144
new,MemoryChunk,0x2b3d5140000,262144
new,MemoryChunk,0x3eed5c00000,262144
new,MemoryChunk,0x1fae0dc0000,262144
new,MemoryChunk,0x20fea880000,262144
new,MemoryChunk,0x16426e00000,262144
new,MemoryChunk,0x15c7340000,262144
new,MemoryChunk,0x2b274240000,262144
new,MemoryChunk,0x1ae92180000,262144
tick,0x7ff6cbdab42f,1731759,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc103f67,1747768,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3ada5900000,262144
new,MemoryChunk,0x55f83c0000,262144
new,MemoryChunk,0x4e9fe40000,262144
new,MemoryChunk,0x17fc2600000,262144
new,MemoryChunk,0xbd7880000,262144
new,MemoryChunk,0x29e9da40000,262144
new,MemoryChunk,0x328ac540000,262144
new,MemoryChunk,0x17701500000,262144
new,MemoryChunk,0x58acbc0000,262144
delete,MemoryChunk,0xa66df00000
tick,0x7ff863c0d0e4,1763707,0,0x0,1
delete,MemoryChunk,0x21e30900000
delete,MemoryChunk,0x2780c740000
delete,MemoryChunk,0x1a7048c0000
delete,MemoryChunk,0x123b7ac0000
delete,MemoryChunk,0x265ac240000
delete,MemoryChunk,0x3ce1f880000
delete,MemoryChunk,0x32dfb180000
delete,MemoryChunk,0x10ec5900000
delete,MemoryChunk,0x12b46140000
delete,MemoryChunk,0x3b8f4400000
delete,MemoryChunk,0x3c0356c0000
delete,MemoryChunk,0x2f16cac0000
delete,MemoryChunk,0x1edbc100000
delete,MemoryChunk,0x7bb53c0000
delete,MemoryChunk,0x22a13480000
delete,MemoryChunk,0x2b6acf00000
delete,MemoryChunk,0x10a1c180000
delete,MemoryChunk,0x1e40040000
delete,MemoryChunk,0x4028880000
delete,MemoryChunk,0x1244e740000
delete,MemoryChunk,0x33983580000
delete,MemoryChunk,0x9dea440000
delete,MemoryChunk,0x16478880000
delete,MemoryChunk,0x2f332280000
delete,MemoryChunk,0x1be58580000
delete,MemoryChunk,0xb350cc0000
delete,MemoryChunk,0x21fc41c0000
delete,MemoryChunk,0x3a8ae7c0000
delete,MemoryChunk,0x25202500000
delete,MemoryChunk,0x177c1a80000
delete,MemoryChunk,0x3440f4c0000
delete,MemoryChunk,0x2e3c5640000
delete,MemoryChunk,0x1bfd4700000
delete,MemoryChunk,0xb33df40000
delete,MemoryChunk,0x1aff7600000
delete,MemoryChunk,0x26bc8b80000
delete,MemoryChunk,0x27ac1a80000
delete,MemoryChunk,0x2993b00000
delete,MemoryChunk,0x1dda5480000
delete,MemoryChunk,0x23aba4c0000
delete,MemoryChunk,0x3b804b00000
delete,MemoryChunk,0x3ba65540000
delete,MemoryChunk,0x320e6500000
delete,MemoryChunk,0x30ae52c0000
delete,MemoryChunk,0x34908d40000
delete,MemoryChunk,0x15df4380000
delete,MemoryChunk,0x19877040000
delete,MemoryChunk,0x38dd7d40000
delete,MemoryChunk,0x31bbabc0000
delete,MemoryChunk,0x5149bc0000
delete,MemoryChunk,0x3784db80000
delete,MemoryChunk,0x526afc0000
delete,MemoryChunk,0x2bf90700000
delete,MemoryChunk,0xdaf6700000
delete,MemoryChunk,0x22e1c680000
delete,MemoryChunk,0x12f6500000
delete,MemoryChunk,0x32aec800000
delete,MemoryChunk,0x1cb54240000
delete,MemoryChunk,0x13b0ed80000
delete,MemoryChunk,0x72db7c0000
delete,MemoryChunk,0x15cca8c0000
delete,MemoryChunk,0x11630f80000
delete,MemoryChunk,0x2e5e2b00000
delete,MemoryChunk,0x255a8e80000
delete,MemoryChunk,0x38323600000
delete,MemoryChunk,0x17196d40000
delete,MemoryChunk,0x168459c0000
delete,MemoryChunk,0x3cee7d80000
delete,MemoryChunk,0x12026b00000
delete,MemoryChunk,0x1b41af40000
delete,MemoryChunk,0x61ee9c0000
delete,MemoryChunk,0x36345e00000
delete,MemoryChunk,0x9aa7440000
delete,MemoryChunk,0x282b87c0000
delete,MemoryChunk,0x2d0158c0000
delete,MemoryChunk,0x309c6a00000
delete,MemoryChunk,0x2c6bb780000
delete,MemoryChunk,0x1d5cf80000
delete,MemoryChunk,0x3b39f600000
delete,MemoryChunk,0x375e9c00000
delete,MemoryChunk,0x1bb11340000
delete,MemoryChunk,0x19a9e640000
delete,MemoryChunk,0x20421f40000
delete,MemoryChunk,0x24748f00000
delete,MemoryChunk,0x3d62edc0000
delete,MemoryChunk,0x15c7340000
delete,MemoryChunk,0x2b3d5140000
delete,MemoryChunk,0x1fae0dc0000
delete,MemoryChunk,0x3eed5c00000
delete,MemoryChunk,0x20fea880000
delete,MemoryChunk,0x58acbc0000
delete,MemoryChunk,0x2ef16500000
delete,MemoryChunk,0x55f83c0000
delete,MemoryChunk,0x2b274240000
delete,MemoryChunk,0x3ada5900000
delete,MemoryChunk,0x17fc2600000
delete,MemoryChunk,0x328ac540000
delete,MemoryChunk,0x17701500000
delete,MemoryChunk,0x29e9da40000
delete,MemoryChunk,0x10eb8400000
delete,MemoryChunk,0x4e9fe40000
tick,0x7ff66c30ab5f,1779808,0,0x0,0,0x7ff64c49ea88,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb140,1795769,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdab4c3,1811730,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbba9245,1826743,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a2a77,1842723,0,0x0,0,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf181cf,1858802,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2881e3,1874761,0,0x0,0,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc687012,1890777,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x43c5380000,262144
new,MemoryChunk,0x2ae24480000,262144
new,MemoryChunk,0xc996c40000,262144
new,MemoryChunk,0x388d8700000,262144
new,MemoryChunk,0x3fb03b40000,262144
new,MemoryChunk,0xce2d6c0000,262144
new,MemoryChunk,0x299bb800000,262144
new,MemoryChunk,0xc5e9640000,262144
tick,0x7ff64c49f923,1906742,0,0x0,0,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe93817,1922747,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x10db2240000,262144
new,MemoryChunk,0x3f836e40000,262144
new,MemoryChunk,0x2119e140000,262144
new,MemoryChunk,0x2d026c80000,262144
new,MemoryChunk,0x2f13c2c0000,262144
new,MemoryChunk,0x6c8a200000,262144
new,MemoryChunk,0x216469c0000,262144
new,MemoryChunk,0x363e62c0000,262144
new,MemoryChunk,0x1710bfc0000,262144
new,MemoryChunk,0x1a0e6d00000,262144
tick,0x7ff6cbf6d343,1938800,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2d1efe00000,262144
new,MemoryChunk,0x2c504c80000,262144
new,MemoryChunk,0x1c405300000,262144
new,MemoryChunk,0x19f60900000,262144
new,MemoryChunk,0x3280100000,262144
tick,0x7ff6cc06dcd9,1954727,0,0x0,1
new,MemoryChunk,0x3296c640000,262144
new,MemoryChunk,0x32273800000,262144
tick,0x7ff64c4a0d6d,1970779,0,0x0,0,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xef36b00000,262144
new,MemoryChunk,0x347ae380000,262144
new,MemoryChunk,0x7c57980000,262144
new,MemoryChunk,0x2e152b40000,262144
new,MemoryChunk,0x15fc80000,262144
new,MemoryChunk,0x13a1d840000,262144
new,MemoryChunk,0x2fc2bec0000,262144
new,MemoryChunk,0x25ba9340000,262144
new,MemoryChunk,0x148ff240000,262144
new,MemoryChunk,0xbf4e700000,262144
new,MemoryChunk,0x5658600000,262144
tick,0x7ff6cc0eb4b0,1986794,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a53b,2002754,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x15cef7c0000,262144
new,MemoryChunk,0x3dcd7fc0000,262144
new,MemoryChunk,0x323b1240000,262144
new,MemoryChunk,0x2160d3c0000,262144
new,MemoryChunk,0x2f31e840000,262144
new,MemoryChunk,0xb401c40000,262144
new,MemoryChunk,0x17e87780000,262144
new,MemoryChunk,0x142c6ac0000,262144
tick,0x7ff6cbeb0803,2018783,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe950ee,2034764,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x24f91a02f18,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,11,2036361,0x7ff64c47dbc0,1304,run file:///C:/coding/soodocode/build/statements.js:463:12,0x2c01bf4a290,^
code-source-info,0x7ff64c47dbc0,113,24116,24391,,,
code-creation,JS,11,2036429,0x7ff64c47e100,92,get value file:///C:/coding/soodocode/build/statements.js:252:26,0x13a35fb94a8,^
code-source-info,0x7ff64c47e100,113,12516,12536,,,
code-creation,JS,11,2036484,0x7ff64c47e180,764,runBlock file:///C:/coding/soodocode/build/statements.js:643:17,0x2c01bf486d0,^
code-source-info,0x7ff64c47e180,113,32797,33161,,,
code-creation,JS,11,2036525,0x7ff64c47e4c0,44, file:///C:/coding/soodocode/scripts/profiler.js:29:81,0xc2df90ff10,^
code-source-info,0x7ff64c47e4c0,103,783,792,,,
code-creation,JS,11,2036569,0x7ff64c47e500,252,step file:///C:/coding/soodocode/build/statements.js:878:13,0x2c01bf45860,^
code-source-info,0x7ff64c47e500,113,45014,45126,,,
new,MemoryChunk,0x7be7f40000,262144
new,MemoryChunk,0x9793500000,262144
new,MemoryChunk,0x327af240000,262144
new,MemoryChunk,0x1a5a54c0000,262144
new,MemoryChunk,0x3c9ec6c0000,262144
new,MemoryChunk,0x213cbc00000,262144
new,MemoryChunk,0x90a9d40000,262144
new,MemoryChunk,0xcb68900000,262144
new,MemoryChunk,0x3f0e2240000,262144
new,MemoryChunk,0x3926f40000,262144
code-creation,JS,13,2047816,0x7ff64c47e640,2376,runBlock file:///C:/coding/soodocode/build/statements.js:643:17,0x2c01bf486d0,*
code-source-info,0x7ff64c47ex2c01bf63718
tick,0x7ff6cbf13534,2050738,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbe5e,2066711,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x30f11c40000,262144
new,MemoryChunk,0xe1fe40000,262144
new,MemoryChunk,0x16d49300000,262144
new,MemoryChunk,0x39135980000,262144
new,MemoryChunk,0x29103a80000,262144
new,MemoryChunk,0x3b111d00000,262144
new,MemoryChunk,0x9221c0000,262144
new,MemoryChunk,0x1b850a80000,262144
new,MemoryChunk,0x36b9a2c0000,262144
tick,0x7ff6cc0f36d5,2082765,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xc170300000,262144
new,MemoryChunk,0x1879f540000,262144
new,MemoryChunk,0x3b7ae740000,262144
tick,0x7ff863c0d0e4,2098836,0,0x0,1
new,MemoryChunk,0x77c2a00000,262144
new,MemoryChunk,0x1bdf5200000,262144
new,MemoryChunk,0x37cd29c0000,262144
new,MemoryChunk,0xde6ec40000,262144
new,MemoryChunk,0x24cbbc40000,262144
new,MemoryChunk,0x34b0eec0000,262144
tick,0x7ff6cc0fd185,2114734,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x58a70c0000,262144
new,MemoryChunk,0x3767e540000,262144
new,MemoryChunk,0x19e4c080000,262144
new,MemoryChunk,0x2c0bb780000,262144
new,MemoryChunk,0x21b9dc0000,262144
new,MemoryChunk,0x1ec60080000,262144
new,MemoryChunk,0x145e440000,262144
new,MemoryChunk,0x3df20580000,262144
new,MemoryChunk,0x29900b40000,262144
tick,0x7ff64c4a5044,2130930,0,0x0,0,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a0766,2146784,0,0x0,0,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,2147905,0x7ff64c492f80,3472,coerceValue file:///C:/coding/soodocode/build/runtime.js:640:24,0xc2df92e758,*
code-source-info,0x7ff64c492f80,111,40609,41539,C0O40609C47O40645C61O40649C80O2861I0C160O2884I0C195O2957I0C222O2946I0C300O2991I0C317O2980I0C322O3199I0C349O3188I0C427O3235I0C444O3224I0C449O3315I0C476O3304I0C555O3347I0C572O3336I0C577O40730C723O40749C752O40820C903O40840C1053O40885C1083O40911C1233O40928C1383O40975C1452O40988C1555O41012C1705O41057C1915O41154C1959O41165C1964O41211C1991O41200C1996O41339C2023O41328C2028O2904I0C2033O40704C2042O40609C2088O2884I0C2145O2946I0C2251O2991I0C2302O3188I0C2403O3235I0C2451O3304I0C2542O3347I0C2590O40730C2646O40820C2702O40840C2758O40911C2814O40928C2870O40988C2919O41012C2975O41057C3031O41154C3057O41211C3100O41339C3143O3315I0C3186O3199I0C3229O2957I0,F0O40649,S0xc2df92db38
new,MemoryChunk,0x9590f80000,262144
new,MemoryChunk,0x29024640000,262144
new,MemoryChunk,0x39b01f40000,262144
new,MemoryChunk,0x2b45b240000,262144
new,MemoryChunk,0x39097a40000,262144
new,MemoryChunk,0x29406bc0000,262144
new,MemoryChunk,0x19e8b600000,262144
new,MemoryChunk,0x17139680000,262144
new,MemoryChunk,0x1a060480000,262144
tick,0x7ff6cc0f3746,2162752,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0c5240,2178769,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x13bd2040000,262144
new,MemoryChunk,0x7ae3e40000,262144
new,MemoryChunk,0x36765640000,262144
new,MemoryChunk,0x38b92cc0000,262144
new,MemoryChunk,0x2ea42d80000,262144
new,MemoryChunk,0x2189a6c0000,262144
new,MemoryChunk,0x23f23c0000,262144
tick,0x7ff6cbec29ba,2194803,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,2210531,0x7ff64c493dc0,2436,run file:///C:/coding/soodocode/build/statements.js:463:12,0x2c01bf4a290,*
code-source-info,0x7ff64c493dc0,113,24116,24391,C0O24116C47O24194C84O24245C92O24194C214O24180C322O24245C362O24265C389O24287C427O24245C480O6556I1C547O6614I1C601O24294C658O24325C713O24169C726O24325C740O24169C830O24365C876O24390C905O24169C936O24116C1029O24169C1069O6632I1C1083O6708I1C1118O6697I1C1287O6766I1C1435O6816I1C1477O6839I1C1508O6833I1C1584O6814I1C1597O6833I1C1604O6814I1C1633O6889I1C1696O6887I1C1753O6956I1C1780O7079I1C1785O7029I1C1845O7027I1C1905O7547I1C1934O7589I1C1965O6708I1C2016O24265,F0O24365F1O24245,S0xc2df90ff10S0x2c01bf63718
tick,0x7ff6ccaba9ab,2210809,0,0x0,4,0x7ff6cbdb3590,0x7ff64c495042,0x7ff64c4a32e1,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
delete,MemoryChunk,0x88e1fc0000
delete,MemoryChunk,0x1fb09a40000
delete,MemoryChunk,0xc88700000
delete,MemoryChunk,0x16426e00000
delete,MemoryChunk,0x2598fd00000
delete,MemoryChunk,0x2bb69b80000
delete,MemoryChunk,0x43c5380000
delete,MemoryChunk,0xbd7880000
delete,MemoryChunk,0xce2d6c0000
delete,MemoryChunk,0x299bb800000
delete,MemoryChunk,0x2ae24480000
delete,MemoryChunk,0xc5e9640000
delete,MemoryChunk,0x1ae92180000
delete,MemoryChunk,0x388d8700000
delete,MemoryChunk,0x10db2240000
delete,MemoryChunk,0x2d026c80000
delete,MemoryChunk,0x2119e140000
delete,MemoryChunk,0x2f13c2c0000
delete,MemoryChunk,0x216469c0000
delete,MemoryChunk,0x6c8a200000
delete,MemoryChunk,0x363e62c0000
delete,MemoryChunk,0x1c405300000
delete,MemoryChunk,0x1710bfc0000
delete,MemoryChunk,0x2c504c80000
delete,MemoryChunk,0x3f836e40000
delete,MemoryChunk,0x3280100000
delete,MemoryChunk,0xef36b00000
delete,MemoryChunk,0x3296c640000
delete,MemoryChunk,0x2e152b40000
delete,MemoryChunk,0x347ae380000
delete,MemoryChunk,0x15fc80000
delete,MemoryChunk,0x7c57980000
delete,MemoryChunk,0x13a1d840000
delete,MemoryChunk,0x5658600000
delete,MemoryChunk,0x2160d3c0000
delete,MemoryChunk,0x323b1240000
delete,MemoryChunk,0x142c6ac0000
delete,MemoryChunk,0x3dcd7fc0000
delete,MemoryChunk,0x2f31e840000
delete,MemoryChunk,0x2fc2bec0000
delete,MemoryChunk,0x25ba9340000
delete,MemoryChunk,0x17e87780000
delete,MemoryChunk,0x9793500000
delete,MemoryChunk,0xbf4e700000
delete,MemoryChunk,0x327af240000
delete,MemoryChunk,0x3f0e2240000
delete,MemoryChunk,0x90a9d40000
delete,MemoryChunk,0x3b111d00000
delete,MemoryChunk,0x9221c0000
delete,MemoryChunk,0x1b850a80000
delete,MemoryChunk,0x30f11c40000
delete,MemoryChunk,0x29103a80000
delete,MemoryChunk,0x36b9a2c0000
delete,MemoryChunk,0x16d49300000
delete,MemoryChunk,0x77c2a00000
delete,MemoryChunk,0x37cd29c0000
delete,MemoryChunk,0x3b7ae740000
delete,MemoryChunk,0x24cbbc40000
delete,MemoryChunk,0x34b0eec0000
delete,MemoryChunk,0xde6ec40000
delete,MemoryChunk,0x2c0bb780000
delete,MemoryChunk,0x1ec60080000
delete,MemoryChunk,0x213cbc00000
delete,MemoryChunk,0xcb68900000
delete,MemoryChunk,0x3c9ec6c0000
delete,MemoryChunk,0x19f60900000
delete,MemoryChunk,0x2d1efe00000
delete,MemoryChunk,0x1a0e6d00000
delete,MemoryChunk,0x3df20580000
delete,MemoryChunk,0x58a70c0000
delete,MemoryChunk,0x1bdf5200000
delete,MemoryChunk,0xe1fe40000
delete,MemoryChunk,0x3926f40000
delete,MemoryChunk,0x148ff240000
delete,MemoryChunk,0x19d15180000
delete,MemoryChunk,0x145e440000
delete,MemoryChunk,0x21b9dc0000
delete,MemoryChunk,0x29900b40000
delete,MemoryChunk,0x39b01f40000
delete,MemoryChunk,0x9590f80000
delete,MemoryChunk,0x19e4c080000
delete,MemoryChunk,0x1a060480000
delete,MemoryChunk,0x29024640000
delete,MemoryChunk,0x39097a40000
delete,MemoryChunk,0x19e8b600000
delete,MemoryChunk,0x2b45b240000
delete,MemoryChunk,0x36765640000
delete,MemoryChunk,0x2ea42d80000
delete,MemoryChunk,0x7ae3e40000
delete,MemoryChunk,0x38b92cc0000
delete,MemoryChunk,0x29406bc0000
delete,MemoryChunk,0x2189a6c0000
delete,MemoryChunk,0x13bd2040000
code-creation,JS,13,2215715,0x7ff64c490e40,1820,step file:///C:/coding/soodocode/build/statements.js:878:13,0x2c01bf45860,*
code-source-info,0x7ff64c490e40,113,45014,45126,C0O45014C47O45053C98O45071C136O45082C168O45104C209O45053C262O6556I0C340O6614I0C393O45112C443O45116C469O45014C550O6632I0C564O6708I0C599O6697I0C760O6766I0C908O6816I0C950O6839I0C981O6833I0C1057O6814I0C1070O6833I0C1077O6814I0C1106O6889I0C1169O6887I0C1226O6956I0C1253O7079I0C1258O7029I0C1321O7027I0C1381O7547I0C1410O7589I0C1441O6708I0C1483O45082,F0O45053,S0x2c01bf63718
tick,0x7ff66c245e3c,2226772,0,0x0,0,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a50c0,2241955,0,0x0,0,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c28904e,2257957,0,0x0,0,0x7ff64c4a32e1,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49ffd9,2274126,0,0x0,0,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c6bb,2289912,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a2dfd,2305963,0,0x0,0,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c28818d,2321897,0,0x0,0,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdac8d8,2337991,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fa09,2353959,0,0x0,0,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2881c8,2369956,0,0x0,0,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2a52a540000,262144
new,MemoryChunk,0x33797100000,262144
new,MemoryChunk,0x1486c4c0000,262144
new,MemoryChunk,0x32bc0240000,262144
new,MemoryChunk,0x897da80000,262144
tick,0x7ff66c332ab2,2385905,0,0x0,0,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fd0c,2401987,0,0x0,0,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3bc96dc0000,262144
new,MemoryChunk,0x29112b40000,262144
new,MemoryChunk,0x3257d2c0000,262144
new,MemoryChunk,0x294ddc40000,262144
new,MemoryChunk,0xc006d00000,262144
tick,0x7ff6cc0eb3fc,2417929,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf9a510,2434199,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1668a200000,262144
new,MemoryChunk,0x343a3340000,262144
new,MemoryChunk,0x1f3be380000,262144
new,MemoryChunk,0x2252e240000,262144
new,MemoryChunk,0x9ded700000,262144
new,MemoryChunk,0x15442b80000,262144
new,MemoryChunk,0x2e64aa80000,262144
new,MemoryChunk,0x3494cc00000,262144
new,MemoryChunk,0x7bdd4c0000,262144
new,MemoryChunk,0x3538d080000,262144
tick,0x7ff6cbf1c6e2,2449942,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c4a528c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fe9b,2465999,0,0x0,0,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1adebe00000,262144
new,MemoryChunk,0x135fc280000,262144
new,MemoryChunk,0x49bd600000,262144
new,MemoryChunk,0x281342c0000,262144
new,MemoryChunk,0x219f53c0000,262144
new,MemoryChunk,0xe75ca00000,262144
new,MemoryChunk,0x3dc80c80000,262144
tick,0x7ff6cbf6ff30,2481930,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,2485823,0x7ff64c4915c0,128,get value file:///C:/coding/soodocode/build/statements.js:252:26,0x13a35fb94a8,*
code-source-info,0x7ff64c4915c0,113,12516,12536,C0O12516C35O12534C71O12516,,
tick,0x7ff66c2bc3a9,2497962,0,0x0,0,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x7064e80000,262144
new,MemoryChunk,0x3b470380000,262144
new,MemoryChunk,0x28887940000,262144
new,MemoryChunk,0x11104e40000,262144
new,MemoryChunk,0x1be1f080000,262144
tick,0x7ff6cc0fa423,2513940,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c244aaa,2529950,0,0x0,0,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x16f7c340000,262144
new,MemoryChunk,0x3b0dd680000,262144
new,MemoryChunk,0x2c7657c0000,262144
new,MemoryChunk,0x1760ce80000,262144
new,MemoryChunk,0x801380000,262144
new,MemoryChunk,0x2870d180000,262144
new,MemoryChunk,0x14f302c0000,262144
new,MemoryChunk,0x11cc4380000,262144
tick,0x7ff6cbdac86f,2545933,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6baeb,2561992,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xdc93b00000,262144
new,MemoryChunk,0x26941480000,262144
new,MemoryChunk,0x11b96ec0000,262144
new,MemoryChunk,0x15d1f040000,262144
new,MemoryChunk,0x3abc9080000,262144
new,MemoryChunk,0x2ccb1340000,262144
tick,0x7ff66c2893d9,2577946,0,0x0,0,0x7ff64c4a32e1,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49e3c2,2593988,0,0x0,0,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x463c040000,262144
new,MemoryChunk,0x1c7b08c0000,262144
new,MemoryChunk,0x1a3fdc0000,262144
new,MemoryChunk,0x2c97a800000,262144
new,MemoryChunk,0x2c0f5cc0000,262144
new,MemoryChunk,0x176b340000,262144
new,MemoryChunk,0x100a72c0000,262144
new,MemoryChunk,0x3327b300000,262144
tick,0x7ff6cc0ffbfe,2609925,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x30aaaf80000,262144
new,MemoryChunk,0xd11bb40000,262144
new,MemoryChunk,0x3a2959c0000,262144
new,MemoryChunk,0x33ad4680000,262144
new,MemoryChunk,0x1aa38c00000,262144
new,MemoryChunk,0x69eaf80000,262144
new,MemoryChunk,0x10cfaf40000,262144
tick,0x7ff64c49fe17,2625946,0,0x0,0,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0f3719,2642102,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2ea1d7c0000,262144
new,MemoryChunk,0x2c0a0dc0000,262144
new,MemoryChunk,0x3924f6c0000,262144
new,MemoryChunk,0x104a3c00000,262144
new,MemoryChunk,0x37110c00000,262144
new,MemoryChunk,0x15219640000,262144
new,MemoryChunk,0xad0db80000,262144
tick,0x7ff64c49fe1c,2657935,0,0x0,0,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6d7bd,2673915,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1eb3f300000,262144
new,MemoryChunk,0xbbc9cc0000,262144
new,MemoryChunk,0x18a5edc0000,262144
new,MemoryChunk,0x2c6bcdc0000,262144
new,MemoryChunk,0x2ce12d80000,262144
new,MemoryChunk,0x14382580000,262144
new,MemoryChunk,0x30c5ea00000,262144
tick,0x7ff6cc0eb440,2689977,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c4a528c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0b2,2705973,0,0x0,0,0x7ff64c4a1eda,0x7ff64c4a50bc,0x7ff64c49e7cc,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xe47f5c0000,262144
new,MemoryChunk,0x3b5065c0000,262144
new,MemoryChunk,0x65ef40000,262144
new,MemoryChunk,0x264afe00000,262144
new,MemoryChunk,0x3798f240000,262144
tick,0x7ff6cbf1c49b,2721985,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbe7a,2738069,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c49c858,0x7ff64c47a1c8,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2e07c980000,262144
new,MemoryChunk,0x35673240000,262144
new,MemoryChunk,0x2c139d80000,262144
new,MemoryChunk,0xb738100000,262144
new,MemoryChunk,0x1f12bf80000,262144
new,MemoryChunk,0x26448800000,262144
new,MemoryChunk,0x2151eb80000,262144
new,MemoryChunk,0x3722b940000,262144
new,MemoryChunk,0x8426980000,262144
tick,0x7ff64c4a1e9f,2753979,0,0x0,0,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c4a58f5,0x7ff64c49ca0c,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2881e3,2769958,0,0x0,0,0x7ff64c4a50bc,0x7ff64c49077c,0x7ff64c4a5787,0x7ff64c49ca0c,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x379dfbc0000,262144
new,MemoryChunk,0x3cd53680000,262144
new,MemoryChunk,0x16fb82c0000,262144
new,MemoryChunk,0x1c0e5740000,262144
delete,MemoryChunk,0xc996c40000
delete,MemoryChunk,0x33797100000
delete,MemoryChunk,0x3257d2c0000
delete,MemoryChunk,0x897da80000
delete,MemoryChunk,0x2a52a540000
delete,MemoryChunk,0x343a3340000
delete,MemoryChunk,0x1486c4c0000
delete,MemoryChunk,0x1f3be380000
delete,MemoryChunk,0x3538d080000
delete,MemoryChunk,0x32bc0240000
delete,MemoryChunk,0x3494cc00000
delete,MemoryChunk,0x281342c0000
delete,MemoryChunk,0x3dc80c80000
delete,MemoryChunk,0x1668a200000
delete,MemoryChunk,0x1be1f080000
delete,MemoryChunk,0x29112b40000
delete,MemoryChunk,0x3bc96dc0000
delete,MemoryChunk,0x28887940000
delete,MemoryChunk,0xe75ca00000
delete,MemoryChunk,0x3b470380000
delete,MemoryChunk,0x2c7657c0000
delete,MemoryChunk,0x2870d180000
delete,MemoryChunk,0x3b0dd680000
delete,MemoryChunk,0x16f7c340000
delete,MemoryChunk,0x11b96ec0000
delete,MemoryChunk,0x7064e80000
delete,MemoryChunk,0x2ccb1340000
delete,MemoryChunk,0xdc93b00000
delete,MemoryChunk,0x3abc9080000
delete,MemoryChunk,0x26941480000
delete,MemoryChunk,0x463c040000
delete,MemoryChunk,0x1a3fdc0000
delete,MemoryChunk,0x7bdd4c0000
delete,MemoryChunk,0x1c7b08c0000
delete,MemoryChunk,0x176b340000
delete,MemoryChunk,0x100a72c0000
delete,MemoryChunk,0x69eaf80000
delete,MemoryChunk,0x2c0f5cc0000
delete,MemoryChunk,0x10cfaf40000
delete,MemoryChunk,0x2c0a0dc0000
delete,MemoryChunk,0x37110c00000
delete,MemoryChunk,0x15219640000
delete,MemoryChunk,0x2ea1d7c0000
delete,MemoryChunk,0xad0db80000
delete,MemoryChunk,0x1eb3f300000
delete,MemoryChunk,0x2c6bcdc0000
delete,MemoryChunk,0x30c5ea00000
delete,MemoryChunk,0x14382580000
delete,MemoryChunk,0x264afe00000
delete,MemoryChunk,0x3798f240000
delete,MemoryChunk,0x18a5edc0000
delete,MemoryChunk,0x3b5065c0000
delete,MemoryChunk,0xe47f5c0000
delete,MemoryChunk,0x2e07c980000
delete,MemoryChunk,0x35673240000
delete,MemoryChunk,0x1f12bf80000
delete,MemoryChunk,0x3a2959c0000
delete,MemoryChunk,0xbbc9cc0000
delete,MemoryChunk,0xb738100000
delete,MemoryChunk,0x26448800000
delete,MemoryChunk,0x3924f6c0000
delete,MemoryChunk,0x379dfbc0000
delete,MemoryChunk,0x1c0e5740000
delete,MemoryChunk,0x8426980000
delete,MemoryChunk,0x3cd53680000
delete,MemoryChunk,0x16fb82c0000
tick,0x7ff6cc0ee14c,2786008,0,0x0,0,0x7ff6cbdab410,0x7ff66c2bc820,0x7ff64c4a2b84,0x7ff64c4a50bc,0x7ff64c49f96d,0x7ff64c4a528c,0x7ff64c49c858,0x7ff64c47a1c8,0x7ff64c49cb3b,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,2796459,0x2bb6ecbdcb6,113,get node:internal/util:635:17,0x3fcdef88970,~
code-source-info,0x2bb6ecbdcb6,16,18163,18397,C0O18175C8O18211C19O18233C22O18211C27O18263C33O18292C37O18305C38O18322C57O18338C60O18330C69O18326C77O18350C89O18360C94O18364C96O18363C102O18356C108O18377C112O18390,,
code-creation,JS,10,2796649,0x2bb6ecbde96,96,measure node:internal/perf/performance:126:10,0x13a35fab838,~
code-source-info,0x2bb6ecbde96,121,3334,3618,C0O3334C11O3365C28O3407C35O3435C44O3407C49O3489C55O3496C60O3512C70O3518C75O3512C76O3560C90O3567C95O3613,,
code-creation,JS,10,2796729,0x2bb6ecbe00e,46, node:internal/validators:523:47,0x3fcdef85c18,~
code-source-info,0x2bb6ecbe00e,15,15257,15471,C0O15295C12O15349C15O15349C22O15405C38O15411C43O15405C45O15470,,
code-creation,JS,10,2796810,0x2bb6ecbe156,105,measure node:internal/perf/usertiming:215:17,0x13a35fa6e38,~
code-source-info,0x2bb6ecbe156,119,5693,6124,C0O5737C8O5737C13O5812C16O5812C22O5783C27O5795C32O5884C39O5905C47O5918C52O5944C55O5944C63O5995C78O5995C84O6055C89O6055C93O6076C98O6076C102O6106C104O6121,,
code-creation,JS,10,2796954,0x2bb6ecbe43e,292,calculateStartDuration node:internal/perf/usertiming:164:32,0x13a35fa6de8,~
code-source-info,0x2bb6ecbe43e,119,4072,5673,C0O4110C9O4146C11O4160C13O4172C15O4204C17O4214C23O4271C28O4278C33O4283C38O4325C41O4346C47O4367C49O4390C53O4415C57O4451C67O4457C72O4451C73O4559C81O4614C91O4620C96O4614C97O4738C109O4819C119O4928C125O4825C130O4819C131O4987C135O5021C138O5027C145O5055C153O5101C156O5107C163O5131C175O5205C178O5211C186O5228C190O5226C196O5264C201O5270C205O5287C211O5341C214O5349C221O5391C229O5439C232O5447C239O5473C251O5545C254O5559C258O5557C264O5595C266O5616C268O5631C272O5643C279O5652C285O5659C291O5670,,
code-creation,JS,10,2797088,0x2bb6ecbe786,118,getMark node:internal/perf/usertiming:53:17,0x13a35fa6cf8,~
code-source-info,0x2bb6ecbe786,119,1202,1652,C0O1214C4O1238C5O1245C6O1249C12O1286C13O1295C18O1307C25O1313C30O1307C31O1363C33O1375C34O1384C39O1405C44O1438C49O1438C56O1454C63O1471C66O1478C67O1493C72O1505C77O1505C83O1519C85O1546C95O1577C109O1552C114O1546C115O1639C117O1649,,
code-creation,JS,10,2797203,0x24f91a0150e,44,createPerformanceMeasure node:internal/perf/usertiming:149:34,0x13a35fa6d48,~
code-source-info,0x24f91a0150e,119,3709,3887,C0O3762C7O3785C24O3762C30O3837C32O3845C37O3854C41O3869C43O3884,,
code-creation,JS,10,2797273,0x24f91a01646,125,PerformanceMeasure node:internal/perf/usertiming:121:14,0x13a35fa6fe8,~
code-source-info,0x24f91a01646,119,3048,3346,C53O3193C55O3217C57O3213C62O3238C67O3244C72O3238C73O3289C109O3289C124O3345,,
code-creation,JS,10,2797344,0x24f91a017ce,116,PerformanceEntry node:internal/perf/performance_entry:34:14,0x3e4136bf6e0,~
code-source-info,0x24f91a017ce,116,821,1180,C50O966C52O990C54O986C59O1011C64O1017C69O1011C70O1062C72O1067C77O1074C81O1087C83O1092C88O1104C92O1117C94O1122C99O1134C103O1148C105O1153C110O1164C115O1179,,
code-creation,JS,10,2797453,0x24f91a01bde,165,enqueue node:internal/perf/observe:391:17,0x13a35f9f7c0,~
code-source-info,0x24f91a01bde,118,10421,10614,C0O10434C5O10439C11O10471C27O10477C32O10471C33O10562C55O10555C83O10555C86O10581C88O10585C90O10584C94O10598C99O10544C164O10613,,
code-creation,JS,10,2797518,0x24f91a01d9e,20,isPerformanceEntry node:internal/perf/performance_entry:29:28,0x3e4136bf5f0,~
code-source-info,0x24f91a01d9e,116,730,778,C0O741C9O754C11O753C18O761C19O775,,
code-creation,JS,10,2797565,0x24f91a01e8e,13, node:internal/per_context/primordials:387:32,0x23399f5320,~
code-source-info,0x24f91a01e8e,6,11633,11694,C0O11651C7O11658C12O11681,,
code-creation,JS,10,2797669,0x24f91a0216e,204,bufferUserTiming node:internal/perf/observe:403:26,0x13a35f9f810,~
code-source-info,0x24f91a0216e,118,10705,11735,C0O10742C5O10760C7O10771C9O10785C14O10804C21O10840C23O10854C28O10876C35O10922C36O10929C37O10940C42O10940C47O10999C52O11012C54O11024C56O11022C63O11065C66O11083C71O11083C78O11106C83O11124C90O11124C96O11268C106O11353C116O11362C126O11323C132O11403C138O11493C143O11522C153O11463C159O11540C165O11268C171O11594C173O11601C177O11652C179O11664C183O11682C185O11690C189O11704C192O11712C197O11712C203O11734,,
code-creation,JS,10,2797758,0x24f91a023b6,29,get entryType node:internal/perf/performance_entry:56:16,0x3e4136bf7b8,~
code-source-info,0x24f91a023b6,116,1308,1413,C0O1318C7O1346C16O1318C21O1384C23O1396C25O1395C28O1408,,
code-creation,JS,10,2797812,0x24f91a024e6,29,get duration node:internal/perf/performance_entry:66:15,0x3e4136bf898,~
code-source-info,0x24f91a024e6,116,1555,1658,C0O1565C7O1593C16O1565C21O1630C23O1642C25O1641C28O1653,,
code-creation,JS,10,2797900,0x24f91a025f6,38,log node:internal/console/constructor:378:6,0x3fcdefab810,~
code-source-info,0x24f91a025f6,46,11960,12046,C0O11960C3O11977C5O11982C7O11981C13O11999C18O12016C20O12015C24O12033C30O11998C37O12045,,
code-creation,JS,10,2797962,0x24f91a0273e,50,value node:internal/console/constructor:339:20,0x3fcdefab570,~
code-source-info,0x24f91a0273e,46,10465,10641,C0O10494C2O10499C4O10498C8O10524C13O10518C19O10541C24O10541C29O10583C36O10603C44O10590C49O10634,,
code-creation,JS,10,2798016,0x24f91a02856,27,get node:internal/console/constructor:213:14,0x1c66f8cd198,~
code-source-info,0x24f91a02856,46,6256,6351,C0O6274C6O6287C9O6303C16O6294C22O6324C26O6338,,
code-creation,JS,10,2798109,0x24f91a02a4e,125,getStdout node:internal/bootstrap/switches/is_main_thread:148:19,0x3fcdefb1440,~
script-source,53,node:internal/bootstrap/switches/is_main_thread,'use strict';\x0d\n\x0d\nconst { ObjectDefineProperty } = primordials;\x0d\nconst rawMethods = internalBinding('process_methods');\x0d\nconst {\x0d\n  namespace: {\x0d\n    addSerializeCallback\x2C\x0d\n    isBuildingSnapshot\x2C\x0d\n  }\x2C\x0d\n} = require('internal/v8/startup_snapshot');\x0d\n// TODO(joyeecheung): deprecate and remove these underscore methods\x0d\nprocess._debugProcess = rawMethods._debugProcess;\x0d\nprocess._debugEnd = rawMethods._debugEnd;\x0d\n\x0d\n// See the discussion in https://github.com/nodejs/node/issues/19009 and\x0d\n// https://github.com/nodejs/node/pull/34010 for why these are no-ops.\x0d\n// Five word summary: they were broken beyond repair.\x0d\nprocess._startProfilerIdleNotifier = () => {};\x0d\nprocess._stopProfilerIdleNotifier = () => {};\x0d\n\x0d\nfunction defineStream(name\x2C getter) {\x0d\n  ObjectDefineProperty(process\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: getter\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineStream('stdout'\x2C getStdout);\x0d\ndefineStream('stdin'\x2C getStdin);\x0d\ndefineStream('stderr'\x2C getStderr);\x0d\n\x0d\n// Worker threads don't receive signals.\x0d\nconst {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x2C\x0d\n} = require('internal/process/signal');\x0d\nprocess.on('newListener'\x2C startListeningIfSignal);\x0d\nprocess.on('removeListener'\x2C stopListeningIfSignal);\x0d\n\x0d\n// ---- keep the attachment of the wrappers above so that it's easier to ----\x0d\n// ----              compare the setups side-by-side                    -----\x0d\n\x0d\nconst { guessHandleType } = require('internal/util');\x0d\n\x0d\nfunction createWritableStdioStream(fd) {\x0d\n  let stream;\x0d\n  // Note stream._type is used for test-module-load-list.js\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stream = new tty.WriteStream(fd);\x0d\n      stream._type = 'tty';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const SyncWriteStream = require('internal/fs/sync_write_stream');\x0d\n      stream = new SyncWriteStream(fd\x2C { autoClose: false });\x0d\n      stream._type = 'fs';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // If fd is already being used for the IPC channel\x2C libuv will return\x0d\n      // an error when trying to use it again. In that case\x2C create the socket\x0d\n      // using the existing handle instead of the fd.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        const { kChannelHandle } = require('internal/child_process');\x0d\n        stream = new net.Socket({\x0d\n          handle: process[kChannelHandle]\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      } else {\x0d\n        stream = new net.Socket({\x0d\n          fd\x2C\x0d\n          readable: false\x2C\x0d\n          writable: true\x2C\x0d\n        });\x0d\n      }\x0d\n\x0d\n      stream._type = 'pipe';\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy black-hole output for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Writable } = require('stream');\x0d\n      stream = new Writable({\x0d\n        write(buf\x2C enc\x2C cb) {\x0d\n          cb();\x0d\n        }\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stream.fd = fd;\x0d\n\x0d\n  stream._isStdio = true;\x0d\n\x0d\n  return stream;\x0d\n}\x0d\n\x0d\nfunction dummyDestroy(err\x2C cb) {\x0d\n  cb(err);\x0d\n  this._undestroy();\x0d\n\x0d\n  // We need to emit 'close' anyway so that the closing\x0d\n  // of the stream is observable. We just make sure we\x0d\n  // are not going to do it twice.\x0d\n  // The 'close' event is needed so that finished and\x0d\n  // pipeline work correctly.\x0d\n  if (!this._writableState.emitClose) {\x0d\n    process.nextTick(() => {\x0d\n      this.emit('close');\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nlet stdin;\x0d\nlet stdout;\x0d\nlet stderr;\x0d\n\x0d\nlet stdoutDestroy;\x0d\nlet stderrDestroy;\x0d\n\x0d\nfunction refreshStdoutOnSigWinch() {\x0d\n  stdout._refreshSize();\x0d\n}\x0d\n\x0d\nfunction refreshStderrOnSigWinch() {\x0d\n  stderr._refreshSize();\x0d\n}\x0d\n\x0d\nfunction addCleanup(fn) {\x0d\n  if (isBuildingSnapshot()) {\x0d\n    addSerializeCallback(fn);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getStdout() {\x0d\n  if (stdout) return stdout;\x0d\n  stdout = createWritableStdioStream(1);\x0d\n  stdout.destroySoon = stdout.destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stdoutDestroy = stdout._destroy;\x0d\n  stdout._destroy = dummyDestroy;\x0d\n  if (stdout.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C refreshStdoutOnSigWinch);\x0d\n  }\x0d\n\x0d\n  addCleanup(function cleanupStdout() {\x0d\n    stdout._destroy = stdoutDestroy;\x0d\n    stdout.destroy();\x0d\n    process.removeListener('SIGWINCH'\x2C refreshStdoutOnSigWinch);\x0d\n    stdout = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stdout = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stdout;\x0d\n}\x0d\n\x0d\nfunction getStderr() {\x0d\n  if (stderr) return stderr;\x0d\n  stderr = createWritableStdioStream(2);\x0d\n  stderr.destroySoon = stderr.destroy;\x0d\n  stderrDestroy = stderr._destroy;\x0d\n  // Override _destroy so that the fd is never actually closed.\x0d\n  stderr._destroy = dummyDestroy;\x0d\n  if (stderr.isTTY) {\x0d\n    process.on('SIGWINCH'\x2C refreshStderrOnSigWinch);\x0d\n  }\x0d\n  addCleanup(function cleanupStderr() {\x0d\n    stderr._destroy = stderrDestroy;\x0d\n    stderr.destroy();\x0d\n    process.removeListener('SIGWINCH'\x2C refreshStderrOnSigWinch);\x0d\n    stderr = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stderr = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stderr;\x0d\n}\x0d\n\x0d\nfunction getStdin() {\x0d\n  if (stdin) return stdin;\x0d\n  const fd = 0;\x0d\n\x0d\n  switch (guessHandleType(fd)) {\x0d\n    case 'TTY': {\x0d\n      const tty = require('tty');\x0d\n      stdin = new tty.ReadStream(fd);\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'FILE': {\x0d\n      const fs = require('fs');\x0d\n      stdin = new fs.ReadStream(null\x2C { fd: fd\x2C autoClose: false });\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    case 'PIPE':\x0d\n    case 'TCP': {\x0d\n      const net = require('net');\x0d\n\x0d\n      // It could be that process has been started with an IPC channel\x0d\n      // sitting on fd=0\x2C in such case the pipe for this fd is already\x0d\n      // present and creating a new one will lead to the assertion failure\x0d\n      // in libuv.\x0d\n      if (process.channel && process.channel.fd === fd) {\x0d\n        stdin = new net.Socket({\x0d\n          handle: process.channel\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x2C\x0d\n        });\x0d\n      } else {\x0d\n        stdin = new net.Socket({\x0d\n          fd: fd\x2C\x0d\n          readable: true\x2C\x0d\n          writable: false\x2C\x0d\n          manualStart: true\x2C\x0d\n        });\x0d\n      }\x0d\n      // Make sure the stdin can't be `.end()`-ed\x0d\n      stdin._writableState.ended = true;\x0d\n      break;\x0d\n    }\x0d\n\x0d\n    default: {\x0d\n      // Provide a dummy contentless input for e.g. non-console\x0d\n      // Windows applications.\x0d\n      const { Readable } = require('stream');\x0d\n      stdin = new Readable({ read() {} });\x0d\n      stdin.push(null);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // For supporting legacy API we put the FD here.\x0d\n  stdin.fd = fd;\x0d\n\x0d\n  // `stdin` starts out life in a paused state\x2C but node doesn't\x0d\n  // know yet. Explicitly to readStop() it to put it in the\x0d\n  // not-reading state.\x0d\n  if (stdin._handle && stdin._handle.readStop) {\x0d\n    stdin._handle.reading = false;\x0d\n    stdin._readableState.reading = false;\x0d\n    stdin._handle.readStop();\x0d\n  }\x0d\n\x0d\n  // If the user calls stdin.pause()\x2C then we need to stop reading\x0d\n  // once the stream implementation does so (one nextTick later)\x2C\x0d\n  // so that the process can close down.\x0d\n  stdin.on('pause'\x2C () => {\x0d\n    process.nextTick(onpause);\x0d\n  });\x0d\n\x0d\n  function onpause() {\x0d\n    if (!stdin._handle)\x0d\n      return;\x0d\n    if (stdin._handle.reading && !stdin.readableFlowing) {\x0d\n      stdin._readableState.reading = false;\x0d\n      stdin._handle.reading = false;\x0d\n      stdin._handle.readStop();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  addCleanup(function cleanupStdin() {\x0d\n    stdin.destroy();\x0d\n    stdin = undefined;\x0d\n  });\x0d\n  // No need to add deserialize callback because stdin = undefined above\x0d\n  // causes the stream to be lazily initialized again later.\x0d\n  return stdin;\x0d\n}\x0d\n\x0d\n// Used by internal tests.\x0d\nrawMethods.resetStdioForTesting = function() {\x0d\n  stdin = undefined;\x0d\n  stdout = undefined;\x0d\n  stderr = undefined;\x0d\n};\x0d\n\x0d\n// Needed by the module loader and generally needed everywhere.\x0d\nrequire('fs');\x0d\nrequire('util');\x0d\nrequire('url'); // eslint-disable-line no-restricted-modules\x0d\ninternalBinding('module_wrap');\x0d\nrequire('internal/modules/cjs/loader');\x0d\nrequire('internal/modules/esm/utils');\x0d\n\x0d\n// Needed to refresh the time origin.\x0d\nrequire('internal/perf/utils');\x0d\n// Needed to register the async hooks.\x0d\nif (internalBinding('config').hasInspector) {\x0d\n  require('internal/inspector_async_hook');\x0d\n}\x0d\n// Needed to set the wasm web API callbacks.\x0d\ninternalBinding('wasm_web_api');\x0d\n// Needed to detect whether it's on main thread.\x0d\ninternalBinding('worker');\x0d\n// Needed by most execution modes.\x0d\nrequire('internal/modules/run_main');\x0d\n// Needed to refresh DNS configurations.\x0d\nrequire('internal/dns/utils');\x0d\n// Needed by almost all execution modes. It's fine to\x0d\n// load them into the snapshot as long as we don't run\x0d\n// any of the initialization.\x0d\nrequire('internal/process/pre_execution');\x0d\n
code-source-info,0x24f91a02a4e,53,3897,4591,C0O3905C6O3917C10O3931C11O3935C17O3944C24O3942C30O3977C37O3998C40O4005C44O3996C48O4082C53O4105C60O4096C66O4118C73O4134C77O4153C82O4164C88O4178C91O4186C102O4186C108O4237C116O4237C120O4574C124O4588,,
code-creation,JS,10,2798739,0x39c990c2206,280,createWritableStdioStream node:internal/bootstrap/switches/is_main_thread:47:35,0x3fcdefb1280,~
code-source-info,0x39c990c2206,53,1504,3134,C0O1518C2O1590C7O1598C42O1659C48O1659C53O1699C60O1691C66O1723C68O1736C72O1752C74O1819C80O1819C85O1897C95O1877C101O1931C103O1944C107O1959C109O2031C115O2031C120O2268C123O2280C132O2299C137O2307C144O2310C149O2356C155O2356C160O2337C165O2417C180O2452C189O2409C197O2580C209O2600C215O2572C221O2690C223O2703C227O2720C229O2877C235O2877C240O2864C245O2903C250O2936C260O2912C266O3067C268O3077C272O3088C273O3104C277O3117C279O3131,,
code-creation,JS,10,2798836,0x39c990c24b6,21,guessHandleType node:internal/util:823:25,0x3fcdef89178,~
code-source-info,0x39c990c24b6,16,23646,23722,C0O23669C5O23669C10O23694C17O23712C20O23719,,
code-creation,Eval,10,2799166,0x39c990c2a06,5, node:tty:1:1,0x39c990c2800,~
script-source,126,node:tty,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst net = require('net');\x0d\nconst { TTY\x2C isTTY } = internalBinding('tty_wrap');\x0d\nconst errors = require('internal/errors');\x0d\nconst { ERR_INVALID_FD\x2C ERR_TTY_INIT_FAILED } = errors.codes;\x0d\nconst {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x2C\x0d\n} = require('internal/tty');\x0d\n\x0d\n// Lazy loaded for startup performance.\x0d\nlet readline;\x0d\n\x0d\nfunction isatty(fd) {\x0d\n  return NumberIsInteger(fd) && fd >= 0 && fd <= 2147483647 &&\x0d\n         isTTY(fd);\x0d\n}\x0d\n\x0d\nfunction ReadStream(fd\x2C options) {\x0d\n  if (!(this instanceof ReadStream))\x0d\n    return new ReadStream(fd\x2C options);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    readableHighWaterMark: 0\x2C\x0d\n    handle: tty\x2C\x0d\n    manualStart: true\x2C\x0d\n    ...options\x2C\x0d\n  });\x0d\n\x0d\n  this.isRaw = false;\x0d\n  this.isTTY = true;\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(ReadStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(ReadStream\x2C net.Socket);\x0d\n\x0d\nReadStream.prototype.setRawMode = function(flag) {\x0d\n  flag = !!flag;\x0d\n  const err = this._handle?.setRawMode(flag);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C new errors.ErrnoException(err\x2C 'setRawMode'));\x0d\n    return this;\x0d\n  }\x0d\n  this.isRaw = flag;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction WriteStream(fd) {\x0d\n  if (!(this instanceof WriteStream))\x0d\n    return new WriteStream(fd);\x0d\n  if (fd >> 0 !== fd || fd < 0)\x0d\n    throw new ERR_INVALID_FD(fd);\x0d\n\x0d\n  const ctx = {};\x0d\n  const tty = new TTY(fd\x2C ctx);\x0d\n  if (ctx.code !== undefined) {\x0d\n    throw new ERR_TTY_INIT_FAILED(ctx);\x0d\n  }\x0d\n\x0d\n  net.Socket.call(this\x2C {\x0d\n    readableHighWaterMark: 0\x2C\x0d\n    handle: tty\x2C\x0d\n    manualStart: true\x2C\x0d\n  });\x0d\n\x0d\n  // Prevents interleaved or dropped stdout/stderr output for terminals.\x0d\n  // As noted in the following reference\x2C local TTYs tend to be quite fast and\x0d\n  // this behavior has become expected due historical functionality on OS X\x2C\x0d\n  // even though it was originally intended to change in v1.0.2 (Libuv 1.2.1).\x0d\n  // Ref: https://github.com/nodejs/node/pull/1771#issuecomment-119351671\x0d\n  this._handle.setBlocking(true);\x0d\n\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (!err) {\x0d\n    this.columns = winSize[0];\x0d\n    this.rows = winSize[1];\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectSetPrototypeOf(WriteStream.prototype\x2C net.Socket.prototype);\x0d\nObjectSetPrototypeOf(WriteStream\x2C net.Socket);\x0d\n\x0d\nWriteStream.prototype.isTTY = true;\x0d\n\x0d\nWriteStream.prototype.getColorDepth = getColorDepth;\x0d\n\x0d\nWriteStream.prototype.hasColors = hasColors;\x0d\n\x0d\nWriteStream.prototype._refreshSize = function() {\x0d\n  const oldCols = this.columns;\x0d\n  const oldRows = this.rows;\x0d\n  const winSize = new Array(2);\x0d\n  const err = this._handle.getWindowSize(winSize);\x0d\n  if (err) {\x0d\n    this.emit('error'\x2C new errors.ErrnoException(err\x2C 'getWindowSize'));\x0d\n    return;\x0d\n  }\x0d\n  const { 0: newCols\x2C 1: newRows } = winSize;\x0d\n  if (oldCols !== newCols || oldRows !== newRows) {\x0d\n    this.columns = newCols;\x0d\n    this.rows = newRows;\x0d\n    this.emit('resize');\x0d\n  }\x0d\n};\x0d\n\x0d\n// Backwards-compat\x0d\nWriteStream.prototype.cursorTo = function(x\x2C y\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.cursorTo(this\x2C x\x2C y\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.moveCursor = function(dx\x2C dy\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.moveCursor(this\x2C dx\x2C dy\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearLine = function(dir\x2C callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearLine(this\x2C dir\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.clearScreenDown = function(callback) {\x0d\n  if (readline === undefined) readline = require('readline');\x0d\n  return readline.clearScreenDown(this\x2C callback);\x0d\n};\x0d\nWriteStream.prototype.getWindowSize = function() {\x0d\n  return [this.columns\x2C this.rows];\x0d\n};\x0d\n\x0d\nmodule.exports = { isatty\x2C ReadStream\x2C WriteStream };\x0d\n
code-source-info,0x39c990c2a06,126,0,5230,C0O0C4O5230,,
code-creation,JS,10,2799477,0x39c990c30de,426, node:tty:1:1,0x39c990c2980,~
code-source-info,0x39c990c30de
code-creation,Eval,10,2801297,0x1760ce82706,5, node:net:1:1,0x2bb6eca0c88,~
script-source,127,node:net,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  Boolean\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  MathMax\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EventEmitter = require('events');\x0d\nconst stream = require('stream');\x0d\nlet debug = require('internal/util/debuglog').debuglog('net'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst {\x0d\n  kReinitializeHandle\x2C\x0d\n  isIP\x2C\x0d\n  isIPv4\x2C\x0d\n  isIPv6\x2C\x0d\n  normalizedArgsSymbol\x2C\x0d\n  makeSyncWrite\x2C\x0d\n} = require('internal/net');\x0d\nconst assert = require('internal/assert');\x0d\nconst {\x0d\n  UV_EADDRINUSE\x2C\x0d\n  UV_EINVAL\x2C\x0d\n  UV_ENOTCONN\x2C\x0d\n  UV_ECANCELED\x2C\x0d\n  UV_ETIMEDOUT\x2C\x0d\n} = internalBinding('uv');\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { ShutdownWrap } = internalBinding('stream_wrap');\x0d\nconst {\x0d\n  TCP\x2C\x0d\n  TCPConnectWrap\x2C\x0d\n  constants: TCPConstants\x2C\x0d\n} = internalBinding('tcp_wrap');\x0d\nconst {\x0d\n  Pipe\x2C\x0d\n  PipeConnectWrap\x2C\x0d\n  constants: PipeConstants\x2C\x0d\n} = internalBinding('pipe_wrap');\x0d\nconst {\x0d\n  newAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  symbols: { async_id_symbol\x2C owner_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kHandle\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x2C\x0d\n} = require('internal/stream_base_commons');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ADDRESS_FAMILY\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_FD_TYPE\x2C\x0d\n    ERR_INVALID_IP_ADDRESS\x2C\x0d\n    ERR_INVALID_HANDLE_TYPE\x2C\x0d\n    ERR_SERVER_ALREADY_LISTEN\x2C\x0d\n    ERR_SERVER_NOT_RUNNING\x2C\x0d\n    ERR_SOCKET_CONNECTION_TIMEOUT\x2C\x0d\n    ERR_SOCKET_CLOSED\x2C\x0d\n    ERR_SOCKET_CLOSED_BEFORE_CONNECTION\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n  ErrnoException\x2C\x0d\n  ExceptionWithHostPort\x2C\x0d\n  genericNodeError\x2C\x0d\n  NodeAggregateError\x2C\x0d\n  UVExceptionWithHostPort\x2C\x0d\n} = require('internal/errors');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { queueMicrotask } = require('internal/process/task_queues');\x0d\nconst { kEmptyObject\x2C guessHandleType\x2C promisify } = require('internal/util');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateBoolean\x2C\x0d\n  validateFunction\x2C\x0d\n  validateInt32\x2C\x0d\n  validateNumber\x2C\x0d\n  validatePort\x2C\x0d\n  validateString\x2C\x0d\n} = require('internal/validators');\x0d\nconst kLastWriteQueueSize = Symbol('lastWriteQueueSize');\x0d\nconst { getOptionValue } = require('internal/options');\x0d\n\x0d\n// Lazy loaded to improve startup performance.\x0d\nlet cluster;\x0d\nlet dns;\x0d\nlet BlockList;\x0d\nlet SocketAddress;\x0d\nlet autoSelectFamilyDefault = getOptionValue('--network-family-autoselection');\x0d\nlet autoSelectFamilyAttemptTimeoutDefault = 250;\x0d\n\x0d\nconst { clearTimeout\x2C setTimeout } = require('timers');\x0d\nconst { kTimeout } = require('internal/timers');\x0d\n\x0d\nconst DEFAULT_IPV4_ADDR = '0.0.0.0';\x0d\nconst DEFAULT_IPV6_ADDR = '::';\x0d\n\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst noop = () => {};\x0d\n\x0d\nconst kPerfHooksNetConnectContext = Symbol('kPerfHooksNetConnectContext');\x0d\n\x0d\nconst dc = require('diagnostics_channel');\x0d\nconst netClientSocketChannel = dc.channel('net.client.socket');\x0d\nconst netServerSocketChannel = dc.channel('net.server.socket');\x0d\n\x0d\nconst {\x0d\n  hasObserver\x2C\x0d\n  startPerf\x2C\x0d\n  stopPerf\x2C\x0d\n} = require('internal/perf/observe');\x0d\nconst { getDefaultHighWaterMark } = require('internal/streams/state');\x0d\n\x0d\nfunction getFlags(ipv6Only) {\x0d\n  return ipv6Only === true ? TCPConstants.UV_TCP_IPV6ONLY : 0;\x0d\n}\x0d\n\x0d\nfunction createHandle(fd\x2C is_server) {\x0d\n  validateInt32(fd\x2C 'fd'\x2C 0);\x0d\n  const type = guessHandleType(fd);\x0d\n  if (type === 'PIPE') {\x0d\n    return new Pipe(\x0d\n      is_server ? PipeConstants.SERVER : PipeConstants.SOCKET\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  if (type === 'TCP') {\x0d\n    return new TCP(\x0d\n      is_server ? TCPConstants.SERVER : TCPConstants.SOCKET\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_FD_TYPE(type);\x0d\n}\x0d\n\x0d\n\x0d\nfunction getNewAsyncId(handle) {\x0d\n  return (!handle || typeof handle.getAsyncId !== 'function') ?\x0d\n    newAsyncId() : handle.getAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\nfunction isPipeName(s) {\x0d\n  return typeof s === 'string' && toNumber(s) === false;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates a new TCP or IPC server\x0d\n * @param {{\x0d\n *   allowHalfOpen?: boolean;\x0d\n *   pauseOnConnect?: boolean;\x0d\n *   }} [options]\x0d\n * @param {Function} [connectionListener]\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nfunction createServer(options\x2C connectionListener) {\x0d\n  return new Server(options\x2C connectionListener);\x0d\n}\x0d\n\x0d\n\x0d\n// Target API:\x0d\n//\x0d\n// let s = net.connect({port: 80\x2C host: 'google.com'}\x2C function() {\x0d\n//   ...\x0d\n// });\x0d\n//\x0d\n// There are various forms:\x0d\n//\x0d\n// connect(options\x2C [cb])\x0d\n// connect(port\x2C [host]\x2C [cb])\x0d\n// connect(path\x2C [cb]);\x0d\n//\x0d\nfunction connect(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  const options = normalized[0];\x0d\n  debug('createConnection'\x2C normalized);\x0d\n  const socket = new Socket(options);\x0d\n\x0d\n  if (netClientSocketChannel.hasSubscribers) {\x0d\n    netClientSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n  if (options.timeout) {\x0d\n    socket.setTimeout(options.timeout);\x0d\n  }\x0d\n\x0d\n  return socket.connect(normalized);\x0d\n}\x0d\n\x0d\nfunction getDefaultAutoSelectFamily() {\x0d\n  return autoSelectFamilyDefault;\x0d\n}\x0d\n\x0d\nfunction setDefaultAutoSelectFamily(value) {\x0d\n  validateBoolean(value\x2C 'value');\x0d\n  autoSelectFamilyDefault = value;\x0d\n}\x0d\n\x0d\nfunction getDefaultAutoSelectFamilyAttemptTimeout() {\x0d\n  return autoSelectFamilyAttemptTimeoutDefault;\x0d\n}\x0d\n\x0d\nfunction setDefaultAutoSelectFamilyAttemptTimeout(value) {\x0d\n  validateInt32(value\x2C 'value'\x2C 1);\x0d\n\x0d\n  if (value < 10) {\x0d\n    value = 10;\x0d\n  }\x0d\n\x0d\n  autoSelectFamilyAttemptTimeoutDefault = value;\x0d\n}\x0d\n\x0d\n// Returns an array [options\x2C cb]\x2C where options is an object\x2C\x0d\n// cb is either a function or null.\x0d\n// Used to normalize arguments of Socket.prototype.connect() and\x0d\n// Server.prototype.listen(). Possible combinations of parameters:\x0d\n//   (options[...][\x2C cb])\x0d\n//   (path[...][\x2C cb])\x0d\n//   ([port][\x2C host][...][\x2C cb])\x0d\n// For Socket.prototype.connect()\x2C the [...] part is ignored\x0d\n// For Server.prototype.listen()\x2C the [...] part is [\x2C backlog]\x0d\n// but will not be handled here (handled in listen())\x0d\nfunction normalizeArgs(args) {\x0d\n  let arr;\x0d\n\x0d\n  if (args.length === 0) {\x0d\n    arr = [{}\x2C null];\x0d\n    arr[normalizedArgsSymbol] = true;\x0d\n    return arr;\x0d\n  }\x0d\n\x0d\n  const arg0 = args[0];\x0d\n  let options = {};\x0d\n  if (typeof arg0 === 'object' && arg0 !== null) {\x0d\n    // (options[...][\x2C cb])\x0d\n    options = arg0;\x0d\n  } else if (isPipeName(arg0)) {\x0d\n    // (path[...][\x2C cb])\x0d\n    options.path = arg0;\x0d\n  } else {\x0d\n    // ([port][\x2C host][...][\x2C cb])\x0d\n    options.port = arg0;\x0d\n    if (args.length > 1 && typeof args[1] === 'string') {\x0d\n      options.host = args[1];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const cb = args[args.length - 1];\x0d\n  if (typeof cb !== 'function')\x0d\n    arr = [options\x2C null];\x0d\n  else\x0d\n    arr = [options\x2C cb];\x0d\n\x0d\n  arr[normalizedArgsSymbol] = true;\x0d\n  return arr;\x0d\n}\x0d\n\x0d\n\x0d\n// Called when creating new Socket\x2C or when re-using a closed Socket\x0d\nfunction initSocketHandle(self) {\x0d\n  self._undestroy();\x0d\n  self._sockname = null;\x0d\n\x0d\n  // Handle creation may be deferred to bind() or connect() time.\x0d\n  if (self._handle) {\x0d\n    self._handle[owner_symbol] = self;\x0d\n    self._handle.onread = onStreamRead;\x0d\n    self[async_id_symbol] = getNewAsyncId(self._handle);\x0d\n\x0d\n    let userBuf = self[kBuffer];\x0d\n    if (userBuf) {\x0d\n      const bufGen = self[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        userBuf = bufGen();\x0d\n        if (!isUint8Array(userBuf))\x0d\n          return;\x0d\n        self[kBuffer] = userBuf;\x0d\n      }\x0d\n      self._handle.useUserBuffer(userBuf);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction closeSocketHandle(self\x2C isException\x2C isCleanupPending = false) {\x0d\n  if (self._handle) {\x0d\n    self._handle.close(() => {\x0d\n      debug('emit close');\x0d\n      self.emit('close'\x2C isException);\x0d\n      if (isCleanupPending) {\x0d\n        self._handle.onread = noop;\x0d\n        self._handle = null;\x0d\n        self._sockname = null;\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nconst kBytesRead = Symbol('kBytesRead');\x0d\nconst kBytesWritten = Symbol('kBytesWritten');\x0d\nconst kSetNoDelay = Symbol('kSetNoDelay');\x0d\nconst kSetKeepAlive = Symbol('kSetKeepAlive');\x0d\nconst kSetKeepAliveInitialDelay = Symbol('kSetKeepAliveInitialDelay');\x0d\n\x0d\nfunction Socket(options) {\x0d\n  if (!(this instanceof Socket)) return new Socket(options);\x0d\n  if (options?.objectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      'options.objectMode'\x2C\x0d\n      options.objectMode\x2C\x0d\n      'is not supported'\x2C\x0d\n    );\x0d\n  } else if (options?.readableObjectMode || options?.writableObjectMode) {\x0d\n    throw new ERR_INVALID_ARG_VALUE(\x0d\n      `options.${\x0d\n        options.readableObjectMode ? 'readableObjectMode' : 'writableObjectMode'\x0d\n      }`\x2C\x0d\n      options.readableObjectMode || options.writableObjectMode\x2C\x0d\n      'is not supported'\x2C\x0d\n    );\x0d\n  }\x0d\n  if (typeof options?.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options?.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this.connecting = false;\x0d\n  // Problem with this is that users can supply their own handle\x2C that may not\x0d\n  // have _handle.getAsyncId(). In this case an[async_id_symbol] should\x0d\n  // probably be supplied by async_hooks.\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._hadError = false;\x0d\n  this[kHandle] = null;\x0d\n  this._parent = null;\x0d\n  this._host = null;\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n  this[kTimeout] = null;\x0d\n  this[kBuffer] = null;\x0d\n  this[kBufferCb] = null;\x0d\n  this[kBufferGen] = null;\x0d\n  this._closeAfterHandlingError = false;\x0d\n\x0d\n  if (typeof options === 'number')\x0d\n    options = { fd: options }; // Legacy interface.\x0d\n  else\x0d\n    options = { ...options };\x0d\n\x0d\n  // Default to *not* allowing half open sockets.\x0d\n  options.allowHalfOpen = Boolean(options.allowHalfOpen);\x0d\n  // For backwards compat do not emit close on destroy.\x0d\n  options.emitClose = false;\x0d\n  options.autoDestroy = true;\x0d\n  // Handle strings directly.\x0d\n  options.decodeStrings = false;\x0d\n  stream.Duplex.call(this\x2C options);\x0d\n\x0d\n  if (options.handle) {\x0d\n    this._handle = options.handle; // private\x0d\n    this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  } else if (options.fd !== undefined) {\x0d\n    const { fd } = options;\x0d\n    let err;\x0d\n\x0d\n    // createHandle will throw ERR_INVALID_FD_TYPE if `fd` is not\x0d\n    // a valid `PIPE` or `TCP` descriptor\x0d\n    this._handle = createHandle(fd\x2C false);\x0d\n\x0d\n    err = this._handle.open(fd);\x0d\n\x0d\n    // While difficult to fabricate\x2C in some architectures\x0d\n    // `open` may return an error code for valid file descriptors\x0d\n    // which cannot be opened. This is difficult to test as most\x0d\n    // un-openable fds will throw on `createHandle`\x0d\n    if (err)\x0d\n      throw new ErrnoException(err\x2C 'open');\x0d\n\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n\x0d\n    if ((fd === 1 || fd === 2) &&\x0d\n        (this._handle instanceof Pipe) && isWindows) {\x0d\n      // Make stdout and stderr blocking on Windows\x0d\n      err = this._handle.setBlocking(true);\x0d\n      if (err)\x0d\n        throw new ErrnoException(err\x2C 'setBlocking');\x0d\n\x0d\n      this._writev = null;\x0d\n      this._write = makeSyncWrite(fd);\x0d\n      // makeSyncWrite adjusts this value like the original handle would\x2C so\x0d\n      // we need to let it do that by turning it into a writable\x2C own\x0d\n      // property.\x0d\n      ObjectDefineProperty(this._handle\x2C 'bytesWritten'\x2C {\x0d\n        __proto__: null\x2C\x0d\n        value: 0\x2C writable: true\x2C\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const onread = options.onread;\x0d\n  if (onread !== null && typeof onread === 'object' &&\x0d\n      (isUint8Array(onread.buffer) || typeof onread.buffer === 'function') &&\x0d\n      typeof onread.callback === 'function') {\x0d\n    if (typeof onread.buffer === 'function') {\x0d\n      this[kBuffer] = true;\x0d\n      this[kBufferGen] = onread.buffer;\x0d\n    } else {\x0d\n      this[kBuffer] = onread.buffer;\x0d\n    }\x0d\n    this[kBufferCb] = onread.callback;\x0d\n  }\x0d\n\x0d\n  this[kSetNoDelay] = Boolean(options.noDelay);\x0d\n  this[kSetKeepAlive] = Boolean(options.keepAlive);\x0d\n  this[kSetKeepAliveInitialDelay] = ~~(options.keepAliveInitialDelay / 1000);\x0d\n\x0d\n  // Shut down the socket when we're finished with it.\x0d\n  this.on('end'\x2C onReadableStreamEnd);\x0d\n\x0d\n  initSocketHandle(this);\x0d\n\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  // If we have a handle\x2C then start the flow of data into the\x0d\n  // buffer.  if not\x2C then this will happen when we connect\x0d\n  if (this._handle && options.readable !== false) {\x0d\n    if (options.pauseOnCreate) {\x0d\n      // Stop the handle from reading and pause the stream\x0d\n      this._handle.reading = false;\x0d\n      this._handle.readStop();\x0d\n      this.readableFlowing = false;\x0d\n    } else if (!options.manualStart) {\x0d\n      this.read(0);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (options.signal) {\x0d\n    addClientAbortSignalOption(this\x2C options);\x0d\n  }\x0d\n\x0d\n  // Reserve properties\x0d\n  this.server = null;\x0d\n  this._server = null;\x0d\n\x0d\n  // Used after `.destroy()`\x0d\n  this[kBytesRead] = 0;\x0d\n  this[kBytesWritten] = 0;\x0d\n}\x0d\nObjectSetPrototypeOf(Socket.prototype\x2C stream.Duplex.prototype);\x0d\nObjectSetPrototypeOf(Socket\x2C stream.Duplex);\x0d\n\x0d\n// Refresh existing timeouts.\x0d\nSocket.prototype._unrefTimer = function _unrefTimer() {\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    if (s[kTimeout])\x0d\n      s[kTimeout].refresh();\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// The user has called .end()\x2C and all the bytes have been\x0d\n// sent out to the other side.\x0d\nSocket.prototype._final = function(cb) {\x0d\n  // If still connecting - defer handling `_final` until 'connect' will happen\x0d\n  if (this.pending) {\x0d\n    debug('_final: not yet connected');\x0d\n    return this.once('connect'\x2C () => this._final(cb));\x0d\n  }\x0d\n\x0d\n  if (!this._handle)\x0d\n    return cb();\x0d\n\x0d\n  debug('_final: not ended\x2C call shutdown()');\x0d\n\x0d\n  const req = new ShutdownWrap();\x0d\n  req.oncomplete = afterShutdown;\x0d\n  req.handle = this._handle;\x0d\n  req.callback = cb;\x0d\n  const err = this._handle.shutdown(req);\x0d\n\x0d\n  if (err === 1 || err === UV_ENOTCONN)  // synchronous finish\x0d\n    return cb();\x0d\n  else if (err !== 0)\x0d\n    return cb(new ErrnoException(err\x2C 'shutdown'));\x0d\n};\x0d\n\x0d\nfunction afterShutdown() {\x0d\n  const self = this.handle[owner_symbol];\x0d\n\x0d\n  debug('afterShutdown destroyed=%j'\x2C self.destroyed);\x0d\n\x0d\n  this.callback();\x0d\n}\x0d\n\x0d\n// Provide a better error message when we call end() as a result\x0d\n// of the other side sending a FIN.  The standard 'write after end'\x0d\n// is overly vague\x2C and makes it seem like the user's code is to blame.\x0d\nfunction writeAfterFIN(chunk\x2C encoding\x2C cb) {\x0d\n  if (!this.writableEnded) {\x0d\n    return stream.Duplex.prototype.write.call(this\x2C chunk\x2C encoding\x2C cb);\x0d\n  }\x0d\n\x0d\n  if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  const er = genericNodeError(\x0d\n    'This socket has been ended by the other party'\x2C\x0d\n    { code: 'EPIPE' }\x2C\x0d\n  );\x0d\n  if (typeof cb === 'function') {\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C process.nextTick\x2C cb\x2C er);\x0d\n  }\x0d\n  this.destroy(er);\x0d\n\x0d\n  return false;\x0d\n}\x0d\n\x0d\nSocket.prototype.setTimeout = setStreamTimeout;\x0d\n\x0d\n\x0d\nSocket.prototype._onTimeout = function() {\x0d\n  const handle = this._handle;\x0d\n  const lastWriteQueueSize = this[kLastWriteQueueSize];\x0d\n  if (lastWriteQueueSize > 0 && handle) {\x0d\n    // `lastWriteQueueSize !== writeQueueSize` means there is\x0d\n    // an active write in progress\x2C so we suppress the timeout.\x0d\n    const { writeQueueSize } = handle;\x0d\n    if (lastWriteQueueSize !== writeQueueSize) {\x0d\n      this[kLastWriteQueueSize] = writeQueueSize;\x0d\n      this._unrefTimer();\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  debug('_onTimeout');\x0d\n  this.emit('timeout');\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setNoDelay = function(enable) {\x0d\n  // Backwards compatibility: assume true when `enable` is omitted\x0d\n  enable = Boolean(enable === undefined ? true : enable);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (this._handle.setNoDelay && enable !== this[kSetNoDelay]) {\x0d\n    this[kSetNoDelay] = enable;\x0d\n    this._handle.setNoDelay(enable);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.setKeepAlive = function(enable\x2C initialDelayMsecs) {\x0d\n  enable = Boolean(enable);\x0d\n  const initialDelay = ~~(initialDelayMsecs / 1000);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!this._handle.setKeepAlive) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (enable !== this[kSetKeepAlive] ||\x0d\n      (\x0d\n        enable &&\x0d\n        this[kSetKeepAliveInitialDelay] !== initialDelay\x0d\n      )\x0d\n  ) {\x0d\n    this[kSetKeepAlive] = enable;\x0d\n    this[kSetKeepAliveInitialDelay] = initialDelay;\x0d\n    this._handle.setKeepAlive(enable\x2C initialDelay);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.address = function() {\x0d\n  return this._getsockname();\x0d\n};\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_connecting'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this.connecting;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'pending'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return !this._handle || this.connecting;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'readyState'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this.connecting) {\x0d\n      return 'opening';\x0d\n    } else if (this.readable && this.writable) {\x0d\n      return 'open';\x0d\n    } else if (this.readable && !this.writable) {\x0d\n      return 'readOnly';\x0d\n    } else if (!this.readable && this.writable) {\x0d\n      return 'writeOnly';\x0d\n    }\x0d\n    return 'closed';\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C 'bufferSize'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    if (this._handle) {\x0d\n      return this.writableLength;\x0d\n    }\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C kUpdateTimer\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return this._unrefTimer;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nfunction tryReadStart(socket) {\x0d\n  // Not already reading\x2C start the flow\x0d\n  debug('Socket._handle.readStart');\x0d\n  socket._handle.reading = true;\x0d\n  const err = socket._handle.readStart();\x0d\n  if (err)\x0d\n    socket.destroy(new ErrnoException(err\x2C 'read'));\x0d\n}\x0d\n\x0d\n// Just call handle.readStart until we have enough in the buffer\x0d\nSocket.prototype._read = function(n) {\x0d\n  debug(\x0d\n    '_read - n'\x2C n\x2C\x0d\n    'isConnecting?'\x2C !!this.connecting\x2C\x0d\n    'hasHandle?'\x2C !!this._handle\x2C\x0d\n  );\x0d\n\x0d\n  if (this.connecting || !this._handle) {\x0d\n    debug('_read wait for connection');\x0d\n    this.once('connect'\x2C () => this._read(n));\x0d\n  } else if (!this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.end = function(data\x2C encoding\x2C callback) {\x0d\n  stream.Duplex.prototype.end.call(this\x2C\x0d\n                                   data\x2C encoding\x2C callback);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.resetAndDestroy = function() {\x0d\n  if (this._handle) {\x0d\n    if (!(this._handle instanceof TCP))\x0d\n      throw new ERR_INVALID_HANDLE_TYPE();\x0d\n    if (this.connecting) {\x0d\n      debug('reset wait for connection');\x0d\n      this.once('connect'\x2C () => this._reset());\x0d\n    } else {\x0d\n      this._reset();\x0d\n    }\x0d\n  } else {\x0d\n    this.destroy(new ERR_SOCKET_CLOSED());\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype.pause = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      this._handle.reading) {\x0d\n    this._handle.reading = false;\x0d\n    if (!this.destroyed) {\x0d\n      const err = this._handle.readStop();\x0d\n      if (err)\x0d\n        this.destroy(new ErrnoException(err\x2C 'read'));\x0d\n    }\x0d\n  }\x0d\n  return stream.Duplex.prototype.pause.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.resume = function() {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.resume.call(this);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.read = function(n) {\x0d\n  if (this[kBuffer] && !this.connecting && this._handle &&\x0d\n      !this._handle.reading) {\x0d\n    tryReadStart(this);\x0d\n  }\x0d\n  return stream.Duplex.prototype.read.call(this\x2C n);\x0d\n};\x0d\n\x0d\n\x0d\n// Called when the 'end' event is emitted.\x0d\nfunction onReadableStreamEnd() {\x0d\n  if (!this.allowHalfOpen) {\x0d\n    this.write = writeAfterFIN;\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.destroySoon = function() {\x0d\n  if (this.writable)\x0d\n    this.end();\x0d\n\x0d\n  if (this.writableFinished)\x0d\n    this.destroy();\x0d\n  else\x0d\n    this.once('finish'\x2C this.destroy);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._destroy = function(exception\x2C cb) {\x0d\n  debug('destroy');\x0d\n\x0d\n  this.connecting = false;\x0d\n\x0d\n  for (let s = this; s !== null; s = s._parent) {\x0d\n    clearTimeout(s[kTimeout]);\x0d\n  }\x0d\n\x0d\n  debug('close');\x0d\n  if (this._handle) {\x0d\n    if (this !== process.stderr)\x0d\n      debug('close handle');\x0d\n    const isException = exception ? true : false;\x0d\n    // `bytesRead` and `kBytesWritten` should be accessible after `.destroy()`\x0d\n    this[kBytesRead] = this._handle.bytesRead;\x0d\n    this[kBytesWritten] = this._handle.bytesWritten;\x0d\n\x0d\n    if (this.resetAndClosing) {\x0d\n      this.resetAndClosing = false;\x0d\n      const err = this._handle.reset(() => {\x0d\n        debug('emit close');\x0d\n        this.emit('close'\x2C isException);\x0d\n      });\x0d\n      if (err)\x0d\n        this.emit('error'\x2C new ErrnoException(err\x2C 'reset'));\x0d\n    } else if (this._closeAfterHandlingError) {\x0d\n      // Enqueue closing the socket as a microtask\x2C so that the socket can be\x0d\n      // accessible when an `error` event is handled in the `next tick queue`.\x0d\n      queueMicrotask(() => closeSocketHandle(this\x2C isException\x2C true));\x0d\n    } else {\x0d\n      closeSocketHandle(this\x2C isException);\x0d\n    }\x0d\n\x0d\n    if (!this._closeAfterHandlingError) {\x0d\n      this._handle.onread = noop;\x0d\n      this._handle = null;\x0d\n      this._sockname = null;\x0d\n    }\x0d\n    cb(exception);\x0d\n  } else {\x0d\n    cb(exception);\x0d\n    process.nextTick(emitCloseNT\x2C this);\x0d\n  }\x0d\n\x0d\n  if (this._server) {\x0d\n    debug('has server');\x0d\n    this._server._connections--;\x0d\n    if (this._server._emitCloseIfDrained) {\x0d\n      this._server._emitCloseIfDrained();\x0d\n    }\x0d\n  }\x0d\n};\x0d\n\x0d\nSocket.prototype._reset = function() {\x0d\n  debug('reset connection');\x0d\n  this.resetAndClosing = true;\x0d\n  return this.destroy();\x0d\n};\x0d\n\x0d\nSocket.prototype._getpeername = function() {\x0d\n  if (!this._handle || !this._handle.getpeername || this.connecting) {\x0d\n    return this._peername || {};\x0d\n  } else if (!this._peername) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getpeername(out);\x0d\n    if (err) return out;\x0d\n    this._peername = out;\x0d\n  }\x0d\n  return this._peername;\x0d\n};\x0d\n\x0d\nfunction protoGetter(name\x2C callback) {\x0d\n  ObjectDefineProperty(Socket.prototype\x2C name\x2C {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    get: callback\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nprotoGetter('bytesRead'\x2C function bytesRead() {\x0d\n  return this._handle ? this._handle.bytesRead : this[kBytesRead];\x0d\n});\x0d\n\x0d\nprotoGetter('remoteAddress'\x2C function remoteAddress() {\x0d\n  return this._getpeername().address;\x0d\n});\x0d\n\x0d\nprotoGetter('remoteFamily'\x2C function remoteFamily() {\x0d\n  return this._getpeername().family;\x0d\n});\x0d\n\x0d\nprotoGetter('remotePort'\x2C function remotePort() {\x0d\n  return this._getpeername().port;\x0d\n});\x0d\n\x0d\n\x0d\nSocket.prototype._getsockname = function() {\x0d\n  if (!this._handle || !this._handle.getsockname) {\x0d\n    return {};\x0d\n  } else if (!this._sockname) {\x0d\n    this._sockname = {};\x0d\n    // FIXME(bnoordhuis) Throw when the return value is not 0?\x0d\n    this._handle.getsockname(this._sockname);\x0d\n  }\x0d\n  return this._sockname;\x0d\n};\x0d\n\x0d\n\x0d\nprotoGetter('localAddress'\x2C function localAddress() {\x0d\n  return this._getsockname().address;\x0d\n});\x0d\n\x0d\n\x0d\nprotoGetter('localPort'\x2C function localPort() {\x0d\n  return this._getsockname().port;\x0d\n});\x0d\n\x0d\nprotoGetter('localFamily'\x2C function localFamily() {\x0d\n  return this._getsockname().family;\x0d\n});\x0d\n\x0d\nSocket.prototype[kAfterAsyncWrite] = function() {\x0d\n  this[kLastWriteQueueSize] = 0;\x0d\n};\x0d\n\x0d\nSocket.prototype._writeGeneric = function(writev\x2C data\x2C encoding\x2C cb) {\x0d\n  // If we are still connecting\x2C then buffer this for later.\x0d\n  // The Writable logic will buffer up any more writes while\x0d\n  // waiting for this one to be done.\x0d\n  if (this.connecting) {\x0d\n    this._pendingData = data;\x0d\n    this._pendingEncoding = encoding;\x0d\n    this.once('connect'\x2C function connect() {\x0d\n      this.off('close'\x2C onClose);\x0d\n      this._writeGeneric(writev\x2C data\x2C encoding\x2C cb);\x0d\n    });\x0d\n    function onClose() {\x0d\n      cb(new ERR_SOCKET_CLOSED_BEFORE_CONNECTION());\x0d\n    }\x0d\n    this.once('close'\x2C onClose);\x0d\n    return;\x0d\n  }\x0d\n  this._pendingData = null;\x0d\n  this._pendingEncoding = '';\x0d\n\x0d\n  if (!this._handle) {\x0d\n    cb(new ERR_SOCKET_CLOSED());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  let req;\x0d\n  if (writev)\x0d\n    req = writevGeneric(this\x2C data\x2C cb);\x0d\n  else\x0d\n    req = writeGeneric(this\x2C data\x2C encoding\x2C cb);\x0d\n  if (req.async)\x0d\n    this[kLastWriteQueueSize] = req.bytes;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._writev = function(chunks\x2C cb) {\x0d\n  this._writeGeneric(true\x2C chunks\x2C ''\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype._write = function(data\x2C encoding\x2C cb) {\x0d\n  this._writeGeneric(false\x2C data\x2C encoding\x2C cb);\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias. Having this is probably being overly cautious\x2C but it doesn't\x0d\n// really hurt anyone either. This can probably be removed safely if desired.\x0d\nprotoGetter('_bytesDispatched'\x2C function _bytesDispatched() {\x0d\n  return this._handle ? this._handle.bytesWritten : this[kBytesWritten];\x0d\n});\x0d\n\x0d\nprotoGetter('bytesWritten'\x2C function bytesWritten() {\x0d\n  let bytes = this._bytesDispatched;\x0d\n  const data = this._pendingData;\x0d\n  const encoding = this._pendingEncoding;\x0d\n  const writableBuffer = this.writableBuffer;\x0d\n\x0d\n  if (!writableBuffer)\x0d\n    return undefined;\x0d\n\x0d\n  for (const el of writableBuffer) {\x0d\n    bytes += el.chunk instanceof Buffer ?\x0d\n      el.chunk.length :\x0d\n      Buffer.byteLength(el.chunk\x2C el.encoding);\x0d\n  }\x0d\n\x0d\n  if (ArrayIsArray(data)) {\x0d\n    // Was a writev\x2C iterate over chunks to get total length\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const chunk = data[i];\x0d\n\x0d\n      if (data.allBuffers || chunk instanceof Buffer)\x0d\n        bytes += chunk.length;\x0d\n      else\x0d\n        bytes += Buffer.byteLength(chunk.chunk\x2C chunk.encoding);\x0d\n    }\x0d\n  } else if (data) {\x0d\n    // Writes are either a string or a Buffer.\x0d\n    if (typeof data !== 'string')\x0d\n      bytes += data.length;\x0d\n    else\x0d\n      bytes += Buffer.byteLength(data\x2C encoding);\x0d\n  }\x0d\n\x0d\n  return bytes;\x0d\n});\x0d\n\x0d\n\x0d\nfunction checkBindError(err\x2C port\x2C handle) {\x0d\n  // EADDRINUSE may not be reported until we call listen() or connect().\x0d\n  // To complicate matters\x2C a failed bind() followed by listen() or connect()\x0d\n  // will implicitly bind to a random port. Ergo\x2C check that the socket is\x0d\n  // bound to the expected port before calling listen() or connect().\x0d\n  //\x0d\n  // FIXME(bnoordhuis) Doesn't work for pipe handles\x2C they don't have a\x0d\n  // getsockname() method. Non-issue for now\x2C the cluster module doesn't\x0d\n  // really support pipes anyway.\x0d\n  if (err === 0 && port > 0 && handle.getsockname) {\x0d\n    const out = {};\x0d\n    err = handle.getsockname(out);\x0d\n    if (err === 0 && port !== out.port) {\x0d\n      debug(`checkBindError\x2C bound to ${out.port} instead of ${port}`);\x0d\n      err = UV_EADDRINUSE;\x0d\n    }\x0d\n  }\x0d\n  return err;\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnect(\x0d\n  self\x2C address\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C flags) {\x0d\n  // TODO return promise from Socket.prototype.connect which\x0d\n  // wraps _connectReq.\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (localAddress || localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = localAddress || DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = localAddress || DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n    debug('connect: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort);\x0d\n      self.destroy(ex);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  debug('connect: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\x0d\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\x0d\n\x0d\n  if (addressType === 6 || addressType === 4) {\x0d\n    const req = new TCPConnectWrap();\x0d\n    req.oncomplete = afterConnect;\x0d\n    req.address = address;\x0d\n    req.port = port;\x0d\n    req.localAddress = localAddress;\x0d\n    req.localPort = localPort;\x0d\n    req.addressType = addressType;\x0d\n\x0d\n    if (addressType === 4)\x0d\n      err = self._handle.connect(req\x2C address\x2C port);\x0d\n    else\x0d\n      err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    const req = new PipeConnectWrap();\x0d\n    req.address = address;\x0d\n    req.oncomplete = afterConnect;\x0d\n\x0d\n    err = self._handle.connect(req\x2C address);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    self.destroy(ex);\x0d\n  } else if ((addressType === 6 || addressType === 4) && hasObserver('net')) {\x0d\n    startPerf(self\x2C kPerfHooksNetConnectContext\x2C { type: 'net'\x2C name: 'connect'\x2C detail: { host: address\x2C port } });\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nfunction internalConnectMultiple(context\x2C canceled) {\x0d\n  clearTimeout(context[kTimeout]);\x0d\n  const self = context.socket;\x0d\n\x0d\n  // We were requested to abort. Stop all operations\x0d\n  if (self._aborted) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // All connections have been tried without success\x2C destroy with error\x0d\n  if (canceled || context.current === context.addresses.length) {\x0d\n    if (context.errors.length === 0) {\x0d\n      self.destroy(new ERR_SOCKET_CONNECTION_TIMEOUT());\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    self.destroy(new NodeAggregateError(context.errors));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  assert(self.connecting);\x0d\n\x0d\n  const current = context.current++;\x0d\n\x0d\n  if (current > 0) {\x0d\n    self[kReinitializeHandle](new TCP(TCPConstants.SOCKET));\x0d\n  }\x0d\n\x0d\n  const { localPort\x2C port\x2C flags } = context;\x0d\n  const { address\x2C family: addressType } = context.addresses[current];\x0d\n  let localAddress;\x0d\n  let err;\x0d\n\x0d\n  if (localPort) {\x0d\n    if (addressType === 4) {\x0d\n      localAddress = DEFAULT_IPV4_ADDR;\x0d\n      err = self._handle.bind(localAddress\x2C localPort);\x0d\n    } else { // addressType === 6\x0d\n      localAddress = DEFAULT_IPV6_ADDR;\x0d\n      err = self._handle.bind6(localAddress\x2C localPort\x2C flags);\x0d\n    }\x0d\n\x0d\n    debug('connect/multiple: binding to localAddress: %s and localPort: %d (addressType: %d)'\x2C\x0d\n          localAddress\x2C localPort\x2C addressType);\x0d\n\x0d\n    err = checkBindError(err\x2C localPort\x2C self._handle);\x0d\n    if (err) {\x0d\n      ArrayPrototypePush(context.errors\x2C new ExceptionWithHostPort(err\x2C 'bind'\x2C localAddress\x2C localPort));\x0d\n      internalConnectMultiple(context);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  debug('connect/multiple: attempting to connect to %s:%d (addressType: %d)'\x2C address\x2C port\x2C addressType);\x0d\n  self.emit('connectionAttempt'\x2C address\x2C port\x2C addressType);\x0d\n\x0d\n  const req = new TCPConnectWrap();\x0d\n  req.oncomplete = FunctionPrototypeBind(afterConnectMultiple\x2C undefined\x2C context\x2C current);\x0d\n  req.address = address;\x0d\n  req.port = port;\x0d\n  req.localAddress = localAddress;\x0d\n  req.localPort = localPort;\x0d\n  req.addressType = addressType;\x0d\n\x0d\n  ArrayPrototypePush(self.autoSelectFamilyAttemptedAddresses\x2C `${address}:${port}`);\x0d\n\x0d\n  if (addressType === 4) {\x0d\n    err = self._handle.connect(req\x2C address\x2C port);\x0d\n  } else {\x0d\n    err = self._handle.connect6(req\x2C address\x2C port);\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    const sockname = self._getsockname();\x0d\n    let details;\x0d\n\x0d\n    if (sockname) {\x0d\n      details = sockname.address + ':' + sockname.port;\x0d\n    }\x0d\n\x0d\n    const ex = new ExceptionWithHostPort(err\x2C 'connect'\x2C address\x2C port\x2C details);\x0d\n    ArrayPrototypePush(context.errors\x2C ex);\x0d\n\x0d\n    self.emit('connectionAttemptFailed'\x2C address\x2C port\x2C addressType\x2C ex);\x0d\n    internalConnectMultiple(context);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (current < context.addresses.length - 1) {\x0d\n    debug('connect/multiple: setting the attempt timeout to %d ms'\x2C context.timeout);\x0d\n\x0d\n    // If the attempt has not returned an error\x2C start the connection timer\x0d\n    context[kTimeout] = setTimeout(internalConnectMultipleTimeout\x2C context.timeout\x2C context\x2C req\x2C self._handle);\x0d\n  }\x0d\n}\x0d\n\x0d\nSocket.prototype.connect = function(...args) {\x0d\n  let normalized;\x0d\n  // If passed an array\x2C it's treated as an array of arguments that have\x0d\n  // already been normalized (so we don't normalize more than once). This has\x0d\n  // been solved before in https://github.com/nodejs/node/pull/12342\x2C but was\x0d\n  // reverted as it had unintended side effects.\x0d\n  if (ArrayIsArray(args[0]) && args[0][normalizedArgsSymbol]) {\x0d\n    normalized = args[0];\x0d\n  } else {\x0d\n    normalized = normalizeArgs(args);\x0d\n  }\x0d\n  const options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('connect'\x2C cb);\x0d\n  }\x0d\n\x0d\n  // If the parent is already connecting\x2C do not attempt to connect again\x0d\n  if (this._parent && this._parent.connecting) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // options.port === null will be checked later.\x0d\n  if (options.port === undefined && options.path == null)\x0d\n    throw new ERR_MISSING_ARGS(['options'\x2C 'port'\x2C 'path']);\x0d\n\x0d\n  if (this.write !== Socket.prototype.write)\x0d\n    this.write = Socket.prototype.write;\x0d\n\x0d\n  if (this.destroyed) {\x0d\n    this._handle = null;\x0d\n    this._peername = null;\x0d\n    this._sockname = null;\x0d\n  }\x0d\n\x0d\n  const { path } = options;\x0d\n  const pipe = !!path;\x0d\n  debug('pipe'\x2C pipe\x2C path);\x0d\n\x0d\n  if (!this._handle) {\x0d\n    this._handle = pipe ?\x0d\n      new Pipe(PipeConstants.SOCKET) :\x0d\n      new TCP(TCPConstants.SOCKET);\x0d\n    initSocketHandle(this);\x0d\n  }\x0d\n\x0d\n  this._unrefTimer();\x0d\n\x0d\n  this.connecting = true;\x0d\n\x0d\n  if (pipe) {\x0d\n    validateString(path\x2C 'options.path');\x0d\n    defaultTriggerAsyncIdScope(\x0d\n      this[async_id_symbol]\x2C internalConnect\x2C this\x2C path\x2C\x0d\n    );\x0d\n  } else {\x0d\n    lookupAndConnect(this\x2C options);\x0d\n  }\x0d\n  return this;\x0d\n};\x0d\n\x0d\nSocket.prototype[kReinitializeHandle] = function reinitializeHandle(handle) {\x0d\n  this._handle?.close();\x0d\n\x0d\n  this._handle = handle;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  initSocketHandle(this);\x0d\n};\x0d\n\x0d\nfunction socketToDnsFamily(family) {\x0d\n  switch (family) {\x0d\n    case 'IPv4':\x0d\n      return 4;\x0d\n    case 'IPv6':\x0d\n      return 6;\x0d\n  }\x0d\n\x0d\n  return family;\x0d\n}\x0d\n\x0d\nfunction lookupAndConnect(self\x2C options) {\x0d\n  const { localAddress\x2C localPort } = options;\x0d\n  const host = options.host || 'localhost';\x0d\n  let { port\x2C autoSelectFamilyAttemptTimeout\x2C autoSelectFamily } = options;\x0d\n\x0d\n  if (localAddress && !isIP(localAddress)) {\x0d\n    throw new ERR_INVALID_IP_ADDRESS(localAddress);\x0d\n  }\x0d\n\x0d\n  if (localPort) {\x0d\n    validateNumber(localPort\x2C 'options.localPort');\x0d\n  }\x0d\n\x0d\n  if (typeof port !== 'undefined') {\x0d\n    if (typeof port !== 'number' && typeof port !== 'string') {\x0d\n      throw new ERR_INVALID_ARG_TYPE('options.port'\x2C\x0d\n                                     ['number'\x2C 'string']\x2C port);\x0d\n    }\x0d\n    validatePort(port);\x0d\n  }\x0d\n  port |= 0;\x0d\n\x0d\n\x0d\n  if (autoSelectFamily != null) {\x0d\n    validateBoolean(autoSelectFamily\x2C 'options.autoSelectFamily');\x0d\n  } else {\x0d\n    autoSelectFamily = autoSelectFamilyDefault;\x0d\n  }\x0d\n\x0d\n  if (autoSelectFamilyAttemptTimeout != null) {\x0d\n    validateInt32(autoSelectFamilyAttemptTimeout\x2C 'options.autoSelectFamilyAttemptTimeout'\x2C 1);\x0d\n\x0d\n    if (autoSelectFamilyAttemptTimeout < 10) {\x0d\n      autoSelectFamilyAttemptTimeout = 10;\x0d\n    }\x0d\n  } else {\x0d\n    autoSelectFamilyAttemptTimeout = autoSelectFamilyAttemptTimeoutDefault;\x0d\n  }\x0d\n\x0d\n  // If host is an IP\x2C skip performing a lookup\x0d\n  const addressType = isIP(host);\x0d\n  if (addressType) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C process.nextTick\x2C () => {\x0d\n      if (self.connecting)\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C host\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\x0d\n        );\x0d\n    });\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (options.lookup != null)\x0d\n    validateFunction(options.lookup\x2C 'options.lookup');\x0d\n\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const dnsopts = {\x0d\n    family: socketToDnsFamily(options.family)\x2C\x0d\n    hints: options.hints || 0\x2C\x0d\n  };\x0d\n\x0d\n  if (!isWindows &&\x0d\n      dnsopts.family !== 4 &&\x0d\n      dnsopts.family !== 6 &&\x0d\n      dnsopts.hints === 0) {\x0d\n    dnsopts.hints = dns.ADDRCONFIG;\x0d\n  }\x0d\n\x0d\n  debug('connect: find host'\x2C host);\x0d\n  debug('connect: dns options'\x2C dnsopts);\x0d\n  self._host = host;\x0d\n  const lookup = options.lookup || dns.lookup;\x0d\n\x0d\n  if (dnsopts.family !== 4 && dnsopts.family !== 6 && !localAddress && autoSelectFamily) {\x0d\n    debug('connect: autodetecting');\x0d\n\x0d\n    dnsopts.all = true;\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n      lookupAndConnectMultiple(\x0d\n        self\x2C\x0d\n        async_id_symbol\x2C\x0d\n        lookup\x2C\x0d\n        host\x2C\x0d\n        options\x2C\x0d\n        dnsopts\x2C\x0d\n        port\x2C\x0d\n        localAddress\x2C\x0d\n        localPort\x2C\x0d\n        autoSelectFamilyAttemptTimeout\x2C\x0d\n      );\x0d\n    });\x0d\n\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C ip\x2C addressType) {\x0d\n      self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) return;\x0d\n\x0d\n      if (err) {\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (!isIP(ip)) {\x0d\n        err = new ERR_INVALID_IP_ADDRESS(ip);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else if (addressType !== 4 && addressType !== 6) {\x0d\n        err = new ERR_INVALID_ADDRESS_FAMILY(addressType\x2C\x0d\n                                             options.host\x2C\x0d\n                                             options.port);\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n      } else {\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C ip\x2C port\x2C addressType\x2C localAddress\x2C localPort\x2C\x0d\n        );\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction lookupAndConnectMultiple(\x0d\n  self\x2C async_id_symbol\x2C lookup\x2C host\x2C options\x2C dnsopts\x2C port\x2C localAddress\x2C localPort\x2C timeout\x2C\x0d\n) {\x0d\n  defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C function emitLookup() {\x0d\n    lookup(host\x2C dnsopts\x2C function emitLookup(err\x2C addresses) {\x0d\n      // It's possible we were destroyed while looking this up.\x0d\n      // XXX it would be great if we could cancel the promise returned by\x0d\n      // the look up.\x0d\n      if (!self.connecting) {\x0d\n        return;\x0d\n      } else if (err) {\x0d\n        self.emit('lookup'\x2C err\x2C undefined\x2C undefined\x2C host);\x0d\n\x0d\n        // net.createConnection() creates a net.Socket object and immediately\x0d\n        // calls net.Socket.connect() on it (that's us). There are no event\x0d\n        // listeners registered yet so defer the error event to the next tick.\x0d\n        process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Filter addresses by only keeping the one which are either IPv4 or IPV6.\x0d\n      // The first valid address determines which group has preference on the\x0d\n      // alternate family sorting which happens later.\x0d\n      const validAddresses = [[]\x2C []];\x0d\n      const validIps = [[]\x2C []];\x0d\n      let destinations;\x0d\n      for (let i = 0\x2C l = addresses.length; i < l; i++) {\x0d\n        const address = addresses[i];\x0d\n        const { address: ip\x2C family: addressType } = address;\x0d\n        self.emit('lookup'\x2C err\x2C ip\x2C addressType\x2C host);\x0d\n        // It's possible we were destroyed while looking this up.\x0d\n        if (!self.connecting) {\x0d\n          return;\x0d\n        }\x0d\n        if (isIP(ip) && (addressType === 4 || addressType === 6)) {\x0d\n          if (!destinations) {\x0d\n            destinations = addressType === 6 ? { 6: 0\x2C 4: 1 } : { 4: 0\x2C 6: 1 };\x0d\n          }\x0d\n\x0d\n          const destination = destinations[addressType];\x0d\n\x0d\n          // Only try an address once\x0d\n          if (!ArrayPrototypeIncludes(validIps[destination]\x2C ip)) {\x0d\n            ArrayPrototypePush(validAddresses[destination]\x2C address);\x0d\n            ArrayPrototypePush(validIps[destination]\x2C ip);\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n\x0d\n\x0d\n      // When no AAAA or A records are available\x2C fail on the first one\x0d\n      if (!validAddresses[0].length && !validAddresses[1].length) {\x0d\n        const { address: firstIp\x2C family: firstAddressType } = addresses[0];\x0d\n\x0d\n        if (!isIP(firstIp)) {\x0d\n          err = new ERR_INVALID_IP_ADDRESS(firstIp);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        } else if (firstAddressType !== 4 && firstAddressType !== 6) {\x0d\n          err = new ERR_INVALID_ADDRESS_FAMILY(firstAddressType\x2C\x0d\n                                               options.host\x2C\x0d\n                                               options.port);\x0d\n          process.nextTick(connectErrorNT\x2C self\x2C err);\x0d\n        }\x0d\n\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Sort addresses alternating families\x0d\n      const toAttempt = [];\x0d\n      for (let i = 0\x2C l = MathMax(validAddresses[0].length\x2C validAddresses[1].length); i < l; i++) {\x0d\n        if (i in validAddresses[0]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validAddresses[0][i]);\x0d\n        }\x0d\n        if (i in validAddresses[1]) {\x0d\n          ArrayPrototypePush(toAttempt\x2C validAddresses[1][i]);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      if (toAttempt.length === 1) {\x0d\n        debug('connect/multiple: only one address found\x2C switching back to single connection');\x0d\n        const { address: ip\x2C family: addressType } = toAttempt[0];\x0d\n\x0d\n        self._unrefTimer();\x0d\n        defaultTriggerAsyncIdScope(\x0d\n          self[async_id_symbol]\x2C\x0d\n          internalConnect\x2C\x0d\n          self\x2C\x0d\n          ip\x2C\x0d\n          port\x2C\x0d\n          addressType\x2C\x0d\n          localAddress\x2C\x0d\n          localPort\x2C\x0d\n        );\x0d\n\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      self.autoSelectFamilyAttemptedAddresses = [];\x0d\n      debug('connect/multiple: will try the following addresses'\x2C toAttempt);\x0d\n\x0d\n      const context = {\x0d\n        socket: self\x2C\x0d\n        addresses: toAttempt\x2C\x0d\n        current: 0\x2C\x0d\n        port\x2C\x0d\n        localPort\x2C\x0d\n        timeout\x2C\x0d\n        [kTimeout]: null\x2C\x0d\n        errors: []\x2C\x0d\n      };\x0d\n\x0d\n      self._unrefTimer();\x0d\n      defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C internalConnectMultiple\x2C context);\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction connectErrorNT(self\x2C err) {\x0d\n  self.destroy(err);\x0d\n}\x0d\n\x0d\n\x0d\nSocket.prototype.ref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.ref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.ref === 'function') {\x0d\n    this._handle.ref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nSocket.prototype.unref = function() {\x0d\n  if (!this._handle) {\x0d\n    this.once('connect'\x2C this.unref);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (typeof this._handle.unref === 'function') {\x0d\n    this._handle.unref();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nfunction afterConnect(status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  // Callback may come after call to destroy\x0d\n  if (self.destroyed) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  debug('afterConnect');\x0d\n\x0d\n  assert(self.connecting);\x0d\n  self.connecting = false;\x0d\n  self._sockname = null;\x0d\n\x0d\n  if (status === 0) {\x0d\n    if (self.readable && !readable) {\x0d\n      self.push(null);\x0d\n      self.read();\x0d\n    }\x0d\n    if (self.writable && !writable) {\x0d\n      self.end();\x0d\n    }\x0d\n    self._unrefTimer();\x0d\n\x0d\n    if (self[kSetNoDelay] && self._handle.setNoDelay) {\x0d\n      self._handle.setNoDelay(true);\x0d\n    }\x0d\n\x0d\n    if (self[kSetKeepAlive] && self._handle.setKeepAlive) {\x0d\n      self._handle.setKeepAlive(true\x2C self[kSetKeepAliveInitialDelay]);\x0d\n    }\x0d\n\x0d\n    self.emit('connect');\x0d\n    self.emit('ready');\x0d\n\x0d\n    // Start the first read\x2C or get an immediate EOF.\x0d\n    // this doesn't actually consume any bytes\x2C because len=0.\x0d\n    if (readable && !self.isPaused())\x0d\n      self.read(0);\x0d\n    if (self[kPerfHooksNetConnectContext] && hasObserver('net')) {\x0d\n      stopPerf(self\x2C kPerfHooksNetConnectContext);\x0d\n    }\x0d\n  } else {\x0d\n    let details;\x0d\n    if (req.localAddress && req.localPort) {\x0d\n      details = req.localAddress + ':' + req.localPort;\x0d\n    }\x0d\n    const ex = new ExceptionWithHostPort(status\x2C\x0d\n                                         'connect'\x2C\x0d\n                                         req.address\x2C\x0d\n                                         req.port\x2C\x0d\n                                         details);\x0d\n    if (details) {\x0d\n      ex.localAddress = req.localAddress;\x0d\n      ex.localPort = req.localPort;\x0d\n    }\x0d\n\x0d\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\x0d\n    self.destroy(ex);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addClientAbortSignalOption(self\x2C options) {\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  let disposable;\x0d\n\x0d\n  function onAbort() {\x0d\n    disposable?.[SymbolDispose]();\x0d\n    self._aborted = true;\x0d\n  }\x0d\n\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAbort);\x0d\n  } else {\x0d\n    process.nextTick(() => {\x0d\n      disposable = EventEmitter.addAbortListener(signal\x2C onAbort);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction createConnectionError(req\x2C status) {\x0d\n  let details;\x0d\n\x0d\n  if (req.localAddress && req.localPort) {\x0d\n    details = req.localAddress + ':' + req.localPort;\x0d\n  }\x0d\n\x0d\n  const ex = new ExceptionWithHostPort(status\x2C\x0d\n                                       'connect'\x2C\x0d\n                                       req.address\x2C\x0d\n                                       req.port\x2C\x0d\n                                       details);\x0d\n  if (details) {\x0d\n    ex.localAddress = req.localAddress;\x0d\n    ex.localPort = req.localPort;\x0d\n  }\x0d\n\x0d\n  return ex;\x0d\n}\x0d\n\x0d\nfunction afterConnectMultiple(context\x2C current\x2C status\x2C handle\x2C req\x2C readable\x2C writable) {\x0d\n  debug('connect/multiple: connection attempt to %s:%s completed with status %s'\x2C req.address\x2C req.port\x2C status);\x0d\n\x0d\n  // Make sure another connection is not spawned\x0d\n  clearTimeout(context[kTimeout]);\x0d\n\x0d\n  // One of the connection has completed and correctly dispatched but after timeout\x2C ignore this one\x0d\n  if (status === 0 && current !== context.current - 1) {\x0d\n    debug('connect/multiple: ignoring successful but timedout connection to %s:%s'\x2C req.address\x2C req.port);\x0d\n    handle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const self = context.socket;\x0d\n\x0d\n  // Some error occurred\x2C add to the list of exceptions\x0d\n  if (status !== 0) {\x0d\n    const ex = createConnectionError(req\x2C status);\x0d\n    ArrayPrototypePush(context.errors\x2C ex);\x0d\n\x0d\n    self.emit('connectionAttemptFailed'\x2C req.address\x2C req.port\x2C req.addressType\x2C ex);\x0d\n\x0d\n    // Try the next address\x2C unless we were aborted\x0d\n    if (context.socket.connecting) {\x0d\n      internalConnectMultiple(context\x2C status === UV_ECANCELED);\x0d\n    }\x0d\n\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (hasObserver('net')) {\x0d\n    startPerf(\x0d\n      self\x2C\x0d\n      kPerfHooksNetConnectContext\x2C\x0d\n      { type: 'net'\x2C name: 'connect'\x2C detail: { host: req.address\x2C port: req.port } }\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  afterConnect(status\x2C self._handle\x2C req\x2C readable\x2C writable);\x0d\n}\x0d\n\x0d\nfunction internalConnectMultipleTimeout(context\x2C req\x2C handle) {\x0d\n  debug('connect/multiple: connection to %s:%s timed out'\x2C req.address\x2C req.port);\x0d\n  context.socket.emit('connectionAttemptTimeout'\x2C req.address\x2C req.port\x2C req.addressType);\x0d\n\x0d\n  req.oncomplete = undefined;\x0d\n  ArrayPrototypePush(context.errors\x2C createConnectionError(req\x2C UV_ETIMEDOUT));\x0d\n  handle.close();\x0d\n\x0d\n  // Try the next address\x2C unless we were aborted\x0d\n  if (context.socket.connecting) {\x0d\n    internalConnectMultiple(context);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction addServerAbortSignalOption(self\x2C options) {\x0d\n  if (options?.signal === undefined) {\x0d\n    return;\x0d\n  }\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  const { signal } = options;\x0d\n  const onAborted = () => {\x0d\n    self.close();\x0d\n  };\x0d\n  if (signal.aborted) {\x0d\n    process.nextTick(onAborted);\x0d\n  } else {\x0d\n    const disposable = EventEmitter.addAbortListener(signal\x2C onAborted);\x0d\n    self.once('close'\x2C disposable[SymbolDispose]);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Server(options\x2C connectionListener) {\x0d\n  if (!(this instanceof Server))\x0d\n    return new Server(options\x2C connectionListener);\x0d\n\x0d\n  EventEmitter.call(this);\x0d\n\x0d\n  if (typeof options === 'function') {\x0d\n    connectionListener = options;\x0d\n    options = kEmptyObject;\x0d\n    this.on('connection'\x2C connectionListener);\x0d\n  } else if (options == null || typeof options === 'object') {\x0d\n    options = { ...options };\x0d\n\x0d\n    if (typeof connectionListener === 'function') {\x0d\n      this.on('connection'\x2C connectionListener);\x0d\n    }\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('options'\x2C 'Object'\x2C options);\x0d\n  }\x0d\n  if (typeof options.keepAliveInitialDelay !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.keepAliveInitialDelay\x2C 'options.keepAliveInitialDelay'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.keepAliveInitialDelay < 0) {\x0d\n      options.keepAliveInitialDelay = 0;\x0d\n    }\x0d\n  }\x0d\n  if (typeof options.highWaterMark !== 'undefined') {\x0d\n    validateNumber(\x0d\n      options.highWaterMark\x2C 'options.highWaterMark'\x2C\x0d\n    );\x0d\n\x0d\n    if (options.highWaterMark < 0) {\x0d\n      options.highWaterMark = getDefaultHighWaterMark();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  this._connections = 0;\x0d\n\x0d\n  this[async_id_symbol] = -1;\x0d\n  this._handle = null;\x0d\n  this._usingWorkers = false;\x0d\n  this._workers = [];\x0d\n  this._unref = false;\x0d\n  this._listeningId = 1;\x0d\n\x0d\n  this.allowHalfOpen = options.allowHalfOpen || false;\x0d\n  this.pauseOnConnect = !!options.pauseOnConnect;\x0d\n  this.noDelay = Boolean(options.noDelay);\x0d\n  this.keepAlive = Boolean(options.keepAlive);\x0d\n  this.keepAliveInitialDelay = ~~(options.keepAliveInitialDelay / 1000);\x0d\n  this.highWaterMark = options.highWaterMark ?? getDefaultHighWaterMark();\x0d\n}\x0d\nObjectSetPrototypeOf(Server.prototype\x2C EventEmitter.prototype);\x0d\nObjectSetPrototypeOf(Server\x2C EventEmitter);\x0d\n\x0d\n\x0d\nfunction toNumber(x) { return (x = Number(x)) >= 0 ? x : false; }\x0d\n\x0d\n// Returns handle if it can be created\x2C or error code if it can't\x0d\nfunction createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags) {\x0d\n  let err = 0;\x0d\n  // Assign handle in listen\x2C and clean up if bind or listen fails\x0d\n  let handle;\x0d\n\x0d\n  let isTCP = false;\x0d\n  if (typeof fd === 'number' && fd >= 0) {\x0d\n    try {\x0d\n      handle = createHandle(fd\x2C true);\x0d\n    } catch (e) {\x0d\n      // Not a fd we can listen on.  This will trigger an error.\x0d\n      debug('listen invalid fd=%d:'\x2C fd\x2C e.message);\x0d\n      return UV_EINVAL;\x0d\n    }\x0d\n\x0d\n    err = handle.open(fd);\x0d\n    if (err)\x0d\n      return err;\x0d\n\x0d\n    assert(!address && !port);\x0d\n  } else if (port === -1 && addressType === -1) {\x0d\n    handle = new Pipe(PipeConstants.SERVER);\x0d\n    if (isWindows) {\x0d\n      const instances = NumberParseInt(process.env.NODE_PENDING_PIPE_INSTANCES);\x0d\n      if (!NumberIsNaN(instances)) {\x0d\n        handle.setPendingInstances(instances);\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    handle = new TCP(TCPConstants.SERVER);\x0d\n    isTCP = true;\x0d\n  }\x0d\n\x0d\n  if (address || port || isTCP) {\x0d\n    debug('bind to'\x2C address || 'any');\x0d\n    if (!address) {\x0d\n      // Try binding to ipv6 first\x0d\n      err = handle.bind6(DEFAULT_IPV6_ADDR\x2C port\x2C flags);\x0d\n      if (err) {\x0d\n        handle.close();\x0d\n        // Fallback to ipv4\x0d\n        return createServerHandle(DEFAULT_IPV4_ADDR\x2C port);\x0d\n      }\x0d\n    } else if (addressType === 6) {\x0d\n      err = handle.bind6(address\x2C port\x2C flags);\x0d\n    } else {\x0d\n      err = handle.bind(address\x2C port);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    handle.close();\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  return handle;\x0d\n}\x0d\n\x0d\nfunction setupListenHandle(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags) {\x0d\n  debug('setupListenHandle'\x2C address\x2C port\x2C addressType\x2C backlog\x2C fd);\x0d\n\x0d\n  // If there is not yet a handle\x2C we need to create one and bind.\x0d\n  // In the case of a server sent via IPC\x2C we don't need to do this.\x0d\n  if (this._handle) {\x0d\n    debug('setupListenHandle: have a handle already');\x0d\n  } else {\x0d\n    debug('setupListenHandle: create a handle');\x0d\n\x0d\n    let rval = null;\x0d\n\x0d\n    // Try to bind to the unspecified IPv6 address\x2C see if IPv6 is available\x0d\n    if (!address && typeof fd !== 'number') {\x0d\n      rval = createServerHandle(DEFAULT_IPV6_ADDR\x2C port\x2C 6\x2C fd\x2C flags);\x0d\n\x0d\n      if (typeof rval === 'number') {\x0d\n        rval = null;\x0d\n        address = DEFAULT_IPV4_ADDR;\x0d\n        addressType = 4;\x0d\n      } else {\x0d\n        address = DEFAULT_IPV6_ADDR;\x0d\n        addressType = 6;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (rval === null)\x0d\n      rval = createServerHandle(address\x2C port\x2C addressType\x2C fd\x2C flags);\x0d\n\x0d\n    if (typeof rval === 'number') {\x0d\n      const error = new UVExceptionWithHostPort(rval\x2C 'listen'\x2C address\x2C port);\x0d\n      process.nextTick(emitErrorNT\x2C this\x2C error);\x0d\n      return;\x0d\n    }\x0d\n    this._handle = rval;\x0d\n  }\x0d\n\x0d\n  this[async_id_symbol] = getNewAsyncId(this._handle);\x0d\n  this._handle.onconnection = onconnection;\x0d\n  this._handle[owner_symbol] = this;\x0d\n\x0d\n  // Use a backlog of 512 entries. We pass 511 to the listen() call because\x0d\n  // the kernel does: backlogsize = roundup_pow_of_two(backlogsize + 1);\x0d\n  // which will thus give us a backlog of 512 entries.\x0d\n  const err = this._handle.listen(backlog || 511);\x0d\n\x0d\n  if (err) {\x0d\n    const ex = new UVExceptionWithHostPort(err\x2C 'listen'\x2C address\x2C port);\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n    defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               emitErrorNT\x2C\x0d\n                               this\x2C\x0d\n                               ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Generate connection key\x2C this should be unique to the connection\x0d\n  this._connectionKey = addressType + ':' + address + ':' + port;\x0d\n\x0d\n  // Unref the handle if the server was unref'ed prior to listening\x0d\n  if (this._unref)\x0d\n    this.unref();\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitListeningNT\x2C\x0d\n                             this);\x0d\n}\x0d\n\x0d\nServer.prototype._listen2 = setupListenHandle;  // legacy alias\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitListeningNT(self) {\x0d\n  // Ensure handle hasn't closed\x0d\n  if (self._handle)\x0d\n    self.emit('listening');\x0d\n}\x0d\n\x0d\n\x0d\nfunction listenInCluster(server\x2C address\x2C port\x2C addressType\x2C\x0d\n                         backlog\x2C fd\x2C exclusive\x2C flags\x2C options) {\x0d\n  exclusive = !!exclusive;\x0d\n\x0d\n  if (cluster === undefined) cluster = require('cluster');\x0d\n\x0d\n  if (cluster.isPrimary || exclusive) {\x0d\n    // Will create a new handle\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const serverQuery = {\x0d\n    address: address\x2C\x0d\n    port: port\x2C\x0d\n    addressType: addressType\x2C\x0d\n    fd: fd\x2C\x0d\n    flags\x2C\x0d\n    backlog\x2C\x0d\n    ...options\x2C\x0d\n  };\x0d\n  const listeningId = server._listeningId;\x0d\n  // Get the primary's server handle\x2C and listen on it\x0d\n  cluster._getServer(server\x2C serverQuery\x2C listenOnPrimaryHandle);\x0d\n  function listenOnPrimaryHandle(err\x2C handle) {\x0d\n    if (listeningId !== server._listeningId) {\x0d\n      handle.close();\x0d\n      return;\x0d\n    }\x0d\n    err = checkBindError(err\x2C port\x2C handle);\x0d\n\x0d\n    if (err) {\x0d\n      const ex = new ExceptionWithHostPort(err\x2C 'bind'\x2C address\x2C port);\x0d\n      return server.emit('error'\x2C ex);\x0d\n    }\x0d\n\x0d\n    // Reuse primary's server handle\x0d\n    server._handle = handle;\x0d\n    // _listen2 sets up the listened handle\x2C it is still named like this\x0d\n    // to avoid breaking code that wraps this method\x0d\n    server._listen2(address\x2C port\x2C addressType\x2C backlog\x2C fd\x2C flags);\x0d\n  }\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype.listen = function(...args) {\x0d\n  const normalized = normalizeArgs(args);\x0d\n  let options = normalized[0];\x0d\n  const cb = normalized[1];\x0d\n\x0d\n  if (this._handle) {\x0d\n    throw new ERR_SERVER_ALREADY_LISTEN();\x0d\n  }\x0d\n\x0d\n  if (cb !== null) {\x0d\n    this.once('listening'\x2C cb);\x0d\n  }\x0d\n  const backlogFromArgs =\x0d\n    // (handle\x2C backlog) or (path\x2C backlog) or (port\x2C backlog)\x0d\n    toNumber(args.length > 1 && args[1]) ||\x0d\n    toNumber(args.length > 2 && args[2]);  // (port\x2C host\x2C backlog)\x0d\n\x0d\n  options = options._handle || options.handle || options;\x0d\n  const flags = getFlags(options.ipv6Only);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a handle\x0d\n  if (options instanceof TCP) {\x0d\n    this._handle = options;\x0d\n    this[async_id_symbol] = this._handle.getAsyncId();\x0d\n    listenInCluster(this\x2C null\x2C -1\x2C -1\x2C backlogFromArgs);\x0d\n    return this;\x0d\n  }\x0d\n  addServerAbortSignalOption(this\x2C options);\x0d\n  // (handle[\x2C backlog][\x2C cb]) where handle is an object with a fd\x0d\n  if (typeof options.fd === 'number' && options.fd >= 0) {\x0d\n    listenInCluster(this\x2C null\x2C null\x2C null\x2C backlogFromArgs\x2C options.fd);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is omitted\x2C\x0d\n  // that is\x2C listen()\x2C listen(null)\x2C listen(cb)\x2C or listen(null\x2C cb)\x0d\n  // or (options[\x2C cb]) where options.port is explicitly set as undefined or\x0d\n  // null\x2C bind to an arbitrary unused port\x0d\n  if (args.length === 0 || typeof args[0] === 'function' ||\x0d\n      (typeof options.port === 'undefined' && 'port' in options) ||\x0d\n      options.port === null) {\x0d\n    options.port = 0;\x0d\n  }\x0d\n  // ([port][\x2C host][\x2C backlog][\x2C cb]) where port is specified\x0d\n  // or (options[\x2C cb]) where options.port is specified\x0d\n  // or if options.port is normalized as 0 before\x0d\n  let backlog;\x0d\n  if (typeof options.port === 'number' || typeof options.port === 'string') {\x0d\n    validatePort(options.port\x2C 'options.port');\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    // start TCP server listening on host:port\x0d\n    if (options.host) {\x0d\n      lookupAndListen(this\x2C options.port | 0\x2C options.host\x2C backlog\x2C\x0d\n                      options.exclusive\x2C flags);\x0d\n    } else { // Undefined host\x2C listens on unspecified address\x0d\n      // Default addressType 4 will be used to search for primary server\x0d\n      listenInCluster(this\x2C null\x2C options.port | 0\x2C 4\x2C\x0d\n                      backlog\x2C undefined\x2C options.exclusive);\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // (path[\x2C backlog][\x2C cb]) or (options[\x2C cb])\x0d\n  // where path or options.path is a UNIX domain socket or Windows pipe\x0d\n  if (options.path && isPipeName(options.path)) {\x0d\n    // We can not call fchmod on abstract unix socket\x0d\n    if (options.path[0] === '\\0' &&\x0d\n        (options.readableAll || options.writableAll)) {\x0d\n      const msg = 'can not set readableAll or writableAllt to true when path is abstract unix socket';\x0d\n      throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C msg);\x0d\n    }\x0d\n    const pipeName = this._pipeName = options.path;\x0d\n    backlog = options.backlog || backlogFromArgs;\x0d\n    listenInCluster(this\x2C\x0d\n                    pipeName\x2C\x0d\n                    -1\x2C\x0d\n                    -1\x2C\x0d\n                    backlog\x2C\x0d\n                    undefined\x2C\x0d\n                    options.exclusive\x2C\x0d\n                    undefined\x2C\x0d\n                    {\x0d\n                      readableAll: options.readableAll\x2C\x0d\n                      writableAll: options.writableAll\x2C\x0d\n                    });\x0d\n\x0d\n    if (!this._handle) {\x0d\n      // Failed and an error shall be emitted in the next tick.\x0d\n      // Therefore\x2C we directly return.\x0d\n      return this;\x0d\n    }\x0d\n\x0d\n    let mode = 0;\x0d\n    if (options.readableAll === true)\x0d\n      mode |= PipeConstants.UV_READABLE;\x0d\n    if (options.writableAll === true)\x0d\n      mode |= PipeConstants.UV_WRITABLE;\x0d\n    if (mode !== 0) {\x0d\n      const err = this._handle.fchmod(mode);\x0d\n      if (err) {\x0d\n        this._handle.close();\x0d\n        this._handle = null;\x0d\n        throw new ErrnoException(err\x2C 'uv_pipe_chmod');\x0d\n      }\x0d\n    }\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (!(('port' in options) || ('path' in options))) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('options'\x2C options\x2C\x0d\n                                    'must have the property "port" or "path"');\x0d\n  }\x0d\n\x0d\n  throw new ERR_INVALID_ARG_VALUE('options'\x2C options);\x0d\n};\x0d\n\x0d\nfunction lookupAndListen(self\x2C port\x2C address\x2C backlog\x2C\x0d\n                         exclusive\x2C flags) {\x0d\n  if (dns === undefined) dns = require('dns');\x0d\n  const listeningId = self._listeningId;\x0d\n  dns.lookup(address\x2C function doListen(err\x2C ip\x2C addressType) {\x0d\n    if (listeningId !== self._listeningId) {\x0d\n      return;\x0d\n    }\x0d\n    if (err) {\x0d\n      self.emit('error'\x2C err);\x0d\n    } else {\x0d\n      addressType = ip ? addressType : 4;\x0d\n      listenInCluster(self\x2C ip\x2C port\x2C addressType\x2C\x0d\n                      backlog\x2C undefined\x2C exclusive\x2C flags);\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Server.prototype\x2C 'listening'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get: function() {\x0d\n    return !!this._handle;\x0d\n  }\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n});\x0d\n\x0d\nServer.prototype.address = function() {\x0d\n  if (this._handle && this._handle.getsockname) {\x0d\n    const out = {};\x0d\n    const err = this._handle.getsockname(out);\x0d\n    if (err) {\x0d\n      throw new ErrnoException(err\x2C 'address');\x0d\n    }\x0d\n    return out;\x0d\n  } else if (this._pipeName) {\x0d\n    return this._pipeName;\x0d\n  }\x0d\n  return null;\x0d\n};\x0d\n\x0d\nfunction onconnection(err\x2C clientHandle) {\x0d\n  const handle = this;\x0d\n  const self = handle[owner_symbol];\x0d\n\x0d\n  debug('onconnection');\x0d\n\x0d\n  if (err) {\x0d\n    self.emit('error'\x2C new ErrnoException(err\x2C 'accept'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (self.maxConnections && self._connections >= self.maxConnections) {\x0d\n    if (clientHandle.getsockname || clientHandle.getpeername) {\x0d\n      const data = { __proto__: null };\x0d\n      if (clientHandle.getsockname) {\x0d\n        const localInfo = { __proto__: null };\x0d\n        clientHandle.getsockname(localInfo);\x0d\n        data.localAddress = localInfo.address;\x0d\n        data.localPort = localInfo.port;\x0d\n        data.localFamily = localInfo.family;\x0d\n      }\x0d\n      if (clientHandle.getpeername) {\x0d\n        const remoteInfo = { __proto__: null };\x0d\n        clientHandle.getpeername(remoteInfo);\x0d\n        data.remoteAddress = remoteInfo.address;\x0d\n        data.remotePort = remoteInfo.port;\x0d\n        data.remoteFamily = remoteInfo.family;\x0d\n      }\x0d\n      self.emit('drop'\x2C data);\x0d\n    } else {\x0d\n      self.emit('drop');\x0d\n    }\x0d\n    clientHandle.close();\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const socket = new Socket({\x0d\n    handle: clientHandle\x2C\x0d\n    allowHalfOpen: self.allowHalfOpen\x2C\x0d\n    pauseOnCreate: self.pauseOnConnect\x2C\x0d\n    readable: true\x2C\x0d\n    writable: true\x2C\x0d\n    readableHighWaterMark: self.highWaterMark\x2C\x0d\n    writableHighWaterMark: self.highWaterMark\x2C\x0d\n  });\x0d\n\x0d\n  if (self.noDelay && clientHandle.setNoDelay) {\x0d\n    socket[kSetNoDelay] = true;\x0d\n    clientHandle.setNoDelay(true);\x0d\n  }\x0d\n  if (self.keepAlive && clientHandle.setKeepAlive) {\x0d\n    socket[kSetKeepAlive] = true;\x0d\n    socket[kSetKeepAliveInitialDelay] = self.keepAliveInitialDelay;\x0d\n    clientHandle.setKeepAlive(true\x2C self.keepAliveInitialDelay);\x0d\n  }\x0d\n\x0d\n  self._connections++;\x0d\n  socket.server = self;\x0d\n  socket._server = self;\x0d\n  self.emit('connection'\x2C socket);\x0d\n  if (netServerSocketChannel.hasSubscribers) {\x0d\n    netServerSocketChannel.publish({\x0d\n      socket\x2C\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Gets the number of concurrent connections on the server\x0d\n * @param {Function} cb\x0d\n * @returns {Server}\x0d\n */\x0d\n\x0d\nServer.prototype.getConnections = function(cb) {\x0d\n  const self = this;\x0d\n\x0d\n  function end(err\x2C connections) {\x0d\n    defaultTriggerAsyncIdScope(self[async_id_symbol]\x2C\x0d\n                               process.nextTick\x2C\x0d\n                               cb\x2C\x0d\n                               err\x2C\x0d\n                               connections);\x0d\n  }\x0d\n\x0d\n  if (!this._usingWorkers) {\x0d\n    end(null\x2C this._connections);\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Poll workers\x0d\n  let left = this._workers.length;\x0d\n  let total = this._connections;\x0d\n\x0d\n  function oncount(err\x2C count) {\x0d\n    if (err) {\x0d\n      left = -1;\x0d\n      return end(err);\x0d\n    }\x0d\n\x0d\n    total += count;\x0d\n    if (--left === 0) return end(null\x2C total);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < this._workers.length; n++) {\x0d\n    this._workers[n].getConnections(oncount);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n\x0d\nServer.prototype.close = function(cb) {\x0d\n  this._listeningId++;\x0d\n  if (typeof cb === 'function') {\x0d\n    if (!this._handle) {\x0d\n      this.once('close'\x2C function close() {\x0d\n        cb(new ERR_SERVER_NOT_RUNNING());\x0d\n      });\x0d\n    } else {\x0d\n      this.once('close'\x2C cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (this._handle) {\x0d\n    this._handle.close();\x0d\n    this._handle = null;\x0d\n  }\x0d\n\x0d\n  if (this._usingWorkers) {\x0d\n    let left = this._workers.length;\x0d\n    const onWorkerClose = () => {\x0d\n      if (--left !== 0) return;\x0d\n\x0d\n      this._connections = 0;\x0d\n      this._emitCloseIfDrained();\x0d\n    };\x0d\n\x0d\n    // Increment connections to be sure that\x2C even if all sockets will be closed\x0d\n    // during polling of workers\x2C `close` event will be emitted only once.\x0d\n    this._connections++;\x0d\n\x0d\n    // Poll workers\x0d\n    for (let n = 0; n < this._workers.length; n++)\x0d\n      this._workers[n].close(onWorkerClose);\x0d\n  } else {\x0d\n    this._emitCloseIfDrained();\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype[SymbolAsyncDispose] = async function() {\x0d\n  if (!this._handle) {\x0d\n    return;\x0d\n  }\x0d\n  return FunctionPrototypeCall(promisify(this.close)\x2C this);\x0d\n};\x0d\n\x0d\nServer.prototype._emitCloseIfDrained = function() {\x0d\n  debug('SERVER _emitCloseIfDrained');\x0d\n\x0d\n  if (this._handle || this._connections) {\x0d\n    debug('SERVER handle? %j   connections? %d'\x2C\x0d\n          !!this._handle\x2C this._connections);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  defaultTriggerAsyncIdScope(this[async_id_symbol]\x2C\x0d\n                             process.nextTick\x2C\x0d\n                             emitCloseNT\x2C\x0d\n                             this);\x0d\n};\x0d\n\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  debug('SERVER: emit close');\x0d\n  self.emit('close');\x0d\n}\x0d\n\x0d\n\x0d\nServer.prototype[EventEmitter.captureRejectionSymbol] = function(\x0d\n  err\x2C event\x2C sock) {\x0d\n\x0d\n  switch (event) {\x0d\n    case 'connection':\x0d\n      sock.destroy(err);\x0d\n      break;\x0d\n    default:\x0d\n      this.emit('error'\x2C err);\x0d\n  }\x0d\n};\x0d\n\x0d\n\x0d\n// Legacy alias on the C++ wrapper object. This is not public API\x2C so we may\x0d\n// want to runtime-deprecate it at some point. There's no hurry\x2C though.\x0d\nObjectDefineProperty(TCP.prototype\x2C 'owner'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[owner_symbol]; }\x2C\x0d\n  set(v) { return this[owner_symbol] = v; }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(Socket.prototype\x2C '_handle'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() { return this[kHandle]; }\x2C\x0d\n  set(v) { return this[kHandle] = v; }\x2C\x0d\n});\x0d\n\x0d\nServer.prototype._setupWorker = function(socketList) {\x0d\n  this._usingWorkers = true;\x0d\n  this._workers.push(socketList);\x0d\n  socketList.once('exit'\x2C (socketList) => {\x0d\n    const index = ArrayPrototypeIndexOf(this._workers\x2C socketList);\x0d\n    this._workers.splice(index\x2C 1);\x0d\n  });\x0d\n};\x0d\n\x0d\nServer.prototype.ref = function() {\x0d\n  this._unref = false;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.ref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nServer.prototype.unref = function() {\x0d\n  this._unref = true;\x0d\n\x0d\n  if (this._handle)\x0d\n    this._handle.unref();\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nlet _setSimultaneousAccepts;\x0d\nlet warnSimultaneousAccepts = true;\x0d\n\x0d\nif (isWindows) {\x0d\n  let simultaneousAccepts;\x0d\n\x0d\n  _setSimultaneousAccepts = function(handle) {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n    if (handle === undefined) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (simultaneousAccepts === undefined) {\x0d\n      simultaneousAccepts = (process.env.NODE_MANY_ACCEPTS &&\x0d\n                             process.env.NODE_MANY_ACCEPTS !== '0');\x0d\n    }\x0d\n\x0d\n    if (handle._simultaneousAccepts !== simultaneousAccepts) {\x0d\n      handle.setSimultaneousAccepts(!!simultaneousAccepts);\x0d\n      handle._simultaneousAccepts = simultaneousAccepts;\x0d\n    }\x0d\n  };\x0d\n} else {\x0d\n  _setSimultaneousAccepts = function() {\x0d\n    if (warnSimultaneousAccepts) {\x0d\n      process.emitWarning(\x0d\n        'net._setSimultaneousAccepts() is deprecated and will be removed.'\x2C\x0d\n        'DeprecationWarning'\x2C 'DEP0121');\x0d\n      warnSimultaneousAccepts = false;\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  _createServerHandle: createServerHandle\x2C\x0d\n  _normalizeArgs: normalizeArgs\x2C\x0d\n  _setSimultaneousAccepts\x2C\x0d\n  get BlockList() {\x0d\n    BlockList ??= require('internal/blocklist').BlockList;\x0d\n    return BlockList;\x0d\n  }\x2C\x0d\n  get SocketAddress() {\x0d\n    SocketAddress ??= require('internal/socketaddress').SocketAddress;\x0d\n    return SocketAddress;\x0d\n  }\x2C\x0d\n  connect\x2C\x0d\n  createConnection: connect\x2C\x0d\n  createServer\x2C\x0d\n  isIP: isIP\x2C\x0d\n  isIPv4: isIPv4\x2C\x0d\n  isIPv6: isIPv6\x2C\x0d\n  Server\x2C\x0d\n  Socket\x2C\x0d\n  Stream: Socket\x2C // Legacy naming\x0d\n  getDefaultAutoSelectFamily\x2C\x0d\n  setDefaultAutoSelectFamily\x2C\x0d\n  getDefaultAutoSelectFamilyAttemptTimeout\x2C\x0d\n  setDefaultAutoSelectFamilyAttemptTimeout\x2C\x0d\n};\x0d\n
code-source-info,0x1760ce82706,127,0,69957,C0O0C4O69957,,
code-creation,JS,10,2805722,0x5c3c7c746,3499, node:net:1:1,0x1760ce82680,~
code-source-info,0x5c3c7c746,127,0,69957,C0O0C562O1183C568O1200C574O1227C580O1253C586O1276C592O1288C598O1314C604O1340C610O1352C616O1363C622O1379C628O1398C634O1423C639O1448C644O1459C649O1482C655O1539C663O1539C667O1539C669O1574C677O1574C681O1574C683O1606C691O1606C697O1639C713O1640C719O1606C721O1798C729O1798C735O1698C741O1722C747O1731C752O1742C757O1753C763O1778C769O1839C777O1839C781O1839C783O1963C787O1963C793O1879C799O1897C805O1911C811O1927C817O1944C823O2008C831O2008C837O1997C843O2053C847O2053C853O2036C859O2154C863O2154C869O2097C875O2105C881O2135C887O2255C891O2255C897O2195C903O2204C909O2235C915O2392C923O2392C929O2297C935O2312C941O2352C947O2354C953O2371C959O2603C967O2603C973O2437C979O2455C985O2472C991O2489C996O2510C1002O2522C1007O2539C1012O2560C1018O2572C1024O2586C1030O3152C1038O3152C1044O2663C1050O2670C1056O2703C1062O2730C1068O2758C1074O2784C1080O2813C1086O2843C1092O2875C1098O2904C1104O2940C1110O2964C1116O3006C1122O3033C1128O3052C1134O3078C1140O3099C1146O3122C1152O3206C1160O3206C1166O3189C1172O3266C1180O3266C1186O3247C1192O3361C1200O3361C1206O3316C1212O3330C1218O3347C1224O3539C1232O3539C1238O3399C1244O3423C1250O3443C1256O3464C1262O3482C1268O3501C1274O3518C1280O3600C1284O3600C1288O3600C1290O3658C1298O3658C1304O3639C1309O3742C1310O3742C1312O3756C1313O3756C1315O3766C1316O3766C1318O3782C1319O3782C1321O3828C1325O3828C1329O3828C1331O3923C1335O3923C1337O3968C1345O3968C1351O3939C1357O3953C1363O4009C1371O4009C1377O3996C1383O4066C1385O4066C1387O4104C1389O4104C1391O4131C1395O4139C1403O4148C1406O4131C1408O4177C1412O4177C1414O4226C1418O4226C1422O4226C1424O4279C1432O4279C1437O4346C1447O4346C1452O4343C1454O4411C1464O4411C1469O4408C1471O4500C1479O4500C1485O4455C1491O4471C1497O4485C1503O4571C1511O4571C1517O4543C1523O9177C1527O9177C1531O9177C1533O9222C1537O9222C1541O9222C1543O9268C1547O9268C1551O9268C1553O9314C1557O9314C1561O9314C1563O9374C1567O9374C1571O9374C1573O14190C1577O14218C1587O14236C1593O14243C1599O14190C1609O14256C1617O14292C1623O14256C1633O14335C1637O14342C1647O14364C1655O14600C1659O14607C1669O14624C1677O16169C1681O16176C1689O16197C1697O16222C1701O16229C1711O16250C1719O16778C1723O16785C1733O16806C1741O17207C1745O17214C1755O17237C1763O17878C1767O17885C1777O17903C1785O17958C1793O17986C1812O18042C1824O17958C1834O18098C1842O18126C1861O18173C1873O18098C1883O18266C1891O18294C1910O18349C1922O18266C1932O18687C1940O18715C1959O18770C1971O18687C1981O18864C1989O18892C1995O18903C2004O18947C2019O18864C2029O19333C2033O19340C2043O19356C2051O19697C2055O19704C2065O19718C2073O19885C2077O19892C2087O19918C2095O20289C2099O20296C2109O20312C2117O20670C2121O20677C2131O20694C2139O20893C2143O20900C2153O20915C2161O21269C2165O21276C2175O21298C2183O21462C2187O21469C2197O21488C2205O23061C2209O23068C2219O23085C2227O23195C2231O23202C2241O23225C2249O23732C2259O23732C2269O23856C2279O23856C2289O23959C2299O23959C2309O24059C2319O24059C2329O24155C2333O24162C2343O24185C2351O24479C2361O24479C2371O24582C2381O24582C2391O24674C2401O24674C2411O24772C2415O24779C2421O24789C2425O24807C2433O24863C2437O24870C2447O24894C2455O25849C2459O25856C2469O25874C2477O25953C2481O25960C2491O25977C2499O26228C2509O26228C2519O26372C2529O26372C2539O33403C2543O33410C2553O33428C2561O35091C2565O35098C2575O35108C2579O35129C2587O43804C2591O43811C2601O43825C2609O44032C2613O44039C2623O44055C2631O51009C2635O51037C2649O51061C2659O51009C2669O51074C2677O51074C2687O55203C2691O55210C2703O55229C2711O56910C2715O56917C2732O56934C2740O61772C2748O61800C2773O61854C2788O61772C2798O61953C2802O61960C2819O61978C2827O64381C2831O64388C2848O64413C2856O65210C2860O65217C2877O65233C2885O66168C2889O66175C2899O66185C2906O66205C2914O66337C2918O66344C2935O66374C2943O66874C2947O66881C2961O66904C2978O66928C2986O67261C2994O67286C3019O67331C3034O67372C3049O67261C3059O67423C3067O67451C3088O67498C3103O67534C3118O67423C3128O67580C3132O67587C3149O67610C3157O67865C3161O67872C3178O67886C3186O67998C3190O68005C3207O68021C3215O68138C3218O68194C3219O68194C3221O68203C3236O68227C3237O68227C3239O68253C3254O68983C3263O69265C3274O69308C3284O69347C3294O69365C3304O69633C3314O69663C3324O69675C3334O69698C3344O69715C3354O69734C3364O69745C3374O69756C3384O69775C3394O69803C3404O69834C3414O69865C3424O69910C3489O69280C3498O69956,,
tick,0x7ff6cb6205e2,2806246,1,0x7ff6cb82fd80,3,0x7ff6cc23aba0,0x7ff64c443f26,0x7ff64c443ca1,0x39c990c312a,0x7ff64c443feb,0x7ff64c443ca1,0x39c990c2236,0x24f91a02a5f,0x24f91a0285f,0x24f91a02746,0x24f91a0260e,0x7ff6cb6a2cb0,0xc2df91015b,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,Eval,10,2807248,0x391359bb246,5, node:stream:1:1,0x391359bb040,~
script-source,128,node:stream,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ReflectApply\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  promisify: { custom: customPromisify }\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  streamReturningOperators\x2C\x0d\n  promiseReturningOperators\x2C\x0d\n} = require('internal/streams/operators');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst compose = require('internal/streams/compose');\x0d\nconst { setDefaultHighWaterMark\x2C getDefaultHighWaterMark } = require('internal/streams/state');\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst internalBuffer = require('internal/buffer');\x0d\n\x0d\nconst promises = require('stream/promises');\x0d\nconst utils = require('internal/streams/utils');\x0d\n\x0d\nconst Stream = module.exports = require('internal/streams/legacy').Stream;\x0d\n\x0d\nStream.isDestroyed = utils.isDestroyed;\x0d\nStream.isDisturbed = utils.isDisturbed;\x0d\nStream.isErrored = utils.isErrored;\x0d\nStream.isReadable = utils.isReadable;\x0d\nStream.isWritable = utils.isWritable;\x0d\n\x0d\nStream.Readable = require('internal/streams/readable');\x0d\nfor (const key of ObjectKeys(streamReturningOperators)) {\x0d\n  const op = streamReturningOperators[key];\x0d\n  function fn(...args) {\x0d\n    if (new.target) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n    return Stream.Readable.from(ReflectApply(op\x2C this\x2C args));\x0d\n  }\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\x0d\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\x0d\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\nfor (const key of ObjectKeys(promiseReturningOperators)) {\x0d\n  const op = promiseReturningOperators[key];\x0d\n  function fn(...args) {\x0d\n    if (new.target) {\x0d\n      throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n    }\x0d\n    return ReflectApply(op\x2C this\x2C args);\x0d\n  }\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C { __proto__: null\x2C value: op.name });\x0d\n  ObjectDefineProperty(fn\x2C 'length'\x2C { __proto__: null\x2C value: op.length });\x0d\n  ObjectDefineProperty(Stream.Readable.prototype\x2C key\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: fn\x2C\x0d\n    enumerable: false\x2C\x0d\n    configurable: true\x2C\x0d\n    writable: true\x2C\x0d\n  });\x0d\n}\x0d\nStream.Writable = require('internal/streams/writable');\x0d\nStream.Duplex = require('internal/streams/duplex');\x0d\nStream.Transform = require('internal/streams/transform');\x0d\nStream.PassThrough = require('internal/streams/passthrough');\x0d\nStream.pipeline = pipeline;\x0d\nconst { addAbortSignal } = require('internal/streams/add-abort-signal');\x0d\nStream.addAbortSignal = addAbortSignal;\x0d\nStream.finished = eos;\x0d\nStream.destroy = destroyer;\x0d\nStream.compose = compose;\x0d\nStream.setDefaultHighWaterMark = setDefaultHighWaterMark;\x0d\nStream.getDefaultHighWaterMark = getDefaultHighWaterMark;\x0d\n\x0d\nObjectDefineProperty(Stream\x2C 'promises'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  configurable: true\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(pipeline\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.pipeline;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(eos\x2C customPromisify\x2C {\x0d\n  __proto__: null\x2C\x0d\n  enumerable: true\x2C\x0d\n  get() {\x0d\n    return promises.finished;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Backwards-compat with node 0.4.x\x0d\nStream.Stream = Stream;\x0d\n\x0d\nStream._isUint8Array = require('internal/util/types').isUint8Array;\x0d\nStream._uint8ArrayToBuffer = function _uint8ArrayToBuffer(chunk) {\x0d\n  return new internalBuffer.FastBuffer(chunk.buffer\x2C\x0d\n                                       chunk.byteOffset\x2C\x0d\n                                       chunk.byteLength);\x0d\n};\x0d\n
code-source-info,0x391359bb246,128,0,4937,C0O0C4O4937,,
code-creation,JS,10,2807549,0x391359bb966,1072, node:stream:1:1,0x391359bb1c0,~
code-source-info,0x391359bb
code-creation,Eval,10,2808200,0x391359bcdfe,5, node:internal/streams/operators:1:1,0x391359bcab8,~
script-source,129,node:internal/streams/operators,'use strict';\x0d\n\x0d\nconst { AbortController\x2C AbortSignal } = require('internal/abort_controller');\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateInteger\x2C\x0d\n  validateObject\x2C\x0d\n} = require('internal/validators');\x0d\nconst { kWeakHandler\x2C kResistStopPropagation } = require('internal/event_target');\x0d\nconst { finished } = require('internal/streams/end-of-stream');\x0d\nconst staticCompose = require('internal/streams/compose');\x0d\nconst {\x0d\n  addAbortSignalNoValidate\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst { isWritable\x2C isNodeStream } = require('internal/streams/utils');\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Boolean\x2C\x0d\n  MathFloor\x2C\x0d\n  Number\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  Promise\x2C\x0d\n  PromiseReject\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst kEmpty = Symbol('kEmpty');\x0d\nconst kEof = Symbol('kEof');\x0d\n\x0d\nfunction compose(stream\x2C options) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  if (isNodeStream(stream) && !isWritable(stream)) {\x0d\n    throw new ERR_INVALID_ARG_VALUE('stream'\x2C stream\x2C 'must be writable');\x0d\n  }\x0d\n\x0d\n  const composedStream = staticCompose(this\x2C stream);\x0d\n\x0d\n  if (options?.signal) {\x0d\n    // Not validating as we already validated before\x0d\n    addAbortSignalNoValidate(\x0d\n      options.signal\x2C\x0d\n      composedStream\x2C\x0d\n    );\x0d\n  }\x0d\n\x0d\n  return composedStream;\x0d\n}\x0d\n\x0d\nfunction map(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  let concurrency = 1;\x0d\n  if (options?.concurrency != null) {\x0d\n    concurrency = MathFloor(options.concurrency);\x0d\n  }\x0d\n\x0d\n  let highWaterMark = concurrency - 1;\x0d\n  if (options?.highWaterMark != null) {\x0d\n    highWaterMark = MathFloor(options.highWaterMark);\x0d\n  }\x0d\n\x0d\n  validateInteger(concurrency\x2C 'options.concurrency'\x2C 1);\x0d\n  validateInteger(highWaterMark\x2C 'options.highWaterMark'\x2C 0);\x0d\n\x0d\n  highWaterMark += concurrency;\x0d\n\x0d\n  return async function* map() {\x0d\n    const signal = AbortSignal.any([options?.signal].filter(Boolean));\x0d\n    const stream = this;\x0d\n    const queue = [];\x0d\n    const signalOpt = { signal };\x0d\n\x0d\n    let next;\x0d\n    let resume;\x0d\n    let done = false;\x0d\n    let cnt = 0;\x0d\n\x0d\n    function onCatch() {\x0d\n      done = true;\x0d\n      afterItemProcessed();\x0d\n    }\x0d\n\x0d\n    function afterItemProcessed() {\x0d\n      cnt -= 1;\x0d\n      maybeResume();\x0d\n    }\x0d\n\x0d\n    function maybeResume() {\x0d\n      if (\x0d\n        resume &&\x0d\n        !done &&\x0d\n        cnt < concurrency &&\x0d\n        queue.length < highWaterMark\x0d\n      ) {\x0d\n        resume();\x0d\n        resume = null;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    async function pump() {\x0d\n      try {\x0d\n        for await (let val of stream) {\x0d\n          if (done) {\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (signal.aborted) {\x0d\n            throw new AbortError();\x0d\n          }\x0d\n\x0d\n          try {\x0d\n            val = fn(val\x2C signalOpt);\x0d\n\x0d\n            if (val === kEmpty) {\x0d\n              continue;\x0d\n            }\x0d\n\x0d\n            val = PromiseResolve(val);\x0d\n          } catch (err) {\x0d\n            val = PromiseReject(err);\x0d\n          }\x0d\n\x0d\n          cnt += 1;\x0d\n\x0d\n          PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\x0d\n\x0d\n          queue.push(val);\x0d\n          if (next) {\x0d\n            next();\x0d\n            next = null;\x0d\n          }\x0d\n\x0d\n          if (!done && (queue.length >= highWaterMark || cnt >= concurrency)) {\x0d\n            await new Promise((resolve) => {\x0d\n              resume = resolve;\x0d\n            });\x0d\n          }\x0d\n        }\x0d\n        queue.push(kEof);\x0d\n      } catch (err) {\x0d\n        const val = PromiseReject(err);\x0d\n        PromisePrototypeThen(val\x2C afterItemProcessed\x2C onCatch);\x0d\n        queue.push(val);\x0d\n      } finally {\x0d\n        done = true;\x0d\n        if (next) {\x0d\n          next();\x0d\n          next = null;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n\x0d\n    pump();\x0d\n\x0d\n    try {\x0d\n      while (true) {\x0d\n        while (queue.length > 0) {\x0d\n          const val = await queue[0];\x0d\n\x0d\n          if (val === kEof) {\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (signal.aborted) {\x0d\n            throw new AbortError();\x0d\n          }\x0d\n\x0d\n          if (val !== kEmpty) {\x0d\n            yield val;\x0d\n          }\x0d\n\x0d\n          queue.shift();\x0d\n          maybeResume();\x0d\n        }\x0d\n\x0d\n        await new Promise((resolve) => {\x0d\n          next = resolve;\x0d\n        });\x0d\n      }\x0d\n    } finally {\x0d\n      done = true;\x0d\n      if (resume) {\x0d\n        resume();\x0d\n        resume = null;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction asIndexedPairs(options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  return async function* asIndexedPairs() {\x0d\n    let index = 0;\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError({ cause: options.signal.reason });\x0d\n      }\x0d\n      yield [index++\x2C val];\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nasync function some(fn\x2C options = undefined) {\x0d\n  for await (const unused of filter.call(this\x2C fn\x2C options)) {\x0d\n    return true;\x0d\n  }\x0d\n  return false;\x0d\n}\x0d\n\x0d\nasync function every(fn\x2C options = undefined) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  // https://en.wikipedia.org/wiki/De_Morgan%27s_laws\x0d\n  return !(await some.call(this\x2C async (...args) => {\x0d\n    return !(await fn(...args));\x0d\n  }\x2C options));\x0d\n}\x0d\n\x0d\nasync function find(fn\x2C options) {\x0d\n  for await (const result of filter.call(this\x2C fn\x2C options)) {\x0d\n    return result;\x0d\n  }\x0d\n  return undefined;\x0d\n}\x0d\n\x0d\nasync function forEach(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  async function forEachFn(value\x2C options) {\x0d\n    await fn(value\x2C options);\x0d\n    return kEmpty;\x0d\n  }\x0d\n  // eslint-disable-next-line no-unused-vars\x0d\n  for await (const unused of map.call(this\x2C forEachFn\x2C options));\x0d\n}\x0d\n\x0d\nfunction filter(fn\x2C options) {\x0d\n  if (typeof fn !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'fn'\x2C ['Function'\x2C 'AsyncFunction']\x2C fn);\x0d\n  }\x0d\n  async function filterFn(value\x2C options) {\x0d\n    if (await fn(value\x2C options)) {\x0d\n      return value;\x0d\n    }\x0d\n    return kEmpty;\x0d\n  }\x0d\n  return map.call(this\x2C filterFn\x2C options);\x0d\n}\x0d\n\x0d\n// Specific to provide better error to reduce since the argument is only\x0d\n// missing if the stream has no items in it - but the code is still appropriate\x0d\nclass ReduceAwareErrMissingArgs extends ERR_MISSING_ARGS {\x0d\n  constructor() {\x0d\n    super('reduce');\x0d\n    this.message = 'Reduce of an empty stream requires an initial value';\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function reduce(reducer\x2C initialValue\x2C options) {\x0d\n  if (typeof reducer !== 'function') {\x0d\n    throw new ERR_INVALID_ARG_TYPE(\x0d\n      'reducer'\x2C ['Function'\x2C 'AsyncFunction']\x2C reducer);\x0d\n  }\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  let hasInitialValue = arguments.length > 1;\x0d\n  if (options?.signal?.aborted) {\x0d\n    const err = new AbortError(undefined\x2C { cause: options.signal.reason });\x0d\n    this.once('error'\x2C () => {}); // The error is already propagated\x0d\n    await finished(this.destroy(err));\x0d\n    throw err;\x0d\n  }\x0d\n  const ac = new AbortController();\x0d\n  const signal = ac.signal;\x0d\n  if (options?.signal) {\x0d\n    const opts = { once: true\x2C [kWeakHandler]: this\x2C [kResistStopPropagation]: true };\x0d\n    options.signal.addEventListener('abort'\x2C () => ac.abort()\x2C opts);\x0d\n  }\x0d\n  let gotAnyItemFromStream = false;\x0d\n  try {\x0d\n    for await (const value of this) {\x0d\n      gotAnyItemFromStream = true;\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (!hasInitialValue) {\x0d\n        initialValue = value;\x0d\n        hasInitialValue = true;\x0d\n      } else {\x0d\n        initialValue = await reducer(initialValue\x2C value\x2C { signal });\x0d\n      }\x0d\n    }\x0d\n    if (!gotAnyItemFromStream && !hasInitialValue) {\x0d\n      throw new ReduceAwareErrMissingArgs();\x0d\n    }\x0d\n  } finally {\x0d\n    ac.abort();\x0d\n  }\x0d\n  return initialValue;\x0d\n}\x0d\n\x0d\nasync function toArray(options) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  const result = [];\x0d\n  for await (const val of this) {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError(undefined\x2C { cause: options.signal.reason });\x0d\n    }\x0d\n    ArrayPrototypePush(result\x2C val);\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\nfunction flatMap(fn\x2C options) {\x0d\n  const values = map.call(this\x2C fn\x2C options);\x0d\n  return async function* flatMap() {\x0d\n    for await (const val of values) {\x0d\n      yield* val;\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction toIntegerOrInfinity(number) {\x0d\n  // We coerce here to align with the spec\x0d\n  // https://github.com/tc39/proposal-iterator-helpers/issues/169\x0d\n  number = Number(number);\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return 0;\x0d\n  }\x0d\n  if (number < 0) {\x0d\n    throw new ERR_OUT_OF_RANGE('number'\x2C '>= 0'\x2C number);\x0d\n  }\x0d\n  return number;\x0d\n}\x0d\n\x0d\nfunction drop(number\x2C options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  number = toIntegerOrInfinity(number);\x0d\n  return async function* drop() {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError();\x0d\n    }\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (number-- <= 0) {\x0d\n        yield val;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nfunction take(number\x2C options = undefined) {\x0d\n  if (options != null) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  if (options?.signal != null) {\x0d\n    validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n  }\x0d\n\x0d\n  number = toIntegerOrInfinity(number);\x0d\n  return async function* take() {\x0d\n    if (options?.signal?.aborted) {\x0d\n      throw new AbortError();\x0d\n    }\x0d\n    for await (const val of this) {\x0d\n      if (options?.signal?.aborted) {\x0d\n        throw new AbortError();\x0d\n      }\x0d\n      if (number-- > 0) {\x0d\n        yield val;\x0d\n      }\x0d\n\x0d\n      // Don't get another item from iterator in case we reached the end\x0d\n      if (number <= 0) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n  }.call(this);\x0d\n}\x0d\n\x0d\nmodule.exports.streamReturningOperators = {\x0d\n  asIndexedPairs: deprecate(asIndexedPairs\x2C 'readable.asIndexedPairs will be removed in a future version.')\x2C\x0d\n  drop\x2C\x0d\n  filter\x2C\x0d\n  flatMap\x2C\x0d\n  map\x2C\x0d\n  take\x2C\x0d\n  compose\x2C\x0d\n};\x0d\n\x0d\nmodule.exports.promiseReturningOperators = {\x0d\n  every\x2C\x0d\n  forEach\x2C\x0d\n  reduce\x2C\x0d\n  toArray\x2C\x0d\n  some\x2C\x0d\n  find\x2C\x0d\n};\x0d\n
code-source-info,0x391359bcdfe,129,0,11229,C0O0C4O11229,,
code-creation,JS,10,2808867,0x391359bd90e,560, node:internal/streams/operators:1:1,0x391359bcd78,~
code-source-info,0x391359bd90e,129,0,11229,C0O0C163O58C166O58C171O25C177O42C183O246C186O246C191O117C196O124C202O152C208O179C213O202C219O229C225O351C228O351C233O286C239O310C245O330C251O433C254O433C259O392C265O406C271O489C274O489C279O476C285O555C288O555C292O555C294O635C297O635C302O604C308O719C311O719C316O690C322O702C328O777C331O777C336O763C341O817C347O840C353O852C359O866C365O877C371O893C377O905C383O923C389O942C395O967C400O1011C403O1011C407O1011C409O1043C412O1043C416O1043C418O6990C439O6950C441O10901C455O10957C466O11051C472O11060C478O11071C484O11083C490O11091C496O11100C502O10934C506O11123C518O11164C524O11174C530O11186C536O11197C542O11209C548O11218C554O11157C559O11228,,
code-creation,Eval,10,2809472,0x391359bf866,5, node:internal/abort_controller:1:1,0x391359bf310,~
script-source,130,node:internal/abort_controller,'use strict';\x0d\n\x0d\n// Modeled very closely on the AbortController implementation\x0d\n// in https://github.com/mysticatea/abort-controller (MIT license)\x0d\n\x0d\nconst {\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  PromiseResolve\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  WeakRef\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  defineEventHandler\x2C\x0d\n  EventTarget\x2C\x0d\n  Event\x2C\x0d\n  kTrustEvent\x2C\x0d\n  kNewListener\x2C\x0d\n  kRemoveListener\x2C\x0d\n  kResistStopPropagation\x2C\x0d\n  kWeakHandler\x2C\x0d\n} = require('internal/event_target');\x0d\nconst {\x0d\n  createDeferredPromise\x2C\x0d\n  customInspectSymbol\x2C\x0d\n  kEmptyObject\x2C\x0d\n  kEnumerableProperty\x2C\x0d\n} = require('internal/util');\x0d\nconst { inspect } = require('internal/util/inspect');\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_ILLEGAL_CONSTRUCTOR\x2C\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_THIS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateAbortSignalArray\x2C\x0d\n  validateObject\x2C\x0d\n  validateUint32\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n  kValidateObjectAllowFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  DOMException\x2C\x0d\n} = internalBinding('messaging');\x0d\n\x0d\nconst {\x0d\n  clearTimeout\x2C\x0d\n  setTimeout\x2C\x0d\n} = require('timers');\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst {\x0d\n  messaging_deserialize_symbol: kDeserialize\x2C\x0d\n  messaging_transfer_symbol: kTransfer\x2C\x0d\n  messaging_transfer_list_symbol: kTransferList\x2C\x0d\n} = internalBinding('symbols');\x0d\n\x0d\nlet _MessageChannel;\x0d\nlet makeTransferable;\x0d\n\x0d\n// Loading the MessageChannel and makeTransferable have to be done lazily\x0d\n// because otherwise we'll end up with a require cycle that ends up with\x0d\n// an incomplete initialization of abort_controller.\x0d\n\x0d\nfunction lazyMessageChannel() {\x0d\n  _MessageChannel ??= require('internal/worker/io').MessageChannel;\x0d\n  return new _MessageChannel();\x0d\n}\x0d\n\x0d\nfunction lazyMakeTransferable(obj) {\x0d\n  makeTransferable ??=\x0d\n    require('internal/worker/js_transferable').makeTransferable;\x0d\n  return makeTransferable(obj);\x0d\n}\x0d\n\x0d\nconst clearTimeoutRegistry = new SafeFinalizationRegistry(clearTimeout);\x0d\nconst gcPersistentSignals = new SafeSet();\x0d\n\x0d\nconst kAborted = Symbol('kAborted');\x0d\nconst kReason = Symbol('kReason');\x0d\nconst kCloneData = Symbol('kCloneData');\x0d\nconst kTimeout = Symbol('kTimeout');\x0d\nconst kMakeTransferable = Symbol('kMakeTransferable');\x0d\nconst kComposite = Symbol('kComposite');\x0d\nconst kSourceSignals = Symbol('kSourceSignals');\x0d\nconst kDependantSignals = Symbol('kDependantSignals');\x0d\n\x0d\nfunction customInspect(self\x2C obj\x2C depth\x2C options) {\x0d\n  if (depth < 0)\x0d\n    return self;\x0d\n\x0d\n  const opts = ObjectAssign({}\x2C options\x2C {\x0d\n    depth: options.depth === null ? null : options.depth - 1\x2C\x0d\n  });\x0d\n\x0d\n  return `${self.constructor.name} ${inspect(obj\x2C opts)}`;\x0d\n}\x0d\n\x0d\nfunction validateThisAbortSignal(obj) {\x0d\n  if (obj?.[kAborted] === undefined)\x0d\n    throw new ERR_INVALID_THIS('AbortSignal');\x0d\n}\x0d\n\x0d\n// Because the AbortSignal timeout cannot be canceled\x2C we don't want the\x0d\n// presence of the timer alone to keep the AbortSignal from being garbage\x0d\n// collected if it otherwise no longer accessible. We also don't want the\x0d\n// timer to keep the Node.js process open on it's own. Therefore\x2C we wrap\x0d\n// the AbortSignal in a WeakRef and have the setTimeout callback close\x0d\n// over the WeakRef rather than directly over the AbortSignal\x2C and we unref\x0d\n// the created timer object. Separately\x2C we add the signal to a\x0d\n// FinalizerRegistry that will clear the timeout when the signal is gc'd.\x0d\nfunction setWeakAbortSignalTimeout(weakRef\x2C delay) {\x0d\n  const timeout = setTimeout(() => {\x0d\n    const signal = weakRef.deref();\x0d\n    if (signal !== undefined) {\x0d\n      gcPersistentSignals.delete(signal);\x0d\n      abortSignal(\x0d\n        signal\x2C\x0d\n        new DOMException(\x0d\n          'The operation was aborted due to timeout'\x2C\x0d\n          'TimeoutError'));\x0d\n    }\x0d\n  }\x2C delay);\x0d\n  timeout.unref();\x0d\n  return timeout;\x0d\n}\x0d\n\x0d\nclass AbortSignal extends EventTarget {\x0d\n  constructor() {\x0d\n    throw new ERR_ILLEGAL_CONSTRUCTOR();\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {boolean}\x0d\n   */\x0d\n  get aborted() {\x0d\n    validateThisAbortSignal(this);\x0d\n    return !!this[kAborted];\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @type {any}\x0d\n   */\x0d\n  get reason() {\x0d\n    validateThisAbortSignal(this);\x0d\n    return this[kReason];\x0d\n  }\x0d\n\x0d\n  throwIfAborted() {\x0d\n    validateThisAbortSignal(this);\x0d\n    if (this[kAborted]) {\x0d\n      throw this[kReason];\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    return customInspect(this\x2C {\x0d\n      aborted: this.aborted\x2C\x0d\n    }\x2C depth\x2C options);\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {any} [reason]\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static abort(\x0d\n    reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\x0d\n    return createAbortSignal({ aborted: true\x2C reason });\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {number} delay\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static timeout(delay) {\x0d\n    validateUint32(delay\x2C 'delay'\x2C false);\x0d\n    const signal = createAbortSignal();\x0d\n    signal[kTimeout] = true;\x0d\n    clearTimeoutRegistry.register(\x0d\n      signal\x2C\x0d\n      setWeakAbortSignalTimeout(new WeakRef(signal)\x2C delay));\x0d\n    return signal;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {AbortSignal[]} signals\x0d\n   * @returns {AbortSignal}\x0d\n   */\x0d\n  static any(signals) {\x0d\n    validateAbortSignalArray(signals\x2C 'signals');\x0d\n    const resultSignal = createAbortSignal({ composite: true });\x0d\n    if (!signals.length) {\x0d\n      return resultSignal;\x0d\n    }\x0d\n    const resultSignalWeakRef = new WeakRef(resultSignal);\x0d\n    resultSignal[kSourceSignals] = new SafeSet();\x0d\n    for (let i = 0; i < signals.length; i++) {\x0d\n      const signal = signals[i];\x0d\n      if (signal.aborted) {\x0d\n        abortSignal(resultSignal\x2C signal.reason);\x0d\n        return resultSignal;\x0d\n      }\x0d\n      signal[kDependantSignals] ??= new SafeSet();\x0d\n      if (!signal[kComposite]) {\x0d\n        resultSignal[kSourceSignals].add(new WeakRef(signal));\x0d\n        signal[kDependantSignals].add(resultSignalWeakRef);\x0d\n      } else if (!signal[kSourceSignals]) {\x0d\n        continue;\x0d\n      } else {\x0d\n        for (const sourceSignal of signal[kSourceSignals]) {\x0d\n          const sourceSignalRef = sourceSignal.deref();\x0d\n          if (!sourceSignalRef) {\x0d\n            continue;\x0d\n          }\x0d\n          assert(!sourceSignalRef.aborted);\x0d\n          assert(!sourceSignalRef[kComposite]);\x0d\n\x0d\n          if (resultSignal[kSourceSignals].has(sourceSignal)) {\x0d\n            continue;\x0d\n          }\x0d\n          resultSignal[kSourceSignals].add(sourceSignal);\x0d\n          sourceSignalRef[kDependantSignals].add(resultSignalWeakRef);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    return resultSignal;\x0d\n  }\x0d\n\x0d\n  [kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak) {\x0d\n    super[kNewListener](size\x2C type\x2C listener\x2C once\x2C capture\x2C passive\x2C weak);\x0d\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\x0d\n    if (isTimeoutOrNonEmptyCompositeSignal &&\x0d\n        type === 'abort' &&\x0d\n        !this.aborted &&\x0d\n        !weak &&\x0d\n        size === 1) {\x0d\n      // If this is a timeout signal\x2C or a non-empty composite signal\x2C and we're adding a non-weak abort\x0d\n      // listener\x2C then we don't want it to be gc'd while the listener\x0d\n      // is attached and the timer still hasn't fired. So\x2C we retain a\x0d\n      // strong ref that is held for as long as the listener is registered.\x0d\n      gcPersistentSignals.add(this);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kRemoveListener](size\x2C type\x2C listener\x2C capture) {\x0d\n    super[kRemoveListener](size\x2C type\x2C listener\x2C capture);\x0d\n    const isTimeoutOrNonEmptyCompositeSignal = this[kTimeout] || (this[kComposite] && this[kSourceSignals]?.size);\x0d\n    if (isTimeoutOrNonEmptyCompositeSignal && type === 'abort' && size === 0) {\x0d\n      gcPersistentSignals.delete(this);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  [kTransfer]() {\x0d\n    validateThisAbortSignal(this);\x0d\n    const aborted = this.aborted;\x0d\n    if (aborted) {\x0d\n      const reason = this.reason;\x0d\n      return {\x0d\n        data: { aborted\x2C reason }\x2C\x0d\n        deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const { port1\x2C port2 } = this[kCloneData];\x0d\n    this[kCloneData] = undefined;\x0d\n\x0d\n    this.addEventListener('abort'\x2C () => {\x0d\n      port1.postMessage(this.reason);\x0d\n      port1.close();\x0d\n    }\x2C { once: true });\x0d\n\x0d\n    return {\x0d\n      data: { port: port2 }\x2C\x0d\n      deserializeInfo: 'internal/abort_controller:ClonedAbortSignal'\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  [kTransferList]() {\x0d\n    if (!this.aborted) {\x0d\n      const { port1\x2C port2 } = lazyMessageChannel();\x0d\n      port1.unref();\x0d\n      port2.unref();\x0d\n      this[kCloneData] = {\x0d\n        port1\x2C\x0d\n        port2\x2C\x0d\n      };\x0d\n      return [port2];\x0d\n    }\x0d\n    return [];\x0d\n  }\x0d\n\x0d\n  [kDeserialize]({ aborted\x2C reason\x2C port }) {\x0d\n    if (aborted) {\x0d\n      this[kAborted] = aborted;\x0d\n      this[kReason] = reason;\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    port.onmessage = ({ data }) => {\x0d\n      abortSignal(this\x2C data);\x0d\n      port.close();\x0d\n      port.onmessage = undefined;\x0d\n    };\x0d\n    // The receiving port\x2C by itself\x2C should never keep the event loop open.\x0d\n    // The unref() has to be called *after* setting the onmessage handler.\x0d\n    port.unref();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction ClonedAbortSignal() {\x0d\n  return createAbortSignal({ transferable: true });\x0d\n}\x0d\nClonedAbortSignal.prototype[kDeserialize] = () => {};\x0d\n\x0d\nObjectDefineProperties(AbortSignal.prototype\x2C {\x0d\n  aborted: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(AbortSignal.prototype\x2C SymbolToStringTag\x2C {\x0d\n  __proto__: null\x2C\x0d\n  writable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  value: 'AbortSignal'\x2C\x0d\n});\x0d\n\x0d\ndefineEventHandler(AbortSignal.prototype\x2C 'abort');\x0d\n\x0d\n/**\x0d\n * @param {{\x0d\n *   aborted? : boolean\x2C\x0d\n *   reason? : any\x2C\x0d\n *   transferable? : boolean\x2C\x0d\n *   composite? : boolean\x2C\x0d\n * }} [init]\x0d\n * @returns {AbortSignal}\x0d\n */\x0d\nfunction createAbortSignal(init = kEmptyObject) {\x0d\n  const {\x0d\n    aborted = false\x2C\x0d\n    reason = undefined\x2C\x0d\n    transferable = false\x2C\x0d\n    composite = false\x2C\x0d\n  } = init;\x0d\n  const signal = new EventTarget();\x0d\n  ObjectSetPrototypeOf(signal\x2C AbortSignal.prototype);\x0d\n  signal[kAborted] = aborted;\x0d\n  signal[kReason] = reason;\x0d\n  signal[kComposite] = composite;\x0d\n  return transferable ? lazyMakeTransferable(signal) : signal;\x0d\n}\x0d\n\x0d\nfunction abortSignal(signal\x2C reason) {\x0d\n  if (signal[kAborted]) return;\x0d\n  signal[kAborted] = true;\x0d\n  signal[kReason] = reason;\x0d\n  const event = new Event('abort'\x2C {\x0d\n    [kTrustEvent]: true\x2C\x0d\n  });\x0d\n  signal.dispatchEvent(event);\x0d\n  signal[kDependantSignals]?.forEach((s) => {\x0d\n    const signalRef = s.deref();\x0d\n    if (signalRef) abortSignal(signalRef\x2C reason);\x0d\n  });\x0d\n}\x0d\n\x0d\nclass AbortController {\x0d\n  #signal;\x0d\n\x0d\n  /**\x0d\n   * @type {AbortSignal}\x0d\n   */\x0d\n  get signal() {\x0d\n    this.#signal ??= createAbortSignal();\x0d\n    return this.#signal;\x0d\n  }\x0d\n\x0d\n  /**\x0d\n   * @param {any} [reason]\x0d\n   */\x0d\n  abort(reason = new DOMException('This operation was aborted'\x2C 'AbortError')) {\x0d\n    abortSignal(this.#signal ??= createAbortSignal()\x2C reason);\x0d\n  }\x0d\n\x0d\n  [customInspectSymbol](depth\x2C options) {\x0d\n    return customInspect(this\x2C {\x0d\n      signal: this.signal\x2C\x0d\n    }\x2C depth\x2C options);\x0d\n  }\x0d\n\x0d\n  static [kMakeTransferable]() {\x0d\n    const controller = new AbortController();\x0d\n    controller.#signal = createAbortSignal({ transferable: true });\x0d\n    return controller;\x0d\n  }\x0d\n}\x0d\n\x0d\n/**\x0d\n * Enables the AbortSignal to be transferable using structuredClone/postMessage.\x0d\n * @param {AbortSignal} signal\x0d\n * @returns {AbortSignal}\x0d\n */\x0d\nfunction transferableAbortSignal(signal) {\x0d\n  if (signal?.[kAborted] === undefined)\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  return lazyMakeTransferable(signal);\x0d\n}\x0d\n\x0d\n/**\x0d\n * Creates an AbortController with a transferable AbortSignal\x0d\n */\x0d\nfunction transferableAbortController() {\x0d\n  return AbortController[kMakeTransferable]();\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {AbortSignal} signal\x0d\n * @param {any} resource\x0d\n * @returns {Promise<void>}\x0d\n */\x0d\nasync function aborted(signal\x2C resource) {\x0d\n  if (signal === undefined) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('signal'\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  validateObject(resource\x2C 'resource'\x2C kValidateObjectAllowArray | kValidateObjectAllowFunction);\x0d\n  if (signal.aborted)\x0d\n    return PromiseResolve();\x0d\n  const abortPromise = createDeferredPromise();\x0d\n  const opts = { __proto__: null\x2C [kWeakHandler]: resource\x2C once: true\x2C [kResistStopPropagation]: true };\x0d\n  signal.addEventListener('abort'\x2C abortPromise.resolve\x2C opts);\x0d\n  return abortPromise.promise;\x0d\n}\x0d\n\x0d\nObjectDefineProperties(AbortController.prototype\x2C {\x0d\n  signal: kEnumerableProperty\x2C\x0d\n  abort: kEnumerableProperty\x2C\x0d\n});\x0d\n\x0d\nObjectDefineProperty(AbortController.prototype\x2C SymbolToStringTag\x2C {\x0d\n  __proto__: null\x2C\x0d\n  writable: false\x2C\x0d\n  enumerable: false\x2C\x0d\n  configurable: true\x2C\x0d\n  value: 'AbortController'\x2C\x0d\n});\x0d\n\x0d\nmodule.exports = {\x0d\n  AbortController\x2C\x0d\n  AbortSignal\x2C\x0d\n  ClonedAbortSignal\x2C\x0d\n  aborted\x2C\x0d\n  transferableAbortSignal\x2C\x0d\n  transferableAbortController\x2C\x0d\n};\x0d\n
code-source-info,0x391359bf866,130,0,12938,C0O0C4O12938,,
code-creation,JS,10,2810216,0x15d1f041be6,1076, node:internal/abort_controller:1:1,0x391359bf7e0,~
code-source-info,0x15d1f041be
code-creation,JS,10,2810371,0x15d1f042236,11,<instance_members_initializer> node:internal/abort_controller:378:1,0x2bb6ec90698,~
code-source-info,0x15d1f042236,130,10563,11248,C4O10590C10O11248,,
code-creation,JS,10,2810537,0x5c3c7ed56,43,SafeFinalizationRegistry node:internal/per_context/primordials:440:16,0x23399f5a48,~
code-source-info,0x5c3c7ed56,6,13195,13240,C3O13215C27O13215C42O13239,,
code-creation,JS,10,2810720,0x5c3c7f406,155,defineEventHandler node:internal/event_target:1116:28,0x3fcdefaf168,~
code-source-info,0x5c3c7f406,48,30578,32062,C0O30578C24O30602C36O30698C41O30703C46O30857C56O30878C66O30934C77O30857C82O31820C92O31841C102O31897C113O31820C118O31921C125O31951C132O31990C138O32000C148O31921C154O32061,,
code-creation,Eval,10,2811097,0x5c3c48ee6,5, node:internal/streams/end-of-stream:1:1,0x5c3c48b90,~
script-source,131,node:internal/streams/end-of-stream,// Ported from https://github.com/mafintosh/end-of-stream with\x0d\n// permission from the author\x2C Mathias Buus (@mafintosh).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_PREMATURE_CLOSE\x2C\x0d\n} = codes;\x0d\nconst {\x0d\n  kEmptyObject\x2C\x0d\n  once\x2C\x0d\n} = require('internal/util');\x0d\nconst {\x0d\n  validateAbortSignal\x2C\x0d\n  validateFunction\x2C\x0d\n  validateObject\x2C\x0d\n  validateBoolean\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  isClosed\x2C\x0d\n  isReadable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableFinished\x2C\x0d\n  isReadableErrored\x2C\x0d\n  isWritable\x2C\x0d\n  isWritableNodeStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isWritableFinished\x2C\x0d\n  isWritableErrored\x2C\x0d\n  isNodeStream\x2C\x0d\n  willEmitClose: _willEmitClose\x2C\x0d\n  kIsClosedPromise\x2C\x0d\n} = require('internal/streams/utils');\x0d\nlet addAbortListener;\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nconst nop = () => {};\x0d\n\x0d\nfunction eos(stream\x2C options\x2C callback) {\x0d\n  if (arguments.length === 2) {\x0d\n    callback = options;\x0d\n    options = kEmptyObject;\x0d\n  } else if (options == null) {\x0d\n    options = kEmptyObject;\x0d\n  } else {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n  validateAbortSignal(options.signal\x2C 'options.signal');\x0d\n\x0d\n  callback = once(callback);\x0d\n\x0d\n  if (isReadableStream(stream) || isWritableStream(stream)) {\x0d\n    return eosWeb(stream\x2C options\x2C callback);\x0d\n  }\x0d\n\x0d\n  if (!isNodeStream(stream)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\x0d\n  }\x0d\n\x0d\n  const readable = options.readable ?? isReadableNodeStream(stream);\x0d\n  const writable = options.writable ?? isWritableNodeStream(stream);\x0d\n\x0d\n  const wState = stream._writableState;\x0d\n  const rState = stream._readableState;\x0d\n\x0d\n  const onlegacyfinish = () => {\x0d\n    if (!stream.writable) {\x0d\n      onfinish();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // TODO (ronag): Improve soft detection to include core modules and\x0d\n  // common ecosystem modules that do properly emit 'close' but fail\x0d\n  // this generic check.\x0d\n  let willEmitClose = (\x0d\n    _willEmitClose(stream) &&\x0d\n    isReadableNodeStream(stream) === readable &&\x0d\n    isWritableNodeStream(stream) === writable\x0d\n  );\x0d\n\x0d\n  let writableFinished = isWritableFinished(stream\x2C false);\x0d\n  const onfinish = () => {\x0d\n    writableFinished = true;\x0d\n    // Stream should not be destroyed here. If it is that\x0d\n    // means that user space is doing something differently and\x0d\n    // we cannot trust willEmitClose.\x0d\n    if (stream.destroyed) {\x0d\n      willEmitClose = false;\x0d\n    }\x0d\n\x0d\n    if (willEmitClose && (!stream.readable || readable)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!readable || readableFinished) {\x0d\n      callback.call(stream);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  let readableFinished = isReadableFinished(stream\x2C false);\x0d\n  const onend = () => {\x0d\n    readableFinished = true;\x0d\n    // Stream should not be destroyed here. If it is that\x0d\n    // means that user space is doing something differently and\x0d\n    // we cannot trust willEmitClose.\x0d\n    if (stream.destroyed) {\x0d\n      willEmitClose = false;\x0d\n    }\x0d\n\x0d\n    if (willEmitClose && (!stream.writable || writable)) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (!writable || writableFinished) {\x0d\n      callback.call(stream);\x0d\n    }\x0d\n  };\x0d\n\x0d\n  const onerror = (err) => {\x0d\n    callback.call(stream\x2C err);\x0d\n  };\x0d\n\x0d\n  let closed = isClosed(stream);\x0d\n\x0d\n  const onclose = () => {\x0d\n    closed = true;\x0d\n\x0d\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\x0d\n\x0d\n    if (errored && typeof errored !== 'boolean') {\x0d\n      return callback.call(stream\x2C errored);\x0d\n    }\x0d\n\x0d\n    if (readable && !readableFinished && isReadableNodeStream(stream\x2C true)) {\x0d\n      if (!isReadableFinished(stream\x2C false))\x0d\n        return callback.call(stream\x2C\x0d\n                             new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n    if (writable && !writableFinished) {\x0d\n      if (!isWritableFinished(stream\x2C false))\x0d\n        return callback.call(stream\x2C\x0d\n                             new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n\x0d\n    callback.call(stream);\x0d\n  };\x0d\n\x0d\n  const onclosed = () => {\x0d\n    closed = true;\x0d\n\x0d\n    const errored = isWritableErrored(stream) || isReadableErrored(stream);\x0d\n\x0d\n    if (errored && typeof errored !== 'boolean') {\x0d\n      return callback.call(stream\x2C errored);\x0d\n    }\x0d\n\x0d\n    callback.call(stream);\x0d\n  };\x0d\n\x0d\n  const onrequest = () => {\x0d\n    stream.req.on('finish'\x2C onfinish);\x0d\n  };\x0d\n\x0d\n  if (isRequest(stream)) {\x0d\n    stream.on('complete'\x2C onfinish);\x0d\n    if (!willEmitClose) {\x0d\n      stream.on('abort'\x2C onclose);\x0d\n    }\x0d\n    if (stream.req) {\x0d\n      onrequest();\x0d\n    } else {\x0d\n      stream.on('request'\x2C onrequest);\x0d\n    }\x0d\n  } else if (writable && !wState) { // legacy streams\x0d\n    stream.on('end'\x2C onlegacyfinish);\x0d\n    stream.on('close'\x2C onlegacyfinish);\x0d\n  }\x0d\n\x0d\n  // Not all streams will emit 'close' after 'aborted'.\x0d\n  if (!willEmitClose && typeof stream.aborted === 'boolean') {\x0d\n    stream.on('aborted'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  stream.on('end'\x2C onend);\x0d\n  stream.on('finish'\x2C onfinish);\x0d\n  if (options.error !== false) {\x0d\n    stream.on('error'\x2C onerror);\x0d\n  }\x0d\n  stream.on('close'\x2C onclose);\x0d\n\x0d\n  if (closed) {\x0d\n    process.nextTick(onclose);\x0d\n  } else if (wState?.errorEmitted || rState?.errorEmitted) {\x0d\n    if (!willEmitClose) {\x0d\n      process.nextTick(onclosed);\x0d\n    }\x0d\n  } else if (\x0d\n    !readable &&\x0d\n    (!willEmitClose || isReadable(stream)) &&\x0d\n    (writableFinished || isWritable(stream) === false)\x0d\n  ) {\x0d\n    process.nextTick(onclosed);\x0d\n  } else if (\x0d\n    !writable &&\x0d\n    (!willEmitClose || isWritable(stream)) &&\x0d\n    (readableFinished || isReadable(stream) === false)\x0d\n  ) {\x0d\n    process.nextTick(onclosed);\x0d\n  } else if ((rState && stream.req && stream.aborted)) {\x0d\n    process.nextTick(onclosed);\x0d\n  }\x0d\n\x0d\n  const cleanup = () => {\x0d\n    callback = nop;\x0d\n    stream.removeListener('aborted'\x2C onclose);\x0d\n    stream.removeListener('complete'\x2C onfinish);\x0d\n    stream.removeListener('abort'\x2C onclose);\x0d\n    stream.removeListener('request'\x2C onrequest);\x0d\n    if (stream.req) stream.req.removeListener('finish'\x2C onfinish);\x0d\n    stream.removeListener('end'\x2C onlegacyfinish);\x0d\n    stream.removeListener('close'\x2C onlegacyfinish);\x0d\n    stream.removeListener('finish'\x2C onfinish);\x0d\n    stream.removeListener('end'\x2C onend);\x0d\n    stream.removeListener('error'\x2C onerror);\x0d\n    stream.removeListener('close'\x2C onclose);\x0d\n  };\x0d\n\x0d\n  if (options.signal && !closed) {\x0d\n    const abort = () => {\x0d\n      // Keep it because cleanup removes it.\x0d\n      const endCallback = callback;\x0d\n      cleanup();\x0d\n      endCallback.call(\x0d\n        stream\x2C\x0d\n        new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n    };\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(abort);\x0d\n    } else {\x0d\n      addAbortListener ??= require('events').addAbortListener;\x0d\n      const disposable = addAbortListener(options.signal\x2C abort);\x0d\n      const originalCallback = callback;\x0d\n      callback = once((...args) => {\x0d\n        disposable[SymbolDispose]();\x0d\n        originalCallback.apply(stream\x2C args);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return cleanup;\x0d\n}\x0d\n\x0d\nfunction eosWeb(stream\x2C options\x2C callback) {\x0d\n  let isAborted = false;\x0d\n  let abort = nop;\x0d\n  if (options.signal) {\x0d\n    abort = () => {\x0d\n      isAborted = true;\x0d\n      callback.call(stream\x2C new AbortError(undefined\x2C { cause: options.signal.reason }));\x0d\n    };\x0d\n    if (options.signal.aborted) {\x0d\n      process.nextTick(abort);\x0d\n    } else {\x0d\n      addAbortListener ??= require('events').addAbortListener;\x0d\n      const disposable = addAbortListener(options.signal\x2C abort);\x0d\n      const originalCallback = callback;\x0d\n      callback = once((...args) => {\x0d\n        disposable[SymbolDispose]();\x0d\n        originalCallback.apply(stream\x2C args);\x0d\n      });\x0d\n    }\x0d\n  }\x0d\n  const resolverFn = (...args) => {\x0d\n    if (!isAborted) {\x0d\n      process.nextTick(() => callback.apply(stream\x2C args));\x0d\n    }\x0d\n  };\x0d\n  PromisePrototypeThen(\x0d\n    stream[kIsClosedPromise].promise\x2C\x0d\n    resolverFn\x2C\x0d\n    resolverFn\x2C\x0d\n  );\x0d\n  return nop;\x0d\n}\x0d\n\x0d\nfunction finished(stream\x2C opts) {\x0d\n  let autoCleanup = false;\x0d\n  if (opts === null) {\x0d\n    opts = kEmptyObject;\x0d\n  }\x0d\n  if (opts?.cleanup) {\x0d\n    validateBoolean(opts.cleanup\x2C 'cleanup');\x0d\n    autoCleanup = opts.cleanup;\x0d\n  }\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    const cleanup = eos(stream\x2C opts\x2C (err) => {\x0d\n      if (autoCleanup) {\x0d\n        cleanup();\x0d\n      }\x0d\n      if (err) {\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve();\x0d\n      }\x0d\n    });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = eos;\x0d\nmodule.exports.finished = finished;\x0d\n
code-source-info,0x5c3c48ee6,131,0,8687,C0O0C4O8687,,
code-creation,JS,10,2811635,0x5c3c49226,353, node:internal/streams/end-of-stream:1:1,0x5c3c48e60,~
code-source-info,0x5c3c49226,131,0,8687,C0O0C120O180C126O180C131O153C137O168C142O220C148O245C154O325C160O325C165O297C171O314C177O449C183O449C188O363C194O387C200O408C206O427C212O495C218O507C224O532C230O878C236O878C241O579C247O592C253O607C259O632C265O653C271O676C277O698C283O713C289O738C295O759C301O782C307O804C313O836C319O855C325O918C326O918C328O1052C332O1052C334O8627C336O8642C340O8657C347O8674C352O8686,,
code-creation,Eval,10,2811961,0x5c3c4d8e6,5, node:internal/streams/compose:1:1,0x5c3c4d6c0,~
script-source,132,node:internal/streams/compose,'use strict';\x0d\n\x0d\nconst { pipeline } = require('internal/streams/pipeline');\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst { destroyer } = require('internal/streams/destroy');\x0d\nconst {\x0d\n  isNodeStream\x2C\x0d\n  isReadable\x2C\x0d\n  isWritable\x2C\x0d\n  isWebStream\x2C\x0d\n  isTransformStream\x2C\x0d\n  isWritableStream\x2C\x0d\n  isReadableStream\x2C\x0d\n} = require('internal/streams/utils');\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nmodule.exports = function compose(...streams) {\x0d\n  if (streams.length === 0) {\x0d\n    throw new ERR_MISSING_ARGS('streams');\x0d\n  }\x0d\n\x0d\n  if (streams.length === 1) {\x0d\n    return Duplex.from(streams[0]);\x0d\n  }\x0d\n\x0d\n  const orgStreams = [...streams];\x0d\n\x0d\n  if (typeof streams[0] === 'function') {\x0d\n    streams[0] = Duplex.from(streams[0]);\x0d\n  }\x0d\n\x0d\n  if (typeof streams[streams.length - 1] === 'function') {\x0d\n    const idx = streams.length - 1;\x0d\n    streams[idx] = Duplex.from(streams[idx]);\x0d\n  }\x0d\n\x0d\n  for (let n = 0; n < streams.length; ++n) {\x0d\n    if (!isNodeStream(streams[n]) && !isWebStream(streams[n])) {\x0d\n      // TODO(ronag): Add checks for non streams.\x0d\n      continue;\x0d\n    }\x0d\n    if (\x0d\n      n < streams.length - 1 &&\x0d\n      !(\x0d\n        isReadable(streams[n]) ||\x0d\n        isReadableStream(streams[n]) ||\x0d\n        isTransformStream(streams[n])\x0d\n      )\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        `streams[${n}]`\x2C\x0d\n        orgStreams[n]\x2C\x0d\n        'must be readable'\x2C\x0d\n      );\x0d\n    }\x0d\n    if (\x0d\n      n > 0 &&\x0d\n      !(\x0d\n        isWritable(streams[n]) ||\x0d\n        isWritableStream(streams[n]) ||\x0d\n        isTransformStream(streams[n])\x0d\n      )\x0d\n    ) {\x0d\n      throw new ERR_INVALID_ARG_VALUE(\x0d\n        `streams[${n}]`\x2C\x0d\n        orgStreams[n]\x2C\x0d\n        'must be writable'\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n  let onfinish;\x0d\n  let onreadable;\x0d\n  let onclose;\x0d\n  let d;\x0d\n\x0d\n  function onfinished(err) {\x0d\n    const cb = onclose;\x0d\n    onclose = null;\x0d\n\x0d\n    if (cb) {\x0d\n      cb(err);\x0d\n    } else if (err) {\x0d\n      d.destroy(err);\x0d\n    } else if (!readable && !writable) {\x0d\n      d.destroy();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const head = streams[0];\x0d\n  const tail = pipeline(streams\x2C onfinished);\x0d\n\x0d\n  const writable = !!(\x0d\n    isWritable(head) ||\x0d\n    isWritableStream(head) ||\x0d\n    isTransformStream(head)\x0d\n  );\x0d\n  const readable = !!(\x0d\n    isReadable(tail) ||\x0d\n    isReadableStream(tail) ||\x0d\n    isTransformStream(tail)\x0d\n  );\x0d\n\x0d\n  // TODO(ronag): Avoid double buffering.\x0d\n  // Implement Writable/Readable/Duplex traits.\x0d\n  // See\x2C https://github.com/nodejs/node/pull/33515.\x0d\n  d = new Duplex({\x0d\n    // TODO (ronag): highWaterMark?\x0d\n    writableObjectMode: !!head?.writableObjectMode\x2C\x0d\n    readableObjectMode: !!tail?.readableObjectMode\x2C\x0d\n    writable\x2C\x0d\n    readable\x2C\x0d\n  });\x0d\n\x0d\n  if (writable) {\x0d\n    if (isNodeStream(head)) {\x0d\n      d._write = function(chunk\x2C encoding\x2C callback) {\x0d\n        if (head.write(chunk\x2C encoding)) {\x0d\n          callback();\x0d\n        } else {\x0d\n          ondrain = callback;\x0d\n        }\x0d\n      };\x0d\n\x0d\n      d._final = function(callback) {\x0d\n        head.end();\x0d\n        onfinish = callback;\x0d\n      };\x0d\n\x0d\n      head.on('drain'\x2C function() {\x0d\n        if (ondrain) {\x0d\n          const cb = ondrain;\x0d\n          ondrain = null;\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n    } else if (isWebStream(head)) {\x0d\n      const writable = isTransformStream(head) ? head.writable : head;\x0d\n      const writer = writable.getWriter();\x0d\n\x0d\n      d._write = async function(chunk\x2C encoding\x2C callback) {\x0d\n        try {\x0d\n          await writer.ready;\x0d\n          writer.write(chunk).catch(() => {});\x0d\n          callback();\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n        }\x0d\n      };\x0d\n\x0d\n      d._final = async function(callback) {\x0d\n        try {\x0d\n          await writer.ready;\x0d\n          writer.close().catch(() => {});\x0d\n          onfinish = callback;\x0d\n        } catch (err) {\x0d\n          callback(err);\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n\x0d\n    const toRead = isTransformStream(tail) ? tail.readable : tail;\x0d\n\x0d\n    eos(toRead\x2C () => {\x0d\n      if (onfinish) {\x0d\n        const cb = onfinish;\x0d\n        onfinish = null;\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  if (readable) {\x0d\n    if (isNodeStream(tail)) {\x0d\n      tail.on('readable'\x2C function() {\x0d\n        if (onreadable) {\x0d\n          const cb = onreadable;\x0d\n          onreadable = null;\x0d\n          cb();\x0d\n        }\x0d\n      });\x0d\n\x0d\n      tail.on('end'\x2C function() {\x0d\n        d.push(null);\x0d\n      });\x0d\n\x0d\n      d._read = function() {\x0d\n        while (true) {\x0d\n          const buf = tail.read();\x0d\n          if (buf === null) {\x0d\n            onreadable = d._read;\x0d\n            return;\x0d\n          }\x0d\n\x0d\n          if (!d.push(buf)) {\x0d\n            return;\x0d\n          }\x0d\n        }\x0d\n      };\x0d\n    } else if (isWebStream(tail)) {\x0d\n      const readable = isTransformStream(tail) ? tail.readable : tail;\x0d\n      const reader = readable.getReader();\x0d\n      d._read = async function() {\x0d\n        while (true) {\x0d\n          try {\x0d\n            const { value\x2C done } = await reader.read();\x0d\n\x0d\n            if (!d.push(value)) {\x0d\n              return;\x0d\n            }\x0d\n\x0d\n            if (done) {\x0d\n              d.push(null);\x0d\n              return;\x0d\n            }\x0d\n          } catch {\x0d\n            return;\x0d\n          }\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n  }\x0d\n\x0d\n  d._destroy = function(err\x2C callback) {\x0d\n    if (!err && onclose !== null) {\x0d\n      err = new AbortError();\x0d\n    }\x0d\n\x0d\n    onreadable = null;\x0d\n    ondrain = null;\x0d\n    onfinish = null;\x0d\n\x0d\n    if (onclose === null) {\x0d\n      callback(err);\x0d\n    } else {\x0d\n      onclose = callback;\x0d\n      if (isNodeStream(tail)) {\x0d\n        destroyer(tail\x2C err);\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  return d;\x0d\n};\x0d\n
code-source-info,0x5c3c4d8e6,132,0,5703,C0O0C4O5703,,
code-creation,JS,10,2812322,0x5c3c4dade,184, node:internal/streams/compose:1:1,0x5c3c4d860,~
code-source-info,0x5c3c4dade,132,0,5703,C0O0C47O38C50O38C55O25C61O92C64O92C68O92C70O151C73O151C78O137C84O329C87O329C92O200C98O217C104O232C110O247C116O263C122O285C128O306C134O462C137O462C142O376C148O398C153O405C159O433C165O503C168O503C172O503C174O549C178O564C183O5702,,
code-creation,Eval,10,2812758,0x5c3c4ec9e,5, node:internal/streams/pipeline:1:1,0x5c3c4e8e8,~
script-source,133,node:internal/streams/pipeline,// Ported from https://github.com/mafintosh/pump with\x0d\n// permission from the author\x2C Mathias Buus (@mafintosh).\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  Promise\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst { once } = require('internal/util');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_INVALID_RETURN_VALUE\x2C\x0d\n    ERR_MISSING_ARGS\x2C\x0d\n    ERR_STREAM_DESTROYED\x2C\x0d\n    ERR_STREAM_PREMATURE_CLOSE\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n  validateAbortSignal\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  isIterable\x2C\x0d\n  isReadable\x2C\x0d\n  isReadableNodeStream\x2C\x0d\n  isNodeStream\x2C\x0d\n  isTransformStream\x2C\x0d\n  isWebStream\x2C\x0d\n  isReadableStream\x2C\x0d\n  isReadableFinished\x2C\x0d\n} = require('internal/streams/utils');\x0d\nconst { AbortController } = require('internal/abort_controller');\x0d\n\x0d\nlet PassThrough;\x0d\nlet Readable;\x0d\nlet addAbortListener;\x0d\n\x0d\nfunction destroyer(stream\x2C reading\x2C writing) {\x0d\n  let finished = false;\x0d\n  stream.on('close'\x2C () => {\x0d\n    finished = true;\x0d\n  });\x0d\n\x0d\n  const cleanup = eos(stream\x2C { readable: reading\x2C writable: writing }\x2C (err) => {\x0d\n    finished = !err;\x0d\n  });\x0d\n\x0d\n  return {\x0d\n    destroy: (err) => {\x0d\n      if (finished) return;\x0d\n      finished = true;\x0d\n      destroyImpl.destroyer(stream\x2C err || new ERR_STREAM_DESTROYED('pipe'));\x0d\n    }\x2C\x0d\n    cleanup\x2C\x0d\n  };\x0d\n}\x0d\n\x0d\nfunction popCallback(streams) {\x0d\n  // Streams should never be an empty array. It should always contain at least\x0d\n  // a single stream. Therefore optimize for the average case instead of\x0d\n  // checking for length === 0 as well.\x0d\n  validateFunction(streams[streams.length - 1]\x2C 'streams[stream.length - 1]');\x0d\n  return streams.pop();\x0d\n}\x0d\n\x0d\nfunction makeAsyncIterable(val) {\x0d\n  if (isIterable(val)) {\x0d\n    return val;\x0d\n  } else if (isReadableNodeStream(val)) {\x0d\n    // Legacy streams are not Iterable.\x0d\n    return fromReadable(val);\x0d\n  }\x0d\n  throw new ERR_INVALID_ARG_TYPE(\x0d\n    'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable']\x2C val);\x0d\n}\x0d\n\x0d\nasync function* fromReadable(val) {\x0d\n  if (!Readable) {\x0d\n    Readable = require('internal/streams/readable');\x0d\n  }\x0d\n\x0d\n  yield* Readable.prototype[SymbolAsyncIterator].call(val);\x0d\n}\x0d\n\x0d\nasync function pumpToNode(iterable\x2C writable\x2C finish\x2C { end }) {\x0d\n  let error;\x0d\n  let onresolve = null;\x0d\n\x0d\n  const resume = (err) => {\x0d\n    if (err) {\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    if (onresolve) {\x0d\n      const callback = onresolve;\x0d\n      onresolve = null;\x0d\n      callback();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  const wait = () => new Promise((resolve\x2C reject) => {\x0d\n    if (error) {\x0d\n      reject(error);\x0d\n    } else {\x0d\n      onresolve = () => {\x0d\n        if (error) {\x0d\n          reject(error);\x0d\n        } else {\x0d\n          resolve();\x0d\n        }\x0d\n      };\x0d\n    }\x0d\n  });\x0d\n\x0d\n  writable.on('drain'\x2C resume);\x0d\n  const cleanup = eos(writable\x2C { readable: false }\x2C resume);\x0d\n\x0d\n  try {\x0d\n    if (writable.writableNeedDrain) {\x0d\n      await wait();\x0d\n    }\x0d\n\x0d\n    for await (const chunk of iterable) {\x0d\n      if (!writable.write(chunk)) {\x0d\n        await wait();\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (end) {\x0d\n      writable.end();\x0d\n      await wait();\x0d\n    }\x0d\n\x0d\n    finish();\x0d\n  } catch (err) {\x0d\n    finish(error !== err ? aggregateTwoErrors(error\x2C err) : err);\x0d\n  } finally {\x0d\n    cleanup();\x0d\n    writable.off('drain'\x2C resume);\x0d\n  }\x0d\n}\x0d\n\x0d\nasync function pumpToWeb(readable\x2C writable\x2C finish\x2C { end }) {\x0d\n  if (isTransformStream(writable)) {\x0d\n    writable = writable.writable;\x0d\n  }\x0d\n  // https://streams.spec.whatwg.org/#example-manual-write-with-backpressure\x0d\n  const writer = writable.getWriter();\x0d\n  try {\x0d\n    for await (const chunk of readable) {\x0d\n      await writer.ready;\x0d\n      writer.write(chunk).catch(() => {});\x0d\n    }\x0d\n\x0d\n    await writer.ready;\x0d\n\x0d\n    if (end) {\x0d\n      await writer.close();\x0d\n    }\x0d\n\x0d\n    finish();\x0d\n  } catch (err) {\x0d\n    try {\x0d\n      await writer.abort(err);\x0d\n      finish(err);\x0d\n    } catch (err) {\x0d\n      finish(err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction pipeline(...streams) {\x0d\n  return pipelineImpl(streams\x2C once(popCallback(streams)));\x0d\n}\x0d\n\x0d\nfunction pipelineImpl(streams\x2C callback\x2C opts) {\x0d\n  if (streams.length === 1 && ArrayIsArray(streams[0])) {\x0d\n    streams = streams[0];\x0d\n  }\x0d\n\x0d\n  if (streams.length < 2) {\x0d\n    throw new ERR_MISSING_ARGS('streams');\x0d\n  }\x0d\n\x0d\n  const ac = new AbortController();\x0d\n  const signal = ac.signal;\x0d\n  const outerSignal = opts?.signal;\x0d\n\x0d\n  // Need to cleanup event listeners if last stream is readable\x0d\n  // https://github.com/nodejs/node/issues/35452\x0d\n  const lastStreamCleanup = [];\x0d\n\x0d\n  validateAbortSignal(outerSignal\x2C 'options.signal');\x0d\n\x0d\n  function abort() {\x0d\n    finishImpl(new AbortError());\x0d\n  }\x0d\n\x0d\n  addAbortListener ??= require('events').addAbortListener;\x0d\n  let disposable;\x0d\n  if (outerSignal) {\x0d\n    disposable = addAbortListener(outerSignal\x2C abort);\x0d\n  }\x0d\n\x0d\n  let error;\x0d\n  let value;\x0d\n  const destroys = [];\x0d\n\x0d\n  let finishCount = 0;\x0d\n\x0d\n  function finish(err) {\x0d\n    finishImpl(err\x2C --finishCount === 0);\x0d\n  }\x0d\n\x0d\n  function finishImpl(err\x2C final) {\x0d\n    if (err && (!error || error.code === 'ERR_STREAM_PREMATURE_CLOSE')) {\x0d\n      error = err;\x0d\n    }\x0d\n\x0d\n    if (!error && !final) {\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    while (destroys.length) {\x0d\n      destroys.shift()(error);\x0d\n    }\x0d\n\x0d\n    disposable?.[SymbolDispose]();\x0d\n    ac.abort();\x0d\n\x0d\n    if (final) {\x0d\n      if (!error) {\x0d\n        lastStreamCleanup.forEach((fn) => fn());\x0d\n      }\x0d\n      process.nextTick(callback\x2C error\x2C value);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  for (let i = 0; i < streams.length; i++) {\x0d\n    const stream = streams[i];\x0d\n    const reading = i < streams.length - 1;\x0d\n    const writing = i > 0;\x0d\n    const end = reading || opts?.end !== false;\x0d\n    const isLastStream = i === streams.length - 1;\x0d\n\x0d\n    if (isNodeStream(stream)) {\x0d\n      if (end) {\x0d\n        const { destroy\x2C cleanup } = destroyer(stream\x2C reading\x2C writing);\x0d\n        destroys.push(destroy);\x0d\n\x0d\n        if (isReadable(stream) && isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      }\x0d\n\x0d\n      // Catch stream errors that occur after pipe/pump has completed.\x0d\n      function onError(err) {\x0d\n        if (\x0d\n          err &&\x0d\n          err.name !== 'AbortError' &&\x0d\n          err.code !== 'ERR_STREAM_PREMATURE_CLOSE'\x0d\n        ) {\x0d\n          finish(err);\x0d\n        }\x0d\n      }\x0d\n      stream.on('error'\x2C onError);\x0d\n      if (isReadable(stream) && isLastStream) {\x0d\n        lastStreamCleanup.push(() => {\x0d\n          stream.removeListener('error'\x2C onError);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (i === 0) {\x0d\n      if (typeof stream === 'function') {\x0d\n        ret = stream({ signal });\x0d\n        if (!isIterable(ret)) {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'Iterable\x2C AsyncIterable or Stream'\x2C 'source'\x2C ret);\x0d\n        }\x0d\n      } else if (isIterable(stream) || isReadableNodeStream(stream) || isTransformStream(stream)) {\x0d\n        ret = stream;\x0d\n      } else {\x0d\n        ret = Duplex.from(stream);\x0d\n      }\x0d\n    } else if (typeof stream === 'function') {\x0d\n      if (isTransformStream(ret)) {\x0d\n        ret = makeAsyncIterable(ret?.readable);\x0d\n      } else {\x0d\n        ret = makeAsyncIterable(ret);\x0d\n      }\x0d\n      ret = stream(ret\x2C { signal });\x0d\n\x0d\n      if (reading) {\x0d\n        if (!isIterable(ret\x2C true)) {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'AsyncIterable'\x2C `transform[${i - 1}]`\x2C ret);\x0d\n        }\x0d\n      } else {\x0d\n        if (!PassThrough) {\x0d\n          PassThrough = require('internal/streams/passthrough');\x0d\n        }\x0d\n\x0d\n        // If the last argument to pipeline is not a stream\x0d\n        // we must create a proxy stream so that pipeline(...)\x0d\n        // always returns a stream which can be further\x0d\n        // composed through `.pipe(stream)`.\x0d\n\x0d\n        const pt = new PassThrough({\x0d\n          objectMode: true\x2C\x0d\n        });\x0d\n\x0d\n        // Handle Promises/A+ spec\x2C `then` could be a getter that throws on\x0d\n        // second use.\x0d\n        const then = ret?.then;\x0d\n        if (typeof then === 'function') {\x0d\n          finishCount++;\x0d\n          then.call(ret\x2C\x0d\n                    (val) => {\x0d\n                      value = val;\x0d\n                      if (val != null) {\x0d\n                        pt.write(val);\x0d\n                      }\x0d\n                      if (end) {\x0d\n                        pt.end();\x0d\n                      }\x0d\n                      process.nextTick(finish);\x0d\n                    }\x2C (err) => {\x0d\n                      pt.destroy(err);\x0d\n                      process.nextTick(finish\x2C err);\x0d\n                    }\x2C\x0d\n          );\x0d\n        } else if (isIterable(ret\x2C true)) {\x0d\n          finishCount++;\x0d\n          pumpToNode(ret\x2C pt\x2C finish\x2C { end });\x0d\n        } else if (isReadableStream(ret) || isTransformStream(ret)) {\x0d\n          const toRead = ret.readable || ret;\x0d\n          finishCount++;\x0d\n          pumpToNode(toRead\x2C pt\x2C finish\x2C { end });\x0d\n        } else {\x0d\n          throw new ERR_INVALID_RETURN_VALUE(\x0d\n            'AsyncIterable or Promise'\x2C 'destination'\x2C ret);\x0d\n        }\x0d\n\x0d\n        ret = pt;\x0d\n\x0d\n        const { destroy\x2C cleanup } = destroyer(ret\x2C false\x2C true);\x0d\n        destroys.push(destroy);\x0d\n        if (isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      }\x0d\n    } else if (isNodeStream(stream)) {\x0d\n      if (isReadableNodeStream(ret)) {\x0d\n        finishCount += 2;\x0d\n        const cleanup = pipe(ret\x2C stream\x2C finish\x2C { end });\x0d\n        if (isReadable(stream) && isLastStream) {\x0d\n          lastStreamCleanup.push(cleanup);\x0d\n        }\x0d\n      } else if (isTransformStream(ret) || isReadableStream(ret)) {\x0d\n        const toRead = ret.readable || ret;\x0d\n        finishCount++;\x0d\n        pumpToNode(toRead\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isIterable(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToNode(ret\x2C stream\x2C finish\x2C { end });\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\x0d\n      }\x0d\n      ret = stream;\x0d\n    } else if (isWebStream(stream)) {\x0d\n      if (isReadableNodeStream(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(makeAsyncIterable(ret)\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isReadableStream(ret) || isIterable(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(ret\x2C stream\x2C finish\x2C { end });\x0d\n      } else if (isTransformStream(ret)) {\x0d\n        finishCount++;\x0d\n        pumpToWeb(ret.readable\x2C stream\x2C finish\x2C { end });\x0d\n      } else {\x0d\n        throw new ERR_INVALID_ARG_TYPE(\x0d\n          'val'\x2C ['Readable'\x2C 'Iterable'\x2C 'AsyncIterable'\x2C 'ReadableStream'\x2C 'TransformStream']\x2C ret);\x0d\n      }\x0d\n      ret = stream;\x0d\n    } else {\x0d\n      ret = Duplex.from(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (signal?.aborted || outerSignal?.aborted) {\x0d\n    process.nextTick(abort);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction pipe(src\x2C dst\x2C finish\x2C { end }) {\x0d\n  let ended = false;\x0d\n  dst.on('close'\x2C () => {\x0d\n    if (!ended) {\x0d\n      // Finish if the destination closes before the source has completed.\x0d\n      finish(new ERR_STREAM_PREMATURE_CLOSE());\x0d\n    }\x0d\n  });\x0d\n\x0d\n  src.pipe(dst\x2C { end: false }); // If end is true we already will have a listener to end dst.\x0d\n\x0d\n  if (end) {\x0d\n    // Compat. Before node v10.12.0 stdio used to throw an error so\x0d\n    // pipe() did/does not end() stdio destinations.\x0d\n    // Now they allow it but "secretly" don't close the underlying fd.\x0d\n\x0d\n    function endFn() {\x0d\n      ended = true;\x0d\n      dst.end();\x0d\n    }\x0d\n\x0d\n    if (isReadableFinished(src)) { // End the destination if the source has already ended.\x0d\n      process.nextTick(endFn);\x0d\n    } else {\x0d\n      src.once('end'\x2C endFn);\x0d\n    }\x0d\n  } else {\x0d\n    finish();\x0d\n  }\x0d\n\x0d\n  eos(src\x2C { readable: true\x2C writable: false }\x2C (err) => {\x0d\n    const rState = src._readableState;\x0d\n    if (\x0d\n      err &&\x0d\n      err.code === 'ERR_STREAM_PREMATURE_CLOSE' &&\x0d\n      (rState && rState.ended && !rState.errored && !rState.errorEmitted)\x0d\n    ) {\x0d\n      // Some readable streams will emit 'close' before 'end'. However\x2C since\x0d\n      // this is on the readable side 'end' should still be emitted if the\x0d\n      // stream has been ended and no error emitted. This should be allowed in\x0d\n      // favor of backwards compatibility. Since the stream is piped to a\x0d\n      // destination this should not result in any observable difference.\x0d\n      // We don't need to check if this is a writable premature close since\x0d\n      // eos will only fail with premature close on the reading side for\x0d\n      // duplex streams.\x0d\n      src\x0d\n        .once('end'\x2C finish)\x0d\n        .once('error'\x2C finish);\x0d\n    } else {\x0d\n      finish(err);\x0d\n    }\x0d\n  });\x0d\n  return eos(dst\x2C { readable: false\x2C writable: true }\x2C finish);\x0d\n}\x0d\n\x0d\nmodule.exports = { pipelineImpl\x2C pipeline };\x0d\n
code-source-info,0x5c3c4ec9e,133,0,12793,C0O0C4O12793,,
code-creation,JS,10,2813487,0x5c3c4f216,421, node:internal/streams/pipeline:1:1,0x5c3c4ec18,~
code-source-info,0x5c3c4f216,133,0,12793,C0O0C153O144C159O161C165O173C171O197C177O245C183O245C187O245C189O306C195O306C200O297C206O353C212O353C216O353C218O406C224O406C228O406C230O653C236O653C241O454C247O484C252O491C258O518C264O549C270O572C276O599C282O636C288O742C294O742C299O695C305O716C311O944C317O944C322O788C328O803C334O818C340O843C346O860C352O882C358O898C364O919C370O1008C376O1008C381O988C387O1053C388O1053C390O1071C391O1071C393O1086C394O1086C396O12747C403O12766C409O12780C415O12762C420O12792,,
code-creation,Eval,10,2813881,0x5c3c4791e,5, node:internal/streams/destroy:1:1,0x5c3c47608,~
script-source,134,node:internal/streams/destroy,'use strict';\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_MULTIPLE_CALLBACK\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\nconst {\x0d\n  kIsDestroyed\x2C\x0d\n  isDestroyed\x2C\x0d\n  isFinished\x2C\x0d\n  isServerRequest\x2C\x0d\n  kState\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kEmitClose\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kConstructed\x2C\x0d\n  kDestroyed\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kErrored\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst kDestroy = Symbol('kDestroy');\x0d\nconst kConstruct = Symbol('kConstruct');\x0d\n\x0d\nfunction checkError(err\x2C w\x2C r) {\x0d\n  if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && !w.errored) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && !r.errored) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Backwards compat. cb() is undocumented and unused in core but\x0d\n// unfortunately might be used by modules.\x0d\nfunction destroy(err\x2C cb) {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n  // With duplex streams we use the writable side for state.\x0d\n  const s = w || r;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kDestroyed) !== 0) ||\x0d\n    (r && (r[kState] & kDestroyed) !== 0)\x0d\n  ) {\x0d\n    if (typeof cb === 'function') {\x0d\n      cb();\x0d\n    }\x0d\n\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n\x0d\n  // We set destroyed to true before firing error callbacks in order\x0d\n  // to make it re-entrance safe in case destroy() is called within callbacks\x0d\n  checkError(err\x2C w\x2C r);\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kDestroyed;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kDestroyed;\x0d\n  }\x0d\n\x0d\n  // If still constructing then defer calling _destroy.\x0d\n  if ((s[kState] & kConstructed) === 0) {\x0d\n    this.once(kDestroy\x2C function(er) {\x0d\n      _destroy(this\x2C aggregateTwoErrors(er\x2C err)\x2C cb);\x0d\n    });\x0d\n  } else {\x0d\n    _destroy(this\x2C err\x2C cb);\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n}\x0d\n\x0d\nfunction _destroy(self\x2C err\x2C cb) {\x0d\n  let called = false;\x0d\n\x0d\n  function onDestroy(err) {\x0d\n    if (called) {\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = self._readableState;\x0d\n    const w = self._writableState;\x0d\n\x0d\n    checkError(err\x2C w\x2C r);\x0d\n\x0d\n    if (w) {\x0d\n      w[kState] |= kClosed;\x0d\n    }\x0d\n    if (r) {\x0d\n      r[kState] |= kClosed;\x0d\n    }\x0d\n\x0d\n    if (typeof cb === 'function') {\x0d\n      cb(err);\x0d\n    }\x0d\n\x0d\n    if (err) {\x0d\n      process.nextTick(emitErrorCloseNT\x2C self\x2C err);\x0d\n    } else {\x0d\n      process.nextTick(emitCloseNT\x2C self);\x0d\n    }\x0d\n  }\x0d\n  try {\x0d\n    self._destroy(err || null\x2C onDestroy);\x0d\n  } catch (err) {\x0d\n    onDestroy(err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseNT(self\x2C err) {\x0d\n  emitErrorNT(self\x2C err);\x0d\n  emitCloseNT(self);\x0d\n}\x0d\n\x0d\nfunction emitCloseNT(self) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kCloseEmitted;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kCloseEmitted;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kEmitClose) !== 0) ||\x0d\n    (r && (r[kState] & kEmitClose) !== 0)\x0d\n  ) {\x0d\n    self.emit('close');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitErrorNT(self\x2C err) {\x0d\n  const r = self._readableState;\x0d\n  const w = self._writableState;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] & kErrorEmitted) !== 0) ||\x0d\n    (r && (r[kState] & kErrorEmitted) !== 0)\x0d\n  ) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w[kState] |= kErrorEmitted;\x0d\n  }\x0d\n  if (r) {\x0d\n    r[kState] |= kErrorEmitted;\x0d\n  }\x0d\n\x0d\n  self.emit('error'\x2C err);\x0d\n}\x0d\n\x0d\nfunction undestroy() {\x0d\n  const r = this._readableState;\x0d\n  const w = this._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r.constructed = true;\x0d\n    r.closed = false;\x0d\n    r.closeEmitted = false;\x0d\n    r.destroyed = false;\x0d\n    r.errored = null;\x0d\n    r.errorEmitted = false;\x0d\n    r.reading = false;\x0d\n    r.ended = r.readable === false;\x0d\n    r.endEmitted = r.readable === false;\x0d\n  }\x0d\n\x0d\n  if (w) {\x0d\n    w.constructed = true;\x0d\n    w.destroyed = false;\x0d\n    w.closed = false;\x0d\n    w.closeEmitted = false;\x0d\n    w.errored = null;\x0d\n    w.errorEmitted = false;\x0d\n    w.finalCalled = false;\x0d\n    w.prefinished = false;\x0d\n    w.ended = w.writable === false;\x0d\n    w.ending = w.writable === false;\x0d\n    w.finished = w.writable === false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction errorOrDestroy(stream\x2C err\x2C sync) {\x0d\n  // We have tests that rely on errors being emitted\x0d\n  // in the same tick\x2C so changing this is semver major.\x0d\n  // For now when you opt-in to autoDestroy we allow\x0d\n  // the error to be emitted nextTick. In a future\x0d\n  // semver major update we should change the default to this.\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (\x0d\n    (w && (w[kState] ? (w[kState] & kDestroyed) !== 0 : w.destroyed)) ||\x0d\n    (r && (r[kState] ? (r[kState] & kDestroyed) !== 0 : r.destroyed))\x0d\n  ) {\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  if (\x0d\n    (r && (r[kState] & kAutoDestroy) !== 0) ||\x0d\n    (w && (w[kState] & kAutoDestroy) !== 0)\x0d\n  ) {\x0d\n    stream.destroy(err);\x0d\n  } else if (err) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    err.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if (w && (w[kState] & kErrored) === 0) {\x0d\n      w.errored = err;\x0d\n    }\x0d\n    if (r && (r[kState] & kErrored) === 0) {\x0d\n      r.errored = err;\x0d\n    }\x0d\n    if (sync) {\x0d\n      process.nextTick(emitErrorNT\x2C stream\x2C err);\x0d\n    } else {\x0d\n      emitErrorNT(stream\x2C err);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction construct(stream\x2C cb) {\x0d\n  if (typeof stream._construct !== 'function') {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const r = stream._readableState;\x0d\n  const w = stream._writableState;\x0d\n\x0d\n  if (r) {\x0d\n    r[kState] &= ~kConstructed;\x0d\n  }\x0d\n  if (w) {\x0d\n    w[kState] &= ~kConstructed;\x0d\n  }\x0d\n\x0d\n  stream.once(kConstruct\x2C cb);\x0d\n\x0d\n  if (stream.listenerCount(kConstruct) > 1) {\x0d\n    // Duplex\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  process.nextTick(constructNT\x2C stream);\x0d\n}\x0d\n\x0d\nfunction constructNT(stream) {\x0d\n  let called = false;\x0d\n\x0d\n  function onConstruct(err) {\x0d\n    if (called) {\x0d\n      errorOrDestroy(stream\x2C err ?? new ERR_MULTIPLE_CALLBACK());\x0d\n      return;\x0d\n    }\x0d\n    called = true;\x0d\n\x0d\n    const r = stream._readableState;\x0d\n    const w = stream._writableState;\x0d\n    const s = w || r;\x0d\n\x0d\n    if (r) {\x0d\n      r[kState] |= kConstructed;\x0d\n    }\x0d\n    if (w) {\x0d\n      w[kState] |= kConstructed;\x0d\n    }\x0d\n\x0d\n    if (s.destroyed) {\x0d\n      stream.emit(kDestroy\x2C err);\x0d\n    } else if (err) {\x0d\n      errorOrDestroy(stream\x2C err\x2C true);\x0d\n    } else {\x0d\n      stream.emit(kConstruct);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  try {\x0d\n    stream._construct((err) => {\x0d\n      process.nextTick(onConstruct\x2C err);\x0d\n    });\x0d\n  } catch (err) {\x0d\n    process.nextTick(onConstruct\x2C err);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction isRequest(stream) {\x0d\n  return stream?.setHeader && typeof stream.abort === 'function';\x0d\n}\x0d\n\x0d\nfunction emitCloseLegacy(stream) {\x0d\n  stream.emit('close');\x0d\n}\x0d\n\x0d\nfunction emitErrorCloseLegacy(stream\x2C err) {\x0d\n  stream.emit('error'\x2C err);\x0d\n  process.nextTick(emitCloseLegacy\x2C stream);\x0d\n}\x0d\n\x0d\n// Normalize destroy for legacy.\x0d\nfunction destroyer(stream\x2C err) {\x0d\n  if (!stream || isDestroyed(stream)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (!err && !isFinished(stream)) {\x0d\n    err = new AbortError();\x0d\n  }\x0d\n\x0d\n  // TODO: Remove isRequest branches.\x0d\n  if (isServerRequest(stream)) {\x0d\n    stream.socket = null;\x0d\n    stream.destroy(err);\x0d\n  } else if (isRequest(stream)) {\x0d\n    stream.abort();\x0d\n  } else if (isRequest(stream.req)) {\x0d\n    stream.req.abort();\x0d\n  } else if (typeof stream.destroy === 'function') {\x0d\n    stream.destroy(err);\x0d\n  } else if (typeof stream.close === 'function') {\x0d\n    // TODO: Don't lose err?\x0d\n    stream.close();\x0d\n  } else if (err) {\x0d\n    process.nextTick(emitErrorCloseLegacy\x2C stream\x2C err);\x0d\n  } else {\x0d\n    process.nextTick(emitCloseLegacy\x2C stream);\x0d\n  }\x0d\n\x0d\n  if (!stream.destroyed) {\x0d\n    stream[kIsDestroyed] = true;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  construct\x2C\x0d\n  destroyer\x2C\x0d\n  destroy\x2C\x0d\n  undestroy\x2C\x0d\n  errorOrDestroy\x2C\x0d\n};\x0d\n
code-source-info,0x5c3c4791e,134,0,7714,C0O0C4O7714,,
code-creation,JS,10,2814364,0x5c3c48036,326, node:internal/streams/destroy:1:1,0x5c3c47898,~
code-source-info,0x5c3c48036,134,0,7714,C0O0C143O114C146O114C151O28C157O58C162O65C168O97C174O154C179O398C182O398C187O192C193O209C199O225C205O240C211O260C217O271C223O289C229O304C235O316C241O334C247O351C253O366C259O383C265O453C268O453C272O453C274O493C277O493C281O493C283O7617C290O7639C296O7653C302O7667C308O7679C314O7693C320O7632C325O7713,,
code-creation,Eval,10,2814700,0x2bb6ec9bb5e,5, node:internal/streams/duplex:1:1,0x2bb6ec9b968,~
script-source,135,node:internal/streams/duplex,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a duplex stream is just a stream that is both readable and writable.\x0d\n// Since JS doesn't have multiple prototype inheritance\x2C this class\x0d\n// prototypically inherits from Readable\x2C and then parasitically from\x0d\n// Writable.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Duplex;\x0d\n\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst Readable = require('internal/streams/readable');\x0d\nconst Writable = require('internal/streams/writable');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst { kOnConstructed } = require('internal/streams/utils');\x0d\n\x0d\nObjectSetPrototypeOf(Duplex.prototype\x2C Readable.prototype);\x0d\nObjectSetPrototypeOf(Duplex\x2C Readable);\x0d\n\x0d\n{\x0d\n  const keys = ObjectKeys(Writable.prototype);\x0d\n  // Allow the keys array to be GC'ed.\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    const method = keys[i];\x0d\n    if (!Duplex.prototype[method])\x0d\n      Duplex.prototype[method] = Writable.prototype[method];\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction Duplex(options) {\x0d\n  if (!(this instanceof Duplex))\x0d\n    return new Duplex(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    prefinish: undefined\x2C\x0d\n    finish: undefined\x2C\x0d\n    drain: undefined\x2C\x0d\n    data: undefined\x2C\x0d\n    end: undefined\x2C\x0d\n    readable: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // pause: undefined\x2C\x0d\n    // resume: undefined\x2C\x0d\n    // pipe: undefined\x2C\x0d\n    // unpipe: undefined\x2C\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._readableState = new Readable.ReadableState(options\x2C this\x2C true);\x0d\n  this._writableState = new Writable.WritableState(options\x2C this\x2C true);\x0d\n\x0d\n  if (options) {\x0d\n    this.allowHalfOpen = options.allowHalfOpen !== false;\x0d\n\x0d\n    if (options.readable === false) {\x0d\n      this._readableState.readable = false;\x0d\n      this._readableState.ended = true;\x0d\n      this._readableState.endEmitted = true;\x0d\n    }\x0d\n\x0d\n    if (options.writable === false) {\x0d\n      this._writableState.writable = false;\x0d\n      this._writableState.ending = true;\x0d\n      this._writableState.ended = true;\x0d\n      this._writableState.finished = true;\x0d\n    }\x0d\n\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  } else {\x0d\n    this.allowHalfOpen = true;\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._readableState[kOnConstructed](this);\x0d\n      this._writableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Duplex.prototype\x2C {\x0d\n  writable:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writable') }\x2C\x0d\n  writableHighWaterMark:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableHighWaterMark') }\x2C\x0d\n  writableObjectMode:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableObjectMode') }\x2C\x0d\n  writableBuffer:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableBuffer') }\x2C\x0d\n  writableLength:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableLength') }\x2C\x0d\n  writableFinished:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableFinished') }\x2C\x0d\n  writableCorked:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableCorked') }\x2C\x0d\n  writableEnded:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableEnded') }\x2C\x0d\n  writableNeedDrain:\x0d\n    { __proto__: null\x2C ...ObjectGetOwnPropertyDescriptor(Writable.prototype\x2C 'writableNeedDrain') }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      if (this._readableState === undefined ||\x0d\n        this._writableState === undefined) {\x0d\n        return false;\x0d\n      }\x0d\n      return this._readableState.destroyed && this._writableState.destroyed;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      if (this._readableState && this._writableState) {\x0d\n        this._readableState.destroyed = value;\x0d\n        this._writableState.destroyed = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nDuplex.fromWeb = function(pair\x2C options) {\x0d\n  return lazyWebStreams().newStreamDuplexFromReadableWritablePair(\x0d\n    pair\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nDuplex.toWeb = function(duplex) {\x0d\n  return lazyWebStreams().newReadableWritablePairFromDuplex(duplex);\x0d\n};\x0d\n\x0d\nlet duplexify;\x0d\n\x0d\nDuplex.from = function(body) {\x0d\n  if (!duplexify) {\x0d\n    duplexify = require('internal/streams/duplexify');\x0d\n  }\x0d\n  return duplexify(body\x2C 'body');\x0d\n};\x0d\n
code-source-info,0x2bb6ec9bb5e,135,0,6692,C0O0C4O6692,,
code-creation,JS,10,2815086,0x2bb6ec9c20e,679, node:internal/streams/duplex:1:1,0x2bb6ec9bad8,~
code-source-info,0x2bb6ec9c20e
code-creation,Eval,10,2815377,0x5c3c49766,5, node:internal/streams/legacy:1:1,0x5c3c495e0,~
script-source,136,node:internal/streams/legacy,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayIsArray\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst EE = require('events');\x0d\n\x0d\nfunction Stream(opts) {\x0d\n  EE.call(this\x2C opts);\x0d\n}\x0d\nObjectSetPrototypeOf(Stream.prototype\x2C EE.prototype);\x0d\nObjectSetPrototypeOf(Stream\x2C EE);\x0d\n\x0d\nStream.prototype.pipe = function(dest\x2C options) {\x0d\n  const source = this;\x0d\n\x0d\n  function ondata(chunk) {\x0d\n    if (dest.writable && dest.write(chunk) === false && source.pause) {\x0d\n      source.pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  source.on('data'\x2C ondata);\x0d\n\x0d\n  function ondrain() {\x0d\n    if (source.readable && source.resume) {\x0d\n      source.resume();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  dest.on('drain'\x2C ondrain);\x0d\n\x0d\n  // If the 'end' option is not supplied\x2C dest.end() will be called when\x0d\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\x0d\n  if (!dest._isStdio && (!options || options.end !== false)) {\x0d\n    source.on('end'\x2C onend);\x0d\n    source.on('close'\x2C onclose);\x0d\n  }\x0d\n\x0d\n  let didOnEnd = false;\x0d\n  function onend() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n\x0d\n  function onclose() {\x0d\n    if (didOnEnd) return;\x0d\n    didOnEnd = true;\x0d\n\x0d\n    if (typeof dest.destroy === 'function') dest.destroy();\x0d\n  }\x0d\n\x0d\n  // Don't leave dangling pipes when there are errors.\x0d\n  function onerror(er) {\x0d\n    cleanup();\x0d\n    if (EE.listenerCount(this\x2C 'error') === 0) {\x0d\n      this.emit('error'\x2C er);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  prependListener(source\x2C 'error'\x2C onerror);\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Remove all the event listeners that were added.\x0d\n  function cleanup() {\x0d\n    source.removeListener('data'\x2C ondata);\x0d\n    dest.removeListener('drain'\x2C ondrain);\x0d\n\x0d\n    source.removeListener('end'\x2C onend);\x0d\n    source.removeListener('close'\x2C onclose);\x0d\n\x0d\n    source.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n\x0d\n    source.removeListener('end'\x2C cleanup);\x0d\n    source.removeListener('close'\x2C cleanup);\x0d\n\x0d\n    dest.removeListener('close'\x2C cleanup);\x0d\n  }\x0d\n\x0d\n  source.on('end'\x2C cleanup);\x0d\n  source.on('close'\x2C cleanup);\x0d\n\x0d\n  dest.on('close'\x2C cleanup);\x0d\n  dest.emit('pipe'\x2C source);\x0d\n\x0d\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nStream.prototype.eventNames = function eventNames() {\x0d\n  const names = [];\x0d\n  for (const key of ReflectOwnKeys(this._events)) {\x0d\n    if (typeof this._events[key] === 'function' || (ArrayIsArray(this._events[key]) && this._events[key].length > 0)) {\x0d\n      names.push(key);\x0d\n    }\x0d\n  }\x0d\n  return names;\x0d\n};\x0d\n\x0d\nfunction prependListener(emitter\x2C event\x2C fn) {\x0d\n  // Sadly this is not cacheable as some libraries bundle their own\x0d\n  // event emitter implementation with them.\x0d\n  if (typeof emitter.prependListener === 'function')\x0d\n    return emitter.prependListener(event\x2C fn);\x0d\n\x0d\n  // This is a hack to make sure that our error handler is attached before any\x0d\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\x0d\n  // to continue to work with older versions of Node.js that do not include\x0d\n  // the prependListener() method. The goal is to eventually remove this hack.\x0d\n  if (!emitter._events || !emitter._events[event])\x0d\n    emitter.on(event\x2C fn);\x0d\n  else if (ArrayIsArray(emitter._events[event]))\x0d\n    emitter._events[event].unshift(fn);\x0d\n  else\x0d\n    emitter._events[event] = [fn\x2C emitter._events[event]];\x0d\n}\x0d\n\x0d\nmodule.exports = { Stream\x2C prependListener };\x0d\n
code-source-info,0x5c3c49766,136,0,3376,C0O0C4O3376,,
code-creation,JS,10,2815595,0x5c3c49a56,128, node:internal/streams/legacy:1:1,0x5c3c496e0,~
code-source-info,0x5c3c49a56,136,0,3376,C0O0C25O28C31O45C36O70C42O118C45O118C49O118C51O220C59O234C64O192C69O247C72O247C77O291C86O306C90O2200C99O2221C103O3329C110O3348C116O3356C122O3344C127O3375,,
code-creation,Eval,10,2816936,0x2bb6ec8258e,5, node:internal/streams/readable:1:1,0x2bb6ecb68f8,~
script-source,137,node:internal/streams/readable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  NumberIsInteger\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  SafeSet\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolAsyncDispose\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolSpecies\x2C\x0d\n  TypedArrayPrototypeSet\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Readable;\x0d\nReadable.ReadableState = ReadableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst { Stream\x2C prependListener } = require('internal/streams/legacy');\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n  kOnConstructed\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst {\x0d\n  aggregateTwoErrors\x2C\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n    ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n    ERR_OUT_OF_RANGE\x2C\x0d\n    ERR_STREAM_PUSH_AFTER_EOF\x2C\x0d\n    ERR_STREAM_UNSHIFT_AFTER_END_EVENT\x2C\x0d\n    ERR_UNKNOWN_ENCODING\x2C\x0d\n  }\x2C\x0d\n  AbortError\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateObject } = require('internal/validators');\x0d\n\x0d\nconst FastBuffer = Buffer[SymbolSpecies];\x0d\n\x0d\nconst { StringDecoder } = require('string_decoder');\x0d\nconst from = require('internal/streams/from');\x0d\n\x0d\nObjectSetPrototypeOf(Readable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Readable\x2C Stream);\x0d\nconst nop = () => {};\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nconst kErroredValue = Symbol('kErroredValue');\x0d\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\x0d\nconst kDecoderValue = Symbol('kDecoderValue');\x0d\nconst kEncodingValue = Symbol('kEncodingValue');\x0d\n\x0d\nconst kEnded = 1 << 9;\x0d\nconst kEndEmitted = 1 << 10;\x0d\nconst kReading = 1 << 11;\x0d\nconst kSync = 1 << 12;\x0d\nconst kNeedReadable = 1 << 13;\x0d\nconst kEmittedReadable = 1 << 14;\x0d\nconst kReadableListening = 1 << 15;\x0d\nconst kResumeScheduled = 1 << 16;\x0d\nconst kMultiAwaitDrain = 1 << 17;\x0d\nconst kReadingMore = 1 << 18;\x0d\nconst kDataEmitted = 1 << 19;\x0d\nconst kDefaultUTF8Encoding = 1 << 20;\x0d\nconst kDecoder = 1 << 21;\x0d\nconst kEncoding = 1 << 22;\x0d\nconst kHasFlowing = 1 << 23;\x0d\nconst kFlowing = 1 << 24;\x0d\nconst kHasPaused = 1 << 25;\x0d\nconst kPaused = 1 << 26;\x0d\nconst kDataListening = 1 << 27;\x0d\n\x0d\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\x0d\nfunction makeBitMapDescriptor(bit) {\x0d\n  return {\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & bit) !== 0; }\x2C\x0d\n    set(value) {\x0d\n      if (value) this[kState] |= bit;\x0d\n      else this[kState] &= ~bit;\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\x0d\n  ended: makeBitMapDescriptor(kEnded)\x2C\x0d\n  endEmitted: makeBitMapDescriptor(kEndEmitted)\x2C\x0d\n  reading: makeBitMapDescriptor(kReading)\x2C\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\x0d\n  // A flag to be able to tell if the event 'readable'/'data' is emitted\x0d\n  // immediately\x2C or on a later tick.  We set this to true at first\x2C because\x0d\n  // any actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first read call.\x0d\n  sync: makeBitMapDescriptor(kSync)\x2C\x0d\n  // Whenever we return null\x2C then we set a flag to say\x0d\n  // that we're awaiting a 'readable' event emission.\x0d\n  needReadable: makeBitMapDescriptor(kNeedReadable)\x2C\x0d\n  emittedReadable: makeBitMapDescriptor(kEmittedReadable)\x2C\x0d\n  readableListening: makeBitMapDescriptor(kReadableListening)\x2C\x0d\n  resumeScheduled: makeBitMapDescriptor(kResumeScheduled)\x2C\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\x0d\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\x0d\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\x0d\n  // Has it been destroyed.\x0d\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  closed: makeBitMapDescriptor(kClosed)\x2C\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\x0d\n  multiAwaitDrain: makeBitMapDescriptor(kMultiAwaitDrain)\x2C\x0d\n  // If true\x2C a maybeReadMore has been scheduled.\x0d\n  readingMore: makeBitMapDescriptor(kReadingMore)\x2C\x0d\n  dataEmitted: makeBitMapDescriptor(kDataEmitted)\x2C\x0d\n\x0d\n  // Indicates whether the stream has errored. When true no further\x0d\n  // _read calls\x2C 'data' or 'readable' events should occur. This is needed\x0d\n  // since when autoDestroy is disabled we need a way to tell whether the\x0d\n  // stream has failed.\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kErroredValue] = value;\x0d\n        this[kState] |= kErrored;\x0d\n      } else {\x0d\n        this[kState] &= ~kErrored;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  defaultEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\x0d\n    set(value) {\x0d\n      if (value === 'utf8' || value === 'utf-8') {\x0d\n        this[kState] |= kDefaultUTF8Encoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kDefaultUTF8Encoding;\x0d\n        this[kDefaultEncodingValue] = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  decoder: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kDecoder) !== 0 ? this[kDecoderValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kDecoderValue] = value;\x0d\n        this[kState] |= kDecoder;\x0d\n      } else {\x0d\n        this[kState] &= ~kDecoder;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  encoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kEncoding) !== 0 ? this[kEncodingValue] : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kEncodingValue] = value;\x0d\n        this[kState] |= kEncoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kEncoding;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  flowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kHasFlowing) !== 0 ? (this[kState] & kFlowing) !== 0 : null;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      if (value == null) {\x0d\n        this[kState] &= ~(kHasFlowing | kFlowing);\x0d\n      } else if (value) {\x0d\n        this[kState] |= (kHasFlowing | kFlowing);\x0d\n      } else {\x0d\n        this[kState] |= kHasFlowing;\x0d\n        this[kState] &= ~kFlowing;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n\x0d\nfunction ReadableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Bit map field to store ReadableState more effciently with 1 bit per field\x0d\n  // instead of a V8 slot per field.\x0d\n  this[kState] = kEmitClose | kAutoDestroy | kConstructed | kSync;\x0d\n\x0d\n  // Object stream flag. Used to make read(n) ignore n and to\x0d\n  // make all the buffer merging and length checks go away.\x0d\n  if (options && options.objectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  if (isDuplex && options && options.readableObjectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  // The point at which it stops calling _read() to fill the buffer\x0d\n  // Note: 0 is a valid value\x2C means "don't call _read preemptively ever"\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  this.buffer = [];\x0d\n  this.bufferIndex = 0;\x0d\n  this.length = 0;\x0d\n  this.pipes = [];\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  const defaultEncoding = options?.defaultEncoding;\x0d\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\x0d\n    this[kState] |= kDefaultUTF8Encoding;\x0d\n  } else if (Buffer.isEncoding(defaultEncoding)) {\x0d\n    this.defaultEncoding = defaultEncoding;\x0d\n  } else {\x0d\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\x0d\n  }\x0d\n\x0d\n  // Ref the piped dest which we need a drain event on it\x0d\n  // type: null | Writable | Set<Writable>.\x0d\n  this.awaitDrainWriters = null;\x0d\n\x0d\n  if (options && options.encoding) {\x0d\n    this.decoder = new StringDecoder(options.encoding);\x0d\n    this.encoding = options.encoding;\x0d\n  }\x0d\n}\x0d\n\x0d\nReadableState.prototype[kOnConstructed] = function onConstructed(stream) {\x0d\n  if ((this[kState] & kNeedReadable) !== 0) {\x0d\n    maybeReadMore(stream\x2C this);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction Readable(options) {\x0d\n  if (!(this instanceof Readable))\x0d\n    return new Readable(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    data: undefined\x2C\x0d\n    end: undefined\x2C\x0d\n    readable: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // pause: undefined\x2C\x0d\n    // resume: undefined\x2C\x0d\n    // pipe: undefined\x2C\x0d\n    // unpipe: undefined\x2C\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._readableState = new ReadableState(options\x2C this\x2C false);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.read === 'function')\x0d\n      this._read = options.read;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._readableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.prototype.destroy = destroyImpl.destroy;\x0d\nReadable.prototype._undestroy = destroyImpl.undestroy;\x0d\nReadable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncDispose] = function() {\x0d\n  let error;\x0d\n  if (!this.destroyed) {\x0d\n    error = this.readableEnded ? null : new AbortError();\x0d\n    this.destroy(error);\x0d\n  }\x0d\n  return new Promise((resolve\x2C reject) => eos(this\x2C (err) => (err && err !== error ? reject(err) : resolve(null))));\x0d\n};\x0d\n\x0d\n// Manually shove something into the read() buffer.\x0d\n// This returns true if the highWaterMark has not been hit yet\x2C\x0d\n// similar to how Writable.write() returns true if you should\x0d\n// write() some more.\x0d\nReadable.prototype.push = function(chunk\x2C encoding) {\x0d\n  debug('push'\x2C chunk);\x0d\n\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kObjectMode) === 0 ?\x0d\n    readableAddChunkPushByteMode(this\x2C state\x2C chunk\x2C encoding) :\x0d\n    readableAddChunkPushObjectMode(this\x2C state\x2C chunk\x2C encoding);\x0d\n};\x0d\n\x0d\n// Unshift should *always* be something directly out of read().\x0d\nReadable.prototype.unshift = function(chunk\x2C encoding) {\x0d\n  debug('unshift'\x2C chunk);\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kObjectMode) === 0 ?\x0d\n    readableAddChunkUnshiftByteMode(this\x2C state\x2C chunk\x2C encoding) :\x0d\n    readableAddChunkUnshiftObjectMode(this\x2C state\x2C chunk);\x0d\n};\x0d\n\x0d\n\x0d\nfunction readableAddChunkUnshiftByteMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (typeof chunk === 'string') {\x0d\n    encoding = encoding || state.defaultEncoding;\x0d\n    if (state.encoding !== encoding) {\x0d\n      if (state.encoding) {\x0d\n        // When unshifting\x2C if state.encoding is set\x2C we have to save\x0d\n        // the string in the BufferList with the state encoding.\x0d\n        chunk = Buffer.from(chunk\x2C encoding).toString(state.encoding);\x0d\n      } else {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n      }\x0d\n    }\x0d\n  } else if (Stream._isUint8Array(chunk)) {\x0d\n    chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n  } else if (chunk !== undefined && !(chunk instanceof Buffer)) {\x0d\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\x0d\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk));\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n\x0d\n  if (!(chunk && chunk.length > 0)) {\x0d\n    return canPushMore(state);\x0d\n  }\x0d\n\x0d\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkUnshiftObjectMode(stream\x2C state\x2C chunk) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  return readableAddChunkUnshiftValue(stream\x2C state\x2C chunk);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkUnshiftValue(stream\x2C state\x2C chunk) {\x0d\n  if ((state[kState] & kEndEmitted) !== 0)\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_UNSHIFT_AFTER_END_EVENT());\x0d\n  else if ((state[kState] & (kDestroyed | kErrored)) !== 0)\x0d\n    return false;\x0d\n  else\x0d\n    addChunk(stream\x2C state\x2C chunk\x2C true);\x0d\n\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkPushByteMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (typeof chunk === 'string') {\x0d\n    encoding = encoding || state.defaultEncoding;\x0d\n    if (state.encoding !== encoding) {\x0d\n      chunk = Buffer.from(chunk\x2C encoding);\x0d\n      encoding = '';\x0d\n    }\x0d\n  } else if (chunk instanceof Buffer) {\x0d\n    encoding = '';\x0d\n  } else if (Stream._isUint8Array(chunk)) {\x0d\n    chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n    encoding = '';\x0d\n  } else if (chunk !== undefined) {\x0d\n    errorOrDestroy(stream\x2C new ERR_INVALID_ARG_TYPE(\x0d\n      'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk));\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if (!chunk || chunk.length <= 0) {\x0d\n    state[kState] &= ~kReading;\x0d\n    maybeReadMore(stream\x2C state);\x0d\n\x0d\n    return canPushMore(state);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnded) !== 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kReading;\x0d\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\x0d\n    chunk = state[kDecoderValue].write(chunk);\x0d\n    if (chunk.length === 0) {\x0d\n      maybeReadMore(stream\x2C state);\x0d\n      return canPushMore(state);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction readableAddChunkPushObjectMode(stream\x2C state\x2C chunk\x2C encoding) {\x0d\n  if (chunk === null) {\x0d\n    state[kState] &= ~kReading;\x0d\n    onEofChunk(stream\x2C state);\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnded) !== 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_STREAM_PUSH_AFTER_EOF());\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) !== 0) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kReading;\x0d\n\x0d\n  if ((state[kState] & kDecoder) !== 0 && !encoding) {\x0d\n    chunk = state[kDecoderValue].write(chunk);\x0d\n  }\x0d\n\x0d\n  addChunk(stream\x2C state\x2C chunk\x2C false);\x0d\n  return canPushMore(state);\x0d\n}\x0d\n\x0d\nfunction canPushMore(state) {\x0d\n  // We can push more data if we are below the highWaterMark.\x0d\n  // Also\x2C if we have no data yet\x2C we can stand some more bytes.\x0d\n  // This is to work around cases where hwm=0\x2C such as the repl.\x0d\n  return (state[kState] & kEnded) === 0 &&\x0d\n    (state.length < state.highWaterMark || state.length === 0);\x0d\n}\x0d\n\x0d\nfunction addChunk(stream\x2C state\x2C chunk\x2C addToFront) {\x0d\n  if ((state[kState] & (kFlowing | kSync | kDataListening)) === (kFlowing | kDataListening) && state.length === 0) {\x0d\n    // Use the guard to avoid creating `Set()` repeatedly\x0d\n    // when we have multiple pipes.\x0d\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n\x0d\n    state[kState] |= kDataEmitted;\x0d\n    stream.emit('data'\x2C chunk);\x0d\n  } else {\x0d\n    // Update the buffer info.\x0d\n    state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n    if (addToFront) {\x0d\n      if (state.bufferIndex > 0) {\x0d\n        state.buffer[--state.bufferIndex] = chunk;\x0d\n      } else {\x0d\n        state.buffer.unshift(chunk); // Slow path\x0d\n      }\x0d\n    } else {\x0d\n      state.buffer.push(chunk);\x0d\n    }\x0d\n\x0d\n    if ((state[kState] & kNeedReadable) !== 0)\x0d\n      emitReadable(stream);\x0d\n  }\x0d\n  maybeReadMore(stream\x2C state);\x0d\n}\x0d\n\x0d\nReadable.prototype.isPaused = function() {\x0d\n  const state = this._readableState;\x0d\n  return (state[kState] & kPaused) !== 0 || (state[kState] & (kHasFlowing | kFlowing)) === kHasFlowing;\x0d\n};\x0d\n\x0d\n// Backwards compatibility.\x0d\nReadable.prototype.setEncoding = function(enc) {\x0d\n  const state = this._readableState;\x0d\n\x0d\n  const decoder = new StringDecoder(enc);\x0d\n  state.decoder = decoder;\x0d\n  // If setEncoding(null)\x2C decoder.encoding equals utf8.\x0d\n  state.encoding = state.decoder.encoding;\x0d\n\x0d\n  // Iterate over current buffer to convert already stored Buffers:\x0d\n  let content = '';\x0d\n  for (const data of state.buffer.slice(state.bufferIndex)) {\x0d\n    content += decoder.write(data);\x0d\n  }\x0d\n  state.buffer.length = 0;\x0d\n  state.bufferIndex = 0;\x0d\n\x0d\n  if (content !== '')\x0d\n    state.buffer.push(content);\x0d\n  state.length = content.length;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Don't raise the hwm > 1GB.\x0d\nconst MAX_HWM = 0x40000000;\x0d\nfunction computeNewHighWaterMark(n) {\x0d\n  if (n > MAX_HWM) {\x0d\n    throw new ERR_OUT_OF_RANGE('size'\x2C '<= 1GiB'\x2C n);\x0d\n  } else {\x0d\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\x0d\n    // tiny amounts.\x0d\n    n--;\x0d\n    n |= n >>> 1;\x0d\n    n |= n >>> 2;\x0d\n    n |= n >>> 4;\x0d\n    n |= n >>> 8;\x0d\n    n |= n >>> 16;\x0d\n    n++;\x0d\n  }\x0d\n  return n;\x0d\n}\x0d\n\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction howMuchToRead(n\x2C state) {\x0d\n  if (n <= 0 || (state.length === 0 && (state[kState] & kEnded) !== 0))\x0d\n    return 0;\x0d\n  if ((state[kState] & kObjectMode) !== 0)\x0d\n    return 1;\x0d\n  if (NumberIsNaN(n)) {\x0d\n    // Only flow one buffer at a time.\x0d\n    if ((state[kState] & kFlowing) !== 0 && state.length)\x0d\n      return state.buffer[state.bufferIndex].length;\x0d\n    return state.length;\x0d\n  }\x0d\n  if (n <= state.length)\x0d\n    return n;\x0d\n  return (state[kState] & kEnded) !== 0 ? state.length : 0;\x0d\n}\x0d\n\x0d\n// You can override either this method\x2C or the async _read(n) below.\x0d\nReadable.prototype.read = function(n) {\x0d\n  debug('read'\x2C n);\x0d\n  // Same as parseInt(undefined\x2C 10)\x2C however V8 7.3 performance regressed\x0d\n  // in this scenario\x2C so we are doing it manually.\x0d\n  if (n === undefined) {\x0d\n    n = NaN;\x0d\n  } else if (!NumberIsInteger(n)) {\x0d\n    n = NumberParseInt(n\x2C 10);\x0d\n  }\x0d\n  const state = this._readableState;\x0d\n  const nOrig = n;\x0d\n\x0d\n  // If we're asking for more than the current hwm\x2C then raise the hwm.\x0d\n  if (n > state.highWaterMark)\x0d\n    state.highWaterMark = computeNewHighWaterMark(n);\x0d\n\x0d\n  if (n !== 0)\x0d\n    state[kState] &= ~kEmittedReadable;\x0d\n\x0d\n  // If we're doing read(0) to trigger a readable event\x2C but we\x0d\n  // already have a bunch of data in the buffer\x2C then just trigger\x0d\n  // the 'readable' event and move on.\x0d\n  if (n === 0 &&\x0d\n      (state[kState] & kNeedReadable) !== 0 &&\x0d\n      ((state.highWaterMark !== 0 ?\x0d\n        state.length >= state.highWaterMark :\x0d\n        state.length > 0) ||\x0d\n       (state[kState] & kEnded) !== 0)) {\x0d\n    debug('read: emitReadable');\x0d\n    if (state.length === 0 && (state[kState] & kEnded) !== 0)\x0d\n      endReadable(this);\x0d\n    else\x0d\n      emitReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  n = howMuchToRead(n\x2C state);\x0d\n\x0d\n  // If we've ended\x2C and we're now clear\x2C then finish it up.\x0d\n  if (n === 0 && (state[kState] & kEnded) !== 0) {\x0d\n    if (state.length === 0)\x0d\n      endReadable(this);\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  // All the actual chunk generation logic needs to be\x0d\n  // *below* the call to _read.  The reason is that in certain\x0d\n  // synthetic stream cases\x2C such as passthrough streams\x2C _read\x0d\n  // may be a completely synchronous operation which may change\x0d\n  // the state of the read buffer\x2C providing enough data when\x0d\n  // before there was *not* enough.\x0d\n  //\x0d\n  // So\x2C the steps are:\x0d\n  // 1. Figure out what the state of things will be after we do\x0d\n  // a read from the buffer.\x0d\n  //\x0d\n  // 2. If that resulting state will trigger a _read\x2C then call _read.\x0d\n  // Note that this may be asynchronous\x2C or synchronous.  Yes\x2C it is\x0d\n  // deeply ugly to write APIs this way\x2C but that still doesn't mean\x0d\n  // that the Readable class should behave improperly\x2C as streams are\x0d\n  // designed to be sync/async agnostic.\x0d\n  // Take note if the _read call is sync or async (ie\x2C if the read call\x0d\n  // has returned yet)\x2C so that we know whether or not it's safe to emit\x0d\n  // 'readable' etc.\x0d\n  //\x0d\n  // 3. Actually pull the requested chunks out of the buffer and return.\x0d\n\x0d\n  // if we need a readable event\x2C then we need to do some reading.\x0d\n  let doRead = (state[kState] & kNeedReadable) !== 0;\x0d\n  debug('need readable'\x2C doRead);\x0d\n\x0d\n  // If we currently have less than the highWaterMark\x2C then also read some.\x0d\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\x0d\n    doRead = true;\x0d\n    debug('length less than watermark'\x2C doRead);\x0d\n  }\x0d\n\x0d\n  // However\x2C if we've ended\x2C then there's no point\x2C if we're already\x0d\n  // reading\x2C then it's unnecessary\x2C if we're constructing we have to wait\x2C\x0d\n  // and if we're destroyed or errored\x2C then it's not allowed\x2C\x0d\n  if ((state[kState] & (kReading | kEnded | kDestroyed | kErrored | kConstructed)) !== kConstructed) {\x0d\n    doRead = false;\x0d\n    debug('reading\x2C ended or constructing'\x2C doRead);\x0d\n  } else if (doRead) {\x0d\n    debug('do read');\x0d\n    state[kState] |= kReading | kSync;\x0d\n    // If the length is currently zero\x2C then we *need* a readable event.\x0d\n    if (state.length === 0)\x0d\n      state[kState] |= kNeedReadable;\x0d\n\x0d\n    // Call internal read method\x0d\n    try {\x0d\n      this._read(state.highWaterMark);\x0d\n    } catch (err) {\x0d\n      errorOrDestroy(this\x2C err);\x0d\n    }\x0d\n    state[kState] &= ~kSync;\x0d\n\x0d\n    // If _read pushed data synchronously\x2C then `reading` will be false\x2C\x0d\n    // and we need to re-evaluate how much data we can return to the user.\x0d\n    if ((state[kState] & kReading) === 0)\x0d\n      n = howMuchToRead(nOrig\x2C state);\x0d\n  }\x0d\n\x0d\n  let ret;\x0d\n  if (n > 0)\x0d\n    ret = fromList(n\x2C state);\x0d\n  else\x0d\n    ret = null;\x0d\n\x0d\n  if (ret === null) {\x0d\n    state[kState] |= state.length <= state.highWaterMark ? kNeedReadable : 0;\x0d\n    n = 0;\x0d\n  } else {\x0d\n    state.length -= n;\x0d\n    if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      state.awaitDrainWriters.clear();\x0d\n    } else {\x0d\n      state.awaitDrainWriters = null;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (state.length === 0) {\x0d\n    // If we have nothing in the buffer\x2C then we want to know\x0d\n    // as soon as we *do* get something into the buffer.\x0d\n    if ((state[kState] & kEnded) === 0)\x0d\n      state[kState] |= kNeedReadable;\x0d\n\x0d\n    // If we tried to read() past the EOF\x2C then emit end on the next tick.\x0d\n    if (nOrig !== n && (state[kState] & kEnded) !== 0)\x0d\n      endReadable(this);\x0d\n  }\x0d\n\x0d\n  if (ret !== null && (state[kState] & (kErrorEmitted | kCloseEmitted)) === 0) {\x0d\n    state[kState] |= kDataEmitted;\x0d\n    this.emit('data'\x2C ret);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n};\x0d\n\x0d\nfunction onEofChunk(stream\x2C state) {\x0d\n  debug('onEofChunk');\x0d\n  if ((state[kState] & kEnded) !== 0) return;\x0d\n  const decoder = (state[kState] & kDecoder) !== 0 ? state[kDecoderValue] : null;\x0d\n  if (decoder) {\x0d\n    const chunk = decoder.end();\x0d\n    if (chunk && chunk.length) {\x0d\n      state.buffer.push(chunk);\x0d\n      state.length += (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n    }\x0d\n  }\x0d\n  state[kState] |= kEnded;\x0d\n\x0d\n  if ((state[kState] & kSync) !== 0) {\x0d\n    // If we are sync\x2C wait until next tick to emit the data.\x0d\n    // Otherwise we risk emitting data in the flow()\x0d\n    // the readable code triggers during a read() call.\x0d\n    emitReadable(stream);\x0d\n  } else {\x0d\n    // Emit 'readable' now to make sure it gets picked up.\x0d\n    state[kState] &= ~kNeedReadable;\x0d\n    state[kState] |= kEmittedReadable;\x0d\n    // We have to emit readable now that we are EOF. Modules\x0d\n    // in the ecosystem (e.g. dicer) rely on this event being sync.\x0d\n    emitReadable_(stream);\x0d\n  }\x0d\n}\x0d\n\x0d\n// Don't emit readable right away in sync mode\x2C because this can trigger\x0d\n// another read() call => stack overflow.  This way\x2C it might trigger\x0d\n// a nextTick recursion warning\x2C but that's not so bad.\x0d\nfunction emitReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable');\x0d\n  state[kState] &= ~kNeedReadable;\x0d\n  if ((state[kState] & kEmittedReadable) === 0) {\x0d\n    debug('emitReadable'\x2C (state[kState] & kFlowing) !== 0);\x0d\n    state[kState] |= kEmittedReadable;\x0d\n    process.nextTick(emitReadable_\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitReadable_(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('emitReadable_');\x0d\n  if ((state[kState] & (kDestroyed | kErrored)) === 0 && (state.length || (state[kState] & kEnded) !== 0)) {\x0d\n    stream.emit('readable');\x0d\n    state[kState] &= ~kEmittedReadable;\x0d\n  }\x0d\n\x0d\n  // The stream needs another readable event if:\x0d\n  // 1. It is not flowing\x2C as the flow mechanism will take\x0d\n  //    care of it.\x0d\n  // 2. It is not ended.\x0d\n  // 3. It is below the highWaterMark\x2C so we can schedule\x0d\n  //    another readable later.\x0d\n  state[kState] |=\x0d\n    (state[kState] & (kFlowing | kEnded)) === 0 &&\x0d\n    state.length <= state.highWaterMark ? kNeedReadable : 0;\x0d\n  flow(stream);\x0d\n}\x0d\n\x0d\n\x0d\n// At this point\x2C the user has presumably seen the 'readable' event\x2C\x0d\n// and called read() to consume some data.  that may have triggered\x0d\n// in turn another _read(n) call\x2C in which case reading = true if\x0d\n// it's in progress.\x0d\n// However\x2C if we're not ended\x2C or reading\x2C and the length < hwm\x2C\x0d\n// then go ahead and try to read some more preemptively.\x0d\nfunction maybeReadMore(stream\x2C state) {\x0d\n  if ((state[kState] & (kReadingMore | kConstructed)) === kConstructed) {\x0d\n    state[kState] |= kReadingMore;\x0d\n    process.nextTick(maybeReadMore_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction maybeReadMore_(stream\x2C state) {\x0d\n  // Attempt to read more data if we should.\x0d\n  //\x0d\n  // The conditions for reading more data are (one of):\x0d\n  // - Not enough data buffered (state.length < state.highWaterMark). The loop\x0d\n  //   is responsible for filling the buffer with enough data if such data\x0d\n  //   is available. If highWaterMark is 0 and we are not in the flowing mode\x0d\n  //   we should _not_ attempt to buffer any extra data. We'll get more data\x0d\n  //   when the stream consumer calls read() instead.\x0d\n  // - No data in the buffer\x2C and the stream is in flowing mode. In this mode\x0d\n  //   the loop below is responsible for ensuring read() is called. Failing to\x0d\n  //   call read here would abort the flow and there's no other mechanism for\x0d\n  //   continuing the flow if the stream consumer has just subscribed to the\x0d\n  //   'data' event.\x0d\n  //\x0d\n  // In addition to the above conditions to keep reading data\x2C the following\x0d\n  // conditions prevent the data from being read:\x0d\n  // - The stream has ended (state.ended).\x0d\n  // - There is already a pending 'read' operation (state.reading). This is a\x0d\n  //   case where the stream has called the implementation defined _read()\x0d\n  //   method\x2C but they are processing the call asynchronously and have _not_\x0d\n  //   called push() with new data. In this case we skip performing more\x0d\n  //   read()s. The execution ends in this method again after the _read() ends\x0d\n  //   up calling push() with more data.\x0d\n  while ((state[kState] & (kReading | kEnded)) === 0 &&\x0d\n         (state.length < state.highWaterMark ||\x0d\n          ((state[kState] & kFlowing) !== 0 && state.length === 0))) {\x0d\n    const len = state.length;\x0d\n    debug('maybeReadMore read 0');\x0d\n    stream.read(0);\x0d\n    if (len === state.length)\x0d\n      // Didn't get any data\x2C stop spinning.\x0d\n      break;\x0d\n  }\x0d\n  state[kState] &= ~kReadingMore;\x0d\n}\x0d\n\x0d\n// Abstract method.  to be overridden in specific implementation classes.\x0d\n// call cb(er\x2C data) where data is <= n in length.\x0d\n// for virtual (non-string\x2C non-buffer) streams\x2C "length" is somewhat\x0d\n// arbitrary\x2C and perhaps not very meaningful.\x0d\nReadable.prototype._read = function(n) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_read()');\x0d\n};\x0d\n\x0d\nReadable.prototype.pipe = function(dest\x2C pipeOpts) {\x0d\n  const src = this;\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (state.pipes.length === 1) {\x0d\n    if ((state[kState] & kMultiAwaitDrain) === 0) {\x0d\n      state[kState] |= kMultiAwaitDrain;\x0d\n      state.awaitDrainWriters = new SafeSet(\x0d\n        state.awaitDrainWriters ? [state.awaitDrainWriters] : []\x2C\x0d\n      );\x0d\n    }\x0d\n  }\x0d\n\x0d\n  state.pipes.push(dest);\x0d\n  debug('pipe count=%d opts=%j'\x2C state.pipes.length\x2C pipeOpts);\x0d\n\x0d\n  const doEnd = (!pipeOpts || pipeOpts.end !== false) &&\x0d\n              dest !== process.stdout &&\x0d\n              dest !== process.stderr;\x0d\n\x0d\n  const endFn = doEnd ? onend : unpipe;\x0d\n  if ((state[kState] & kEndEmitted) !== 0)\x0d\n    process.nextTick(endFn);\x0d\n  else\x0d\n    src.once('end'\x2C endFn);\x0d\n\x0d\n  dest.on('unpipe'\x2C onunpipe);\x0d\n  function onunpipe(readable\x2C unpipeInfo) {\x0d\n    debug('onunpipe');\x0d\n    if (readable === src) {\x0d\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\x0d\n        unpipeInfo.hasUnpiped = true;\x0d\n        cleanup();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  function onend() {\x0d\n    debug('onend');\x0d\n    dest.end();\x0d\n  }\x0d\n\x0d\n  let ondrain;\x0d\n\x0d\n  let cleanedUp = false;\x0d\n  function cleanup() {\x0d\n    debug('cleanup');\x0d\n    // Cleanup event handlers once the pipe is broken.\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    if (ondrain) {\x0d\n      dest.removeListener('drain'\x2C ondrain);\x0d\n    }\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    dest.removeListener('unpipe'\x2C onunpipe);\x0d\n    src.removeListener('end'\x2C onend);\x0d\n    src.removeListener('end'\x2C unpipe);\x0d\n    src.removeListener('data'\x2C ondata);\x0d\n\x0d\n    cleanedUp = true;\x0d\n\x0d\n    // If the reader is waiting for a drain event from this\x0d\n    // specific writer\x2C then it would cause it to never start\x0d\n    // flowing again.\x0d\n    // So\x2C if this is awaiting a drain\x2C then we just call it now.\x0d\n    // If we don't know\x2C then assume that we are waiting for one.\x0d\n    if (ondrain && state.awaitDrainWriters &&\x0d\n        (!dest._writableState || dest._writableState.needDrain))\x0d\n      ondrain();\x0d\n  }\x0d\n\x0d\n  function pause() {\x0d\n    // If the user unpiped during `dest.write()`\x2C it is possible\x0d\n    // to get stuck in a permanently paused state if that write\x0d\n    // also returned false.\x0d\n    // => Check whether `dest` is still a piping destination.\x0d\n    if (!cleanedUp) {\x0d\n      if (state.pipes.length === 1 && state.pipes[0] === dest) {\x0d\n        debug('false write response\x2C pause'\x2C 0);\x0d\n        state.awaitDrainWriters = dest;\x0d\n        state[kState] &= ~kMultiAwaitDrain;\x0d\n      } else if (state.pipes.length > 1 && state.pipes.includes(dest)) {\x0d\n        debug('false write response\x2C pause'\x2C state.awaitDrainWriters.size);\x0d\n        state.awaitDrainWriters.add(dest);\x0d\n      }\x0d\n      src.pause();\x0d\n    }\x0d\n    if (!ondrain) {\x0d\n      // When the dest drains\x2C it reduces the awaitDrain counter\x0d\n      // on the source.  This would be more elegant with a .once()\x0d\n      // handler in flow()\x2C but adding and removing repeatedly is\x0d\n      // too slow.\x0d\n      ondrain = pipeOnDrain(src\x2C dest);\x0d\n      dest.on('drain'\x2C ondrain);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  src.on('data'\x2C ondata);\x0d\n  function ondata(chunk) {\x0d\n    debug('ondata');\x0d\n    const ret = dest.write(chunk);\x0d\n    debug('dest.write'\x2C ret);\x0d\n    if (ret === false) {\x0d\n      pause();\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // If the dest has an error\x2C then stop piping into it.\x0d\n  // However\x2C don't suppress the throwing behavior for this.\x0d\n  function onerror(er) {\x0d\n    debug('onerror'\x2C er);\x0d\n    unpipe();\x0d\n    dest.removeListener('error'\x2C onerror);\x0d\n    if (dest.listenerCount('error') === 0) {\x0d\n      const s = dest._writableState || dest._readableState;\x0d\n      if (s && !s.errorEmitted) {\x0d\n        // User incorrectly emitted 'error' directly on the stream.\x0d\n        errorOrDestroy(dest\x2C er);\x0d\n      } else {\x0d\n        dest.emit('error'\x2C er);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Make sure our error handler is attached before userland ones.\x0d\n  prependListener(dest\x2C 'error'\x2C onerror);\x0d\n\x0d\n  // Both close and finish should trigger unpipe\x2C but only once.\x0d\n  function onclose() {\x0d\n    dest.removeListener('finish'\x2C onfinish);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('close'\x2C onclose);\x0d\n  function onfinish() {\x0d\n    debug('onfinish');\x0d\n    dest.removeListener('close'\x2C onclose);\x0d\n    unpipe();\x0d\n  }\x0d\n  dest.once('finish'\x2C onfinish);\x0d\n\x0d\n  function unpipe() {\x0d\n    debug('unpipe');\x0d\n    src.unpipe(dest);\x0d\n  }\x0d\n\x0d\n  // Tell the dest that it's being piped to.\x0d\n  dest.emit('pipe'\x2C src);\x0d\n\x0d\n  // Start the flow if it hasn't been started already.\x0d\n\x0d\n  if (dest.writableNeedDrain === true) {\x0d\n    pause();\x0d\n  } else if ((state[kState] & kFlowing) === 0) {\x0d\n    debug('pipe resume');\x0d\n    src.resume();\x0d\n  }\x0d\n\x0d\n  return dest;\x0d\n};\x0d\n\x0d\nfunction pipeOnDrain(src\x2C dest) {\x0d\n  return function pipeOnDrainFunctionResult() {\x0d\n    const state = src._readableState;\x0d\n\x0d\n    // `ondrain` will call directly\x2C\x0d\n    // `this` maybe not a reference to dest\x2C\x0d\n    // so we use the real dest here.\x0d\n    if (state.awaitDrainWriters === dest) {\x0d\n      debug('pipeOnDrain'\x2C 1);\x0d\n      state.awaitDrainWriters = null;\x0d\n    } else if ((state[kState] & kMultiAwaitDrain) !== 0) {\x0d\n      debug('pipeOnDrain'\x2C state.awaitDrainWriters.size);\x0d\n      state.awaitDrainWriters.delete(dest);\x0d\n    }\x0d\n\x0d\n    if ((!state.awaitDrainWriters || state.awaitDrainWriters.size === 0) &&\x0d\n      (state[kState] & kDataListening) !== 0) {\x0d\n      src.resume();\x0d\n    }\x0d\n  };\x0d\n}\x0d\n\x0d\n\x0d\nReadable.prototype.unpipe = function(dest) {\x0d\n  const state = this._readableState;\x0d\n  const unpipeInfo = { hasUnpiped: false };\x0d\n\x0d\n  // If we're not piping anywhere\x2C then do nothing.\x0d\n  if (state.pipes.length === 0)\x0d\n    return this;\x0d\n\x0d\n  if (!dest) {\x0d\n    // remove all.\x0d\n    const dests = state.pipes;\x0d\n    state.pipes = [];\x0d\n    this.pause();\x0d\n\x0d\n    for (let i = 0; i < dests.length; i++)\x0d\n      dests[i].emit('unpipe'\x2C this\x2C { hasUnpiped: false });\x0d\n    return this;\x0d\n  }\x0d\n\x0d\n  // Try to find the right one.\x0d\n  const index = ArrayPrototypeIndexOf(state.pipes\x2C dest);\x0d\n  if (index === -1)\x0d\n    return this;\x0d\n\x0d\n  state.pipes.splice(index\x2C 1);\x0d\n  if (state.pipes.length === 0)\x0d\n    this.pause();\x0d\n\x0d\n  dest.emit('unpipe'\x2C this\x2C unpipeInfo);\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// Set up data events if they are asked for\x0d\n// Ensure readable listeners eventually get something.\x0d\nReadable.prototype.on = function(ev\x2C fn) {\x0d\n  const res = Stream.prototype.on.call(this\x2C ev\x2C fn);\x0d\n  const state = this._readableState;\x0d\n\x0d\n  if (ev === 'data') {\x0d\n    state[kState] |= kDataListening;\x0d\n\x0d\n    // Update readableListening so that resume() may be a no-op\x0d\n    // a few lines down. This is needed to support once('readable').\x0d\n    state[kState] |= this.listenerCount('readable') > 0 ? kReadableListening : 0;\x0d\n\x0d\n    // Try start flowing on next tick if stream isn't explicitly paused.\x0d\n    if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\x0d\n      this.resume();\x0d\n    }\x0d\n  } else if (ev === 'readable') {\x0d\n    if ((state[kState] & (kEndEmitted | kReadableListening)) === 0) {\x0d\n      state[kState] |= kReadableListening | kNeedReadable | kHasFlowing;\x0d\n      state[kState] &= ~(kFlowing | kEmittedReadable);\x0d\n      debug('on readable');\x0d\n      if (state.length) {\x0d\n        emitReadable(this);\x0d\n      } else if ((state[kState] & kReading) === 0) {\x0d\n        process.nextTick(nReadingNextTick\x2C this);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.addListener = Readable.prototype.on;\x0d\n\x0d\nReadable.prototype.removeListener = function(ev\x2C fn) {\x0d\n  const state = this._readableState;\x0d\n\x0d\n  const res = Stream.prototype.removeListener.call(this\x2C\x0d\n                                                   ev\x2C fn);\x0d\n\x0d\n  if (ev === 'readable') {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  } else if (ev === 'data' && this.listenerCount('data') === 0) {\x0d\n    state[kState] &= ~kDataListening;\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\nReadable.prototype.off = Readable.prototype.removeListener;\x0d\n\x0d\nReadable.prototype.removeAllListeners = function(ev) {\x0d\n  const res = Stream.prototype.removeAllListeners.apply(this\x2C\x0d\n                                                        arguments);\x0d\n\x0d\n  if (ev === 'readable' || ev === undefined) {\x0d\n    // We need to check if there is someone still listening to\x0d\n    // readable and reset the state. However this needs to happen\x0d\n    // after readable has been emitted but before I/O (nextTick) to\x0d\n    // support once('readable'\x2C fn) cycles. This means that calling\x0d\n    // resume within the same tick will have no\x0d\n    // effect.\x0d\n    process.nextTick(updateReadableListening\x2C this);\x0d\n  }\x0d\n\x0d\n  return res;\x0d\n};\x0d\n\x0d\nfunction updateReadableListening(self) {\x0d\n  const state = self._readableState;\x0d\n\x0d\n  if (self.listenerCount('readable') > 0) {\x0d\n    state[kState] |= kReadableListening;\x0d\n  } else {\x0d\n    state[kState] &= ~kReadableListening;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & (kHasPaused | kPaused | kResumeScheduled)) === (kHasPaused | kResumeScheduled)) {\x0d\n    // Flowing needs to be set to true now\x2C otherwise\x0d\n    // the upcoming resume will not flow.\x0d\n    state[kState] |= kHasFlowing | kFlowing;\x0d\n\x0d\n    // Crude way to check if we should resume.\x0d\n  } else if ((state[kState] & kDataListening) !== 0) {\x0d\n    self.resume();\x0d\n  } else if ((state[kState] & kReadableListening) === 0) {\x0d\n    state[kState] &= ~(kHasFlowing | kFlowing);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction nReadingNextTick(self) {\x0d\n  debug('readable nexttick read 0');\x0d\n  self.read(0);\x0d\n}\x0d\n\x0d\n// pause() and resume() are remnants of the legacy readable stream API\x0d\n// If the user uses them\x2C then switch into old mode.\x0d\nReadable.prototype.resume = function() {\x0d\n  const state = this._readableState;\x0d\n  if ((state[kState] & kFlowing) === 0) {\x0d\n    debug('resume');\x0d\n    // We flow only if there is no one listening\x0d\n    // for readable\x2C but we still have to call\x0d\n    // resume().\x0d\n    state[kState] |= kHasFlowing;\x0d\n    if ((state[kState] & kReadableListening) === 0) {\x0d\n      state[kState] |= kFlowing;\x0d\n    } else {\x0d\n      state[kState] &= ~kFlowing;\x0d\n    }\x0d\n    resume(this\x2C state);\x0d\n  }\x0d\n  state[kState] |= kHasPaused;\x0d\n  state[kState] &= ~kPaused;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction resume(stream\x2C state) {\x0d\n  if ((state[kState] & kResumeScheduled) === 0) {\x0d\n    state[kState] |= kResumeScheduled;\x0d\n    process.nextTick(resume_\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction resume_(stream\x2C state) {\x0d\n  debug('resume'\x2C (state[kState] & kReading) !== 0);\x0d\n  if ((state[kState] & kReading) === 0) {\x0d\n    stream.read(0);\x0d\n  }\x0d\n\x0d\n  state[kState] &= ~kResumeScheduled;\x0d\n  stream.emit('resume');\x0d\n  flow(stream);\x0d\n  if ((state[kState] & (kFlowing | kReading)) === kFlowing)\x0d\n    stream.read(0);\x0d\n}\x0d\n\x0d\nReadable.prototype.pause = function() {\x0d\n  const state = this._readableState;\x0d\n  debug('call pause');\x0d\n  if ((state[kState] & (kHasFlowing | kFlowing)) !== kHasFlowing) {\x0d\n    debug('pause');\x0d\n    state[kState] |= kHasFlowing;\x0d\n    state[kState] &= ~kFlowing;\x0d\n    this.emit('pause');\x0d\n  }\x0d\n  state[kState] |= kHasPaused | kPaused;\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction flow(stream) {\x0d\n  const state = stream._readableState;\x0d\n  debug('flow');\x0d\n  while ((state[kState] & kFlowing) !== 0 && stream.read() !== null);\x0d\n}\x0d\n\x0d\n// Wrap an old-style stream as the async data source.\x0d\n// This is *not* part of the readable stream interface.\x0d\n// It is an ugly unfortunate mess of history.\x0d\nReadable.prototype.wrap = function(stream) {\x0d\n  let paused = false;\x0d\n\x0d\n  // TODO (ronag): Should this.destroy(err) emit\x0d\n  // 'error' on the wrapped stream? Would require\x0d\n  // a static factory method\x2C e.g. Readable.wrap(stream).\x0d\n\x0d\n  stream.on('data'\x2C (chunk) => {\x0d\n    if (!this.push(chunk) && stream.pause) {\x0d\n      paused = true;\x0d\n      stream.pause();\x0d\n    }\x0d\n  });\x0d\n\x0d\n  stream.on('end'\x2C () => {\x0d\n    this.push(null);\x0d\n  });\x0d\n\x0d\n  stream.on('error'\x2C (err) => {\x0d\n    errorOrDestroy(this\x2C err);\x0d\n  });\x0d\n\x0d\n  stream.on('close'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  stream.on('destroy'\x2C () => {\x0d\n    this.destroy();\x0d\n  });\x0d\n\x0d\n  this._read = () => {\x0d\n    if (paused && stream.resume) {\x0d\n      paused = false;\x0d\n      stream.resume();\x0d\n    }\x0d\n  };\x0d\n\x0d\n  // Proxy all the other methods. Important when wrapping filters and duplexes.\x0d\n  const streamKeys = ObjectKeys(stream);\x0d\n  for (let j = 1; j < streamKeys.length; j++) {\x0d\n    const i = streamKeys[j];\x0d\n    if (this[i] === undefined && typeof stream[i] === 'function') {\x0d\n      this[i] = stream[i].bind(stream);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nReadable.prototype[SymbolAsyncIterator] = function() {\x0d\n  return streamToAsyncIterator(this);\x0d\n};\x0d\n\x0d\nReadable.prototype.iterator = function(options) {\x0d\n  if (options !== undefined) {\x0d\n    validateObject(options\x2C 'options');\x0d\n  }\x0d\n  return streamToAsyncIterator(this\x2C options);\x0d\n};\x0d\n\x0d\nfunction streamToAsyncIterator(stream\x2C options) {\x0d\n  if (typeof stream.read !== 'function') {\x0d\n    stream = Readable.wrap(stream\x2C { objectMode: true });\x0d\n  }\x0d\n\x0d\n  const iter = createAsyncIterator(stream\x2C options);\x0d\n  iter.stream = stream;\x0d\n  return iter;\x0d\n}\x0d\n\x0d\nasync function* createAsyncIterator(stream\x2C options) {\x0d\n  let callback = nop;\x0d\n\x0d\n  function next(resolve) {\x0d\n    if (this === stream) {\x0d\n      callback();\x0d\n      callback = nop;\x0d\n    } else {\x0d\n      callback = resolve;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  stream.on('readable'\x2C next);\x0d\n\x0d\n  let error;\x0d\n  const cleanup = eos(stream\x2C { writable: false }\x2C (err) => {\x0d\n    error = err ? aggregateTwoErrors(error\x2C err) : null;\x0d\n    callback();\x0d\n    callback = nop;\x0d\n  });\x0d\n\x0d\n  try {\x0d\n    while (true) {\x0d\n      const chunk = stream.destroyed ? null : stream.read();\x0d\n      if (chunk !== null) {\x0d\n        yield chunk;\x0d\n      } else if (error) {\x0d\n        throw error;\x0d\n      } else if (error === null) {\x0d\n        return;\x0d\n      } else {\x0d\n        await new Promise(next);\x0d\n      }\x0d\n    }\x0d\n  } catch (err) {\x0d\n    error = aggregateTwoErrors(error\x2C err);\x0d\n    throw error;\x0d\n  } finally {\x0d\n    if (\x0d\n      (error || options?.destroyOnReturn !== false) &&\x0d\n      (error === undefined || stream._readableState.autoDestroy)\x0d\n    ) {\x0d\n      destroyImpl.destroyer(stream\x2C null);\x0d\n    } else {\x0d\n      stream.off('readable'\x2C next);\x0d\n      cleanup();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\n// Making it explicit these properties are not enumerable\x0d\n// because otherwise some prototype manipulation in\x0d\n// userland will fail.\x0d\nObjectDefineProperties(Readable.prototype\x2C {\x0d\n  readable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const r = this._readableState;\x0d\n      // r.readable === false means that this is part of a Duplex stream\x0d\n      // where the readable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable readable side through\x0d\n      // deprecated setter.\x0d\n      return !!r && r.readable !== false && !r.destroyed && !r.errorEmitted &&\x0d\n        !r.endEmitted;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compat.\x0d\n      if (this._readableState) {\x0d\n        this._readableState.readable = !!val;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableDidRead: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.dataEmitted;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return !!(\x0d\n        this._readableState.readable !== false &&\x0d\n        (this._readableState.destroyed || this._readableState.errored) &&\x0d\n        !this._readableState.endEmitted\x0d\n      );\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.highWaterMark;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState && this._readableState.buffer;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableFlowing: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get: function() {\x0d\n      return this._readableState.flowing;\x0d\n    }\x2C\x0d\n    set: function(state) {\x0d\n      if (this._readableState) {\x0d\n        this._readableState.flowing = state;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableLength: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.objectMode : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.encoding : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.errored : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.closed : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.destroyed : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // We ignore the value if the stream\x0d\n      // has not been initialized yet.\x0d\n      if (!this._readableState) {\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      // Backward compatibility\x2C the user is explicitly\x0d\n      // managing destroyed.\x0d\n      this._readableState.destroyed = value;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  readableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      return this._readableState ? this._readableState.endEmitted : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nObjectDefineProperties(ReadableState.prototype\x2C {\x0d\n  // Legacy getter for `pipesCount`.\x0d\n  pipesCount: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this.pipes.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Legacy property for `paused`.\x0d\n  paused: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return (this[kState] & kPaused) !== 0;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[kState] |= kHasPaused;\x0d\n      if (value) {\x0d\n        this[kState] |= kPaused;\x0d\n      } else {\x0d\n        this[kState] &= ~kPaused;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Exposed for testing purposes only.\x0d\nReadable._fromList = fromList;\x0d\n\x0d\n// Pluck off n bytes from an array of buffers.\x0d\n// Length is the combined lengths of all the buffers in the list.\x0d\n// This function is designed to be inlinable\x2C so please take care when making\x0d\n// changes to the function body.\x0d\nfunction fromList(n\x2C state) {\x0d\n  // nothing buffered.\x0d\n  if (state.length === 0)\x0d\n    return null;\x0d\n\x0d\n  let idx = state.bufferIndex;\x0d\n  let ret;\x0d\n\x0d\n  const buf = state.buffer;\x0d\n  const len = buf.length;\x0d\n\x0d\n  if ((state[kState] & kObjectMode) !== 0) {\x0d\n    ret = buf[idx];\x0d\n    buf[idx++] = null;\x0d\n  } else if (!n || n >= state.length) {\x0d\n    // Read it all\x2C truncate the list.\x0d\n    if ((state[kState] & kDecoder) !== 0) {\x0d\n      ret = '';\x0d\n      while (idx < len) {\x0d\n        ret += buf[idx];\x0d\n        buf[idx++] = null;\x0d\n      }\x0d\n    } else if (len - idx === 0) {\x0d\n      ret = Buffer.alloc(0);\x0d\n    } else if (len - idx === 1) {\x0d\n      ret = buf[idx];\x0d\n      buf[idx++] = null;\x0d\n    } else {\x0d\n      ret = Buffer.allocUnsafe(state.length);\x0d\n\x0d\n      let i = 0;\x0d\n      while (idx < len) {\x0d\n        TypedArrayPrototypeSet(ret\x2C buf[idx]\x2C i);\x0d\n        i += buf[idx].length;\x0d\n        buf[idx++] = null;\x0d\n      }\x0d\n    }\x0d\n  } else if (n < buf[idx].length) {\x0d\n    // `slice` is the same for buffers and strings.\x0d\n    ret = buf[idx].slice(0\x2C n);\x0d\n    buf[idx] = buf[idx].slice(n);\x0d\n  } else if (n === buf[idx].length) {\x0d\n    // First chunk is a perfect match.\x0d\n    ret = buf[idx];\x0d\n    buf[idx++] = null;\x0d\n  } else if ((state[kState] & kDecoder) !== 0) {\x0d\n    ret = '';\x0d\n    while (idx < len) {\x0d\n      const str = buf[idx];\x0d\n      if (n > str.length) {\x0d\n        ret += str;\x0d\n        n -= str.length;\x0d\n        buf[idx++] = null;\x0d\n      } else {\x0d\n        if (n === buf.length) {\x0d\n          ret += str;\x0d\n          buf[idx++] = null;\x0d\n        } else {\x0d\n          ret += str.slice(0\x2C n);\x0d\n          buf[idx] = str.slice(n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n  } else {\x0d\n    ret = Buffer.allocUnsafe(n);\x0d\n\x0d\n    const retLen = n;\x0d\n    while (idx < len) {\x0d\n      const data = buf[idx];\x0d\n      if (n > data.length) {\x0d\n        TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\x0d\n        n -= data.length;\x0d\n        buf[idx++] = null;\x0d\n      } else {\x0d\n        if (n === data.length) {\x0d\n          TypedArrayPrototypeSet(ret\x2C data\x2C retLen - n);\x0d\n          buf[idx++] = null;\x0d\n        } else {\x0d\n          TypedArrayPrototypeSet(ret\x2C new FastBuffer(data.buffer\x2C data.byteOffset\x2C n)\x2C retLen - n);\x0d\n          buf[idx] = new FastBuffer(data.buffer\x2C data.byteOffset + n\x2C data.length - n);\x0d\n        }\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (idx === len) {\x0d\n    state.buffer.length = 0;\x0d\n    state.bufferIndex = 0;\x0d\n  } else if (idx > 1024) {\x0d\n    state.buffer.splice(0\x2C idx);\x0d\n    state.bufferIndex = 0;\x0d\n  } else {\x0d\n    state.bufferIndex = idx;\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\nfunction endReadable(stream) {\x0d\n  const state = stream._readableState;\x0d\n\x0d\n  debug('endReadable');\x0d\n  if ((state[kState] & kEndEmitted) === 0) {\x0d\n    state[kState] |= kEnded;\x0d\n    process.nextTick(endReadableNT\x2C state\x2C stream);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endReadableNT(state\x2C stream) {\x0d\n  debug('endReadableNT');\x0d\n\x0d\n  // Check that we didn't get one last unshift.\x0d\n  if ((state[kState] & (kErrored | kCloseEmitted | kEndEmitted)) === 0 && state.length === 0) {\x0d\n    state[kState] |= kEndEmitted;\x0d\n    stream.emit('end');\x0d\n\x0d\n    if (stream.writable && stream.allowHalfOpen === false) {\x0d\n      process.nextTick(endWritableNT\x2C stream);\x0d\n    } else if (state.autoDestroy) {\x0d\n      // In case of duplex streams we need a way to detect\x0d\n      // if the writable side is ready for autoDestroy as well.\x0d\n      const wState = stream._writableState;\x0d\n      const autoDestroy = !wState || (\x0d\n        wState.autoDestroy &&\x0d\n        // We don't expect the writable to ever 'finish'\x0d\n        // if writable is explicitly set to false.\x0d\n        (wState.finished || wState.writable === false)\x0d\n      );\x0d\n\x0d\n      if (autoDestroy) {\x0d\n        stream.destroy();\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction endWritableNT(stream) {\x0d\n  const writable = stream.writable && !stream.writableEnded &&\x0d\n    !stream.destroyed;\x0d\n  if (writable) {\x0d\n    stream.end();\x0d\n  }\x0d\n}\x0d\n\x0d\nReadable.from = function(iterable\x2C opts) {\x0d\n  return from(Readable\x2C iterable\x2C opts);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nReadable.fromWeb = function(readableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamReadableFromReadableStream(\x0d\n    readableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.toWeb = function(streamReadable\x2C options) {\x0d\n  return lazyWebStreams().newReadableStreamFromStreamReadable(\x0d\n    streamReadable\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nReadable.wrap = function(src\x2C options) {\x0d\n  return new Readable({\x0d\n    objectMode: src.readableObjectMode ?? src.objectMode ?? true\x2C\x0d\n    ...options\x2C\x0d\n    destroy(err\x2C callback) {\x0d\n      destroyImpl.destroyer(src\x2C err);\x0d\n      callback(err);\x0d\n    }\x2C\x0d\n  }).wrap(src);\x0d\n};\x0d\n
code-source-info,0x2bb6ec8258e,137,0,53051,C0O0C4O53051,,
code-creation,JS,10,2820119,0x13a35fa2c4e,2570, node:internal/streams/readable:1:1,0x2bb6ec82508,~
code-source-info,0x13a35fa2c4e
tick,0x7ff6cb60da90,2820474,1,0x7ff6cb82fd80,3,0x7ff6cc23aba0,0x7ff64c443f26,0x7ff64c443ca1,0x2bb6ec9c26c,0x7ff64c443feb,0x7ff64c443ca1,0x5c3c4f2f6,0x7ff64c443feb,0x7ff64c443ca1,0x5c3c4db10,0x7ff64c443feb,0x7ff64c443ca1,0x391359bda2e,0x7ff64c443feb,0x7ff64c443ca1,0x391359bb9a3,0x7ff64c443feb,0x7ff64c443ca1,0x5c3c7c9eb,0x7ff64c443feb,0x7ff64c443ca1,0x39c990c312a,0x7ff64c443feb,0x7ff64c443ca1,0x39c990c2236,0x24f91a02a5f,0x24f91a0285f,0x24f91a02746,0x24f91a0260e,0x7ff6cb6a2cb0,0xc2df91015b,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,Eval,10,2820872,0x13efe1c57ae,5, node:internal/streams/add-abort-signal:1:1,0x13efe1c55b8,~
script-source,138,node:internal/streams/add-abort-signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  SymbolDispose\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  AbortError\x2C\x0d\n  codes\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n  kControllerErrorFunction\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst eos = require('internal/streams/end-of-stream');\x0d\nconst { ERR_INVALID_ARG_TYPE } = codes;\x0d\nlet addAbortListener;\x0d\n\x0d\n// This method is inlined here for readable-stream\x0d\n// It also does not allow for signal to not exist on the stream\x0d\n// https://github.com/nodejs/node/pull/36061#discussion_r533718029\x0d\nconst validateAbortSignal = (signal\x2C name) => {\x0d\n  if (typeof signal !== 'object' ||\x0d\n       !('aborted' in signal)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C 'AbortSignal'\x2C signal);\x0d\n  }\x0d\n};\x0d\n\x0d\nmodule.exports.addAbortSignal = function addAbortSignal(signal\x2C stream) {\x0d\n  validateAbortSignal(signal\x2C 'signal');\x0d\n  if (!isNodeStream(stream) && !isWebStream(stream)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE('stream'\x2C ['ReadableStream'\x2C 'WritableStream'\x2C 'Stream']\x2C stream);\x0d\n  }\x0d\n  return module.exports.addAbortSignalNoValidate(signal\x2C stream);\x0d\n};\x0d\n\x0d\nmodule.exports.addAbortSignalNoValidate = function(signal\x2C stream) {\x0d\n  if (typeof signal !== 'object' || !('aborted' in signal)) {\x0d\n    return stream;\x0d\n  }\x0d\n  const onAbort = isNodeStream(stream) ?\x0d\n    () => {\x0d\n      stream.destroy(new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n    } :\x0d\n    () => {\x0d\n      stream[kControllerErrorFunction](new AbortError(undefined\x2C { cause: signal.reason }));\x0d\n    };\x0d\n  if (signal.aborted) {\x0d\n    onAbort();\x0d\n  } else {\x0d\n    addAbortListener ??= require('events').addAbortListener;\x0d\n    const disposable = addAbortListener(signal\x2C onAbort);\x0d\n    eos(stream\x2C disposable[SymbolDispose]);\x0d\n  }\x0d\n  return stream;\x0d\n};\x0d\n
code-source-info,0x13efe1c57ae,138,0,1763,C0O0C4O1763,,
code-creation,JS,10,2821006,0x13efe1c5a1e,158, node:internal/streams/add-abort-signal:1:1,0x13efe1c5728,~
code-source-info,0x13efe1c5a1e,138,0,1763,C0O0C40O28C46O102C52O102C57O75C63O90C68O208C74O208C79O144C85O161C91O177C97O258C103O258C107O258C109O310C115O347C116O347C118O581C122O581C124O750C127O757C136O780C140O1104C143O1111C152O1144C157O1762,,
code-creation,JS,10,2821187,0x13a35fa8a06,82,debuglog node:internal/util/debuglog:76:18,0x3fcdef8f6b0,~
code-source-info,0x13a35fa8a06,22,2403,3452,C0O2403C28O2533C32O2533C34O2948C35O2948C37O2971C41O2971C43O3064C48O3270C58O3291C63O3339C74O3270C79O3435C81O3449,,
code-creation,Eval,10,2821338,0x13a35fa8e7e,5, node:internal/streams/state:1:1,0x13a35fa8cb8,~
script-source,139,node:internal/streams/state,'use strict';\x0d\n\x0d\nconst {\x0d\n  MathFloor\x2C\x0d\n  NumberIsInteger\x2C\x0d\n} = primordials;\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nconst { ERR_INVALID_ARG_VALUE } = require('internal/errors').codes;\x0d\n\x0d\nlet defaultHighWaterMarkBytes = 16 * 1024;\x0d\nlet defaultHighWaterMarkObjectMode = 16;\x0d\n\x0d\nfunction highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey) {\x0d\n  return options.highWaterMark != null ? options.highWaterMark :\x0d\n    isDuplex ? options[duplexKey] : null;\x0d\n}\x0d\n\x0d\nfunction getDefaultHighWaterMark(objectMode) {\x0d\n  return objectMode ? defaultHighWaterMarkObjectMode : defaultHighWaterMarkBytes;\x0d\n}\x0d\n\x0d\nfunction setDefaultHighWaterMark(objectMode\x2C value) {\x0d\n  validateInteger(value\x2C 'value'\x2C 0);\x0d\n  if (objectMode) {\x0d\n    defaultHighWaterMarkObjectMode = value;\x0d\n  } else {\x0d\n    defaultHighWaterMarkBytes = value;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getHighWaterMark(state\x2C options\x2C duplexKey\x2C isDuplex) {\x0d\n  const hwm = highWaterMarkFrom(options\x2C isDuplex\x2C duplexKey);\x0d\n  if (hwm != null) {\x0d\n    if (!NumberIsInteger(hwm) || hwm < 0) {\x0d\n      const name = isDuplex ? `options.${duplexKey}` : 'options.highWaterMark';\x0d\n      throw new ERR_INVALID_ARG_VALUE(name\x2C hwm);\x0d\n    }\x0d\n    return MathFloor(hwm);\x0d\n  }\x0d\n\x0d\n  // Default value\x0d\n  return getDefaultHighWaterMark(state.objectMode);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n  setDefaultHighWaterMark\x2C\x0d\n};\x0d\n
code-source-info,0x13a35fa8e7e,139,0,1382,C0O0C4O1382,,
code-creation,JS,10,2821456,0x13a35fa9106,131, node:internal/streams/state:1:1,0x13a35fa8df8,~
code-source-info,0x13a35fa9106,139,0,1382,C0O0C45O28C51O42C57O106C60O106C65O86C71O175C74O175C79O201C84O149C90O244C94O244C96O293C98O293C100O1281C107O1303C113O1324C119O1352C125O1296C130O1381,,
code-creation,JS,10,2821571,0x2bb6ecaa76e,5,get node:buffer:281:6,0x3fcdef943e0,~
code-source-info,0x2bb6ecaa76e,24,8361,8386,C0O8366C4O8384,,
code-creation,Eval,10,2821751,0x2bb6ecaab56,5, node:internal/streams/from:1:1,0x2bb6ecaa9a0,~
script-source,140,node:internal/streams/from,'use strict';\x0d\n\x0d\nconst {\x0d\n  PromisePrototypeThen\x2C\x0d\n  SymbolAsyncIterator\x2C\x0d\n  SymbolIterator\x2C\x0d\n} = primordials;\x0d\nconst { Buffer } = require('buffer');\x0d\n\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n} = require('internal/errors').codes;\x0d\n\x0d\nfunction from(Readable\x2C iterable\x2C opts) {\x0d\n  let iterator;\x0d\n  if (typeof iterable === 'string' || iterable instanceof Buffer) {\x0d\n    return new Readable({\x0d\n      objectMode: true\x2C\x0d\n      ...opts\x2C\x0d\n      read() {\x0d\n        this.push(iterable);\x0d\n        this.push(null);\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n\x0d\n  let isAsync;\x0d\n  if (iterable && iterable[SymbolAsyncIterator]) {\x0d\n    isAsync = true;\x0d\n    iterator = iterable[SymbolAsyncIterator]();\x0d\n  } else if (iterable && iterable[SymbolIterator]) {\x0d\n    isAsync = false;\x0d\n    iterator = iterable[SymbolIterator]();\x0d\n  } else {\x0d\n    throw new ERR_INVALID_ARG_TYPE('iterable'\x2C ['Iterable']\x2C iterable);\x0d\n  }\x0d\n\x0d\n\x0d\n  const readable = new Readable({\x0d\n    objectMode: true\x2C\x0d\n    highWaterMark: 1\x2C\x0d\n    // TODO(ronag): What options should be allowed?\x0d\n    ...opts\x2C\x0d\n  });\x0d\n\x0d\n  // Flag to protect against _read\x0d\n  // being called before last iteration completion.\x0d\n  let reading = false;\x0d\n  let isAsyncValues = false;\x0d\n\x0d\n  readable._read = function() {\x0d\n    if (!reading) {\x0d\n      reading = true;\x0d\n\x0d\n      if (isAsync) {\x0d\n        nextAsync();\x0d\n      } else if (isAsyncValues) {\x0d\n        nextSyncWithAsyncValues();\x0d\n      } else {\x0d\n        nextSyncWithSyncValues();\x0d\n      }\x0d\n    }\x0d\n  };\x0d\n\x0d\n  readable._destroy = function(error\x2C cb) {\x0d\n    PromisePrototypeThen(\x0d\n      close(error)\x2C\x0d\n      () => process.nextTick(cb\x2C error)\x2C // nextTick is here in case cb throws\x0d\n      (e) => process.nextTick(cb\x2C e || error)\x2C\x0d\n    );\x0d\n  };\x0d\n\x0d\n  async function close(error) {\x0d\n    const hadError = (error !== undefined) && (error !== null);\x0d\n    const hasThrow = typeof iterator.throw === 'function';\x0d\n    if (hadError && hasThrow) {\x0d\n      const { value\x2C done } = await iterator.throw(error);\x0d\n      await value;\x0d\n      if (done) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n    if (typeof iterator.return === 'function') {\x0d\n      const { value } = await iterator.return();\x0d\n      await value;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // There are a lot of duplication here\x2C it's done on purpose for performance\x0d\n  // reasons - avoid await when not needed.\x0d\n\x0d\n  function nextSyncWithSyncValues() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        if (value &&\x0d\n          typeof value.then === 'function') {\x0d\n          return changeToAsyncValues(value);\x0d\n        }\x0d\n\x0d\n        if (value === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(value)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function changeToAsyncValues(value) {\x0d\n    isAsyncValues = true;\x0d\n\x0d\n    try {\x0d\n      const res = await value;\x0d\n\x0d\n      if (res === null) {\x0d\n        reading = false;\x0d\n        throw new ERR_STREAM_NULL_VALUES();\x0d\n      }\x0d\n\x0d\n      if (readable.push(res)) {\x0d\n        nextSyncWithAsyncValues();\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      reading = false;\x0d\n    } catch (err) {\x0d\n      readable.destroy(err);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function nextSyncWithAsyncValues() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        const res = (value &&\x0d\n          typeof value.then === 'function') ?\x0d\n          await value :\x0d\n          value;\x0d\n\x0d\n        if (res === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(res)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  async function nextAsync() {\x0d\n    for (;;) {\x0d\n      try {\x0d\n        const { value\x2C done } = await iterator.next();\x0d\n\x0d\n        if (done) {\x0d\n          readable.push(null);\x0d\n          return;\x0d\n        }\x0d\n\x0d\n        if (value === null) {\x0d\n          reading = false;\x0d\n          throw new ERR_STREAM_NULL_VALUES();\x0d\n        }\x0d\n\x0d\n        if (readable.push(value)) {\x0d\n          continue;\x0d\n        }\x0d\n\x0d\n        reading = false;\x0d\n      } catch (err) {\x0d\n        readable.destroy(err);\x0d\n      }\x0d\n      break;\x0d\n    }\x0d\n  }\x0d\n  return readable;\x0d\n}\x0d\n\x0d\nmodule.exports = from;\x0d\n
code-source-info,0x2bb6ecaab56,140,0,4549,C0O0C4O4549,,
code-creation,JS,10,2822146,0x2bb6ecaacd6,97, node:internal/streams/from:1:1,0x2bb6ecaaad0,~
code-source-info,0x2bb6ecaacd6,140,0,4549,C0O0C32O28C38O53C44O77C50O131C53O131C58O120C64O218C67O218C72O244C77O164C83O189C89O4525C91O4540C96O4548,,
code-creation,JS,10,2822373,0x13a35fa7c1e,33,makeBitMapDescriptor node:internal/streams/readable:127:30,0x2bb6ec825c0,~
code-source-info,0x13a35fa7c1e,137,3888,4090,C0O3888C9O3899C14O3937C22O3988C32O4087,,
code-creation,Eval,10,2823488,0x23f23c70d6,5, node:internal/streams/writable:1:1,0x23f23c64c8,~
script-source,141,node:internal/streams/writable,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// A bit simpler than readable streams.\x0d\n// Implement an async ._write(chunk\x2C encoding\x2C cb)\x2C and it'll handle all\x0d\n// the drain event emission and buffering.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  Error\x2C\x0d\n  FunctionPrototypeSymbolHasInstance\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  Symbol\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Writable;\x0d\nWritable.WritableState = WritableState;\x0d\n\x0d\nconst EE = require('events');\x0d\nconst Stream = require('internal/streams/legacy').Stream;\x0d\nconst { Buffer } = require('buffer');\x0d\nconst destroyImpl = require('internal/streams/destroy');\x0d\n\x0d\nconst {\x0d\n  addAbortSignal\x2C\x0d\n} = require('internal/streams/add-abort-signal');\x0d\n\x0d\nconst {\x0d\n  getHighWaterMark\x2C\x0d\n  getDefaultHighWaterMark\x2C\x0d\n} = require('internal/streams/state');\x0d\nconst {\x0d\n  ERR_INVALID_ARG_TYPE\x2C\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n  ERR_MULTIPLE_CALLBACK\x2C\x0d\n  ERR_STREAM_CANNOT_PIPE\x2C\x0d\n  ERR_STREAM_DESTROYED\x2C\x0d\n  ERR_STREAM_ALREADY_FINISHED\x2C\x0d\n  ERR_STREAM_NULL_VALUES\x2C\x0d\n  ERR_STREAM_WRITE_AFTER_END\x2C\x0d\n  ERR_UNKNOWN_ENCODING\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst {\x0d\n  kState\x2C\x0d\n  // bitfields\x0d\n  kObjectMode\x2C\x0d\n  kErrorEmitted\x2C\x0d\n  kAutoDestroy\x2C\x0d\n  kEmitClose\x2C\x0d\n  kDestroyed\x2C\x0d\n  kClosed\x2C\x0d\n  kCloseEmitted\x2C\x0d\n  kErrored\x2C\x0d\n  kConstructed\x2C\x0d\n  kOnConstructed\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst { errorOrDestroy } = destroyImpl;\x0d\n\x0d\nObjectSetPrototypeOf(Writable.prototype\x2C Stream.prototype);\x0d\nObjectSetPrototypeOf(Writable\x2C Stream);\x0d\n\x0d\nfunction nop() {}\x0d\n\x0d\nconst kOnFinishedValue = Symbol('kOnFinishedValue');\x0d\nconst kErroredValue = Symbol('kErroredValue');\x0d\nconst kDefaultEncodingValue = Symbol('kDefaultEncodingValue');\x0d\nconst kWriteCbValue = Symbol('kWriteCbValue');\x0d\nconst kAfterWriteTickInfoValue = Symbol('kAfterWriteTickInfoValue');\x0d\nconst kBufferedValue = Symbol('kBufferedValue');\x0d\n\x0d\nconst kSync = 1 << 9;\x0d\nconst kFinalCalled = 1 << 10;\x0d\nconst kNeedDrain = 1 << 11;\x0d\nconst kEnding = 1 << 12;\x0d\nconst kFinished = 1 << 13;\x0d\nconst kDecodeStrings = 1 << 14;\x0d\nconst kWriting = 1 << 15;\x0d\nconst kBufferProcessing = 1 << 16;\x0d\nconst kPrefinished = 1 << 17;\x0d\nconst kAllBuffers = 1 << 18;\x0d\nconst kAllNoop = 1 << 19;\x0d\nconst kOnFinished = 1 << 20;\x0d\nconst kHasWritable = 1 << 21;\x0d\nconst kWritable = 1 << 22;\x0d\nconst kCorked = 1 << 23;\x0d\nconst kDefaultUTF8Encoding = 1 << 24;\x0d\nconst kWriteCb = 1 << 25;\x0d\nconst kExpectWriteCb = 1 << 26;\x0d\nconst kAfterWriteTickInfo = 1 << 27;\x0d\nconst kAfterWritePending = 1 << 28;\x0d\nconst kBuffered = 1 << 29;\x0d\nconst kEnded = 1 << 30;\x0d\n\x0d\n// TODO(benjamingr) it is likely slower to do it this way than with free functions\x0d\nfunction makeBitMapDescriptor(bit) {\x0d\n  return {\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & bit) !== 0; }\x2C\x0d\n    set(value) {\x0d\n      if (value) this[kState] |= bit;\x0d\n      else this[kState] &= ~bit;\x0d\n    }\x2C\x0d\n  };\x0d\n}\x0d\nObjectDefineProperties(WritableState.prototype\x2C {\x0d\n  // Object stream flag to indicate whether or not this stream\x0d\n  // contains buffers or objects.\x0d\n  objectMode: makeBitMapDescriptor(kObjectMode)\x2C\x0d\n\x0d\n  // if _final has been called.\x0d\n  finalCalled: makeBitMapDescriptor(kFinalCalled)\x2C\x0d\n\x0d\n  // drain event flag.\x0d\n  needDrain: makeBitMapDescriptor(kNeedDrain)\x2C\x0d\n\x0d\n  // At the start of calling end()\x0d\n  ending: makeBitMapDescriptor(kEnding)\x2C\x0d\n\x0d\n  // When end() has been called\x2C and returned.\x0d\n  ended: makeBitMapDescriptor(kEnded)\x2C\x0d\n\x0d\n  // When 'finish' is emitted.\x0d\n  finished: makeBitMapDescriptor(kFinished)\x2C\x0d\n\x0d\n  // Has it been destroyed.\x0d\n  destroyed: makeBitMapDescriptor(kDestroyed)\x2C\x0d\n\x0d\n  // Should we decode strings into buffers before passing to _write?\x0d\n  // this is here so that some node-core streams can optimize string\x0d\n  // handling at a lower level.\x0d\n  decodeStrings: makeBitMapDescriptor(kDecodeStrings)\x2C\x0d\n\x0d\n  // A flag to see when we're in the middle of a write.\x0d\n  writing: makeBitMapDescriptor(kWriting)\x2C\x0d\n\x0d\n  // A flag to be able to tell if the onwrite cb is called immediately\x2C\x0d\n  // or on a later tick.  We set this to true at first\x2C because any\x0d\n  // actions that shouldn't happen until "later" should generally also\x0d\n  // not happen before the first write call.\x0d\n  sync: makeBitMapDescriptor(kSync)\x2C\x0d\n\x0d\n  // A flag to know if we're processing previously buffered items\x2C which\x0d\n  // may call the _write() callback in the same tick\x2C so that we don't\x0d\n  // end up in an overlapped onwrite situation.\x0d\n  bufferProcessing: makeBitMapDescriptor(kBufferProcessing)\x2C\x0d\n\x0d\n  // Stream is still being constructed and cannot be\x0d\n  // destroyed until construction finished or failed.\x0d\n  // Async construction is opt in\x2C therefore we start as\x0d\n  // constructed.\x0d\n  constructed: makeBitMapDescriptor(kConstructed)\x2C\x0d\n\x0d\n  // Emit prefinish if the only thing we're waiting for is _write cbs\x0d\n  // This is relevant for synchronous Transform streams.\x0d\n  prefinished: makeBitMapDescriptor(kPrefinished)\x2C\x0d\n\x0d\n  // True if the error was already emitted and should not be thrown again.\x0d\n  errorEmitted: makeBitMapDescriptor(kErrorEmitted)\x2C\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  emitClose: makeBitMapDescriptor(kEmitClose)\x2C\x0d\n\x0d\n  // Should .destroy() be called after 'finish' (and potentially 'end').\x0d\n  autoDestroy: makeBitMapDescriptor(kAutoDestroy)\x2C\x0d\n\x0d\n  // Indicates whether the stream has finished destroying.\x0d\n  closed: makeBitMapDescriptor(kClosed)\x2C\x0d\n\x0d\n  // True if close has been emitted or would have been emitted\x0d\n  // depending on emitClose.\x0d\n  closeEmitted: makeBitMapDescriptor(kCloseEmitted)\x2C\x0d\n\x0d\n  allBuffers: makeBitMapDescriptor(kAllBuffers)\x2C\x0d\n  allNoop: makeBitMapDescriptor(kAllNoop)\x2C\x0d\n\x0d\n  // Indicates whether the stream has errored. When true all write() calls\x0d\n  // should return false. This is needed since when autoDestroy\x0d\n  // is disabled we need a way to tell whether the stream has failed.\x0d\n  // This is/should be a cold path.\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kErrored) !== 0 ? this[kErroredValue] : null; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kErroredValue] = value;\x0d\n        this[kState] |= kErrored;\x0d\n      } else {\x0d\n        this[kState] &= ~kErrored;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kHasWritable) !== 0 ? (this[kState] & kWritable) !== 0 : undefined; }\x2C\x0d\n    set(value) {\x0d\n      if (value == null) {\x0d\n        this[kState] &= ~(kHasWritable | kWritable);\x0d\n      } else if (value) {\x0d\n        this[kState] |= (kHasWritable | kWritable);\x0d\n      } else {\x0d\n        this[kState] |= kHasWritable;\x0d\n        this[kState] &= ~kWritable;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  defaultEncoding: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : this[kDefaultEncodingValue]; }\x2C\x0d\n    set(value) {\x0d\n      if (value === 'utf8' || value === 'utf-8') {\x0d\n        this[kState] |= kDefaultUTF8Encoding;\x0d\n      } else {\x0d\n        this[kState] &= ~kDefaultUTF8Encoding;\x0d\n        this[kDefaultEncodingValue] = value;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // The callback that the user supplies to write(chunk\x2C encoding\x2C cb).\x0d\n  writecb: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kWriteCb) !== 0 ? this[kWriteCbValue] : nop; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kWriteCbValue] = value;\x0d\n        this[kState] |= kWriteCb;\x0d\n      } else {\x0d\n        this[kState] &= ~kWriteCb;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  // Storage for data passed to the afterWrite() callback in case of\x0d\n  // synchronous _write() completion.\x0d\n  afterWriteTickInfo: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kAfterWriteTickInfo) !== 0 ? this[kAfterWriteTickInfoValue] : null; }\x2C\x0d\n    set(value) {\x0d\n      if (value) {\x0d\n        this[kAfterWriteTickInfoValue] = value;\x0d\n        this[kState] |= kAfterWriteTickInfo;\x0d\n      } else {\x0d\n        this[kState] &= ~kAfterWriteTickInfo;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  buffered: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() { return (this[kState] & kBuffered) !== 0 ? this[kBufferedValue] : []; }\x2C\x0d\n    set(value) {\x0d\n      this[kBufferedValue] = value;\x0d\n      if (value) {\x0d\n        this[kState] |= kBuffered;\x0d\n      } else {\x0d\n        this[kState] &= ~kBuffered;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n});\x0d\n\x0d\nfunction WritableState(options\x2C stream\x2C isDuplex) {\x0d\n  // Bit map field to store WritableState more effciently with 1 bit per field\x0d\n  // instead of a V8 slot per field.\x0d\n  this[kState] = kSync | kConstructed | kEmitClose | kAutoDestroy;\x0d\n\x0d\n  if (options && options.objectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  if (isDuplex && options && options.writableObjectMode)\x0d\n    this[kState] |= kObjectMode;\x0d\n\x0d\n  // The point at which write() starts returning false\x0d\n  // Note: 0 is a valid value\x2C means that we always return false if\x0d\n  // the entire buffer is not flushed immediately on write().\x0d\n  this.highWaterMark = options ?\x0d\n    getHighWaterMark(this\x2C options\x2C 'writableHighWaterMark'\x2C isDuplex) :\x0d\n    getDefaultHighWaterMark(false);\x0d\n\x0d\n  if (!options || options.decodeStrings !== false) this[kState] |= kDecodeStrings;\x0d\n\x0d\n  // Should close be emitted on destroy. Defaults to true.\x0d\n  if (options && options.emitClose === false) this[kState] &= ~kEmitClose;\x0d\n\x0d\n  // Should .destroy() be called after 'end' (and potentially 'finish').\x0d\n  if (options && options.autoDestroy === false) this[kState] &= ~kAutoDestroy;\x0d\n\x0d\n  // Crypto is kind of old and crusty.  Historically\x2C its default string\x0d\n  // encoding is 'binary' so we have to make this configurable.\x0d\n  // Everything else in the universe uses 'utf8'\x2C though.\x0d\n  const defaultEncoding = options ? options.defaultEncoding : null;\x0d\n  if (defaultEncoding == null || defaultEncoding === 'utf8' || defaultEncoding === 'utf-8') {\x0d\n    this[kState] |= kDefaultUTF8Encoding;\x0d\n  } else if (Buffer.isEncoding(defaultEncoding)) {\x0d\n    this[kState] &= ~kDefaultUTF8Encoding;\x0d\n    this[kDefaultEncodingValue] = defaultEncoding;\x0d\n  } else {\x0d\n    throw new ERR_UNKNOWN_ENCODING(defaultEncoding);\x0d\n  }\x0d\n\x0d\n  // Not an actual buffer we keep track of\x2C but a measurement\x0d\n  // of how much we're waiting to get pushed to some underlying\x0d\n  // socket or file.\x0d\n  this.length = 0;\x0d\n\x0d\n  // When true all writes will be buffered until .uncork() call.\x0d\n  this.corked = 0;\x0d\n\x0d\n  // The callback that's passed to _write(chunk\x2C cb).\x0d\n  this.onwrite = onwrite.bind(undefined\x2C stream);\x0d\n\x0d\n  // The amount that is being written when _write is called.\x0d\n  this.writelen = 0;\x0d\n\x0d\n  resetBuffer(this);\x0d\n\x0d\n  // Number of pending user-supplied write callbacks\x0d\n  // this must be 0 before 'finish' can be emitted.\x0d\n  this.pendingcb = 0;\x0d\n}\x0d\n\x0d\nfunction resetBuffer(state) {\x0d\n  state[kBufferedValue] = null;\x0d\n  state.bufferedIndex = 0;\x0d\n  state[kState] |= kAllBuffers | kAllNoop;\x0d\n  state[kState] &= ~kBuffered;\x0d\n}\x0d\n\x0d\nWritableState.prototype.getBuffer = function getBuffer() {\x0d\n  return (this[kState] & kBuffered) === 0 ? [] : ArrayPrototypeSlice(this.buffered\x2C this.bufferedIndex);\x0d\n};\x0d\n\x0d\nObjectDefineProperty(WritableState.prototype\x2C 'bufferedRequestCount'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return (this[kState] & kBuffered) === 0 ? 0 : this[kBufferedValue].length - this.bufferedIndex;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nWritableState.prototype[kOnConstructed] = function onConstructed(stream) {\x0d\n  if ((this[kState] & kWriting) === 0) {\x0d\n    clearBuffer(stream\x2C this);\x0d\n  }\x0d\n\x0d\n  if ((this[kState] & kEnding) !== 0) {\x0d\n    finishMaybe(stream\x2C this);\x0d\n  }\x0d\n};\x0d\n\x0d\nfunction Writable(options) {\x0d\n  if (!(this instanceof Writable))\x0d\n    return new Writable(options);\x0d\n\x0d\n  this._events ??= {\x0d\n    close: undefined\x2C\x0d\n    error: undefined\x2C\x0d\n    prefinish: undefined\x2C\x0d\n    finish: undefined\x2C\x0d\n    drain: undefined\x2C\x0d\n    // Skip uncommon events...\x0d\n    // [destroyImpl.kConstruct]: undefined\x2C\x0d\n    // [destroyImpl.kDestroy]: undefined\x2C\x0d\n  };\x0d\n\x0d\n  this._writableState = new WritableState(options\x2C this\x2C false);\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.write === 'function')\x0d\n      this._write = options.write;\x0d\n\x0d\n    if (typeof options.writev === 'function')\x0d\n      this._writev = options.writev;\x0d\n\x0d\n    if (typeof options.destroy === 'function')\x0d\n      this._destroy = options.destroy;\x0d\n\x0d\n    if (typeof options.final === 'function')\x0d\n      this._final = options.final;\x0d\n\x0d\n    if (typeof options.construct === 'function')\x0d\n      this._construct = options.construct;\x0d\n\x0d\n    if (options.signal)\x0d\n      addAbortSignal(options.signal\x2C this);\x0d\n  }\x0d\n\x0d\n  Stream.call(this\x2C options);\x0d\n\x0d\n  if (this._construct != null) {\x0d\n    destroyImpl.construct(this\x2C () => {\x0d\n      this._writableState[kOnConstructed](this);\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperty(Writable\x2C SymbolHasInstance\x2C {\x0d\n  __proto__: null\x2C\x0d\n  value: function(object) {\x0d\n    if (FunctionPrototypeSymbolHasInstance(this\x2C object)) return true;\x0d\n    if (this !== Writable) return false;\x0d\n\x0d\n    return object && object._writableState instanceof WritableState;\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Otherwise people can pipe Writable streams\x2C which is just wrong.\x0d\nWritable.prototype.pipe = function() {\x0d\n  errorOrDestroy(this\x2C new ERR_STREAM_CANNOT_PIPE());\x0d\n};\x0d\n\x0d\nfunction _write(stream\x2C chunk\x2C encoding\x2C cb) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if (cb == null || typeof cb !== 'function') {\x0d\n    cb = nop;\x0d\n  }\x0d\n\x0d\n  if (chunk === null) {\x0d\n    throw new ERR_STREAM_NULL_VALUES();\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kObjectMode) === 0) {\x0d\n    if (!encoding) {\x0d\n      encoding = (state[kState] & kDefaultUTF8Encoding) !== 0 ? 'utf8' : state.defaultEncoding;\x0d\n    } else if (encoding !== 'buffer' && !Buffer.isEncoding(encoding)) {\x0d\n      throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n    }\x0d\n\x0d\n    if (typeof chunk === 'string') {\x0d\n      if ((state[kState] & kDecodeStrings) !== 0) {\x0d\n        chunk = Buffer.from(chunk\x2C encoding);\x0d\n        encoding = 'buffer';\x0d\n      }\x0d\n    } else if (chunk instanceof Buffer) {\x0d\n      encoding = 'buffer';\x0d\n    } else if (Stream._isUint8Array(chunk)) {\x0d\n      chunk = Stream._uint8ArrayToBuffer(chunk);\x0d\n      encoding = 'buffer';\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE(\x0d\n        'chunk'\x2C ['string'\x2C 'Buffer'\x2C 'Uint8Array']\x2C chunk);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n  if ((state[kState] & kEnding) !== 0) {\x0d\n    err = new ERR_STREAM_WRITE_AFTER_END();\x0d\n  } else if ((state[kState] & kDestroyed) !== 0) {\x0d\n    err = new ERR_STREAM_DESTROYED('write');\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    process.nextTick(cb\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C true);\x0d\n    return err;\x0d\n  }\x0d\n\x0d\n  state.pendingcb++;\x0d\n  return writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C cb);\x0d\n}\x0d\n\x0d\nWritable.prototype.write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (encoding != null && typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  return _write(this\x2C chunk\x2C encoding\x2C cb) === true;\x0d\n};\x0d\n\x0d\nWritable.prototype.cork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  state[kState] |= kCorked;\x0d\n  state.corked++;\x0d\n};\x0d\n\x0d\nWritable.prototype.uncork = function() {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (state.corked) {\x0d\n    state.corked--;\x0d\n\x0d\n    if (!state.corked) {\x0d\n      state[kState] &= ~kCorked;\x0d\n    }\x0d\n\x0d\n    if ((state[kState] & kWriting) === 0)\x0d\n      clearBuffer(this\x2C state);\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\x0d\n  // node::ParseEncoding() requires lower case.\x0d\n  if (typeof encoding === 'string')\x0d\n    encoding = StringPrototypeToLowerCase(encoding);\x0d\n  if (!Buffer.isEncoding(encoding))\x0d\n    throw new ERR_UNKNOWN_ENCODING(encoding);\x0d\n  this._writableState.defaultEncoding = encoding;\x0d\n  return this;\x0d\n};\x0d\n\x0d\n// If we're already writing something\x2C then just put this\x0d\n// in the queue\x2C and wait our turn.  Otherwise\x2C call _write\x0d\n// If we return false\x2C then we need a drain event\x2C so set that flag.\x0d\nfunction writeOrBuffer(stream\x2C state\x2C chunk\x2C encoding\x2C callback) {\x0d\n  const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n\x0d\n  state.length += len;\x0d\n\x0d\n  if ((state[kState] & (kWriting | kErrored | kCorked | kConstructed)) !== kConstructed) {\x0d\n    if ((state[kState] & kBuffered) === 0) {\x0d\n      state[kState] |= kBuffered;\x0d\n      state[kBufferedValue] = [];\x0d\n    }\x0d\n\x0d\n    state[kBufferedValue].push({ chunk\x2C encoding\x2C callback });\x0d\n    if ((state[kState] & kAllBuffers) !== 0 && encoding !== 'buffer') {\x0d\n      state[kState] &= ~kAllBuffers;\x0d\n    }\x0d\n    if ((state[kState] & kAllNoop) !== 0 && callback !== nop) {\x0d\n      state[kState] &= ~kAllNoop;\x0d\n    }\x0d\n  } else {\x0d\n    state.writelen = len;\x0d\n    if (callback !== nop) {\x0d\n      state.writecb = callback;\x0d\n    }\x0d\n    state[kState] |= kWriting | kSync | kExpectWriteCb;\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n    state[kState] &= ~kSync;\x0d\n  }\x0d\n\x0d\n  const ret = state.length < state.highWaterMark;\x0d\n\x0d\n  if (!ret) {\x0d\n    state[kState] |= kNeedDrain;\x0d\n  }\x0d\n\x0d\n  // Return false if errored or destroyed in order to break\x0d\n  // any synchronous while(stream.write(data)) loops.\x0d\n  return ret && (state[kState] & (kDestroyed | kErrored)) === 0;\x0d\n}\x0d\n\x0d\nfunction doWrite(stream\x2C state\x2C writev\x2C len\x2C chunk\x2C encoding\x2C cb) {\x0d\n  state.writelen = len;\x0d\n  if (cb !== nop) {\x0d\n    state.writecb = cb;\x0d\n  }\x0d\n  state[kState] |= kWriting | kSync | kExpectWriteCb;\x0d\n  if ((state[kState] & kDestroyed) !== 0)\x0d\n    state.onwrite(new ERR_STREAM_DESTROYED('write'));\x0d\n  else if (writev)\x0d\n    stream._writev(chunk\x2C state.onwrite);\x0d\n  else\x0d\n    stream._write(chunk\x2C encoding\x2C state.onwrite);\x0d\n  state[kState] &= ~kSync;\x0d\n}\x0d\n\x0d\nfunction onwriteError(stream\x2C state\x2C er\x2C cb) {\x0d\n  --state.pendingcb;\x0d\n\x0d\n  cb(er);\x0d\n  // Ensure callbacks are invoked even when autoDestroy is\x0d\n  // not enabled. Passing `er` here doesn't make sense since\x0d\n  // it's related to one specific write\x2C not to the buffered\x0d\n  // writes.\x0d\n  errorBuffer(state);\x0d\n  // This can emit error\x2C but error must always follow cb.\x0d\n  errorOrDestroy(stream\x2C er);\x0d\n}\x0d\n\x0d\nfunction onwrite(stream\x2C er) {\x0d\n  const state = stream._writableState;\x0d\n\x0d\n  if ((state[kState] & kExpectWriteCb) === 0) {\x0d\n    errorOrDestroy(stream\x2C new ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const sync = (state[kState] & kSync) !== 0;\x0d\n  const cb = (state[kState] & kWriteCb) !== 0 ? state[kWriteCbValue] : nop;\x0d\n\x0d\n  state[kState] &= ~(kWriting | kExpectWriteCb | kWriteCb);\x0d\n  state.length -= state.writelen;\x0d\n  state.writelen = 0;\x0d\n\x0d\n  if (er) {\x0d\n    // Avoid V8 leak\x2C https://github.com/nodejs/node/pull/34103#issuecomment-652002364\x0d\n    er.stack; // eslint-disable-line no-unused-expressions\x0d\n\x0d\n    if ((state[kState] & kErrored) === 0) {\x0d\n      state[kErroredValue] = er;\x0d\n      state[kState] |= kErrored;\x0d\n    }\x0d\n\x0d\n    // In case of duplex streams we need to notify the readable side of the\x0d\n    // error.\x0d\n    if (stream._readableState && !stream._readableState.errored) {\x0d\n      stream._readableState.errored = er;\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      process.nextTick(onwriteError\x2C stream\x2C state\x2C er\x2C cb);\x0d\n    } else {\x0d\n      onwriteError(stream\x2C state\x2C er\x2C cb);\x0d\n    }\x0d\n  } else {\x0d\n    if ((state[kState] & kBuffered) !== 0) {\x0d\n      clearBuffer(stream\x2C state);\x0d\n    }\x0d\n\x0d\n    if (sync) {\x0d\n      const needDrain = (state[kState] & kNeedDrain) !== 0 && state.length === 0;\x0d\n      const needTick = needDrain || (state[kState] & kDestroyed !== 0) || cb !== nop;\x0d\n\x0d\n      // It is a common case that the callback passed to .write() is always\x0d\n      // the same. In that case\x2C we do not schedule a new nextTick()\x2C but\x0d\n      // rather just increase a counter\x2C to improve performance and avoid\x0d\n      // memory allocations.\x0d\n      if (cb === nop) {\x0d\n        if ((state[kState] & kAfterWritePending) === 0 && needTick) {\x0d\n          process.nextTick(afterWrite\x2C stream\x2C state\x2C 1\x2C cb);\x0d\n          state[kState] |= kAfterWritePending;\x0d\n        } else {\x0d\n          state.pendingcb--;\x0d\n          if ((state[kState] & kEnding) !== 0) {\x0d\n            finishMaybe(stream\x2C state\x2C true);\x0d\n          }\x0d\n        }\x0d\n      } else if ((state[kState] & kAfterWriteTickInfo) !== 0 &&\x0d\n                 state[kAfterWriteTickInfoValue].cb === cb) {\x0d\n        state[kAfterWriteTickInfoValue].count++;\x0d\n      } else if (needTick) {\x0d\n        state[kAfterWriteTickInfoValue] = { count: 1\x2C cb\x2C stream\x2C state };\x0d\n        process.nextTick(afterWriteTick\x2C state[kAfterWriteTickInfoValue]);\x0d\n        state[kState] |= (kAfterWritePending | kAfterWriteTickInfo);\x0d\n      } else {\x0d\n        state.pendingcb--;\x0d\n        if ((state[kState] & kEnding) !== 0) {\x0d\n          finishMaybe(stream\x2C state\x2C true);\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      afterWrite(stream\x2C state\x2C 1\x2C cb);\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction afterWriteTick({ stream\x2C state\x2C count\x2C cb }) {\x0d\n  state[kState] &= ~kAfterWriteTickInfo;\x0d\n  state[kAfterWriteTickInfoValue] = null;\x0d\n  return afterWrite(stream\x2C state\x2C count\x2C cb);\x0d\n}\x0d\n\x0d\nfunction afterWrite(stream\x2C state\x2C count\x2C cb) {\x0d\n  state[kState] &= ~kAfterWritePending;\x0d\n\x0d\n  const needDrain = (state[kState] & (kEnding | kNeedDrain | kDestroyed)) === kNeedDrain && state.length === 0;\x0d\n  if (needDrain) {\x0d\n    state[kState] &= ~kNeedDrain;\x0d\n    stream.emit('drain');\x0d\n  }\x0d\n\x0d\n  while (count-- > 0) {\x0d\n    state.pendingcb--;\x0d\n    cb(null);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kDestroyed) !== 0) {\x0d\n    errorBuffer(state);\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kEnding) !== 0) {\x0d\n    finishMaybe(stream\x2C state\x2C true);\x0d\n  }\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then invoke callbacks.\x0d\nfunction errorBuffer(state) {\x0d\n  if ((state[kState] & kWriting) !== 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if ((state[kState] & kBuffered) !== 0) {\x0d\n    for (let n = state.bufferedIndex; n < state.buffered.length; ++n) {\x0d\n      const { chunk\x2C callback } = state[kBufferedValue][n];\x0d\n      const len = (state[kState] & kObjectMode) !== 0 ? 1 : chunk.length;\x0d\n      state.length -= len;\x0d\n      callback(state.errored ?? new ERR_STREAM_DESTROYED('write'));\x0d\n    }\x0d\n  }\x0d\n\x0d\n\x0d\n  callFinishedCallbacks(state\x2C state.errored ?? new ERR_STREAM_DESTROYED('end'));\x0d\n\x0d\n  resetBuffer(state);\x0d\n}\x0d\n\x0d\n// If there's something in the buffer waiting\x2C then process it.\x0d\nfunction clearBuffer(stream\x2C state) {\x0d\n  if ((state[kState] & (kDestroyed | kBufferProcessing | kCorked | kBuffered | kConstructed)) !==\x0d\n      (kBuffered | kConstructed)) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const objectMode = (state[kState] & kObjectMode) !== 0;\x0d\n  const { [kBufferedValue]: buffered\x2C bufferedIndex } = state;\x0d\n  const bufferedLength = buffered.length - bufferedIndex;\x0d\n\x0d\n  if (!bufferedLength) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  let i = bufferedIndex;\x0d\n\x0d\n  state[kState] |= kBufferProcessing;\x0d\n  if (bufferedLength > 1 && stream._writev) {\x0d\n    state.pendingcb -= bufferedLength - 1;\x0d\n\x0d\n    const callback = (state[kState] & kAllNoop) !== 0 ? nop : (err) => {\x0d\n      for (let n = i; n < buffered.length; ++n) {\x0d\n        buffered[n].callback(err);\x0d\n      }\x0d\n    };\x0d\n    // Make a copy of `buffered` if it's going to be used by `callback` above\x2C\x0d\n    // since `doWrite` will mutate the array.\x0d\n    const chunks = (state[kState] & kAllNoop) !== 0 && i === 0 ?\x0d\n      buffered : ArrayPrototypeSlice(buffered\x2C i);\x0d\n    chunks.allBuffers = (state[kState] & kAllBuffers) !== 0;\x0d\n\x0d\n    doWrite(stream\x2C state\x2C true\x2C state.length\x2C chunks\x2C ''\x2C callback);\x0d\n\x0d\n    resetBuffer(state);\x0d\n  } else {\x0d\n    do {\x0d\n      const { chunk\x2C encoding\x2C callback } = buffered[i];\x0d\n      buffered[i++] = null;\x0d\n      const len = objectMode ? 1 : chunk.length;\x0d\n      doWrite(stream\x2C state\x2C false\x2C len\x2C chunk\x2C encoding\x2C callback);\x0d\n    } while (i < buffered.length && (state[kState] & kWriting) === 0);\x0d\n\x0d\n    if (i === buffered.length) {\x0d\n      resetBuffer(state);\x0d\n    } else if (i > 256) {\x0d\n      buffered.splice(0\x2C i);\x0d\n      state.bufferedIndex = 0;\x0d\n    } else {\x0d\n      state.bufferedIndex = i;\x0d\n    }\x0d\n  }\x0d\n  state[kState] &= ~kBufferProcessing;\x0d\n}\x0d\n\x0d\nWritable.prototype._write = function(chunk\x2C encoding\x2C cb) {\x0d\n  if (this._writev) {\x0d\n    this._writev([{ chunk\x2C encoding }]\x2C cb);\x0d\n  } else {\x0d\n    throw new ERR_METHOD_NOT_IMPLEMENTED('_write()');\x0d\n  }\x0d\n};\x0d\n\x0d\nWritable.prototype._writev = null;\x0d\n\x0d\nWritable.prototype.end = function(chunk\x2C encoding\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  if (typeof chunk === 'function') {\x0d\n    cb = chunk;\x0d\n    chunk = null;\x0d\n    encoding = null;\x0d\n  } else if (typeof encoding === 'function') {\x0d\n    cb = encoding;\x0d\n    encoding = null;\x0d\n  }\x0d\n\x0d\n  let err;\x0d\n\x0d\n  if (chunk != null) {\x0d\n    const ret = _write(this\x2C chunk\x2C encoding);\x0d\n    if (ret instanceof Error) {\x0d\n      err = ret;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // .end() fully uncorks.\x0d\n  if ((state[kState] & kCorked) !== 0) {\x0d\n    state.corked = 1;\x0d\n    this.uncork();\x0d\n  }\x0d\n\x0d\n  if (err) {\x0d\n    // Do nothing...\x0d\n  } else if ((state[kState] & (kEnding | kErrored)) === 0) {\x0d\n    // This is forgiving in terms of unnecessary calls to end() and can hide\x0d\n    // logic errors. However\x2C usually such errors are harmless and causing a\x0d\n    // hard error can be disproportionately destructive. It is not always\x0d\n    // trivial for the user to determine whether end() needs to be called\x0d\n    // or not.\x0d\n\x0d\n    state[kState] |= kEnding;\x0d\n    finishMaybe(this\x2C state\x2C true);\x0d\n    state[kState] |= kEnded;\x0d\n  } else if ((state[kState] & kFinished) !== 0) {\x0d\n    err = new ERR_STREAM_ALREADY_FINISHED('end');\x0d\n  } else if ((state[kState] & kDestroyed) !== 0) {\x0d\n    err = new ERR_STREAM_DESTROYED('end');\x0d\n  }\x0d\n\x0d\n  if (typeof cb === 'function') {\x0d\n    if (err) {\x0d\n      process.nextTick(cb\x2C err);\x0d\n    } else if ((state[kState] & kErrored) !== 0) {\x0d\n      process.nextTick(cb\x2C state[kErroredValue]);\x0d\n    } else if ((state[kState] & kFinished) !== 0) {\x0d\n      process.nextTick(cb\x2C null);\x0d\n    } else {\x0d\n      state[kState] |= kOnFinished;\x0d\n      state[kOnFinishedValue] ??= [];\x0d\n      state[kOnFinishedValue].push(cb);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return this;\x0d\n};\x0d\n\x0d\nfunction needFinish(state) {\x0d\n  return (\x0d\n    // State is ended && constructed but not destroyed\x2C finished\x2C writing\x2C errorEmitted or closedEmitted\x0d\n    (state[kState] & (\x0d\n      kEnding |\x0d\n          kDestroyed |\x0d\n          kConstructed |\x0d\n          kFinished |\x0d\n          kWriting |\x0d\n          kErrorEmitted |\x0d\n          kCloseEmitted |\x0d\n          kErrored |\x0d\n          kBuffered\x0d\n    )) === (kEnding | kConstructed) && state.length === 0);\x0d\n}\x0d\n\x0d\nfunction onFinish(stream\x2C state\x2C err) {\x0d\n  if ((state[kState] & kPrefinished) !== 0) {\x0d\n    errorOrDestroy(stream\x2C err ?? ERR_MULTIPLE_CALLBACK());\x0d\n    return;\x0d\n  }\x0d\n  state.pendingcb--;\x0d\n  if (err) {\x0d\n    callFinishedCallbacks(state\x2C err);\x0d\n    errorOrDestroy(stream\x2C err\x2C (state[kState] & kSync) !== 0);\x0d\n  } else if (needFinish(state)) {\x0d\n    state[kState] |= kPrefinished;\x0d\n    stream.emit('prefinish');\x0d\n    // Backwards compat. Don't check state.sync here.\x0d\n    // Some streams assume 'finish' will be emitted\x0d\n    // asynchronously relative to _final callback.\x0d\n    state.pendingcb++;\x0d\n    process.nextTick(finish\x2C stream\x2C state);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction prefinish(stream\x2C state) {\x0d\n  if ((state[kState] & (kPrefinished | kFinalCalled)) !== 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  if (typeof stream._final === 'function' && (state[kState] & kDestroyed) === 0) {\x0d\n    state[kState] |= kFinalCalled | kSync;\x0d\n    state.pendingcb++;\x0d\n\x0d\n    try {\x0d\n      stream._final((err) => onFinish(stream\x2C state\x2C err));\x0d\n    } catch (err) {\x0d\n      onFinish(stream\x2C state\x2C err);\x0d\n    }\x0d\n\x0d\n    state[kState] &= ~kSync;\x0d\n  } else {\x0d\n    state[kState] |= kFinalCalled | kPrefinished;\x0d\n    stream.emit('prefinish');\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finishMaybe(stream\x2C state\x2C sync) {\x0d\n  if (needFinish(state)) {\x0d\n    prefinish(stream\x2C state);\x0d\n    if (state.pendingcb === 0) {\x0d\n      if (sync) {\x0d\n        state.pendingcb++;\x0d\n        process.nextTick((stream\x2C state) => {\x0d\n          if (needFinish(state)) {\x0d\n            finish(stream\x2C state);\x0d\n          } else {\x0d\n            state.pendingcb--;\x0d\n          }\x0d\n        }\x2C stream\x2C state);\x0d\n      } else if (needFinish(state)) {\x0d\n        state.pendingcb++;\x0d\n        finish(stream\x2C state);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction finish(stream\x2C state) {\x0d\n  state.pendingcb--;\x0d\n  state[kState] |= kFinished;\x0d\n\x0d\n  callFinishedCallbacks(state\x2C null);\x0d\n\x0d\n  stream.emit('finish');\x0d\n\x0d\n  if ((state[kState] & kAutoDestroy) !== 0) {\x0d\n    // In case of duplex streams we need a way to detect\x0d\n    // if the readable side is ready for autoDestroy as well.\x0d\n    const rState = stream._readableState;\x0d\n    const autoDestroy = !rState || (\x0d\n      rState.autoDestroy &&\x0d\n      // We don't expect the readable to ever 'end'\x0d\n      // if readable is explicitly set to false.\x0d\n      (rState.endEmitted || rState.readable === false)\x0d\n    );\x0d\n    if (autoDestroy) {\x0d\n      stream.destroy();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction callFinishedCallbacks(state\x2C err) {\x0d\n  if ((state[kState] & kOnFinished) === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  const onfinishCallbacks = state[kOnFinishedValue];\x0d\n  state[kOnFinishedValue] = null;\x0d\n  state[kState] &= ~kOnFinished;\x0d\n  for (let i = 0; i < onfinishCallbacks.length; i++) {\x0d\n    onfinishCallbacks[i](err);\x0d\n  }\x0d\n}\x0d\n\x0d\nObjectDefineProperties(Writable.prototype\x2C {\x0d\n  closed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? (this._writableState[kState] & kClosed) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  destroyed: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this._writableState ? (this._writableState[kState] & kDestroyed) !== 0 : false;\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      // Backward compatibility\x2C the user is explicitly managing destroyed.\x0d\n      if (!this._writableState) return;\x0d\n\x0d\n      if (value) this._writableState[kState] |= kDestroyed;\x0d\n      else this._writableState[kState] &= ~kDestroyed;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writable: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const w = this._writableState;\x0d\n      // w.writable === false means that this is part of a Duplex stream\x0d\n      // where the writable side was disabled upon construction.\x0d\n      // Compat. The user might manually disable writable side through\x0d\n      // deprecated setter.\x0d\n      return !!w && w.writable !== false && !w.errored &&\x0d\n        (w[kState] & (kEnding | kEnded | kDestroyed)) === 0;\x0d\n    }\x2C\x0d\n    set(val) {\x0d\n      // Backwards compatible.\x0d\n      if (this._writableState) {\x0d\n        this._writableState.writable = !!val;\x0d\n      }\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableFinished: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kFinished) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableObjectMode: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kObjectMode) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableBuffer: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.getBuffer();\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableEnded: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & kEnding) !== 0 : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableNeedDrain: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? (state[kState] & (kDestroyed | kEnding | kNeedDrain)) === kNeedDrain : false;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableHighWaterMark: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.highWaterMark;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableCorked: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? state.corked : 0;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableLength: {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state && state.length;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  errored: {\x0d\n    __proto__: null\x2C\x0d\n    enumerable: false\x2C\x0d\n    get() {\x0d\n      const state = this._writableState;\x0d\n      return state ? state.errored : null;\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n\x0d\n  writableAborted: {\x0d\n    __proto__: null\x2C\x0d\n    get: function() {\x0d\n      const state = this._writableState;\x0d\n      return (\x0d\n        (state[kState] & (kHasWritable | kWritable)) !== kHasWritable &&\x0d\n        (state[kState] & (kDestroyed | kErrored)) !== 0 &&\x0d\n        (state[kState] & kFinished) === 0\x0d\n      );\x0d\n    }\x2C\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\nconst destroy = destroyImpl.destroy;\x0d\nWritable.prototype.destroy = function(err\x2C cb) {\x0d\n  const state = this._writableState;\x0d\n\x0d\n  // Invoke pending callbacks.\x0d\n  if ((state[kState] & (kBuffered | kOnFinished)) !== 0 && (state[kState] & kDestroyed) === 0) {\x0d\n    process.nextTick(errorBuffer\x2C state);\x0d\n  }\x0d\n\x0d\n  destroy.call(this\x2C err\x2C cb);\x0d\n  return this;\x0d\n};\x0d\n\x0d\nWritable.prototype._undestroy = destroyImpl.undestroy;\x0d\nWritable.prototype._destroy = function(err\x2C cb) {\x0d\n  cb(err);\x0d\n};\x0d\n\x0d\nWritable.prototype[EE.captureRejectionSymbol] = function(err) {\x0d\n  this.destroy(err);\x0d\n};\x0d\n\x0d\nlet webStreamsAdapters;\x0d\n\x0d\n// Lazy to avoid circular references\x0d\nfunction lazyWebStreams() {\x0d\n  if (webStreamsAdapters === undefined)\x0d\n    webStreamsAdapters = require('internal/webstreams/adapters');\x0d\n  return webStreamsAdapters;\x0d\n}\x0d\n\x0d\nWritable.fromWeb = function(writableStream\x2C options) {\x0d\n  return lazyWebStreams().newStreamWritableFromWritableStream(\x0d\n    writableStream\x2C\x0d\n    options);\x0d\n};\x0d\n\x0d\nWritable.toWeb = function(streamWritable) {\x0d\n  return lazyWebStreams().newWritableStreamFromStreamWritable(streamWritable);\x0d\n};\x0d\n
code-source-info,0x23f23c70d6,141,0,34230,C0O0C4O34230,,
code-creation,JS,10,2825322,0x2bb6eca2a2e,2109, node:internal/streams/writable:1:1,0x23f23c7050,~
code-source-info,0x2bb6eca2a2e
code-creation,JS,10,2825906,0xb401c448d6,33,makeBitMapDescriptor node:internal/streams/writable:120:30,0x23f23c7158,~
code-source-info,0xb401c448d6,141,3832,4034,C0O3832C9O3843C14O3881C22O3932C32O4031,,
code-creation,JS,10,2826249,0x2bb6ec9e17e,136,deprecate node:internal/util:145:19,0x3fcdef87140,~
code-source-info,0x2bb6ec9e17e,16,3905,4974,C0O3905C17O3987C25O4026C33O4048C38O4029C55O4086C59O4115C69O4115C74O4181C91O4181C96O4181C98O4661C108O4661C113O4702C116O4709C122O4906C125O4932C129O4927C133O4953C135O4971,,
code-creation,JS,10,2826342,0x2bb6ec9e3de,65,getDeprecationWarningEmitter node:internal/util:100:38,0x3fcdef86ca8,~
code-source-info,0x2bb6ec9e3de,16,2481,3114,C0O2481C57O2578C58O2578C60O2588C64O3111,,
code-creation,Eval,10,2826493,0x2bb6ec9eb2e,5, node:stream/promises:1:1,0x2bb6ec9e988,~
script-source,142,node:stream/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePop\x2C\x0d\n  Promise\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  isIterable\x2C\x0d\n  isNodeStream\x2C\x0d\n  isWebStream\x2C\x0d\n} = require('internal/streams/utils');\x0d\n\x0d\nconst { pipelineImpl: pl } = require('internal/streams/pipeline');\x0d\nconst { finished } = require('internal/streams/end-of-stream');\x0d\n\x0d\nrequire('stream');\x0d\n\x0d\nfunction pipeline(...streams) {\x0d\n  return new Promise((resolve\x2C reject) => {\x0d\n    let signal;\x0d\n    let end;\x0d\n    const lastArg = streams[streams.length - 1];\x0d\n    if (lastArg && typeof lastArg === 'object' &&\x0d\n        !isNodeStream(lastArg) && !isIterable(lastArg) && !isWebStream(lastArg)) {\x0d\n      const options = ArrayPrototypePop(streams);\x0d\n      signal = options.signal;\x0d\n      end = options.end;\x0d\n    }\x0d\n\x0d\n    pl(streams\x2C (err\x2C value) => {\x0d\n      if (err) {\x0d\n        reject(err);\x0d\n      } else {\x0d\n        resolve(value);\x0d\n      }\x0d\n    }\x2C { signal\x2C end });\x0d\n  });\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  finished\x2C\x0d\n  pipeline\x2C\x0d\n};\x0d\n
code-source-info,0x2bb6ec9eb2e,142,0,961,C0O0C4O961,,
code-creation,JS,10,2826586,0x2bb6ec9ecae,125, node:stream/promises:1:1,0x2bb6ec9eaa8,~
code-source-info,0x2bb6ec9ecae,142,0,961,C0O0C28O28C34O50C40O141C43O141C48O91C54O106C60O123C66O208C69O208C74O201C80O268C83O268C88O255C93O314C96O314C100O911C107O933C113O946C119O926C124O960,,
code-creation,Eval,10,2826924,0x2bb6ec98db6,5, node:internal/streams/transform:1:1,0x2bb6ec98bf0,~
script-source,143,node:internal/streams/transform,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a transform stream is a readable/writable stream where you do\x0d\n// something with the data.  Sometimes it's called a "filter"\x2C\x0d\n// but that's not a great name for it\x2C since that implies a thing where\x0d\n// some bits pass through\x2C and others are simply ignored.  (That would\x0d\n// be a valid example of a transform\x2C of course.)\x0d\n//\x0d\n// While the output is causally related to the input\x2C it's not a\x0d\n// necessarily symmetric or synchronous transformation.  For example\x2C\x0d\n// a zlib stream might take multiple plain-text writes()\x2C and then\x0d\n// emit a single compressed chunk some time in the future.\x0d\n//\x0d\n// Here's how this works:\x0d\n//\x0d\n// The Transform stream has all the aspects of the readable and writable\x0d\n// stream classes.  When you write(chunk)\x2C that calls _write(chunk\x2Ccb)\x0d\n// internally\x2C and returns false if there's a lot of pending writes\x0d\n// buffered up.  When you call read()\x2C that calls _read(n) until\x0d\n// there's enough pending readable data buffered up.\x0d\n//\x0d\n// In a transform stream\x2C the written data is placed in a buffer.  When\x0d\n// _read(n) is called\x2C it transforms the queued up data\x2C calling the\x0d\n// buffered _write cb's as it consumes chunks.  If consuming a single\x0d\n// written chunk would result in multiple output chunks\x2C then the first\x0d\n// outputted bit calls the readcb\x2C and subsequent chunks just go into\x0d\n// the read buffer\x2C and will cause it to emit 'readable' if necessary.\x0d\n//\x0d\n// This way\x2C back-pressure is actually determined by the reading side\x2C\x0d\n// since _read has to be called to start processing a new chunk.  However\x2C\x0d\n// a pathological inflate type of transform can cause excessive buffering\x0d\n// here.  For example\x2C imagine a stream where every byte of input is\x0d\n// interpreted as an integer from 0-255\x2C and then results in that many\x0d\n// bytes of output.  Writing the 4 bytes {ff\x2Cff\x2Cff\x2Cff} would result in\x0d\n// 1kb of data being output.  In this case\x2C you could write a very small\x0d\n// amount of input\x2C and end up with a very large amount of output.  In\x0d\n// such a pathological inflating mechanism\x2C there'd be no way to tell\x0d\n// the system to stop doing the transform.  A single 4MB write could\x0d\n// cause the system to run out of memory.\x0d\n//\x0d\n// However\x2C even in such a pathological case\x2C only a single written chunk\x0d\n// would be consumed\x2C and then the rest would wait (un-transformed) until\x0d\n// the results of the previous transformed chunk were consumed.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = Transform;\x0d\nconst {\x0d\n  ERR_METHOD_NOT_IMPLEMENTED\x2C\x0d\n} = require('internal/errors').codes;\x0d\nconst Duplex = require('internal/streams/duplex');\x0d\nconst { getHighWaterMark } = require('internal/streams/state');\x0d\nObjectSetPrototypeOf(Transform.prototype\x2C Duplex.prototype);\x0d\nObjectSetPrototypeOf(Transform\x2C Duplex);\x0d\n\x0d\nconst kCallback = Symbol('kCallback');\x0d\n\x0d\nfunction Transform(options) {\x0d\n  if (!(this instanceof Transform))\x0d\n    return new Transform(options);\x0d\n\x0d\n  // TODO (ronag): This should preferably always be\x0d\n  // applied but would be semver-major. Or even better;\x0d\n  // make Transform a Readable with the Writable interface.\x0d\n  const readableHighWaterMark = options ? getHighWaterMark(this\x2C options\x2C 'readableHighWaterMark'\x2C true) : null;\x0d\n  if (readableHighWaterMark === 0) {\x0d\n    // A Duplex will buffer both on the writable and readable side while\x0d\n    // a Transform just wants to buffer hwm number of elements. To avoid\x0d\n    // buffering twice we disable buffering on the writable side.\x0d\n    options = {\x0d\n      ...options\x2C\x0d\n      highWaterMark: null\x2C\x0d\n      readableHighWaterMark\x2C\x0d\n      writableHighWaterMark: options.writableHighWaterMark || 0\x2C\x0d\n    };\x0d\n  }\x0d\n\x0d\n  Duplex.call(this\x2C options);\x0d\n\x0d\n  // We have implemented the _read method\x2C and done the other things\x0d\n  // that Readable wants before the first _read call\x2C so unset the\x0d\n  // sync guard flag.\x0d\n  this._readableState.sync = false;\x0d\n\x0d\n  this[kCallback] = null;\x0d\n\x0d\n  if (options) {\x0d\n    if (typeof options.transform === 'function')\x0d\n      this._transform = options.transform;\x0d\n\x0d\n    if (typeof options.flush === 'function')\x0d\n      this._flush = options.flush;\x0d\n  }\x0d\n\x0d\n  // When the writable side finishes\x2C then flush out anything remaining.\x0d\n  // Backwards compat. Some Transform streams incorrectly implement _final\x0d\n  // instead of or in addition to _flush. By using 'prefinish' instead of\x0d\n  // implementing _final we continue supporting this unfortunate use case.\x0d\n  this.on('prefinish'\x2C prefinish);\x0d\n}\x0d\n\x0d\nfunction final(cb) {\x0d\n  if (typeof this._flush === 'function' && !this.destroyed) {\x0d\n    this._flush((er\x2C data) => {\x0d\n      if (er) {\x0d\n        if (cb) {\x0d\n          cb(er);\x0d\n        } else {\x0d\n          this.destroy(er);\x0d\n        }\x0d\n        return;\x0d\n      }\x0d\n\x0d\n      if (data != null) {\x0d\n        this.push(data);\x0d\n      }\x0d\n      this.push(null);\x0d\n      if (cb) {\x0d\n        cb();\x0d\n      }\x0d\n    });\x0d\n  } else {\x0d\n    this.push(null);\x0d\n    if (cb) {\x0d\n      cb();\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction prefinish() {\x0d\n  if (this._final !== final) {\x0d\n    final.call(this);\x0d\n  }\x0d\n}\x0d\n\x0d\nTransform.prototype._final = final;\x0d\n\x0d\nTransform.prototype._transform = function(chunk\x2C encoding\x2C callback) {\x0d\n  throw new ERR_METHOD_NOT_IMPLEMENTED('_transform()');\x0d\n};\x0d\n\x0d\nTransform.prototype._write = function(chunk\x2C encoding\x2C callback) {\x0d\n  const rState = this._readableState;\x0d\n  const wState = this._writableState;\x0d\n  const length = rState.length;\x0d\n\x0d\n  this._transform(chunk\x2C encoding\x2C (err\x2C val) => {\x0d\n    if (err) {\x0d\n      callback(err);\x0d\n      return;\x0d\n    }\x0d\n\x0d\n    if (val != null) {\x0d\n      this.push(val);\x0d\n    }\x0d\n\x0d\n    if (rState.ended) {\x0d\n      // If user has called this.push(null) we have to\x0d\n      // delay the callback to properly progate the new\x0d\n      // state.\x0d\n      process.nextTick(callback);\x0d\n    } else if (\x0d\n      wState.ended || // Backwards compat.\x0d\n      length === rState.length || // Backwards compat.\x0d\n      rState.length < rState.highWaterMark\x0d\n    ) {\x0d\n      callback();\x0d\n    } else {\x0d\n      this[kCallback] = callback;\x0d\n    }\x0d\n  });\x0d\n};\x0d\n\x0d\nTransform.prototype._read = function() {\x0d\n  if (this[kCallback]) {\x0d\n    const callback = this[kCallback];\x0d\n    this[kCallback] = null;\x0d\n    callback();\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x2bb6ec98db6,143,0,7325,C0O0C4O7325,,
code-creation,JS,10,2827338,0x2bb6ec9916e,202, node:internal/streams/transform:1:1,0x2bb6ec98d30,~
code-source-info,0x2bb6ec9916e,143,0,7325,C0O0C39O3574C44O3599C49O3628C51O3643C55O3701C58O3701C63O3727C68O3668C74O3751C77O3751C81O3751C83O3817C86O3817C91O3796C97O3853C100O3884C108O3902C113O3853C118O3915C124O3915C129O3977C132O3977C136O3977C138O6190C141O6200C148O6217C152O6229C155O6239C164O6260C168O6364C171O6374C180O6391C184O7163C187O7173C196O7189C201O7324,,
code-creation,Eval,10,2827519,0x2bb6ec99ec6,5, node:internal/streams/passthrough:1:1,0x2bb6ec99d60,~
script-source,144,node:internal/streams/passthrough,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n// a passthrough stream.\x0d\n// basically just the most minimal sort of Transform stream.\x0d\n// Every written chunk gets output as-is.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n} = primordials;\x0d\n\x0d\nmodule.exports = PassThrough;\x0d\n\x0d\nconst Transform = require('internal/streams/transform');\x0d\nObjectSetPrototypeOf(PassThrough.prototype\x2C Transform.prototype);\x0d\nObjectSetPrototypeOf(PassThrough\x2C Transform);\x0d\n\x0d\nfunction PassThrough(options) {\x0d\n  if (!(this instanceof PassThrough))\x0d\n    return new PassThrough(options);\x0d\n\x0d\n  Transform.call(this\x2C options);\x0d\n}\x0d\n\x0d\nPassThrough.prototype._transform = function(chunk\x2C encoding\x2C cb) {\x0d\n  cb(null\x2C chunk);\x0d\n};\x0d\n
code-source-info,0x2bb6ec99ec6,144,0,1809,C0O0C4O1809,,
code-creation,JS,10,2827648,0x2bb6ec9a05e,84, node:internal/streams/passthrough:1:1,0x2bb6ec99e40,~
code-source-info,0x2bb6ec9a05e,144,0,1809,C0O0C14O1316C19O1359C21O1374C25O1410C28O1410C32O1410C34O1450C37O1483C45O1504C50O1450C55O1517C61O1517C66O1717C69O1729C78O1750C83O1808,,
code-creation,Eval,10,2828159,0xc2df92fb0e,5, node:internal/stream_base_commons:1:1,0xc2df92f7d8,~
script-source,145,node:internal/stream_base_commons,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { Buffer } = require('buffer');\x0d\nconst { FastBuffer } = require('internal/buffer');\x0d\nconst {\x0d\n  WriteWrap\x2C\x0d\n  kReadBytesOrError\x2C\x0d\n  kArrayBufferOffset\x2C\x0d\n  kBytesWritten\x2C\x0d\n  kLastWriteWasAsync\x2C\x0d\n  streamBaseState\x2C\x0d\n} = internalBinding('stream_wrap');\x0d\nconst { UV_EOF } = internalBinding('uv');\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n} = require('internal/errors');\x0d\nconst { owner_symbol } = require('internal/async_hooks').symbols;\x0d\nconst {\x0d\n  kTimeout\x2C\x0d\n  setUnrefTimeout\x2C\x0d\n  getTimerDuration\x2C\x0d\n} = require('internal/timers');\x0d\nconst { isUint8Array } = require('internal/util/types');\x0d\nconst { clearTimeout } = require('timers');\x0d\nconst { validateFunction } = require('internal/validators');\x0d\n\x0d\nconst kMaybeDestroy = Symbol('kMaybeDestroy');\x0d\nconst kUpdateTimer = Symbol('kUpdateTimer');\x0d\nconst kAfterAsyncWrite = Symbol('kAfterAsyncWrite');\x0d\nconst kHandle = Symbol('kHandle');\x0d\nconst kSession = Symbol('kSession');\x0d\n\x0d\nlet debug = require('internal/util/debuglog').debuglog('stream'\x2C (fn) => {\x0d\n  debug = fn;\x0d\n});\x0d\nconst kBuffer = Symbol('kBuffer');\x0d\nconst kBufferGen = Symbol('kBufferGen');\x0d\nconst kBufferCb = Symbol('kBufferCb');\x0d\n\x0d\nfunction handleWriteReq(req\x2C data\x2C encoding) {\x0d\n  const { handle } = req;\x0d\n\x0d\n  switch (encoding) {\x0d\n    case 'buffer':\x0d\n    {\x0d\n      const ret = handle.writeBuffer(req\x2C data);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = data;\x0d\n      return ret;\x0d\n    }\x0d\n    case 'latin1':\x0d\n    case 'binary':\x0d\n      return handle.writeLatin1String(req\x2C data);\x0d\n    case 'utf8':\x0d\n    case 'utf-8':\x0d\n      return handle.writeUtf8String(req\x2C data);\x0d\n    case 'ascii':\x0d\n      return handle.writeAsciiString(req\x2C data);\x0d\n    case 'ucs2':\x0d\n    case 'ucs-2':\x0d\n    case 'utf16le':\x0d\n    case 'utf-16le':\x0d\n      return handle.writeUcs2String(req\x2C data);\x0d\n    default:\x0d\n    {\x0d\n      const buffer = Buffer.from(data\x2C encoding);\x0d\n      const ret = handle.writeBuffer(req\x2C buffer);\x0d\n      if (streamBaseState[kLastWriteWasAsync])\x0d\n        req.buffer = buffer;\x0d\n      return ret;\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onWriteComplete(status) {\x0d\n  debug('onWriteComplete'\x2C status\x2C this.error);\x0d\n\x0d\n  const stream = this.handle[owner_symbol];\x0d\n\x0d\n  if (stream.destroyed) {\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(null);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // TODO (ronag): This should be moved before if(stream.destroyed)\x0d\n  // in order to avoid swallowing error.\x0d\n  if (status < 0) {\x0d\n    const ex = new ErrnoException(status\x2C 'write'\x2C this.error);\x0d\n    if (typeof this.callback === 'function')\x0d\n      this.callback(ex);\x0d\n    else\x0d\n      stream.destroy(ex);\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n  stream[kAfterAsyncWrite](this);\x0d\n\x0d\n  if (typeof this.callback === 'function')\x0d\n    this.callback(null);\x0d\n}\x0d\n\x0d\nfunction createWriteWrap(handle\x2C callback) {\x0d\n  const req = new WriteWrap();\x0d\n\x0d\n  req.handle = handle;\x0d\n  req.oncomplete = onWriteComplete;\x0d\n  req.async = false;\x0d\n  req.bytes = 0;\x0d\n  req.buffer = null;\x0d\n  req.callback = callback;\x0d\n\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writevGeneric(self\x2C data\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const allBuffers = data.allBuffers;\x0d\n  let chunks;\x0d\n  if (allBuffers) {\x0d\n    chunks = data;\x0d\n    for (let i = 0; i < data.length; i++)\x0d\n      data[i] = data[i].chunk;\x0d\n  } else {\x0d\n    chunks = new Array(data.length << 1);\x0d\n    for (let i = 0; i < data.length; i++) {\x0d\n      const entry = data[i];\x0d\n      chunks[i * 2] = entry.chunk;\x0d\n      chunks[i * 2 + 1] = entry.encoding;\x0d\n    }\x0d\n  }\x0d\n  const err = req.handle.writev(req\x2C chunks\x2C allBuffers);\x0d\n\x0d\n  // Retain chunks\x0d\n  if (err === 0) req._chunks = chunks;\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction writeGeneric(self\x2C data\x2C encoding\x2C cb) {\x0d\n  const req = createWriteWrap(self[kHandle]\x2C cb);\x0d\n  const err = handleWriteReq(req\x2C data\x2C encoding);\x0d\n\x0d\n  afterWriteDispatched(req\x2C err\x2C cb);\x0d\n  return req;\x0d\n}\x0d\n\x0d\nfunction afterWriteDispatched(req\x2C err\x2C cb) {\x0d\n  req.bytes = streamBaseState[kBytesWritten];\x0d\n  req.async = !!streamBaseState[kLastWriteWasAsync];\x0d\n\x0d\n  if (err !== 0)\x0d\n    return cb(new ErrnoException(err\x2C 'write'\x2C req.error));\x0d\n\x0d\n  if (!req.async && typeof req.callback === 'function') {\x0d\n    req.callback();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction onStreamRead(arrayBuffer) {\x0d\n  const nread = streamBaseState[kReadBytesOrError];\x0d\n\x0d\n  const handle = this;\x0d\n  const stream = this[owner_symbol];\x0d\n\x0d\n  stream[kUpdateTimer]();\x0d\n\x0d\n  if (nread > 0 && !stream.destroyed) {\x0d\n    let ret;\x0d\n    let result;\x0d\n    const userBuf = stream[kBuffer];\x0d\n    if (userBuf) {\x0d\n      result = (stream[kBufferCb](nread\x2C userBuf) !== false);\x0d\n      const bufGen = stream[kBufferGen];\x0d\n      if (bufGen !== null) {\x0d\n        const nextBuf = bufGen();\x0d\n        if (isUint8Array(nextBuf))\x0d\n          stream[kBuffer] = ret = nextBuf;\x0d\n      }\x0d\n    } else {\x0d\n      const offset = streamBaseState[kArrayBufferOffset];\x0d\n      const buf = new FastBuffer(arrayBuffer\x2C offset\x2C nread);\x0d\n      result = stream.push(buf);\x0d\n    }\x0d\n    if (!result) {\x0d\n      handle.reading = false;\x0d\n      if (!stream.destroyed) {\x0d\n        const err = handle.readStop();\x0d\n        if (err)\x0d\n          stream.destroy(new ErrnoException(err\x2C 'read'));\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return ret;\x0d\n  }\x0d\n\x0d\n  if (nread === 0) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // After seeing EOF\x2C most streams will be closed permanently\x2C\x0d\n  // and will not deliver any more read events after this point.\x0d\n  // (equivalently\x2C it should have called readStop on itself already).\x0d\n  // Some streams may be reset and explicitly started again with a call\x0d\n  // to readStart\x2C such as TTY.\x0d\n\x0d\n  if (nread !== UV_EOF) {\x0d\n    // CallJSOnreadMethod expects the return value to be a buffer.\x0d\n    // Ref: https://github.com/nodejs/node/pull/34375\x0d\n    stream.destroy(new ErrnoException(nread\x2C 'read'));\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Defer this until we actually emit end\x0d\n  if (stream._readableState.endEmitted) {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream[kMaybeDestroy]();\x0d\n  } else {\x0d\n    if (stream[kMaybeDestroy])\x0d\n      stream.on('end'\x2C stream[kMaybeDestroy]);\x0d\n\x0d\n    // Push a null to signal the end of data.\x0d\n    // Do it before `maybeDestroy` for correct order of events:\x0d\n    // `end` -> `close`\x0d\n    stream.push(null);\x0d\n    stream.read(0);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction setStreamTimeout(msecs\x2C callback) {\x0d\n  if (this.destroyed)\x0d\n    return this;\x0d\n\x0d\n  this.timeout = msecs;\x0d\n\x0d\n  // Type checking identical to timers.enroll()\x0d\n  msecs = getTimerDuration(msecs\x2C 'msecs');\x0d\n\x0d\n  // Attempt to clear an existing timer in both cases -\x0d\n  //  even if it will be rescheduled we don't want to leak an existing timer.\x0d\n  clearTimeout(this[kTimeout]);\x0d\n\x0d\n  if (msecs === 0) {\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.removeListener('timeout'\x2C callback);\x0d\n    }\x0d\n  } else {\x0d\n    this[kTimeout] = setUnrefTimeout(this._onTimeout.bind(this)\x2C msecs);\x0d\n    if (this[kSession]) this[kSession][kUpdateTimer]();\x0d\n\x0d\n    if (callback !== undefined) {\x0d\n      validateFunction(callback\x2C 'callback');\x0d\n      this.once('timeout'\x2C callback);\x0d\n    }\x0d\n  }\x0d\n  return this;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  writevGeneric\x2C\x0d\n  writeGeneric\x2C\x0d\n  onStreamRead\x2C\x0d\n  kAfterAsyncWrite\x2C\x0d\n  kMaybeDestroy\x2C\x0d\n  kUpdateTimer\x2C\x0d\n  kHandle\x2C\x0d\n  kSession\x2C\x0d\n  setStreamTimeout\x2C\x0d\n  kBuffer\x2C\x0d\n  kBufferCb\x2C\x0d\n  kBufferGen\x2C\x0d\n};\x0d\n
code-source-info,0xc2df92fb0e,145,0,7337,C0O0C4O7337,,
code-creation,JS,10,2828632,0x13a35fa3cae,514, node:internal/stream_base_commons:1:1,0xc2df92fa88,~
code-source-info,0x13a35fa3cae
code-creation,Eval,10,2829242,0x13a35fb0ab6,5, node:diagnostics_channel:1:1,0x13a35fb0690,~
script-source,146,node:diagnostics_channel,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeAt\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  SafeFinalizationRegistry\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  Promise\x2C\x0d\n  PromisePrototypeThen\x2C\x0d\n  PromiseResolve\x2C\x0d\n  PromiseReject\x2C\x0d\n  ReflectApply\x2C\x0d\n  SafeMap\x2C\x0d\n  SymbolHasInstance\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_INVALID_ARG_TYPE\x2C\x0d\n  }\x2C\x0d\n} = require('internal/errors');\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { triggerUncaughtException } = internalBinding('errors');\x0d\n\x0d\nconst { WeakReference } = require('internal/util');\x0d\n\x0d\n// Can't delete when weakref count reaches 0 as it could increment again.\x0d\n// Only GC can be used as a valid time to clean up the channels map.\x0d\nclass WeakRefMap extends SafeMap {\x0d\n  #finalizers = new SafeFinalizationRegistry((key) => {\x0d\n    this.delete(key);\x0d\n  });\x0d\n\x0d\n  set(key\x2C value) {\x0d\n    this.#finalizers.register(value\x2C key);\x0d\n    return super.set(key\x2C new WeakReference(value));\x0d\n  }\x0d\n\x0d\n  get(key) {\x0d\n    return super.get(key)?.get();\x0d\n  }\x0d\n\x0d\n  incRef(key) {\x0d\n    return super.get(key)?.incRef();\x0d\n  }\x0d\n\x0d\n  decRef(key) {\x0d\n    return super.get(key)?.decRef();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markActive(channel) {\x0d\n  // eslint-disable-next-line no-use-before-define\x0d\n  ObjectSetPrototypeOf(channel\x2C ActiveChannel.prototype);\x0d\n  channel._subscribers = [];\x0d\n  channel._stores = new SafeMap();\x0d\n}\x0d\n\x0d\nfunction maybeMarkInactive(channel) {\x0d\n  // When there are no more active subscribers or bound\x2C restore to fast prototype.\x0d\n  if (!channel._subscribers.length && !channel._stores.size) {\x0d\n    // eslint-disable-next-line no-use-before-define\x0d\n    ObjectSetPrototypeOf(channel\x2C Channel.prototype);\x0d\n    channel._subscribers = undefined;\x0d\n    channel._stores = undefined;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction defaultTransform(data) {\x0d\n  return data;\x0d\n}\x0d\n\x0d\nfunction wrapStoreRun(store\x2C data\x2C next\x2C transform = defaultTransform) {\x0d\n  return () => {\x0d\n    let context;\x0d\n    try {\x0d\n      context = transform(data);\x0d\n    } catch (err) {\x0d\n      process.nextTick(() => {\x0d\n        triggerUncaughtException(err\x2C false);\x0d\n      });\x0d\n      return next();\x0d\n    }\x0d\n\x0d\n    return store.run(context\x2C next);\x0d\n  };\x0d\n}\x0d\n\x0d\n// TODO(qard): should there be a C++ channel interface?\x0d\nclass ActiveChannel {\x0d\n  subscribe(subscription) {\x0d\n    validateFunction(subscription\x2C 'subscription');\x0d\n    ArrayPrototypePush(this._subscribers\x2C subscription);\x0d\n    channels.incRef(this.name);\x0d\n  }\x0d\n\x0d\n  unsubscribe(subscription) {\x0d\n    const index = ArrayPrototypeIndexOf(this._subscribers\x2C subscription);\x0d\n    if (index === -1) return false;\x0d\n\x0d\n    ArrayPrototypeSplice(this._subscribers\x2C index\x2C 1);\x0d\n\x0d\n    channels.decRef(this.name);\x0d\n    maybeMarkInactive(this);\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  bindStore(store\x2C transform) {\x0d\n    const replacing = this._stores.has(store);\x0d\n    if (!replacing) channels.incRef(this.name);\x0d\n    this._stores.set(store\x2C transform);\x0d\n  }\x0d\n\x0d\n  unbindStore(store) {\x0d\n    if (!this._stores.has(store)) {\x0d\n      return false;\x0d\n    }\x0d\n\x0d\n    this._stores.delete(store);\x0d\n\x0d\n    channels.decRef(this.name);\x0d\n    maybeMarkInactive(this);\x0d\n\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  publish(data) {\x0d\n    for (let i = 0; i < (this._subscribers?.length || 0); i++) {\x0d\n      try {\x0d\n        const onMessage = this._subscribers[i];\x0d\n        onMessage(data\x2C this.name);\x0d\n      } catch (err) {\x0d\n        process.nextTick(() => {\x0d\n          triggerUncaughtException(err\x2C false);\x0d\n        });\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\x0d\n    let run = () => {\x0d\n      this.publish(data);\x0d\n      return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n    };\x0d\n\x0d\n    for (const entry of this._stores.entries()) {\x0d\n      const store = entry[0];\x0d\n      const transform = entry[1];\x0d\n      run = wrapStoreRun(store\x2C data\x2C run\x2C transform);\x0d\n    }\x0d\n\x0d\n    return run();\x0d\n  }\x0d\n}\x0d\n\x0d\nclass Channel {\x0d\n  constructor(name) {\x0d\n    this._subscribers = undefined;\x0d\n    this._stores = undefined;\x0d\n    this.name = name;\x0d\n\x0d\n    channels.set(name\x2C this);\x0d\n  }\x0d\n\x0d\n  static [SymbolHasInstance](instance) {\x0d\n    const prototype = ObjectGetPrototypeOf(instance);\x0d\n    return prototype === Channel.prototype ||\x0d\n           prototype === ActiveChannel.prototype;\x0d\n  }\x0d\n\x0d\n  subscribe(subscription) {\x0d\n    markActive(this);\x0d\n    this.subscribe(subscription);\x0d\n  }\x0d\n\x0d\n  unsubscribe() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  bindStore(store\x2C transform) {\x0d\n    markActive(this);\x0d\n    this.bindStore(store\x2C transform);\x0d\n  }\x0d\n\x0d\n  unbindStore() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  get hasSubscribers() {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  publish() {}\x0d\n\x0d\n  runStores(data\x2C fn\x2C thisArg\x2C ...args) {\x0d\n    return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n  }\x0d\n}\x0d\n\x0d\nconst channels = new WeakRefMap();\x0d\n\x0d\nfunction channel(name) {\x0d\n  const channel = channels.get(name);\x0d\n  if (channel) return channel;\x0d\n\x0d\n  if (typeof name !== 'string' && typeof name !== 'symbol') {\x0d\n    throw new ERR_INVALID_ARG_TYPE('channel'\x2C ['string'\x2C 'symbol']\x2C name);\x0d\n  }\x0d\n\x0d\n  return new Channel(name);\x0d\n}\x0d\n\x0d\nfunction subscribe(name\x2C subscription) {\x0d\n  return channel(name).subscribe(subscription);\x0d\n}\x0d\n\x0d\nfunction unsubscribe(name\x2C subscription) {\x0d\n  return channel(name).unsubscribe(subscription);\x0d\n}\x0d\n\x0d\nfunction hasSubscribers(name) {\x0d\n  const channel = channels.get(name);\x0d\n  if (!channel) return false;\x0d\n\x0d\n  return channel.hasSubscribers;\x0d\n}\x0d\n\x0d\nconst traceEvents = [\x0d\n  'start'\x2C\x0d\n  'end'\x2C\x0d\n  'asyncStart'\x2C\x0d\n  'asyncEnd'\x2C\x0d\n  'error'\x2C\x0d\n];\x0d\n\x0d\nfunction assertChannel(value\x2C name) {\x0d\n  if (!(value instanceof Channel)) {\x0d\n    throw new ERR_INVALID_ARG_TYPE(name\x2C ['Channel']\x2C value);\x0d\n  }\x0d\n}\x0d\n\x0d\nclass TracingChannel {\x0d\n  constructor(nameOrChannels) {\x0d\n    if (typeof nameOrChannels === 'string') {\x0d\n      this.start = channel(`tracing:${nameOrChannels}:start`);\x0d\n      this.end = channel(`tracing:${nameOrChannels}:end`);\x0d\n      this.asyncStart = channel(`tracing:${nameOrChannels}:asyncStart`);\x0d\n      this.asyncEnd = channel(`tracing:${nameOrChannels}:asyncEnd`);\x0d\n      this.error = channel(`tracing:${nameOrChannels}:error`);\x0d\n    } else if (typeof nameOrChannels === 'object') {\x0d\n      const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = nameOrChannels;\x0d\n\x0d\n      assertChannel(start\x2C 'nameOrChannels.start');\x0d\n      assertChannel(end\x2C 'nameOrChannels.end');\x0d\n      assertChannel(asyncStart\x2C 'nameOrChannels.asyncStart');\x0d\n      assertChannel(asyncEnd\x2C 'nameOrChannels.asyncEnd');\x0d\n      assertChannel(error\x2C 'nameOrChannels.error');\x0d\n\x0d\n      this.start = start;\x0d\n      this.end = end;\x0d\n      this.asyncStart = asyncStart;\x0d\n      this.asyncEnd = asyncEnd;\x0d\n      this.error = error;\x0d\n    } else {\x0d\n      throw new ERR_INVALID_ARG_TYPE('nameOrChannels'\x2C\x0d\n                                     ['string'\x2C 'object'\x2C 'Channel']\x2C\x0d\n                                     nameOrChannels);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  subscribe(handlers) {\x0d\n    for (const name of traceEvents) {\x0d\n      if (!handlers[name]) continue;\x0d\n\x0d\n      this[name]?.subscribe(handlers[name]);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  unsubscribe(handlers) {\x0d\n    let done = true;\x0d\n\x0d\n    for (const name of traceEvents) {\x0d\n      if (!handlers[name]) continue;\x0d\n\x0d\n      if (!this[name]?.unsubscribe(handlers[name])) {\x0d\n        done = false;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return done;\x0d\n  }\x0d\n\x0d\n  traceSync(fn\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C error } = this;\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        const result = ReflectApply(fn\x2C thisArg\x2C args);\x0d\n        context.result = result;\x0d\n        return result;\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  tracePromise(fn\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\x0d\n\x0d\n    function reject(err) {\x0d\n      context.error = err;\x0d\n      error.publish(context);\x0d\n      asyncStart.publish(context);\x0d\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\x0d\n      asyncEnd.publish(context);\x0d\n      return PromiseReject(err);\x0d\n    }\x0d\n\x0d\n    function resolve(result) {\x0d\n      context.result = result;\x0d\n      asyncStart.publish(context);\x0d\n      // TODO: Is there a way to have asyncEnd _after_ the continuation?\x0d\n      asyncEnd.publish(context);\x0d\n      return result;\x0d\n    }\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        let promise = ReflectApply(fn\x2C thisArg\x2C args);\x0d\n        // Convert thenables to native promises\x0d\n        if (!(promise instanceof Promise)) {\x0d\n          promise = PromiseResolve(promise);\x0d\n        }\x0d\n        return PromisePrototypeThen(promise\x2C resolve\x2C reject);\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n\x0d\n  traceCallback(fn\x2C position = -1\x2C context = {}\x2C thisArg\x2C ...args) {\x0d\n    const { start\x2C end\x2C asyncStart\x2C asyncEnd\x2C error } = this;\x0d\n\x0d\n    function wrappedCallback(err\x2C res) {\x0d\n      if (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n      } else {\x0d\n        context.result = res;\x0d\n      }\x0d\n\x0d\n      // Using runStores here enables manual context failure recovery\x0d\n      asyncStart.runStores(context\x2C () => {\x0d\n        try {\x0d\n          return ReflectApply(callback\x2C this\x2C arguments);\x0d\n        } finally {\x0d\n          asyncEnd.publish(context);\x0d\n        }\x0d\n      });\x0d\n    }\x0d\n\x0d\n    const callback = ArrayPrototypeAt(args\x2C position);\x0d\n    validateFunction(callback\x2C 'callback');\x0d\n    ArrayPrototypeSplice(args\x2C position\x2C 1\x2C wrappedCallback);\x0d\n\x0d\n    return start.runStores(context\x2C () => {\x0d\n      try {\x0d\n        return ReflectApply(fn\x2C thisArg\x2C args);\x0d\n      } catch (err) {\x0d\n        context.error = err;\x0d\n        error.publish(context);\x0d\n        throw err;\x0d\n      } finally {\x0d\n        end.publish(context);\x0d\n      }\x0d\n    });\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction tracingChannel(nameOrChannels) {\x0d\n  return new TracingChannel(nameOrChannels);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  channel\x2C\x0d\n  hasSubscribers\x2C\x0d\n  subscribe\x2C\x0d\n  tracingChannel\x2C\x0d\n  unsubscribe\x2C\x0d\n  Channel\x2C\x0d\n};\x0d\n
code-source-info,0x13a35fb0ab6,146,0,10083,C0O0C4O10083,,
code-creation,JS,10,2830016,0x13a35facbae,616, node:diagnostics_channel:1:1,0x13a35fb0a30,~
code-source-info,0x13a35facbae,146,0,10083,C0O0C131O28C137O49C143O75C149O98C155O123C161O152C167O177C173O202C179O214C185O239C191O258C197O276C203O293C209O305C214O403C217O403C222O363C227O370C233O466C236O466C241O443C247O538C250O538C255O509C261O594C264O594C269O576C297O793C354O768C409O2255C427O4063C503O3883C505O4726C507O4726C512O4726C514O5386C518O5386C565O5611C567O9967C574O9989C580O10001C586O10020C592O10034C598O10053C604O10069C610O9982C615O10082,,
code-creation,JS,10,2830084,0x13a35facf8e,40,<instance_members_initializer> node:diagnostics_channel:35:1,0x13a35fb0f98,~
code-source-info,0x13a35facf8e,146,768,1198,C0O768C14O820C28O820C39O1198,,
code-creation,JS,10,2830288,0x8c1d1468a6,52,WeakRefMap node:diagnostics_channel:35:1,0x13a35fb0e08,~
code-source-info,0x8c1d1468a6,146,768,768,C0O768C5O768C29O768C51O768,,
code-creation,JS,10,2830389,0x8c1d147a8e,70,channel node:diagnostics_channel:213:17,0x13a35fb0c28,~
code-source-info,0x8c1d147a8e,146,4763,5022,C0O4791C5O4800C10O4800C16O4814C18O4827C20O4842C21O4848C33O4913C51O4919C56O4913C57O4994C64O5001C69O5019,,
code-creation,JS,10,2830451,0x8c1d147bbe,34,get node:diagnostics_channel:45:6,0x13a35fb0ea8,~
code-source-info,0x8c1d147bbe,146,1024,1071,C0O1037C2O1050C13O1050C21O1058C26O1060C33O1066,,
code-creation,JS,10,2830505,0x8c1d147d0e,36,Channel node:diagnostics_channel:168:14,0x13a35fb1278,~
code-source-info,0x8c1d147d0e,146,3913,4049,C0O3927C1O3945C5O3963C6O3976C10O3994C12O4004C16O4019C23O4028C28O4028C35O4048,,
code-creation,JS,10,2830571,0x8c1d147f8e,51,set node:diagnostics_channel:40:6,0x13a35fb0e58,~
code-source-info,0x8c1d147f8e,146,898,1015,C0O918C2O923C6O935C11O935C17O962C19O975C28O988C33O984C45O975C50O1010,,
code-creation,JS,10,2830628,0x8c1d1480f6,37,WeakReference node:internal/util:832:14,0x3fcdef891c8,~
code-source-info,0x8c1d1480f6,16,23816,23874,C0O23816C14O23832C21O23849C26O23845C31O23843C36O23873,,
code-creation,JS,10,2830685,0x8c1d148346,43,SafeWeakRef node:internal/per_context/primordials:447:16,0x23399f5b70,~
code-source-info,0x8c1d148346,6,13411,13438,C3O13422C27O13422C42O13437,,
code-creation,JS,10,2830900,0x8c1d148b06,34,protoGetter node:net:866:21,0x1760ce82cd8,~
code-source-info,0x8c1d148b06,127,23559,23728,C0O23581C8O23609C13O23620C20O23709C27O23581C33O23727,,
code-creation,Eval,10,2831243,0x38500587746,5, node:internal/tty:1:1,0x385005874f0,~
script-source,147,node:internal/tty,// MIT License\x0d\n\x0d\n// Copyright (c) Sindre Sorhus <sindresorhus@gmail.com> (sindresorhus.com)\x0d\n\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a copy\x0d\n// of this software and associated documentation files (the "Software")\x2C to deal\x0d\n// in the Software without restriction\x2C including without limitation the rights\x0d\n// to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C distribute\x2C sublicense\x2C and/or sell\x0d\n// copies of the Software\x2C and to permit persons to whom the Software is\x0d\n// furnished to do so\x2C subject to the following conditions:\x0d\n\x0d\n// The above copyright notice and this permission notice shall be included in\x0d\n// all copies or substantial portions of the Software.\x0d\n\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS OR\x0d\n// IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY\x2C\x0d\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\x0d\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C DAMAGES OR OTHER\x0d\n// LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR OTHERWISE\x2C ARISING FROM\x2C\x0d\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\x0d\n// SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSome\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { validateInteger } = require('internal/validators');\x0d\n\x0d\nlet OSRelease;\x0d\n\x0d\nconst COLORS_2 = 1;\x0d\nconst COLORS_16 = 4;\x0d\nconst COLORS_256 = 8;\x0d\nconst COLORS_16m = 24;\x0d\n\x0d\n// Some entries were taken from `dircolors`\x0d\n// (https://linux.die.net/man/1/dircolors). The corresponding terminals might\x0d\n// support more than 16 colors\x2C but this was not tested for.\x0d\n//\x0d\n// Copyright (C) 1996-2016 Free Software Foundation\x2C Inc. Copying and\x0d\n// distribution of this file\x2C with or without modification\x2C are permitted\x0d\n// provided the copyright notice and this notice are preserved.\x0d\nconst TERM_ENVS = {\x0d\n  'eterm': COLORS_16\x2C\x0d\n  'cons25': COLORS_16\x2C\x0d\n  'console': COLORS_16\x2C\x0d\n  'cygwin': COLORS_16\x2C\x0d\n  'dtterm': COLORS_16\x2C\x0d\n  'gnome': COLORS_16\x2C\x0d\n  'hurd': COLORS_16\x2C\x0d\n  'jfbterm': COLORS_16\x2C\x0d\n  'konsole': COLORS_16\x2C\x0d\n  'kterm': COLORS_16\x2C\x0d\n  'mlterm': COLORS_16\x2C\x0d\n  'mosh': COLORS_16m\x2C\x0d\n  'putty': COLORS_16\x2C\x0d\n  'st': COLORS_16\x2C\x0d\n  // https://github.com/da-x/rxvt-unicode/tree/v9.22-with-24bit-color\x0d\n  'rxvt-unicode-24bit': COLORS_16m\x2C\x0d\n  // https://gist.github.com/XVilka/8346728#gistcomment-2823421\x0d\n  'terminator': COLORS_16m\x2C\x0d\n};\x0d\n\x0d\nconst TERM_ENVS_REG_EXP = [\x0d\n  /ansi/\x2C\x0d\n  /color/\x2C\x0d\n  /linux/\x2C\x0d\n  /^con[0-9]*x[0-9]/\x2C\x0d\n  /^rxvt/\x2C\x0d\n  /^screen/\x2C\x0d\n  /^xterm/\x2C\x0d\n  /^vt100/\x2C\x0d\n];\x0d\n\x0d\nlet warned = false;\x0d\nfunction warnOnDeactivatedColors(env) {\x0d\n  if (warned)\x0d\n    return;\x0d\n  let name = '';\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined)\x0d\n    name = 'NODE_DISABLE_COLORS';\x0d\n  if (env.NO_COLOR !== undefined) {\x0d\n    if (name !== '') {\x0d\n      name += "' and '";\x0d\n    }\x0d\n    name += 'NO_COLOR';\x0d\n  }\x0d\n\x0d\n  if (name !== '') {\x0d\n    process.emitWarning(\x0d\n      `The '${name}' env is ignored due to the 'FORCE_COLOR' env being set.`\x2C\x0d\n      'Warning'\x2C\x0d\n    );\x0d\n    warned = true;\x0d\n  }\x0d\n}\x0d\n\x0d\n// The `getColorDepth` API got inspired by multiple sources such as\x0d\n// https://github.com/chalk/supports-color\x2C\x0d\n// https://github.com/isaacs/color-support.\x0d\nfunction getColorDepth(env = process.env) {\x0d\n  // Use level 0-3 to support the same levels as `chalk` does. This is done for\x0d\n  // consistency throughout the ecosystem.\x0d\n  if (env.FORCE_COLOR !== undefined) {\x0d\n    switch (env.FORCE_COLOR) {\x0d\n      case '':\x0d\n      case '1':\x0d\n      case 'true':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16;\x0d\n      case '2':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_256;\x0d\n      case '3':\x0d\n        warnOnDeactivatedColors(env);\x0d\n        return COLORS_16m;\x0d\n      default:\x0d\n        return COLORS_2;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (env.NODE_DISABLE_COLORS !== undefined ||\x0d\n      // See https://no-color.org/\x0d\n      env.NO_COLOR !== undefined ||\x0d\n      // The "dumb" special terminal\x2C as defined by terminfo\x2C doesn't support\x0d\n      // ANSI color control codes.\x0d\n      // See https://invisible-island.net/ncurses/terminfo.ti.html#toc-_Specials\x0d\n      env.TERM === 'dumb') {\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if (process.platform === 'win32') {\x0d\n    // Lazy load for startup performance.\x0d\n    if (OSRelease === undefined) {\x0d\n      const { release } = require('os');\x0d\n      OSRelease = StringPrototypeSplit(release()\x2C '.');\x0d\n    }\x0d\n    // Windows 10 build 10586 is the first Windows release that supports 256\x0d\n    // colors. Windows 10 build 14931 is the first release that supports\x0d\n    // 16m/TrueColor.\x0d\n    if (+OSRelease[0] >= 10) {\x0d\n      const build = +OSRelease[2];\x0d\n      if (build >= 14931)\x0d\n        return COLORS_16m;\x0d\n      if (build >= 10586)\x0d\n        return COLORS_256;\x0d\n    }\x0d\n\x0d\n    return COLORS_16;\x0d\n  }\x0d\n\x0d\n  if (env.TMUX) {\x0d\n    return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.CI) {\x0d\n    if ([\x0d\n      'APPVEYOR'\x2C\x0d\n      'BUILDKITE'\x2C\x0d\n      'CIRCLECI'\x2C\x0d\n      'DRONE'\x2C\x0d\n      'GITHUB_ACTIONS'\x2C\x0d\n      'GITLAB_CI'\x2C\x0d\n      'TRAVIS'\x2C\x0d\n    ].some((sign) => sign in env) || env.CI_NAME === 'codeship') {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n    return COLORS_2;\x0d\n  }\x0d\n\x0d\n  if ('TEAMCITY_VERSION' in env) {\x0d\n    return RegExpPrototypeExec(/^(9\\.(0*[1-9]\\d*)\\.|\\d{2\x2C}\\.)/\x2C env.TEAMCITY_VERSION) !== null ?\x0d\n      COLORS_16 : COLORS_2;\x0d\n  }\x0d\n\x0d\n  switch (env.TERM_PROGRAM) {\x0d\n    case 'iTerm.app':\x0d\n      if (!env.TERM_PROGRAM_VERSION ||\x0d\n        RegExpPrototypeExec(/^[0-2]\\./\x2C env.TERM_PROGRAM_VERSION) !== null\x0d\n      ) {\x0d\n        return COLORS_256;\x0d\n      }\x0d\n      return COLORS_16m;\x0d\n    case 'HyperTerm':\x0d\n    case 'MacTerm':\x0d\n      return COLORS_16m;\x0d\n    case 'Apple_Terminal':\x0d\n      return COLORS_256;\x0d\n  }\x0d\n\x0d\n  if (env.COLORTERM === 'truecolor' || env.COLORTERM === '24bit') {\x0d\n    return COLORS_16m;\x0d\n  }\x0d\n\x0d\n  if (env.TERM) {\x0d\n    if (RegExpPrototypeExec(/^xterm-256/\x2C env.TERM) !== null) {\x0d\n      return COLORS_256;\x0d\n    }\x0d\n\x0d\n    const termEnv = StringPrototypeToLowerCase(env.TERM);\x0d\n\x0d\n    if (TERM_ENVS[termEnv]) {\x0d\n      return TERM_ENVS[termEnv];\x0d\n    }\x0d\n    if (ArrayPrototypeSome(TERM_ENVS_REG_EXP\x2C\x0d\n                           (term) => RegExpPrototypeExec(term\x2C termEnv) !== null)) {\x0d\n      return COLORS_16;\x0d\n    }\x0d\n  }\x0d\n  // Move 16 color COLORTERM below 16m and 256\x0d\n  if (env.COLORTERM) {\x0d\n    return COLORS_16;\x0d\n  }\x0d\n  return COLORS_2;\x0d\n}\x0d\n\x0d\nfunction hasColors(count\x2C env) {\x0d\n  if (env === undefined &&\x0d\n      (count === undefined || (typeof count === 'object' && count !== null))) {\x0d\n    env = count;\x0d\n    count = 16;\x0d\n  } else {\x0d\n    validateInteger(count\x2C 'count'\x2C 2);\x0d\n  }\x0d\n\x0d\n  return count <= 2 ** getColorDepth(env);\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  getColorDepth\x2C\x0d\n  hasColors\x2C\x0d\n};\x0d\n
code-source-info,0x38500587746,147,0,6722,C0O0C4O6722,,
code-creation,JS,10,2831740,0x38500587ba6,366, node:internal/tty:1:1,0x385005876c0,~
code-source-info,0x38500587ba6,147,0,6722,C0O0C69O1211C75O1234C81O1258C87O1283C93O1360C99O1360C104O1340C110O1399C111O1399C113O1430C115O1430C117O1452C119O1452C121O1475C123O1475C125O1498C127O1498C129O1924C136O1938C142O1962C148O1987C154O2011C160O2035C166O2058C172O2080C178O2105C184O2130C190O2153C196O2177C202O2199C208O2223C214O2243C220O2350C226O2444C232O1924C234O2489C336O2489C338O2621C339O2621C341O6666C348O6688C354O6706C360O6681C365O6721,,
code-creation,JS,10,2832016,0x38500589396,192,WriteStream node:tty:84:21,0x39c990c2ad8,~
code-source-info,0x38500589396,126,2588,3571,C0O2598C2O2609C7O2639C12O2646C17O2666C18O2670C20O2677C26O2682C32O2695C37O2705C44O2711C49O2705C50O2752C52O2771C65O2771C71O2800C77O2827C84O2833C89O2827C90O2873C95O2877C100O2884C112O2941C116O2884C122O3374C127O3382C134O3382C139O3422C149O3422C155O3456C160O3464C165O3464C171O3491C173O3508C174O3530C177O3521C181O3540C183O3559C186O3550C191O3570,,
code-creation,JS,10,2832289,0x13a35fa2036,942,Socket node:net:353:16,0x1760ce82b48,~
code-source-info,0x13a35fa
code-creation,JS,10,2832638,0x13a35f9d13e,504,Duplex node:internal/streams/duplex:62:16,0x2bb6ec9bb90,~
code-source-info,0x13a35f9d13e
code-creation,JS,10,2832837,0x13a35f9dd1e,254,Readable node:internal/streams/readable:318:18,0x2bb6ec82688,~
code-source-info,0x13a35f9dd1e,137,10417,11476,C0O10417C9O10432C16O10443C21O10470C28O10477C33O10499C34O10505C51O10536C56O10559C61O10581C66O10602C71O10628C77O10518C81O10875C99O10897C104O10895C108O10943C112O10982C120O11010C123O11031C127O11021C131O11063C139O11094C142O11118C146O11108C150O11153C158O11186C161O11212C165O11202C169O11242C175O11257C182O11280C190O11257C195O11305C202O11312C210O11312C216O11338C219O11347C226O11374C233O11386C246O11386C253O11475,,
code-creation,JS,10,2832936,0x13a35f9dfa6,18,Stream node:internal/streams/legacy:11:16,0x5c3c49798,~
code-source-info,0x13a35f9dfa6,136,155,190,C0O167C5O170C10O170C17O189,,
code-creation,JS,10,2833305,0x8c1d1792c6,379,ReadableState node:internal/streams/readable:260:23,0x2bb6ec82638,~
code-source-info,0x8c1d1792c6,137,8205,10228,C0O8356C2O8361C7O8371C12O8384C14O8382C20O8399C22O8397C28O8414C30O8412C33O8369C37O8550C41O8573C47O8590C49O8595C58O8606C63O8603C67O8624C73O8640C75O8659C81O8684C83O8689C92O8700C97O8697C101O8862C106O8883C110O8898C125O8898C134O8972C139O8972C143O8881C147O9009C149O9021C153O9030C154O9047C158O9055C159O9067C163O9075C165O9086C169O9157C173O9180C183O9201C185O9206C194O9218C196O9217C201O9214C205O9309C209O9332C219O9355C221O9360C230O9372C232O9371C237O9368C241O9613C248O9620C256O9642C261O9689C268O9719C273O9739C275O9744C284O9755C289O9752C295O9787C300O9798C305O9798C312O9834C314O9855C320O9891C327O9897C332O9891C333O10054C334O10077C338O10090C342O10113C348O10130C350O10149C353O10171C360O10145C365O10143C369O10211C373O10201C378O10227,,
code-creation,JS,10,2833475,0x8c1d17971e,98,getHighWaterMark node:internal/streams/state:32:26,0x13a35fa8fa0,~
code-source-info,0x8c1d17971e,139,857,1277,C0O912C12O912C18O964C21O988C26O993C33O1021C38O1048C47O1070C56O1116C69O1122C74O1116C75O1172C80O1179C84O1194C85O1225C88O1262C93O1232C97O1274,,
code-creation,JS,10,2833540,0x8c1d179a26,26,highWaterMarkFrom node:internal/streams/state:14:27,0x13a35fa8eb0,~
code-source-info,0x8c1d179a26,139,326,470,C0O377C7O409C15O430C19O448C25O467,,
code-creation,JS,10,2833682,0x8c1d16e4a6,418,WritableState node:internal/streams/writable:296:23,0x23f23c71d0,~
code-source-info,0x8c1d16e4a6,141,9515,11852,C0O9666C2O9671C7O9681C12O9689C14O9687C20O9704C22O9702C28O9717C30O9715C33O9679C37O9736C41O9759C47O9776C49O9781C58O9792C63O9789C67O9810C73O9826C75O9845C81O9870C83O9875C92O9886C97O9883C101O10092C106O10113C110O10128C125O10128C134O10202C139O10202C143O10111C147O10239C151O10263C161O10288C163O10293C172O10304C177O10301C181O10385C185O10408C195O10429C197O10434C206O10446C208O10445C213O10442C217O10537C221O10560C231O10583C233O10588C242O10600C244O10599C249O10596C253O10841C257O10859C265O10886C270O10933C277O10963C282O10983C284O10988C293O10999C298O10996C304O11031C309O11042C314O11042C321O11078C323O11083C332O11095C334O11094C339O11091C343O11122C345O11127C350O11150C356O11186C363O11192C368O11186C369O11395C370O11407C374O11483C375O11495C379O11560C382O11583C389O11583C395O11573C399O11675C400O11689C404O11699C407O11699C411O11830C412O11845C417O11851,,
code-creation,JS,10,2833827,0x8c1d16e8e6,22,get node:internal/streams/writable:123:8,0xb401c44778,~
code-source-info,0x8c1d16e8e6,141,3884,3925,C0O3889C4O3902C6O3901C12O3910C17O3917C21O3923,,
tick,0x7ff6cbd529f2,2833938,0,0x0,3,0x7ff6cbdbb8d0,0x8c1d179776,0x8c1d16e523,0x13a35f9d1d9,0x13a35fa21ab,0x3850058940a,0x39c990c2242,0x24f91a02a5f,0x24f91a0285f,0x24f91a02746,0x24f91a0260e,0x7ff6cb6a2cb0,0xc2df91015b,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,2833998,0x8c1d16e9de,15,getDefaultHighWaterMark node:internal/streams/state:19:33,0x13a35fa8f00,~
code-source-info,0x8c1d16e9de,139,506,606,C0O524C6O544C12O577C14O603,,
code-creation,JS,10,2834084,0x8c1d16ec96,67,resetBuffer node:internal/streams/writable:356:21,0x23f23c7220,~
code-source-info,0x8c1d16ec96,141,11876,12025,C0O11889C2O11895C6O11911C10O11922C11O11942C15O11950C17O11956C26O11967C31O11981C33O11979C39O11964C43O11994C45O12000C54O12012C56O12011C61O12008C66O12024,,
code-creation,JS,10,2834201,0x8c1d16ef96,164,EventEmitter.init node:events:341:29,0x3fcdef90ee8,~
code-source-info,0x8c1d16ef96,23,10249,10931,C0O10272C6O10309C13O10321C16O10321C21O10347C25O10317C30O10364C34O10377C38O10405C39O10423C43O10433C45O10438C49O10450C55O10476C57O10481C61O10493C65O10537C75O10530C79O10572C86O10580C95O10608C100O10629C108O10608C113O10683C115O10688C120O10700C123O10713C128O10700C132O10698C138O10873C140O10878C146O10903C153O10913C155O10912C158O10888C163O10930,,
code-creation,JS,10,2834306,0x8c1d16f246,14,set node:net:2342:6,0x2bb6ec93300,~
code-source-info,0x8c1d16f246,127,67537,67570,C0O67543C2O67555C7O67564C13O67568,,
code-creation,JS,10,2834354,0x8c1d16f32e,8,get node:net:2341:6,0x2bb6ec932b0,~
code-source-info,0x8c1d16f32e,127,67501,67529,C0O67506C2O67518C4O67517C7O67527,,
code-creation,JS,10,2834406,0x8c1d16f416,32,getNewAsyncId node:net:184:23,0x1760ce827d8,~
code-source-info,0x8c1d16f416,127,5136,5255,C0O5150C4O5183C14O5217C17O5217C22O5239C27O5239C31O5252,,
code-creation,JS,10,2834543,0x1c66f8f642e,329,Readable.on node:internal/streams/readable:1125:33,0x2bb6ecb6a78,~
code-source-info,0x1c66f8f642e
code-creation,JS,10,2834684,0x1c66f8f66ee,20,addListener node:events:609:58,0x3fcdef91cd0,~
code-source-info,0x1c66f8f66ee,23,18372,18446,C0O18394C14O18401C19O18443,,
code-creation,JS,10,2834824,0x1c66f8f69ce,371,_addListener node:events:546:22,0x3fcdef917d8,~
code-source-info,0x1c66f8f69ce
code-creation,JS,10,2834979,0x1c66f8f6cd6,15,checkListener node:events:274:23,0x3fcdef90c20,~
code-source-info,0x1c66f8f6cd6,23,8320,8378,C0O8336C8O8336C14O8377,,
code-creation,JS,10,2835043,0x1c66f8f6dc6,30, node:internal/validators:453:42,0x3fcdef859a0,~
code-source-info,0x1c66f8f6dc6,15,13318,13437,C0O13340C6O13378C22O13384C27O13378C29O13436,,
code-creation,JS,10,2835145,0x1c66f8f6f76,135,initSocketHandle node:net:309:26,0x1760ce82aa8,~
code-source-info,0x1c66f8f6f76,127,8198,8798,C0O8215C5O8215C9O8232C10O8247C14O8336C20O8357C27O8365C32O8379C36O8397C43O8414C45O8412C49O8433C51O8438C57O8476C62O8457C66O8455C70O8507C72O8512C74O8511C78O8527C80O8564C82O8569C84O8568C88O8589C90O8631C94O8650C99O8655C105O8689C106O8696C107O8706C109O8711C114O8720C118O8752C123O8760C128O8760C134O8797,,
code-creation,JS,10,2835288,0x1c66f8f71ae,155,undestroy node:internal/streams/destroy:172:19,0x5c3c47b80,~
code-source-info,0x1c66f8f71ae,134,3362,4063,C0O3385C5O3419C10O3440C14O3454C15O3468C19O3481C20O3490C24O3504C25O3519C29O3533C30O3545C34O3559C35O3569C39O3582C40O3597C44O3611C45O3621C49O3647C57O3643C61O3689C69O3685C73O3719C77O3733C78O3747C82O3760C83O3772C87O3786C88O3795C92O3809C93O3824C97O3838C98O3848C102O3861C103O3876C107O3890C108O3904C112O3918C113O3932C117O3958C125O3954C129O3996C137O3992C141O4036C149O4032C154O4062,,
code-creation,JS,10,2835392,0x2bcf6ac1d3e,50,set node:internal/streams/readable:131:8,0x13a35fa7b10,~
code-source-info,0x2bcf6ac1d3e,137,3991,4080,C0O4008C4O4019C8O4024C17O4035C20O4032C26O4052C30O4057C39O4068C44O4065C49O4079,,
code-creation,JS,10,2835457,0x2bcf6ac1e5e,61,set node:internal/streams/readable:184:8,0x2bb6ec83090,~
code-source-info,0x2bcf6ac1e5e,137,6409,6579,C0O6426C4O6448C6O6453C11O6468C15O6486C17O6491C26O6502C31O6499C37O6537C39O6542C48O6554C50O6553C55O6550C60O6578,,
code-creation,JS,10,2835526,0x2bcf6ac1f96,50,set node:internal/streams/writable:124:8,0xb401c447c8,~
code-source-info,0x2bcf6ac1f96,141,3935,4024,C0O3952C4O3963C8O3968C17O3979C20O3976C26O3996C30O4001C39O4012C44O4009C49O4023,,
code-creation,JS,10,2835590,0x2bcf6ac20b6,61,set node:internal/streams/writable:209:8,0x23f23c7810,~
code-source-info,0x2bcf6ac20b6,141,7165,7335,C0O7182C4O7204C6O7209C11O7224C15O7242C17O7247C26O7258C31O7255C37O7293C39O7298C48O7310C50O7309C55O7306C60O7334,,
code-creation,JS,10,2835659,0x2bcf6ac21fe,47,get node:internal/streams/writable:222:8,0x23f23c7860,~
code-source-info,0x2bcf6ac21fe,141,7414,7511,C0O7419C2O7432C4O7431C10O7442C12O7440C17O7456C24O7470C26O7469C32O7480C34O7478C39O7491C46O7509,,
code-creation,JS,10,2835983,0x2bcf6ac2a16,381,emit node:events:465:44,0x3fcdef91390,~
code-source-info,0x2bcf6ac2a16,23,13843,16212,C0O13843C8O13878C10O13884C14O13923C19O13935C21O13968C27O13990C29O13989C34O14032C41O14037C51O14032C56O14067C60O14096C68O14128C72O14147C73O14160C74O14222C78O14246C80O14264C86O14271C91O14283C92O14292C96O14302C98O14320C100O14309C108O14367C110O14380C120O14425C126O14435C132O14380C137O14451C145O14476C157O14554C174O14554C186O14451C197O14886C199O14886C200O14941C205O14974C211O14990C219O14988C220O15025C225O15126C232O15126C238O15171C240O15183C244O15194C246O15194C247O15258C249O15264C253O15277C255O15309C256O15322C257O15328C263O15393C268O15393C275O15552C281O15606C296O15606C303O15686C308O15717C311O15717C316O15756C318O15761C320O15761C325O15797C327O15806C332O15810C337O15810C344O16079C350O16135C365O16135C370O15770C375O15743C379O16197C380O16209,,
code-creation,JS,10,2836184,0x2bcf6ac2dbe,177,startListeningIfSignal node:internal/process/signal:22:32,0x3fcdefb23c0,~
script-source,55,node:internal/process/signal,'use strict';\x0d\n\x0d\nconst {\x0d\n  FunctionPrototypeBind\x2C\x0d\n  SafeMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  ErrnoException\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst { signals } = internalBinding('constants').os;\x0d\n\x0d\nlet Signal;\x0d\nconst signalWraps = new SafeMap();\x0d\n\x0d\nfunction isSignal(event) {\x0d\n  return typeof event === 'string' && signals[event] !== undefined;\x0d\n}\x0d\n\x0d\n// Detect presence of a listener for the special signal types\x0d\nfunction startListeningIfSignal(type) {\x0d\n  if (isSignal(type) && !signalWraps.has(type)) {\x0d\n    if (Signal === undefined)\x0d\n      Signal = internalBinding('signal_wrap').Signal;\x0d\n    const wrap = new Signal();\x0d\n\x0d\n    wrap.unref();\x0d\n\x0d\n    wrap.onsignal = FunctionPrototypeBind(process.emit\x2C process\x2C type\x2C type);\x0d\n\x0d\n    const signum = signals[type];\x0d\n    const err = wrap.start(signum);\x0d\n    if (err) {\x0d\n      wrap.close();\x0d\n      throw new ErrnoException(err\x2C 'uv_signal_start');\x0d\n    }\x0d\n\x0d\n    signalWraps.set(type\x2C wrap);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction stopListeningIfSignal(type) {\x0d\n  const wrap = signalWraps.get(type);\x0d\n  if (wrap !== undefined && process.listenerCount(type) === 0) {\x0d\n    wrap.close();\x0d\n    signalWraps.delete(type);\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  startListeningIfSignal\x2C\x0d\n  stopListeningIfSignal\x2C\x0d\n};\x0d\n
code-source-info,0x2bcf6ac2dbe,55,450,948,C0O462C3O466C11O485C14O497C19O497C26O515C32O548C38O557C43O587C50O555C56O614C61O614C67O640C72O640C76O656C78O672C84O702C98O672C103O670C107O752C114O759C118O789C123O789C129O809C131O832C136O832C140O848C153O854C158O848C159O912C164O924C169O924C176O947,,
code-creation,JS,10,2836355,0x2bcf6ac3166,19,isSignal node:internal/process/signal:17:18,0x3fcdefb21d0,~
code-source-info,0x2bcf6ac3166,55,271,352,C0O284C8O320C13O327C17O335C18O349,,
code-creation,JS,10,2836486,0x2bcf6ac39c6,21,addCleanup node:internal/bootstrap/switches/is_main_thread:142:20,0x3fcdefb13f0,~
code-source-info,0x2bcf6ac39c6,53,3799,3875,C0O3809C5O3813C10O3842C15O3842C20O3874,,
code-creation,JS,10,2836539,0x2bcf6ac3ab6,10,isBuildingSnapshot node:internal/v8/startup_snapshot:21:28,0x3fcdefb1888,~
code-source-info,0x2bcf6ac3ab6,54,480,526,C0O488C6O519C9O523,,
code-creation,JS,10,2836612,0x2bcf6ac3bee,81,value node:internal/console/constructor:319:20,0x3fcdefab4e8,~
code-source-info,0x2bcf6ac3bee,46,9942,10359,C0O9972C2O9977C4O9976C8O9997C10O10007C15O10030C18O10038C22O10054C27O10055C33O10113C38O10124C43O10124C49O10142C51O10178C57O10213C59O10228C63O10257C65O10272C66O10291C72O10306C78O10329C80O10352,,
code-creation,JS,10,2836683,0x2bcf6ac3d76,32,lazyUtilColors node:internal/console/constructor:83:24,0x3fcdefa9a28,~
code-source-info,0x2bcf6ac3d76,46,1980,2060,C0O1988C14O2003C21O1999C27O2039C31O2057,,
code-creation,Eval,10,2836812,0x2bcf6ac408e,5, node:internal/util/colors:1:1,0x2bcf6ac3ef8,~
script-source,148,node:internal/util/colors,'use strict';\x0d\n\x0d\nlet internalTTy;\x0d\nfunction lazyInternalTTY() {\x0d\n  internalTTy ??= require('internal/tty');\x0d\n  return internalTTy;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  blue: ''\x2C\x0d\n  green: ''\x2C\x0d\n  white: ''\x2C\x0d\n  red: ''\x2C\x0d\n  gray: ''\x2C\x0d\n  clear: ''\x2C\x0d\n  hasColors: false\x2C\x0d\n  shouldColorize(stream) {\x0d\n    if (process.env.FORCE_COLOR !== undefined) {\x0d\n      return lazyInternalTTY().getColorDepth() > 2;\x0d\n    }\x0d\n    return stream?.isTTY && (\x0d\n      typeof stream.getColorDepth === 'function' ?\x0d\n        stream.getColorDepth() > 2 : true);\x0d\n  }\x2C\x0d\n  refresh() {\x0d\n    if (process.stderr.isTTY) {\x0d\n      const hasColors = module.exports.shouldColorize(process.stderr);\x0d\n      module.exports.blue = hasColors ? '\\u001b[34m' : '';\x0d\n      module.exports.green = hasColors ? '\\u001b[32m' : '';\x0d\n      module.exports.white = hasColors ? '\\u001b[39m' : '';\x0d\n      module.exports.yellow = hasColors ? '\\u001b[33m' : '';\x0d\n      module.exports.red = hasColors ? '\\u001b[31m' : '';\x0d\n      module.exports.gray = hasColors ? '\\u001b[90m' : '';\x0d\n      module.exports.clear = hasColors ? '\\u001bc' : '';\x0d\n      module.exports.hasColors = hasColors;\x0d\n    }\x0d\n  }\x2C\x0d\n};\x0d\n\x0d\nmodule.exports.refresh();\x0d\n
code-source-info,0x2bcf6ac408e,148,0,1162,C0O0C4O1162,,
code-creation,JS,10,2836936,0x2bcf6ac42de,78, node:internal/util/colors:1:1,0x2bcf6ac4008,~
code-source-info,0x2bcf6ac42de,148,0,1162,C0O0C26O21C27O21C29O137C37O260C45O532C55O152C59O1135C62O1142C67O1150C72O1150C77O1161,,
code-creation,JS,10,2837108,0x23fb6a3c8ae,211,refresh node:internal/util/colors:25:10,0x2bcf6ac4160,~
code-source-info,0x23fb6a3c8ae,148,539,1126,C0O549C3O561C8O568C14O602C17O609C22O617C30O640C35O617C41O656C44O663C51O678C59O676C63O716C66O723C73O739C81O737C85O777C88O784C95O800C103O798C107O838C110O845C117O862C125O860C129O900C132O907C139O921C147O919C151O959C154O966C161O981C169O979C173O1019C176O1026C183O1042C191O1040C195O1077C198O1084C205O1102C210O1125,,
code-creation,JS,10,2837222,0x23fb6a3ccc6,125,getStderr node:internal/bootstrap/switches/is_main_thread:170:19,0x3fcdefb14b8,~
code-source-info,0x23fb6a3ccc6,53,4613,5305,C0O4621C6O4633C10O4647C11O4651C17O4660C24O4658C30O4693C37O4714C40O4721C44O4712C48O4733C53O4756C60O4747C66O4834C73O4850C77O4869C82O4880C88O4894C91O4902C102O4902C108O4951C116O4951C120O5288C124O5302,,
code-creation,JS,10,2837561,0x23fb6a3d016,19,_getMaxListeners node:events:419:26,0x3fcdef912a0,~
code-source-info,0x23fb6a3d016,23,12503,12631,C0O12524C6O12558C9O12578C13O12598C14O12614C18O12628,,
code-creation,JS,10,2837613,0x23fb6a3d10e,5,get node:events:281:16,0x3fcdef90d48,~
code-source-info,0x23fb6a3d10e,23,8499,8541,C0O8509C4O8536,,
code-creation,JS,10,2837672,0x23fb6a3d206,80,shouldColorize node:internal/util/colors:17:17,0x2bcf6ac4110,~
code-source-info,0x23fb6a3d206,148,274,527,C0O290C3O302C8O306C14O342C17O349C21O366C26O367C33O383C36O387C37O400C44O413C53O447C61O494C66O494C73O510C79O522,,
code-creation,JS,10,2837921,0x23fb6a3d8e6,765,getColorDepth node:internal/tty:106:23,0x385005877c8,~
code-source-info,0x23fb6a3d8e
code-creation,Eval,10,2838486,0x213166cb006,5, node:os:1:1,0x213166cac90,~
script-source,149,node:os,// Copyright Joyent\x2C Inc. and other Node contributors.\x0d\n//\x0d\n// Permission is hereby granted\x2C free of charge\x2C to any person obtaining a\x0d\n// copy of this software and associated documentation files (the\x0d\n// "Software")\x2C to deal in the Software without restriction\x2C including\x0d\n// without limitation the rights to use\x2C copy\x2C modify\x2C merge\x2C publish\x2C\x0d\n// distribute\x2C sublicense\x2C and/or sell copies of the Software\x2C and to permit\x0d\n// persons to whom the Software is furnished to do so\x2C subject to the\x0d\n// following conditions:\x0d\n//\x0d\n// The above copyright notice and this permission notice shall be included\x0d\n// in all copies or substantial portions of the Software.\x0d\n//\x0d\n// THE SOFTWARE IS PROVIDED "AS IS"\x2C WITHOUT WARRANTY OF ANY KIND\x2C EXPRESS\x0d\n// OR IMPLIED\x2C INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\x0d\n// MERCHANTABILITY\x2C FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\x0d\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM\x2C\x0d\n// DAMAGES OR OTHER LIABILITY\x2C WHETHER IN AN ACTION OF CONTRACT\x2C TORT OR\x0d\n// OTHERWISE\x2C ARISING FROM\x2C OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\x0d\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\x0d\n\x0d\n'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  Float64Array\x2C\x0d\n  NumberParseInt\x2C\x0d\n  ObjectDefineProperties\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  SymbolToPrimitive\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { safeGetenv } = internalBinding('credentials');\x0d\nconst constants = internalBinding('constants').os;\x0d\nconst isWindows = process.platform === 'win32';\x0d\n\x0d\nconst {\x0d\n  codes: {\x0d\n    ERR_SYSTEM_ERROR\x2C\x0d\n  }\x2C\x0d\n  hideStackFrames\x2C\x0d\n} = require('internal/errors');\x0d\nconst { validateInt32 } = require('internal/validators');\x0d\n\x0d\nconst {\x0d\n  getAvailableParallelism\x2C\x0d\n  getCPUs\x2C\x0d\n  getFreeMem\x2C\x0d\n  getHomeDirectory: _getHomeDirectory\x2C\x0d\n  getHostname: _getHostname\x2C\x0d\n  getInterfaceAddresses: _getInterfaceAddresses\x2C\x0d\n  getLoadAvg\x2C\x0d\n  getPriority: _getPriority\x2C\x0d\n  getOSInformation: _getOSInformation\x2C\x0d\n  getTotalMem\x2C\x0d\n  getUserInfo\x2C\x0d\n  getUptime: _getUptime\x2C\x0d\n  isBigEndian\x2C\x0d\n  setPriority: _setPriority\x2C\x0d\n} = internalBinding('os');\x0d\n\x0d\nfunction getCheckedFunction(fn) {\x0d\n  return hideStackFrames(function checkError() {\x0d\n    const ctx = {};\x0d\n    const ret = fn(ctx);\x0d\n    if (ret === undefined) {\x0d\n      throw new ERR_SYSTEM_ERROR.HideStackFramesError(ctx);\x0d\n    }\x0d\n    return ret;\x0d\n  });\x0d\n}\x0d\n\x0d\nconst {\x0d\n  0: type\x2C\x0d\n  1: version\x2C\x0d\n  2: release\x2C\x0d\n  3: machine\x2C\x0d\n} = _getOSInformation();\x0d\n\x0d\nconst getHomeDirectory = getCheckedFunction(_getHomeDirectory);\x0d\nconst getHostname = getCheckedFunction(_getHostname);\x0d\nconst getInterfaceAddresses = getCheckedFunction(_getInterfaceAddresses);\x0d\nconst getUptime = getCheckedFunction(_getUptime);\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSRelease = () => release;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSType = () => type;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getOSVersion = () => version;\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nconst getMachine = () => machine;\x0d\n\x0d\ngetAvailableParallelism[SymbolToPrimitive] = () => getAvailableParallelism();\x0d\ngetFreeMem[SymbolToPrimitive] = () => getFreeMem();\x0d\ngetHostname[SymbolToPrimitive] = () => getHostname();\x0d\ngetOSVersion[SymbolToPrimitive] = () => getOSVersion();\x0d\ngetOSType[SymbolToPrimitive] = () => getOSType();\x0d\ngetOSRelease[SymbolToPrimitive] = () => getOSRelease();\x0d\ngetMachine[SymbolToPrimitive] = () => getMachine();\x0d\ngetHomeDirectory[SymbolToPrimitive] = () => getHomeDirectory();\x0d\ngetTotalMem[SymbolToPrimitive] = () => getTotalMem();\x0d\ngetUptime[SymbolToPrimitive] = () => getUptime();\x0d\n\x0d\nconst kEndianness = isBigEndian ? 'BE' : 'LE';\x0d\n\x0d\nconst avgValues = new Float64Array(3);\x0d\n\x0d\n/**\x0d\n * @returns {[number\x2C number\x2C number]}\x0d\n */\x0d\nfunction loadavg() {\x0d\n  getLoadAvg(avgValues);\x0d\n  return [avgValues[0]\x2C avgValues[1]\x2C avgValues[2]];\x0d\n}\x0d\n\x0d\n/**\x0d\n * Returns an array of objects containing information about each\x0d\n * logical CPU core.\x0d\n * @returns {Array<{\x0d\n *  model: string\x2C\x0d\n *  speed: number\x2C\x0d\n *  times: {\x0d\n *    user: number\x2C\x0d\n *    nice: number\x2C\x0d\n *    sys: number\x2C\x0d\n *    idle: number\x2C\x0d\n *    irq: number\x2C\x0d\n *  }\x2C\x0d\n * }>}\x0d\n */\x0d\nfunction cpus() {\x0d\n  // [] is a bugfix for a regression introduced in 51cea61\x0d\n  const data = getCPUs() || [];\x0d\n  const result = [];\x0d\n  let i = 0;\x0d\n  while (i < data.length) {\x0d\n    ArrayPrototypePush(result\x2C {\x0d\n      model: data[i++]\x2C\x0d\n      speed: data[i++]\x2C\x0d\n      times: {\x0d\n        user: data[i++]\x2C\x0d\n        nice: data[i++]\x2C\x0d\n        sys: data[i++]\x2C\x0d\n        idle: data[i++]\x2C\x0d\n        irq: data[i++]\x2C\x0d\n      }\x2C\x0d\n    });\x0d\n  }\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction arch() {\x0d\n  return process.arch;\x0d\n}\x0d\narch[SymbolToPrimitive] = () => process.arch;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction platform() {\x0d\n  return process.platform;\x0d\n}\x0d\nplatform[SymbolToPrimitive] = () => process.platform;\x0d\n\x0d\n/**\x0d\n * @returns {string}\x0d\n */\x0d\nfunction tmpdir() {\x0d\n  let path;\x0d\n  if (isWindows) {\x0d\n    path = process.env.TEMP ||\x0d\n           process.env.TMP ||\x0d\n           (process.env.SystemRoot || process.env.windir) + '\\\\temp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '\\\\') &&\x0d\n        !StringPrototypeEndsWith(path\x2C ':\\\\'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  } else {\x0d\n    path = safeGetenv('TMPDIR') ||\x0d\n           safeGetenv('TMP') ||\x0d\n           safeGetenv('TEMP') ||\x0d\n           '/tmp';\x0d\n    if (path.length > 1 && StringPrototypeEndsWith(path\x2C '/'))\x0d\n      path = StringPrototypeSlice(path\x2C 0\x2C -1);\x0d\n  }\x0d\n\x0d\n  return path;\x0d\n}\x0d\ntmpdir[SymbolToPrimitive] = () => tmpdir();\x0d\n\x0d\n/**\x0d\n * @returns {'BE' | 'LE'}\x0d\n */\x0d\nfunction endianness() {\x0d\n  return kEndianness;\x0d\n}\x0d\nendianness[SymbolToPrimitive] = () => kEndianness;\x0d\n\x0d\n// Returns the number of ones in the binary representation of the decimal\x0d\n// number.\x0d\nfunction countBinaryOnes(n) {\x0d\n  // Count the number of bits set in parallel\x2C which is faster than looping\x0d\n  n = n - ((n >>> 1) & 0x55555555);\x0d\n  n = (n & 0x33333333) + ((n >>> 2) & 0x33333333);\x0d\n  return ((n + (n >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\x0d\n}\x0d\n\x0d\nfunction getCIDR(address\x2C netmask\x2C family) {\x0d\n  let ones = 0;\x0d\n  let split = '.';\x0d\n  let range = 10;\x0d\n  let groupLength = 8;\x0d\n  let hasZeros = false;\x0d\n  let lastPos = 0;\x0d\n\x0d\n  if (family === 'IPv6') {\x0d\n    split = ':';\x0d\n    range = 16;\x0d\n    groupLength = 16;\x0d\n  }\x0d\n\x0d\n  for (let i = 0; i < netmask.length; i++) {\x0d\n    if (netmask[i] !== split) {\x0d\n      if (i + 1 < netmask.length) {\x0d\n        continue;\x0d\n      }\x0d\n      i++;\x0d\n    }\x0d\n    const part = StringPrototypeSlice(netmask\x2C lastPos\x2C i);\x0d\n    lastPos = i + 1;\x0d\n    if (part !== '') {\x0d\n      if (hasZeros) {\x0d\n        if (part !== '0') {\x0d\n          return null;\x0d\n        }\x0d\n      } else {\x0d\n        const binary = NumberParseInt(part\x2C range);\x0d\n        const binaryOnes = countBinaryOnes(binary);\x0d\n        ones += binaryOnes;\x0d\n        if (binaryOnes !== groupLength) {\x0d\n          if ((binary & 1) !== 0) {\x0d\n            return null;\x0d\n          }\x0d\n          hasZeros = true;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return `${address}/${ones}`;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @returns {Record<string\x2C Array<{\x0d\n *  address: string\x2C\x0d\n *  netmask: string\x2C\x0d\n *  family: 'IPv4' | 'IPv6'\x2C\x0d\n *  mac: string\x2C\x0d\n *  internal: boolean\x2C\x0d\n *  scopeid: number\x2C\x0d\n *  cidr: string | null\x2C\x0d\n * }>>}\x0d\n */\x0d\nfunction networkInterfaces() {\x0d\n  const data = getInterfaceAddresses();\x0d\n  const result = {};\x0d\n\x0d\n  if (data === undefined)\x0d\n    return result;\x0d\n  for (let i = 0; i < data.length; i += 7) {\x0d\n    const name = data[i];\x0d\n    const entry = {\x0d\n      address: data[i + 1]\x2C\x0d\n      netmask: data[i + 2]\x2C\x0d\n      family: data[i + 3]\x2C\x0d\n      mac: data[i + 4]\x2C\x0d\n      internal: data[i + 5]\x2C\x0d\n      cidr: getCIDR(data[i + 1]\x2C data[i + 2]\x2C data[i + 3])\x2C\x0d\n    };\x0d\n    const scopeid = data[i + 6];\x0d\n    if (scopeid !== -1)\x0d\n      entry.scopeid = scopeid;\x0d\n\x0d\n    const existing = result[name];\x0d\n    if (existing !== undefined)\x0d\n      ArrayPrototypePush(existing\x2C entry);\x0d\n    else\x0d\n      result[name] = [entry];\x0d\n  }\x0d\n\x0d\n  return result;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @param {number} priority\x0d\n * @returns {void}\x0d\n */\x0d\nfunction setPriority(pid\x2C priority) {\x0d\n  if (priority === undefined) {\x0d\n    priority = pid;\x0d\n    pid = 0;\x0d\n  }\x0d\n\x0d\n  validateInt32(pid\x2C 'pid');\x0d\n  validateInt32(priority\x2C 'priority'\x2C -20\x2C 19);\x0d\n\x0d\n  const ctx = {};\x0d\n\x0d\n  if (_setPriority(pid\x2C priority\x2C ctx) !== 0)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {number} [pid=0]\x0d\n * @returns {number}\x0d\n */\x0d\nfunction getPriority(pid) {\x0d\n  if (pid === undefined)\x0d\n    pid = 0;\x0d\n  else\x0d\n    validateInt32(pid\x2C 'pid');\x0d\n\x0d\n  const ctx = {};\x0d\n  const priority = _getPriority(pid\x2C ctx);\x0d\n\x0d\n  if (priority === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  return priority;\x0d\n}\x0d\n\x0d\n/**\x0d\n * @param {{ encoding?: string }} [options=utf8] If `encoding` is set to\x0d\n * `'buffer'`\x2C the `username`\x2C `shell`\x2C and `homedir` values will\x0d\n * be `Buffer` instances.\x0d\n * @returns {{\x0d\n *   uid: number\x2C\x0d\n *   gid: number\x2C\x0d\n *   username: string\x2C\x0d\n *   homedir: string\x2C\x0d\n *   shell: string | null\x2C\x0d\n * }}\x0d\n */\x0d\nfunction userInfo(options) {\x0d\n  if (typeof options !== 'object')\x0d\n    options = null;\x0d\n\x0d\n  const ctx = {};\x0d\n  const user = getUserInfo(options\x2C ctx);\x0d\n\x0d\n  if (user === undefined)\x0d\n    throw new ERR_SYSTEM_ERROR(ctx);\x0d\n\x0d\n  if (isWindows) {\x0d\n    user.uid |= 0;\x0d\n    user.gid |= 0;\x0d\n  }\x0d\n\x0d\n  return user;\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  arch\x2C\x0d\n  availableParallelism: getAvailableParallelism\x2C\x0d\n  cpus\x2C\x0d\n  endianness\x2C\x0d\n  freemem: getFreeMem\x2C\x0d\n  getPriority\x2C\x0d\n  homedir: getHomeDirectory\x2C\x0d\n  hostname: getHostname\x2C\x0d\n  loadavg\x2C\x0d\n  networkInterfaces\x2C\x0d\n  platform\x2C\x0d\n  release: getOSRelease\x2C\x0d\n  setPriority\x2C\x0d\n  tmpdir\x2C\x0d\n  totalmem: getTotalMem\x2C\x0d\n  type: getOSType\x2C\x0d\n  userInfo\x2C\x0d\n  uptime: getUptime\x2C\x0d\n  version: getOSVersion\x2C\x0d\n  machine: getMachine\x2C\x0d\n};\x0d\n\x0d\nObjectDefineProperties(module.exports\x2C {\x0d\n  constants: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: false\x2C\x0d\n    enumerable: true\x2C\x0d\n    value: constants\x2C\x0d\n  }\x2C\x0d\n\x0d\n  EOL: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\r\\n' : '\\n'\x2C\x0d\n  }\x2C\x0d\n\x0d\n  devNull: {\x0d\n    __proto__: null\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: true\x2C\x0d\n    writable: false\x2C\x0d\n    value: isWindows ? '\\\\\\\\.\\\\nul' : '/dev/null'\x2C\x0d\n  }\x2C\x0d\n});\x0d\n
code-source-info,0x213166cb006,149,0,10195,C0O0C4O10195,,
code-creation,JS,10,2839204,0x213166c2e76,886, node:os:1:1,0x213166caf80,~
code-source-info,0x213166c2e
code-creation,JS,10,2839670,0xcb002e0cc6,26,getCheckedFunction node:os:63:28,0x213166cb038,~
code-source-info,0xcb002e0cc6,149,2115,2343,C0O2115C9O2125C21O2132C25O2340,,
code-creation,JS,10,2839740,0xcb002e1b56,27,hideStackFrames node:internal/errors:535:25,0x23399fe7b0,~
code-source-info,0xcb002e1b56,10,15215,15499,C0O15215C15O15442C20O15470C24O15479C26O15496,,
code-creation,JS,10,2839892,0x294ddc4185e,5,getOSRelease node:os:89:22,0x213166cb470,~
code-source-info,0x294ddc4185e,149,2742,2755,C0O2748C4O2755,,
code-creation,JS,10,2840169,0x294ddc419ae,38,formatWithOptions node:internal/util/inspect:2158:27,0x3fcdef8eed0,~
script-source,21,node:internal/util/inspect,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  ArrayIsArray\x2C\x0d\n  ArrayPrototypeFilter\x2C\x0d\n  ArrayPrototypeForEach\x2C\x0d\n  ArrayPrototypeIncludes\x2C\x0d\n  ArrayPrototypeIndexOf\x2C\x0d\n  ArrayPrototypeJoin\x2C\x0d\n  ArrayPrototypeMap\x2C\x0d\n  ArrayPrototypePop\x2C\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypePushApply\x2C\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ArrayPrototypeSplice\x2C\x0d\n  ArrayPrototypeSort\x2C\x0d\n  ArrayPrototypeUnshift\x2C\x0d\n  BigIntPrototypeValueOf\x2C\x0d\n  BooleanPrototypeValueOf\x2C\x0d\n  DatePrototypeGetTime\x2C\x0d\n  DatePrototypeToISOString\x2C\x0d\n  DatePrototypeToString\x2C\x0d\n  ErrorPrototypeToString\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n  FunctionPrototypeCall\x2C\x0d\n  FunctionPrototypeToString\x2C\x0d\n  JSONStringify\x2C\x0d\n  MapPrototypeGetSize\x2C\x0d\n  MapPrototypeEntries\x2C\x0d\n  MathFloor\x2C\x0d\n  MathMax\x2C\x0d\n  MathMin\x2C\x0d\n  MathRound\x2C\x0d\n  MathSqrt\x2C\x0d\n  MathTrunc\x2C\x0d\n  Number\x2C\x0d\n  NumberIsFinite\x2C\x0d\n  NumberIsNaN\x2C\x0d\n  NumberParseFloat\x2C\x0d\n  NumberParseInt\x2C\x0d\n  NumberPrototypeToString\x2C\x0d\n  NumberPrototypeValueOf\x2C\x0d\n  Object\x2C\x0d\n  ObjectAssign\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectGetOwnPropertyDescriptor\x2C\x0d\n  ObjectGetOwnPropertyNames\x2C\x0d\n  ObjectGetOwnPropertySymbols\x2C\x0d\n  ObjectGetPrototypeOf\x2C\x0d\n  ObjectIs\x2C\x0d\n  ObjectKeys\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectPrototypePropertyIsEnumerable\x2C\x0d\n  ObjectSeal\x2C\x0d\n  ObjectSetPrototypeOf\x2C\x0d\n  ReflectApply\x2C\x0d\n  ReflectOwnKeys\x2C\x0d\n  RegExp\x2C\x0d\n  RegExpPrototypeExec\x2C\x0d\n  RegExpPrototypeSymbolReplace\x2C\x0d\n  RegExpPrototypeSymbolSplit\x2C\x0d\n  RegExpPrototypeToString\x2C\x0d\n  SafeStringIterator\x2C\x0d\n  SafeMap\x2C\x0d\n  SafeSet\x2C\x0d\n  SetPrototypeGetSize\x2C\x0d\n  SetPrototypeValues\x2C\x0d\n  String\x2C\x0d\n  StringPrototypeCharCodeAt\x2C\x0d\n  StringPrototypeCodePointAt\x2C\x0d\n  StringPrototypeIncludes\x2C\x0d\n  StringPrototypeIndexOf\x2C\x0d\n  StringPrototypeLastIndexOf\x2C\x0d\n  StringPrototypeNormalize\x2C\x0d\n  StringPrototypePadEnd\x2C\x0d\n  StringPrototypePadStart\x2C\x0d\n  StringPrototypeRepeat\x2C\x0d\n  StringPrototypeReplaceAll\x2C\x0d\n  StringPrototypeSlice\x2C\x0d\n  StringPrototypeSplit\x2C\x0d\n  StringPrototypeEndsWith\x2C\x0d\n  StringPrototypeStartsWith\x2C\x0d\n  StringPrototypeToLowerCase\x2C\x0d\n  StringPrototypeTrim\x2C\x0d\n  StringPrototypeValueOf\x2C\x0d\n  SymbolPrototypeToString\x2C\x0d\n  SymbolPrototypeValueOf\x2C\x0d\n  SymbolIterator\x2C\x0d\n  SymbolToStringTag\x2C\x0d\n  TypedArrayPrototypeGetLength\x2C\x0d\n  TypedArrayPrototypeGetSymbolToStringTag\x2C\x0d\n  Uint8Array\x2C\x0d\n  globalThis\x2C\x0d\n  uncurryThis\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  constants: {\x0d\n    ALL_PROPERTIES\x2C\x0d\n    ONLY_ENUMERABLE\x2C\x0d\n    kPending\x2C\x0d\n    kRejected\x2C\x0d\n  }\x2C\x0d\n  getOwnNonIndexProperties\x2C\x0d\n  getPromiseDetails\x2C\x0d\n  getProxyDetails\x2C\x0d\n  previewEntries\x2C\x0d\n  getConstructorName: internalGetConstructorName\x2C\x0d\n  getExternalValue\x2C\x0d\n} = internalBinding('util');\x0d\n\x0d\nconst {\x0d\n  customInspectSymbol\x2C\x0d\n  isError\x2C\x0d\n  join\x2C\x0d\n  removeColors\x2C\x0d\n} = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  isStackOverflowError\x2C\x0d\n} = require('internal/errors');\x0d\n\x0d\nconst {\x0d\n  isAsyncFunction\x2C\x0d\n  isGeneratorFunction\x2C\x0d\n  isAnyArrayBuffer\x2C\x0d\n  isArrayBuffer\x2C\x0d\n  isArgumentsObject\x2C\x0d\n  isBoxedPrimitive\x2C\x0d\n  isDataView\x2C\x0d\n  isExternal\x2C\x0d\n  isMap\x2C\x0d\n  isMapIterator\x2C\x0d\n  isModuleNamespaceObject\x2C\x0d\n  isNativeError\x2C\x0d\n  isPromise\x2C\x0d\n  isSet\x2C\x0d\n  isSetIterator\x2C\x0d\n  isWeakMap\x2C\x0d\n  isWeakSet\x2C\x0d\n  isRegExp\x2C\x0d\n  isDate\x2C\x0d\n  isTypedArray\x2C\x0d\n  isStringObject\x2C\x0d\n  isNumberObject\x2C\x0d\n  isBooleanObject\x2C\x0d\n  isBigIntObject\x2C\x0d\n} = require('internal/util/types');\x0d\n\x0d\nconst assert = require('internal/assert');\x0d\n\x0d\nconst { BuiltinModule } = require('internal/bootstrap/realm');\x0d\nconst {\x0d\n  validateObject\x2C\x0d\n  validateString\x2C\x0d\n  kValidateObjectAllowArray\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nlet hexSlice;\x0d\nlet internalUrl;\x0d\n\x0d\nfunction pathToFileUrlHref(filepath) {\x0d\n  internalUrl ??= require('internal/url');\x0d\n  return internalUrl.pathToFileURL(filepath).href;\x0d\n}\x0d\n\x0d\nconst builtInObjects = new SafeSet(\x0d\n  ArrayPrototypeFilter(\x0d\n    ObjectGetOwnPropertyNames(globalThis)\x2C\x0d\n    (e) => RegExpPrototypeExec(/^[A-Z][a-zA-Z0-9]+$/\x2C e) !== null\x2C\x0d\n  )\x2C\x0d\n);\x0d\n\x0d\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\x0d\nconst isUndetectableObject = (v) => typeof v === 'undefined' && v !== undefined;\x0d\n\x0d\n// These options must stay in sync with `getUserOptions`. So if any option will\x0d\n// be added or removed\x2C `getUserOptions` must also be updated accordingly.\x0d\nconst inspectDefaultOptions = ObjectSeal({\x0d\n  showHidden: false\x2C\x0d\n  depth: 2\x2C\x0d\n  colors: false\x2C\x0d\n  customInspect: true\x2C\x0d\n  showProxy: false\x2C\x0d\n  maxArrayLength: 100\x2C\x0d\n  maxStringLength: 10000\x2C\x0d\n  breakLength: 80\x2C\x0d\n  compact: 3\x2C\x0d\n  sorted: false\x2C\x0d\n  getters: false\x2C\x0d\n  numericSeparator: false\x2C\x0d\n});\x0d\n\x0d\nconst kObjectType = 0;\x0d\nconst kArrayType = 1;\x0d\nconst kArrayExtrasType = 2;\x0d\n\x0d\n/* eslint-disable no-control-regex */\x0d\nconst strEscapeSequencesRegExp = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacer = /[\\x00-\\x1f\\x27\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\nconst strEscapeSequencesRegExpSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/;\x0d\nconst strEscapeSequencesReplacerSingle = /[\\x00-\\x1f\\x5c\\x7f-\\x9f]|[\\ud800-\\udbff](?![\\udc00-\\udfff])|(?<![\\ud800-\\udbff])[\\udc00-\\udfff]/g;\x0d\n/* eslint-enable no-control-regex */\x0d\n\x0d\nconst keyStrRegExp = /^[a-zA-Z_][a-zA-Z_0-9]*$/;\x0d\nconst numberRegExp = /^(0|[1-9][0-9]*)$/;\x0d\n\x0d\nconst coreModuleRegExp = /^ {4}at (?:[^/\\\\(]+ \\(|)node:(.+):\\d+:\\d+\\)?$/;\x0d\nconst nodeModulesRegExp = /[/\\\\]node_modules[/\\\\](.+?)(?=[/\\\\])/g;\x0d\n\x0d\nconst classRegExp = /^(\\s+[^(]*?)\\s*{/;\x0d\n// eslint-disable-next-line node-core/no-unescaped-regexp-dot\x0d\nconst stripCommentsRegExp = /(\\/\\/.*?\\n)|(\\/\\*(.|\\n)*?\\*\\/)/g;\x0d\n\x0d\nconst kMinLineLength = 16;\x0d\n\x0d\n// Constants to map the iterator state.\x0d\nconst kWeak = 0;\x0d\nconst kIterator = 1;\x0d\nconst kMapEntries = 2;\x0d\n\x0d\n// Escaped control characters (plus the single quote and the backslash). Use\x0d\n// empty strings to fill up unused entries.\x0d\nconst meta = [\x0d\n  '\\\\x00'\x2C '\\\\x01'\x2C '\\\\x02'\x2C '\\\\x03'\x2C '\\\\x04'\x2C '\\\\x05'\x2C '\\\\x06'\x2C '\\\\x07'\x2C // x07\x0d\n  '\\\\b'\x2C '\\\\t'\x2C '\\\\n'\x2C '\\\\x0B'\x2C '\\\\f'\x2C '\\\\r'\x2C '\\\\x0E'\x2C '\\\\x0F'\x2C           // x0F\x0d\n  '\\\\x10'\x2C '\\\\x11'\x2C '\\\\x12'\x2C '\\\\x13'\x2C '\\\\x14'\x2C '\\\\x15'\x2C '\\\\x16'\x2C '\\\\x17'\x2C // x17\x0d\n  '\\\\x18'\x2C '\\\\x19'\x2C '\\\\x1A'\x2C '\\\\x1B'\x2C '\\\\x1C'\x2C '\\\\x1D'\x2C '\\\\x1E'\x2C '\\\\x1F'\x2C // x1F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C "\\\\'"\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C      // x2F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x3F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x4F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\\\\\'\x2C ''\x2C ''\x2C ''\x2C     // x5F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C         // x6F\x0d\n  ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C ''\x2C '\\\\x7F'\x2C    // x7F\x0d\n  '\\\\x80'\x2C '\\\\x81'\x2C '\\\\x82'\x2C '\\\\x83'\x2C '\\\\x84'\x2C '\\\\x85'\x2C '\\\\x86'\x2C '\\\\x87'\x2C // x87\x0d\n  '\\\\x88'\x2C '\\\\x89'\x2C '\\\\x8A'\x2C '\\\\x8B'\x2C '\\\\x8C'\x2C '\\\\x8D'\x2C '\\\\x8E'\x2C '\\\\x8F'\x2C // x8F\x0d\n  '\\\\x90'\x2C '\\\\x91'\x2C '\\\\x92'\x2C '\\\\x93'\x2C '\\\\x94'\x2C '\\\\x95'\x2C '\\\\x96'\x2C '\\\\x97'\x2C // x97\x0d\n  '\\\\x98'\x2C '\\\\x99'\x2C '\\\\x9A'\x2C '\\\\x9B'\x2C '\\\\x9C'\x2C '\\\\x9D'\x2C '\\\\x9E'\x2C '\\\\x9F'\x2C // x9F\x0d\n];\x0d\n\x0d\n// Regex used for ansi escape code splitting\x0d\n// Adopted from https://github.com/chalk/ansi-regex/blob/HEAD/index.js\x0d\n// License: MIT\x2C authors: @sindresorhus\x2C Qix-\x2C arjunmehta and LitoMore\x0d\n// Matches all ansi escape code sequences in a string\x0d\nconst ansiPattern = '[\\\\u001B\\\\u009B][[\\\\]()#;?]*' +\x0d\n  '(?:(?:(?:(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]+)*' +\x0d\n  '|[a-zA-Z\\\\d]+(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)' +\x0d\n  '|(?:(?:\\\\d{1\x2C4}(?:;\\\\d{0\x2C4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))';\x0d\nconst ansi = new RegExp(ansiPattern\x2C 'g');\x0d\n\x0d\nlet getStringWidth;\x0d\n\x0d\nfunction getUserOptions(ctx\x2C isCrossContext) {\x0d\n  const ret = {\x0d\n    stylize: ctx.stylize\x2C\x0d\n    showHidden: ctx.showHidden\x2C\x0d\n    depth: ctx.depth\x2C\x0d\n    colors: ctx.colors\x2C\x0d\n    customInspect: ctx.customInspect\x2C\x0d\n    showProxy: ctx.showProxy\x2C\x0d\n    maxArrayLength: ctx.maxArrayLength\x2C\x0d\n    maxStringLength: ctx.maxStringLength\x2C\x0d\n    breakLength: ctx.breakLength\x2C\x0d\n    compact: ctx.compact\x2C\x0d\n    sorted: ctx.sorted\x2C\x0d\n    getters: ctx.getters\x2C\x0d\n    numericSeparator: ctx.numericSeparator\x2C\x0d\n    ...ctx.userOptions\x2C\x0d\n  };\x0d\n\x0d\n  // Typically\x2C the target value will be an instance of `Object`. If that is\x0d\n  // *not* the case\x2C the object may come from another vm.Context\x2C and we want\x0d\n  // to avoid passing it objects from this Context in that case\x2C so we remove\x0d\n  // the prototype from the returned object itself + the `stylize()` function\x2C\x0d\n  // and remove all other non-primitives\x2C including non-primitive user options.\x0d\n  if (isCrossContext) {\x0d\n    ObjectSetPrototypeOf(ret\x2C null);\x0d\n    for (const key of ObjectKeys(ret)) {\x0d\n      if ((typeof ret[key] === 'object' || typeof ret[key] === 'function') &&\x0d\n          ret[key] !== null) {\x0d\n        delete ret[key];\x0d\n      }\x0d\n    }\x0d\n    ret.stylize = ObjectSetPrototypeOf((value\x2C flavour) => {\x0d\n      let stylized;\x0d\n      try {\x0d\n        stylized = `${ctx.stylize(value\x2C flavour)}`;\x0d\n      } catch {\x0d\n        // Continue regardless of error.\x0d\n      }\x0d\n\x0d\n      if (typeof stylized !== 'string') return value;\x0d\n      // `stylized` is a string as it should be\x2C which is safe to pass along.\x0d\n      return stylized;\x0d\n    }\x2C null);\x0d\n  }\x0d\n\x0d\n  return ret;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Echos the value of any input. Tries to print the value out\x0d\n * in the best way possible given the different types.\x0d\n * @param {any} value The value to print out.\x0d\n * @param {object} opts Optional options object that alters the output.\x0d\n */\x0d\n/* Legacy: value\x2C showHidden\x2C depth\x2C colors */\x0d\nfunction inspect(value\x2C opts) {\x0d\n  // Default options\x0d\n  const ctx = {\x0d\n    budget: {}\x2C\x0d\n    indentationLvl: 0\x2C\x0d\n    seen: []\x2C\x0d\n    currentDepth: 0\x2C\x0d\n    stylize: stylizeNoColor\x2C\x0d\n    showHidden: inspectDefaultOptions.showHidden\x2C\x0d\n    depth: inspectDefaultOptions.depth\x2C\x0d\n    colors: inspectDefaultOptions.colors\x2C\x0d\n    customInspect: inspectDefaultOptions.customInspect\x2C\x0d\n    showProxy: inspectDefaultOptions.showProxy\x2C\x0d\n    maxArrayLength: inspectDefaultOptions.maxArrayLength\x2C\x0d\n    maxStringLength: inspectDefaultOptions.maxStringLength\x2C\x0d\n    breakLength: inspectDefaultOptions.breakLength\x2C\x0d\n    compact: inspectDefaultOptions.compact\x2C\x0d\n    sorted: inspectDefaultOptions.sorted\x2C\x0d\n    getters: inspectDefaultOptions.getters\x2C\x0d\n    numericSeparator: inspectDefaultOptions.numericSeparator\x2C\x0d\n  };\x0d\n  if (arguments.length > 1) {\x0d\n    // Legacy...\x0d\n    if (arguments.length > 2) {\x0d\n      if (arguments[2] !== undefined) {\x0d\n        ctx.depth = arguments[2];\x0d\n      }\x0d\n      if (arguments.length > 3 && arguments[3] !== undefined) {\x0d\n        ctx.colors = arguments[3];\x0d\n      }\x0d\n    }\x0d\n    // Set user-specified options\x0d\n    if (typeof opts === 'boolean') {\x0d\n      ctx.showHidden = opts;\x0d\n    } else if (opts) {\x0d\n      const optKeys = ObjectKeys(opts);\x0d\n      for (let i = 0; i < optKeys.length; ++i) {\x0d\n        const key = optKeys[i];\x0d\n        // TODO(BridgeAR): Find a solution what to do about stylize. Either make\x0d\n        // this function public or add a new API with a similar or better\x0d\n        // functionality.\x0d\n        if (\x0d\n          ObjectPrototypeHasOwnProperty(inspectDefaultOptions\x2C key) ||\x0d\n          key === 'stylize') {\x0d\n          ctx[key] = opts[key];\x0d\n        } else if (ctx.userOptions === undefined) {\x0d\n          // This is required to pass through the actual user input.\x0d\n          ctx.userOptions = opts;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\x0d\n  if (ctx.maxArrayLength === null) ctx.maxArrayLength = Infinity;\x0d\n  if (ctx.maxStringLength === null) ctx.maxStringLength = Infinity;\x0d\n  return formatValue(ctx\x2C value\x2C 0);\x0d\n}\x0d\ninspect.custom = customInspectSymbol;\x0d\n\x0d\nObjectDefineProperty(inspect\x2C 'defaultOptions'\x2C {\x0d\n  __proto__: null\x2C\x0d\n  get() {\x0d\n    return inspectDefaultOptions;\x0d\n  }\x2C\x0d\n  set(options) {\x0d\n    validateObject(options\x2C 'options');\x0d\n    return ObjectAssign(inspectDefaultOptions\x2C options);\x0d\n  }\x2C\x0d\n});\x0d\n\x0d\n// Set Graphics Rendition https://en.wikipedia.org/wiki/ANSI_escape_code#graphics\x0d\n// Each color consists of an array with the color code as first entry and the\x0d\n// reset code as second entry.\x0d\nconst defaultFG = 39;\x0d\nconst defaultBG = 49;\x0d\ninspect.colors = {\x0d\n  __proto__: null\x2C\x0d\n  reset: [0\x2C 0]\x2C\x0d\n  bold: [1\x2C 22]\x2C\x0d\n  dim: [2\x2C 22]\x2C // Alias: faint\x0d\n  italic: [3\x2C 23]\x2C\x0d\n  underline: [4\x2C 24]\x2C\x0d\n  blink: [5\x2C 25]\x2C\x0d\n  // Swap foreground and background colors\x0d\n  inverse: [7\x2C 27]\x2C // Alias: swapcolors\x2C swapColors\x0d\n  hidden: [8\x2C 28]\x2C // Alias: conceal\x0d\n  strikethrough: [9\x2C 29]\x2C // Alias: strikeThrough\x2C crossedout\x2C crossedOut\x0d\n  doubleunderline: [21\x2C 24]\x2C // Alias: doubleUnderline\x0d\n  black: [30\x2C defaultFG]\x2C\x0d\n  red: [31\x2C defaultFG]\x2C\x0d\n  green: [32\x2C defaultFG]\x2C\x0d\n  yellow: [33\x2C defaultFG]\x2C\x0d\n  blue: [34\x2C defaultFG]\x2C\x0d\n  magenta: [35\x2C defaultFG]\x2C\x0d\n  cyan: [36\x2C defaultFG]\x2C\x0d\n  white: [37\x2C defaultFG]\x2C\x0d\n  bgBlack: [40\x2C defaultBG]\x2C\x0d\n  bgRed: [41\x2C defaultBG]\x2C\x0d\n  bgGreen: [42\x2C defaultBG]\x2C\x0d\n  bgYellow: [43\x2C defaultBG]\x2C\x0d\n  bgBlue: [44\x2C defaultBG]\x2C\x0d\n  bgMagenta: [45\x2C defaultBG]\x2C\x0d\n  bgCyan: [46\x2C defaultBG]\x2C\x0d\n  bgWhite: [47\x2C defaultBG]\x2C\x0d\n  framed: [51\x2C 54]\x2C\x0d\n  overlined: [53\x2C 55]\x2C\x0d\n  gray: [90\x2C defaultFG]\x2C // Alias: grey\x2C blackBright\x0d\n  redBright: [91\x2C defaultFG]\x2C\x0d\n  greenBright: [92\x2C defaultFG]\x2C\x0d\n  yellowBright: [93\x2C defaultFG]\x2C\x0d\n  blueBright: [94\x2C defaultFG]\x2C\x0d\n  magentaBright: [95\x2C defaultFG]\x2C\x0d\n  cyanBright: [96\x2C defaultFG]\x2C\x0d\n  whiteBright: [97\x2C defaultFG]\x2C\x0d\n  bgGray: [100\x2C defaultBG]\x2C // Alias: bgGrey\x2C bgBlackBright\x0d\n  bgRedBright: [101\x2C defaultBG]\x2C\x0d\n  bgGreenBright: [102\x2C defaultBG]\x2C\x0d\n  bgYellowBright: [103\x2C defaultBG]\x2C\x0d\n  bgBlueBright: [104\x2C defaultBG]\x2C\x0d\n  bgMagentaBright: [105\x2C defaultBG]\x2C\x0d\n  bgCyanBright: [106\x2C defaultBG]\x2C\x0d\n  bgWhiteBright: [107\x2C defaultBG]\x2C\x0d\n};\x0d\n\x0d\nfunction defineColorAlias(target\x2C alias) {\x0d\n  ObjectDefineProperty(inspect.colors\x2C alias\x2C {\x0d\n    __proto__: null\x2C\x0d\n    get() {\x0d\n      return this[target];\x0d\n    }\x2C\x0d\n    set(value) {\x0d\n      this[target] = value;\x0d\n    }\x2C\x0d\n    configurable: true\x2C\x0d\n    enumerable: false\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\ndefineColorAlias('gray'\x2C 'grey');\x0d\ndefineColorAlias('gray'\x2C 'blackBright');\x0d\ndefineColorAlias('bgGray'\x2C 'bgGrey');\x0d\ndefineColorAlias('bgGray'\x2C 'bgBlackBright');\x0d\ndefineColorAlias('dim'\x2C 'faint');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedout');\x0d\ndefineColorAlias('strikethrough'\x2C 'strikeThrough');\x0d\ndefineColorAlias('strikethrough'\x2C 'crossedOut');\x0d\ndefineColorAlias('hidden'\x2C 'conceal');\x0d\ndefineColorAlias('inverse'\x2C 'swapColors');\x0d\ndefineColorAlias('inverse'\x2C 'swapcolors');\x0d\ndefineColorAlias('doubleunderline'\x2C 'doubleUnderline');\x0d\n\x0d\n// TODO(BridgeAR): Add function style support for more complex styles.\x0d\n// Don't use 'blue' not visible on cmd.exe\x0d\ninspect.styles = ObjectAssign({ __proto__: null }\x2C {\x0d\n  special: 'cyan'\x2C\x0d\n  number: 'yellow'\x2C\x0d\n  bigint: 'yellow'\x2C\x0d\n  boolean: 'yellow'\x2C\x0d\n  undefined: 'grey'\x2C\x0d\n  null: 'bold'\x2C\x0d\n  string: 'green'\x2C\x0d\n  symbol: 'green'\x2C\x0d\n  date: 'magenta'\x2C\x0d\n  // "name": intentionally not styling\x0d\n  // TODO(BridgeAR): Highlight regular expressions properly.\x0d\n  regexp: 'red'\x2C\x0d\n  module: 'underline'\x2C\x0d\n});\x0d\n\x0d\nfunction addQuotes(str\x2C quotes) {\x0d\n  if (quotes === -1) {\x0d\n    return `"${str}"`;\x0d\n  }\x0d\n  if (quotes === -2) {\x0d\n    return `\\`${str}\\``;\x0d\n  }\x0d\n  return `'${str}'`;\x0d\n}\x0d\n\x0d\nfunction escapeFn(str) {\x0d\n  const charCode = StringPrototypeCharCodeAt(str);\x0d\n  return meta.length > charCode ? meta[charCode] : `\\\\u${NumberPrototypeToString(charCode\x2C 16)}`;\x0d\n}\x0d\n\x0d\n// Escape control characters\x2C single quotes and the backslash.\x0d\n// This is similar to JSON stringify escaping.\x0d\nfunction strEscape(str) {\x0d\n  let escapeTest = strEscapeSequencesRegExp;\x0d\n  let escapeReplace = strEscapeSequencesReplacer;\x0d\n  let singleQuote = 39;\x0d\n\x0d\n  // Check for double quotes. If not present\x2C do not escape single quotes and\x0d\n  // instead wrap the text in double quotes. If double quotes exist\x2C check for\x0d\n  // backticks. If they do not exist\x2C use those as fallback instead of the\x0d\n  // double quotes.\x0d\n  if (StringPrototypeIncludes(str\x2C "'")) {\x0d\n    // This invalidates the charCode and therefore can not be matched for\x0d\n    // anymore.\x0d\n    if (!StringPrototypeIncludes(str\x2C '"')) {\x0d\n      singleQuote = -1;\x0d\n    } else if (!StringPrototypeIncludes(str\x2C '`') &&\x0d\n               !StringPrototypeIncludes(str\x2C '${')) {\x0d\n      singleQuote = -2;\x0d\n    }\x0d\n    if (singleQuote !== 39) {\x0d\n      escapeTest = strEscapeSequencesRegExpSingle;\x0d\n      escapeReplace = strEscapeSequencesReplacerSingle;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Some magic numbers that worked out fine while benchmarking with v8 6.0\x0d\n  if (str.length < 5000 && RegExpPrototypeExec(escapeTest\x2C str) === null)\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  if (str.length > 100) {\x0d\n    str = RegExpPrototypeSymbolReplace(escapeReplace\x2C str\x2C escapeFn);\x0d\n    return addQuotes(str\x2C singleQuote);\x0d\n  }\x0d\n\x0d\n  let result = '';\x0d\n  let last = 0;\x0d\n  for (let i = 0; i < str.length; i++) {\x0d\n    const point = StringPrototypeCharCodeAt(str\x2C i);\x0d\n    if (point === singleQuote ||\x0d\n        point === 92 ||\x0d\n        point < 32 ||\x0d\n        (point > 126 && point < 160)) {\x0d\n      if (last === i) {\x0d\n        result += meta[point];\x0d\n      } else {\x0d\n        result += `${StringPrototypeSlice(str\x2C last\x2C i)}${meta[point]}`;\x0d\n      }\x0d\n      last = i + 1;\x0d\n    } else if (point >= 0xd800 && point <= 0xdfff) {\x0d\n      if (point <= 0xdbff && i + 1 < str.length) {\x0d\n        const point = StringPrototypeCharCodeAt(str\x2C i + 1);\x0d\n        if (point >= 0xdc00 && point <= 0xdfff) {\x0d\n          i++;\x0d\n          continue;\x0d\n        }\x0d\n      }\x0d\n      result += `${StringPrototypeSlice(str\x2C last\x2C i)}\\\\u${NumberPrototypeToString(point\x2C 16)}`;\x0d\n      last = i + 1;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (last !== str.length) {\x0d\n    result += StringPrototypeSlice(str\x2C last);\x0d\n  }\x0d\n  return addQuotes(result\x2C singleQuote);\x0d\n}\x0d\n\x0d\nfunction stylizeWithColor(str\x2C styleType) {\x0d\n  const style = inspect.styles[styleType];\x0d\n  if (style !== undefined) {\x0d\n    const color = inspect.colors[style];\x0d\n    if (color !== undefined)\x0d\n      return `\\u001b[${color[0]}m${str}\\u001b[${color[1]}m`;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction stylizeNoColor(str) {\x0d\n  return str;\x0d\n}\x0d\n\x0d\n// Return a new empty array to push in the results of the default formatter.\x0d\nfunction getEmptyFormatArray() {\x0d\n  return [];\x0d\n}\x0d\n\x0d\nfunction isInstanceof(object\x2C proto) {\x0d\n  try {\x0d\n    return object instanceof proto;\x0d\n  } catch {\x0d\n    return false;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction getConstructorName(obj\x2C ctx\x2C recurseTimes\x2C protoProps) {\x0d\n  let firstProto;\x0d\n  const tmp = obj;\x0d\n  while (obj || isUndetectableObject(obj)) {\x0d\n    const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n    if (descriptor !== undefined &&\x0d\n        typeof descriptor.value === 'function' &&\x0d\n        descriptor.value.name !== '' &&\x0d\n        isInstanceof(tmp\x2C descriptor.value)) {\x0d\n      if (protoProps !== undefined &&\x0d\n         (firstProto !== obj ||\x0d\n         !builtInObjects.has(descriptor.value.name))) {\x0d\n        addPrototypeProperties(\x0d\n          ctx\x2C tmp\x2C firstProto || tmp\x2C recurseTimes\x2C protoProps);\x0d\n      }\x0d\n      return String(descriptor.value.name);\x0d\n    }\x0d\n\x0d\n    obj = ObjectGetPrototypeOf(obj);\x0d\n    if (firstProto === undefined) {\x0d\n      firstProto = obj;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (firstProto === null) {\x0d\n    return null;\x0d\n  }\x0d\n\x0d\n  const res = internalGetConstructorName(tmp);\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return `${res} <Complex prototype>`;\x0d\n  }\x0d\n\x0d\n  const protoConstr = getConstructorName(\x0d\n    firstProto\x2C ctx\x2C recurseTimes + 1\x2C protoProps);\x0d\n\x0d\n  if (protoConstr === null) {\x0d\n    return `${res} <${inspect(firstProto\x2C {\x0d\n      ...ctx\x2C\x0d\n      customInspect: false\x2C\x0d\n      depth: -1\x2C\x0d\n    })}>`;\x0d\n  }\x0d\n\x0d\n  return `${res} <${protoConstr}>`;\x0d\n}\x0d\n\x0d\n// This function has the side effect of adding prototype properties to the\x0d\n// `output` argument (which is an array). This is intended to highlight user\x0d\n// defined prototype properties.\x0d\nfunction addPrototypeProperties(ctx\x2C main\x2C obj\x2C recurseTimes\x2C output) {\x0d\n  let depth = 0;\x0d\n  let keys;\x0d\n  let keySet;\x0d\n  do {\x0d\n    if (depth !== 0 || main === obj) {\x0d\n      obj = ObjectGetPrototypeOf(obj);\x0d\n      // Stop as soon as a null prototype is encountered.\x0d\n      if (obj === null) {\x0d\n        return;\x0d\n      }\x0d\n      // Stop as soon as a built-in object type is detected.\x0d\n      const descriptor = ObjectGetOwnPropertyDescriptor(obj\x2C 'constructor');\x0d\n      if (descriptor !== undefined &&\x0d\n          typeof descriptor.value === 'function' &&\x0d\n          builtInObjects.has(descriptor.value.name)) {\x0d\n        return;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    if (depth === 0) {\x0d\n      keySet = new SafeSet();\x0d\n    } else {\x0d\n      ArrayPrototypeForEach(keys\x2C (key) => keySet.add(key));\x0d\n    }\x0d\n    // Get all own property names and symbols.\x0d\n    keys = ReflectOwnKeys(obj);\x0d\n    ArrayPrototypePush(ctx.seen\x2C main);\x0d\n    for (const key of keys) {\x0d\n      // Ignore the `constructor` property and keys that exist on layers above.\x0d\n      if (key === 'constructor' ||\x0d\n          ObjectPrototypeHasOwnProperty(main\x2C key) ||\x0d\n          (depth !== 0 && keySet.has(key))) {\x0d\n        continue;\x0d\n      }\x0d\n      const desc = ObjectGetOwnPropertyDescriptor(obj\x2C key);\x0d\n      if (typeof desc.value === 'function') {\x0d\n        continue;\x0d\n      }\x0d\n      const value = formatProperty(\x0d\n        ctx\x2C obj\x2C recurseTimes\x2C key\x2C kObjectType\x2C desc\x2C main);\x0d\n      if (ctx.colors) {\x0d\n        // Faint!\x0d\n        ArrayPrototypePush(output\x2C `\\u001b[2m${value}\\u001b[22m`);\x0d\n      } else {\x0d\n        ArrayPrototypePush(output\x2C value);\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePop(ctx.seen);\x0d\n  // Limit the inspection to up to three prototype layers. Using `recurseTimes`\x0d\n  // is not a good choice here\x2C because it's as if the properties are declared\x0d\n  // on the current object from the users perspective.\x0d\n  } while (++depth !== 3);\x0d\n}\x0d\n\x0d\nfunction getPrefix(constructor\x2C tag\x2C fallback\x2C size = '') {\x0d\n  if (constructor === null) {\x0d\n    if (tag !== '' && fallback !== tag) {\x0d\n      return `[${fallback}${size}: null prototype] [${tag}] `;\x0d\n    }\x0d\n    return `[${fallback}${size}: null prototype] `;\x0d\n  }\x0d\n\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    return `${constructor}${size} [${tag}] `;\x0d\n  }\x0d\n  return `${constructor}${size} `;\x0d\n}\x0d\n\x0d\n// Look up the keys of the object.\x0d\nfunction getKeys(value\x2C showHidden) {\x0d\n  let keys;\x0d\n  const symbols = ObjectGetOwnPropertySymbols(value);\x0d\n  if (showHidden) {\x0d\n    keys = ObjectGetOwnPropertyNames(value);\x0d\n    if (symbols.length !== 0)\x0d\n      ArrayPrototypePushApply(keys\x2C symbols);\x0d\n  } else {\x0d\n    // This might throw if `value` is a Module Namespace Object from an\x0d\n    // unevaluated module\x2C but we don't want to perform the actual type\x0d\n    // check because it's expensive.\x0d\n    // TODO(devsnek): track https://github.com/tc39/ecma262/issues/1209\x0d\n    // and modify this logic as needed.\x0d\n    try {\x0d\n      keys = ObjectKeys(value);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError' &&\x0d\n             isModuleNamespaceObject(value));\x0d\n      keys = ObjectGetOwnPropertyNames(value);\x0d\n    }\x0d\n    if (symbols.length !== 0) {\x0d\n      const filter = (key) => ObjectPrototypePropertyIsEnumerable(value\x2C key);\x0d\n      ArrayPrototypePushApply(keys\x2C ArrayPrototypeFilter(symbols\x2C filter));\x0d\n    }\x0d\n  }\x0d\n  return keys;\x0d\n}\x0d\n\x0d\nfunction getCtxStyle(value\x2C constructor\x2C tag) {\x0d\n  let fallback = '';\x0d\n  if (constructor === null) {\x0d\n    fallback = internalGetConstructorName(value);\x0d\n    if (fallback === tag) {\x0d\n      fallback = 'Object';\x0d\n    }\x0d\n  }\x0d\n  return getPrefix(constructor\x2C tag\x2C fallback);\x0d\n}\x0d\n\x0d\nfunction formatProxy(ctx\x2C proxy\x2C recurseTimes) {\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    return ctx.stylize('Proxy [Array]'\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n  ctx.indentationLvl += 2;\x0d\n  const res = [\x0d\n    formatValue(ctx\x2C proxy[0]\x2C recurseTimes)\x2C\x0d\n    formatValue(ctx\x2C proxy[1]\x2C recurseTimes)\x2C\x0d\n  ];\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return reduceToSingleString(\x0d\n    ctx\x2C res\x2C ''\x2C ['Proxy ['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n}\x0d\n\x0d\n// Note: using `formatValue` directly requires the indentation level to be\x0d\n// corrected by setting `ctx.indentationLvL += diff` and then to decrease the\x0d\n// value afterwards again.\x0d\nfunction formatValue(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  // Primitive types cannot have properties.\x0d\n  if (typeof value !== 'object' &&\x0d\n      typeof value !== 'function' &&\x0d\n      !isUndetectableObject(value)) {\x0d\n    return formatPrimitive(ctx.stylize\x2C value\x2C ctx);\x0d\n  }\x0d\n  if (value === null) {\x0d\n    return ctx.stylize('null'\x2C 'null');\x0d\n  }\x0d\n\x0d\n  // Memorize the context for custom inspection on proxies.\x0d\n  const context = value;\x0d\n  // Always check for proxies to prevent side effects and to prevent triggering\x0d\n  // any proxy handlers.\x0d\n  const proxy = getProxyDetails(value\x2C !!ctx.showProxy);\x0d\n  if (proxy !== undefined) {\x0d\n    if (proxy === null || proxy[0] === null) {\x0d\n      return ctx.stylize('<Revoked Proxy>'\x2C 'special');\x0d\n    }\x0d\n    if (ctx.showProxy) {\x0d\n      return formatProxy(ctx\x2C proxy\x2C recurseTimes);\x0d\n    }\x0d\n    value = proxy;\x0d\n  }\x0d\n\x0d\n  // Provide a hook for user-specified inspect functions.\x0d\n  // Check that value is an object with an inspect function on it.\x0d\n  if (ctx.customInspect) {\x0d\n    const maybeCustom = value[customInspectSymbol];\x0d\n    if (typeof maybeCustom === 'function' &&\x0d\n        // Filter out the util module\x2C its inspect function is special.\x0d\n        maybeCustom !== inspect &&\x0d\n        // Also filter out any prototype objects using the circular check.\x0d\n        !(value.constructor && value.constructor.prototype === value)) {\x0d\n      // This makes sure the recurseTimes are reported as before while using\x0d\n      // a counter internally.\x0d\n      const depth = ctx.depth === null ? null : ctx.depth - recurseTimes;\x0d\n      const isCrossContext =\x0d\n        proxy !== undefined || !(context instanceof Object);\x0d\n      const ret = FunctionPrototypeCall(\x0d\n        maybeCustom\x2C\x0d\n        context\x2C\x0d\n        depth\x2C\x0d\n        getUserOptions(ctx\x2C isCrossContext)\x2C\x0d\n        inspect\x2C\x0d\n      );\x0d\n      // If the custom inspection method returned `this`\x2C don't go into\x0d\n      // infinite recursion.\x0d\n      if (ret !== context) {\x0d\n        if (typeof ret !== 'string') {\x0d\n          return formatValue(ctx\x2C ret\x2C recurseTimes);\x0d\n        }\x0d\n        return StringPrototypeReplaceAll(ret\x2C '\\n'\x2C `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  // Using an array here is actually better for the average case than using\x0d\n  // a Set. `seen` will only check for the depth and will never grow too large.\x0d\n  if (ctx.seen.includes(value)) {\x0d\n    let index = 1;\x0d\n    if (ctx.circular === undefined) {\x0d\n      ctx.circular = new SafeMap();\x0d\n      ctx.circular.set(value\x2C index);\x0d\n    } else {\x0d\n      index = ctx.circular.get(value);\x0d\n      if (index === undefined) {\x0d\n        index = ctx.circular.size + 1;\x0d\n        ctx.circular.set(value\x2C index);\x0d\n      }\x0d\n    }\x0d\n    return ctx.stylize(`[Circular *${index}]`\x2C 'special');\x0d\n  }\x0d\n\x0d\n  return formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray);\x0d\n}\x0d\n\x0d\nfunction formatRaw(ctx\x2C value\x2C recurseTimes\x2C typedArray) {\x0d\n  let keys;\x0d\n  let protoProps;\x0d\n  if (ctx.showHidden && (recurseTimes <= ctx.depth || ctx.depth === null)) {\x0d\n    protoProps = [];\x0d\n  }\x0d\n\x0d\n  const constructor = getConstructorName(value\x2C ctx\x2C recurseTimes\x2C protoProps);\x0d\n  // Reset the variable to check for this later on.\x0d\n  if (protoProps !== undefined && protoProps.length === 0) {\x0d\n    protoProps = undefined;\x0d\n  }\x0d\n\x0d\n  let tag = value[SymbolToStringTag];\x0d\n  // Only list the tag in case it's non-enumerable / not an own property.\x0d\n  // Otherwise we'd print this twice.\x0d\n  if (typeof tag !== 'string' ||\x0d\n      (tag !== '' &&\x0d\n      (ctx.showHidden ?\x0d\n        ObjectPrototypeHasOwnProperty :\x0d\n        ObjectPrototypePropertyIsEnumerable)(\x0d\n        value\x2C SymbolToStringTag\x2C\x0d\n      ))) {\x0d\n    tag = '';\x0d\n  }\x0d\n  let base = '';\x0d\n  let formatter = getEmptyFormatArray;\x0d\n  let braces;\x0d\n  let noIterator = true;\x0d\n  let i = 0;\x0d\n  const filter = ctx.showHidden ? ALL_PROPERTIES : ONLY_ENUMERABLE;\x0d\n\x0d\n  let extrasType = kObjectType;\x0d\n\x0d\n  // Iterators and the rest are split to reduce checks.\x0d\n  // We have to check all values in case the constructor is set to null.\x0d\n  // Otherwise it would not possible to identify all types properly.\x0d\n  if (SymbolIterator in value || constructor === null) {\x0d\n    noIterator = false;\x0d\n    if (ArrayIsArray(value)) {\x0d\n      // Only set the constructor for non ordinary ("Array [...]") arrays.\x0d\n      const prefix = (constructor !== 'Array' || tag !== '') ?\x0d\n        getPrefix(constructor\x2C tag\x2C 'Array'\x2C `(${value.length})`) :\x0d\n        '';\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${braces[0]}]`;\x0d\n      extrasType = kArrayExtrasType;\x0d\n      formatter = formatArray;\x0d\n    } else if (isSet(value)) {\x0d\n      const size = SetPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Set'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        FunctionPrototypeBind(formatSet\x2C null\x2C value) :\x0d\n        FunctionPrototypeBind(formatSet\x2C null\x2C SetPrototypeValues(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isMap(value)) {\x0d\n      const size = MapPrototypeGetSize(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Map'\x2C `(${size})`);\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      formatter = constructor !== null ?\x0d\n        FunctionPrototypeBind(formatMap\x2C null\x2C value) :\x0d\n        FunctionPrototypeBind(formatMap\x2C null\x2C MapPrototypeEntries(value));\x0d\n      if (size === 0 && keys.length === 0 && protoProps === undefined)\x0d\n        return `${prefix}{}`;\x0d\n      braces = [`${prefix}{`\x2C '}'];\x0d\n    } else if (isTypedArray(value)) {\x0d\n      keys = getOwnNonIndexProperties(value\x2C filter);\x0d\n      let bound = value;\x0d\n      let fallback = '';\x0d\n      if (constructor === null) {\x0d\n        fallback = TypedArrayPrototypeGetSymbolToStringTag(value);\x0d\n        // Reconstruct the array information.\x0d\n        bound = new primordials[fallback](value);\x0d\n      }\x0d\n      const size = TypedArrayPrototypeGetLength(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C fallback\x2C `(${size})`);\x0d\n      braces = [`${prefix}[`\x2C ']'];\x0d\n      if (value.length === 0 && keys.length === 0 && !ctx.showHidden)\x0d\n        return `${braces[0]}]`;\x0d\n      // Special handle the value. The original value is required below. The\x0d\n      // bound function is required to reconstruct missing information.\x0d\n      formatter = FunctionPrototypeBind(formatTypedArray\x2C null\x2C bound\x2C size);\x0d\n      extrasType = kArrayExtrasType;\x0d\n    } else if (isMapIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Map'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\x0d\n    } else if (isSetIterator(value)) {\x0d\n      keys = getKeys(value\x2C ctx.showHidden);\x0d\n      braces = getIteratorBraces('Set'\x2C tag);\x0d\n      // Add braces to the formatter parameters.\x0d\n      formatter = FunctionPrototypeBind(formatIterator\x2C null\x2C braces);\x0d\n    } else {\x0d\n      noIterator = true;\x0d\n    }\x0d\n  }\x0d\n  if (noIterator) {\x0d\n    keys = getKeys(value\x2C ctx.showHidden);\x0d\n    braces = ['{'\x2C '}'];\x0d\n    if (constructor === 'Object') {\x0d\n      if (isArgumentsObject(value)) {\x0d\n        braces[0] = '[Arguments] {';\x0d\n      } else if (tag !== '') {\x0d\n        braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Object')}{`;\x0d\n      }\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return `${braces[0]}}`;\x0d\n      }\x0d\n    } else if (typeof value === 'function') {\x0d\n      base = getFunctionBase(value\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return ctx.stylize(base\x2C 'special');\x0d\n    } else if (isRegExp(value)) {\x0d\n      // Make RegExps say that they are RegExps\x0d\n      base = RegExpPrototypeToString(\x0d\n        constructor !== null ? value : new RegExp(value)\x2C\x0d\n      );\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'RegExp');\x0d\n      if (prefix !== 'RegExp ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if ((keys.length === 0 && protoProps === undefined) ||\x0d\n          (recurseTimes > ctx.depth && ctx.depth !== null)) {\x0d\n        return ctx.stylize(base\x2C 'regexp');\x0d\n      }\x0d\n    } else if (isDate(value)) {\x0d\n      // Make dates with properties first say the date\x0d\n      base = NumberIsNaN(DatePrototypeGetTime(value)) ?\x0d\n        DatePrototypeToString(value) :\x0d\n        DatePrototypeToISOString(value);\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C 'Date');\x0d\n      if (prefix !== 'Date ')\x0d\n        base = `${prefix}${base}`;\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return ctx.stylize(base\x2C 'date');\x0d\n      }\x0d\n    } else if (isError(value)) {\x0d\n      base = formatError(value\x2C constructor\x2C tag\x2C ctx\x2C keys);\x0d\n      if (keys.length === 0 && protoProps === undefined)\x0d\n        return base;\x0d\n    } else if (isAnyArrayBuffer(value)) {\x0d\n      // Fast path for ArrayBuffer and SharedArrayBuffer.\x0d\n      // Can't do the same for DataView because it has a non-primitive\x0d\n      // .buffer property that we need to recurse for.\x0d\n      const arrayType = isArrayBuffer(value) ? 'ArrayBuffer' :\x0d\n        'SharedArrayBuffer';\x0d\n      const prefix = getPrefix(constructor\x2C tag\x2C arrayType);\x0d\n      if (typedArray === undefined) {\x0d\n        formatter = formatArrayBuffer;\x0d\n      } else if (keys.length === 0 && protoProps === undefined) {\x0d\n        return prefix +\x0d\n              `{ byteLength: ${formatNumber(ctx.stylize\x2C value.byteLength\x2C false)} }`;\x0d\n      }\x0d\n      braces[0] = `${prefix}{`;\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength');\x0d\n    } else if (isDataView(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'DataView')}{`;\x0d\n      // .buffer goes last\x2C it's not a primitive like the others.\x0d\n      ArrayPrototypeUnshift(keys\x2C 'byteLength'\x2C 'byteOffset'\x2C 'buffer');\x0d\n    } else if (isPromise(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Promise')}{`;\x0d\n      formatter = formatPromise;\x0d\n    } else if (isWeakSet(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakSet')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakSet : formatWeakCollection;\x0d\n    } else if (isWeakMap(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'WeakMap')}{`;\x0d\n      formatter = ctx.showHidden ? formatWeakMap : formatWeakCollection;\x0d\n    } else if (isModuleNamespaceObject(value)) {\x0d\n      braces[0] = `${getPrefix(constructor\x2C tag\x2C 'Module')}{`;\x0d\n      // Special handle keys for namespace objects.\x0d\n      formatter = formatNamespaceObject.bind(null\x2C keys);\x0d\n    } else if (isBoxedPrimitive(value)) {\x0d\n      base = getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag);\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        return base;\x0d\n      }\x0d\n    } else {\x0d\n      if (keys.length === 0 && protoProps === undefined) {\x0d\n        if (isExternal(value)) {\x0d\n          const address = getExternalValue(value).toString(16);\x0d\n          return ctx.stylize(`[External: ${address}]`\x2C 'special');\x0d\n        }\x0d\n        return `${getCtxStyle(value\x2C constructor\x2C tag)}{}`;\x0d\n      }\x0d\n      braces[0] = `${getCtxStyle(value\x2C constructor\x2C tag)}{`;\x0d\n    }\x0d\n  }\x0d\n\x0d\n  if (recurseTimes > ctx.depth && ctx.depth !== null) {\x0d\n    let constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\x0d\n    if (constructor !== null)\x0d\n      constructorName = `[${constructorName}]`;\x0d\n    return ctx.stylize(constructorName\x2C 'special');\x0d\n  }\x0d\n  recurseTimes += 1;\x0d\n\x0d\n  ctx.seen.push(value);\x0d\n  ctx.currentDepth = recurseTimes;\x0d\n  let output;\x0d\n  const indentationLvl = ctx.indentationLvl;\x0d\n  try {\x0d\n    output = formatter(ctx\x2C value\x2C recurseTimes);\x0d\n    for (i = 0; i < keys.length; i++) {\x0d\n      ArrayPrototypePush(\x0d\n        output\x2C\x0d\n        formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C extrasType)\x2C\x0d\n      );\x0d\n    }\x0d\n    if (protoProps !== undefined) {\x0d\n      ArrayPrototypePushApply(output\x2C protoProps);\x0d\n    }\x0d\n  } catch (err) {\x0d\n    const constructorName = StringPrototypeSlice(getCtxStyle(value\x2C constructor\x2C tag)\x2C 0\x2C -1);\x0d\n    return handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl);\x0d\n  }\x0d\n  if (ctx.circular !== undefined) {\x0d\n    const index = ctx.circular.get(value);\x0d\n    if (index !== undefined) {\x0d\n      const reference = ctx.stylize(`<ref *${index}>`\x2C 'special');\x0d\n      // Add reference always to the very beginning of the output.\x0d\n      if (ctx.compact !== true) {\x0d\n        base = base === '' ? reference : `${reference} ${base}`;\x0d\n      } else {\x0d\n        braces[0] = `${reference} ${braces[0]}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  ctx.seen.pop();\x0d\n\x0d\n  if (ctx.sorted) {\x0d\n    const comparator = ctx.sorted === true ? undefined : ctx.sorted;\x0d\n    if (extrasType === kObjectType) {\x0d\n      ArrayPrototypeSort(output\x2C comparator);\x0d\n    } else if (keys.length > 1) {\x0d\n      const sorted = ArrayPrototypeSort(ArrayPrototypeSlice(output\x2C output.length - keys.length)\x2C comparator);\x0d\n      ArrayPrototypeUnshift(sorted\x2C output\x2C output.length - keys.length\x2C keys.length);\x0d\n      ReflectApply(ArrayPrototypeSplice\x2C null\x2C sorted);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  const res = reduceToSingleString(\x0d\n    ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value);\x0d\n  const budget = ctx.budget[ctx.indentationLvl] || 0;\x0d\n  const newLength = budget + res.length;\x0d\n  ctx.budget[ctx.indentationLvl] = newLength;\x0d\n  // If any indentationLvl exceeds this limit\x2C limit further inspecting to the\x0d\n  // minimum. Otherwise the recursive algorithm might continue inspecting the\x0d\n  // object even though the maximum string size (~2 ** 28 on 32 bit systems and\x0d\n  // ~2 ** 30 on 64 bit systems) exceeded. The actual output is not limited at\x0d\n  // exactly 2 ** 27 but a bit higher. This depends on the object shape.\x0d\n  // This limit also makes sure that huge objects don't block the event loop\x0d\n  // significantly.\x0d\n  if (newLength > 2 ** 27) {\x0d\n    ctx.depth = -1;\x0d\n  }\x0d\n  return res;\x0d\n}\x0d\n\x0d\nfunction getIteratorBraces(type\x2C tag) {\x0d\n  if (tag !== `${type} Iterator`) {\x0d\n    if (tag !== '')\x0d\n      tag += '] [';\x0d\n    tag += `${type} Iterator`;\x0d\n  }\x0d\n  return [`[${tag}] {`\x2C '}'];\x0d\n}\x0d\n\x0d\nfunction getBoxedBase(value\x2C ctx\x2C keys\x2C constructor\x2C tag) {\x0d\n  let fn;\x0d\n  let type;\x0d\n  if (isNumberObject(value)) {\x0d\n    fn = NumberPrototypeValueOf;\x0d\n    type = 'Number';\x0d\n  } else if (isStringObject(value)) {\x0d\n    fn = StringPrototypeValueOf;\x0d\n    type = 'String';\x0d\n    // For boxed Strings\x2C we have to remove the 0-n indexed entries\x2C\x0d\n    // since they just noisy up the output and are redundant\x0d\n    // Make boxed primitive Strings look like such\x0d\n    keys.splice(0\x2C value.length);\x0d\n  } else if (isBooleanObject(value)) {\x0d\n    fn = BooleanPrototypeValueOf;\x0d\n    type = 'Boolean';\x0d\n  } else if (isBigIntObject(value)) {\x0d\n    fn = BigIntPrototypeValueOf;\x0d\n    type = 'BigInt';\x0d\n  } else {\x0d\n    fn = SymbolPrototypeValueOf;\x0d\n    type = 'Symbol';\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (type !== constructor) {\x0d\n    if (constructor === null) {\x0d\n      base += ' (null prototype)';\x0d\n    } else {\x0d\n      base += ` (${constructor})`;\x0d\n    }\x0d\n  }\x0d\n  base += `: ${formatPrimitive(stylizeNoColor\x2C fn(value)\x2C ctx)}]`;\x0d\n  if (tag !== '' && tag !== constructor) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (keys.length !== 0 || ctx.stylize === stylizeNoColor)\x0d\n    return base;\x0d\n  return ctx.stylize(base\x2C StringPrototypeToLowerCase(type));\x0d\n}\x0d\n\x0d\nfunction getClassBase(value\x2C constructor\x2C tag) {\x0d\n  const hasName = ObjectPrototypeHasOwnProperty(value\x2C 'name');\x0d\n  const name = (hasName && value.name) || '(anonymous)';\x0d\n  let base = `class ${name}`;\x0d\n  if (constructor !== 'Function' && constructor !== null) {\x0d\n    base += ` [${constructor}]`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  if (constructor !== null) {\x0d\n    const superName = ObjectGetPrototypeOf(value).name;\x0d\n    if (superName) {\x0d\n      base += ` extends ${superName}`;\x0d\n    }\x0d\n  } else {\x0d\n    base += ' extends [null prototype]';\x0d\n  }\x0d\n  return `[${base}]`;\x0d\n}\x0d\n\x0d\nfunction getFunctionBase(value\x2C constructor\x2C tag) {\x0d\n  const stringified = FunctionPrototypeToString(value);\x0d\n  if (StringPrototypeStartsWith(stringified\x2C 'class') && StringPrototypeEndsWith(stringified\x2C '}')) {\x0d\n    const slice = StringPrototypeSlice(stringified\x2C 5\x2C -1);\x0d\n    const bracketIndex = StringPrototypeIndexOf(slice\x2C '{');\x0d\n    if (bracketIndex !== -1 &&\x0d\n        (!StringPrototypeIncludes(StringPrototypeSlice(slice\x2C 0\x2C bracketIndex)\x2C '(') ||\x0d\n        // Slow path to guarantee that it's indeed a class.\x0d\n        RegExpPrototypeExec(classRegExp\x2C RegExpPrototypeSymbolReplace(stripCommentsRegExp\x2C slice)) !== null)\x0d\n    ) {\x0d\n      return getClassBase(value\x2C constructor\x2C tag);\x0d\n    }\x0d\n  }\x0d\n  let type = 'Function';\x0d\n  if (isGeneratorFunction(value)) {\x0d\n    type = `Generator${type}`;\x0d\n  }\x0d\n  if (isAsyncFunction(value)) {\x0d\n    type = `Async${type}`;\x0d\n  }\x0d\n  let base = `[${type}`;\x0d\n  if (constructor === null) {\x0d\n    base += ' (null prototype)';\x0d\n  }\x0d\n  if (value.name === '') {\x0d\n    base += ' (anonymous)';\x0d\n  } else {\x0d\n    base += `: ${value.name}`;\x0d\n  }\x0d\n  base += ']';\x0d\n  if (constructor !== type && constructor !== null) {\x0d\n    base += ` ${constructor}`;\x0d\n  }\x0d\n  if (tag !== '' && constructor !== tag) {\x0d\n    base += ` [${tag}]`;\x0d\n  }\x0d\n  return base;\x0d\n}\x0d\n\x0d\nfunction identicalSequenceRange(a\x2C b) {\x0d\n  for (let i = 0; i < a.length - 3; i++) {\x0d\n    // Find the first entry of b that matches the current entry of a.\x0d\n    const pos = ArrayPrototypeIndexOf(b\x2C a[i]);\x0d\n    if (pos !== -1) {\x0d\n      const rest = b.length - pos;\x0d\n      if (rest > 3) {\x0d\n        let len = 1;\x0d\n        const maxLen = MathMin(a.length - i\x2C rest);\x0d\n        // Count the number of consecutive entries.\x0d\n        while (maxLen > len && a[i + len] === b[pos + len]) {\x0d\n          len++;\x0d\n        }\x0d\n        if (len > 3) {\x0d\n          return { len\x2C offset: i };\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  return { len: 0\x2C offset: 0 };\x0d\n}\x0d\n\x0d\nfunction getStackString(error) {\x0d\n  return error.stack ? String(error.stack) : ErrorPrototypeToString(error);\x0d\n}\x0d\n\x0d\nfunction getStackFrames(ctx\x2C err\x2C stack) {\x0d\n  const frames = StringPrototypeSplit(stack\x2C '\\n');\x0d\n\x0d\n  let cause;\x0d\n  try {\x0d\n    ({ cause } = err);\x0d\n  } catch {\x0d\n    // If 'cause' is a getter that throws\x2C ignore it.\x0d\n  }\x0d\n\x0d\n  // Remove stack frames identical to frames in cause.\x0d\n  if (cause != null && isError(cause)) {\x0d\n    const causeStack = getStackString(cause);\x0d\n    const causeStackStart = StringPrototypeIndexOf(causeStack\x2C '\\n    at');\x0d\n    if (causeStackStart !== -1) {\x0d\n      const causeFrames = StringPrototypeSplit(StringPrototypeSlice(causeStack\x2C causeStackStart + 1)\x2C '\\n');\x0d\n      const { len\x2C offset } = identicalSequenceRange(frames\x2C causeFrames);\x0d\n      if (len > 0) {\x0d\n        const skipped = len - 2;\x0d\n        const msg = `    ... ${skipped} lines matching cause stack trace ...`;\x0d\n        frames.splice(offset + 1\x2C skipped\x2C ctx.stylize(msg\x2C 'undefined'));\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return frames;\x0d\n}\x0d\n\x0d\nfunction improveStack(stack\x2C constructor\x2C name\x2C tag) {\x0d\n  // A stack trace may contain arbitrary data. Only manipulate the output\x0d\n  // for "regular errors" (errors that "look normal") for now.\x0d\n  let len = name.length;\x0d\n\x0d\n  if (constructor === null ||\x0d\n      (StringPrototypeEndsWith(name\x2C 'Error') &&\x0d\n      StringPrototypeStartsWith(stack\x2C name) &&\x0d\n      (stack.length === len || stack[len] === ':' || stack[len] === '\\n'))) {\x0d\n    let fallback = 'Error';\x0d\n    if (constructor === null) {\x0d\n      const start = RegExpPrototypeExec(/^([A-Z][a-z_ A-Z0-9[\\]()-]+)(?::|\\n {4}at)/\x2C stack) ||\x0d\n      RegExpPrototypeExec(/^([a-z_A-Z0-9-]*Error)$/\x2C stack);\x0d\n      fallback = (start && start[1]) || '';\x0d\n      len = fallback.length;\x0d\n      fallback = fallback || 'Error';\x0d\n    }\x0d\n    const prefix = StringPrototypeSlice(getPrefix(constructor\x2C tag\x2C fallback)\x2C 0\x2C -1);\x0d\n    if (name !== prefix) {\x0d\n      if (StringPrototypeIncludes(prefix\x2C name)) {\x0d\n        if (len === 0) {\x0d\n          stack = `${prefix}: ${stack}`;\x0d\n        } else {\x0d\n          stack = `${prefix}${StringPrototypeSlice(stack\x2C len)}`;\x0d\n        }\x0d\n      } else {\x0d\n        stack = `${prefix} [${name}]${StringPrototypeSlice(stack\x2C len)}`;\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack) {\x0d\n  if (!ctx.showHidden && keys.length !== 0) {\x0d\n    for (const name of ['name'\x2C 'message'\x2C 'stack']) {\x0d\n      const index = ArrayPrototypeIndexOf(keys\x2C name);\x0d\n      // Only hide the property in case it's part of the original stack\x0d\n      if (index !== -1 && StringPrototypeIncludes(stack\x2C err[name])) {\x0d\n        ArrayPrototypeSplice(keys\x2C index\x2C 1);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction markNodeModules(ctx\x2C line) {\x0d\n  let tempLine = '';\x0d\n  let nodeModule;\x0d\n  let pos = 0;\x0d\n  while ((nodeModule = nodeModulesRegExp.exec(line)) !== null) {\x0d\n    // '/node_modules/'.length === 14\x0d\n    tempLine += StringPrototypeSlice(line\x2C pos\x2C nodeModule.index + 14);\x0d\n    tempLine += ctx.stylize(nodeModule[1]\x2C 'module');\x0d\n    pos = nodeModule.index + nodeModule[0].length;\x0d\n  }\x0d\n  if (pos !== 0) {\x0d\n    line = tempLine + StringPrototypeSlice(line\x2C pos);\x0d\n  }\x0d\n  return line;\x0d\n}\x0d\n\x0d\nfunction markCwd(ctx\x2C line\x2C workingDirectory) {\x0d\n  let cwdStartPos = StringPrototypeIndexOf(line\x2C workingDirectory);\x0d\n  let tempLine = '';\x0d\n  let cwdLength = workingDirectory.length;\x0d\n  if (cwdStartPos !== -1) {\x0d\n    if (StringPrototypeSlice(line\x2C cwdStartPos - 7\x2C cwdStartPos) === 'file://') {\x0d\n      cwdLength += 7;\x0d\n      cwdStartPos -= 7;\x0d\n    }\x0d\n    const start = line[cwdStartPos - 1] === '(' ? cwdStartPos - 1 : cwdStartPos;\x0d\n    const end = start !== cwdStartPos && StringPrototypeEndsWith(line\x2C ')') ? -1 : line.length;\x0d\n    const workingDirectoryEndPos = cwdStartPos + cwdLength + 1;\x0d\n    const cwdSlice = StringPrototypeSlice(line\x2C start\x2C workingDirectoryEndPos);\x0d\n\x0d\n    tempLine += StringPrototypeSlice(line\x2C 0\x2C start);\x0d\n    tempLine += ctx.stylize(cwdSlice\x2C 'undefined');\x0d\n    tempLine += StringPrototypeSlice(line\x2C workingDirectoryEndPos\x2C end);\x0d\n    if (end === -1) {\x0d\n      tempLine += ctx.stylize(')'\x2C 'undefined');\x0d\n    }\x0d\n  } else {\x0d\n    tempLine += line;\x0d\n  }\x0d\n  return tempLine;\x0d\n}\x0d\n\x0d\nfunction safeGetCWD() {\x0d\n  let workingDirectory;\x0d\n  try {\x0d\n    workingDirectory = process.cwd();\x0d\n  } catch {\x0d\n    return;\x0d\n  }\x0d\n  return workingDirectory;\x0d\n}\x0d\n\x0d\nfunction formatError(err\x2C constructor\x2C tag\x2C ctx\x2C keys) {\x0d\n  const name = err.name != null ? String(err.name) : 'Error';\x0d\n  let stack = getStackString(err);\x0d\n\x0d\n  removeDuplicateErrorKeys(ctx\x2C keys\x2C err\x2C stack);\x0d\n\x0d\n  if ('cause' in err &&\x0d\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'cause'))) {\x0d\n    ArrayPrototypePush(keys\x2C 'cause');\x0d\n  }\x0d\n\x0d\n  // Print errors aggregated into AggregateError\x0d\n  if (ArrayIsArray(err.errors) &&\x0d\n      (keys.length === 0 || !ArrayPrototypeIncludes(keys\x2C 'errors'))) {\x0d\n    ArrayPrototypePush(keys\x2C 'errors');\x0d\n  }\x0d\n\x0d\n  stack = improveStack(stack\x2C constructor\x2C name\x2C tag);\x0d\n\x0d\n  // Ignore the error message if it's contained in the stack.\x0d\n  let pos = (err.message && StringPrototypeIndexOf(stack\x2C err.message)) || -1;\x0d\n  if (pos !== -1)\x0d\n    pos += err.message.length;\x0d\n  // Wrap the error in brackets in case it has no stack trace.\x0d\n  const stackStart = StringPrototypeIndexOf(stack\x2C '\\n    at'\x2C pos);\x0d\n  if (stackStart === -1) {\x0d\n    stack = `[${stack}]`;\x0d\n  } else {\x0d\n    let newStack = StringPrototypeSlice(stack\x2C 0\x2C stackStart);\x0d\n    const stackFramePart = StringPrototypeSlice(stack\x2C stackStart + 1);\x0d\n    const lines = getStackFrames(ctx\x2C err\x2C stackFramePart);\x0d\n    if (ctx.colors) {\x0d\n      // Highlight userland code and node modules.\x0d\n      const workingDirectory = safeGetCWD();\x0d\n      let esmWorkingDirectory;\x0d\n      for (let line of lines) {\x0d\n        const core = RegExpPrototypeExec(coreModuleRegExp\x2C line);\x0d\n        if (core !== null && BuiltinModule.exists(core[1])) {\x0d\n          newStack += `\\n${ctx.stylize(line\x2C 'undefined')}`;\x0d\n        } else {\x0d\n          newStack += '\\n';\x0d\n\x0d\n          line = markNodeModules(ctx\x2C line);\x0d\n          if (workingDirectory !== undefined) {\x0d\n            let newLine = markCwd(ctx\x2C line\x2C workingDirectory);\x0d\n            if (newLine === line) {\x0d\n              esmWorkingDirectory ??= pathToFileUrlHref(workingDirectory);\x0d\n              newLine = markCwd(ctx\x2C line\x2C esmWorkingDirectory);\x0d\n            }\x0d\n            line = newLine;\x0d\n          }\x0d\n\x0d\n          newStack += line;\x0d\n        }\x0d\n      }\x0d\n    } else {\x0d\n      newStack += `\\n${ArrayPrototypeJoin(lines\x2C '\\n')}`;\x0d\n    }\x0d\n    stack = newStack;\x0d\n  }\x0d\n  // The message and the stack have to be indented as well!\x0d\n  if (ctx.indentationLvl !== 0) {\x0d\n    const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n    stack = StringPrototypeReplaceAll(stack\x2C '\\n'\x2C `\\n${indentation}`);\x0d\n  }\x0d\n  return stack;\x0d\n}\x0d\n\x0d\nfunction groupArrayElements(ctx\x2C output\x2C value) {\x0d\n  let totalLength = 0;\x0d\n  let maxLength = 0;\x0d\n  let i = 0;\x0d\n  let outputLength = output.length;\x0d\n  if (ctx.maxArrayLength < output.length) {\x0d\n    // This makes sure the "... n more items" part is not taken into account.\x0d\n    outputLength--;\x0d\n  }\x0d\n  const separatorSpace = 2; // Add 1 for the space and 1 for the separator.\x0d\n  const dataLen = new Array(outputLength);\x0d\n  // Calculate the total length of all output entries and the individual max\x0d\n  // entries length of all output entries. We have to remove colors first\x2C\x0d\n  // otherwise the length would not be calculated properly.\x0d\n  for (; i < outputLength; i++) {\x0d\n    const len = getStringWidth(output[i]\x2C ctx.colors);\x0d\n    dataLen[i] = len;\x0d\n    totalLength += len + separatorSpace;\x0d\n    if (maxLength < len)\x0d\n      maxLength = len;\x0d\n  }\x0d\n  // Add two to `maxLength` as we add a single whitespace character plus a comma\x0d\n  // in-between two entries.\x0d\n  const actualMax = maxLength + separatorSpace;\x0d\n  // Check if at least three entries fit next to each other and prevent grouping\x0d\n  // of arrays that contains entries of very different length (i.e.\x2C if a single\x0d\n  // entry is longer than 1/5 of all other entries combined). Otherwise the\x0d\n  // space in-between small entries would be enormous.\x0d\n  if (actualMax * 3 + ctx.indentationLvl < ctx.breakLength &&\x0d\n      (totalLength / actualMax > 5 || maxLength <= 6)) {\x0d\n\x0d\n    const approxCharHeights = 2.5;\x0d\n    const averageBias = MathSqrt(actualMax - totalLength / output.length);\x0d\n    const biasedMax = MathMax(actualMax - 3 - averageBias\x2C 1);\x0d\n    // Dynamically check how many columns seem possible.\x0d\n    const columns = MathMin(\x0d\n      // Ideally a square should be drawn. We expect a character to be about 2.5\x0d\n      // times as high as wide. This is the area formula to calculate a square\x0d\n      // which contains n rectangles of size `actualMax * approxCharHeights`.\x0d\n      // Divide that by `actualMax` to receive the correct number of columns.\x0d\n      // The added bias increases the columns for short entries.\x0d\n      MathRound(\x0d\n        MathSqrt(\x0d\n          approxCharHeights * biasedMax * outputLength\x2C\x0d\n        ) / biasedMax\x2C\x0d\n      )\x2C\x0d\n      // Do not exceed the breakLength.\x0d\n      MathFloor((ctx.breakLength - ctx.indentationLvl) / actualMax)\x2C\x0d\n      // Limit array grouping for small `compact` modes as the user requested\x0d\n      // minimal grouping.\x0d\n      ctx.compact * 4\x2C\x0d\n      // Limit the columns to a maximum of fifteen.\x0d\n      15\x2C\x0d\n    );\x0d\n    // Return with the original output if no grouping should happen.\x0d\n    if (columns <= 1) {\x0d\n      return output;\x0d\n    }\x0d\n    const tmp = [];\x0d\n    const maxLineLength = [];\x0d\n    for (let i = 0; i < columns; i++) {\x0d\n      let lineMaxLength = 0;\x0d\n      for (let j = i; j < output.length; j += columns) {\x0d\n        if (dataLen[j] > lineMaxLength)\x0d\n          lineMaxLength = dataLen[j];\x0d\n      }\x0d\n      lineMaxLength += separatorSpace;\x0d\n      maxLineLength[i] = lineMaxLength;\x0d\n    }\x0d\n    let order = StringPrototypePadStart;\x0d\n    if (value !== undefined) {\x0d\n      for (let i = 0; i < output.length; i++) {\x0d\n        if (typeof value[i] !== 'number' && typeof value[i] !== 'bigint') {\x0d\n          order = StringPrototypePadEnd;\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Each iteration creates a single line of grouped entries.\x0d\n    for (let i = 0; i < outputLength; i += columns) {\x0d\n      // The last lines may contain less entries than columns.\x0d\n      const max = MathMin(i + columns\x2C outputLength);\x0d\n      let str = '';\x0d\n      let j = i;\x0d\n      for (; j < max - 1; j++) {\x0d\n        // Calculate extra color padding in case it's active. This has to be\x0d\n        // done line by line as some lines might contain more colors than\x0d\n        // others.\x0d\n        const padding = maxLineLength[j - i] + output[j].length - dataLen[j];\x0d\n        str += order(`${output[j]}\x2C `\x2C padding\x2C ' ');\x0d\n      }\x0d\n      if (order === StringPrototypePadStart) {\x0d\n        const padding = maxLineLength[j - i] +\x0d\n                        output[j].length -\x0d\n                        dataLen[j] -\x0d\n                        separatorSpace;\x0d\n        str += StringPrototypePadStart(output[j]\x2C padding\x2C ' ');\x0d\n      } else {\x0d\n        str += output[j];\x0d\n      }\x0d\n      ArrayPrototypePush(tmp\x2C str);\x0d\n    }\x0d\n    if (ctx.maxArrayLength < output.length) {\x0d\n      ArrayPrototypePush(tmp\x2C output[outputLength]);\x0d\n    }\x0d\n    output = tmp;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction handleMaxCallStackSize(ctx\x2C err\x2C constructorName\x2C indentationLvl) {\x0d\n  if (isStackOverflowError(err)) {\x0d\n    ctx.seen.pop();\x0d\n    ctx.indentationLvl = indentationLvl;\x0d\n    return ctx.stylize(\x0d\n      `[${constructorName}: Inspection interrupted ` +\x0d\n        'prematurely. Maximum call stack size exceeded.]'\x2C\x0d\n      'special'\x2C\x0d\n    );\x0d\n  }\x0d\n  /* c8 ignore next */\x0d\n  assert.fail(err.stack);\x0d\n}\x0d\n\x0d\nfunction addNumericSeparator(integerString) {\x0d\n  let result = '';\x0d\n  let i = integerString.length;\x0d\n  const start = StringPrototypeStartsWith(integerString\x2C '-') ? 1 : 0;\x0d\n  for (; i >= start + 4; i -= 3) {\x0d\n    result = `_${StringPrototypeSlice(integerString\x2C i - 3\x2C i)}${result}`;\x0d\n  }\x0d\n  return i === integerString.length ?\x0d\n    integerString :\x0d\n    `${StringPrototypeSlice(integerString\x2C 0\x2C i)}${result}`;\x0d\n}\x0d\n\x0d\nfunction addNumericSeparatorEnd(integerString) {\x0d\n  let result = '';\x0d\n  let i = 0;\x0d\n  for (; i < integerString.length - 3; i += 3) {\x0d\n    result += `${StringPrototypeSlice(integerString\x2C i\x2C i + 3)}_`;\x0d\n  }\x0d\n  return i === 0 ?\x0d\n    integerString :\x0d\n    `${result}${StringPrototypeSlice(integerString\x2C i)}`;\x0d\n}\x0d\n\x0d\nconst remainingText = (remaining) => `... ${remaining} more item${remaining > 1 ? 's' : ''}`;\x0d\n\x0d\nfunction formatNumber(fn\x2C number\x2C numericSeparator) {\x0d\n  if (!numericSeparator) {\x0d\n    // Format -0 as '-0'. Checking `number === -0` won't distinguish 0 from -0.\x0d\n    if (ObjectIs(number\x2C -0)) {\x0d\n      return fn('-0'\x2C 'number');\x0d\n    }\x0d\n    return fn(`${number}`\x2C 'number');\x0d\n  }\x0d\n  const integer = MathTrunc(number);\x0d\n  const string = String(integer);\x0d\n  if (integer === number) {\x0d\n    if (!NumberIsFinite(number) || StringPrototypeIncludes(string\x2C 'e')) {\x0d\n      return fn(string\x2C 'number');\x0d\n    }\x0d\n    return fn(`${addNumericSeparator(string)}`\x2C 'number');\x0d\n  }\x0d\n  if (NumberIsNaN(number)) {\x0d\n    return fn(string\x2C 'number');\x0d\n  }\x0d\n  return fn(`${\x0d\n    addNumericSeparator(string)\x0d\n  }.${\x0d\n    addNumericSeparatorEnd(\x0d\n      StringPrototypeSlice(String(number)\x2C string.length + 1)\x2C\x0d\n    )\x0d\n  }`\x2C 'number');\x0d\n}\x0d\n\x0d\nfunction formatBigInt(fn\x2C bigint\x2C numericSeparator) {\x0d\n  const string = String(bigint);\x0d\n  if (!numericSeparator) {\x0d\n    return fn(`${string}n`\x2C 'bigint');\x0d\n  }\x0d\n  return fn(`${addNumericSeparator(string)}n`\x2C 'bigint');\x0d\n}\x0d\n\x0d\nfunction formatPrimitive(fn\x2C value\x2C ctx) {\x0d\n  if (typeof value === 'string') {\x0d\n    let trailer = '';\x0d\n    if (value.length > ctx.maxStringLength) {\x0d\n      const remaining = value.length - ctx.maxStringLength;\x0d\n      value = StringPrototypeSlice(value\x2C 0\x2C ctx.maxStringLength);\x0d\n      trailer = `... ${remaining} more character${remaining > 1 ? 's' : ''}`;\x0d\n    }\x0d\n    if (ctx.compact !== true &&\x0d\n        // We do not support handling unicode characters width with\x0d\n        // the readline getStringWidth function as there are\x0d\n        // performance implications.\x0d\n        value.length > kMinLineLength &&\x0d\n        value.length > ctx.breakLength - ctx.indentationLvl - 4) {\x0d\n      return ArrayPrototypeJoin(\x0d\n        ArrayPrototypeMap(\x0d\n          RegExpPrototypeSymbolSplit(/(?<=\\n)/\x2C value)\x2C\x0d\n          (line) => fn(strEscape(line)\x2C 'string')\x2C\x0d\n        )\x2C\x0d\n        ` +\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl + 2)}`\x2C\x0d\n      ) + trailer;\x0d\n    }\x0d\n    return fn(strEscape(value)\x2C 'string') + trailer;\x0d\n  }\x0d\n  if (typeof value === 'number')\x0d\n    return formatNumber(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'bigint')\x0d\n    return formatBigInt(fn\x2C value\x2C ctx.numericSeparator);\x0d\n  if (typeof value === 'boolean')\x0d\n    return fn(`${value}`\x2C 'boolean');\x0d\n  if (typeof value === 'undefined')\x0d\n    return fn('undefined'\x2C 'undefined');\x0d\n  // es6 symbol primitive\x0d\n  return fn(SymbolPrototypeToString(value)\x2C 'symbol');\x0d\n}\x0d\n\x0d\nfunction formatNamespaceObject(keys\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const output = new Array(keys.length);\x0d\n  for (let i = 0; i < keys.length; i++) {\x0d\n    try {\x0d\n      output[i] = formatProperty(ctx\x2C value\x2C recurseTimes\x2C keys[i]\x2C\x0d\n                                 kObjectType);\x0d\n    } catch (err) {\x0d\n      assert(isNativeError(err) && err.name === 'ReferenceError');\x0d\n      // Use the existing functionality. This makes sure the indentation and\x0d\n      // line breaks are always correct. Otherwise it is very difficult to keep\x0d\n      // this aligned\x2C even though this is a hacky way of dealing with this.\x0d\n      const tmp = { [keys[i]]: '' };\x0d\n      output[i] = formatProperty(ctx\x2C tmp\x2C recurseTimes\x2C keys[i]\x2C kObjectType);\x0d\n      const pos = StringPrototypeLastIndexOf(output[i]\x2C ' ');\x0d\n      // We have to find the last whitespace and have to replace that value as\x0d\n      // it will be visualized as a regular string.\x0d\n      output[i] = StringPrototypeSlice(output[i]\x2C 0\x2C pos + 1) +\x0d\n                  ctx.stylize('<uninitialized>'\x2C 'special');\x0d\n    }\x0d\n  }\x0d\n  // Reset the keys to an empty array. This prevents duplicated inspection.\x0d\n  keys.length = 0;\x0d\n  return output;\x0d\n}\x0d\n\x0d\n// The array is sparse and/or has extra keys\x0d\nfunction formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C maxLength\x2C output\x2C i) {\x0d\n  const keys = ObjectKeys(value);\x0d\n  let index = i;\x0d\n  for (; i < keys.length && output.length < maxLength; i++) {\x0d\n    const key = keys[i];\x0d\n    const tmp = +key;\x0d\n    // Arrays can only have up to 2^32 - 1 entries\x0d\n    if (tmp > 2 ** 32 - 2) {\x0d\n      break;\x0d\n    }\x0d\n    if (`${index}` !== key) {\x0d\n      if (RegExpPrototypeExec(numberRegExp\x2C key) === null) {\x0d\n        break;\x0d\n      }\x0d\n      const emptyItems = tmp - index;\x0d\n      const ending = emptyItems > 1 ? 's' : '';\x0d\n      const message = `<${emptyItems} empty item${ending}>`;\x0d\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\x0d\n      index = tmp;\x0d\n      if (output.length === maxLength) {\x0d\n        break;\x0d\n      }\x0d\n    }\x0d\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C kArrayType));\x0d\n    index++;\x0d\n  }\x0d\n  const remaining = value.length - index;\x0d\n  if (output.length !== maxLength) {\x0d\n    if (remaining > 0) {\x0d\n      const ending = remaining > 1 ? 's' : '';\x0d\n      const message = `<${remaining} empty item${ending}>`;\x0d\n      ArrayPrototypePush(output\x2C ctx.stylize(message\x2C 'undefined'));\x0d\n    }\x0d\n  } else if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatArrayBuffer(ctx\x2C value) {\x0d\n  let buffer;\x0d\n  try {\x0d\n    buffer = new Uint8Array(value);\x0d\n  } catch {\x0d\n    return [ctx.stylize('(detached)'\x2C 'special')];\x0d\n  }\x0d\n  if (hexSlice === undefined)\x0d\n    hexSlice = uncurryThis(require('buffer').Buffer.prototype.hexSlice);\x0d\n  let str = StringPrototypeTrim(RegExpPrototypeSymbolReplace(\x0d\n    /(.{2})/g\x2C\x0d\n    hexSlice(buffer\x2C 0\x2C MathMin(ctx.maxArrayLength\x2C buffer.length))\x2C\x0d\n    '$1 '\x2C\x0d\n  ));\x0d\n  const remaining = buffer.length - ctx.maxArrayLength;\x0d\n  if (remaining > 0)\x0d\n    str += ` ... ${remaining} more byte${remaining > 1 ? 's' : ''}`;\x0d\n  return [`${ctx.stylize('[Uint8Contents]'\x2C 'special')}: <${str}>`];\x0d\n}\x0d\n\x0d\nfunction formatArray(ctx\x2C value\x2C recurseTimes) {\x0d\n  const valLen = value.length;\x0d\n  const len = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C valLen);\x0d\n\x0d\n  const remaining = valLen - len;\x0d\n  const output = [];\x0d\n  for (let i = 0; i < len; i++) {\x0d\n    // Special handle sparse arrays.\x0d\n    if (!ObjectPrototypeHasOwnProperty(value\x2C i)) {\x0d\n      return formatSpecialArray(ctx\x2C value\x2C recurseTimes\x2C len\x2C output\x2C i);\x0d\n    }\x0d\n    ArrayPrototypePush(output\x2C formatProperty(ctx\x2C value\x2C recurseTimes\x2C i\x2C kArrayType));\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatTypedArray(value\x2C length\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = value.length - maxLength;\x0d\n  const output = new Array(maxLength);\x0d\n  const elementFormatter = value.length > 0 && typeof value[0] === 'number' ?\x0d\n    formatNumber :\x0d\n    formatBigInt;\x0d\n  for (let i = 0; i < maxLength; ++i) {\x0d\n    output[i] = elementFormatter(ctx.stylize\x2C value[i]\x2C ctx.numericSeparator);\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    output[maxLength] = remainingText(remaining);\x0d\n  }\x0d\n  if (ctx.showHidden) {\x0d\n    // .buffer goes last\x2C it's not a primitive like the others.\x0d\n    // All besides `BYTES_PER_ELEMENT` are actually getters.\x0d\n    ctx.indentationLvl += 2;\x0d\n    for (const key of [\x0d\n      'BYTES_PER_ELEMENT'\x2C\x0d\n      'length'\x2C\x0d\n      'byteLength'\x2C\x0d\n      'byteOffset'\x2C\x0d\n      'buffer'\x2C\x0d\n    ]) {\x0d\n      const str = formatValue(ctx\x2C value[key]\x2C recurseTimes\x2C true);\x0d\n      ArrayPrototypePush(output\x2C `[${key}]: ${str}`);\x0d\n    }\x0d\n    ctx.indentationLvl -= 2;\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSet(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const length = value.size;\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = length - maxLength;\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  let i = 0;\x0d\n  for (const v of value) {\x0d\n    if (i >= maxLength) break;\x0d\n    ArrayPrototypePush(output\x2C formatValue(ctx\x2C v\x2C recurseTimes));\x0d\n    i++;\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMap(value\x2C ctx\x2C ignored\x2C recurseTimes) {\x0d\n  const length = value.size;\x0d\n  const maxLength = MathMin(MathMax(0\x2C ctx.maxArrayLength)\x2C length);\x0d\n  const remaining = length - maxLength;\x0d\n  const output = [];\x0d\n  ctx.indentationLvl += 2;\x0d\n  let i = 0;\x0d\n  for (const { 0: k\x2C 1: v } of value) {\x0d\n    if (i >= maxLength) break;\x0d\n    ArrayPrototypePush(\x0d\n      output\x2C\x0d\n      `${formatValue(ctx\x2C k\x2C recurseTimes)} => ${formatValue(ctx\x2C v\x2C recurseTimes)}`\x2C\x0d\n    );\x0d\n    i++;\x0d\n  }\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  const maxLength = MathMin(maxArrayLength\x2C entries.length);\x0d\n  const output = new Array(maxLength);\x0d\n  ctx.indentationLvl += 2;\x0d\n  for (let i = 0; i < maxLength; i++) {\x0d\n    output[i] = formatValue(ctx\x2C entries[i]\x2C recurseTimes);\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (state === kWeak && !ctx.sorted) {\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    ArrayPrototypeSort(output);\x0d\n  }\x0d\n  const remaining = entries.length - maxLength;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C state) {\x0d\n  const maxArrayLength = MathMax(ctx.maxArrayLength\x2C 0);\x0d\n  // Entries exist as [key1\x2C val1\x2C key2\x2C val2\x2C ...]\x0d\n  const len = entries.length / 2;\x0d\n  const remaining = len - maxArrayLength;\x0d\n  const maxLength = MathMin(maxArrayLength\x2C len);\x0d\n  const output = new Array(maxLength);\x0d\n  let i = 0;\x0d\n  ctx.indentationLvl += 2;\x0d\n  if (state === kWeak) {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      output[i] =\x0d\n        `${formatValue(ctx\x2C entries[pos]\x2C recurseTimes)} => ${formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)}`;\x0d\n    }\x0d\n    // Sort all entries to have a halfway reliable output (if more entries than\x0d\n    // retrieved ones exist\x2C we can not reliably return the same output) if the\x0d\n    // output is not sorted anyway.\x0d\n    if (!ctx.sorted)\x0d\n      ArrayPrototypeSort(output);\x0d\n  } else {\x0d\n    for (; i < maxLength; i++) {\x0d\n      const pos = i * 2;\x0d\n      const res = [\x0d\n        formatValue(ctx\x2C entries[pos]\x2C recurseTimes)\x2C\x0d\n        formatValue(ctx\x2C entries[pos + 1]\x2C recurseTimes)\x2C\x0d\n      ];\x0d\n      output[i] = reduceToSingleString(\x0d\n        ctx\x2C res\x2C ''\x2C ['['\x2C ']']\x2C kArrayExtrasType\x2C recurseTimes);\x0d\n    }\x0d\n  }\x0d\n  ctx.indentationLvl -= 2;\x0d\n  if (remaining > 0) {\x0d\n    ArrayPrototypePush(output\x2C remainingText(remaining));\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatWeakCollection(ctx) {\x0d\n  return [ctx.stylize('<items unknown>'\x2C 'special')];\x0d\n}\x0d\n\x0d\nfunction formatWeakSet(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatWeakMap(ctx\x2C value\x2C recurseTimes) {\x0d\n  const entries = previewEntries(value);\x0d\n  return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kWeak);\x0d\n}\x0d\n\x0d\nfunction formatIterator(braces\x2C ctx\x2C value\x2C recurseTimes) {\x0d\n  const { 0: entries\x2C 1: isKeyValue } = previewEntries(value\x2C true);\x0d\n  if (isKeyValue) {\x0d\n    // Mark entry iterators as such.\x0d\n    braces[0] = RegExpPrototypeSymbolReplace(/ Iterator] {$/\x2C braces[0]\x2C ' Entries] {');\x0d\n    return formatMapIterInner(ctx\x2C recurseTimes\x2C entries\x2C kMapEntries);\x0d\n  }\x0d\n\x0d\n  return formatSetIterInner(ctx\x2C recurseTimes\x2C entries\x2C kIterator);\x0d\n}\x0d\n\x0d\nfunction formatPromise(ctx\x2C value\x2C recurseTimes) {\x0d\n  let output;\x0d\n  const { 0: state\x2C 1: result } = getPromiseDetails(value);\x0d\n  if (state === kPending) {\x0d\n    output = [ctx.stylize('<pending>'\x2C 'special')];\x0d\n  } else {\x0d\n    ctx.indentationLvl += 2;\x0d\n    const str = formatValue(ctx\x2C result\x2C recurseTimes);\x0d\n    ctx.indentationLvl -= 2;\x0d\n    output = [\x0d\n      state === kRejected ?\x0d\n        `${ctx.stylize('<rejected>'\x2C 'special')} ${str}` :\x0d\n        str\x2C\x0d\n    ];\x0d\n  }\x0d\n  return output;\x0d\n}\x0d\n\x0d\nfunction formatProperty(ctx\x2C value\x2C recurseTimes\x2C key\x2C type\x2C desc\x2C\x0d\n                        original = value) {\x0d\n  let name\x2C str;\x0d\n  let extra = ' ';\x0d\n  desc = desc || ObjectGetOwnPropertyDescriptor(value\x2C key) ||\x0d\n    { value: value[key]\x2C enumerable: true };\x0d\n  if (desc.value !== undefined) {\x0d\n    const diff = (ctx.compact !== true || type !== kObjectType) ? 2 : 3;\x0d\n    ctx.indentationLvl += diff;\x0d\n    str = formatValue(ctx\x2C desc.value\x2C recurseTimes);\x0d\n    if (diff === 3 && ctx.breakLength < getStringWidth(str\x2C ctx.colors)) {\x0d\n      extra = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    }\x0d\n    ctx.indentationLvl -= diff;\x0d\n  } else if (desc.get !== undefined) {\x0d\n    const label = desc.set !== undefined ? 'Getter/Setter' : 'Getter';\x0d\n    const s = ctx.stylize;\x0d\n    const sp = 'special';\x0d\n    if (ctx.getters && (ctx.getters === true ||\x0d\n          (ctx.getters === 'get' && desc.set === undefined) ||\x0d\n          (ctx.getters === 'set' && desc.set !== undefined))) {\x0d\n      try {\x0d\n        const tmp = FunctionPrototypeCall(desc.get\x2C original);\x0d\n        ctx.indentationLvl += 2;\x0d\n        if (tmp === null) {\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${s('null'\x2C 'null')}${s(']'\x2C sp)}`;\x0d\n        } else if (typeof tmp === 'object') {\x0d\n          str = `${s(`[${label}]`\x2C sp)} ${formatValue(ctx\x2C tmp\x2C recurseTimes)}`;\x0d\n        } else {\x0d\n          const primitive = formatPrimitive(s\x2C tmp\x2C ctx);\x0d\n          str = `${s(`[${label}:`\x2C sp)} ${primitive}${s(']'\x2C sp)}`;\x0d\n        }\x0d\n        ctx.indentationLvl -= 2;\x0d\n      } catch (err) {\x0d\n        const message = `<Inspection threw (${err.message})>`;\x0d\n        str = `${s(`[${label}:`\x2C sp)} ${message}${s(']'\x2C sp)}`;\x0d\n      }\x0d\n    } else {\x0d\n      str = ctx.stylize(`[${label}]`\x2C sp);\x0d\n    }\x0d\n  } else if (desc.set !== undefined) {\x0d\n    str = ctx.stylize('[Setter]'\x2C 'special');\x0d\n  } else {\x0d\n    str = ctx.stylize('undefined'\x2C 'undefined');\x0d\n  }\x0d\n  if (type === kArrayType) {\x0d\n    return str;\x0d\n  }\x0d\n  if (typeof key === 'symbol') {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      SymbolPrototypeToString(key)\x2C\x0d\n      escapeFn\x2C\x0d\n    );\x0d\n    name = `[${ctx.stylize(tmp\x2C 'symbol')}]`;\x0d\n  } else if (key === '__proto__') {\x0d\n    name = "['__proto__']";\x0d\n  } else if (desc.enumerable === false) {\x0d\n    const tmp = RegExpPrototypeSymbolReplace(\x0d\n      strEscapeSequencesReplacer\x2C\x0d\n      key\x2C\x0d\n      escapeFn\x2C\x0d\n    );\x0d\n    name = `[${tmp}]`;\x0d\n  } else if (RegExpPrototypeExec(keyStrRegExp\x2C key) !== null) {\x0d\n    name = ctx.stylize(key\x2C 'name');\x0d\n  } else {\x0d\n    name = ctx.stylize(strEscape(key)\x2C 'string');\x0d\n  }\x0d\n  return `${name}:${extra}${str}`;\x0d\n}\x0d\n\x0d\nfunction isBelowBreakLength(ctx\x2C output\x2C start\x2C base) {\x0d\n  // Each entry is separated by at least a comma. Thus\x2C we start with a total\x0d\n  // length of at least `output.length`. In addition\x2C some cases have a\x0d\n  // whitespace in-between each other that is added to the total as well.\x0d\n  // TODO(BridgeAR): Add unicode support. Use the readline getStringWidth\x0d\n  // function. Check the performance overhead and make it an opt-in in case it's\x0d\n  // significant.\x0d\n  let totalLength = output.length + start;\x0d\n  if (totalLength + output.length > ctx.breakLength)\x0d\n    return false;\x0d\n  for (let i = 0; i < output.length; i++) {\x0d\n    if (ctx.colors) {\x0d\n      totalLength += removeColors(output[i]).length;\x0d\n    } else {\x0d\n      totalLength += output[i].length;\x0d\n    }\x0d\n    if (totalLength > ctx.breakLength) {\x0d\n      return false;\x0d\n    }\x0d\n  }\x0d\n  // Do not line up properties on the same line if `base` contains line breaks.\x0d\n  return base === '' || !StringPrototypeIncludes(base\x2C '\\n');\x0d\n}\x0d\n\x0d\nfunction reduceToSingleString(\x0d\n  ctx\x2C output\x2C base\x2C braces\x2C extrasType\x2C recurseTimes\x2C value) {\x0d\n  if (ctx.compact !== true) {\x0d\n    if (typeof ctx.compact === 'number' && ctx.compact >= 1) {\x0d\n      // Memorize the original output length. In case the output is grouped\x2C\x0d\n      // prevent lining up the entries on a single line.\x0d\n      const entries = output.length;\x0d\n      // Group array elements together if the array contains at least six\x0d\n      // separate entries.\x0d\n      if (extrasType === kArrayExtrasType && entries > 6) {\x0d\n        output = groupArrayElements(ctx\x2C output\x2C value);\x0d\n      }\x0d\n      // `ctx.currentDepth` is set to the most inner depth of the currently\x0d\n      // inspected object part while `recurseTimes` is the actual current depth\x0d\n      // that is inspected.\x0d\n      //\x0d\n      // Example:\x0d\n      //\x0d\n      // const a = { first: [ 1\x2C 2\x2C 3 ]\x2C second: { inner: [ 1\x2C 2\x2C 3 ] } }\x0d\n      //\x0d\n      // The deepest depth of `a` is 2 (a.second.inner) and `a.first` has a max\x0d\n      // depth of 1.\x0d\n      //\x0d\n      // Consolidate all entries of the local most inner depth up to\x0d\n      // `ctx.compact`\x2C as long as the properties are smaller than\x0d\n      // `ctx.breakLength`.\x0d\n      if (ctx.currentDepth - recurseTimes < ctx.compact &&\x0d\n          entries === output.length) {\x0d\n        // Line up all entries on a single line in case the entries do not\x0d\n        // exceed `breakLength`. Add 10 as constant to start next to all other\x0d\n        // factors that may reduce `breakLength`.\x0d\n        const start = output.length + ctx.indentationLvl +\x0d\n                      braces[0].length + base.length + 10;\x0d\n        if (isBelowBreakLength(ctx\x2C output\x2C start\x2C base)) {\x0d\n          const joinedOutput = join(output\x2C '\x2C ');\x0d\n          if (!StringPrototypeIncludes(joinedOutput\x2C '\\n')) {\x0d\n            return `${base ? `${base} ` : ''}${braces[0]} ${joinedOutput}` +\x0d\n              ` ${braces[1]}`;\x0d\n          }\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    // Line up each entry on an individual line.\x0d\n    const indentation = `\\n${StringPrototypeRepeat(' '\x2C ctx.indentationLvl)}`;\x0d\n    return `${base ? `${base} ` : ''}${braces[0]}${indentation}  ` +\x0d\n      `${join(output\x2C `\x2C${indentation}  `)}${indentation}${braces[1]}`;\x0d\n  }\x0d\n  // Line up all entries on a single line in case the entries do not exceed\x0d\n  // `breakLength`.\x0d\n  if (isBelowBreakLength(ctx\x2C output\x2C 0\x2C base)) {\x0d\n    return `${braces[0]}${base ? ` ${base}` : ''} ${join(output\x2C '\x2C ')} ` +\x0d\n      braces[1];\x0d\n  }\x0d\n  const indentation = StringPrototypeRepeat(' '\x2C ctx.indentationLvl);\x0d\n  // If the opening "brace" is too large\x2C like in the case of "Set {"\x2C\x0d\n  // we need to force the first item to be on the next line or the\x0d\n  // items will not line up correctly.\x0d\n  const ln = base === '' && braces[0].length === 1 ?\x0d\n    ' ' : `${base ? ` ${base}` : ''}\\n${indentation}  `;\x0d\n  // Line up each entry on an individual line.\x0d\n  return `${braces[0]}${ln}${join(output\x2C `\x2C\\n${indentation}  `)} ${braces[1]}`;\x0d\n}\x0d\n\x0d\nfunction hasBuiltInToString(value) {\x0d\n  // Prevent triggering proxy traps.\x0d\n  const getFullProxy = false;\x0d\n  const proxyTarget = getProxyDetails(value\x2C getFullProxy);\x0d\n  if (proxyTarget !== undefined) {\x0d\n    if (proxyTarget === null) {\x0d\n      return true;\x0d\n    }\x0d\n    value = proxyTarget;\x0d\n  }\x0d\n\x0d\n  // Count objects that have no `toString` function as built-in.\x0d\n  if (typeof value.toString !== 'function') {\x0d\n    return true;\x0d\n  }\x0d\n\x0d\n  // The object has a own `toString` property. Thus it's not not a built-in one.\x0d\n  if (ObjectPrototypeHasOwnProperty(value\x2C 'toString')) {\x0d\n    return false;\x0d\n  }\x0d\n\x0d\n  // Find the object that has the `toString` property as own property in the\x0d\n  // prototype chain.\x0d\n  let pointer = value;\x0d\n  do {\x0d\n    pointer = ObjectGetPrototypeOf(pointer);\x0d\n  } while (!ObjectPrototypeHasOwnProperty(pointer\x2C 'toString'));\x0d\n\x0d\n  // Check closer if the object is a built-in.\x0d\n  const descriptor = ObjectGetOwnPropertyDescriptor(pointer\x2C 'constructor');\x0d\n  return descriptor !== undefined &&\x0d\n    typeof descriptor.value === 'function' &&\x0d\n    builtInObjects.has(descriptor.value.name);\x0d\n}\x0d\n\x0d\nconst firstErrorLine = (error) => StringPrototypeSplit(error.message\x2C '\\n'\x2C 1)[0];\x0d\nlet CIRCULAR_ERROR_MESSAGE;\x0d\nfunction tryStringify(arg) {\x0d\n  try {\x0d\n    return JSONStringify(arg);\x0d\n  } catch (err) {\x0d\n    // Populate the circular error message lazily\x0d\n    if (!CIRCULAR_ERROR_MESSAGE) {\x0d\n      try {\x0d\n        const a = {};\x0d\n        a.a = a;\x0d\n        JSONStringify(a);\x0d\n      } catch (circularError) {\x0d\n        CIRCULAR_ERROR_MESSAGE = firstErrorLine(circularError);\x0d\n      }\x0d\n    }\x0d\n    if (err.name === 'TypeError' &&\x0d\n        firstErrorLine(err) === CIRCULAR_ERROR_MESSAGE) {\x0d\n      return '[Circular]';\x0d\n    }\x0d\n    throw err;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction format(...args) {\x0d\n  return formatWithOptionsInternal(undefined\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatWithOptions(inspectOptions\x2C ...args) {\x0d\n  validateObject(inspectOptions\x2C 'inspectOptions'\x2C kValidateObjectAllowArray);\x0d\n  return formatWithOptionsInternal(inspectOptions\x2C args);\x0d\n}\x0d\n\x0d\nfunction formatNumberNoColor(number\x2C options) {\x0d\n  return formatNumber(\x0d\n    stylizeNoColor\x2C\x0d\n    number\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatBigIntNoColor(bigint\x2C options) {\x0d\n  return formatBigInt(\x0d\n    stylizeNoColor\x2C\x0d\n    bigint\x2C\x0d\n    options?.numericSeparator ?? inspectDefaultOptions.numericSeparator\x2C\x0d\n  );\x0d\n}\x0d\n\x0d\nfunction formatWithOptionsInternal(inspectOptions\x2C args) {\x0d\n  const first = args[0];\x0d\n  let a = 0;\x0d\n  let str = '';\x0d\n  let join = '';\x0d\n\x0d\n  if (typeof first === 'string') {\x0d\n    if (args.length === 1) {\x0d\n      return first;\x0d\n    }\x0d\n    let tempStr;\x0d\n    let lastPos = 0;\x0d\n\x0d\n    for (let i = 0; i < first.length - 1; i++) {\x0d\n      if (StringPrototypeCharCodeAt(first\x2C i) === 37) { // '%'\x0d\n        const nextChar = StringPrototypeCharCodeAt(first\x2C ++i);\x0d\n        if (a + 1 !== args.length) {\x0d\n          switch (nextChar) {\x0d\n            case 115: { // 's'\x0d\n              const tempArg = args[++a];\x0d\n              if (typeof tempArg === 'number') {\x0d\n                tempStr = formatNumberNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempArg\x2C inspectOptions);\x0d\n              } else if (typeof tempArg !== 'object' ||\x0d\n                         tempArg === null ||\x0d\n                         !hasBuiltInToString(tempArg)) {\x0d\n                tempStr = String(tempArg);\x0d\n              } else {\x0d\n                tempStr = inspect(tempArg\x2C {\x0d\n                  ...inspectOptions\x2C\x0d\n                  compact: 3\x2C\x0d\n                  colors: false\x2C\x0d\n                  depth: 0\x2C\x0d\n                });\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 106: // 'j'\x0d\n              tempStr = tryStringify(args[++a]);\x0d\n              break;\x0d\n            case 100: { // 'd'\x0d\n              const tempNum = args[++a];\x0d\n              if (typeof tempNum === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempNum\x2C inspectOptions);\x0d\n              } else if (typeof tempNum === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(Number(tempNum)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 79: // 'O'\x0d\n              tempStr = inspect(args[++a]\x2C inspectOptions);\x0d\n              break;\x0d\n            case 111: // 'o'\x0d\n              tempStr = inspect(args[++a]\x2C {\x0d\n                ...inspectOptions\x2C\x0d\n                showHidden: true\x2C\x0d\n                showProxy: true\x2C\x0d\n                depth: 4\x2C\x0d\n              });\x0d\n              break;\x0d\n            case 105: { // 'i'\x0d\n              const tempInteger = args[++a];\x0d\n              if (typeof tempInteger === 'bigint') {\x0d\n                tempStr = formatBigIntNoColor(tempInteger\x2C inspectOptions);\x0d\n              } else if (typeof tempInteger === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseInt(tempInteger)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 102: { // 'f'\x0d\n              const tempFloat = args[++a];\x0d\n              if (typeof tempFloat === 'symbol') {\x0d\n                tempStr = 'NaN';\x0d\n              } else {\x0d\n                tempStr = formatNumberNoColor(\x0d\n                  NumberParseFloat(tempFloat)\x2C inspectOptions);\x0d\n              }\x0d\n              break;\x0d\n            }\x0d\n            case 99: // 'c'\x0d\n              a += 1;\x0d\n              tempStr = '';\x0d\n              break;\x0d\n            case 37: // '%'\x0d\n              str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n              lastPos = i + 1;\x0d\n              continue;\x0d\n            default: // Any other character is not a correct placeholder\x0d\n              continue;\x0d\n          }\x0d\n          if (lastPos !== i - 1) {\x0d\n            str += StringPrototypeSlice(first\x2C lastPos\x2C i - 1);\x0d\n          }\x0d\n          str += tempStr;\x0d\n          lastPos = i + 1;\x0d\n        } else if (nextChar === 37) {\x0d\n          str += StringPrototypeSlice(first\x2C lastPos\x2C i);\x0d\n          lastPos = i + 1;\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    if (lastPos !== 0) {\x0d\n      a++;\x0d\n      join = ' ';\x0d\n      if (lastPos < first.length) {\x0d\n        str += StringPrototypeSlice(first\x2C lastPos);\x0d\n      }\x0d\n    }\x0d\n  }\x0d\n\x0d\n  while (a < args.length) {\x0d\n    const value = args[a];\x0d\n    str += join;\x0d\n    str += typeof value !== 'string' ? inspect(value\x2C inspectOptions) : value;\x0d\n    join = ' ';\x0d\n    a++;\x0d\n  }\x0d\n  return str;\x0d\n}\x0d\n\x0d\nfunction isZeroWidthCodePoint(code) {\x0d\n  return code <= 0x1F || // C0 control codes\x0d\n    (code >= 0x7F && code <= 0x9F) || // C1 control codes\x0d\n    (code >= 0x300 && code <= 0x36F) || // Combining Diacritical Marks\x0d\n    (code >= 0x200B && code <= 0x200F) || // Modifying Invisible Characters\x0d\n    // Combining Diacritical Marks for Symbols\x0d\n    (code >= 0x20D0 && code <= 0x20FF) ||\x0d\n    (code >= 0xFE00 && code <= 0xFE0F) || // Variation Selectors\x0d\n    (code >= 0xFE20 && code <= 0xFE2F) || // Combining Half Marks\x0d\n    (code >= 0xE0100 && code <= 0xE01EF); // Variation Selectors\x0d\n}\x0d\n\x0d\nif (internalBinding('config').hasIntl) {\x0d\n  const icu = internalBinding('icu');\x0d\n  // icu.getStringWidth(string\x2C ambiguousAsFullWidth\x2C expandEmojiSequence)\x0d\n  // Defaults: ambiguousAsFullWidth = false; expandEmojiSequence = true;\x0d\n  // TODO(BridgeAR): Expose the options to the user. That is probably the\x0d\n  // best thing possible at the moment\x2C since it's difficult to know what\x0d\n  // the receiving end supports.\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars) {\x0d\n      str = stripVTControlCharacters(str);\x0d\n    }\x0d\n    for (let i = 0; i < str.length; i++) {\x0d\n      // Try to avoid calling into C++ by first handling the ASCII portion of\x0d\n      // the string. If it is fully ASCII\x2C we skip the C++ part.\x0d\n      const code = str.charCodeAt(i);\x0d\n      if (code >= 127) {\x0d\n        width += icu.getStringWidth(StringPrototypeNormalize(StringPrototypeSlice(str\x2C i)\x2C 'NFC'));\x0d\n        break;\x0d\n      }\x0d\n      width += code >= 32 ? 1 : 0;\x0d\n    }\x0d\n    return width;\x0d\n  };\x0d\n} else {\x0d\n  /**\x0d\n   * Returns the number of columns required to display the given string.\x0d\n   */\x0d\n  getStringWidth = function getStringWidth(str\x2C removeControlChars = true) {\x0d\n    let width = 0;\x0d\n\x0d\n    if (removeControlChars)\x0d\n      str = stripVTControlCharacters(str);\x0d\n    str = StringPrototypeNormalize(str\x2C 'NFC');\x0d\n    for (const char of new SafeStringIterator(str)) {\x0d\n      const code = StringPrototypeCodePointAt(char\x2C 0);\x0d\n      if (isFullWidthCodePoint(code)) {\x0d\n        width += 2;\x0d\n      } else if (!isZeroWidthCodePoint(code)) {\x0d\n        width++;\x0d\n      }\x0d\n    }\x0d\n\x0d\n    return width;\x0d\n  };\x0d\n\x0d\n  /**\x0d\n   * Returns true if the character represented by a given\x0d\n   * Unicode code point is full-width. Otherwise returns false.\x0d\n   */\x0d\n  const isFullWidthCodePoint = (code) => {\x0d\n    // Code points are partially derived from:\x0d\n    // https://www.unicode.org/Public/UNIDATA/EastAsianWidth.txt\x0d\n    return code >= 0x1100 && (\x0d\n      code <= 0x115f ||  // Hangul Jamo\x0d\n      code === 0x2329 || // LEFT-POINTING ANGLE BRACKET\x0d\n      code === 0x232a || // RIGHT-POINTING ANGLE BRACKET\x0d\n      // CJK Radicals Supplement .. Enclosed CJK Letters and Months\x0d\n      (code >= 0x2e80 && code <= 0x3247 && code !== 0x303f) ||\x0d\n      // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\x0d\n      (code >= 0x3250 && code <= 0x4dbf) ||\x0d\n      // CJK Unified Ideographs .. Yi Radicals\x0d\n      (code >= 0x4e00 && code <= 0xa4c6) ||\x0d\n      // Hangul Jamo Extended-A\x0d\n      (code >= 0xa960 && code <= 0xa97c) ||\x0d\n      // Hangul Syllables\x0d\n      (code >= 0xac00 && code <= 0xd7a3) ||\x0d\n      // CJK Compatibility Ideographs\x0d\n      (code >= 0xf900 && code <= 0xfaff) ||\x0d\n      // Vertical Forms\x0d\n      (code >= 0xfe10 && code <= 0xfe19) ||\x0d\n      // CJK Compatibility Forms .. Small Form Variants\x0d\n      (code >= 0xfe30 && code <= 0xfe6b) ||\x0d\n      // Halfwidth and Fullwidth Forms\x0d\n      (code >= 0xff01 && code <= 0xff60) ||\x0d\n      (code >= 0xffe0 && code <= 0xffe6) ||\x0d\n      // Kana Supplement\x0d\n      (code >= 0x1b000 && code <= 0x1b001) ||\x0d\n      // Enclosed Ideographic Supplement\x0d\n      (code >= 0x1f200 && code <= 0x1f251) ||\x0d\n      // Miscellaneous Symbols and Pictographs 0x1f300 - 0x1f5ff\x0d\n      // Emoticons 0x1f600 - 0x1f64f\x0d\n      (code >= 0x1f300 && code <= 0x1f64f) ||\x0d\n      // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\x0d\n      (code >= 0x20000 && code <= 0x3fffd)\x0d\n    );\x0d\n  };\x0d\n\x0d\n}\x0d\n\x0d\n/**\x0d\n * Remove all VT control characters. Use to estimate displayed string width.\x0d\n */\x0d\nfunction stripVTControlCharacters(str) {\x0d\n  validateString(str\x2C 'str');\x0d\n\x0d\n  return RegExpPrototypeSymbolReplace(ansi\x2C str\x2C '');\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  identicalSequenceRange\x2C\x0d\n  inspect\x2C\x0d\n  inspectDefaultOptions\x2C\x0d\n  format\x2C\x0d\n  formatWithOptions\x2C\x0d\n  getStringWidth\x2C\x0d\n  stripVTControlCharacters\x2C\x0d\n  isZeroWidthCodePoint\x2C\x0d\n};\x0d\n
code-source-info,0x294ddc419ae,21,74795,74964,C0O74795C8O74826C18O74875C24O74826C29O74906C32O74913C37O74961,,
code-creation,JS,10,2845291,0x294ddc4675e,252, node:internal/validators:235:3,0x3fcdef85630,~
code-source-info,0x294ddc4675e,15,6585,7633,C12O6609C19O6640C21O6656C23O6652C28O6686C34O6708C37O6708C43O6740C59O6746C64O6740C65O6813C71O6855C87O6861C92O6855C95O6964C102O6994C107O7005C111O7021C117O7071C133O7077C138O7071C139O7165C146O7192C151O7203C155O7219C159O7239C162O7239C168O7271C184O7277C189O7271C190O7368C197O7398C202O7409C206O7443C210O7466C212O7482C219O7499C223O7530C228O7558C244O7564C249O7558C251O7632,,
code-creation,JS,10,2845574,0x294ddc46afe,764,formatWithOptionsInternal node:internal/util/inspect:2179:35,0x3fcdef8efc0,~
code-source-info,0x294ddc46afe,21,75386,79500,C0O75428C1O75432C5O75448C7O75464C10O75482C13O75491C19O75538C26O75545C31O75561C33O75574C34O75591C36O75619C38O75642C40O75655C44O75662C47O75647C52O75681C57O75685C65O75721C70O75764C77O75790C80O75764C86O75812C88O75818C92O75831C96O75822C101O75852C169O75935C174O75939C178O75961C182O76013C185O76023C193O76091C199O76143C202O76153C210O76221C223O76329C229O76377C234O76387C241O76445C244O76496C251O76540C256O76570C261O76603C265O76455C271O76659C273O76726C278O76749C281O76753C285O76736C290O76776C292O76846C297O76850C301O76872C305O76924C308O76934C316O77002C322O77054C327O77112C332O77142C335O77142C340O77122C346O77208C348O77274C353O77292C356O77296C360O77284C366O77335C368O77387C373O77405C376O77409C380O77438C386O77483C391O77517C397O77547C401O77397C407O77584C409O77658C414O77662C418O77684C422O77740C425O77750C433O77822C439O77878C444O77936C449O77986C452O77986C457O77946C463O78064C465O78151C470O78155C474O78177C478O78231C483O78289C488O78339C491O78339C496O78299C502O78417C504O78483C510O78506C513O78535C515O78586C517O78593C529O78593C541O78649C543O78661C547O78681C549O78780C551O78814C553O78832C556O78826C561O78852C563O78859C568O78898C579O78859C591O78928C593O78935C600O78955C602O78967C608O78988C610O79001C615O79022C617O79029C629O79029C641O79081C643O79093C647O75668C652O75629C660O79130C661O79142C666O79158C671O79170C674O79209C678O79201C683O79228C685O79235C688O79235C700O79315C704O79308C709O79344C711O79348C715O79358C717O79365C724O79376C736O79411C745O79444C749O79456C752O79473C757O79299C761O79486C763O79497,,
code-creation,JS,10,2845865,0x1bc61639ee6,269,value node:internal/console/constructor:276:20,0x3fcdefab460,~
code-source-info,0x1bc61639ee6,46,8352,9834,C0O8410C5O8452C7O8457C9O8456C13O8499C15O8516C17O8512C21O8550C23O8567C29O8582C34O8619C38O8645C44O8672C49O8718C55O8725C60O8743C68O8747C75O8799C91O8857C99O8808C106O8893C108O8914C113O8940C123O8965C128O9007C133O9007C138O9021C145O9346C153O9346C160O9369C165O9394C176O9394C182O9433C187O9433C206O9633C216O9637C222O9673C224O9673C238O9781C239O9788C250O9788C268O9833,,
code-creation,JS,10,2846013,0x1bc6163a18e,127,listenerCount node:events:852:23,0x3fcdef92190,~
code-source-info,0x1bc6163a18e,23,25252,25965,C0O25294C5O25308C7O25360C9O25366C13O25381C17O25428C22O25461C24O25477C29O25519C33O25504C43O25536C44O25555C46O25564C47O25577C51O25616C56O25664C58O25691C60O25709C65O25719C67O25719C72O25742C74O25756C80O25760C87O25786C91O25790C98O25799C103O25828C108O25725C113O25678C117O25875C119O25891C120O25928C124O25935C125O25953C126O25962,,
code-creation,JS,10,2846109,0x1bc6163a336,39,once node:events:651:44,0x3fcdef91ed0,~
code-source-info,0x1bc6163a336,23,19590,19708,C0O19612C3O19612C7O19647C24O19656C30O19647C36O19693C38O19705,,
code-creation,JS,10,2846176,0x1bc6163a516,60,_onceWrap node:events:637:19,0x3fcdef91e80,~
code-source-info,0x1bc6163a516,23,19149,19378,C0O19193C6O19217C12O19228C18O19236C24O19242C31O19273C34O19285C39O19285C45O19301C47O19318C51O19333C53O19346C57O19360C59O19375,,
code-creation,JS,10,2846277,0x1bc6163a7e6,42,Writable.write node:internal/streams/writable:496:36,0x23f23c7d80,~
code-source-info,0x1bc6163a7e6,141,15754,15944,C0O15781C11O15844C14O15864C17O15891C32O15898C41O15941,,
code-creation,JS,10,2846420,0x1bc6163a9fe,411,_write node:internal/streams/writable:445:16,0x23f23c72c0,~
code-source-info,0x1bc6163a9fe
code-creation,JS,10,2846646,0x1bc6163ae5e,461,writeOrBuffer node:internal/streams/writable:540:23,0x23f23c7310,~
code-source-info,0x1bc6163ae5e
code-creation,JS,10,2846830,0x1bc6163b22e,61,set node:internal/streams/writable:254:8,0x23f23c79f0,~
code-source-info,0x1bc6163b22e,141,8462,8632,C0O8479C4O8501C6O8506C11O8521C15O8539C17O8544C26O8555C31O8552C37O8590C39O8595C48O8607C50O8606C55O8603C60O8631,,
code-creation,JS,10,2846903,0x1bc6163b3ae,26,Socket._write node:net:963:35,0x2bb6ec92a48,~
code-source-info,0x1bc6163b3ae,127,25987,26062,C0O26018C19O26018C25O26061,,
code-creation,JS,10,2846995,0x1bc6163b646,217,Socket._writeGeneric node:net:921:42,0x2bb6ec92900,~
code-source-info,0x1bc6163b646,127,24904,25842,C0O24904C21O25110C37O25129C41O25147C45O25160C49O25182C53O25204C66O25204C72O25437C83O25437C89O25466C90O25473C91O25482C92O25500C96O25511C98O25533C102O25554C108O25570C115O25577C118O25573C124O25570C128O25604C129O25617C130O25633C135O25633C139O25657C141O25665C145O25682C161O25688C169O25732C188O25738C194O25789C200O25801C204O25806C207O25833C211O25827C216O25841,,
code-creation,JS,10,2847114,0x1bc6163b8b6,46,_unrefTimer node:net:505:52,0x1760ce83618,~
code-source-info,0x1bc6163b8b6,127,14386,14501,C0O14407C5O14415C9O14447C11O14453C13O14452C18O14471C20O14473C22O14472C26O14483C31O14483C35O14431C40O14394C45O14500,,
code-creation,JS,10,2847203,0x1bc6163b9d6,55,writeGeneric node:internal/stream_base_commons:147:22,0xc2df92fc80,~
code-source-info,0x1bc6163b9d6,145,3750,3940,C0O3794C5O3815C7O3814C11O3794C17O3845C29O3845C35O3887C47O3887C52O3926C54O3937,,
code-creation,JS,10,2847268,0x1bc6163c3fe,47,createWriteWrap node:internal/stream_base_commons:109:25,0xc2df92fbe0,~
code-source-info,0x1bc6163c3fe,145,2834,3059,C0O2870C5O2870C11O2892C13O2903C17O2916C19O2931C23O2953C24O2963C28O2975C29O2985C33O2993C34O3004C38O3015C40O3028C44O3045C46O3056,,
code-creation,JS,10,2847394,0x1bc6163c7fe,215,handleWriteReq node:internal/stream_base_commons:45:24,0xc2df92fb40,~
code-source-info,0x1bc6163c7fe,145,1221,2086,C0O1256C5O1277C80O1350C85O1350C92O1381C99O1401C101O1400C106O1431C108O1442C112O1457C114O1468C115O1537C120O1537C126O1566C127O1625C132O1625C138O1652C139O1693C144O1693C150O1721C151O1823C156O1823C162O1850C163O1894C168O1901C173O1901C180O1949C185O1949C192O1982C199O2002C201O2001C206O2032C208O2043C212O2060C214O2071,,
code-creation,JS,10,2847623,0x1bc6163ca46,94,afterWriteDispatched node:internal/stream_base_commons:155:30,0xc2df92fcd0,~
code-source-info,0x1bc6163ca46,145,3973,4261,C0O3993C2O4005C7O4021C9O4020C12O4003C16O4040C18O4054C23O4070C25O4069C30O4050C34O4096C35O4104C40O4116C42O4130C48O4163C58O4126C64O4123C68O4171C69O4186C75O4206C83O4242C88O4242C93O4260,,
code-creation,JS,10,2847833,0x1bc6163ccfe,769,onwrite node:internal/streams/writable:607:17,0x23f23c7400,~
code-source-info,0x1bc6163ccfe
code-creation,JS,10,2848180,0x1bc6163d56e,373,nextTick node:internal/process/task_queues:103:18,0x3fcdefa4680,~
script-source,35,node:internal/process/task_queues,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n  FunctionPrototypeBind\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  // For easy access to the nextTick state in the C++ land\x2C\x0d\n  // and to avoid unnecessary calls into JS land.\x0d\n  tickInfo\x2C\x0d\n  // Used to run V8's micro task queue.\x0d\n  runMicrotasks\x2C\x0d\n  setTickCallback\x2C\x0d\n  enqueueMicrotask\x2C\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst {\x0d\n  setHasRejectionToWarn\x2C\x0d\n  hasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n} = require('internal/process/promises');\x0d\n\x0d\nconst {\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  newAsyncId\x2C\x0d\n  initHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit\x2C\x0d\n  emitBefore\x2C\x0d\n  emitAfter\x2C\x0d\n  emitDestroy\x2C\x0d\n  symbols: { async_id_symbol\x2C trigger_async_id_symbol }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst FixedQueue = require('internal/fixed_queue');\x0d\n\x0d\nconst {\x0d\n  validateFunction\x2C\x0d\n} = require('internal/validators');\x0d\n\x0d\nconst { AsyncResource } = require('async_hooks');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasTickScheduled = 0;\x0d\n\x0d\nfunction hasTickScheduled() {\x0d\n  return tickInfo[kHasTickScheduled] === 1;\x0d\n}\x0d\n\x0d\nfunction setHasTickScheduled(value) {\x0d\n  tickInfo[kHasTickScheduled] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nconst queue = new FixedQueue();\x0d\n\x0d\n// Should be in sync with RunNextTicksNative in node_task_queue.cc\x0d\nfunction runNextTicks() {\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    runMicrotasks();\x0d\n  if (!hasTickScheduled() && !hasRejectionToWarn())\x0d\n    return;\x0d\n\x0d\n  processTicksAndRejections();\x0d\n}\x0d\n\x0d\nfunction processTicksAndRejections() {\x0d\n  let tock;\x0d\n  do {\x0d\n    while ((tock = queue.shift()) !== null) {\x0d\n      const asyncId = tock[async_id_symbol];\x0d\n      emitBefore(asyncId\x2C tock[trigger_async_id_symbol]\x2C tock);\x0d\n\x0d\n      try {\x0d\n        const callback = tock.callback;\x0d\n        if (tock.args === undefined) {\x0d\n          callback();\x0d\n        } else {\x0d\n          const args = tock.args;\x0d\n          switch (args.length) {\x0d\n            case 1: callback(args[0]); break;\x0d\n            case 2: callback(args[0]\x2C args[1]); break;\x0d\n            case 3: callback(args[0]\x2C args[1]\x2C args[2]); break;\x0d\n            case 4: callback(args[0]\x2C args[1]\x2C args[2]\x2C args[3]); break;\x0d\n            default: callback(...args);\x0d\n          }\x0d\n        }\x0d\n      } finally {\x0d\n        if (destroyHooksExist())\x0d\n          emitDestroy(asyncId);\x0d\n      }\x0d\n\x0d\n      emitAfter(asyncId);\x0d\n    }\x0d\n    runMicrotasks();\x0d\n  } while (!queue.isEmpty() || processPromiseRejections());\x0d\n  setHasTickScheduled(false);\x0d\n  setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\n// `nextTick()` will not enqueue any callback when the process is about to\x0d\n// exit since the callback would not have a chance to be executed.\x0d\nfunction nextTick(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  if (process._exiting)\x0d\n    return;\x0d\n\x0d\n  let args;\x0d\n  switch (arguments.length) {\x0d\n    case 1: break;\x0d\n    case 2: args = [arguments[1]]; break;\x0d\n    case 3: args = [arguments[1]\x2C arguments[2]]; break;\x0d\n    case 4: args = [arguments[1]\x2C arguments[2]\x2C arguments[3]]; break;\x0d\n    default:\x0d\n      args = new Array(arguments.length - 1);\x0d\n      for (let i = 1; i < arguments.length; i++)\x0d\n        args[i - 1] = arguments[i];\x0d\n  }\x0d\n\x0d\n  if (queue.isEmpty())\x0d\n    setHasTickScheduled(true);\x0d\n  const asyncId = newAsyncId();\x0d\n  const triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  const tickObject = {\x0d\n    [async_id_symbol]: asyncId\x2C\x0d\n    [trigger_async_id_symbol]: triggerAsyncId\x2C\x0d\n    callback\x2C\x0d\n    args\x2C\x0d\n  };\x0d\n  if (initHooksExist())\x0d\n    emitInit(asyncId\x2C 'TickObject'\x2C triggerAsyncId\x2C tickObject);\x0d\n  queue.push(tickObject);\x0d\n}\x0d\n\x0d\nfunction runMicrotask() {\x0d\n  this.runInAsyncScope(() => {\x0d\n    const callback = this.callback;\x0d\n    try {\x0d\n      callback();\x0d\n    } finally {\x0d\n      this.emitDestroy();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nconst defaultMicrotaskResourceOpts = { requireManualDestroy: true };\x0d\n\x0d\nfunction queueMicrotask(callback) {\x0d\n  validateFunction(callback\x2C 'callback');\x0d\n\x0d\n  const asyncResource = new AsyncResource(\x0d\n    'Microtask'\x2C\x0d\n    defaultMicrotaskResourceOpts\x2C\x0d\n  );\x0d\n  asyncResource.callback = callback;\x0d\n\x0d\n  enqueueMicrotask(FunctionPrototypeBind(runMicrotask\x2C asyncResource));\x0d\n}\x0d\n\x0d\nmodule.exports = {\x0d\n  setupTaskQueue() {\x0d\n    // Sets the per-isolate promise rejection callback\x0d\n    listenForRejections();\x0d\n    // Sets the callback to be run in every tick.\x0d\n    setTickCallback(processTicksAndRejections);\x0d\n    return {\x0d\n      nextTick\x2C\x0d\n      runNextTicks\x2C\x0d\n    };\x0d\n  }\x2C\x0d\n  queueMicrotask\x2C\x0d\n};\x0d\n
code-source-info,0x1bc6163d56e
code-creation,JS,10,2848586,0x1bc6163dde6,21,get node:internal/bootstrap/node:100:8,0x3fcdef81d58,~
code-source-info,0x1bc6163dde6,12,3932,3981,C0O3944C9O3958C11O3957C17O3968C20O3974,,
code-creation,JS,10,2848652,0x1bc6163dede,15,isEmpty node:internal/fixed_queue:95:10,0x3fcdefa5a70,~
script-source,37,node:internal/fixed_queue,'use strict';\x0d\n\x0d\nconst {\x0d\n  Array\x2C\x0d\n} = primordials;\x0d\n\x0d\n// Currently optimal queue size\x2C tested on V8 6.0 - 6.6. Must be power of two.\x0d\nconst kSize = 2048;\x0d\nconst kMask = kSize - 1;\x0d\n\x0d\n// The FixedQueue is implemented as a singly-linked list of fixed-size\x0d\n// circular buffers. It looks something like this:\x0d\n//\x0d\n//  head                                                       tail\x0d\n//    |                                                          |\x0d\n//    v                                                          v\x0d\n// +-----------+ <-----\\       +-----------+ <------\\         +-----------+\x0d\n// |  [null]   |        \\----- |   next    |         \\------- |   next    |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n// |   item    | <-- bottom    |   item    | <-- bottom       |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |                  |  [empty]  |\x0d\n// |   item    |               |   item    |       bottom --> |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |    ...    |               |    ...    |                  |    ...    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |   item    |               |   item    |                  |   item    |\x0d\n// |  [empty]  | <-- top       |   item    |                  |   item    |\x0d\n// |  [empty]  |               |   item    |                  |   item    |\x0d\n// |  [empty]  |               |  [empty]  | <-- top  top --> |  [empty]  |\x0d\n// +-----------+               +-----------+                  +-----------+\x0d\n//\x0d\n// Or\x2C if there is only one circular buffer\x2C it looks something\x0d\n// like either of these:\x0d\n//\x0d\n//  head   tail                                 head   tail\x0d\n//    |     |                                     |     |\x0d\n//    v     v                                     v     v\x0d\n// +-----------+                               +-----------+\x0d\n// |  [null]   |                               |  [null]   |\x0d\n// +-----------+                               +-----------+\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// |   item    | <-- bottom            top --> |  [empty]  |\x0d\n// |   item    |                               |  [empty]  |\x0d\n// |  [empty]  | <-- top            bottom --> |   item    |\x0d\n// |  [empty]  |                               |   item    |\x0d\n// +-----------+                               +-----------+\x0d\n//\x0d\n// Adding a value means moving `top` forward by one\x2C removing means\x0d\n// moving `bottom` forward by one. After reaching the end\x2C the queue\x0d\n// wraps around.\x0d\n//\x0d\n// When `top === bottom` the current queue is empty and when\x0d\n// `top + 1 === bottom` it's full. This wastes a single space of storage\x0d\n// but allows much quicker checks.\x0d\n\x0d\nclass FixedCircularBuffer {\x0d\n  constructor() {\x0d\n    this.bottom = 0;\x0d\n    this.top = 0;\x0d\n    this.list = new Array(kSize);\x0d\n    this.next = null;\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.top === this.bottom;\x0d\n  }\x0d\n\x0d\n  isFull() {\x0d\n    return ((this.top + 1) & kMask) === this.bottom;\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    this.list[this.top] = data;\x0d\n    this.top = (this.top + 1) & kMask;\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const nextItem = this.list[this.bottom];\x0d\n    if (nextItem === undefined)\x0d\n      return null;\x0d\n    this.list[this.bottom] = undefined;\x0d\n    this.bottom = (this.bottom + 1) & kMask;\x0d\n    return nextItem;\x0d\n  }\x0d\n}\x0d\n\x0d\nmodule.exports = class FixedQueue {\x0d\n  constructor() {\x0d\n    this.head = this.tail = new FixedCircularBuffer();\x0d\n  }\x0d\n\x0d\n  isEmpty() {\x0d\n    return this.head.isEmpty();\x0d\n  }\x0d\n\x0d\n  push(data) {\x0d\n    if (this.head.isFull()) {\x0d\n      // Head is full: Creates a new queue\x2C sets the old queue's `.next` to it\x2C\x0d\n      // and sets it as the new main queue.\x0d\n      this.head = this.head.next = new FixedCircularBuffer();\x0d\n    }\x0d\n    this.head.push(data);\x0d\n  }\x0d\n\x0d\n  shift() {\x0d\n    const tail = this.tail;\x0d\n    const next = tail.shift();\x0d\n    if (tail.isEmpty() && tail.next !== null) {\x0d\n      // If there is another queue\x2C it forms the new tail.\x0d\n      this.tail = tail.next;\x0d\n      tail.next = null;\x0d\n    }\x0d\n    return next;\x0d\n  }\x0d\n};\x0d\n
code-source-info,0x1bc6163dede,37,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,JS,10,2848956,0x1bc6163e396,13,isEmpty node:internal/fixed_queue:67:10,0x3fcdefa57c0,~
code-source-info,0x1bc6163e396,37,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,JS,10,2849004,0x1bc6163e486,25,setHasTickScheduled node:internal/process/task_queues:51:29,0x3fcdefa4590,~
code-source-info,0x1bc6163e486,35,1137,1197,C0O1150C7O1159C12O1180C19O1178C24O1196,,
code-creation,JS,10,2849096,0x1bc6163e57e,23,newAsyncId node:internal/async_hooks:417:20,0x3fcdef846b0,~
script-source,14,node:internal/async_hooks,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypeSlice\x2C\x0d\n  ErrorCaptureStackTrace\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  Symbol\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst { exitCodes: { kGenericUserError } } = internalBinding('errors');\x0d\n\x0d\nconst async_wrap = internalBinding('async_wrap');\x0d\nconst { setCallbackTrampoline } = async_wrap;\x0d\n/* async_hook_fields is a Uint32Array wrapping the uint32_t array of\x0d\n * Environment::AsyncHooks::fields_[]. Each index tracks the number of active\x0d\n * hooks for each type.\x0d\n *\x0d\n * async_id_fields is a Float64Array wrapping the double array of\x0d\n * Environment::AsyncHooks::async_id_fields_[]. Each index contains the ids for\x0d\n * the various asynchronous states of the application. These are:\x0d\n *  kExecutionAsyncId: The async_id assigned to the resource responsible for the\x0d\n *    current execution stack.\x0d\n *  kTriggerAsyncId: The async_id of the resource that caused (or 'triggered')\x0d\n *    the resource corresponding to the current execution stack.\x0d\n *  kAsyncIdCounter: Incremental counter tracking the next assigned async_id.\x0d\n *  kDefaultTriggerAsyncId: Written immediately before a resource's constructor\x0d\n *    that sets the value of the init()'s triggerAsyncId. The precedence order\x0d\n *    of retrieving the triggerAsyncId value is:\x0d\n *    1. the value passed directly to the constructor\x0d\n *    2. value set in kDefaultTriggerAsyncId\x0d\n *    3. executionAsyncId of the current resource.\x0d\n *\x0d\n * async_ids_stack is a Float64Array that contains part of the async ID\x0d\n * stack. Each pushAsyncContext() call adds two doubles to it\x2C and each\x0d\n * popAsyncContext() call removes two doubles from it.\x0d\n * It has a fixed size\x2C so if that is exceeded\x2C calls to the native\x0d\n * side are used instead in pushAsyncContext() and popAsyncContext().\x0d\n */\x0d\nconst {\x0d\n  async_hook_fields\x2C\x0d\n  async_id_fields\x2C\x0d\n  execution_async_resources\x2C\x0d\n} = async_wrap;\x0d\n// Store the pair executionAsyncId and triggerAsyncId in a AliasedFloat64Array\x0d\n// in Environment::AsyncHooks::async_ids_stack_ which tracks the resource\x0d\n// responsible for the current execution stack. This is unwound as each resource\x0d\n// exits. In the case of a fatal exception this stack is emptied after calling\x0d\n// each hook's after() callback.\x0d\nconst {\x0d\n  pushAsyncContext: pushAsyncContext_\x2C\x0d\n  popAsyncContext: popAsyncContext_\x2C\x0d\n  executionAsyncResource: executionAsyncResource_\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n} = async_wrap;\x0d\n// Properties in active_hooks are used to keep track of the set of hooks being\x0d\n// executed in case another hook is enabled/disabled. The new set of hooks is\x0d\n// then restored once the active set of hooks is finished executing.\x0d\nconst active_hooks = {\x0d\n  // Array of all AsyncHooks that will be iterated whenever an async event\x0d\n  // fires. Using var instead of (preferably const) in order to assign\x0d\n  // active_hooks.tmp_array if a hook is enabled/disabled during hook\x0d\n  // execution.\x0d\n  array: []\x2C\x0d\n  // Use a counter to track nested calls of async hook callbacks and make sure\x0d\n  // the active_hooks.array isn't altered mid execution.\x0d\n  call_depth: 0\x2C\x0d\n  // Use to temporarily store and updated active_hooks.array if the user\x0d\n  // enables or disables a hook while hooks are being processed. If a hook is\x0d\n  // enabled() or disabled() during hook execution then the current set of\x0d\n  // active hooks is duplicated and set equal to active_hooks.tmp_array. Any\x0d\n  // subsequent changes are on the duplicated array. When all hooks have\x0d\n  // completed executing active_hooks.tmp_array is assigned to\x0d\n  // active_hooks.array.\x0d\n  tmp_array: null\x2C\x0d\n  // Keep track of the field counts held in active_hooks.tmp_array. Because the\x0d\n  // async_hook_fields can't be reassigned\x2C store each uint32 in an array that\x0d\n  // is written back to async_hook_fields when active_hooks.array is restored.\x0d\n  tmp_fields: null\x2C\x0d\n};\x0d\n\x0d\nconst { registerDestroyHook } = async_wrap;\x0d\nconst { enqueueMicrotask } = internalBinding('task_queue');\x0d\nconst { resource_symbol\x2C owner_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Each constant tracks how many callbacks there are for any given step of\x0d\n// async execution. These are tracked so if the user didn't include callbacks\x0d\n// for a given step\x2C that step can bail out early.\x0d\nconst {\x0d\n  kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  kCheck\x2C kExecutionAsyncId\x2C kAsyncIdCounter\x2C kTriggerAsyncId\x2C\x0d\n  kDefaultTriggerAsyncId\x2C kStackLength\x2C kUsesExecutionAsyncResource\x2C\x0d\n} = async_wrap.constants;\x0d\n\x0d\nconst { async_id_symbol\x2C\x0d\n        trigger_async_id_symbol } = internalBinding('symbols');\x0d\n\x0d\n// Lazy load of internal/util/inspect;\x0d\nlet inspect;\x0d\n\x0d\n// Used in AsyncHook and AsyncResource.\x0d\nconst init_symbol = Symbol('init');\x0d\nconst before_symbol = Symbol('before');\x0d\nconst after_symbol = Symbol('after');\x0d\nconst destroy_symbol = Symbol('destroy');\x0d\nconst promise_resolve_symbol = Symbol('promiseResolve');\x0d\nconst emitBeforeNative = emitHookFactory(before_symbol\x2C 'emitBeforeNative');\x0d\nconst emitAfterNative = emitHookFactory(after_symbol\x2C 'emitAfterNative');\x0d\nconst emitDestroyNative = emitHookFactory(destroy_symbol\x2C 'emitDestroyNative');\x0d\nconst emitPromiseResolveNative =\x0d\n    emitHookFactory(promise_resolve_symbol\x2C 'emitPromiseResolveNative');\x0d\n\x0d\nlet domain_cb;\x0d\nfunction useDomainTrampoline(fn) {\x0d\n  domain_cb = fn;\x0d\n}\x0d\n\x0d\nfunction callbackTrampoline(asyncId\x2C resource\x2C cb\x2C ...args) {\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  execution_async_resources[index] = resource;\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n\x0d\n  let result;\x0d\n  if (asyncId === 0 && typeof domain_cb === 'function') {\x0d\n    args.unshift(cb);\x0d\n    result = domain_cb.apply(this\x2C args);\x0d\n  } else {\x0d\n    result = cb.apply(this\x2C args);\x0d\n  }\x0d\n\x0d\n  if (asyncId !== 0 && hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  execution_async_resources.pop();\x0d\n  return result;\x0d\n}\x0d\n\x0d\nconst topLevelResource = {};\x0d\n\x0d\nfunction executionAsyncResource() {\x0d\n  // Indicate to the native layer that this function is likely to be used\x2C\x0d\n  // in which case it will inform JS about the current async resource via\x0d\n  // the trampoline above.\x0d\n  async_hook_fields[kUsesExecutionAsyncResource] = 1;\x0d\n\x0d\n  const index = async_hook_fields[kStackLength] - 1;\x0d\n  if (index === -1) return topLevelResource;\x0d\n  const resource = execution_async_resources[index] ||\x0d\n    executionAsyncResource_(index);\x0d\n  return lookupPublicResource(resource);\x0d\n}\x0d\n\x0d\nfunction inspectExceptionValue(e) {\x0d\n  inspect ??= require('internal/util/inspect').inspect;\x0d\n  return { message: inspect(e) };\x0d\n}\x0d\n\x0d\n// Used to fatally abort the process if a callback throws.\x0d\nfunction fatalError(e) {\x0d\n  if (typeof e?.stack === 'string') {\x0d\n    process._rawDebug(e.stack);\x0d\n  } else {\x0d\n    const o = inspectExceptionValue(e);\x0d\n    ErrorCaptureStackTrace(o\x2C fatalError);\x0d\n    process._rawDebug(o.stack);\x0d\n  }\x0d\n\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  if (getOptionValue('--abort-on-uncaught-exception')) {\x0d\n    process.abort();\x0d\n  }\x0d\n  process.exit(kGenericUserError);\x0d\n}\x0d\n\x0d\nfunction lookupPublicResource(resource) {\x0d\n  if (typeof resource !== 'object' || resource === null) return resource;\x0d\n  // TODO(addaleax): Merge this with owner_symbol and use it across all\x0d\n  // AsyncWrap instances.\x0d\n  const publicResource = resource[resource_symbol];\x0d\n  if (publicResource !== undefined)\x0d\n    return publicResource;\x0d\n  return resource;\x0d\n}\x0d\n\x0d\n// Emit From Native //\x0d\n\x0d\n// Used by C++ to call all init() callbacks. Because some state can be setup\x0d\n// from C++ there's no need to perform all the same operations as in\x0d\n// emitInitScript.\x0d\nfunction emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  resource = lookupPublicResource(resource);\x0d\n  // Use a single try/catch for all hooks to avoid setting up one per iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][init_symbol] === 'function') {\x0d\n        active_hooks.array[i][init_symbol](\x0d\n          asyncId\x2C type\x2C triggerAsyncId\x2C\x0d\n          resource\x2C\x0d\n        );\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case active_hooks.tmp_array\x0d\n  // will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Called from native. The asyncId stack handling is taken care of there\x0d\n// before this is called.\x0d\nfunction emitHook(symbol\x2C asyncId) {\x0d\n  active_hooks.call_depth += 1;\x0d\n  // Use a single try/catch for all hook to avoid setting up one per\x0d\n  // iteration.\x0d\n  try {\x0d\n    // Using var here instead of let because "for (var ...)" is faster than let.\x0d\n    // Refs: https://github.com/nodejs/node/pull/30380#issuecomment-552948364\x0d\n    // eslint-disable-next-line no-var\x0d\n    for (var i = 0; i < active_hooks.array.length; i++) {\x0d\n      if (typeof active_hooks.array[i][symbol] === 'function') {\x0d\n        active_hooks.array[i][symbol](asyncId);\x0d\n      }\x0d\n    }\x0d\n  } catch (e) {\x0d\n    fatalError(e);\x0d\n  } finally {\x0d\n    active_hooks.call_depth -= 1;\x0d\n  }\x0d\n\x0d\n  // Hooks can only be restored if there have been no recursive hook calls.\x0d\n  // Also the active hooks do not need to be restored if enable()/disable()\x0d\n  // weren't called during hook execution\x2C in which case\x0d\n  // active_hooks.tmp_array will be null.\x0d\n  if (active_hooks.call_depth === 0 && active_hooks.tmp_array !== null) {\x0d\n    restoreActiveHooks();\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction emitHookFactory(symbol\x2C name) {\x0d\n  const fn = emitHook.bind(undefined\x2C symbol);\x0d\n\x0d\n  // Set the name property of the function as it looks good in the stack trace.\x0d\n  ObjectDefineProperty(fn\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n  });\x0d\n  return fn;\x0d\n}\x0d\n\x0d\n// Manage Active Hooks //\x0d\n\x0d\nfunction getHookArrays() {\x0d\n  if (active_hooks.call_depth === 0)\x0d\n    return [active_hooks.array\x2C async_hook_fields];\x0d\n  // If this hook is being enabled while in the middle of processing the array\x0d\n  // of currently active hooks then duplicate the current set of active hooks\x0d\n  // and store this there. This shouldn't fire until the next time hooks are\x0d\n  // processed.\x0d\n  if (active_hooks.tmp_array === null)\x0d\n    storeActiveHooks();\x0d\n  return [active_hooks.tmp_array\x2C active_hooks.tmp_fields];\x0d\n}\x0d\n\x0d\n\x0d\nfunction storeActiveHooks() {\x0d\n  active_hooks.tmp_array = ArrayPrototypeSlice(active_hooks.array);\x0d\n  // Don't want to make the assumption that kInit to kDestroy are indexes 0 to\x0d\n  // 4. So do this the long way.\x0d\n  active_hooks.tmp_fields = [];\x0d\n  copyHooks(active_hooks.tmp_fields\x2C async_hook_fields);\x0d\n}\x0d\n\x0d\nfunction copyHooks(destination\x2C source) {\x0d\n  destination[kInit] = source[kInit];\x0d\n  destination[kBefore] = source[kBefore];\x0d\n  destination[kAfter] = source[kAfter];\x0d\n  destination[kDestroy] = source[kDestroy];\x0d\n  destination[kPromiseResolve] = source[kPromiseResolve];\x0d\n}\x0d\n\x0d\n\x0d\n// Then restore the correct hooks array in case any hooks were added/removed\x0d\n// during hook callback execution.\x0d\nfunction restoreActiveHooks() {\x0d\n  active_hooks.array = active_hooks.tmp_array;\x0d\n  copyHooks(async_hook_fields\x2C active_hooks.tmp_fields);\x0d\n\x0d\n  active_hooks.tmp_array = null;\x0d\n  active_hooks.tmp_fields = null;\x0d\n}\x0d\n\x0d\nfunction trackPromise(promise\x2C parent) {\x0d\n  if (promise[async_id_symbol]) {\x0d\n    return;\x0d\n  }\x0d\n\x0d\n  // Get trigger id from parent async id before making the async id of the\x0d\n  // child so if a new one must be made it will be lower than the child.\x0d\n  const triggerAsyncId = parent ? getOrSetAsyncId(parent) :\x0d\n    getDefaultTriggerAsyncId();\x0d\n\x0d\n  promise[async_id_symbol] = newAsyncId();\x0d\n  promise[trigger_async_id_symbol] = triggerAsyncId;\x0d\n}\x0d\n\x0d\nfunction promiseInitHook(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerAsyncId = promise[trigger_async_id_symbol];\x0d\n  emitInitScript(asyncId\x2C 'PROMISE'\x2C triggerAsyncId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseInitHookWithDestroyTracking(promise\x2C parent) {\x0d\n  promiseInitHook(promise\x2C parent);\x0d\n  destroyTracking(promise\x2C parent);\x0d\n}\x0d\n\x0d\nfunction destroyTracking(promise\x2C parent) {\x0d\n  trackPromise(promise\x2C parent);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  registerDestroyHook(promise\x2C asyncId);\x0d\n}\x0d\n\x0d\nfunction promiseBeforeHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  const triggerId = promise[trigger_async_id_symbol];\x0d\n  emitBeforeScript(asyncId\x2C triggerId\x2C promise);\x0d\n}\x0d\n\x0d\nfunction promiseAfterHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  if (hasHooks(kAfter)) {\x0d\n    emitAfterNative(asyncId);\x0d\n  }\x0d\n  if (asyncId === executionAsyncId()) {\x0d\n    // This condition might not be true if async_hooks was enabled during\x0d\n    // the promise callback execution.\x0d\n    // Popping it off the stack can be skipped in that case\x2C because it is\x0d\n    // known that it would correspond to exactly one call with\x0d\n    // PromiseHookType::kBefore that was not witnessed by the PromiseHook.\x0d\n    popAsyncContext(asyncId);\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseResolveHook(promise) {\x0d\n  trackPromise(promise);\x0d\n  const asyncId = promise[async_id_symbol];\x0d\n  emitPromiseResolveNative(asyncId);\x0d\n}\x0d\n\x0d\nlet wantPromiseHook = false;\x0d\nfunction enableHooks() {\x0d\n  async_hook_fields[kCheck] += 1;\x0d\n\x0d\n  setCallbackTrampoline(callbackTrampoline);\x0d\n}\x0d\n\x0d\nlet stopPromiseHook;\x0d\nfunction updatePromiseHookMode() {\x0d\n  wantPromiseHook = true;\x0d\n  let initHook;\x0d\n  if (initHooksExist()) {\x0d\n    initHook = destroyHooksExist() ? promiseInitHookWithDestroyTracking :\x0d\n      promiseInitHook;\x0d\n  } else if (destroyHooksExist()) {\x0d\n    initHook = destroyTracking;\x0d\n  }\x0d\n  if (stopPromiseHook) stopPromiseHook();\x0d\n  const promiseHooks = require('internal/promise_hooks');\x0d\n  stopPromiseHook = promiseHooks.createHook({\x0d\n    init: initHook\x2C\x0d\n    before: promiseBeforeHook\x2C\x0d\n    after: promiseAfterHook\x2C\x0d\n    settled: promiseResolveHooksExist() ? promiseResolveHook : undefined\x2C\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction disableHooks() {\x0d\n  async_hook_fields[kCheck] -= 1;\x0d\n\x0d\n  wantPromiseHook = false;\x0d\n\x0d\n  setCallbackTrampoline();\x0d\n\x0d\n  // Delay the call to `disablePromiseHook()` because we might currently be\x0d\n  // between the `before` and `after` calls of a Promise.\x0d\n  enqueueMicrotask(disablePromiseHookIfNecessary);\x0d\n}\x0d\n\x0d\nfunction disablePromiseHookIfNecessary() {\x0d\n  if (!wantPromiseHook && stopPromiseHook) {\x0d\n    stopPromiseHook();\x0d\n  }\x0d\n}\x0d\n\x0d\n// Internal Embedder API //\x0d\n\x0d\n// Increment the internal id counter and return the value. Important that the\x0d\n// counter increment first. Since it's done the same way in\x0d\n// Environment::new_async_uid()\x0d\nfunction newAsyncId() {\x0d\n  return ++async_id_fields[kAsyncIdCounter];\x0d\n}\x0d\n\x0d\nfunction getOrSetAsyncId(object) {\x0d\n  if (ObjectPrototypeHasOwnProperty(object\x2C async_id_symbol)) {\x0d\n    return object[async_id_symbol];\x0d\n  }\x0d\n\x0d\n  return object[async_id_symbol] = newAsyncId();\x0d\n}\x0d\n\x0d\n\x0d\n// Return the triggerAsyncId meant for the constructor calling it. It's up to\x0d\n// the user to safeguard this call and make sure it's zero'd out when the\x0d\n// constructor is complete.\x0d\nfunction getDefaultTriggerAsyncId() {\x0d\n  const defaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  // If defaultTriggerAsyncId isn't set\x2C use the executionAsyncId\x0d\n  if (defaultTriggerAsyncId < 0)\x0d\n    return async_id_fields[kExecutionAsyncId];\x0d\n  return defaultTriggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\nfunction clearDefaultTriggerAsyncId() {\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = -1;\x0d\n}\x0d\n\x0d\n/**\x0d\n * Sets a default top level trigger ID to be used\x0d\n * @template {Array<unknown>} T\x0d\n * @template {unknown} R\x0d\n * @param {number} triggerAsyncId\x0d\n * @param { (...T: args) => R } block\x0d\n * @param  {T} args\x0d\n * @returns {R}\x0d\n */\x0d\nfunction defaultTriggerAsyncIdScope(triggerAsyncId\x2C block\x2C ...args) {\x0d\n  if (triggerAsyncId === undefined)\x0d\n    return block.apply(null\x2C args);\x0d\n  // CHECK(NumberIsSafeInteger(triggerAsyncId))\x0d\n  // CHECK(triggerAsyncId > 0)\x0d\n  const oldDefaultTriggerAsyncId = async_id_fields[kDefaultTriggerAsyncId];\x0d\n  async_id_fields[kDefaultTriggerAsyncId] = triggerAsyncId;\x0d\n\x0d\n  try {\x0d\n    return block.apply(null\x2C args);\x0d\n  } finally {\x0d\n    async_id_fields[kDefaultTriggerAsyncId] = oldDefaultTriggerAsyncId;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction hasHooks(key) {\x0d\n  return async_hook_fields[key] > 0;\x0d\n}\x0d\n\x0d\nfunction enabledHooksExist() {\x0d\n  return hasHooks(kCheck);\x0d\n}\x0d\n\x0d\nfunction initHooksExist() {\x0d\n  return hasHooks(kInit);\x0d\n}\x0d\n\x0d\nfunction afterHooksExist() {\x0d\n  return hasHooks(kAfter);\x0d\n}\x0d\n\x0d\nfunction destroyHooksExist() {\x0d\n  return hasHooks(kDestroy);\x0d\n}\x0d\n\x0d\nfunction promiseResolveHooksExist() {\x0d\n  return hasHooks(kPromiseResolve);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitInitScript(asyncId\x2C type\x2C triggerAsyncId\x2C resource) {\x0d\n  // Short circuit all checks for the common case. Which is that no hooks have\x0d\n  // been set. Do this to remove performance impact for embedders (and core).\x0d\n  if (!hasHooks(kInit))\x0d\n    return;\x0d\n\x0d\n  if (triggerAsyncId === null) {\x0d\n    triggerAsyncId = getDefaultTriggerAsyncId();\x0d\n  }\x0d\n\x0d\n  emitInitNative(asyncId\x2C type\x2C triggerAsyncId\x2C resource);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitBeforeScript(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource);\x0d\n\x0d\n  if (hasHooks(kBefore))\x0d\n    emitBeforeNative(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitAfterScript(asyncId) {\x0d\n  if (hasHooks(kAfter))\x0d\n    emitAfterNative(asyncId);\x0d\n\x0d\n  popAsyncContext(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction emitDestroyScript(asyncId) {\x0d\n  // Return early if there are no destroy callbacks\x2C or invalid asyncId.\x0d\n  if (!hasHooks(kDestroy) || asyncId <= 0)\x0d\n    return;\x0d\n  async_wrap.queueDestroyAsyncId(asyncId);\x0d\n}\x0d\n\x0d\n\x0d\nfunction hasAsyncIdStack() {\x0d\n  return hasHooks(kStackLength);\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native push_async_ids() call.\x0d\nfunction pushAsyncContext(asyncId\x2C triggerAsyncId\x2C resource) {\x0d\n  const offset = async_hook_fields[kStackLength];\x0d\n  execution_async_resources[offset] = resource;\x0d\n  if (offset * 2 >= async_wrap.async_ids_stack.length)\x0d\n    return pushAsyncContext_(asyncId\x2C triggerAsyncId);\x0d\n  async_wrap.async_ids_stack[offset * 2] = async_id_fields[kExecutionAsyncId];\x0d\n  async_wrap.async_ids_stack[offset * 2 + 1] = async_id_fields[kTriggerAsyncId];\x0d\n  async_hook_fields[kStackLength]++;\x0d\n  async_id_fields[kExecutionAsyncId] = asyncId;\x0d\n  async_id_fields[kTriggerAsyncId] = triggerAsyncId;\x0d\n}\x0d\n\x0d\n\x0d\n// This is the equivalent of the native pop_async_ids() call.\x0d\nfunction popAsyncContext(asyncId) {\x0d\n  const stackLength = async_hook_fields[kStackLength];\x0d\n  if (stackLength === 0) return false;\x0d\n\x0d\n  if (enabledHooksExist() && async_id_fields[kExecutionAsyncId] !== asyncId) {\x0d\n    // Do the same thing as the native code (i.e. crash hard).\x0d\n    return popAsyncContext_(asyncId);\x0d\n  }\x0d\n\x0d\n  const offset = stackLength - 1;\x0d\n  async_id_fields[kExecutionAsyncId] = async_wrap.async_ids_stack[2 * offset];\x0d\n  async_id_fields[kTriggerAsyncId] = async_wrap.async_ids_stack[2 * offset + 1];\x0d\n  execution_async_resources.pop();\x0d\n  async_hook_fields[kStackLength] = offset;\x0d\n  return offset > 0;\x0d\n}\x0d\n\x0d\n\x0d\nfunction executionAsyncId() {\x0d\n  return async_id_fields[kExecutionAsyncId];\x0d\n}\x0d\n\x0d\nfunction triggerAsyncId() {\x0d\n  return async_id_fields[kTriggerAsyncId];\x0d\n}\x0d\n\x0d\n\x0d\nmodule.exports = {\x0d\n  executionAsyncId\x2C\x0d\n  triggerAsyncId\x2C\x0d\n  // Private API\x0d\n  getHookArrays\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol\x2C trigger_async_id_symbol\x2C\x0d\n    init_symbol\x2C before_symbol\x2C after_symbol\x2C destroy_symbol\x2C\x0d\n    promise_resolve_symbol\x2C owner_symbol\x2C\x0d\n  }\x2C\x0d\n  constants: {\x0d\n    kInit\x2C kBefore\x2C kAfter\x2C kDestroy\x2C kTotals\x2C kPromiseResolve\x2C\x0d\n  }\x2C\x0d\n  enableHooks\x2C\x0d\n  disableHooks\x2C\x0d\n  updatePromiseHookMode\x2C\x0d\n  clearDefaultTriggerAsyncId\x2C\x0d\n  clearAsyncIdStack\x2C\x0d\n  hasAsyncIdStack\x2C\x0d\n  executionAsyncResource\x2C\x0d\n  // Internal Embedder API\x0d\n  newAsyncId\x2C\x0d\n  getOrSetAsyncId\x2C\x0d\n  getDefaultTriggerAsyncId\x2C\x0d\n  defaultTriggerAsyncIdScope\x2C\x0d\n  enabledHooksExist\x2C\x0d\n  initHooksExist\x2C\x0d\n  afterHooksExist\x2C\x0d\n  destroyHooksExist\x2C\x0d\n  emitInit: emitInitScript\x2C\x0d\n  emitBefore: emitBeforeScript\x2C\x0d\n  emitAfter: emitAfterScript\x2C\x0d\n  emitDestroy: emitDestroyScript\x2C\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  registerDestroyHook\x2C\x0d\n  useDomainTrampoline\x2C\x0d\n  nativeHooks: {\x0d\n    init: emitInitNative\x2C\x0d\n    before: emitBeforeNative\x2C\x0d\n    after: emitAfterNative\x2C\x0d\n    destroy: emitDestroyNative\x2C\x0d\n    promise_resolve: emitPromiseResolveNative\x2C\x0d\n  }\x2C\x0d\n  asyncWrap: {\x0d\n    Providers: async_wrap.Providers\x2C\x0d\n  }\x2C\x0d\n};\x0d\n
code-source-info,0x1bc6163e57e,14,14984,15037,C0O14992C7O15017C16O15032C22O15034,,
tick,0x7ff6cca9aab0,2850732,0,0x0,3,0x7ff6cbdbb8d0,0x1bc6163d66f,0x1bc6163cf93,0x1bc6163ca9e,0x1bc6163ba05,0x1bc6163b702,0x1bc6163b3c1,0x1bc6163afcc,0x1bc6163ab93,0x1bc6163a806,0x1bc61639fa1,0x24f91a02614,0x7ff6cb6a2cb0,0xc2df91015b,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,2850807,0x1bc6163fa56,35,getDefaultTriggerAsyncId node:internal/async_hooks:433:34,0x3fcdef84750,~
code-source-info,0x1bc6163fa56,14,15459,15722,C0O15497C7O15513C9O15512C13O15608C14O15634C19O15644C26O15667C28O15666C31O15686C32O15690C34O15719,,
code-creation,JS,10,2850944,0x1bc6163fc86,13,initHooksExist node:internal/async_hooks:478:24,0x3fcdef848e0,~
code-source-info,0x1bc6163fc86,14,16722,16756,C0O16730C5O16746C8O16737C12O16753,,
code-creation,JS,10,2851029,0x1bc6163fd6e,16,hasHooks node:internal/async_hooks:470:18,0x3fcdef84840,~
code-source-info,0x1bc6163fd6e,14,16582,16630,C0O16593C7O16617C12O16623C15O16627,,
code-creation,JS,10,2851135,0x1bc6163fe76,59,push node:internal/fixed_queue:99:7,0x3fcdefa5ac0,~
code-source-info,0x1bc6163fe76,37,3783,4050,C0O3806C5O3811C10O3811C16O3973C23O3989C26O3985C32O3983C38O3966C42O4029C47O4034C52O4034C58O4049,,
code-creation,JS,10,2851249,0x1bc6163ffb6,24,isFull node:internal/fixed_queue:71:9,0x3fcdefa5810,~
code-source-info,0x1bc6163ffb6,37,3209,3272,C0O3233C4O3237C10O3244C12O3242C16O3260C20O3251C23O3267,,
code-creation,JS,10,2851348,0x65ef4120e,37,push node:internal/fixed_queue:75:7,0x3fcdefa5860,~
code-source-info,0x65ef4120e,37,3282,3368,C0O3301C5O3311C12O3316C16O3346C20O3350C26O3357C28O3355C31O3338C36O3367,,
code-creation,JS,10,2851521,0x65ef41366,118,Readable.removeListener node:internal/streams/readable:1157:45,0x2bb6ecb6b00,~
code-source-info,0x65ef41366,137,37260,37978,C0O37293C5O37326C10O37333C15O37343C20O37358C34O37358C40O37435C42O37442C47O37799C50O37807C58O37807C66O37858C68O37865C73O37884C81O37884C88O37906C93O37920C95O37926C104O37938C106O37937C111O37934C115O37964C117O37975,,
code-creation,JS,10,2851826,0x65ef4153e,322,removeListener node:events:680:28,0x3fcdef91f70,~
code-source-info,0x65ef4153e
code-creation,JS,10,2852114,0x65ef41856,77,mark node:internal/perf/performance:118:7,0x13a35fab7e8,~
code-source-info,0x65ef41856,121,3098,3321,C0O3098C11O3115C18O3136C25O3164C34O3136C39O3218C45O3225C50O3241C60O3247C65O3241C66O3289C71O3296C76O3316,,
code-creation,JS,10,2852234,0x65ef4199e,40,mark node:internal/perf/usertiming:157:14,0x13a35fa6d98,~
code-source-info,0x65ef4199e,119,3904,4037,C0O3938C13O3938C19O3977C24O3977C28O3995C33O3995C37O4022C39O4034,,
code-creation,JS,10,2852393,0x65ef41b36,276,PerformanceMark node:internal/perf/usertiming:70:14,0x13a35fa6ed8,~
code-source-info,0x65ef41b36,119,1719,2462,C0O1719C18O1768C24O1775C29O1791C39O1797C44O1791C45O1839C49O1862C54O1895C59O1895C66O1913C79O1919C84O1913C85O1965C90O1995C98O1995C103O2061C110O2068C123O2083C126O2083C130O2095C138O2095C143O2140C144O2154C149O2166C156O2172C161O2166C162O2227C167O2239C172O2239C178O2281C185O2288C193O2303C198O2336C201O2336C209O2382C211O2388C219O2382C246O2382C258O2434C263O2439C268O2448C275O2461,,
code-creation,JS,10,2852596,0x65ef41e0e,177, node:internal/validators:175:40,0x3fcdef85540,~
code-source-info,0x65ef41e0e,15,4898,5355,C19O4942C25O4978C41O4984C46O4978C47O5038C54O5064C66O5096C83O5144C86O5144C92O5172C110O5243C136O5275C151O5319C169O5178C174O5172C176O5354,,
code-creation,JS,10,2852884,0x65ef42186,241,run file:///C:/coding/soodocode/build/statements.js:208:12,0x2c01bf4dad8,~
code-source-info,0x65ef42186,113,10317,10893,C0O10365C5O10390C10O10365C16O10440C38O10423C66O10423C69O10481C74O10481C81O10524C92O10541C103O10524C107O10599C112O10599C117O10616C122O10627C129O10667C145O10747C153O10747C165O10810C171O10637C175O10412C240O10892,,
code-creation,JS,10,2853022,0x65ef423f6,36,getCurrentScope file:///C:/coding/soodocode/build/runtime.js:606:28,0xc2df92e5c8,~
code-source-info,0x65ef423f6,111,38676,38759,C0O38709C5O38716C13O38716C22O38726C31O38726C35O38745,,
code-creation,JS,10,2853210,0x65ef4267e,293,run file:///C:/coding/soodocode/build/statements.js:246:12,0x2c01bf4d3a8,~
code-source-info,0x65ef4267e,113,12210,12710,C0O12210C8O12246C13O12263C18O12246C25O12286C34O12308C49O12286C53O12372C59O12380C64O12399C69O12380C75O12372C92O12357C129O12363C225O12426C230O12426C235O12443C240O12459C252O12485C258O12648C287O12465C292O12709,,
code-creation,JS,10,2853406,0x65ef42a76,127,evaluateToken file:///C:/coding/soodocode/build/runtime.js:555:33,0xc2df92e3c0,~
code-source-info,0x65ef42a76,111,36454,36969,C3O36524C8O36534C13O36548C18O36557C29O36593C39O36553C51O36548C56O36672C68O36741C76O36763C80O36749C85O36803C91O36808C97O36810C102O36816C106O36816C113O36803C120O36927C122O36927C126O36968,,
code-creation,JS,10,2853754,0x65ef42f16,93,getInitValue file:///C:/coding/soodocode/build/runtime-types.js:71:17,0xc2df932e60,~
code-source-info,0x65ef42f16,112,2534,2831,C0O2534C12O2580C15O2588C20O2613C25O2588C30O2580C32O2628C39O2648C41O2637C46O2679C55O2679C59O2737C63O2750C73O2770C86O2750C92O2825,,
new,MemoryChunk,0x198a7b40000,806912
code-creation,JS,13,2856836,0x7ff64c491680,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c491680,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
tick,0x7ff6cc687c85,2866369,0,0x0,0,0x7ff6cc2220d0,0x7ff64c491717,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c477cca,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d3f9,2881967,0,0x0,0,0x7ff6cc2220d0,0x7ff64c491717,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c477cca,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,2896747,0x7ff64c4918c0,1824,getEnumFromValue file:///C:/coding/soodocode/build/runtime.js:588:29,0xc2df92e528,*
code-source-info,0x7ff64c4918c0,111,37850,38234,C0O37850C119O37893C161O37900C182O37907C263O38190C272O37921C307O37914C430O37979C443O37985C485O37989C522O37967C571O38020C734O38021C1185O38127C1265O37875C1295O38220C1328O38173C1333O37850C1481O38021C1602O38127C1658O37875,,
tick,0x7ff6cc2a8afe,2897954,0,0x0,0,0x7ff64c47aa8e,0x7ff64c48324b,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c649,2914018,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,2922349,0x7ff64c4950c0,9612,evaluateToken file:///C:/coding/soodocode/build/runtime.js:472:26,0xc2df92e370,*
code-source-info,0x7ff64c4950cxc2df932be0S0xc2df92e488S0xc2df92e528
tick,0x7ff64c49e161,2929958,0,0x0,0,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,2946390,0,0x0,1
tick,0x7ff6cc3177cc,2961962,0,0x0,0,0x7ff64c49515a,0x7ff64c48324b,0x7ff64c49e7cc,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf75,2978051,0,0x0,0,0x7ff64c4831f7,0x7ff64c49f96d,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda9303,2994001,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c24218e,3010075,0,0x0,0,0x7ff64c49f96d,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0748c3,3026017,0,0x0,1
tick,0x7ff66c245e38,3042005,0,0x0,0,0x7ff64c49e7cc,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0821,3057973,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a1537,3073986,0,0x0,0,0x7ff64c49077c,0x7ff64c4833f9,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,3084613,0x7ff64c497840,8844,evaluateExpr file:///C:/coding/soodocode/build/runtime.js:250:25,0xc2df92e320,*
code-source-info,0x7ff64cx2c01bf63718
new,MemoryChunk,0x1b062c00000,262144
new,MemoryChunk,0x22b37300000,262144
tick,0x7ff64c4a0d77,3089977,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497909,3105986,0,0x0,0,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2a655340000,262144
new,MemoryChunk,0x1e184c00000,262144
new,MemoryChunk,0x2c3cdb80000,262144
new,MemoryChunk,0x3b91d0c0000,262144
new,MemoryChunk,0x20dcd800000,262144
new,MemoryChunk,0x18da3140000,262144
new,MemoryChunk,0x3e38a180000,262144
new,MemoryChunk,0xb6e3000000,262144
new,MemoryChunk,0x2fe3ca80000,262144
new,MemoryChunk,0x5312e00000,262144
tick,0x7ff6cc14fea0,3121968,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2f2e740000,262144
new,MemoryChunk,0x1ce58b00000,262144
new,MemoryChunk,0x43ad880000,262144
new,MemoryChunk,0x1f38ce80000,262144
new,MemoryChunk,0x30ae8600000,262144
new,MemoryChunk,0x39feb300000,262144
new,MemoryChunk,0x370df140000,262144
new,MemoryChunk,0x270f7f00000,262144
new,MemoryChunk,0x30d3f1c0000,262144
new,MemoryChunk,0x756b900000,262144
tick,0x7ff6cb60e783,3138100,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cca89ee8,3153990,0,0x0,0,0x7ff66c30a519,0x7ff64c49ea88,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x71da780000,262144
new,MemoryChunk,0xb020d00000,262144
new,MemoryChunk,0x299dae40000,262144
new,MemoryChunk,0x21340080000,262144
new,MemoryChunk,0x31579340000,262144
new,MemoryChunk,0x1a7a2240000,262144
new,MemoryChunk,0x33b3b280000,262144
new,MemoryChunk,0xd14bbc0000,262144
new,MemoryChunk,0x1fd3cd00000,262144
tick,0x7ff6cc0fa44d,3169983,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x340eaa80000,262144
new,MemoryChunk,0x372a5a00000,262144
new,MemoryChunk,0x1d2b6d00000,262144
new,MemoryChunk,0xe9b3c0000,262144
new,MemoryChunk,0x1e547f80000,262144
new,MemoryChunk,0x3fa882c0000,262144
new,MemoryChunk,0x1cac14c0000,262144
new,MemoryChunk,0x145c33c0000,262144
new,MemoryChunk,0x30306280000,262144
new,MemoryChunk,0xca30ec0000,262144
new,MemoryChunk,0x24045580000,262144
tick,0x7ff6cbea1224,3185963,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49f3df,3201989,0,0x0,0,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3f0869c0000,262144
new,MemoryChunk,0x3df428c0000,262144
new,MemoryChunk,0x1def59c0000,262144
new,MemoryChunk,0x2b596140000,262144
new,MemoryChunk,0xc554fc0000,262144
new,MemoryChunk,0x7701dc0000,262144
new,MemoryChunk,0x3bc2a400000,262144
new,MemoryChunk,0x2c02bd40000,262144
new,MemoryChunk,0xfd5fa80000,262144
new,MemoryChunk,0x1869bcc0000,262144
tick,0x7ff6cc105457,3218046,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1c313580000,262144
new,MemoryChunk,0x2028fc40000,262144
new,MemoryChunk,0x259c5440000,262144
new,MemoryChunk,0x5b12ec0000,262144
new,MemoryChunk,0x2e0a9380000,262144
new,MemoryChunk,0x33d74400000,262144
new,MemoryChunk,0xc85eb40000,262144
new,MemoryChunk,0x37f4ed80000,262144
new,MemoryChunk,0x1fea8840000,262144
new,MemoryChunk,0x3899cd80000,262144
tick,0x7ff66c2dc0e0,3234062,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
delete,MemoryChunk,0x205c8b80000
delete,MemoryChunk,0x9ded700000
delete,MemoryChunk,0x1a5a54c0000
delete,MemoryChunk,0xc006d00000
delete,MemoryChunk,0x49bd600000
delete,MemoryChunk,0xd11bb40000
delete,MemoryChunk,0x2c97a800000
delete,MemoryChunk,0x135fc280000
delete,MemoryChunk,0x104a3c00000
delete,MemoryChunk,0x2e64aa80000
delete,MemoryChunk,0x11104e40000
delete,MemoryChunk,0x1aa38c00000
delete,MemoryChunk,0x11cc4380000
delete,MemoryChunk,0x801380000
delete,MemoryChunk,0x30aaaf80000
delete,MemoryChunk,0x33ad4680000
delete,MemoryChunk,0x219f53c0000
delete,MemoryChunk,0x3327b300000
delete,MemoryChunk,0x15442b80000
delete,MemoryChunk,0x1adebe00000
delete,MemoryChunk,0x14f302c0000
delete,MemoryChunk,0x21153c00000
delete,MemoryChunk,0x2ce12d80000
delete,MemoryChunk,0x2151eb80000
delete,MemoryChunk,0x3722b940000
delete,MemoryChunk,0x3fb03b40000
delete,MemoryChunk,0x2c139d80000
delete,MemoryChunk,0x1b062c00000
delete,MemoryChunk,0x3b91d0c0000
delete,MemoryChunk,0x5312e00000
delete,MemoryChunk,0x2a655340000
delete,MemoryChunk,0x20dcd800000
delete,MemoryChunk,0x2fe3ca80000
delete,MemoryChunk,0x3e38a180000
delete,MemoryChunk,0x18da3140000
delete,MemoryChunk,0x1ce58b00000
delete,MemoryChunk,0x1f38ce80000
delete,MemoryChunk,0x43ad880000
delete,MemoryChunk,0x30ae8600000
delete,MemoryChunk,0x2f2e740000
delete,MemoryChunk,0x39feb300000
delete,MemoryChunk,0x299dae40000
delete,MemoryChunk,0x1fd3cd00000
delete,MemoryChunk,0x270f7f00000
delete,MemoryChunk,0x21340080000
delete,MemoryChunk,0x1a7a2240000
delete,MemoryChunk,0x756b900000
delete,MemoryChunk,0xb020d00000
delete,MemoryChunk,0x33b3b280000
delete,MemoryChunk,0x71da780000
delete,MemoryChunk,0x31579340000
delete,MemoryChunk,0x340eaa80000
delete,MemoryChunk,0xd14bbc0000
delete,MemoryChunk,0x372a5a00000
delete,MemoryChunk,0x370df140000
delete,MemoryChunk,0x1e547f80000
delete,MemoryChunk,0x1cac14c0000
delete,MemoryChunk,0x1d2b6d00000
delete,MemoryChunk,0x3fa882c0000
delete,MemoryChunk,0x145c33c0000
delete,MemoryChunk,0x22b37300000
delete,MemoryChunk,0xe9b3c0000
delete,MemoryChunk,0x3f0869c0000
delete,MemoryChunk,0xb6e3000000
delete,MemoryChunk,0x2b596140000
delete,MemoryChunk,0x3bc2a400000
delete,MemoryChunk,0x3df428c0000
delete,MemoryChunk,0x7701dc0000
delete,MemoryChunk,0x30d3f1c0000
delete,MemoryChunk,0x1def59c0000
delete,MemoryChunk,0xc554fc0000
delete,MemoryChunk,0x2c02bd40000
delete,MemoryChunk,0x259c5440000
delete,MemoryChunk,0x33d74400000
delete,MemoryChunk,0xfd5fa80000
delete,MemoryChunk,0x1c313580000
delete,MemoryChunk,0xca30ec0000
delete,MemoryChunk,0x2e0a9380000
delete,MemoryChunk,0x3899cd80000
delete,MemoryChunk,0x5b12ec0000
delete,MemoryChunk,0x30306280000
delete,MemoryChunk,0xc85eb40000
delete,MemoryChunk,0x1fea8840000
delete,MemoryChunk,0x24045580000
delete,MemoryChunk,0x2028fc40000
delete,MemoryChunk,0x37f4ed80000
new,MemoryChunk,0x340c6040000,262144
tick,0x7ff6cbdaee89,3250011,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863c16f3f,3266003,0,0x0,1
tick,0x7ff66c28bb8f,3282027,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf13022,3298010,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4950c8,3314004,0,0x0,0,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1ea65,3329999,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3a75,3346033,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x77885c0000,262144
tick,0x7ff6cbebd20d,3362104,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb511e,3378017,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2d226e00000,262144
new,MemoryChunk,0x392bce00000,262144
new,MemoryChunk,0x11a15c80000,262144
new,MemoryChunk,0x1cd364c0000,262144
new,MemoryChunk,0x13db0480000,262144
new,MemoryChunk,0x9dab9c0000,262144
new,MemoryChunk,0x20084200000,262144
new,MemoryChunk,0x3fb19880000,262144
new,MemoryChunk,0x2080c800000,262144
new,MemoryChunk,0x252d6ec0000,262144
new,MemoryChunk,0x7c04880000,262144
new,MemoryChunk,0x2e2b8440000,262144
tick,0x7ff66c2dc0b2,3394030,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x33272400000,262144
new,MemoryChunk,0x372e15c0000,262144
new,MemoryChunk,0x1dbb7300000,262144
new,MemoryChunk,0xeaf3980000,262144
new,MemoryChunk,0x1dbec680000,262144
new,MemoryChunk,0x37daf580000,262144
tick,0x7ff6cbeb1fa2,3410017,0,0x0,1
new,MemoryChunk,0x1a5289c0000,262144
new,MemoryChunk,0x117e6e40000,262144
tick,0x7ff64c49e9d4,3426036,0,0x0,0,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35bac0000,262144
new,MemoryChunk,0x2bd93480000,262144
new,MemoryChunk,0x27dc2e40000,262144
new,MemoryChunk,0x116f1e80000,262144
new,MemoryChunk,0x732f940000,262144
new,MemoryChunk,0x1c912640000,262144
new,MemoryChunk,0x28df2ec0000,262144
new,MemoryChunk,0x11b87580000,262144
new,MemoryChunk,0x8471d40000,262144
new,MemoryChunk,0x3791280000,262144
new,MemoryChunk,0xabc1a40000,262144
new,MemoryChunk,0x3cd3f8c0000,262144
tick,0x7ff6cbec6b37,3441989,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5662440000,262144
new,MemoryChunk,0x291ce100000,262144
new,MemoryChunk,0x24005680000,262144
new,MemoryChunk,0x3c0bef40000,262144
new,MemoryChunk,0xa7d540000,262144
new,MemoryChunk,0x1008cc00000,262144
new,MemoryChunk,0x24054140000,262144
new,MemoryChunk,0x78209c0000,262144
tick,0x7ff6cc06d138,3458293,0,0x0,1
tick,0x7ff6cc29da22,3474061,0,0x0,0,0x7ff66c2daafa,0x7ff64c49e82a,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x222d2780000,262144
new,MemoryChunk,0x2923df00000,262144
new,MemoryChunk,0x31fb4600000,262144
new,MemoryChunk,0x14303280000,262144
new,MemoryChunk,0x18036500000,262144
new,MemoryChunk,0x24f060c0000,262144
new,MemoryChunk,0x23894300000,262144
new,MemoryChunk,0x2eca36c0000,262144
new,MemoryChunk,0xe188940000,262144
new,MemoryChunk,0x38fac700000,262144
tick,0x7ff6cbebcec8,3489019,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1bcbc700000,262144
new,MemoryChunk,0xbd627c0000,262144
tick,0x7ff6cc06d7a9,3504232,0,0x0,1
new,MemoryChunk,0x3fafafc0000,262144
new,MemoryChunk,0x476c040000,262144
new,MemoryChunk,0x1b8c1680000,262144
new,MemoryChunk,0x2cea4280000,262144
new,MemoryChunk,0x3d286880000,262144
new,MemoryChunk,0x28a86f80000,262144
new,MemoryChunk,0xf9b0f40000,262144
tick,0x7ff6cbdac847,3520329,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35c27380000,262144
new,MemoryChunk,0x2e63cbc0000,262144
new,MemoryChunk,0x3fbe6c40000,262144
new,MemoryChunk,0x13f2d8c0000,262144
new,MemoryChunk,0x81f82c0000,262144
new,MemoryChunk,0x365eaa80000,262144
new,MemoryChunk,0x3f993540000,262144
new,MemoryChunk,0x4293340000,262144
new,MemoryChunk,0xdadf040000,262144
tick,0x7ff66c2bc3c1,3536043,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fe57,3551993,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x37388640000,262144
new,MemoryChunk,0x20551480000,262144
new,MemoryChunk,0x1182c4c0000,262144
new,MemoryChunk,0x1b0e9f80000,262144
new,MemoryChunk,0x22a96a80000,262144
new,MemoryChunk,0x3f3a2340000,262144
new,MemoryChunk,0x29c04540000,262144
new,MemoryChunk,0x39d36a80000,262144
new,MemoryChunk,0x32381000000,262144
new,MemoryChunk,0x3b7c4cc0000,262144
tick,0x7ff64c49df9a,3568010,0,0x0,0,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x110853c0000,262144
new,MemoryChunk,0x365bc7c0000,262144
new,MemoryChunk,0x1f706b80000,262144
new,MemoryChunk,0x674e180000,262144
tick,0x7ff6cc0d898a,3583002,0,0x0,1
new,MemoryChunk,0x289f0e80000,262144
new,MemoryChunk,0x204c1c80000,262144
new,MemoryChunk,0x3c023540000,262144
new,MemoryChunk,0x2b745dc0000,262144
new,MemoryChunk,0x15a2e340000,262144
new,MemoryChunk,0x20ff41c0000,262144
tick,0x7ff66c240703,3599019,0,0x0,0,0x7ff64c49f3dd,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2fd6d540000,262144
new,MemoryChunk,0x39aa34c0000,262144
new,MemoryChunk,0x2105bc80000,262144
new,MemoryChunk,0x56bc00000,262144
new,MemoryChunk,0x3814f900000,262144
new,MemoryChunk,0x11660e80000,262144
new,MemoryChunk,0x1bf51b00000,262144
new,MemoryChunk,0x577a800000,262144
delete,MemoryChunk,0x340c6040000
delete,MemoryChunk,0x77885c0000
delete,MemoryChunk,0x1869bcc0000
delete,MemoryChunk,0x2d226e00000
delete,MemoryChunk,0x392bce00000
delete,MemoryChunk,0x13db0480000
delete,MemoryChunk,0x3fb19880000
delete,MemoryChunk,0x11a15c80000
delete,MemoryChunk,0x20084200000
delete,MemoryChunk,0x252d6ec0000
delete,MemoryChunk,0x1cd364c0000
delete,MemoryChunk,0x2080c800000
delete,MemoryChunk,0x2e2b8440000
delete,MemoryChunk,0x9dab9c0000
delete,MemoryChunk,0x372e15c0000
delete,MemoryChunk,0xeaf3980000
delete,MemoryChunk,0x33272400000
delete,MemoryChunk,0x1dbec680000
delete,MemoryChunk,0x37daf580000
delete,MemoryChunk,0x35bac0000
tick,0x7ff863c0d0e4,3614975,0,0x0,1
delete,MemoryChunk,0x28df2ec0000
delete,MemoryChunk,0x27dc2e40000
delete,MemoryChunk,0x1c912640000
delete,MemoryChunk,0x11b87580000
delete,MemoryChunk,0x8471d40000
delete,MemoryChunk,0x116f1e80000
delete,MemoryChunk,0x291ce100000
delete,MemoryChunk,0x3c0bef40000
delete,MemoryChunk,0x5662440000
delete,MemoryChunk,0x3cd3f8c0000
delete,MemoryChunk,0x1008cc00000
delete,MemoryChunk,0x222d2780000
delete,MemoryChunk,0x14303280000
delete,MemoryChunk,0x24005680000
delete,MemoryChunk,0x2923df00000
delete,MemoryChunk,0x18036500000
delete,MemoryChunk,0x3791280000
delete,MemoryChunk,0xa7d540000
delete,MemoryChunk,0x31fb4600000
delete,MemoryChunk,0x24f060c0000
delete,MemoryChunk,0x3fafafc0000
delete,MemoryChunk,0x1bcbc700000
delete,MemoryChunk,0x1b8c1680000
delete,MemoryChunk,0xe188940000
delete,MemoryChunk,0xbd627c0000
delete,MemoryChunk,0x476c040000
delete,MemoryChunk,0x3d286880000
delete,MemoryChunk,0xf9b0f40000
delete,MemoryChunk,0x2e63cbc0000
delete,MemoryChunk,0x81f82c0000
delete,MemoryChunk,0x3f993540000
delete,MemoryChunk,0x2cea4280000
delete,MemoryChunk,0x13f2d8c0000
delete,MemoryChunk,0x38fac700000
delete,MemoryChunk,0xdadf040000
delete,MemoryChunk,0x35c27380000
delete,MemoryChunk,0x365eaa80000
delete,MemoryChunk,0x4293340000
delete,MemoryChunk,0x3fbe6c40000
delete,MemoryChunk,0x1182c4c0000
delete,MemoryChunk,0x22a96a80000
delete,MemoryChunk,0x3b7c4cc0000
delete,MemoryChunk,0x23894300000
delete,MemoryChunk,0x20551480000
delete,MemoryChunk,0x2eca36c0000
delete,MemoryChunk,0x1b0e9f80000
delete,MemoryChunk,0x3f3a2340000
delete,MemoryChunk,0x39d36a80000
delete,MemoryChunk,0x37388640000
delete,MemoryChunk,0x28a86f80000
delete,MemoryChunk,0x1f706b80000
delete,MemoryChunk,0x78209c0000
delete,MemoryChunk,0x32381000000
delete,MemoryChunk,0x29c04540000
delete,MemoryChunk,0x674e180000
delete,MemoryChunk,0x110853c0000
delete,MemoryChunk,0x289f0e80000
delete,MemoryChunk,0x24054140000
delete,MemoryChunk,0x3c023540000
delete,MemoryChunk,0x2b745dc0000
delete,MemoryChunk,0x204c1c80000
delete,MemoryChunk,0x11660e80000
delete,MemoryChunk,0x577a800000
delete,MemoryChunk,0x20ff41c0000
delete,MemoryChunk,0x39aa34c0000
delete,MemoryChunk,0x56bc00000
delete,MemoryChunk,0x2105bc80000
delete,MemoryChunk,0x3814f900000
delete,MemoryChunk,0x1bf51b00000
delete,MemoryChunk,0x15a2e340000
delete,MemoryChunk,0x2fd6d540000
tick,0x7ff6cbec3f31,3631007,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a4e0,3647090,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c477d58,0x7ff64c47a1c8,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177c6,3663029,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3840,3679045,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf700bb,3695032,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbea07c2,3711039,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49e165,3727052,0,0x0,0,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c290cbb,3743061,0,0x0,0,0x7ff64c496624,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1f97de80000,262144
new,MemoryChunk,0x2b3023c0000,262144
tick,0x7ff6cc075036,3759069,0,0x0,1
tick,0x7ff64c4a1306,3775058,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xea72a00000,262144
new,MemoryChunk,0x3b56ab00000,262144
new,MemoryChunk,0x3ad43a00000,262144
new,MemoryChunk,0x2fc7e0c0000,262144
new,MemoryChunk,0x19998240000,262144
new,MemoryChunk,0xe543c40000,262144
new,MemoryChunk,0xdeeeec0000,262144
new,MemoryChunk,0x3f0db580000,262144
new,MemoryChunk,0x2acb9040000,262144
tick,0x7ff6cbc10bd8,3791088,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1904dec0000,262144
new,MemoryChunk,0x31422f00000,262144
new,MemoryChunk,0x2ce2d740000,262144
new,MemoryChunk,0x28afb480000,262144
new,MemoryChunk,0xb4110c0000,262144
new,MemoryChunk,0x37666180000,262144
new,MemoryChunk,0x1c59d740000,262144
new,MemoryChunk,0x2a86a580000,262144
new,MemoryChunk,0x1a18f5c0000,262144
new,MemoryChunk,0x1663c080000,262144
tick,0x7ff6cc0fb603,3807060,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177dd,3823026,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1561fb80000,262144
new,MemoryChunk,0x22f59d80000,262144
new,MemoryChunk,0x204c2fc0000,262144
new,MemoryChunk,0x3dcca40000,262144
new,MemoryChunk,0x229d6c40000,262144
new,MemoryChunk,0x106f4340000,262144
new,MemoryChunk,0x2a738e00000,262144
new,MemoryChunk,0x11e913c0000,262144
new,MemoryChunk,0x34bc1d80000,262144
new,MemoryChunk,0x14785280000,262144
new,MemoryChunk,0x23434980000,262144
tick,0x7ff66c244a8a,3839066,0,0x0,0,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x212e3ec0000,262144
new,MemoryChunk,0x147c4d80000,262144
new,MemoryChunk,0x1ad97ac0000,262144
new,MemoryChunk,0x2cb47ac0000,262144
new,MemoryChunk,0xe955e00000,262144
new,MemoryChunk,0xe43bfc0000,262144
new,MemoryChunk,0x2c873040000,262144
new,MemoryChunk,0xd1d0680000,262144
new,MemoryChunk,0x37ab6600000,262144
new,MemoryChunk,0x25edb840000,262144
tick,0x7ff66c299c5e,3855014,0,0x0,0,0x7ff64c49e82a,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c30b3fd,3870106,0,0x0,0,0x7ff64c49ea88,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3c6a0d00000,262144
new,MemoryChunk,0x31e74540000,262144
new,MemoryChunk,0x3b6cfc80000,262144
new,MemoryChunk,0x33752f40000,262144
new,MemoryChunk,0x2c44b140000,262144
new,MemoryChunk,0x36598880000,262144
new,MemoryChunk,0x1ee373c0000,262144
new,MemoryChunk,0x2d360a40000,262144
tick,0x7ff6cc072885,3885287,0,0x0,0,0x7ff6cbdb1c40,0x7ff64c4a069d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc070cfa,3901243,0,0x0,1
new,MemoryChunk,0x23da09c0000,262144
new,MemoryChunk,0x1a8d7dc0000,262144
new,MemoryChunk,0x19b61840000,262144
new,MemoryChunk,0x26ba2280000,262144
new,MemoryChunk,0x6b1680000,262144
new,MemoryChunk,0x1ba02780000,262144
new,MemoryChunk,0x19cb4000000,262144
new,MemoryChunk,0x1ce2ff00000,262144
new,MemoryChunk,0x58ddc40000,262144
new,MemoryChunk,0x271761c0000,262144
new,MemoryChunk,0x20fb3bc0000,262144
tick,0x7ff6cbeb0279,3917313,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2671100000,262144
new,MemoryChunk,0x1c57b880000,262144
new,MemoryChunk,0x135b2e40000,262144
new,MemoryChunk,0x14f871c0000,262144
new,MemoryChunk,0x3a8dbbc0000,262144
new,MemoryChunk,0x10652fc0000,262144
new,MemoryChunk,0x2e737c00000,262144
new,MemoryChunk,0x8dd0d80000,262144
new,MemoryChunk,0x1fd52380000,262144
tick,0x7ff6cc0c51a3,3933288,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2d828dc0000,262144
new,MemoryChunk,0x70df80000,262144
new,MemoryChunk,0x4891b00000,262144
new,MemoryChunk,0xc88c000000,262144
new,MemoryChunk,0x3da7fa80000,262144
new,MemoryChunk,0x2b186d40000,262144
tick,0x7ff6cc06d138,3948291,0,0x0,1
new,MemoryChunk,0x3c037cc0000,262144
new,MemoryChunk,0x3cd53380000,262144
new,MemoryChunk,0xe58240000,262144
tick,0x0,3964573,0,0x0,5
new,MemoryChunk,0x4ab07c0000,262144
new,MemoryChunk,0xbcfea40000,262144
new,MemoryChunk,0x176659c0000,262144
new,MemoryChunk,0x7bbed80000,262144
new,MemoryChunk,0x1a664000000,262144
new,MemoryChunk,0x185f600000,262144
new,MemoryChunk,0x2a9e0240000,262144
new,MemoryChunk,0xf9a08c0000,262144
delete,MemoryChunk,0x1a5289c0000
delete,MemoryChunk,0x1dbb7300000
delete,MemoryChunk,0x117e6e40000
delete,MemoryChunk,0x2bd93480000
delete,MemoryChunk,0xabc1a40000
delete,MemoryChunk,0x2b3023c0000
delete,MemoryChunk,0x3b56ab00000
delete,MemoryChunk,0x365bc7c0000
delete,MemoryChunk,0xea72a00000
delete,MemoryChunk,0x19998240000
delete,MemoryChunk,0x2fc7e0c0000
delete,MemoryChunk,0xdeeeec0000
delete,MemoryChunk,0x3ad43a00000
delete,MemoryChunk,0x2acb9040000
delete,MemoryChunk,0x1904dec0000
delete,MemoryChunk,0x31422f00000
delete,MemoryChunk,0xb4110c0000
delete,MemoryChunk,0x2a86a580000
delete,MemoryChunk,0x28afb480000
delete,MemoryChunk,0x37666180000
delete,MemoryChunk,0x1c59d740000
delete,MemoryChunk,0x204c2fc0000
delete,MemoryChunk,0x11e913c0000
delete,MemoryChunk,0x1561fb80000
delete,MemoryChunk,0x106f4340000
delete,MemoryChunk,0x3dcca40000
delete,MemoryChunk,0x229d6c40000
delete,MemoryChunk,0x2a738e00000
delete,MemoryChunk,0x34bc1d80000
delete,MemoryChunk,0x22f59d80000
delete,MemoryChunk,0x1a18f5c0000
delete,MemoryChunk,0x23434980000
delete,MemoryChunk,0x14785280000
delete,MemoryChunk,0x212e3ec0000
delete,MemoryChunk,0xe43bfc0000
delete,MemoryChunk,0xe543c40000
delete,MemoryChunk,0x147c4d80000
delete,MemoryChunk,0xe955e00000
delete,MemoryChunk,0x2c873040000
delete,MemoryChunk,0x2ce2d740000
delete,MemoryChunk,0x37ab6600000
delete,MemoryChunk,0x2cb47ac0000
delete,MemoryChunk,0x25edb840000
delete,MemoryChunk,0x31e74540000
delete,MemoryChunk,0x1663c080000
delete,MemoryChunk,0x33752f40000
delete,MemoryChunk,0x1ad97ac0000
delete,MemoryChunk,0x3b6cfc80000
delete,MemoryChunk,0x2c44b140000
delete,MemoryChunk,0x2d360a40000
delete,MemoryChunk,0x3c6a0d00000
delete,MemoryChunk,0x26ba2280000
delete,MemoryChunk,0x1ba02780000
delete,MemoryChunk,0x19cb4000000
delete,MemoryChunk,0xd1d0680000
delete,MemoryChunk,0x23da09c0000
delete,MemoryChunk,0x20fb3bc0000
delete,MemoryChunk,0x1a8d7dc0000
delete,MemoryChunk,0x6b1680000
delete,MemoryChunk,0x1ce2ff00000
delete,MemoryChunk,0x2671100000
delete,MemoryChunk,0x19b61840000
delete,MemoryChunk,0x135b2e40000
delete,MemoryChunk,0x1fd52380000
delete,MemoryChunk,0x3a8dbbc0000
delete,MemoryChunk,0x1c57b880000
delete,MemoryChunk,0x14f871c0000
delete,MemoryChunk,0x2e737c00000
delete,MemoryChunk,0x8dd0d80000
delete,MemoryChunk,0xc88c000000
delete,MemoryChunk,0x2d828dc0000
delete,MemoryChunk,0x3da7fa80000
delete,MemoryChunk,0x70df80000
delete,MemoryChunk,0x10652fc0000
delete,MemoryChunk,0x4891b00000
delete,MemoryChunk,0x3c037cc0000
delete,MemoryChunk,0xe58240000
delete,MemoryChunk,0x58ddc40000
delete,MemoryChunk,0x176659c0000
delete,MemoryChunk,0x1f97de80000
delete,MemoryChunk,0x7bbed80000
delete,MemoryChunk,0x185f600000
delete,MemoryChunk,0x3f0db580000
delete,MemoryChunk,0x4ab07c0000
delete,MemoryChunk,0x2a9e0240000
delete,MemoryChunk,0x36598880000
delete,MemoryChunk,0xbcfea40000
delete,MemoryChunk,0x1a664000000
delete,MemoryChunk,0x1ee373c0000
delete,MemoryChunk,0xf9a08c0000
tick,0x7ff6cc0eb2f7,3980298,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c292d6d,3995877,0,0x0,0,0x7ff64c496624,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c290dee,4011871,0,0x0,0,0x7ff64c496552,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbba93af,4027921,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4906d1,4043949,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdaedf0,4059879,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebd182,4075953,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49638b,4091878,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc07a102,4107887,0,0x0,1
new,MemoryChunk,0x45043c0000,262144
new,MemoryChunk,0x1de3fb40000,262144
new,MemoryChunk,0x23d65cc0000,262144
new,MemoryChunk,0x21a45400000,262144
new,MemoryChunk,0x211d8000000,262144
new,MemoryChunk,0x35b7dfc0000,262144
new,MemoryChunk,0x1788ac0000,262144
tick,0x7ff64c49e687,4123871,0,0x0,0,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x238fe080000,262144
new,MemoryChunk,0x214d8480000,262144
new,MemoryChunk,0x1c91c140000,262144
new,MemoryChunk,0xffdad80000,262144
new,MemoryChunk,0xcc180c0000,262144
new,MemoryChunk,0x208fc980000,262144
new,MemoryChunk,0x33ddd240000,262144
new,MemoryChunk,0x12110700000,262144
tick,0x7ff66c242252,4139919,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x25bd2940000,262144
new,MemoryChunk,0xdba2bc0000,262144
new,MemoryChunk,0x14e24780000,262144
new,MemoryChunk,0xd90b000000,262144
new,MemoryChunk,0x3cd0c500000,262144
tick,0x7ff6cc06c1d1,4155877,0,0x0,1
new,MemoryChunk,0x3af65300000,262144
new,MemoryChunk,0x1650ecc0000,262144
new,MemoryChunk,0x3665bc80000,262144
new,MemoryChunk,0x2e775800000,262144
tick,0x7ff6cbec297b,4171922,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3fd65980000,262144
new,MemoryChunk,0x1d2d8780000,262144
new,MemoryChunk,0xc09a880000,262144
new,MemoryChunk,0x38ff6a00000,262144
new,MemoryChunk,0x18d751c0000,262144
new,MemoryChunk,0x26051d00000,262144
new,MemoryChunk,0x325fe80000,262144
new,MemoryChunk,0x2e30d480000,262144
new,MemoryChunk,0x16183f80000,262144
new,MemoryChunk,0xf370c80000,262144
tick,0x7ff6cbba93b3,4187877,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xb36e100000,262144
new,MemoryChunk,0x21465380000,262144
new,MemoryChunk,0x35f66e40000,262144
new,MemoryChunk,0x2002a240000,262144
new,MemoryChunk,0x26a1f080000,262144
new,MemoryChunk,0x2bf04040000,262144
tick,0x7ff863b8e9ea,4204186,0,0x0,1
new,MemoryChunk,0x3c820ec0000,262144
new,MemoryChunk,0xb60e9c0000,262144
new,MemoryChunk,0x13219c0000,262144
new,MemoryChunk,0x199541c0000,262144
tick,0x7ff6cc14f6ee,4219904,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2840a840000,262144
new,MemoryChunk,0x18e1de80000,262144
new,MemoryChunk,0x25aa86c0000,262144
new,MemoryChunk,0x271db800000,262144
new,MemoryChunk,0x5a5b6c0000,262144
new,MemoryChunk,0x236f700000,262144
new,MemoryChunk,0x2610a300000,262144
new,MemoryChunk,0x3a1e1c00000,262144
new,MemoryChunk,0x11eb15c0000,262144
tick,0x7ff66c2dbf85,4235903,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35190200000,262144
new,MemoryChunk,0x231e3d00000,262144
new,MemoryChunk,0x2ac32f40000,262144
new,MemoryChunk,0x31b2bf80000,262144
new,MemoryChunk,0x20893200000,262144
new,MemoryChunk,0x2cbd39c0000,262144
new,MemoryChunk,0xd06f800000,262144
new,MemoryChunk,0x391fec80000,262144
new,MemoryChunk,0x3730d640000,262144
tick,0x7ff64c49df43,4251895,0,0x0,0,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a58a9,4267930,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,4269363,0x7ff64c48cd40,208,get value file:///C:/coding/soodocode/build/statements.js:252:26,0x13a35fb94a8,*
code-source-info,0x7ff64c48cd40,113,12516,12536,C0O12516C35O12521C52O12534C78O12516C140O12521,,
new,MemoryChunk,0x367ddf40000,262144
new,MemoryChunk,0xcb00740000,262144
new,MemoryChunk,0x4ee8dc0000,262144
new,MemoryChunk,0x435c200000,262144
new,MemoryChunk,0x19038d40000,262144
new,MemoryChunk,0x2950a180000,262144
new,MemoryChunk,0x246747c0000,262144
new,MemoryChunk,0x764a4c0000,262144
new,MemoryChunk,0x30d5bf80000,262144
new,MemoryChunk,0x2b9a1000000,262144
tick,0x7ff6cc14fe88,4282897,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1780a00000,262144
new,MemoryChunk,0x1f2110c0000,262144
new,MemoryChunk,0x10dbf740000,262144
new,MemoryChunk,0x33ab1800000,262144
new,MemoryChunk,0x320b3d00000,262144
new,MemoryChunk,0x332b1c80000,262144
new,MemoryChunk,0x2f84cc40000,262144
new,MemoryChunk,0x1510dd80000,262144
new,MemoryChunk,0x60ce240000,262144
tick,0x7ff6cc0fa445,4298880,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0bdeb8,4314913,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x36035680000,262144
new,MemoryChunk,0xb9c7bc0000,262144
new,MemoryChunk,0x13f5a80000,262144
new,MemoryChunk,0x200fb600000,262144
new,MemoryChunk,0x12fac740000,262144
new,MemoryChunk,0x700bf80000,262144
new,MemoryChunk,0x2ea7fb80000,262144
new,MemoryChunk,0x9d83440000,262144
new,MemoryChunk,0x11e232c0000,262144
delete,MemoryChunk,0x2b186d40000
delete,MemoryChunk,0x3cd53380000
delete,MemoryChunk,0x271761c0000
delete,MemoryChunk,0x1de3fb40000
delete,MemoryChunk,0x1788ac0000
delete,MemoryChunk,0x45043c0000
delete,MemoryChunk,0x21a45400000
delete,MemoryChunk,0x211d8000000
delete,MemoryChunk,0x238fe080000
delete,MemoryChunk,0x12110700000
delete,MemoryChunk,0x1c91c140000
delete,MemoryChunk,0x23d65cc0000
delete,MemoryChunk,0xffdad80000
delete,MemoryChunk,0x33ddd240000
delete,MemoryChunk,0x214d8480000
delete,MemoryChunk,0x208fc980000
delete,MemoryChunk,0x3665bc80000
delete,MemoryChunk,0xd90b000000
delete,MemoryChunk,0x3af65300000
delete,MemoryChunk,0x1650ecc0000
delete,MemoryChunk,0x25bd2940000
delete,MemoryChunk,0x14e24780000
delete,MemoryChunk,0x3cd0c500000
delete,MemoryChunk,0xc09a880000
delete,MemoryChunk,0x18d751c0000
delete,MemoryChunk,0x325fe80000
delete,MemoryChunk,0x38ff6a00000
delete,MemoryChunk,0x26051d00000
delete,MemoryChunk,0x2e30d480000
delete,MemoryChunk,0xf370c80000
delete,MemoryChunk,0x2e775800000
delete,MemoryChunk,0x3fd65980000
delete,MemoryChunk,0x16183f80000
delete,MemoryChunk,0x21465380000
delete,MemoryChunk,0x3c820ec0000
delete,MemoryChunk,0xb36e100000
delete,MemoryChunk,0x2002a240000
delete,MemoryChunk,0x2bf04040000
delete,MemoryChunk,0xb60e9c0000
delete,MemoryChunk,0x26a1f080000
delete,MemoryChunk,0x13219c0000
delete,MemoryChunk,0x2610a300000
delete,MemoryChunk,0x18e1de80000
delete,MemoryChunk,0x3a1e1c00000
delete,MemoryChunk,0x25aa86c0000
delete,MemoryChunk,0x236f700000
delete,MemoryChunk,0x199541c0000
delete,MemoryChunk,0x231e3d00000
delete,MemoryChunk,0x20893200000
delete,MemoryChunk,0x2cbd39c0000
delete,MemoryChunk,0x271db800000
delete,MemoryChunk,0x2840a840000
delete,MemoryChunk,0x31b2bf80000
delete,MemoryChunk,0x11eb15c0000
delete,MemoryChunk,0x2ac32f40000
delete,MemoryChunk,0x391fec80000
delete,MemoryChunk,0x35b7dfc0000
delete,MemoryChunk,0x35190200000
delete,MemoryChunk,0xd06f800000
delete,MemoryChunk,0x367ddf40000
delete,MemoryChunk,0x4ee8dc0000
delete,MemoryChunk,0xcb00740000
delete,MemoryChunk,0x2950a180000
delete,MemoryChunk,0x246747c0000
delete,MemoryChunk,0x30d5bf80000
delete,MemoryChunk,0x435c200000
delete,MemoryChunk,0x10dbf740000
delete,MemoryChunk,0x320b3d00000
delete,MemoryChunk,0x2f84cc40000
delete,MemoryChunk,0x1f2110c0000
delete,MemoryChunk,0x332b1c80000
delete,MemoryChunk,0x1510dd80000
delete,MemoryChunk,0x2b9a1000000
delete,MemoryChunk,0x200fb600000
delete,MemoryChunk,0x1780a00000
delete,MemoryChunk,0x13f5a80000
delete,MemoryChunk,0x2ea7fb80000
delete,MemoryChunk,0x764a4c0000
delete,MemoryChunk,0xb9c7bc0000
delete,MemoryChunk,0x700bf80000
delete,MemoryChunk,0x9d83440000
delete,MemoryChunk,0x36035680000
delete,MemoryChunk,0x11e232c0000
delete,MemoryChunk,0x12fac740000
tick,0x7ff6cbec6b34,4330892,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda9240,4346907,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,4357142,0x7ff64c499c40,6132,runBlock file:///C:/coding/soodocode/build/runtime.js:777:21,0xc2df92e970,*
code-source-info,0x7ff64c499cx2c01bf4a978S0x2c01bf4a290S0xc2df90ff10S0x2c01bf63718
tick,0x7ff6cbf700c2,4362925,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9d8,4378960,0,0x0,1
tick,0x7ff6cbebdce8,4394920,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c495d87,4410892,0,0x0,0,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc071daa,4426947,0,0x0,1
tick,0x7ff66c2dc389,4442900,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb81bd,4457906,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,4465129,0x7ff64c49b680,652,resolveVariableType file:///C:/coding/soodocode/build/runtime.js:568:32,0xc2df92e438,*
code-source-info,0x7ff64c49b680,111,37001,37273,C0O37001C39O37046C66O37035C178O37087C205O37076C300O37138C326O37192C331O37001C377O37035C456O37076C532O37087C577O37046,,
tick,0x7ff64c4979a0,4473918,0,0x0,0,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c290076,4489955,0,0x0,0,0x7ff64c496552,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2bea4b80000,262144
new,MemoryChunk,0x15a63ac0000,262144
new,MemoryChunk,0x3fc5e40000,262144
new,MemoryChunk,0x37ad3980000,262144
tick,0x7ff6cbec69e6,4506044,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb9abb,4520921,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1ac95d80000,262144
new,MemoryChunk,0x3d12e700000,262144
new,MemoryChunk,0x363a7c40000,262144
new,MemoryChunk,0x3d6256c0000,262144
new,MemoryChunk,0x2bcf24c0000,262144
new,MemoryChunk,0x1b951a00000,262144
new,MemoryChunk,0x4d081c0000,262144
new,MemoryChunk,0xbf7f400000,262144
tick,0x7ff6cbebbb99,4536941,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xc56440000,262144
new,MemoryChunk,0x170bd1c0000,262144
new,MemoryChunk,0x1aba6000000,262144
new,MemoryChunk,0x315ca440000,262144
new,MemoryChunk,0x2908a880000,262144
new,MemoryChunk,0x27d82b00000,262144
tick,0x7ff66c2dc0e6,4552893,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf8b,4568936,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2f684dc0000,262144
new,MemoryChunk,0x6a22280000,262144
new,MemoryChunk,0x25da8d80000,262144
new,MemoryChunk,0x2fc54480000,262144
new,MemoryChunk,0x1f212040000,262144
new,MemoryChunk,0x34bce0c0000,262144
new,MemoryChunk,0x3df78080000,262144
new,MemoryChunk,0x190e5400000,262144
new,MemoryChunk,0x3edd5700000,262144
new,MemoryChunk,0xca7f500000,262144
tick,0x7ff66c2dc0b2,4584927,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3cc86fc0000,262144
new,MemoryChunk,0x19ec2840000,262144
tick,0x7ff6cc06a9a3,4600913,0,0x0,1
new,MemoryChunk,0x3da8ac00000,262144
new,MemoryChunk,0x2b15840000,262144
new,MemoryChunk,0x3e45be80000,262144
new,MemoryChunk,0x3c2fe040000,262144
new,MemoryChunk,0x3e105d40000,262144
tick,0x7ff6cbebba30,4616908,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3a578e40000,262144
new,MemoryChunk,0x19ba9640000,262144
new,MemoryChunk,0x305c9200000,262144
new,MemoryChunk,0x343f2fc0000,262144
new,MemoryChunk,0x37feff40000,262144
new,MemoryChunk,0x2c28f2c0000,262144
new,MemoryChunk,0x103d8b40000,262144
new,MemoryChunk,0x39206880000,262144
tick,0x7ff64c49df4d,4632897,0,0x0,0,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8b47,4648961,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3614ecc0000,262144
new,MemoryChunk,0x245aef40000,262144
new,MemoryChunk,0x1d8b240000,262144
new,MemoryChunk,0x1fdefd40000,262144
new,MemoryChunk,0x304a2300000,262144
new,MemoryChunk,0x9a69100000,262144
tick,0x7ff6cbe6baf0,4664911,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xeb18080000,262144
new,MemoryChunk,0x586d00000,262144
new,MemoryChunk,0x2a7b1f80000,262144
new,MemoryChunk,0x5786b00000,262144
new,MemoryChunk,0x16a347c0000,262144
tick,0x7ff64c49b6cc,4680933,0,0x0,0,0x7ff64c4a10f8,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2282d280000,262144
tick,0x7ff6cc2d8e8a,4696934,0,0x0,0,0x7ff64c499d09,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x24c613c0000,262144
new,MemoryChunk,0x14918700000,262144
new,MemoryChunk,0x2e1b3440000,262144
new,MemoryChunk,0x49d09c0000,262144
new,MemoryChunk,0x25dac5c0000,262144
new,MemoryChunk,0x6b87fc0000,262144
new,MemoryChunk,0x27531780000,262144
new,MemoryChunk,0x1a333440000,262144
new,MemoryChunk,0x9fee1c0000,262144
tick,0x7ff66c290e70,4712907,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c28fffb,4728890,0,0x0,0,0x7ff64c496733,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x111e9b00000,262144
new,MemoryChunk,0x33ee3680000,262144
new,MemoryChunk,0x25bcd000000,262144
new,MemoryChunk,0xf11b040000,262144
new,MemoryChunk,0x157a6fc0000,262144
new,MemoryChunk,0x3c72fa80000,262144
new,MemoryChunk,0x262e27c0000,262144
tick,0x7ff66c241c40,4744969,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5e64380000,262144
new,MemoryChunk,0x161d9640000,262144
new,MemoryChunk,0x2fa518c0000,262144
new,MemoryChunk,0x32a484c0000,262144
new,MemoryChunk,0x1ba90700000,262144
new,MemoryChunk,0x30a4bf00000,262144
new,MemoryChunk,0x236b4d00000,262144
tick,0x7ff6cc2a89ea,4760930,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ffc9d,4776956,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5cae180000,262144
new,MemoryChunk,0x3ac48900000,262144
new,MemoryChunk,0x21b96280000,262144
new,MemoryChunk,0x22b7c880000,262144
new,MemoryChunk,0x1df7a000000,262144
new,MemoryChunk,0x2a404c00000,262144
delete,MemoryChunk,0xdba2bc0000
delete,MemoryChunk,0xcc180c0000
delete,MemoryChunk,0x1d2d8780000
delete,MemoryChunk,0x35f66e40000
delete,MemoryChunk,0x33ab1800000
delete,MemoryChunk,0x19038d40000
delete,MemoryChunk,0x37ad3980000
delete,MemoryChunk,0x2bea4b80000
delete,MemoryChunk,0x15a63ac0000
delete,MemoryChunk,0x363a7c40000
delete,MemoryChunk,0x1ac95d80000
delete,MemoryChunk,0xbf7f400000
delete,MemoryChunk,0x3fc5e40000
delete,MemoryChunk,0x2bcf24c0000
delete,MemoryChunk,0x1b951a00000
delete,MemoryChunk,0x3d12e700000
delete,MemoryChunk,0x27d82b00000
delete,MemoryChunk,0x170bd1c0000
delete,MemoryChunk,0x2f684dc0000
delete,MemoryChunk,0x6a22280000
delete,MemoryChunk,0xc56440000
delete,MemoryChunk,0x2fc54480000
delete,MemoryChunk,0x1f212040000
delete,MemoryChunk,0xca7f500000
delete,MemoryChunk,0x25da8d80000
delete,MemoryChunk,0x190e5400000
delete,MemoryChunk,0x3da8ac00000
delete,MemoryChunk,0x3cc86fc0000
delete,MemoryChunk,0x3edd5700000
delete,MemoryChunk,0x315ca440000
delete,MemoryChunk,0x4d081c0000
delete,MemoryChunk,0x60ce240000
delete,MemoryChunk,0x3c2fe040000
delete,MemoryChunk,0x3d6256c0000
delete,MemoryChunk,0x3e105d40000
delete,MemoryChunk,0x19ec2840000
delete,MemoryChunk,0x305c9200000
delete,MemoryChunk,0x19ba9640000
delete,MemoryChunk,0x343f2fc0000
delete,MemoryChunk,0x37feff40000
delete,MemoryChunk,0x103d8b40000
delete,MemoryChunk,0x3a578e40000
delete,MemoryChunk,0x2c28f2c0000
delete,MemoryChunk,0x2b15840000
delete,MemoryChunk,0x39206880000
delete,MemoryChunk,0x2908a880000
delete,MemoryChunk,0x304a2300000
delete,MemoryChunk,0x1fdefd40000
delete,MemoryChunk,0x3614ecc0000
delete,MemoryChunk,0x1d8b240000
delete,MemoryChunk,0x9a69100000
delete,MemoryChunk,0x586d00000
delete,MemoryChunk,0x5786b00000
delete,MemoryChunk,0x2282d280000
delete,MemoryChunk,0x24c613c0000
delete,MemoryChunk,0x2e1b3440000
delete,MemoryChunk,0x25dac5c0000
delete,MemoryChunk,0xeb18080000
delete,MemoryChunk,0x49d09c0000
delete,MemoryChunk,0x2a7b1f80000
delete,MemoryChunk,0x16a347c0000
delete,MemoryChunk,0x9fee1c0000
delete,MemoryChunk,0x1a333440000
delete,MemoryChunk,0xf11b040000
delete,MemoryChunk,0x6b87fc0000
delete,MemoryChunk,0x25bcd000000
delete,MemoryChunk,0x27531780000
delete,MemoryChunk,0x3c72fa80000
delete,MemoryChunk,0x111e9b00000
delete,MemoryChunk,0x157a6fc0000
delete,MemoryChunk,0x5e64380000
delete,MemoryChunk,0x262e27c0000
delete,MemoryChunk,0x161d9640000
delete,MemoryChunk,0x236b4d00000
delete,MemoryChunk,0x2fa518c0000
delete,MemoryChunk,0x3ac48900000
delete,MemoryChunk,0x32a484c0000
delete,MemoryChunk,0x5cae180000
delete,MemoryChunk,0x33ee3680000
delete,MemoryChunk,0x2a404c00000
delete,MemoryChunk,0x21b96280000
delete,MemoryChunk,0x1df7a000000
tick,0x7ff66c28bb93,4793047,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49881f,0x7ff64c49a401,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c31ea93,4808961,0,0x0,0,0x7ff64c47a006,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497b2e,4824922,0,0x0,0,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0c51d3,4839964,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf85,4855958,0,0x0,0,0x7ff64c497a46,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c290e27,4871976,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49a047,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d1f0,4887985,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cca8a667,4904013,0,0x0,1
tick,0x7ff6cc0eb139,4919953,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb59,4935955,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c859,4951970,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497889,4967960,0,0x0,0,0x7ff64c49a401,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c477d58,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3e9cd200000,806912
code-creation,JS,13,4982611,0x7ff64c49b980,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c49b980,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
tick,0x7ff6cc22305e,4983945,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49ba17,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc687779,4999947,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49ba17,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf39d56,5016002,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49ba17,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x20659680000,262144
new,MemoryChunk,0x3f5dac00000,262144
tick,0x7ff6cc06cb5d,5031949,0,0x0,1
tick,0x7ff66c32094a,5047998,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xdbe5000000,262144
new,MemoryChunk,0x3760e7c0000,262144
new,MemoryChunk,0x11e5f700000,262144
new,MemoryChunk,0x10e66180000,262144
new,MemoryChunk,0x30ce4380000,262144
tick,0x7ff6cbec38c0,5063989,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x21328e00000,262144
new,MemoryChunk,0x220d1100000,262144
new,MemoryChunk,0x1cae8100000,262144
new,MemoryChunk,0x8e85000000,262144
new,MemoryChunk,0x11ee3c00000,262144
new,MemoryChunk,0x2082f600000,262144
new,MemoryChunk,0x35c0fc40000,262144
new,MemoryChunk,0x23f606c0000,262144
new,MemoryChunk,0x23ae3740000,262144
new,MemoryChunk,0x3033c180000,262144
new,MemoryChunk,0x1fc6edc0000,262144
new,MemoryChunk,0x34976900000,262144
tick,0x7ff863c10a14,5079954,0,0x0,1
tick,0x7ff6cbebce72,5095984,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1ba02a80000,262144
new,MemoryChunk,0x1a854240000,262144
new,MemoryChunk,0x33572380000,262144
new,MemoryChunk,0x37580140000,262144
new,MemoryChunk,0xd6f8180000,262144
new,MemoryChunk,0x1357da00000,262144
new,MemoryChunk,0x13dbd300000,262144
new,MemoryChunk,0x3d769680000,262144
new,MemoryChunk,0x23fbe680000,262144
tick,0x7ff6cbe94c4d,5111962,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b7cbfc0000,262144
new,MemoryChunk,0x3459cf40000,262144
new,MemoryChunk,0x5a01fc0000,262144
new,MemoryChunk,0x30a7a640000,262144
new,MemoryChunk,0x2ae9bd40000,262144
new,MemoryChunk,0x22948d40000,262144
new,MemoryChunk,0x2d685200000,262144
new,MemoryChunk,0x1a65c640000,262144
new,MemoryChunk,0x174f0880000,262144
new,MemoryChunk,0x2bc0d2c0000,262144
new,MemoryChunk,0x29c34740000,262144
tick,0x7ff66c2dbf85,5127935,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c27be49,5144005,0,0x0,0,0x7ff64c495b13,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xe9991c0000,262144
new,MemoryChunk,0x2cabe680000,262144
new,MemoryChunk,0x46b52c0000,262144
new,MemoryChunk,0x26cc680000,262144
new,MemoryChunk,0x4008d80000,262144
new,MemoryChunk,0x1a0a1640000,262144
new,MemoryChunk,0xc8a6ac0000,262144
new,MemoryChunk,0x394727c0000,262144
new,MemoryChunk,0x32b2e00000,262144
tick,0x7ff6cbda8d7d,5159980,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x264ee940000,262144
new,MemoryChunk,0x684d740000,262144
new,MemoryChunk,0x144e8c00000,262144
new,MemoryChunk,0x69681c0000,262144
new,MemoryChunk,0xcade5c0000,262144
new,MemoryChunk,0x32605480000,262144
new,MemoryChunk,0x35caf580000,262144
new,MemoryChunk,0x2636c680000,262144
new,MemoryChunk,0x1c37a700000,262144
new,MemoryChunk,0x33e9c140000,262144
new,MemoryChunk,0x6258180000,262144
tick,0x7ff6cbf1779d,5175933,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c3d6,5191920,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3e558140000,262144
new,MemoryChunk,0x34f36580000,262144
new,MemoryChunk,0x38582a80000,262144
new,MemoryChunk,0x339b4ec0000,262144
new,MemoryChunk,0x36698d40000,262144
new,MemoryChunk,0x37faaf00000,262144
new,MemoryChunk,0x2f634f80000,262144
new,MemoryChunk,0x2287af40000,262144
new,MemoryChunk,0x15ab2fc0000,262144
new,MemoryChunk,0x23cb5bc0000,262144
tick,0x7ff66c242244,5208006,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2ee4b4c0000,262144
new,MemoryChunk,0x163a5d40000,262144
new,MemoryChunk,0x2c69d980000,262144
new,MemoryChunk,0x1b786ac0000,262144
new,MemoryChunk,0x39ecaa40000,262144
new,MemoryChunk,0x1e28ecc0000,262144
new,MemoryChunk,0x35091e00000,262144
new,MemoryChunk,0x14d00e80000,262144
new,MemoryChunk,0x13b00440000,262144
tick,0x7ff6cc0726e7,5223983,0,0x0,1
delete,MemoryChunk,0x198a7b40000
delete,MemoryChunk,0x245aef40000
delete,MemoryChunk,0x1ba90700000
delete,MemoryChunk,0x732f940000
delete,MemoryChunk,0xdbe5000000
delete,MemoryChunk,0x3760e7c0000
delete,MemoryChunk,0x11e5f700000
delete,MemoryChunk,0x10e66180000
delete,MemoryChunk,0x14918700000
delete,MemoryChunk,0x21328e00000
delete,MemoryChunk,0x1cae8100000
delete,MemoryChunk,0x2082f600000
delete,MemoryChunk,0x11ee3c00000
delete,MemoryChunk,0x23f606c0000
delete,MemoryChunk,0x34976900000
delete,MemoryChunk,0x8e85000000
delete,MemoryChunk,0x35c0fc40000
delete,MemoryChunk,0x3033c180000
delete,MemoryChunk,0x23ae3740000
delete,MemoryChunk,0x1fc6edc0000
delete,MemoryChunk,0x37580140000
delete,MemoryChunk,0x1ba02a80000
delete,MemoryChunk,0xd6f8180000
delete,MemoryChunk,0x1357da00000
delete,MemoryChunk,0x33572380000
delete,MemoryChunk,0x3d769680000
delete,MemoryChunk,0x1a854240000
delete,MemoryChunk,0x1b7cbfc0000
delete,MemoryChunk,0x5a01fc0000
delete,MemoryChunk,0x22948d40000
delete,MemoryChunk,0x23fbe680000
delete,MemoryChunk,0x174f0880000
delete,MemoryChunk,0x2ae9bd40000
delete,MemoryChunk,0x2d685200000
delete,MemoryChunk,0x30a7a640000
delete,MemoryChunk,0x3459cf40000
delete,MemoryChunk,0x30ce4380000
delete,MemoryChunk,0x46b52c0000
delete,MemoryChunk,0x29c34740000
delete,MemoryChunk,0xe9991c0000
delete,MemoryChunk,0x1a0a1640000
delete,MemoryChunk,0x2cabe680000
delete,MemoryChunk,0x26cc680000
delete,MemoryChunk,0x1a65c640000
delete,MemoryChunk,0x4008d80000
delete,MemoryChunk,0x264ee940000
delete,MemoryChunk,0x69681c0000
delete,MemoryChunk,0x32b2e00000
delete,MemoryChunk,0x684d740000
delete,MemoryChunk,0x13dbd300000
delete,MemoryChunk,0x32605480000
delete,MemoryChunk,0x220d1100000
delete,MemoryChunk,0x2636c680000
delete,MemoryChunk,0x144e8c00000
delete,MemoryChunk,0x6258180000
delete,MemoryChunk,0xcade5c0000
delete,MemoryChunk,0x2bc0d2c0000
delete,MemoryChunk,0x3e558140000
delete,MemoryChunk,0x36698d40000
delete,MemoryChunk,0x339b4ec0000
delete,MemoryChunk,0x37faaf00000
delete,MemoryChunk,0x35caf580000
delete,MemoryChunk,0x38582a80000
delete,MemoryChunk,0x2287af40000
delete,MemoryChunk,0x33e9c140000
delete,MemoryChunk,0x39ecaa40000
delete,MemoryChunk,0xc8a6ac0000
delete,MemoryChunk,0x1e28ecc0000
delete,MemoryChunk,0x13b00440000
delete,MemoryChunk,0x394727c0000
delete,MemoryChunk,0x2c69d980000
delete,MemoryChunk,0x1c37a700000
delete,MemoryChunk,0x35091e00000
delete,MemoryChunk,0x34f36580000
delete,MemoryChunk,0x1b786ac0000
delete,MemoryChunk,0x14d00e80000
delete,MemoryChunk,0x2f634f80000
delete,MemoryChunk,0x2ee4b4c0000
delete,MemoryChunk,0x15ab2fc0000
delete,MemoryChunk,0x163a5d40000
tick,0x7ff6cbec2a18,5240010,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbfb1,5256043,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9552a,5272010,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241b40,5288014,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc14f6ee,5304014,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb4d95,5320094,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0e8a12,5335995,0,0x0,1
tick,0x7ff64c49df4d,5351226,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0c0d,5366300,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x23234c0000,262144
new,MemoryChunk,0xa9112c0000,262144
tick,0x7ff6cbebb75c,5382304,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x106d2200000,262144
new,MemoryChunk,0x1c60dc0000,262144
new,MemoryChunk,0xf7940c0000,262144
new,MemoryChunk,0x2c516a80000,262144
new,MemoryChunk,0x3a6d6300000,262144
new,MemoryChunk,0x3804e500000,262144
new,MemoryChunk,0xff2bfc0000,262144
new,MemoryChunk,0x3374c980000,262144
new,MemoryChunk,0x3cff5b80000,262144
new,MemoryChunk,0x26d64b00000,262144
tick,0x7ff64c497852,5398289,0,0x0,0,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc14fd1f,5414299,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x39062740000,262144
new,MemoryChunk,0x2ee2cdc0000,262144
new,MemoryChunk,0x384b4c00000,262144
new,MemoryChunk,0x5187c40000,262144
new,MemoryChunk,0x2fb91f00000,262144
new,MemoryChunk,0x15b78840000,262144
new,MemoryChunk,0xfe47d80000,262144
new,MemoryChunk,0x945ab80000,262144
new,MemoryChunk,0x2582a380000,262144
new,MemoryChunk,0x1a6fbc0000,262144
tick,0x7ff6cbf712a3,5430284,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x987a600000,262144
new,MemoryChunk,0x39db4440000,262144
new,MemoryChunk,0x1a46be40000,262144
new,MemoryChunk,0x3619ad80000,262144
new,MemoryChunk,0x2e0ea80000,262144
new,MemoryChunk,0x8d4b800000,262144
new,MemoryChunk,0x2962a640000,262144
new,MemoryChunk,0x2bb228c0000,262144
new,MemoryChunk,0x15c08b40000,262144
tick,0x7ff6cc14f6d9,5446292,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0c1,5462321,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x383f5780000,262144
new,MemoryChunk,0x1a0f7e80000,262144
new,MemoryChunk,0x111f3740000,262144
new,MemoryChunk,0x3c993540000,262144
new,MemoryChunk,0x36e4b900000,262144
new,MemoryChunk,0xe1b3a00000,262144
new,MemoryChunk,0x31b3b700000,262144
new,MemoryChunk,0xdbea9c0000,262144
new,MemoryChunk,0x328e2700000,262144
new,MemoryChunk,0x3f9e8840000,262144
new,MemoryChunk,0xc587180000,262144
tick,0x7ff6cbebb74c,5478330,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x8998800000,262144
new,MemoryChunk,0xf6c60c0000,262144
new,MemoryChunk,0x20561d00000,262144
new,MemoryChunk,0x34c58f40000,262144
tick,0x7ff6cc06d790,5494315,0,0x0,1
new,MemoryChunk,0x11d5f040000,262144
new,MemoryChunk,0x2f322340000,262144
new,MemoryChunk,0x37619ec0000,262144
new,MemoryChunk,0x21af32c0000,262144
new,MemoryChunk,0x30d32200000,262144
tick,0x7ff6cc0c51c7,5510298,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3156d000000,262144
new,MemoryChunk,0x22774f00000,262144
new,MemoryChunk,0xf9cd040000,262144
new,MemoryChunk,0x1fc89440000,262144
new,MemoryChunk,0x3c2c4bc0000,262144
new,MemoryChunk,0x27c66800000,262144
new,MemoryChunk,0x3e899c80000,262144
new,MemoryChunk,0x3312f180000,262144
new,MemoryChunk,0x10904d00000,262144
new,MemoryChunk,0x325e7280000,262144
new,MemoryChunk,0x27902cc0000,262144
tick,0x7ff6cc0ffc9d,5526283,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0c51c4,5542364,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1bf05a80000,262144
new,MemoryChunk,0x66e1000000,262144
new,MemoryChunk,0x12dda80000,262144
new,MemoryChunk,0x2dbafa00000,262144
new,MemoryChunk,0x2e47ad00000,262144
new,MemoryChunk,0x2b323fc0000,262144
new,MemoryChunk,0x1b642d40000,262144
new,MemoryChunk,0x1174f180000,262144
new,MemoryChunk,0x9c3a00000,262144
tick,0x7ff66c2893d8,5558408,0,0x0,0,0x7ff64c4968b6,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2bf2b340000,262144
new,MemoryChunk,0x2d851780000,262144
new,MemoryChunk,0x193f7080000,262144
new,MemoryChunk,0x306e1080000,262144
new,MemoryChunk,0x32617c00000,262144
new,MemoryChunk,0x14ac5f40000,262144
new,MemoryChunk,0x38ff3280000,262144
new,MemoryChunk,0x9aefd80000,262144
new,MemoryChunk,0x28d58d80000,262144
tick,0x7ff66c2dc0b2,5574294,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3a05,5590362,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x29d7d200000,262144
new,MemoryChunk,0x103bc5c0000,262144
new,MemoryChunk,0x3e388800000,262144
new,MemoryChunk,0x1b004b80000,262144
new,MemoryChunk,0xd9dd40000,262144
new,MemoryChunk,0xfb55c80000,262144
new,MemoryChunk,0x38451900000,262144
new,MemoryChunk,0x31b7be40000,262144
new,MemoryChunk,0x3c1e4840000,262144
new,MemoryChunk,0x289439c0000,262144
new,MemoryChunk,0x2aa22000000,262144
delete,MemoryChunk,0x3df78080000
delete,MemoryChunk,0x1aba6000000
delete,MemoryChunk,0x22b7c880000
delete,MemoryChunk,0x7c04880000
delete,MemoryChunk,0x34bce0c0000
delete,MemoryChunk,0x2c516a80000
delete,MemoryChunk,0x3804e500000
delete,MemoryChunk,0x106d2200000
delete,MemoryChunk,0xff2bfc0000
delete,MemoryChunk,0xf7940c0000
delete,MemoryChunk,0x1c60dc0000
delete,MemoryChunk,0x384b4c00000
delete,MemoryChunk,0x2fb91f00000
delete,MemoryChunk,0x2ee2cdc0000
delete,MemoryChunk,0x23234c0000
delete,MemoryChunk,0x39062740000
delete,MemoryChunk,0x5187c40000
delete,MemoryChunk,0x945ab80000
delete,MemoryChunk,0xfe47d80000
delete,MemoryChunk,0x2582a380000
delete,MemoryChunk,0x3619ad80000
delete,MemoryChunk,0x3374c980000
delete,MemoryChunk,0x2962a640000
delete,MemoryChunk,0x15c08b40000
delete,MemoryChunk,0x1a46be40000
delete,MemoryChunk,0x15b78840000
delete,MemoryChunk,0x39db4440000
delete,MemoryChunk,0x2e0ea80000
delete,MemoryChunk,0x2bb228c0000
delete,MemoryChunk,0x383f5780000
delete,MemoryChunk,0x1a0f7e80000
delete,MemoryChunk,0x111f3740000
delete,MemoryChunk,0xdbea9c0000
delete,MemoryChunk,0x34c58f40000
delete,MemoryChunk,0x2f322340000
delete,MemoryChunk,0xf6c60c0000
delete,MemoryChunk,0x20561d00000
delete,MemoryChunk,0x37619ec0000
delete,MemoryChunk,0x3156d000000
delete,MemoryChunk,0x21af32c0000
delete,MemoryChunk,0x3e899c80000
delete,MemoryChunk,0x3c993540000
delete,MemoryChunk,0x8998800000
delete,MemoryChunk,0x27c66800000
delete,MemoryChunk,0x3c2c4bc0000
delete,MemoryChunk,0x1a6fbc0000
delete,MemoryChunk,0x987a600000
delete,MemoryChunk,0x3e45be80000
delete,MemoryChunk,0x11d5f040000
delete,MemoryChunk,0x36e4b900000
delete,MemoryChunk,0x31b3b700000
delete,MemoryChunk,0xe1b3a00000
delete,MemoryChunk,0x328e2700000
delete,MemoryChunk,0x1fc89440000
delete,MemoryChunk,0x27902cc0000
delete,MemoryChunk,0x26d64b00000
delete,MemoryChunk,0x66e1000000
delete,MemoryChunk,0x2e47ad00000
delete,MemoryChunk,0x3312f180000
delete,MemoryChunk,0x325e7280000
delete,MemoryChunk,0x8d4b800000
delete,MemoryChunk,0x3cff5b80000
delete,MemoryChunk,0x3a6d6300000
delete,MemoryChunk,0x23cb5bc0000
delete,MemoryChunk,0x1174f180000
delete,MemoryChunk,0x12dda80000
delete,MemoryChunk,0xa9112c0000
delete,MemoryChunk,0x2dbafa00000
delete,MemoryChunk,0x1b642d40000
delete,MemoryChunk,0x1bf05a80000
delete,MemoryChunk,0x9c3a00000
delete,MemoryChunk,0x2b323fc0000
delete,MemoryChunk,0x193f7080000
delete,MemoryChunk,0x38ff3280000
delete,MemoryChunk,0x2bf2b340000
delete,MemoryChunk,0x306e1080000
delete,MemoryChunk,0x14ac5f40000
delete,MemoryChunk,0x28d58d80000
delete,MemoryChunk,0x2d851780000
delete,MemoryChunk,0x9aefd80000
delete,MemoryChunk,0x3e388800000
delete,MemoryChunk,0xfb55c80000
delete,MemoryChunk,0x3f9e8840000
delete,MemoryChunk,0x103bc5c0000
delete,MemoryChunk,0xd9dd40000
delete,MemoryChunk,0x38451900000
delete,MemoryChunk,0x1b004b80000
delete,MemoryChunk,0x2aa22000000
delete,MemoryChunk,0x289439c0000
delete,MemoryChunk,0x3c1e4840000
delete,MemoryChunk,0x31b7be40000
tick,0x7ff6cbf132d7,5606294,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeaf8b8,5622312,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0b2,5638292,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec5e62,5654374,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0e91c5,5670311,0,0x0,1
tick,0x7ff64c49e1ae,5686320,0,0x0,0,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c356,5702351,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863b95bbb,5718293,0,0x0,1
tick,0x7ff6cc0c5231,5734303,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c28bb8f,5750335,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x11b19900000,262144
new,MemoryChunk,0x13c21c80000,262144
new,MemoryChunk,0x23341ec0000,262144
new,MemoryChunk,0xb279e80000,262144
new,MemoryChunk,0x3de9000000,262144
new,MemoryChunk,0x79f0880000,262144
new,MemoryChunk,0x10acccc0000,262144
new,MemoryChunk,0x3d83fcc0000,262144
tick,0x7ff6cc0d8870,5766351,0,0x0,1
tick,0x7ff6cbea1261,5782358,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3f5c4cc0000,262144
new,MemoryChunk,0x1d754600000,262144
new,MemoryChunk,0x1da92480000,262144
new,MemoryChunk,0x133ad9c0000,262144
new,MemoryChunk,0xc4ac40000,262144
new,MemoryChunk,0x1975a880000,262144
new,MemoryChunk,0x31e37f80000,262144
new,MemoryChunk,0x235a8800000,262144
new,MemoryChunk,0x8a37040000,262144
tick,0x7ff66c30b1ab,5798425,0,0x0,0,0x7ff64c49ea88,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x13a5b640000,262144
new,MemoryChunk,0x8c3d400000,262144
new,MemoryChunk,0x2a5fef80000,262144
new,MemoryChunk,0x330a17c0000,262144
new,MemoryChunk,0xc96a280000,262144
new,MemoryChunk,0x27632c80000,262144
new,MemoryChunk,0x18d049c0000,262144
tick,0x7ff6cc06b73b,5814342,0,0x0,1
new,MemoryChunk,0x270df680000,262144
new,MemoryChunk,0x2ad729c0000,262144
tick,0x7ff66c241b4c,5830354,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1f3e6500000,262144
new,MemoryChunk,0x6cd0780000,262144
new,MemoryChunk,0x21389cc0000,262144
new,MemoryChunk,0x2dfedc40000,262144
new,MemoryChunk,0x2b42f80000,262144
new,MemoryChunk,0x1e30e4c0000,262144
new,MemoryChunk,0xab90480000,262144
new,MemoryChunk,0x3e6f57c0000,262144
new,MemoryChunk,0x14763740000,262144
new,MemoryChunk,0x10956580000,262144
new,MemoryChunk,0x33aee500000,262144
new,MemoryChunk,0x3c805040000,262144
tick,0x7ff6cbf20ca1,5846325,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3fb11fc0000,262144
new,MemoryChunk,0x92cc0c0000,262144
new,MemoryChunk,0x9033d80000,262144
new,MemoryChunk,0x224e0c00000,262144
new,MemoryChunk,0x201680c0000,262144
new,MemoryChunk,0x378c1a40000,262144
new,MemoryChunk,0x8b1cec0000,262144
tick,0x7ff6cc06d690,5862352,0,0x0,1
tick,0x7ff6cbec5d8f,5878373,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x8662ec0000,262144
new,MemoryChunk,0x11dc7540000,262144
new,MemoryChunk,0x381a240000,262144
new,MemoryChunk,0x6d56840000,262144
new,MemoryChunk,0x225604c0000,262144
new,MemoryChunk,0xbfb2840000,262144
new,MemoryChunk,0x12ac4100000,262144
new,MemoryChunk,0x2f26bfc0000,262144
new,MemoryChunk,0x368eba80000,262144
new,MemoryChunk,0x100e5480000,262144
new,MemoryChunk,0x211dd0c0000,262144
tick,0x7ff6cbdac825,5894351,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x242c7b00000,262144
new,MemoryChunk,0x34c60840000,262144
new,MemoryChunk,0x1e689e40000,262144
new,MemoryChunk,0x1a232240000,262144
new,MemoryChunk,0xa984a00000,262144
new,MemoryChunk,0x23fa8000000,262144
new,MemoryChunk,0x5ad15c0000,262144
new,MemoryChunk,0x287e2c40000,262144
new,MemoryChunk,0x2b82a5c0000,262144
tick,0x7ff6cc0eb1a6,5910358,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbab4,5926387,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x26624700000,262144
new,MemoryChunk,0xba7de80000,262144
new,MemoryChunk,0x17a52d00000,262144
new,MemoryChunk,0x3391b380000,262144
new,MemoryChunk,0x2ab70480000,262144
new,MemoryChunk,0x2d044340000,262144
new,MemoryChunk,0x146cb2c0000,262144
new,MemoryChunk,0x1ef6cc40000,262144
new,MemoryChunk,0x203a3c80000,262144
tick,0x0,5942323,0,0x0,5
new,MemoryChunk,0xcddbb40000,262144
new,MemoryChunk,0x1fee0200000,262144
new,MemoryChunk,0x561d100000,262144
new,MemoryChunk,0x6855500000,262144
new,MemoryChunk,0x1cd83040000,262144
new,MemoryChunk,0x15f3abc0000,262144
new,MemoryChunk,0x13764a80000,262144
new,MemoryChunk,0x63f2540000,262144
new,MemoryChunk,0x3687c540000,262144
new,MemoryChunk,0x864e080000,262144
tick,0x7ff6cc0b1007,5958299,0,0x0,1
delete,MemoryChunk,0x30d32200000
delete,MemoryChunk,0x10904d00000
delete,MemoryChunk,0x22774f00000
delete,MemoryChunk,0x23341ec0000
delete,MemoryChunk,0x3de9000000
delete,MemoryChunk,0x32617c00000
delete,MemoryChunk,0xb279e80000
delete,MemoryChunk,0x29d7d200000
delete,MemoryChunk,0x13c21c80000
delete,MemoryChunk,0x11b19900000
delete,MemoryChunk,0x79f0880000
delete,MemoryChunk,0x3d83fcc0000
delete,MemoryChunk,0x10acccc0000
delete,MemoryChunk,0x1975a880000
delete,MemoryChunk,0x1da92480000
delete,MemoryChunk,0x133ad9c0000
delete,MemoryChunk,0x31e37f80000
delete,MemoryChunk,0x8a37040000
delete,MemoryChunk,0x3f5c4cc0000
delete,MemoryChunk,0x1d754600000
delete,MemoryChunk,0xc4ac40000
delete,MemoryChunk,0x13a5b640000
delete,MemoryChunk,0xc96a280000
delete,MemoryChunk,0x8c3d400000
delete,MemoryChunk,0x330a17c0000
delete,MemoryChunk,0x2a5fef80000
delete,MemoryChunk,0x27632c80000
delete,MemoryChunk,0x18d049c0000
delete,MemoryChunk,0x2ad729c0000
delete,MemoryChunk,0x1f3e6500000
delete,MemoryChunk,0x270df680000
delete,MemoryChunk,0x6cd0780000
delete,MemoryChunk,0x21389cc0000
delete,MemoryChunk,0x2b42f80000
delete,MemoryChunk,0x2dfedc40000
delete,MemoryChunk,0x1e30e4c0000
delete,MemoryChunk,0xab90480000
delete,MemoryChunk,0x235a8800000
delete,MemoryChunk,0x9033d80000
delete,MemoryChunk,0x8b1cec0000
delete,MemoryChunk,0x224e0c00000
delete,MemoryChunk,0x378c1a40000
delete,MemoryChunk,0x201680c0000
delete,MemoryChunk,0x3fb11fc0000
delete,MemoryChunk,0x8662ec0000
delete,MemoryChunk,0x92cc0c0000
delete,MemoryChunk,0x11dc7540000
delete,MemoryChunk,0x14763740000
delete,MemoryChunk,0x225604c0000
delete,MemoryChunk,0x10956580000
delete,MemoryChunk,0x6d56840000
delete,MemoryChunk,0x12ac4100000
delete,MemoryChunk,0x381a240000
delete,MemoryChunk,0xbfb2840000
delete,MemoryChunk,0x368eba80000
delete,MemoryChunk,0x3e6f57c0000
delete,MemoryChunk,0x2f26bfc0000
delete,MemoryChunk,0xa984a00000
delete,MemoryChunk,0x242c7b00000
delete,MemoryChunk,0x5ad15c0000
delete,MemoryChunk,0x34c60840000
delete,MemoryChunk,0x2b82a5c0000
delete,MemoryChunk,0x1a232240000
delete,MemoryChunk,0x23fa8000000
delete,MemoryChunk,0x1e689e40000
delete,MemoryChunk,0xba7de80000
delete,MemoryChunk,0x2ab70480000
delete,MemoryChunk,0x287e2c40000
delete,MemoryChunk,0x100e5480000
delete,MemoryChunk,0x146cb2c0000
delete,MemoryChunk,0x2d044340000
delete,MemoryChunk,0x17a52d00000
delete,MemoryChunk,0x3391b380000
delete,MemoryChunk,0x1ef6cc40000
delete,MemoryChunk,0xcddbb40000
delete,MemoryChunk,0x1cd83040000
delete,MemoryChunk,0x63f2540000
delete,MemoryChunk,0x6855500000
delete,MemoryChunk,0x561d100000
delete,MemoryChunk,0x3c805040000
delete,MemoryChunk,0x1fee0200000
delete,MemoryChunk,0x15f3abc0000
delete,MemoryChunk,0x33aee500000
delete,MemoryChunk,0x13764a80000
delete,MemoryChunk,0x864e080000
delete,MemoryChunk,0x3687c540000
tick,0x7ff66c288231,5974352,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c27ee52,5990206,0,0x0,0,0x7ff66c30a519,0x7ff64c49ea88,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc14fe66,6006194,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc105457,6022162,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0c1f,6038220,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06cb59,6054216,0,0x0,1
tick,0x7ff6cbeb0279,6070197,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241b4c,6086217,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc069bcd,6102254,0,0x0,1
tick,0x7ff6cbf1ea60,6118200,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x20392b80000,262144
new,MemoryChunk,0x1f1f04c0000,262144
new,MemoryChunk,0xdf6c7c0000,262144
new,MemoryChunk,0x1d790640000,262144
new,MemoryChunk,0x10056dc0000,262144
new,MemoryChunk,0x9ad06c0000,262144
new,MemoryChunk,0x3863b2c0000,262144
new,MemoryChunk,0x1fdafc40000,262144
new,MemoryChunk,0x26ca23c0000,262144
new,MemoryChunk,0x1ad68600000,262144
new,MemoryChunk,0x37e9fe80000,262144
tick,0x7ff64c495fd1,6133199,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x98d83c0000,262144
new,MemoryChunk,0x13679940000,262144
new,MemoryChunk,0x288c8500000,262144
new,MemoryChunk,0xbb74e80000,262144
new,MemoryChunk,0x1f775a00000,262144
new,MemoryChunk,0x17de9480000,262144
new,MemoryChunk,0x11267500000,262144
new,MemoryChunk,0x87a9d40000,262144
tick,0x7ff6cc0ffc9d,6149176,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x80fd900000,262144
new,MemoryChunk,0xf581b40000,262144
new,MemoryChunk,0x5794680000,262144
new,MemoryChunk,0x1ceedec0000,262144
new,MemoryChunk,0x3c30f100000,262144
new,MemoryChunk,0x2237a380000,262144
new,MemoryChunk,0x34e56640000,262144
new,MemoryChunk,0x3a5d6b80000,262144
new,MemoryChunk,0x3a931340000,262144
tick,0x7ff6cc0d8885,6165356,0,0x0,1
new,MemoryChunk,0x2205e980000,262144
new,MemoryChunk,0x39820900000,262144
tick,0x7ff66c2dbf85,6180174,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x24f96480000,262144
new,MemoryChunk,0x3bbe6bc0000,262144
new,MemoryChunk,0x30ff5840000,262144
new,MemoryChunk,0x1ca645c0000,262144
new,MemoryChunk,0x3e86c000000,262144
new,MemoryChunk,0x36462580000,262144
new,MemoryChunk,0x1f479640000,262144
new,MemoryChunk,0x1b2829c0000,262144
new,MemoryChunk,0x3a70a900000,262144
tick,0x7ff66c241b4c,6195157,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf7e,6211223,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x126d3940000,262144
new,MemoryChunk,0x3137f880000,262144
new,MemoryChunk,0x2b317a80000,262144
new,MemoryChunk,0x27445740000,262144
new,MemoryChunk,0x3b680c80000,262144
new,MemoryChunk,0x3920fe00000,262144
new,MemoryChunk,0x339c9cc0000,262144
new,MemoryChunk,0x9f32680000,262144
new,MemoryChunk,0x32e64880000,262144
tick,0x7ff66c332a43,6227211,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x215ca480000,262144
new,MemoryChunk,0x3bca5600000,262144
new,MemoryChunk,0x30f8ff40000,262144
new,MemoryChunk,0x36385e00000,262144
new,MemoryChunk,0x1c282a40000,262144
new,MemoryChunk,0x51713c0000,262144
new,MemoryChunk,0x6479980000,262144
new,MemoryChunk,0x32b52340000,262144
new,MemoryChunk,0x3ff7e680000,262144
new,MemoryChunk,0xa2f5f00000,262144
tick,0x7ff6cc10545a,6243173,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49677e,6259179,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x7cd9400000,262144
new,MemoryChunk,0x3a199a80000,262144
new,MemoryChunk,0x2ccfb500000,262144
new,MemoryChunk,0x36c64dc0000,262144
new,MemoryChunk,0x2af8f780000,262144
new,MemoryChunk,0x1b2e0e40000,262144
new,MemoryChunk,0x24883d40000,262144
new,MemoryChunk,0x2a593dc0000,262144
new,MemoryChunk,0x2341a5c0000,262144
tick,0x7ff6cc14fe58,6275221,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1fcd0c40000,262144
new,MemoryChunk,0x1068ce80000,262144
new,MemoryChunk,0x2774fa00000,262144
new,MemoryChunk,0x77cd440000,262144
new,MemoryChunk,0x362e9d40000,262144
new,MemoryChunk,0xdfc8dc0000,262144
new,MemoryChunk,0x8bccc00000,262144
new,MemoryChunk,0x26ddc080000,262144
new,MemoryChunk,0x3a602dc0000,262144
new,MemoryChunk,0x69464c0000,262144
tick,0x7ff6cbec29c4,6291202,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241c6f,6307183,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3739ba40000,262144
new,MemoryChunk,0x2ea9e580000,262144
new,MemoryChunk,0x12fb2c00000,262144
new,MemoryChunk,0xba77cc0000,262144
new,MemoryChunk,0x900adc0000,262144
new,MemoryChunk,0x1ef3500000,262144
new,MemoryChunk,0x273916c0000,262144
new,MemoryChunk,0x1c00280000,262144
new,MemoryChunk,0x1803a400000,262144
delete,MemoryChunk,0x211dd0c0000
delete,MemoryChunk,0x26624700000
delete,MemoryChunk,0x20392b80000
delete,MemoryChunk,0x1f1f04c0000
delete,MemoryChunk,0x1d790640000
delete,MemoryChunk,0xdf6c7c0000
delete,MemoryChunk,0x10056dc0000
delete,MemoryChunk,0x37e9fe80000
delete,MemoryChunk,0x26ca23c0000
delete,MemoryChunk,0x3863b2c0000
delete,MemoryChunk,0x288c8500000
delete,MemoryChunk,0x1ad68600000
delete,MemoryChunk,0x203a3c80000
delete,MemoryChunk,0x17de9480000
delete,MemoryChunk,0x98d83c0000
delete,MemoryChunk,0x87a9d40000
delete,MemoryChunk,0x13679940000
delete,MemoryChunk,0xbb74e80000
delete,MemoryChunk,0x11267500000
delete,MemoryChunk,0x80fd900000
delete,MemoryChunk,0xf581b40000
delete,MemoryChunk,0x3c30f100000
delete,MemoryChunk,0x5794680000
delete,MemoryChunk,0x2237a380000
delete,MemoryChunk,0x1ceedec0000
delete,MemoryChunk,0x34e56640000
delete,MemoryChunk,0x30ff5840000
delete,MemoryChunk,0x3e86c000000
delete,MemoryChunk,0x36462580000
delete,MemoryChunk,0x24f96480000
delete,MemoryChunk,0x3a931340000
delete,MemoryChunk,0x3bbe6bc0000
delete,MemoryChunk,0x1ca645c0000
delete,MemoryChunk,0x1f479640000
delete,MemoryChunk,0x1b2829c0000
delete,MemoryChunk,0x2b317a80000
delete,MemoryChunk,0x3920fe00000
delete,MemoryChunk,0x32e64880000
delete,MemoryChunk,0x27445740000
delete,MemoryChunk,0x339c9cc0000
delete,MemoryChunk,0x126d3940000
delete,MemoryChunk,0x9f32680000
delete,MemoryChunk,0x3137f880000
delete,MemoryChunk,0x32b52340000
delete,MemoryChunk,0x215ca480000
delete,MemoryChunk,0x51713c0000
delete,MemoryChunk,0x3ff7e680000
delete,MemoryChunk,0x3bca5600000
delete,MemoryChunk,0x30f8ff40000
delete,MemoryChunk,0x1c282a40000
delete,MemoryChunk,0x6479980000
delete,MemoryChunk,0x2ccfb500000
delete,MemoryChunk,0x2af8f780000
delete,MemoryChunk,0x24883d40000
delete,MemoryChunk,0x2a593dc0000
delete,MemoryChunk,0x36385e00000
delete,MemoryChunk,0x36c64dc0000
delete,MemoryChunk,0x1b2e0e40000
delete,MemoryChunk,0x2341a5c0000
delete,MemoryChunk,0xa2f5f00000
delete,MemoryChunk,0x7cd9400000
delete,MemoryChunk,0x8bccc00000
delete,MemoryChunk,0x2774fa00000
delete,MemoryChunk,0xdfc8dc0000
delete,MemoryChunk,0x1fcd0c40000
delete,MemoryChunk,0x69464c0000
delete,MemoryChunk,0x77cd440000
delete,MemoryChunk,0x12fb2c00000
delete,MemoryChunk,0x1ef3500000
delete,MemoryChunk,0x2ea9e580000
delete,MemoryChunk,0x900adc0000
delete,MemoryChunk,0x1068ce80000
delete,MemoryChunk,0x39820900000
delete,MemoryChunk,0x3739ba40000
delete,MemoryChunk,0xba77cc0000
delete,MemoryChunk,0x273916c0000
delete,MemoryChunk,0x1803a400000
delete,MemoryChunk,0x1c00280000
tick,0x7ff6cbe95543,6323234,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06dd46,6339217,0,0x0,1
tick,0x7ff66c2dc0e0,6355208,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8ac9,6371236,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06db6d,6387221,0,0x0,1
tick,0x7ff6cbf6cc53,6403220,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241b4c,6419249,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dab01,6435187,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177cc,6451184,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c3b0,6467211,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,6483269,0,0x0,1
tick,0x7ff66c28908c,6499236,0,0x0,0,0x7ff64c49e62a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xbc30580000,262144
new,MemoryChunk,0x21ed4380000,262144
new,MemoryChunk,0xf8c5340000,262144
new,MemoryChunk,0x32736b00000,262144
new,MemoryChunk,0x1fab5040000,262144
new,MemoryChunk,0x11ffe00000,262144
new,MemoryChunk,0x31c440c0000,262144
new,MemoryChunk,0xcb16400000,262144
tick,0x7ff66c37037c,6515221,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbba93b3,6531227,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2c108a40000,262144
new,MemoryChunk,0x236023c0000,262144
new,MemoryChunk,0x6190e00000,262144
new,MemoryChunk,0xdff5980000,262144
new,MemoryChunk,0x3253c1c0000,262144
new,MemoryChunk,0x3eaf1480000,262144
new,MemoryChunk,0x26aac800000,262144
new,MemoryChunk,0x2b8a61c0000,262144
tick,0x7ff6cbec2822,6547259,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xf167c40000,262144
new,MemoryChunk,0x10061880000,262144
new,MemoryChunk,0x8502180000,262144
new,MemoryChunk,0x5c9fc0000,262144
new,MemoryChunk,0xd8d4e00000,262144
tick,0x7ff6cc06a9d8,6563218,0,0x0,1
new,MemoryChunk,0x243dbec0000,262144
new,MemoryChunk,0x2a7ba000000,262144
new,MemoryChunk,0x3075a080000,262144
new,MemoryChunk,0xf531140000,262144
tick,0x7ff6cbe6da77,6579212,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x12ece480000,262144
new,MemoryChunk,0x2e815b40000,262144
new,MemoryChunk,0x37377100000,262144
new,MemoryChunk,0x33c92d80000,262144
new,MemoryChunk,0x343a0480000,262144
new,MemoryChunk,0x2e70fdc0000,262144
new,MemoryChunk,0x391ed800000,262144
tick,0x7ff66c299c40,6595244,0,0x0,0,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x9b75700000,262144
new,MemoryChunk,0x336a28c0000,262144
new,MemoryChunk,0x17187e40000,262144
new,MemoryChunk,0x1861ba00000,262144
new,MemoryChunk,0x7a8ce40000,262144
new,MemoryChunk,0x2e103840000,262144
new,MemoryChunk,0x34eb2500000,262144
new,MemoryChunk,0x320cf5c0000,262144
new,MemoryChunk,0x2edc3880000,262144
new,MemoryChunk,0x1c55f4c0000,262144
tick,0x7ff64c496090,6611181,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb5113,6627289,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xc0d6e00000,262144
new,MemoryChunk,0x372624c0000,262144
new,MemoryChunk,0x2ee25cc0000,262144
new,MemoryChunk,0x5c5fac0000,262144
new,MemoryChunk,0xed67d00000,262144
new,MemoryChunk,0x2cb29d40000,262144
new,MemoryChunk,0x8be6140000,262144
tick,0x7ff64c49e5f4,6643203,0,0x0,0,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a0f33,6659238,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x242dbdc0000,262144
new,MemoryChunk,0x3f5daa80000,262144
new,MemoryChunk,0x349df0c0000,262144
new,MemoryChunk,0x20386f40000,262144
new,MemoryChunk,0x331bbf80000,262144
new,MemoryChunk,0x8bbc780000,262144
new,MemoryChunk,0x1bfff5c0000,262144
new,MemoryChunk,0x2600d5c0000,262144
tick,0x7ff64c49fe57,6675266,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x6f664c0000,262144
new,MemoryChunk,0x21110f80000,262144
new,MemoryChunk,0x695440000,262144
new,MemoryChunk,0x1d76a080000,262144
new,MemoryChunk,0x222dc140000,262144
new,MemoryChunk,0x2d179180000,262144
new,MemoryChunk,0x1398a980000,262144
tick,0x7ff6cbf177cb,6691207,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49df67,6707256,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1f081a40000,262144
new,MemoryChunk,0x14920bc0000,262144
new,MemoryChunk,0x2c767340000,262144
new,MemoryChunk,0x1ce24b40000,262144
new,MemoryChunk,0x1b854ec0000,262144
new,MemoryChunk,0x160ab380000,262144
new,MemoryChunk,0x3487ea40000,262144
new,MemoryChunk,0x4df4f40000,262144
new,MemoryChunk,0x23d96a00000,262144
tick,0x7ff6cc0eb2fb,6723214,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1eede000000,262144
new,MemoryChunk,0x9cb100000,262144
new,MemoryChunk,0x241a09c0000,262144
tick,0x7ff6cc06a9d8,6739234,0,0x0,1
new,MemoryChunk,0x161457c0000,262144
new,MemoryChunk,0x6e04fc0000,262144
new,MemoryChunk,0x16252140000,262144
delete,MemoryChunk,0x1879f540000
delete,MemoryChunk,0x1fdafc40000
delete,MemoryChunk,0x3a70a900000
delete,MemoryChunk,0x2205e980000
delete,MemoryChunk,0x1f775a00000
delete,MemoryChunk,0x9ad06c0000
delete,MemoryChunk,0x3a5d6b80000
delete,MemoryChunk,0x3a602dc0000
delete,MemoryChunk,0xcb16400000
delete,MemoryChunk,0x21ed4380000
delete,MemoryChunk,0x32736b00000
delete,MemoryChunk,0x11ffe00000
delete,MemoryChunk,0x31c440c0000
delete,MemoryChunk,0x1fab5040000
delete,MemoryChunk,0x2c108a40000
delete,MemoryChunk,0x236023c0000
delete,MemoryChunk,0x3a199a80000
delete,MemoryChunk,0xdff5980000
delete,MemoryChunk,0x6190e00000
delete,MemoryChunk,0x26aac800000
delete,MemoryChunk,0x3253c1c0000
delete,MemoryChunk,0x3b680c80000
delete,MemoryChunk,0x3eaf1480000
delete,MemoryChunk,0x2a7ba000000
delete,MemoryChunk,0xbc30580000
delete,MemoryChunk,0xf531140000
delete,MemoryChunk,0x5c9fc0000
delete,MemoryChunk,0x243dbec0000
delete,MemoryChunk,0x8502180000
delete,MemoryChunk,0xd8d4e00000
delete,MemoryChunk,0x12ece480000
delete,MemoryChunk,0x37377100000
delete,MemoryChunk,0x9b75700000
delete,MemoryChunk,0x336a28c0000
delete,MemoryChunk,0x7a8ce40000
delete,MemoryChunk,0x2e103840000
delete,MemoryChunk,0x2b8a61c0000
delete,MemoryChunk,0x17187e40000
delete,MemoryChunk,0x1c55f4c0000
delete,MemoryChunk,0x26ddc080000
delete,MemoryChunk,0x1861ba00000
delete,MemoryChunk,0x2edc3880000
delete,MemoryChunk,0x320cf5c0000
delete,MemoryChunk,0x2e70fdc0000
delete,MemoryChunk,0x343a0480000
delete,MemoryChunk,0xc0d6e00000
delete,MemoryChunk,0x34eb2500000
delete,MemoryChunk,0x8be6140000
delete,MemoryChunk,0xed67d00000
delete,MemoryChunk,0x372624c0000
delete,MemoryChunk,0x5c5fac0000
delete,MemoryChunk,0x2cb29d40000
delete,MemoryChunk,0x349df0c0000
delete,MemoryChunk,0x8bbc780000
delete,MemoryChunk,0xf8c5340000
delete,MemoryChunk,0x1bfff5c0000
delete,MemoryChunk,0x242dbdc0000
delete,MemoryChunk,0x3f5daa80000
delete,MemoryChunk,0x331bbf80000
delete,MemoryChunk,0x2600d5c0000
delete,MemoryChunk,0x1398a980000
delete,MemoryChunk,0x21110f80000
delete,MemoryChunk,0x1d76a080000
delete,MemoryChunk,0x222dc140000
delete,MemoryChunk,0x2d179180000
delete,MemoryChunk,0x14920bc0000
delete,MemoryChunk,0x1b854ec0000
delete,MemoryChunk,0x6f664c0000
delete,MemoryChunk,0x2c767340000
delete,MemoryChunk,0x4df4f40000
delete,MemoryChunk,0x161457c0000
delete,MemoryChunk,0x3487ea40000
delete,MemoryChunk,0x1eede000000
delete,MemoryChunk,0x1f081a40000
delete,MemoryChunk,0x160ab380000
delete,MemoryChunk,0x9cb100000
delete,MemoryChunk,0x16252140000
delete,MemoryChunk,0x6e04fc0000
tick,0x7ff6cbf13329,6755251,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf85,6771231,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0d83c2,6787238,0,0x0,0,0x7ff6cbda8d20,0x7ff64c47a156,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a0baf,6803328,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c290ecd,6819266,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0c1,6835452,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb5113,6851248,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49612b,6867241,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebd192,6883270,0,0x0,0,0x7ff6cbda9010,0x7ff64c47a189,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb59,6899212,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf20ca1,6915263,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49e3c2,6931299,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c28bb93,6947259,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c479a9a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc148cb0,6963250,0,0x0,1
tick,0x7ff6cbeb068a,6979291,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6d9cb,6995268,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbfa3,7011223,0,0x0,0,0x7ff64c4a0dd4,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2e7bfcc0000,262144
new,MemoryChunk,0x294da1c0000,262144
new,MemoryChunk,0x16a59c40000,262144
new,MemoryChunk,0x3ec0d080000,262144
new,MemoryChunk,0x36960a00000,262144
new,MemoryChunk,0x2bf380000,262144
new,MemoryChunk,0x25772600000,262144
new,MemoryChunk,0x1a578400000,262144
tick,0x7ff64c49fe1c,7027241,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xb38b380000,262144
new,MemoryChunk,0x3e0944c0000,262144
new,MemoryChunk,0x275b3ac0000,262144
new,MemoryChunk,0x24bc040000,262144
new,MemoryChunk,0x2655edc0000,262144
new,MemoryChunk,0x353dc280000,262144
new,MemoryChunk,0x22c1db40000,262144
tick,0x7ff6cbec350c,7043271,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0b2,7059247,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2301240000,262144
new,MemoryChunk,0x66dbf40000,262144
new,MemoryChunk,0x310b6a40000,262144
new,MemoryChunk,0x3d1e4240000,262144
new,MemoryChunk,0x3da48580000,262144
new,MemoryChunk,0x3da2aa00000,262144
tick,0x7ff64c49e193,7075248,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49582b,7091246,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49898d,0x7ff64c49a401,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x32da6880000,262144
new,MemoryChunk,0x3167d80000,262144
new,MemoryChunk,0xd7d73c0000,262144
new,MemoryChunk,0x2c6dc2c0000,262144
new,MemoryChunk,0x48b1380000,262144
new,MemoryChunk,0x1a3ef500000,806912
tick,0x7ff6cbec3447,7107244,0,0x0,0,0x7ff6cbda9ab0,0x7ff6cc351d19,0x65ef42f6c,0x65ef4221f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,7107577,0x7ff64c49b980,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c49b980,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
tick,0x7ff863bb01b5,7123246,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49ba17,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d3eb,7139322,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49ba17,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x202b3d40000,262144
new,MemoryChunk,0x1c972380000,262144
new,MemoryChunk,0x2bb62200000,262144
new,MemoryChunk,0x388e4000000,262144
new,MemoryChunk,0x3f686200000,262144
new,MemoryChunk,0x6e6b740000,262144
new,MemoryChunk,0x1c76cac0000,262144
tick,0x7ff6cbebbb02,7155280,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x26aa5700000,262144
new,MemoryChunk,0x34ff5940000,262144
new,MemoryChunk,0xbdcae40000,262144
new,MemoryChunk,0x20af3980000,262144
tick,0x7ff6cc3177dd,7171234,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4963af,7187256,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2320e940000,262144
new,MemoryChunk,0x14001f40000,262144
new,MemoryChunk,0x1bc6a340000,262144
new,MemoryChunk,0x2749b40000,262144
new,MemoryChunk,0x28bc1d00000,262144
new,MemoryChunk,0x29b5bb00000,262144
new,MemoryChunk,0x1090e940000,262144
new,MemoryChunk,0x24155280000,262144
new,MemoryChunk,0x242e2d80000,262144
new,MemoryChunk,0x57c3900000,262144
tick,0x7ff6cbebbb59,7203264,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x9efffc0000,262144
new,MemoryChunk,0x323714c0000,262144
new,MemoryChunk,0x1c48bcc0000,262144
new,MemoryChunk,0x32d6dc40000,262144
new,MemoryChunk,0x2a65bd40000,262144
new,MemoryChunk,0x362dca40000,262144
new,MemoryChunk,0x2e3071c0000,262144
tick,0x7ff6cc06c1d1,7219289,0,0x0,1
new,MemoryChunk,0x31347880000,262144
new,MemoryChunk,0x360383c0000,262144
new,MemoryChunk,0x3475ffc0000,262144
tick,0x7ff6cb60e783,7235294,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35bcebc0000,262144
new,MemoryChunk,0x1d964940000,262144
new,MemoryChunk,0x34f2b8c0000,262144
new,MemoryChunk,0x3654cd40000,262144
new,MemoryChunk,0x202ee800000,262144
new,MemoryChunk,0x32e07a40000,262144
new,MemoryChunk,0x368e7cc0000,262144
new,MemoryChunk,0x13462180000,262144
new,MemoryChunk,0x3f12a400000,262144
new,MemoryChunk,0xd180000000,262144
tick,0x7ff6cbf177b9,7251030,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x177d8f00000,262144
new,MemoryChunk,0x26d7580000,262144
new,MemoryChunk,0x1d814740000,262144
new,MemoryChunk,0x36c78dc0000,262144
new,MemoryChunk,0x1f044680000,262144
new,MemoryChunk,0xfd52900000,262144
new,MemoryChunk,0x1126edc0000,262144
tick,0x7ff6cc06a9d8,7267558,0,0x0,1
new,MemoryChunk,0x81dab80000,262144
new,MemoryChunk,0xcdd76c0000,262144
new,MemoryChunk,0xbd2fd40000,262144
delete,MemoryChunk,0x3e9cd200000
delete,MemoryChunk,0x2e815b40000
delete,MemoryChunk,0x362e9d40000
delete,MemoryChunk,0x10061880000
delete,MemoryChunk,0x30a4bf00000
delete,MemoryChunk,0x3f5dac00000
delete,MemoryChunk,0x695440000
delete,MemoryChunk,0x23d96a00000
delete,MemoryChunk,0x2e7bfcc0000
delete,MemoryChunk,0x241a09c0000
delete,MemoryChunk,0x1a578400000
delete,MemoryChunk,0x36960a00000
delete,MemoryChunk,0x3e0944c0000
delete,MemoryChunk,0x3ec0d080000
delete,MemoryChunk,0xb38b380000
delete,MemoryChunk,0x24bc040000
delete,MemoryChunk,0x2655edc0000
delete,MemoryChunk,0x22c1db40000
delete,MemoryChunk,0x3da48580000
delete,MemoryChunk,0x66dbf40000
delete,MemoryChunk,0x3d1e4240000
delete,MemoryChunk,0x2301240000
delete,MemoryChunk,0x294da1c0000
delete,MemoryChunk,0x25772600000
delete,MemoryChunk,0xd7d73c0000
delete,MemoryChunk,0x388e4000000
delete,MemoryChunk,0x2bb62200000
delete,MemoryChunk,0x2749b40000
delete,MemoryChunk,0x1c76cac0000
delete,MemoryChunk,0x6e6b740000
delete,MemoryChunk,0x24155280000
delete,MemoryChunk,0x242e2d80000
delete,MemoryChunk,0x3f686200000
delete,MemoryChunk,0x2320e940000
delete,MemoryChunk,0x28bc1d00000
delete,MemoryChunk,0x1090e940000
delete,MemoryChunk,0x353dc280000
delete,MemoryChunk,0x1bc6a340000
delete,MemoryChunk,0x29b5bb00000
delete,MemoryChunk,0x57c3900000
delete,MemoryChunk,0x14001f40000
delete,MemoryChunk,0x9efffc0000
delete,MemoryChunk,0x323714c0000
delete,MemoryChunk,0x2e3071c0000
delete,MemoryChunk,0x3475ffc0000
delete,MemoryChunk,0x32d6dc40000
delete,MemoryChunk,0x362dca40000
delete,MemoryChunk,0x31347880000
delete,MemoryChunk,0x1c48bcc0000
delete,MemoryChunk,0x1d964940000
delete,MemoryChunk,0x360383c0000
delete,MemoryChunk,0x3654cd40000
delete,MemoryChunk,0x32e07a40000
delete,MemoryChunk,0x35bcebc0000
delete,MemoryChunk,0x368e7cc0000
delete,MemoryChunk,0xd180000000
delete,MemoryChunk,0x34f2b8c0000
delete,MemoryChunk,0x202ee800000
delete,MemoryChunk,0x177d8f00000
delete,MemoryChunk,0x36c78dc0000
delete,MemoryChunk,0xbd2fd40000
delete,MemoryChunk,0x3f12a400000
delete,MemoryChunk,0x26d7580000
delete,MemoryChunk,0x1f044680000
delete,MemoryChunk,0x1126edc0000
delete,MemoryChunk,0x1d814740000
delete,MemoryChunk,0xfd52900000
delete,MemoryChunk,0x81dab80000
delete,MemoryChunk,0x2a65bd40000
delete,MemoryChunk,0xcdd76c0000
tick,0x7ff6cbf1ff1a,7283064,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf85,7299075,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf8b,7315051,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc09f,7331074,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe95522,7347039,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeaf901,7363137,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4950c4,7379096,0,0x0,0,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc072194,7395058,0,0x0,1
tick,0x7ff64c49fe91,7411085,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda65fa,7427094,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbea07ba,7443126,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbba9255,7459077,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x228ab300000,262144
new,MemoryChunk,0xa8d1cc0000,262144
new,MemoryChunk,0x3f88a780000,262144
new,MemoryChunk,0xcf58100000,262144
new,MemoryChunk,0x20a74c40000,262144
new,MemoryChunk,0x2b7a9140000,262144
tick,0x7ff66c2dc0ad,7475055,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x8382a00000,262144
new,MemoryChunk,0x3c45f280000,262144
new,MemoryChunk,0x26ca3ac0000,262144
new,MemoryChunk,0x282a8c00000,262144
new,MemoryChunk,0x702b840000,262144
new,MemoryChunk,0x1614af80000,262144
new,MemoryChunk,0x3c10edc0000,262144
new,MemoryChunk,0x3bf66b00000,262144
new,MemoryChunk,0x19c09700000,262144
new,MemoryChunk,0x1fa858c0000,262144
new,MemoryChunk,0x27ed1200000,262144
tick,0x7ff64c490780,7491093,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ffc9d,7507088,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x73c4900000,262144
new,MemoryChunk,0x36a796c0000,262144
new,MemoryChunk,0x5654f00000,262144
new,MemoryChunk,0x12827840000,262144
new,MemoryChunk,0x1ae0a9c0000,262144
new,MemoryChunk,0x322a4c40000,262144
new,MemoryChunk,0x1c7e1040000,262144
new,MemoryChunk,0x345aa9c0000,262144
new,MemoryChunk,0x2ce04680000,262144
tick,0x7ff6cbec456a,7523097,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2568e940000,262144
new,MemoryChunk,0x8ba8380000,262144
new,MemoryChunk,0x386f2340000,262144
new,MemoryChunk,0x7244e40000,262144
new,MemoryChunk,0x1a2b0e40000,262144
new,MemoryChunk,0x23940780000,262144
new,MemoryChunk,0x129fe8c0000,262144
new,MemoryChunk,0x2a709180000,262144
new,MemoryChunk,0xfa52500000,262144
new,MemoryChunk,0x1c818480000,262144
tick,0x7ff6cbe8cc03,7539058,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863b95923,7555123,0,0x0,0,0x7ff6cbdb1d50,0x7ff64c496f28,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1380dc80000,262144
new,MemoryChunk,0x326cea00000,262144
new,MemoryChunk,0x7f693c0000,262144
new,MemoryChunk,0x3ab8b080000,262144
new,MemoryChunk,0x13cf4ac0000,262144
new,MemoryChunk,0x365f1580000,262144
new,MemoryChunk,0x25d2bcc0000,262144
new,MemoryChunk,0x6a1be40000,262144
new,MemoryChunk,0x10e2e80000,262144
new,MemoryChunk,0x2dbb2500000,262144
new,MemoryChunk,0x294c81c0000,262144
tick,0x7ff64c494fc4,7571069,0,0x0,0,0x7ff64c4968b6,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x26f59280000,262144
new,MemoryChunk,0x24c86080000,262144
new,MemoryChunk,0x24c7900000,262144
new,MemoryChunk,0xdd12f00000,262144
new,MemoryChunk,0x11f6f4c0000,262144
new,MemoryChunk,0xbc9e040000,262144
new,MemoryChunk,0x1d6416c0000,262144
tick,0x7ff6cc06c1d1,7587615,0,0x0,1
new,MemoryChunk,0x1c6c7000000,262144
new,MemoryChunk,0x918a340000,262144
new,MemoryChunk,0x11a70440000,262144
tick,0x7ff6cbb6e8ea,7603604,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x174a54c0000,262144
new,MemoryChunk,0xf8db240000,262144
new,MemoryChunk,0x26166980000,262144
new,MemoryChunk,0x290b0080000,262144
new,MemoryChunk,0x23cac500000,262144
new,MemoryChunk,0x1d900200000,262144
new,MemoryChunk,0x325ca0c0000,262144
new,MemoryChunk,0x34815bc0000,262144
delete,MemoryChunk,0x2bf380000
delete,MemoryChunk,0xf167c40000
delete,MemoryChunk,0x2ee25cc0000
delete,MemoryChunk,0x33c92d80000
delete,MemoryChunk,0xf9cd040000
delete,MemoryChunk,0x3075a080000
delete,MemoryChunk,0x20386f40000
delete,MemoryChunk,0x3167d80000
delete,MemoryChunk,0x3da2aa00000
delete,MemoryChunk,0x1ce24b40000
delete,MemoryChunk,0x16a59c40000
delete,MemoryChunk,0x3f88a780000
delete,MemoryChunk,0x2b7a9140000
delete,MemoryChunk,0x1c972380000
delete,MemoryChunk,0x228ab300000
delete,MemoryChunk,0xcf58100000
delete,MemoryChunk,0x26ca3ac0000
delete,MemoryChunk,0x3c45f280000
delete,MemoryChunk,0x702b840000
delete,MemoryChunk,0x19c09700000
delete,MemoryChunk,0x282a8c00000
delete,MemoryChunk,0x1614af80000
delete,MemoryChunk,0x3bf66b00000
delete,MemoryChunk,0x322a4c40000
delete,MemoryChunk,0x36a796c0000
delete,MemoryChunk,0x1c7e1040000
delete,MemoryChunk,0x73c4900000
delete,MemoryChunk,0x12827840000
delete,MemoryChunk,0x345aa9c0000
delete,MemoryChunk,0x2ce04680000
delete,MemoryChunk,0x386f2340000
delete,MemoryChunk,0x1c818480000
delete,MemoryChunk,0x8ba8380000
delete,MemoryChunk,0x2a709180000
delete,MemoryChunk,0x2568e940000
delete,MemoryChunk,0x1a2b0e40000
delete,MemoryChunk,0x7244e40000
delete,MemoryChunk,0xfa52500000
delete,MemoryChunk,0x129fe8c0000
delete,MemoryChunk,0x7f693c0000
delete,MemoryChunk,0x3ab8b080000
delete,MemoryChunk,0x1fa858c0000
delete,MemoryChunk,0x1380dc80000
delete,MemoryChunk,0x10e2e80000
delete,MemoryChunk,0x6a1be40000
delete,MemoryChunk,0x326cea00000
delete,MemoryChunk,0x13cf4ac0000
delete,MemoryChunk,0xdd12f00000
delete,MemoryChunk,0x24c7900000
delete,MemoryChunk,0x11a70440000
delete,MemoryChunk,0x26f59280000
delete,MemoryChunk,0x1c6c7000000
delete,MemoryChunk,0xbc9e040000
delete,MemoryChunk,0x23940780000
delete,MemoryChunk,0x5654f00000
delete,MemoryChunk,0x8382a00000
delete,MemoryChunk,0x391ed800000
delete,MemoryChunk,0x2dbb2500000
delete,MemoryChunk,0x11f6f4c0000
delete,MemoryChunk,0x25d2bcc0000
delete,MemoryChunk,0x365f1580000
delete,MemoryChunk,0x27ed1200000
delete,MemoryChunk,0x1ae0a9c0000
delete,MemoryChunk,0x3c10edc0000
delete,MemoryChunk,0x20a74c40000
delete,MemoryChunk,0xa8d1cc0000
delete,MemoryChunk,0x32da6880000
delete,MemoryChunk,0x310b6a40000
delete,MemoryChunk,0x275b3ac0000
delete,MemoryChunk,0x294c81c0000
delete,MemoryChunk,0xf8db240000
delete,MemoryChunk,0x325ca0c0000
delete,MemoryChunk,0x24c86080000
delete,MemoryChunk,0x174a54c0000
delete,MemoryChunk,0x26166980000
delete,MemoryChunk,0x1d6416c0000
delete,MemoryChunk,0x23cac500000
delete,MemoryChunk,0x34815bc0000
delete,MemoryChunk,0x290b0080000
delete,MemoryChunk,0x1d900200000
tick,0x7ff64c4a0d07,7619533,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8995,7635544,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497904,7651567,0,0x0,0,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49e083,7667609,0,0x0,0,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0726e3,7683587,0,0x0,1
tick,0x7ff64c49e16d,7699550,0,0x0,0,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0279,7715599,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0d8885,7731565,0,0x0,1
tick,0x7ff863b82c72,7747562,0,0x0,0,0x7ff6cbdb1d50,0x7ff64c4907d7,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3a2f,7763594,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x123fe4c0000,262144
new,MemoryChunk,0x3aa441c0000,262144
new,MemoryChunk,0x28da4cc0000,262144
new,MemoryChunk,0x2296a440000,262144
new,MemoryChunk,0x258c6140000,262144
new,MemoryChunk,0x2639eb80000,262144
new,MemoryChunk,0x4c9da80000,262144
tick,0x7ff6cbec460a,7779613,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2d796b40000,262144
new,MemoryChunk,0x2eb7cf00000,262144
new,MemoryChunk,0xaf23040000,262144
new,MemoryChunk,0x3f7f3700000,262144
tick,0x7ff6cc0726e7,7795543,0,0x0,1
new,MemoryChunk,0x305cc400000,262144
new,MemoryChunk,0x3b75c40000,262144
new,MemoryChunk,0x1ca67e00000,262144
new,MemoryChunk,0xc34fd40000,262144
new,MemoryChunk,0x34bbd480000,262144
new,MemoryChunk,0x123b5180000,262144
new,MemoryChunk,0x3517f40000,262144
tick,0x7ff64c49612b,7811650,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x72d1f00000,262144
new,MemoryChunk,0x98fb2c0000,262144
new,MemoryChunk,0x1ccef440000,262144
new,MemoryChunk,0x2c644700000,262144
new,MemoryChunk,0x28a86580000,262144
new,MemoryChunk,0x17b89140000,262144
new,MemoryChunk,0x28718bc0000,262144
new,MemoryChunk,0xb893900000,262144
new,MemoryChunk,0x223cc400000,262144
new,MemoryChunk,0x393f7b40000,262144
tick,0x7ff6cc14fcda,7827573,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1a86f5c0000,262144
new,MemoryChunk,0x28a0ec80000,262144
new,MemoryChunk,0x24089f80000,262144
new,MemoryChunk,0x26274a00000,262144
new,MemoryChunk,0x33dbc200000,262144
new,MemoryChunk,0x2ccbd00000,262144
new,MemoryChunk,0x36e950c0000,262144
new,MemoryChunk,0x20a39a00000,262144
new,MemoryChunk,0x10a1b900000,262144
tick,0x7ff66c332a40,7843530,0,0x0,0,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49e26c,7859575,0,0x0,0,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3d1a5a40000,262144
new,MemoryChunk,0x1d26dbc0000,262144
new,MemoryChunk,0x3d3f6e40000,262144
new,MemoryChunk,0x13baa9c0000,262144
new,MemoryChunk,0x1c125b40000,262144
new,MemoryChunk,0x1f8a84c0000,262144
new,MemoryChunk,0xe08a000000,262144
new,MemoryChunk,0x5cfb80000,262144
new,MemoryChunk,0x15c18880000,262144
tick,0x7ff64c4960f5,7875555,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2a8df640000,262144
new,MemoryChunk,0x2eee5980000,262144
new,MemoryChunk,0x7c41600000,262144
new,MemoryChunk,0x1fc58d00000,262144
new,MemoryChunk,0x1c7b0640000,262144
new,MemoryChunk,0x3140eb80000,262144
new,MemoryChunk,0x262c1400000,262144
new,MemoryChunk,0x19163c00000,262144
new,MemoryChunk,0xe6d2100000,262144
new,MemoryChunk,0x29a44c80000,262144
tick,0x7ff6cc0bdeb8,7891570,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fa05,7907661,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3b478200000,262144
new,MemoryChunk,0x3a0971c0000,262144
new,MemoryChunk,0x272e3100000,262144
new,MemoryChunk,0x1c7d6c80000,262144
new,MemoryChunk,0x21d7d5c0000,262144
new,MemoryChunk,0x28b20200000,262144
new,MemoryChunk,0x223819c0000,262144
new,MemoryChunk,0x297b6f00000,262144
new,MemoryChunk,0x2019b900000,262144
tick,0x7ff6cbec465b,7923568,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x391c6d80000,262144
new,MemoryChunk,0x315a9040000,262144
new,MemoryChunk,0x29b79100000,262144
new,MemoryChunk,0x355ba2c0000,262144
new,MemoryChunk,0x14ad7700000,262144
new,MemoryChunk,0x259cd440000,262144
new,MemoryChunk,0xd496980000,262144
new,MemoryChunk,0xa7d7280000,262144
new,MemoryChunk,0x2245b9c0000,262144
new,MemoryChunk,0xbdd0400000,262144
tick,0x7ff64c497a04,7939584,0,0x0,0,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a4f4,7955595,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x27d036c0000,262144
new,MemoryChunk,0x1299e700000,262144
new,MemoryChunk,0x4241200000,262144
new,MemoryChunk,0x5321a80000,262144
new,MemoryChunk,0x2a6f01c0000,262144
new,MemoryChunk,0x22ec300000,262144
new,MemoryChunk,0x24c98240000,262144
new,MemoryChunk,0x2f207f40000,262144
new,MemoryChunk,0x3ea8f2c0000,262144
delete,MemoryChunk,0xc587180000
delete,MemoryChunk,0x123fe4c0000
delete,MemoryChunk,0x2296a440000
delete,MemoryChunk,0x28da4cc0000
delete,MemoryChunk,0x3aa441c0000
delete,MemoryChunk,0x2d796b40000
delete,MemoryChunk,0x2eb7cf00000
delete,MemoryChunk,0x3f7f3700000
delete,MemoryChunk,0xaf23040000
delete,MemoryChunk,0x3b75c40000
delete,MemoryChunk,0x1ca67e00000
delete,MemoryChunk,0x305cc400000
delete,MemoryChunk,0xc34fd40000
delete,MemoryChunk,0x28a86580000
delete,MemoryChunk,0x34bbd480000
delete,MemoryChunk,0x1ccef440000
delete,MemoryChunk,0x28718bc0000
delete,MemoryChunk,0x2c644700000
delete,MemoryChunk,0x4c9da80000
delete,MemoryChunk,0x72d1f00000
delete,MemoryChunk,0x98fb2c0000
delete,MemoryChunk,0x1a86f5c0000
delete,MemoryChunk,0x33dbc200000
delete,MemoryChunk,0x28a0ec80000
delete,MemoryChunk,0x393f7b40000
delete,MemoryChunk,0x26274a00000
delete,MemoryChunk,0x2ccbd00000
delete,MemoryChunk,0x2639eb80000
delete,MemoryChunk,0x17b89140000
delete,MemoryChunk,0x24089f80000
delete,MemoryChunk,0x10a1b900000
delete,MemoryChunk,0x1f8a84c0000
delete,MemoryChunk,0x1d26dbc0000
delete,MemoryChunk,0xb893900000
delete,MemoryChunk,0x1c125b40000
delete,MemoryChunk,0x13baa9c0000
delete,MemoryChunk,0x3d1a5a40000
delete,MemoryChunk,0x223cc400000
delete,MemoryChunk,0x3d3f6e40000
delete,MemoryChunk,0x1c7b0640000
delete,MemoryChunk,0x20a39a00000
delete,MemoryChunk,0x262c1400000
delete,MemoryChunk,0x2a8df640000
delete,MemoryChunk,0x123b5180000
delete,MemoryChunk,0x7c41600000
delete,MemoryChunk,0x1fc58d00000
delete,MemoryChunk,0x29a44c80000
delete,MemoryChunk,0x3a0971c0000
delete,MemoryChunk,0x21d7d5c0000
delete,MemoryChunk,0x19163c00000
delete,MemoryChunk,0x3b478200000
delete,MemoryChunk,0x272e3100000
delete,MemoryChunk,0x28b20200000
delete,MemoryChunk,0x918a340000
delete,MemoryChunk,0x1c7d6c80000
delete,MemoryChunk,0x258c6140000
delete,MemoryChunk,0x315a9040000
delete,MemoryChunk,0x223819c0000
delete,MemoryChunk,0x355ba2c0000
delete,MemoryChunk,0xd496980000
delete,MemoryChunk,0x391c6d80000
delete,MemoryChunk,0x15c18880000
delete,MemoryChunk,0x29b79100000
delete,MemoryChunk,0x14ad7700000
delete,MemoryChunk,0xe6d2100000
delete,MemoryChunk,0x5321a80000
delete,MemoryChunk,0x24c98240000
delete,MemoryChunk,0x2f207f40000
delete,MemoryChunk,0x2245b9c0000
delete,MemoryChunk,0xbdd0400000
delete,MemoryChunk,0x27d036c0000
delete,MemoryChunk,0x297b6f00000
delete,MemoryChunk,0x2a6f01c0000
delete,MemoryChunk,0x2019b900000
delete,MemoryChunk,0x1299e700000
delete,MemoryChunk,0x3517f40000
delete,MemoryChunk,0xa7d7280000
delete,MemoryChunk,0x4241200000
delete,MemoryChunk,0x22ec300000
delete,MemoryChunk,0x3ea8f2c0000
tick,0x7ff6cbec66f4,7971573,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a1190,7986557,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x0,8002611,0,0x0,5
tick,0x7ff66c292d70,8018589,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49e1ae,8034570,0,0x0,0,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6bb92,8050661,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe95557,8066618,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,8082602,0,0x0,1
tick,0x7ff6cbebb74e,8098578,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf177bd,8113595,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2405b6c0000,262144
new,MemoryChunk,0x34261240000,262144
new,MemoryChunk,0x2abab400000,262144
new,MemoryChunk,0x273b7c40000,262144
tick,0x7ff6cbf20e71,8128540,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3a0f,8144540,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1f5a2c0000,262144
new,MemoryChunk,0x1e31cf40000,262144
new,MemoryChunk,0x35d51e00000,262144
new,MemoryChunk,0x298ed880000,262144
new,MemoryChunk,0x168ca00000,262144
new,MemoryChunk,0x1d8ef040000,262144
new,MemoryChunk,0x211d6880000,262144
new,MemoryChunk,0x1735a4c0000,262144
new,MemoryChunk,0x82d91c0000,262144
new,MemoryChunk,0x1ed70f40000,262144
tick,0x7ff6cbdaeea5,8160626,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b8fb440000,262144
new,MemoryChunk,0x3ddbad40000,262144
new,MemoryChunk,0x1a6d2040000,262144
new,MemoryChunk,0x2c8ea180000,262144
new,MemoryChunk,0x327e8740000,262144
new,MemoryChunk,0x36145a00000,262144
new,MemoryChunk,0x218d8a40000,262144
new,MemoryChunk,0x28220180000,262144
new,MemoryChunk,0x2ef21300000,262144
tick,0x7ff6cbec460c,8176569,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497909,8192591,0,0x0,0,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2fb36c80000,262144
new,MemoryChunk,0x25a16480000,262144
new,MemoryChunk,0x35149ac0000,262144
new,MemoryChunk,0x13c7e180000,262144
new,MemoryChunk,0x19ddf640000,262144
new,MemoryChunk,0xb0a3e00000,262144
new,MemoryChunk,0x236b3340000,262144
new,MemoryChunk,0xf855040000,262144
new,MemoryChunk,0xe14bf00000,262144
tick,0x7ff66c2dc63c,8208574,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x23c7b540000,262144
new,MemoryChunk,0x2716a1c0000,262144
new,MemoryChunk,0x3032abc0000,262144
new,MemoryChunk,0x1bc3e540000,262144
new,MemoryChunk,0x390ef400000,262144
new,MemoryChunk,0xea410c0000,262144
new,MemoryChunk,0x85099c0000,262144
new,MemoryChunk,0x14085740000,262144
new,MemoryChunk,0x18929640000,262144
new,MemoryChunk,0xf2a7d40000,262144
new,MemoryChunk,0x3e6624c0000,262144
new,MemoryChunk,0x3fcac5c0000,262144
tick,0x7ff863b9b7a2,8224584,0,0x0,1
tick,0x7ff64c497844,8240582,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35690200000,262144
new,MemoryChunk,0x231e0780000,262144
new,MemoryChunk,0x13ece380000,262144
new,MemoryChunk,0x2e7d1840000,262144
new,MemoryChunk,0x49dd440000,262144
new,MemoryChunk,0x3863ce40000,262144
new,MemoryChunk,0x27b1d500000,262144
new,MemoryChunk,0x72f3e00000,262144
tick,0x7ff6cbec5eac,8256574,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x18cb6a80000,262144
new,MemoryChunk,0x5dfecc0000,262144
new,MemoryChunk,0x3bc18080000,262144
new,MemoryChunk,0x64f4b40000,262144
new,MemoryChunk,0x15b55ac0000,262144
new,MemoryChunk,0x10cb9200000,262144
new,MemoryChunk,0x1937ef00000,262144
new,MemoryChunk,0x32088580000,262144
tick,0x7ff6cc06d7a9,8272731,0,0x0,1
new,MemoryChunk,0x10440a40000,262144
tick,0x7ff64c49fe17,8288603,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x15539a80000,262144
new,MemoryChunk,0x3ef6e880000,262144
new,MemoryChunk,0x43065c0000,262144
new,MemoryChunk,0x264cfa80000,262144
new,MemoryChunk,0x2fd4ddc0000,262144
new,MemoryChunk,0x30ba80000,262144
new,MemoryChunk,0x39c4c580000,262144
new,MemoryChunk,0x110ff6c0000,262144
new,MemoryChunk,0x209920c0000,262144
tick,0x7ff6cbec465b,8304570,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3abcd140000,262144
new,MemoryChunk,0x20719bc0000,262144
new,MemoryChunk,0x3baef100000,262144
new,MemoryChunk,0x2a4d2c80000,262144
new,MemoryChunk,0x16102c0000,262144
new,MemoryChunk,0x1d6e400000,262144
tick,0x7ff6cc06c1d1,8320605,0,0x0,1
new,MemoryChunk,0x105904c0000,262144
new,MemoryChunk,0x2cce8500000,262144
new,MemoryChunk,0x254da680000,262144
new,MemoryChunk,0x23d8a0c0000,262144
new,MemoryChunk,0x2e462780000,262144
delete,MemoryChunk,0x36e950c0000
delete,MemoryChunk,0xe08a000000
delete,MemoryChunk,0x5cfb80000
delete,MemoryChunk,0x3140eb80000
delete,MemoryChunk,0x2eee5980000
delete,MemoryChunk,0x34261240000
delete,MemoryChunk,0x273b7c40000
delete,MemoryChunk,0x2abab400000
delete,MemoryChunk,0x259cd440000
delete,MemoryChunk,0x2405b6c0000
delete,MemoryChunk,0x35d51e00000
delete,MemoryChunk,0x1ed70f40000
delete,MemoryChunk,0x1e31cf40000
delete,MemoryChunk,0x298ed880000
delete,MemoryChunk,0x168ca00000
delete,MemoryChunk,0x1735a4c0000
delete,MemoryChunk,0x82d91c0000
delete,MemoryChunk,0x211d6880000
delete,MemoryChunk,0x36145a00000
delete,MemoryChunk,0x1b8fb440000
delete,MemoryChunk,0x1a6d2040000
delete,MemoryChunk,0x2c8ea180000
delete,MemoryChunk,0xb0a3e00000
delete,MemoryChunk,0x25a16480000
delete,MemoryChunk,0x19ddf640000
delete,MemoryChunk,0x2fb36c80000
delete,MemoryChunk,0x13c7e180000
delete,MemoryChunk,0x236b3340000
delete,MemoryChunk,0xe14bf00000
delete,MemoryChunk,0x23c7b540000
delete,MemoryChunk,0x2716a1c0000
delete,MemoryChunk,0x390ef400000
delete,MemoryChunk,0x14085740000
delete,MemoryChunk,0x1bc3e540000
delete,MemoryChunk,0x1d8ef040000
delete,MemoryChunk,0x2ef21300000
delete,MemoryChunk,0xea410c0000
delete,MemoryChunk,0x18929640000
delete,MemoryChunk,0x3fcac5c0000
delete,MemoryChunk,0x218d8a40000
delete,MemoryChunk,0x13ece380000
delete,MemoryChunk,0x85099c0000
delete,MemoryChunk,0x28220180000
delete,MemoryChunk,0x2e7d1840000
delete,MemoryChunk,0x72f3e00000
delete,MemoryChunk,0x35690200000
delete,MemoryChunk,0x49dd440000
delete,MemoryChunk,0x3bc18080000
delete,MemoryChunk,0x32088580000
delete,MemoryChunk,0x5dfecc0000
delete,MemoryChunk,0x64f4b40000
delete,MemoryChunk,0x10440a40000
delete,MemoryChunk,0x27b1d500000
delete,MemoryChunk,0x15b55ac0000
delete,MemoryChunk,0x1937ef00000
delete,MemoryChunk,0x264cfa80000
delete,MemoryChunk,0x30ba80000
delete,MemoryChunk,0x110ff6c0000
delete,MemoryChunk,0x10cb9200000
delete,MemoryChunk,0xf855040000
delete,MemoryChunk,0x3863ce40000
delete,MemoryChunk,0x231e0780000
delete,MemoryChunk,0x327e8740000
delete,MemoryChunk,0x3ef6e880000
delete,MemoryChunk,0x2fd4ddc0000
delete,MemoryChunk,0x209920c0000
delete,MemoryChunk,0x43065c0000
delete,MemoryChunk,0x3abcd140000
delete,MemoryChunk,0x2a4d2c80000
delete,MemoryChunk,0x16102c0000
delete,MemoryChunk,0xf2a7d40000
delete,MemoryChunk,0x105904c0000
delete,MemoryChunk,0x39c4c580000
delete,MemoryChunk,0x3baef100000
delete,MemoryChunk,0x1d6e400000
delete,MemoryChunk,0x2cce8500000
delete,MemoryChunk,0x2e462780000
delete,MemoryChunk,0x23d8a0c0000
delete,MemoryChunk,0x254da680000
tick,0x7ff66c2dbf85,8336615,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c496526,8352588,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ffc9d,8368623,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a0c33,8384626,0,0x0,0,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0279,8400584,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebba30,8415595,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc384,8431588,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,8447640,0,0x0,1
tick,0x7ff64c4950c8,8463611,0,0x0,0,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c289144,8479606,0,0x0,0,0x7ff64c4968d3,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35513240000,262144
tick,0x7ff6cbebba30,8495602,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0279,8511669,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3913ad00000,262144
new,MemoryChunk,0x362a0100000,262144
new,MemoryChunk,0x78bebc0000,262144
new,MemoryChunk,0x10f5b140000,262144
new,MemoryChunk,0x3b4fb700000,262144
new,MemoryChunk,0x230b5680000,262144
new,MemoryChunk,0x21811ec0000,262144
new,MemoryChunk,0x14740d00000,262144
new,MemoryChunk,0xa0d2280000,262144
new,MemoryChunk,0xa324f00000,262144
tick,0x7ff6cbf1c3a4,8527604,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0fd1f4,8543604,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35497880000,262144
new,MemoryChunk,0x16256500000,262144
new,MemoryChunk,0x3d827700000,262144
new,MemoryChunk,0x204b6ac0000,262144
new,MemoryChunk,0x2cf37680000,262144
new,MemoryChunk,0x264a9400000,262144
new,MemoryChunk,0x36ac1340000,262144
new,MemoryChunk,0x2c30e100000,262144
new,MemoryChunk,0xd2026c0000,262144
tick,0x7ff66c241b40,8559666,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5224540000,262144
new,MemoryChunk,0x134e9600000,262144
new,MemoryChunk,0x1e7dd880000,262144
new,MemoryChunk,0x3d612e40000,262144
new,MemoryChunk,0x39e7ca00000,262144
new,MemoryChunk,0x3ed3cac0000,262144
new,MemoryChunk,0x1f4b16c0000,262144
new,MemoryChunk,0x1e1c3000000,262144
new,MemoryChunk,0x2cb69840000,262144
tick,0x7ff66c2dc0a7,8575586,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3377b6c0000,262144
new,MemoryChunk,0xc2910c0000,262144
new,MemoryChunk,0x3e327b80000,262144
tick,0x7ff6cc06dcd9,8591516,0,0x0,1
new,MemoryChunk,0x25906c00000,262144
new,MemoryChunk,0x23ae6500000,262144
new,MemoryChunk,0x21006d40000,262144
new,MemoryChunk,0x2daf9c80000,262144
new,MemoryChunk,0xe5b2580000,262144
tick,0x7ff6cbe93806,8607547,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x21370f00000,262144
new,MemoryChunk,0x3f6c7a40000,262144
new,MemoryChunk,0x32b52dc0000,262144
new,MemoryChunk,0x13fee940000,262144
new,MemoryChunk,0x2134c700000,262144
new,MemoryChunk,0x2d90ad80000,262144
new,MemoryChunk,0x2f448b00000,262144
new,MemoryChunk,0x1179a040000,262144
tick,0x7ff6cbeb4dc7,8623569,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1801ae40000,262144
tick,0x7ff64c495ee2,8639603,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x280c3f80000,262144
new,MemoryChunk,0xc598900000,262144
new,MemoryChunk,0x1d860600000,262144
new,MemoryChunk,0x27c48a00000,262144
new,MemoryChunk,0x4425580000,262144
new,MemoryChunk,0x27749000000,262144
new,MemoryChunk,0x15a89cc0000,262144
new,MemoryChunk,0x39907740000,262144
new,MemoryChunk,0x3df13e00000,262144
tick,0x7ff66c2dc0c1,8655519,0,0x0,0,0x7ff64c4a0dd4,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1e5e2ec0000,262144
new,MemoryChunk,0x239ccc40000,262144
new,MemoryChunk,0xee98540000,262144
new,MemoryChunk,0x22c830c0000,262144
new,MemoryChunk,0x2669b6c0000,262144
new,MemoryChunk,0x3b624e80000,262144
new,MemoryChunk,0xf913f80000,262144
new,MemoryChunk,0x118d8100000,262144
tick,0x7ff66c332abc,8671526,0,0x0,0,0x7ff64c49797c,0x7ff64c49e7cc,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d200,8686522,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b047180000,262144
new,MemoryChunk,0xeb22a00000,262144
new,MemoryChunk,0x249dbec0000,262144
new,MemoryChunk,0x1d21a6c0000,262144
new,MemoryChunk,0x1e34da80000,262144
new,MemoryChunk,0x2f820b00000,262144
new,MemoryChunk,0x2477a800000,262144
new,MemoryChunk,0x2c83e300000,262144
tick,0x7ff6cbec2a3e,8702545,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x31c674c0000,262144
new,MemoryChunk,0x3fff7c40000,262144
new,MemoryChunk,0x30f3a3c0000,262144
new,MemoryChunk,0xf045080000,262144
new,MemoryChunk,0x2436ef00000,262144
new,MemoryChunk,0xaaf4440000,262144
new,MemoryChunk,0x141f0bc0000,262144
tick,0x7ff6cc0736e2,8718595,0,0x0,1
delete,MemoryChunk,0x1f5a2c0000
delete,MemoryChunk,0x35149ac0000
delete,MemoryChunk,0x3ddbad40000
delete,MemoryChunk,0x3032abc0000
delete,MemoryChunk,0x20719bc0000
delete,MemoryChunk,0x18cb6a80000
delete,MemoryChunk,0x3913ad00000
delete,MemoryChunk,0xa0d2280000
delete,MemoryChunk,0x362a0100000
delete,MemoryChunk,0x21811ec0000
delete,MemoryChunk,0x78bebc0000
delete,MemoryChunk,0x230b5680000
delete,MemoryChunk,0xa324f00000
delete,MemoryChunk,0x3d827700000
delete,MemoryChunk,0x264a9400000
delete,MemoryChunk,0x35497880000
delete,MemoryChunk,0x204b6ac0000
delete,MemoryChunk,0xd2026c0000
delete,MemoryChunk,0x1e7dd880000
delete,MemoryChunk,0x36ac1340000
delete,MemoryChunk,0x134e9600000
delete,MemoryChunk,0x5224540000
delete,MemoryChunk,0x14740d00000
delete,MemoryChunk,0x1e1c3000000
delete,MemoryChunk,0x2cb69840000
delete,MemoryChunk,0xc2910c0000
delete,MemoryChunk,0x2c30e100000
delete,MemoryChunk,0x23ae6500000
delete,MemoryChunk,0x2daf9c80000
delete,MemoryChunk,0x3377b6c0000
delete,MemoryChunk,0xe5b2580000
delete,MemoryChunk,0x39e7ca00000
delete,MemoryChunk,0x13fee940000
delete,MemoryChunk,0x32b52dc0000
delete,MemoryChunk,0x2d90ad80000
delete,MemoryChunk,0x25906c00000
delete,MemoryChunk,0x3f6c7a40000
delete,MemoryChunk,0x1179a040000
delete,MemoryChunk,0x280c3f80000
delete,MemoryChunk,0x27749000000
delete,MemoryChunk,0xc598900000
delete,MemoryChunk,0x4425580000
delete,MemoryChunk,0x1d860600000
delete,MemoryChunk,0x3df13e00000
delete,MemoryChunk,0x15a89cc0000
delete,MemoryChunk,0x239ccc40000
delete,MemoryChunk,0x22c830c0000
delete,MemoryChunk,0x118d8100000
delete,MemoryChunk,0x3b624e80000
delete,MemoryChunk,0x39907740000
delete,MemoryChunk,0x2f820b00000
delete,MemoryChunk,0x1b047180000
delete,MemoryChunk,0x1d21a6c0000
delete,MemoryChunk,0x2c83e300000
delete,MemoryChunk,0x27c48a00000
delete,MemoryChunk,0x1e5e2ec0000
delete,MemoryChunk,0xeb22a00000
delete,MemoryChunk,0x1e34da80000
delete,MemoryChunk,0x249dbec0000
delete,MemoryChunk,0xf045080000
delete,MemoryChunk,0xaaf4440000
delete,MemoryChunk,0x3fff7c40000
delete,MemoryChunk,0x2436ef00000
delete,MemoryChunk,0x1801ae40000
delete,MemoryChunk,0x30f3a3c0000
delete,MemoryChunk,0x141f0bc0000
delete,MemoryChunk,0x31c674c0000
tick,0x7ff6cbec7442,8734544,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf85,8750521,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c479a9a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc447,8766557,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0e0,8782568,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb2f3,8798576,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc389,8814599,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf700a4,8829758,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dab01,8845536,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ece0f,8861545,0,0x0,0,0x7ff6cbdaf070,0x7ff64c479f66,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc7ff,8877605,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9a3,8893617,0,0x0,1
tick,0x7ff6cbe9b724,8909566,0,0x0,0,0x7ff6cbda9010,0x7ff64c49e2af,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc7b8,8925570,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc1e8,8941627,0,0x0,0,0x7ff64c497a46,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c370362,8957631,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a435,8973645,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc7aa,8989564,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35fe3a00000,262144
new,MemoryChunk,0x2594b000000,262144
new,MemoryChunk,0x21c740c0000,262144
new,MemoryChunk,0x3f632e80000,262144
new,MemoryChunk,0x1024600000,262144
new,MemoryChunk,0x8ccc040000,262144
new,MemoryChunk,0x377374c0000,262144
tick,0x7ff6cbdac9d9,9005601,0,0x0,0,0x7ff6cc054640,0x7ff64c49e82a,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c499e09,9021586,0,0x0,0,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2a73a3c0000,262144
new,MemoryChunk,0x3a8b9980000,262144
new,MemoryChunk,0x3becb040000,262144
new,MemoryChunk,0x1329d740000,262144
new,MemoryChunk,0x2efdf400000,262144
new,MemoryChunk,0x975b780000,262144
new,MemoryChunk,0x31ca6840000,262144
new,MemoryChunk,0x2f29ca00000,262144
tick,0x7ff64c49604e,9037572,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x19890780000,262144
new,MemoryChunk,0x23d7ecc0000,262144
new,MemoryChunk,0x37453740000,262144
new,MemoryChunk,0x9560e80000,262144
new,MemoryChunk,0x36e65f40000,262144
new,MemoryChunk,0x1ec9a680000,262144
tick,0x7ff6cbc10c58,9053584,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497844,9069555,0,0x0,0,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1a3ad140000,262144
new,MemoryChunk,0x26aa1fc0000,262144
new,MemoryChunk,0x9f47300000,262144
new,MemoryChunk,0x3fbf4dc0000,262144
new,MemoryChunk,0x3fc3bf00000,262144
new,MemoryChunk,0x1d0aa00000,262144
new,MemoryChunk,0x2c0fac40000,262144
tick,0x7ff66c28bb83,9085575,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49077c,0x7ff64c49e5f4,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3020a700000,262144
new,MemoryChunk,0x2feceac0000,262144
new,MemoryChunk,0x3ec46cc0000,262144
new,MemoryChunk,0x28a4580000,262144
new,MemoryChunk,0x3baec5c0000,262144
tick,0x7ff6cc06cb6e,9101560,0,0x0,1
new,MemoryChunk,0x2afd2540000,262144
tick,0x7ff6cbda8dd9,9117592,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2f3a18c0000,262144
new,MemoryChunk,0x12b69a80000,262144
new,MemoryChunk,0xf12e840000,262144
new,MemoryChunk,0x3b38ebc0000,262144
new,MemoryChunk,0x138db740000,262144
new,MemoryChunk,0x3fd2440000,262144
new,MemoryChunk,0x124d3380000,262144
new,MemoryChunk,0xc7ec480000,262144
tick,0x7ff6cc0ffc9d,9133578,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49e26c,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1d9fac00000,262144
new,MemoryChunk,0x3d191800000,262144
new,MemoryChunk,0x2e541880000,262144
new,MemoryChunk,0x5245680000,262144
new,MemoryChunk,0xcb3aa40000,262144
new,MemoryChunk,0x148f5680000,262144
tick,0x7ff64c4a0822,9149553,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x38d6c8c0000,262144
new,MemoryChunk,0x1262ee80000,262144
tick,0x7ff863b9b8a4,9165738,0,0x0,1
new,MemoryChunk,0x34dbe700000,262144
new,MemoryChunk,0xc2df000000,262144
new,MemoryChunk,0xb900100000,262144
new,MemoryChunk,0x18e619c0000,262144
new,MemoryChunk,0x5be39c0000,262144
new,MemoryChunk,0x38a9ff80000,262144
new,MemoryChunk,0x2bddc0000,262144
tick,0x7ff66c288bd8,9181578,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49e92b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x6d67bc0000,806912
code-creation,JS,13,9190730,0x7ff64c49b980,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c49b980,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
tick,0x7ff6cbcc638a,9197576,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49ba17,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x27a6bb80000,262144
new,MemoryChunk,0x828680000,262144
new,MemoryChunk,0x1748be00000,262144
new,MemoryChunk,0x230fadc0000,262144
new,MemoryChunk,0x1ce75840000,262144
delete,MemoryChunk,0x1a3ef500000
delete,MemoryChunk,0x2f448b00000
delete,MemoryChunk,0xf913f80000
delete,MemoryChunk,0x2c6dc2c0000
delete,MemoryChunk,0xee98540000
delete,MemoryChunk,0x3e327b80000
delete,MemoryChunk,0x2594b000000
delete,MemoryChunk,0x377374c0000
delete,MemoryChunk,0x21c740c0000
delete,MemoryChunk,0x3d612e40000
delete,MemoryChunk,0x20af3980000
delete,MemoryChunk,0x2669b6c0000
delete,MemoryChunk,0x16256500000
delete,MemoryChunk,0x35fe3a00000
delete,MemoryChunk,0x3f632e80000
delete,MemoryChunk,0x2a73a3c0000
delete,MemoryChunk,0x3a8b9980000
delete,MemoryChunk,0x1329d740000
delete,MemoryChunk,0x2efdf400000
delete,MemoryChunk,0x8ccc040000
delete,MemoryChunk,0x23d7ecc0000
delete,MemoryChunk,0x19890780000
delete,MemoryChunk,0x31ca6840000
delete,MemoryChunk,0x3b4fb700000
delete,MemoryChunk,0x1ec9a680000
delete,MemoryChunk,0x975b780000
delete,MemoryChunk,0x37453740000
delete,MemoryChunk,0x9f47300000
delete,MemoryChunk,0x1a3ad140000
delete,MemoryChunk,0x26aa1fc0000
delete,MemoryChunk,0x3ec46cc0000
delete,MemoryChunk,0x3020a700000
delete,MemoryChunk,0x28a4580000
delete,MemoryChunk,0x3fc3bf00000
delete,MemoryChunk,0x2f3a18c0000
delete,MemoryChunk,0x2feceac0000
delete,MemoryChunk,0xc7ec480000
delete,MemoryChunk,0x124d3380000
delete,MemoryChunk,0xf12e840000
delete,MemoryChunk,0xcb3aa40000
delete,MemoryChunk,0x3d191800000
delete,MemoryChunk,0x5245680000
delete,MemoryChunk,0x3fd2440000
delete,MemoryChunk,0x138db740000
delete,MemoryChunk,0x148f5680000
delete,MemoryChunk,0x1d9fac00000
delete,MemoryChunk,0x38d6c8c0000
delete,MemoryChunk,0x34dbe700000
delete,MemoryChunk,0xb900100000
delete,MemoryChunk,0x38a9ff80000
delete,MemoryChunk,0x2bddc0000
delete,MemoryChunk,0x1748be00000
delete,MemoryChunk,0x1262ee80000
delete,MemoryChunk,0x828680000
delete,MemoryChunk,0x1ce75840000
delete,MemoryChunk,0x5be39c0000
delete,MemoryChunk,0x230fadc0000
tick,0x7ff863b990b6,9213579,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49ba17,0x7ff6cc351d3c,0x65ef42f6c,0x65ef4221f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,9229368,0x7ff64c49bbc0,208,get value file:///C:/coding/soodocode/build/statements.js:845:38,0x5c3c41940,*
code-source-info,0x7ff64c49bbc0,113,43442,43458,C0O43442C35O43447C52O43456C78O43442C140O43447,,
tick,0x7ff66c32094e,9229723,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,9231150,0x7ff64c49bcc0,716,set value file:///C:/coding/soodocode/build/runtime.js:133:38,0x5c3c42d50,*
code-source-info,0x7ff64c49bcc0,111,8392,8430,C0O8392C43O8400C64O8409C102O8415C115O8422C242O8429C275O8392C321O8422C531O8415C577O8400,,
tick,0x7ff6cbec465b,9245591,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a57e,9261570,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebb74c,9277587,0,0x0,0,0x7ff6cbda8d20,0x7ff64c47a156,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec29c4,9293615,0,0x0,0,0x7ff6cbda8d20,0x7ff64c47a156,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3a2f,9309583,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ffc9d,9325591,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,9337751,0x7ff64c49bfc0,1972,runBlock file:///C:/coding/soodocode/build/statements.js:828:17,0x2c01bf45fd0,*
code-source-info,0x7ff64c49bfc0,113,42480,43738,C0O42480C60O43047C215O43727C261O43062C305O43059C336O43047C373O43109C410O43123C451O43133C623O43171C660O43208C688O43240C802O43247C868O43290C876O43374C924O43396C1278O43109C1324O43668C1403O43714C1414O43025C1439O43737C1472O43714C1474O42480C1627O43668C1683O43025C1772O43374,,
tick,0x7ff6cc06c1d1,9341650,0,0x0,1
tick,0x7ff6cbe94c37,9357578,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec38eb,9373657,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06d7a9,9389509,0,0x0,1
tick,0x7ff6cbe6dad5,9405454,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4933a5,9421416,0,0x0,0,0x7ff64c496901,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebc26f,9437468,0,0x0,0,0x7ff6cbda9010,0x7ff64c49c480,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebba30,9453441,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xb9aec0000,262144
new,MemoryChunk,0x59ceec0000,262144
new,MemoryChunk,0x10773740000,262144
new,MemoryChunk,0x28b6f800000,262144
new,MemoryChunk,0x1f072b00000,262144
tick,0x7ff6cbebcd4c,9469456,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a435,9485452,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x299d8b80000,262144
new,MemoryChunk,0x2dac0500000,262144
new,MemoryChunk,0x34b54300000,262144
new,MemoryChunk,0x24d79ec0000,262144
new,MemoryChunk,0x359e4b00000,262144
new,MemoryChunk,0x26c8a840000,262144
new,MemoryChunk,0x2ebcdc0000,262144
new,MemoryChunk,0x18472d40000,262144
new,MemoryChunk,0x25ef7d40000,262144
new,MemoryChunk,0x2bf3180000,262144
tick,0x7ff64c49c338,9500425,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x922b8c0000,262144
new,MemoryChunk,0x26825e00000,262144
new,MemoryChunk,0x227f0d40000,262144
new,MemoryChunk,0x5a8380000,262144
new,MemoryChunk,0x1e2bbd00000,262144
new,MemoryChunk,0x1c5db100000,262144
new,MemoryChunk,0x1de6c2c0000,262144
new,MemoryChunk,0x1d0b8140000,262144
new,MemoryChunk,0x1e8a28c0000,262144
new,MemoryChunk,0x3324e800000,262144
new,MemoryChunk,0x376ecd40000,262144
tick,0x7ff863c2ed55,9515492,0,0x0,1
tick,0x7ff66c2dab01,9531439,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x22195c0000,262144
new,MemoryChunk,0x191d9840000,262144
new,MemoryChunk,0x8ce6180000,262144
new,MemoryChunk,0x19d7d900000,262144
new,MemoryChunk,0x2735f80000,262144
new,MemoryChunk,0x1e39b840000,262144
new,MemoryChunk,0x33f60040000,262144
new,MemoryChunk,0x3fbcb900000,262144
new,MemoryChunk,0x1a693440000,262144
new,MemoryChunk,0x308c9ac0000,262144
tick,0x7ff6cbf1309c,9547473,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x307634c0000,262144
new,MemoryChunk,0x1a745100000,262144
new,MemoryChunk,0x18d363c0000,262144
new,MemoryChunk,0x2d1cf840000,262144
new,MemoryChunk,0x35a7c380000,262144
new,MemoryChunk,0x7260040000,262144
new,MemoryChunk,0x3df1ba80000,262144
new,MemoryChunk,0x2c1051c0000,262144
new,MemoryChunk,0x224102c0000,262144
new,MemoryChunk,0x3f6428c0000,262144
tick,0x7ff64c49fe1c,9563447,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec2a4d,9579487,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x34f818c0000,262144
new,MemoryChunk,0x2f69bfc0000,262144
new,MemoryChunk,0x34324a00000,262144
new,MemoryChunk,0x283659c0000,262144
new,MemoryChunk,0x23b34e00000,262144
new,MemoryChunk,0x16154940000,262144
new,MemoryChunk,0x5abcf00000,262144
new,MemoryChunk,0xaaae2c0000,262144
new,MemoryChunk,0x3cce2540000,262144
new,MemoryChunk,0x18e97440000,262144
delete,MemoryChunk,0x48b1380000
delete,MemoryChunk,0x34ff5940000
delete,MemoryChunk,0x2cf37680000
delete,MemoryChunk,0x1024600000
delete,MemoryChunk,0x3b38ebc0000
delete,MemoryChunk,0x2c0fac40000
delete,MemoryChunk,0x36e65f40000
delete,MemoryChunk,0x2134c700000
delete,MemoryChunk,0x15539a80000
delete,MemoryChunk,0x2afd2540000
delete,MemoryChunk,0x2477a800000
delete,MemoryChunk,0x3baec5c0000
delete,MemoryChunk,0x12b69a80000
delete,MemoryChunk,0x3e6624c0000
delete,MemoryChunk,0x10773740000
delete,MemoryChunk,0xc2df000000
delete,MemoryChunk,0x13462180000
delete,MemoryChunk,0x202b3d40000
delete,MemoryChunk,0x21370f00000
delete,MemoryChunk,0x17652100000
delete,MemoryChunk,0x3fbf4dc0000
delete,MemoryChunk,0x3ed3cac0000
delete,MemoryChunk,0x27a6bb80000
delete,MemoryChunk,0x24d79ec0000
delete,MemoryChunk,0x28b6f800000
delete,MemoryChunk,0x2dac0500000
delete,MemoryChunk,0x359e4b00000
delete,MemoryChunk,0x25ef7d40000
delete,MemoryChunk,0x35513240000
delete,MemoryChunk,0x34b54300000
delete,MemoryChunk,0x299d8b80000
delete,MemoryChunk,0x26c8a840000
delete,MemoryChunk,0x18472d40000
delete,MemoryChunk,0x5a8380000
delete,MemoryChunk,0x1c5db100000
delete,MemoryChunk,0x2ebcdc0000
delete,MemoryChunk,0x227f0d40000
delete,MemoryChunk,0x1de6c2c0000
delete,MemoryChunk,0x26825e00000
delete,MemoryChunk,0x59ceec0000
delete,MemoryChunk,0x1e2bbd00000
delete,MemoryChunk,0x376ecd40000
delete,MemoryChunk,0x1e8a28c0000
delete,MemoryChunk,0x22195c0000
delete,MemoryChunk,0x1e39b840000
delete,MemoryChunk,0x308c9ac0000
delete,MemoryChunk,0x19d7d900000
delete,MemoryChunk,0x8ce6180000
delete,MemoryChunk,0x2735f80000
delete,MemoryChunk,0x2bf3180000
delete,MemoryChunk,0x191d9840000
delete,MemoryChunk,0x3becb040000
delete,MemoryChunk,0x9560e80000
delete,MemoryChunk,0x922b8c0000
delete,MemoryChunk,0x18d363c0000
delete,MemoryChunk,0x3df1ba80000
delete,MemoryChunk,0x307634c0000
delete,MemoryChunk,0x35a7c380000
delete,MemoryChunk,0x2c1051c0000
delete,MemoryChunk,0x1a745100000
delete,MemoryChunk,0x2d1cf840000
delete,MemoryChunk,0x7260040000
delete,MemoryChunk,0x224102c0000
delete,MemoryChunk,0x1d0b8140000
delete,MemoryChunk,0x34f818c0000
delete,MemoryChunk,0x3fbcb900000
delete,MemoryChunk,0x34324a00000
delete,MemoryChunk,0x1a693440000
delete,MemoryChunk,0x16154940000
delete,MemoryChunk,0x33f60040000
delete,MemoryChunk,0x2f69bfc0000
delete,MemoryChunk,0x1f072b00000
delete,MemoryChunk,0x23b34e00000
delete,MemoryChunk,0x2e541880000
delete,MemoryChunk,0x5abcf00000
delete,MemoryChunk,0xb9aec0000
delete,MemoryChunk,0x18e97440000
delete,MemoryChunk,0x3324e800000
delete,MemoryChunk,0xaaae2c0000
delete,MemoryChunk,0x2f29ca00000
delete,MemoryChunk,0x283659c0000
delete,MemoryChunk,0x3cce2540000
tick,0x7ff64c495e4c,9595440,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc14f6d9,9611484,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177cc,9627421,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06e3f0,9643473,0,0x0,1
tick,0x7ff64c496041,9659427,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec6715,9675461,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fa05,9691440,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241bb7,9707432,0,0x0,0,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c495606,9723481,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c4799b5,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,9735424,0x7ff64c4a1e40,7292,runBlock file:///C:/coding/soodocode/build/statements.js:828:17,0x2c01bf45fd0,*
code-source-info,0x7ff64c4a1ex2c01bf45f80S0x2c01bf45860S0x2c01bf63718
tick,0x7ff6cbf1c263,9739434,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3bff8ac0000,262144
new,MemoryChunk,0x20a8c300000,262144
new,MemoryChunk,0x24f145c0000,262144
new,MemoryChunk,0xf46d740000,262144
new,MemoryChunk,0xf337580000,262144
tick,0x7ff66c2881da,9755446,0,0x0,0,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x6687140000,262144
new,MemoryChunk,0x3910d540000,262144
new,MemoryChunk,0x5018180000,262144
new,MemoryChunk,0x2d88a9c0000,262144
new,MemoryChunk,0x12e32600000,262144
new,MemoryChunk,0xc0e9200000,262144
new,MemoryChunk,0x1b891e40000,262144
new,MemoryChunk,0x3435440000,262144
new,MemoryChunk,0x2a6bb980000,262144
tick,0x7ff6cbf6f80c,9771442,0,0x0,0,0x7ff6cbda9010,0x7ff64c49c480,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c5eb,9786452,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3e9eb980000,262144
new,MemoryChunk,0x2115c0000,262144
new,MemoryChunk,0x368ba500000,262144
new,MemoryChunk,0x163f9a40000,262144
new,MemoryChunk,0x1914e040000,262144
new,MemoryChunk,0x1fca280000,262144
new,MemoryChunk,0x2ff5a540000,262144
new,MemoryChunk,0x222d1800000,262144
new,MemoryChunk,0x3ba81740000,262144
new,MemoryChunk,0x2d489f80000,262144
new,MemoryChunk,0x37489c00000,262144
new,MemoryChunk,0x8738c00000,262144
tick,0x7ff64c499d56,9801613,0,0x0,0,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2c8ec740000,262144
new,MemoryChunk,0x5ece500000,262144
new,MemoryChunk,0x22f5da40000,262144
new,MemoryChunk,0x3262ed00000,262144
new,MemoryChunk,0xb1bd940000,262144
new,MemoryChunk,0x2dea5a80000,262144
new,MemoryChunk,0x3f837b00000,262144
new,MemoryChunk,0x306dfc80000,262144
tick,0x7ff6cbe9a54a,9817511,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0225,9833468,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x190fd180000,262144
new,MemoryChunk,0x34bba080000,262144
new,MemoryChunk,0x35d1e0c0000,262144
new,MemoryChunk,0x1199040000,262144
new,MemoryChunk,0x1aa35640000,262144
new,MemoryChunk,0x2f76cc0000,262144
new,MemoryChunk,0x201523c0000,262144
new,MemoryChunk,0x203f2d40000,262144
new,MemoryChunk,0x156d3200000,262144
tick,0x7ff6cbf177b9,9849470,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x24a82740000,262144
new,MemoryChunk,0x182798c0000,262144
new,MemoryChunk,0x28e21ec0000,262144
new,MemoryChunk,0x367fdec0000,262144
new,MemoryChunk,0x20408300000,262144
new,MemoryChunk,0x5f9d600000,262144
new,MemoryChunk,0x27c945c0000,262144
new,MemoryChunk,0x7c01300000,262144
new,MemoryChunk,0x28286840000,262144
new,MemoryChunk,0x8ce6500000,262144
new,MemoryChunk,0x341787c0000,262144
tick,0x7ff64c4a1958,9865578,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c496041,9881445,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x197968c0000,262144
new,MemoryChunk,0x18b1f840000,262144
new,MemoryChunk,0x3eb4bb00000,262144
new,MemoryChunk,0xb979840000,262144
new,MemoryChunk,0x1189f880000,262144
new,MemoryChunk,0x22eb3cc0000,262144
new,MemoryChunk,0xb785100000,262144
new,MemoryChunk,0x15b88b80000,262144
new,MemoryChunk,0x99b1600000,262144
new,MemoryChunk,0x2eb0b140000,262144
tick,0x7ff6cbe63796,9897554,0,0x0,0,0x7ff6cbda9010,0x7ff64c49c480,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3deb68c0000,262144
new,MemoryChunk,0x14038440000,262144
new,MemoryChunk,0x306115c0000,262144
new,MemoryChunk,0x3ead3cc0000,262144
new,MemoryChunk,0xfc2fbc0000,262144
new,MemoryChunk,0xaa37bc0000,262144
new,MemoryChunk,0x2e9aa740000,262144
tick,0x7ff6cc06d070,9913493,0,0x0,1
new,MemoryChunk,0x3af8480000,262144
new,MemoryChunk,0xfe8ce80000,262144
new,MemoryChunk,0x24b5a640000,262144
new,MemoryChunk,0xd5b51c0000,262144
tick,0x7ff6cbba9260,9929516,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1589d9c0000,262144
new,MemoryChunk,0x1c5eed40000,262144
new,MemoryChunk,0x2fe183c0000,262144
new,MemoryChunk,0x7773f40000,262144
new,MemoryChunk,0x16702340000,262144
new,MemoryChunk,0xf1d8c40000,262144
new,MemoryChunk,0xd8e0540000,262144
new,MemoryChunk,0x38353100000,262144
delete,MemoryChunk,0x20a8c300000
delete,MemoryChunk,0x3bff8ac0000
delete,MemoryChunk,0xc0e9200000
delete,MemoryChunk,0x12e32600000
delete,MemoryChunk,0x1b891e40000
delete,MemoryChunk,0x3e9eb980000
delete,MemoryChunk,0x368ba500000
delete,MemoryChunk,0x1914e040000
delete,MemoryChunk,0x2115c0000
delete,MemoryChunk,0x37489c00000
delete,MemoryChunk,0x163f9a40000
delete,MemoryChunk,0x1fca280000
delete,MemoryChunk,0x222d1800000
delete,MemoryChunk,0x5ece500000
delete,MemoryChunk,0x2dea5a80000
delete,MemoryChunk,0x2d489f80000
delete,MemoryChunk,0x3262ed00000
delete,MemoryChunk,0x3ba81740000
delete,MemoryChunk,0x22f5da40000
delete,MemoryChunk,0x8738c00000
delete,MemoryChunk,0x2c8ec740000
delete,MemoryChunk,0xf337580000
delete,MemoryChunk,0xb1bd940000
delete,MemoryChunk,0x3f6428c0000
delete,MemoryChunk,0x2ff5a540000
delete,MemoryChunk,0x3435440000
delete,MemoryChunk,0x24f145c0000
delete,MemoryChunk,0x3f837b00000
delete,MemoryChunk,0x190fd180000
delete,MemoryChunk,0x2f76cc0000
delete,MemoryChunk,0x34bba080000
delete,MemoryChunk,0x1aa35640000
delete,MemoryChunk,0x35d1e0c0000
delete,MemoryChunk,0x1199040000
delete,MemoryChunk,0x156d3200000
delete,MemoryChunk,0x24a82740000
delete,MemoryChunk,0x203f2d40000
delete,MemoryChunk,0x182798c0000
delete,MemoryChunk,0x201523c0000
delete,MemoryChunk,0x20408300000
delete,MemoryChunk,0x7c01300000
delete,MemoryChunk,0x28e21ec0000
delete,MemoryChunk,0x5f9d600000
delete,MemoryChunk,0x367fdec0000
delete,MemoryChunk,0x27c945c0000
delete,MemoryChunk,0x28286840000
delete,MemoryChunk,0x1189f880000
delete,MemoryChunk,0xb979840000
delete,MemoryChunk,0x22eb3cc0000
delete,MemoryChunk,0xb785100000
delete,MemoryChunk,0x197968c0000
delete,MemoryChunk,0x3eb4bb00000
delete,MemoryChunk,0xfc2fbc0000
delete,MemoryChunk,0x2e9aa740000
delete,MemoryChunk,0x3deb68c0000
delete,MemoryChunk,0x2eb0b140000
delete,MemoryChunk,0x14038440000
delete,MemoryChunk,0x306115c0000
delete,MemoryChunk,0xaa37bc0000
delete,MemoryChunk,0xfe8ce80000
delete,MemoryChunk,0x15b88b80000
delete,MemoryChunk,0x1c5eed40000
delete,MemoryChunk,0x99b1600000
delete,MemoryChunk,0x3af8480000
delete,MemoryChunk,0x7773f40000
delete,MemoryChunk,0x3ead3cc0000
delete,MemoryChunk,0x18b1f840000
delete,MemoryChunk,0x2fe183c0000
delete,MemoryChunk,0x24b5a640000
delete,MemoryChunk,0x341787c0000
delete,MemoryChunk,0x306dfc80000
delete,MemoryChunk,0xf1d8c40000
delete,MemoryChunk,0x8ce6500000
delete,MemoryChunk,0x1589d9c0000
delete,MemoryChunk,0x38353100000
delete,MemoryChunk,0x16702340000
delete,MemoryChunk,0xd8e0540000
tick,0x7ff66c290e34,9945477,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a12c3,9961525,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c49c4ec,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c47a1c8,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1b823,9977512,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c3702c4,9993474,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c175,10009515,0,0x0,1
tick,0x0,10025452,0,0x0,5
tick,0x7ff6cbe94c37,10041459,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49a2da,10057493,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49bbc4,10073487,0,0x0,0,0x7ff64c4968b6,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c320978,10089506,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2e8d3f80000,262144
new,MemoryChunk,0x12ff5f80000,262144
new,MemoryChunk,0x3bafe740000,262144
new,MemoryChunk,0x1adf9900000,262144
new,MemoryChunk,0x2978d680000,262144
tick,0x7ff863c0d0e4,10105600,0,0x0,1
new,MemoryChunk,0xf76df00000,262144
new,MemoryChunk,0x3c0d3440000,262144
tick,0x7ff6cbea8030,10120492,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x4dd3140000,262144
new,MemoryChunk,0x16db1a00000,262144
new,MemoryChunk,0xfb4b7c0000,262144
new,MemoryChunk,0x1ce8a6c0000,262144
new,MemoryChunk,0x1f330d80000,262144
new,MemoryChunk,0x37432b80000,262144
new,MemoryChunk,0x26696280000,262144
new,MemoryChunk,0x17ee46c0000,262144
new,MemoryChunk,0x1f381e80000,262144
tick,0x7ff6cbeb4e0b,10135488,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2050a000000,262144
new,MemoryChunk,0x284bb7c0000,262144
new,MemoryChunk,0x1d186400000,262144
new,MemoryChunk,0x20398100000,262144
new,MemoryChunk,0x15f14940000,262144
new,MemoryChunk,0xa247480000,262144
new,MemoryChunk,0x2ba54500000,262144
new,MemoryChunk,0xe5b5440000,262144
new,MemoryChunk,0x126d2600000,262144
new,MemoryChunk,0x3c6583c0000,262144
tick,0x7ff64c4a2547,10151479,0,0x0,0,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec38c2,10167534,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x30e41e40000,262144
new,MemoryChunk,0x75108c0000,262144
new,MemoryChunk,0x2a7ced80000,262144
new,MemoryChunk,0x1b172980000,262144
new,MemoryChunk,0x3b9f4880000,262144
new,MemoryChunk,0x3739d000000,262144
new,MemoryChunk,0x2818c180000,262144
new,MemoryChunk,0xb275740000,262144
new,MemoryChunk,0x8781480000,262144
tick,0x7ff64c495543,10183471,0,0x0,0,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3c0ae6c0000,262144
new,MemoryChunk,0x553f200000,262144
new,MemoryChunk,0x3fabbd00000,262144
new,MemoryChunk,0x2ad5fc0000,262144
new,MemoryChunk,0x27a63e40000,262144
new,MemoryChunk,0x18148200000,262144
new,MemoryChunk,0x3f2e5480000,262144
new,MemoryChunk,0xcbcdc40000,262144
new,MemoryChunk,0x1e297200000,262144
new,MemoryChunk,0x1dcb8680000,262144
tick,0x7ff6cbba9264,10199286,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebcd71,10215309,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x571e100000,262144
new,MemoryChunk,0x1c574780000,262144
new,MemoryChunk,0x1aad9880000,262144
new,MemoryChunk,0x18b3fac0000,262144
new,MemoryChunk,0x3bb0a6c0000,262144
new,MemoryChunk,0x4446940000,262144
new,MemoryChunk,0x1f5c7b80000,262144
new,MemoryChunk,0x21a1f340000,262144
new,MemoryChunk,0x7730980000,262144
new,MemoryChunk,0x5d83940000,262144
tick,0x7ff6cc14fcda,10231325,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2c706100000,262144
new,MemoryChunk,0x809180000,262144
new,MemoryChunk,0x30e4b980000,262144
new,MemoryChunk,0x15be6e40000,262144
new,MemoryChunk,0x14fada80000,262144
new,MemoryChunk,0x3ddde0c0000,262144
new,MemoryChunk,0x1cf9b780000,262144
new,MemoryChunk,0x1d9a59c0000,262144
new,MemoryChunk,0x25b63980000,262144
tick,0x7ff66c242244,10247310,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8b04,10263297,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x36f34480000,262144
new,MemoryChunk,0x12ce74c0000,262144
new,MemoryChunk,0x10d73b40000,262144
new,MemoryChunk,0x3cf48ac0000,262144
new,MemoryChunk,0x1ed5f480000,262144
new,MemoryChunk,0x3cbb5000000,262144
new,MemoryChunk,0x20efd9c0000,262144
new,MemoryChunk,0x389027c0000,262144
new,MemoryChunk,0x29c39800000,262144
new,MemoryChunk,0x354e78c0000,262144
new,MemoryChunk,0x3fb12ec0000,262144
tick,0x7ff66c241c29,10279400,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x25370c00000,262144
new,MemoryChunk,0x17838f40000,262144
new,MemoryChunk,0x7e37fc0000,262144
new,MemoryChunk,0x71f56c0000,262144
new,MemoryChunk,0x331eebc0000,262144
new,MemoryChunk,0x284a3c40000,262144
new,MemoryChunk,0x281c83c0000,262144
new,MemoryChunk,0x2ab38280000,262144
new,MemoryChunk,0x24173d40000,262144
new,MemoryChunk,0x3ca2ec80000,262144
delete,MemoryChunk,0xf46d740000
delete,MemoryChunk,0xd5b51c0000
delete,MemoryChunk,0x2e8d3f80000
delete,MemoryChunk,0x3bafe740000
delete,MemoryChunk,0x2978d680000
delete,MemoryChunk,0x2a6bb980000
delete,MemoryChunk,0x3c0d3440000
delete,MemoryChunk,0x1adf9900000
delete,MemoryChunk,0xfb4b7c0000
delete,MemoryChunk,0x1f381e80000
delete,MemoryChunk,0x4dd3140000
delete,MemoryChunk,0x16db1a00000
delete,MemoryChunk,0x1f330d80000
delete,MemoryChunk,0x1ce8a6c0000
delete,MemoryChunk,0x17ee46c0000
delete,MemoryChunk,0x284bb7c0000
delete,MemoryChunk,0x15f14940000
delete,MemoryChunk,0x2ba54500000
delete,MemoryChunk,0x1d186400000
delete,MemoryChunk,0xe5b5440000
delete,MemoryChunk,0x20398100000
delete,MemoryChunk,0xa247480000
delete,MemoryChunk,0xf76df00000
delete,MemoryChunk,0x12ff5f80000
delete,MemoryChunk,0x126d2600000
delete,MemoryChunk,0x2050a000000
delete,MemoryChunk,0x26696280000
delete,MemoryChunk,0x3739d000000
delete,MemoryChunk,0x30e41e40000
delete,MemoryChunk,0x3b9f4880000
delete,MemoryChunk,0x75108c0000
delete,MemoryChunk,0x1b172980000
delete,MemoryChunk,0xb275740000
delete,MemoryChunk,0x2a7ced80000
delete,MemoryChunk,0x2818c180000
delete,MemoryChunk,0x2ad5fc0000
delete,MemoryChunk,0x3f2e5480000
delete,MemoryChunk,0xcbcdc40000
delete,MemoryChunk,0x553f200000
delete,MemoryChunk,0x27a63e40000
delete,MemoryChunk,0x1dcb8680000
delete,MemoryChunk,0x3fabbd00000
delete,MemoryChunk,0x18148200000
delete,MemoryChunk,0x1e297200000
delete,MemoryChunk,0x7730980000
delete,MemoryChunk,0x18b3fac0000
delete,MemoryChunk,0x4446940000
delete,MemoryChunk,0x1f5c7b80000
delete,MemoryChunk,0x5d83940000
delete,MemoryChunk,0x37432b80000
delete,MemoryChunk,0x21a1f340000
delete,MemoryChunk,0x1aad9880000
delete,MemoryChunk,0x1c574780000
delete,MemoryChunk,0x3bb0a6c0000
delete,MemoryChunk,0x2c706100000
delete,MemoryChunk,0x3c6583c0000
delete,MemoryChunk,0x809180000
delete,MemoryChunk,0x1cf9b780000
delete,MemoryChunk,0x30e4b980000
delete,MemoryChunk,0x14fada80000
delete,MemoryChunk,0x15be6e40000
delete,MemoryChunk,0x3ddde0c0000
delete,MemoryChunk,0x1d9a59c0000
delete,MemoryChunk,0x1ed5f480000
delete,MemoryChunk,0x3cbb5000000
delete,MemoryChunk,0x20efd9c0000
delete,MemoryChunk,0x10d73b40000
delete,MemoryChunk,0x354e78c0000
delete,MemoryChunk,0x12ce74c0000
delete,MemoryChunk,0x71f56c0000
delete,MemoryChunk,0x331eebc0000
delete,MemoryChunk,0x2ab38280000
delete,MemoryChunk,0x3c0ae6c0000
delete,MemoryChunk,0x25370c00000
delete,MemoryChunk,0x25b63980000
delete,MemoryChunk,0x36f34480000
delete,MemoryChunk,0x389027c0000
delete,MemoryChunk,0x284a3c40000
delete,MemoryChunk,0x281c83c0000
delete,MemoryChunk,0x8781480000
delete,MemoryChunk,0x7e37fc0000
tick,0x7ff863075880,10295255,0,0x0,1
delete,MemoryChunk,0x3ca2ec80000
delete,MemoryChunk,0x24173d40000
tick,0x7ff6cbdaee95,10311403,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ffc9d,10327304,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a4be,10343409,0,0x0,1
tick,0x7ff66c245e27,10359329,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc105457,10375341,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c1b3,10391345,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0279,10407370,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a14f5,10423380,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1be,10439372,0,0x0,1
tick,0x7ff6cbf1c418,10455404,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x22408600000,262144
new,MemoryChunk,0xb690c40000,262144
new,MemoryChunk,0x272d7b00000,262144
new,MemoryChunk,0x1ec66200000,262144
tick,0x7ff66c2dbf85,10470313,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49f99b,10486319,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x34c98d40000,262144
new,MemoryChunk,0x29bcb00000,262144
new,MemoryChunk,0x2f76f700000,262144
new,MemoryChunk,0xc88e1c0000,262144
new,MemoryChunk,0x35a69740000,262144
new,MemoryChunk,0x3095780000,262144
new,MemoryChunk,0x352d89c0000,262144
new,MemoryChunk,0x19fc41c0000,262144
new,MemoryChunk,0x9f38000000,262144
new,MemoryChunk,0x3db37600000,262144
tick,0x7ff66c3205d3,10502381,0,0x0,0,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b799fc0000,262144
new,MemoryChunk,0x592dd80000,262144
new,MemoryChunk,0x9bb8a80000,262144
new,MemoryChunk,0x20d11d00000,262144
new,MemoryChunk,0x11331f00000,262144
new,MemoryChunk,0x25deda40000,262144
new,MemoryChunk,0x32772dc0000,262144
new,MemoryChunk,0x22c0f440000,262144
tick,0x7ff6cc29d443,10518339,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b708140000,262144
tick,0x7ff6cbf1c207,10534310,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x267bf280000,262144
new,MemoryChunk,0x2d0b5000000,262144
new,MemoryChunk,0x297bd100000,262144
new,MemoryChunk,0x2b9fe140000,262144
new,MemoryChunk,0x2e5b440000,262144
new,MemoryChunk,0x38fa2940000,262144
new,MemoryChunk,0x3e190cc0000,262144
new,MemoryChunk,0x6b1ff00000,262144
new,MemoryChunk,0x3b9bdac0000,262144
new,MemoryChunk,0xda00a80000,262144
new,MemoryChunk,0x5b5540000,262144
tick,0x7ff6cbec2a80,10550368,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xa9886c0000,262144
new,MemoryChunk,0x3fe18c00000,262144
new,MemoryChunk,0x36576e40000,262144
new,MemoryChunk,0x3dffb5c0000,262144
new,MemoryChunk,0x36a03340000,262144
new,MemoryChunk,0x2e023600000,262144
new,MemoryChunk,0x2668640000,262144
new,MemoryChunk,0x3986e180000,262144
tick,0x7ff64c499d0d,10566342,0,0x0,0,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0b2,10581374,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2a8f2680000,262144
new,MemoryChunk,0x244b1a80000,262144
new,MemoryChunk,0x389a1ec0000,262144
new,MemoryChunk,0x3f3dba00000,262144
new,MemoryChunk,0xd94500000,262144
new,MemoryChunk,0x150c4940000,262144
new,MemoryChunk,0x29db40000,262144
new,MemoryChunk,0xa4b4140000,262144
new,MemoryChunk,0x2b39a740000,262144
new,MemoryChunk,0x3ee584c0000,262144
new,MemoryChunk,0x3c920a40000,262144
tick,0x7ff64c496090,10597313,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,13,10599511,0x7ff64c49c800,208,get value file:///C:/coding/soodocode/build/statements.js:252:26,0x13a35fb94a8,*
code-source-info,0x7ff64c49c800,113,12516,12536,C0O12516C35O12521C52O12534C78O12516C140O12521,,
tick,0x7ff64c490684,10613375,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x37071b00000,262144
new,MemoryChunk,0x3a7f8400000,262144
new,MemoryChunk,0xfa822c0000,262144
new,MemoryChunk,0xb919840000,262144
new,MemoryChunk,0x15c22b40000,262144
new,MemoryChunk,0x2adc62c0000,262144
new,MemoryChunk,0x22671640000,262144
new,MemoryChunk,0x2115cc00000,262144
new,MemoryChunk,0x3b2364c0000,262144
new,MemoryChunk,0x2cfe4a00000,262144
tick,0x7ff6cbeb0279,10629326,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x72af640000,262144
tick,0x7ff6cc06d7a9,10645340,0,0x0,1
new,MemoryChunk,0x397baf00000,262144
new,MemoryChunk,0x2c08db40000,262144
new,MemoryChunk,0x3b2a82c0000,262144
new,MemoryChunk,0x36bdc540000,262144
new,MemoryChunk,0x6017bc0000,262144
new,MemoryChunk,0xdd52440000,262144
tick,0x7ff6cc14f9ad,10661372,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x355c6f00000,262144
new,MemoryChunk,0x3f3030c0000,262144
new,MemoryChunk,0x384245c0000,262144
new,MemoryChunk,0x21a5ac80000,262144
new,MemoryChunk,0x16fe9d00000,262144
new,MemoryChunk,0xee07f80000,262144
new,MemoryChunk,0xe431d80000,262144
new,MemoryChunk,0xf750d00000,262144
new,MemoryChunk,0x27f54600000,262144
new,MemoryChunk,0xac28f80000,262144
delete,MemoryChunk,0x3cf48ac0000
delete,MemoryChunk,0x17838f40000
delete,MemoryChunk,0x571e100000
delete,MemoryChunk,0x29c39800000
delete,MemoryChunk,0x3fb12ec0000
delete,MemoryChunk,0xb690c40000
delete,MemoryChunk,0x272d7b00000
delete,MemoryChunk,0x22408600000
delete,MemoryChunk,0x1ec66200000
delete,MemoryChunk,0xc88e1c0000
delete,MemoryChunk,0x19fc41c0000
delete,MemoryChunk,0x9f38000000
delete,MemoryChunk,0x34c98d40000
delete,MemoryChunk,0x352d89c0000
delete,MemoryChunk,0x2f76f700000
delete,MemoryChunk,0x35a69740000
delete,MemoryChunk,0x9bb8a80000
delete,MemoryChunk,0x3095780000
delete,MemoryChunk,0x11331f00000
delete,MemoryChunk,0x25deda40000
delete,MemoryChunk,0x22c0f440000
delete,MemoryChunk,0x20d11d00000
delete,MemoryChunk,0x592dd80000
delete,MemoryChunk,0x32772dc0000
delete,MemoryChunk,0x1b708140000
delete,MemoryChunk,0x267bf280000
delete,MemoryChunk,0x2b9fe140000
delete,MemoryChunk,0x297bd100000
delete,MemoryChunk,0x38fa2940000
delete,MemoryChunk,0x3b9bdac0000
delete,MemoryChunk,0x2d0b5000000
delete,MemoryChunk,0x3e190cc0000
delete,MemoryChunk,0x5b5540000
delete,MemoryChunk,0x2e023600000
delete,MemoryChunk,0xda00a80000
delete,MemoryChunk,0x36576e40000
delete,MemoryChunk,0x2668640000
delete,MemoryChunk,0x3fe18c00000
delete,MemoryChunk,0x36a03340000
delete,MemoryChunk,0xa9886c0000
delete,MemoryChunk,0x3dffb5c0000
delete,MemoryChunk,0x3986e180000
delete,MemoryChunk,0x244b1a80000
delete,MemoryChunk,0x3f3dba00000
delete,MemoryChunk,0x2e5b440000
delete,MemoryChunk,0x3db37600000
delete,MemoryChunk,0xa4b4140000
delete,MemoryChunk,0x3ee584c0000
delete,MemoryChunk,0xd94500000
delete,MemoryChunk,0x29db40000
delete,MemoryChunk,0x2b39a740000
delete,MemoryChunk,0xfa822c0000
delete,MemoryChunk,0x15c22b40000
delete,MemoryChunk,0x150c4940000
delete,MemoryChunk,0x37071b00000
delete,MemoryChunk,0xb919840000
delete,MemoryChunk,0x22671640000
delete,MemoryChunk,0x2115cc00000
delete,MemoryChunk,0x3a7f8400000
delete,MemoryChunk,0x3b2364c0000
delete,MemoryChunk,0x2cfe4a00000
delete,MemoryChunk,0x2c08db40000
delete,MemoryChunk,0x72af640000
delete,MemoryChunk,0xdd52440000
delete,MemoryChunk,0x397baf00000
delete,MemoryChunk,0x3b2a82c0000
delete,MemoryChunk,0x3f3030c0000
delete,MemoryChunk,0x2adc62c0000
delete,MemoryChunk,0x21a5ac80000
delete,MemoryChunk,0xee07f80000
delete,MemoryChunk,0x36bdc540000
delete,MemoryChunk,0x355c6f00000
delete,MemoryChunk,0x384245c0000
delete,MemoryChunk,0x27f54600000
delete,MemoryChunk,0xac28f80000
delete,MemoryChunk,0xe431d80000
delete,MemoryChunk,0xf750d00000
tick,0x7ff6cbe6dad5,10677376,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb2f7,10693327,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c332ab2,10709328,0,0x0,0,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863b990b6,10725398,0,0x0,1
tick,0x7ff66c2dc389,10741327,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc10545a,10757333,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc075c07,10773385,0,0x0,1
tick,0x7ff64c495fd1,10789405,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3f0a,10805368,0,0x0,0,0x7ff6cbda9010,0x7ff64c49c480,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda92f9,10821437,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0726e3,10836426,0,0x0,1
tick,0x7ff66c2dc0b2,10852362,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x25b58e80000,262144
new,MemoryChunk,0x2fd8d680000,262144
tick,0x7ff6cc38fc23,10868410,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc130267,10884346,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xbb37400000,262144
new,MemoryChunk,0x22be6c0000,262144
new,MemoryChunk,0x1ce77380000,262144
new,MemoryChunk,0x2507aa80000,262144
new,MemoryChunk,0x13e59e40000,262144
new,MemoryChunk,0x2ce095c0000,262144
tick,0x7ff6cc0bdebc,10900393,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5a9bf00000,262144
new,MemoryChunk,0x21f6f340000,262144
tick,0x7ff66c32ee67,10915348,0,0x0,0,0x7ff64c493727,0x7ff64c496901,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49a047,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2c2b0300000,262144
new,MemoryChunk,0x8274240000,262144
new,MemoryChunk,0x187c24c0000,262144
new,MemoryChunk,0x1e1e8240000,262144
new,MemoryChunk,0x3e88ee40000,262144
new,MemoryChunk,0x55b4740000,262144
new,MemoryChunk,0x185b0900000,262144
new,MemoryChunk,0x3d2ae0c0000,262144
tick,0x7ff66c2881c8,10931442,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x416b340000,262144
new,MemoryChunk,0x25b4b140000,262144
new,MemoryChunk,0x1fe11f00000,262144
new,MemoryChunk,0x771dc80000,262144
new,MemoryChunk,0x1f5c2b80000,262144
new,MemoryChunk,0x111900000,262144
new,MemoryChunk,0x1205a000000,262144
tick,0x7ff66c241bb7,10947399,0,0x0,0,0x7ff64c497a46,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x4bd2480000,262144
new,MemoryChunk,0x8c1c940000,262144
new,MemoryChunk,0x3d7abe40000,262144
new,MemoryChunk,0xf17b700000,262144
new,MemoryChunk,0x1db62c00000,262144
new,MemoryChunk,0x20728f40000,262144
new,MemoryChunk,0x39a45280000,262144
new,MemoryChunk,0x374a7100000,262144
new,MemoryChunk,0x3cb00bc0000,262144
tick,0x7ff6cbe9a59c,10963359,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0ad,10978427,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49881f,0x7ff64c49a401,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2be66c0000,262144
new,MemoryChunk,0x23e929c0000,262144
new,MemoryChunk,0x1b9edf40000,262144
new,MemoryChunk,0xeb3cdc0000,262144
new,MemoryChunk,0x1ddab580000,262144
new,MemoryChunk,0x184a09c0000,262144
tick,0x7ff6cc2a89a6,10994253,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x124e44c0000,262144
new,MemoryChunk,0x17200c80000,262144
new,MemoryChunk,0xaefc2c0000,262144
new,MemoryChunk,0x239cf9c0000,262144
new,MemoryChunk,0x8d6d740000,262144
new,MemoryChunk,0x131a46c0000,262144
tick,0x7ff6cc06c1c7,11010210,0,0x0,1
new,MemoryChunk,0x3c89f600000,262144
tick,0x7ff6cbebd51d,11026201,0,0x0,0,0x7ff6cbda9010,0x7ff64c49c480,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x7c3dec0000,262144
new,MemoryChunk,0x9d7ac40000,262144
new,MemoryChunk,0x31e87cc0000,262144
new,MemoryChunk,0x2ae05380000,262144
new,MemoryChunk,0x30cfea80000,262144
new,MemoryChunk,0x306b5ac0000,262144
new,MemoryChunk,0x32d94240000,262144
tick,0x7ff6cbeba230,11041275,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc075035,11057197,0,0x0,1
new,MemoryChunk,0x35da2480000,262144
new,MemoryChunk,0x3b77f4c0000,262144
new,MemoryChunk,0x2f18200000,262144
new,MemoryChunk,0x425a900000,262144
new,MemoryChunk,0x191d4280000,262144
new,MemoryChunk,0x2c570fc0000,262144
new,MemoryChunk,0x147e7180000,262144
tick,0x7ff6cbb6e914,11073264,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3cfcb280000,262144
new,MemoryChunk,0x103a3c80000,262144
new,MemoryChunk,0x35be8cc0000,262144
new,MemoryChunk,0x2eed8880000,262144
new,MemoryChunk,0xdef8c0000,262144
new,MemoryChunk,0x1c8953c0000,262144
new,MemoryChunk,0x277e8180000,262144
tick,0x7ff6cbeb9a8a,11088233,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf7e,11104275,0,0x0,0,0x7ff64c4a0dd4,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x16d6bd00000,262144
new,MemoryChunk,0x10014180000,262144
new,MemoryChunk,0x351a7980000,262144
new,MemoryChunk,0x6489fc0000,262144
new,MemoryChunk,0x255693c0000,262144
new,MemoryChunk,0x21fe0740000,262144
new,MemoryChunk,0x24c26200000,262144
new,MemoryChunk,0x365b0a40000,262144
new,MemoryChunk,0x53e85c0000,262144
new,MemoryChunk,0x2c523f40000,262144
tick,0x7ff6cc094b03,11120170,0,0x0,1
delete,MemoryChunk,0x6b1ff00000
delete,MemoryChunk,0x1b799fc0000
delete,MemoryChunk,0x3c920a40000
delete,MemoryChunk,0x29bcb00000
delete,MemoryChunk,0x2fd8d680000
delete,MemoryChunk,0x6017bc0000
delete,MemoryChunk,0x25b58e80000
delete,MemoryChunk,0xbb37400000
delete,MemoryChunk,0x13e59e40000
delete,MemoryChunk,0x22be6c0000
delete,MemoryChunk,0x5a9bf00000
delete,MemoryChunk,0x21f6f340000
delete,MemoryChunk,0x2507aa80000
delete,MemoryChunk,0x2c2b0300000
delete,MemoryChunk,0x187c24c0000
delete,MemoryChunk,0x8274240000
delete,MemoryChunk,0x3e88ee40000
delete,MemoryChunk,0x3d2ae0c0000
delete,MemoryChunk,0x1e1e8240000
delete,MemoryChunk,0x1205a000000
delete,MemoryChunk,0x1fe11f00000
delete,MemoryChunk,0x416b340000
delete,MemoryChunk,0x25b4b140000
delete,MemoryChunk,0x1f5c2b80000
delete,MemoryChunk,0x4bd2480000
delete,MemoryChunk,0x3d7abe40000
delete,MemoryChunk,0x8c1c940000
delete,MemoryChunk,0x1db62c00000
delete,MemoryChunk,0x184a09c0000
delete,MemoryChunk,0x39a45280000
delete,MemoryChunk,0x374a7100000
delete,MemoryChunk,0x2be66c0000
delete,MemoryChunk,0xeb3cdc0000
delete,MemoryChunk,0x239cf9c0000
delete,MemoryChunk,0x124e44c0000
delete,MemoryChunk,0x8d6d740000
delete,MemoryChunk,0x7c3dec0000
delete,MemoryChunk,0x32d94240000
delete,MemoryChunk,0x306b5ac0000
delete,MemoryChunk,0x131a46c0000
delete,MemoryChunk,0x9d7ac40000
delete,MemoryChunk,0x2f18200000
delete,MemoryChunk,0x147e7180000
delete,MemoryChunk,0x425a900000
delete,MemoryChunk,0x35da2480000
delete,MemoryChunk,0x2c570fc0000
delete,MemoryChunk,0x2eed8880000
delete,MemoryChunk,0x1c8953c0000
delete,MemoryChunk,0x35be8cc0000
delete,MemoryChunk,0xdef8c0000
delete,MemoryChunk,0x3cfcb280000
delete,MemoryChunk,0x30cfea80000
delete,MemoryChunk,0x10014180000
delete,MemoryChunk,0x21fe0740000
delete,MemoryChunk,0x351a7980000
delete,MemoryChunk,0x3c89f600000
delete,MemoryChunk,0x2c523f40000
delete,MemoryChunk,0x53e85c0000
delete,MemoryChunk,0x24c26200000
delete,MemoryChunk,0x365b0a40000
delete,MemoryChunk,0x6489fc0000
tick,0x7ff66c241c6f,11136217,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c32f20c,11152224,0,0x0,0,0x7ff64c493727,0x7ff64c496901,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49a047,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda8d36,11168351,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c245e3c,11184212,0,0x0,0,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc389,11200200,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc075c36,11216215,0,0x0,1
tick,0x7ff66c241bb7,11232242,0,0x0,0,0x7ff64c4968b6,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c49c4ec,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ffc9d,11248212,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdac84b,11264206,0,0x0,0,0x7ff6cbda8d20,0x7ff64c49c440,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,11275602,0x3767e5708b6,113,get node:internal/util:635:17,0x3fcdef88970,~
code-source-info,0x3767e5708b6,16,18163,18397,C0O18175C8O18211C19O18233C22O18211C27O18263C33O18292C37O18305C38O18322C57O18338C60O18330C69O18326C77O18350C89O18360C94O18364C96O18363C102O18356C108O18377C112O18390,,
code-creation,JS,10,11275759,0x3767e570a96,96,measure node:internal/perf/performance:126:10,0x13a35fab838,~
code-source-info,0x3767e570a96,121,3334,3618,C0O3334C11O3365C28O3407C35O3435C44O3407C49O3489C55O3496C60O3512C70O3518C75O3512C76O3560C90O3567C95O3613,,
code-creation,JS,10,11275837,0x3767e570c0e,46, node:internal/validators:523:47,0x3fcdef85c18,~
code-source-info,0x3767e570c0e,15,15257,15471,C0O15295C12O15349C15O15349C22O15405C38O15411C43O15405C45O15470,,
code-creation,JS,10,11275921,0x3767e570dae,105,measure node:internal/perf/usertiming:215:17,0x13a35fa6e38,~
code-source-info,0x3767e570dae,119,5693,6124,C0O5737C8O5737C13O5812C16O5812C22O5783C27O5795C32O5884C39O5905C47O5918C52O5944C55O5944C63O5995C78O5995C84O6055C89O6055C93O6076C98O6076C102O6106C104O6121,,
code-creation,JS,10,11276061,0x3767e571096,292,calculateStartDuration node:internal/perf/usertiming:164:32,0x13a35fa6de8,~
code-source-info,0x3767e571096,119,4072,5673,C0O4110C9O4146C11O4160C13O4172C15O4204C17O4214C23O4271C28O4278C33O4283C38O4325C41O4346C47O4367C49O4390C53O4415C57O4451C67O4457C72O4451C73O4559C81O4614C91O4620C96O4614C97O4738C109O4819C119O4928C125O4825C130O4819C131O4987C135O5021C138O5027C145O5055C153O5101C156O5107C163O5131C175O5205C178O5211C186O5228C190O5226C196O5264C201O5270C205O5287C211O5341C214O5349C221O5391C229O5439C232O5447C239O5473C251O5545C254O5559C258O5557C264O5595C266O5616C268O5631C272O5643C279O5652C285O5659C291O5670,,
code-creation,JS,10,11276196,0x3767e5713de,118,getMark node:internal/perf/usertiming:53:17,0x13a35fa6cf8,~
code-source-info,0x3767e5713de,119,1202,1652,C0O1214C4O1238C5O1245C6O1249C12O1286C13O1295C18O1307C25O1313C30O1307C31O1363C33O1375C34O1384C39O1405C44O1438C49O1438C56O1454C63O1471C66O1478C67O1493C72O1505C77O1505C83O1519C85O1546C95O1577C109O1552C114O1546C115O1639C117O1649,,
code-creation,JS,10,11276320,0x3767e571926,44,createPerformanceMeasure node:internal/perf/usertiming:149:34,0x13a35fa6d48,~
code-source-info,0x3767e571926,119,3709,3887,C0O3762C7O3785C24O3762C30O3837C32O3845C37O3854C41O3869C43O3884,,
code-creation,JS,10,11276397,0x3767e571a5e,125,PerformanceMeasure node:internal/perf/usertiming:121:14,0x13a35fa6fe8,~
code-source-info,0x3767e571a5e,119,3048,3346,C53O3193C55O3217C57O3213C62O3238C67O3244C72O3238C73O3289C109O3289C124O3345,,
code-creation,JS,10,11276465,0x3767e571be6,116,PerformanceEntry node:internal/perf/performance_entry:34:14,0x3e4136bf6e0,~
code-source-info,0x3767e571be6,116,821,1180,C50O966C52O990C54O986C59O1011C64O1017C69O1011C70O1062C72O1067C77O1074C81O1087C83O1092C88O1104C92O1117C94O1122C99O1134C103O1148C105O1153C110O1164C115O1179,,
code-creation,JS,10,11276550,0x3767e571dfe,165,enqueue node:internal/perf/observe:391:17,0x13a35f9f7c0,~
code-source-info,0x3767e571dfe,118,10421,10614,C0O10434C5O10439C11O10471C27O10477C32O10471C33O10562C55O10555C83O10555C86O10581C88O10585C90O10584C94O10598C99O10544C164O10613,,
code-creation,JS,10,11276607,0x3767e571fbe,20,isPerformanceEntry node:internal/perf/performance_entry:29:28,0x3e4136bf5f0,~
code-source-info,0x3767e571fbe,116,730,778,C0O741C9O754C11O753C18O761C19O775,,
code-creation,JS,10,11276654,0x3767e5720ae,13, node:internal/per_context/primordials:387:32,0x23399f5320,~
code-source-info,0x3767e5720ae,6,11633,11694,C0O11651C7O11658C12O11681,,
code-creation,JS,10,11276762,0x3767e57238e,204,bufferUserTiming node:internal/perf/observe:403:26,0x13a35f9f810,~
code-source-info,0x3767e57238e,118,10705,11735,C0O10742C5O10760C7O10771C9O10785C14O10804C21O10840C23O10854C28O10876C35O10922C36O10929C37O10940C42O10940C47O10999C52O11012C54O11024C56O11022C63O11065C66O11083C71O11083C78O11106C83O11124C90O11124C96O11268C106O11353C116O11362C126O11323C132O11403C138O11493C143O11522C153O11463C159O11540C165O11268C171O11594C173O11601C177O11652C179O11664C183O11682C185O11690C189O11704C192O11712C197O11712C203O11734,,
code-creation,JS,10,11276851,0x3767e5725d6,29,get entryType node:internal/perf/performance_entry:56:16,0x3e4136bf7b8,~
code-source-info,0x3767e5725d6,116,1308,1413,C0O1318C7O1346C16O1318C21O1384C23O1396C25O1395C28O1408,,
code-creation,JS,10,11276903,0x3767e572706,29,get duration node:internal/perf/performance_entry:66:15,0x3e4136bf898,~
code-source-info,0x3767e572706,116,1555,1658,C0O1565C7O1593C16O1565C21O1630C23O1642C25O1641C28O1653,,
code-creation,JS,10,11276967,0x3767e572816,38,log node:internal/console/constructor:378:6,0x3fcdefab810,~
code-source-info,0x3767e572816,46,11960,12046,C0O11960C3O11977C5O11982C7O11981C13O11999C18O12016C20O12015C24O12033C30O11998C37O12045,,
code-creation,JS,10,11277027,0x3767e57295e,50,value node:internal/console/constructor:339:20,0x3fcdefab570,~
code-source-info,0x3767e57295e,46,10465,10641,C0O10494C2O10499C4O10498C8O10524C13O10518C19O10541C24O10541C29O10583C36O10603C44O10590C49O10634,,
code-creation,JS,10,11277079,0x3767e572a76,27,get node:internal/console/constructor:213:14,0x1c66f8cd198,~
code-source-info,0x3767e572a76,46,6256,6351,C0O6274C6O6287C9O6303C16O6294C22O6324C26O6338,,
code-creation,JS,10,11277147,0x3767e572ba6,81,value node:internal/console/constructor:319:20,0x3fcdefab4e8,~
code-source-info,0x3767e572ba6,46,9942,10359,C0O9972C2O9977C4O9976C8O9997C10O10007C15O10030C18O10038C22O10054C27O10055C33O10113C38O10124C43O10124C49O10142C51O10178C57O10213C59O10228C63O10257C65O10272C66O10291C72O10306C78O10329C80O10352,,
code-creation,JS,10,11277211,0x3767e572d2e,32,lazyUtilColors node:internal/console/constructor:83:24,0x3fcdefa9a28,~
code-source-info,0x3767e572d2e,46,1980,2060,C0O1988C14O2003C21O1999C27O2039C31O2057,,
code-creation,JS,10,11277270,0x3767e572e5e,80,shouldColorize node:internal/util/colors:17:17,0x2bcf6ac4110,~
code-source-info,0x3767e572e5e,148,274,527,C0O290C3O302C8O306C14O342C17O349C21O366C26O367C33O383C36O387C37O400C44O413C53O447C61O494C66O494C73O510C79O522,,
code-creation,JS,10,11277489,0x3767e5735d6,765,getColorDepth node:internal/tty:106:23,0x385005877c8,~
code-source-info,0x3767e5735d
code-creation,JS,10,11277689,0x3767e573b1e,38,formatWithOptions node:internal/util/inspect:2158:27,0x3fcdef8eed0,~
code-source-info,0x3767e573b1e,21,74795,74964,C0O74795C8O74826C18O74875C24O74826C29O74906C32O74913C37O74961,,
code-creation,JS,10,11277786,0x3767e573ce6,252, node:internal/validators:235:3,0x3fcdef85630,~
code-source-info,0x3767e573ce6,15,6585,7633,C12O6609C19O6640C21O6656C23O6652C28O6686C34O6708C37O6708C43O6740C59O6746C64O6740C65O6813C71O6855C87O6861C92O6855C95O6964C102O6994C107O7005C111O7021C117O7071C133O7077C138O7071C139O7165C146O7192C151O7203C155O7219C159O7239C162O7239C168O7271C184O7277C189O7271C190O7368C197O7398C202O7409C206O7443C210O7466C212O7482C219O7499C223O7530C228O7558C244O7564C249O7558C251O7632,,
code-creation,JS,10,11278028,0x3767e5740b6,764,formatWithOptionsInternal node:internal/util/inspect:2179:35,0x3fcdef8efc0,~
code-source-info,0x3767e5740b
code-creation,JS,10,11278281,0x3767e5747be,269,value node:internal/console/constructor:276:20,0x3fcdefab460,~
code-source-info,0x3767e5747be,46,8352,9834,C0O8410C5O8452C7O8457C9O8456C13O8499C15O8516C17O8512C21O8550C23O8567C29O8582C34O8619C38O8645C44O8672C49O8718C55O8725C60O8743C68O8747C75O8799C91O8857C99O8808C106O8893C108O8914C113O8940C123O8965C128O9007C133O9007C138O9021C145O9346C153O9346C160O9369C165O9394C176O9394C182O9433C187O9433C206O9633C216O9637C222O9673C224O9673C238O9781C239O9788C250O9788C268O9833,,
code-creation,JS,10,11278413,0x3767e574a7e,127,listenerCount node:events:852:23,0x3fcdef92190,~
code-source-info,0x3767e574a7e,23,25252,25965,C0O25294C5O25308C7O25360C9O25366C13O25381C17O25428C22O25461C24O25477C29O25519C33O25504C43O25536C44O25555C46O25564C47O25577C51O25616C56O25664C58O25691C60O25709C65O25719C67O25719C72O25742C74O25756C80O25760C87O25786C91O25790C98O25799C103O25828C108O25725C113O25678C117O25875C119O25891C120O25928C124O25935C125O25953C126O25962,,
code-creation,JS,10,11278507,0x3767e5411e6,39,once node:events:651:44,0x3fcdef91ed0,~
code-source-info,0x3767e5411e6,23,19590,19708,C0O19612C3O19612C7O19647C24O19656C30O19647C36O19693C38O19705,,
code-creation,JS,10,11278553,0x3767e5412f6,15,checkListener node:events:274:23,0x3fcdef90c20,~
code-source-info,0x3767e5412f6,23,8320,8378,C0O8336C8O8336C14O8377,,
code-creation,JS,10,11278599,0x3767e54142e,30, node:internal/validators:453:42,0x3fcdef859a0,~
code-source-info,0x3767e54142e,15,13318,13437,C0O13340C6O13378C22O13384C27O13378C29O13436,,
code-creation,JS,10,11278659,0x3767e5415fe,60,_onceWrap node:events:637:19,0x3fcdef91e80,~
code-source-info,0x3767e5415fe,23,19149,19378,C0O19193C6O19217C12O19228C18O19236C24O19242C31O19273C34O19285C39O19285C45O19301C47O19318C51O19333C53O19346C57O19360C59O19375,,
code-creation,JS,10,11278790,0x3767e541abe,329,Readable.on node:internal/streams/readable:1125:33,0x2bb6ecb6a78,~
code-source-info,0x3767e541abe
code-creation,JS,10,11278907,0x3767e541d7e,20,addListener node:events:609:58,0x3fcdef91cd0,~
code-source-info,0x3767e541d7e,23,18372,18446,C0O18394C14O18401C19O18443,,
code-creation,JS,10,11279027,0x3767e54205e,371,_addListener node:events:546:22,0x3fcdef917d8,~
code-source-info,0x3767e54205e
code-creation,JS,10,11279150,0x3767e54235e,42,Writable.write node:internal/streams/writable:496:36,0x23f23c7d80,~
code-source-info,0x3767e54235e,141,15754,15944,C0O15781C11O15844C14O15864C17O15891C32O15898C41O15941,,
code-creation,JS,10,11279273,0x3767e542576,411,_write node:internal/streams/writable:445:16,0x23f23c72c0,~
code-source-info,0x3767e
code-creation,JS,10,11279474,0x3767e542a06,461,writeOrBuffer node:internal/streams/writable:540:23,0x23f23c7310,~
code-source-info,0x3767e542a
code-creation,JS,10,11279636,0x3767e542dd6,61,set node:internal/streams/writable:254:8,0x23f23c79f0,~
code-source-info,0x3767e542dd6,141,8462,8632,C0O8479C4O8501C6O8506C11O8521C15O8539C17O8544C26O8555C31O8552C37O8590C39O8595C48O8607C50O8606C55O8603C60O8631,,
code-creation,JS,10,11279696,0x3767e542f0e,26,Socket._write node:net:963:35,0x2bb6ec92a48,~
code-source-info,0x3767e542f0e,127,25987,26062,C0O26018C19O26018C25O26061,,
code-creation,JS,10,11279789,0x3767e5431ee,217,Socket._writeGeneric node:net:921:42,0x2bb6ec92900,~
code-source-info,0x3767e5431ee,127,24904,25842,C0O24904C21O25110C37O25129C41O25147C45O25160C49O25182C53O25204C66O25204C72O25437C83O25437C89O25466C90O25473C91O25482C92O25500C96O25511C98O25533C102O25554C108O25570C115O25577C118O25573C124O25570C128O25604C129O25617C130O25633C135O25633C139O25657C141O25665C145O25682C161O25688C169O25732C188O25738C194O25789C200O25801C204O25806C207O25833C211O25827C216O25841,,
code-creation,JS,10,11279868,0x3767e5433fe,8,get node:net:2341:6,0x2bb6ec932b0,~
code-source-info,0x3767e5433fe,127,67501,67529,C0O67506C2O67518C4O67517C7O67527,,
code-creation,JS,10,11279925,0x3767e543536,46,_unrefTimer node:net:505:52,0x1760ce83618,~
code-source-info,0x3767e543536,127,14386,14501,C0O14407C5O14415C9O14447C11O14453C13O14452C18O14471C20O14473C22O14472C26O14483C31O14483C35O14431C40O14394C45O14500,,
code-creation,JS,10,11279989,0x3767e54366e,55,writeGeneric node:internal/stream_base_commons:147:22,0xc2df92fc80,~
code-source-info,0x3767e54366e,145,3750,3940,C0O3794C5O3815C7O3814C11O3794C17O3845C29O3845C35O3887C47O3887C52O3926C54O3937,,
code-creation,JS,10,11280047,0x3767e5437be,47,createWriteWrap node:internal/stream_base_commons:109:25,0xc2df92fbe0,~
code-source-info,0x3767e5437be,145,2834,3059,C0O2870C5O2870C11O2892C13O2903C17O2916C19O2931C23O2953C24O2963C28O2975C29O2985C33O2993C34O3004C38O3015C40O3028C44O3045C46O3056,,
tick,0x7ff6cc259de1,11280193,0,0x0,2,0x7ff6cbdbb8d0,0x3767e54368b,0x3767e5432aa,0x3767e542f21,0x3767e542b74,0x3767e54270b,0x3767e54237e,0x3767e574879,0x3767e572834,0x7ff6cb6a2cb0,0xc2df91015b,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,11280247,0x3767e543b2e,215,handleWriteReq node:internal/stream_base_commons:45:24,0xc2df92fb40,~
code-source-info,0x3767e543b2e,145,1221,2086,C0O1256C5O1277C80O1350C85O1350C92O1381C99O1401C101O1400C106O1431C108O1442C112O1457C114O1468C115O1537C120O1537C126O1566C127O1625C132O1625C138O1652C139O1693C144O1693C150O1721C151O1823C156O1823C162O1850C163O1894C168O1901C173O1901C180O1949C185O1949C192O1982C199O2002C201O2001C206O2032C208O2043C212O2060C214O2071,,
code-creation,JS,10,11280519,0x3767e543d76,94,afterWriteDispatched node:internal/stream_base_commons:155:30,0xc2df92fcd0,~
code-source-info,0x3767e543d76,145,3973,4261,C0O3993C2O4005C7O4021C9O4020C12O4003C16O4040C18O4054C23O4070C25O4069C30O4050C34O4096C35O4104C40O4116C42O4130C48O4163C58O4126C64O4123C68O4171C69O4186C75O4206C83O4242C88O4242C93O4260,,
code-creation,JS,10,11280964,0x3767e54405e,769,onwrite node:internal/streams/writable:607:17,0x23f23c7400,~
code-source-info,0x3767e54405e
code-creation,JS,10,11281444,0x3767e544636,118,Readable.removeListener node:internal/streams/readable:1157:45,0x2bb6ecb6b00,~
code-source-info,0x3767e544636,137,37260,37978,C0O37293C5O37326C10O37333C15O37343C20O37358C34O37358C40O37435C42O37442C47O37799C50O37807C58O37807C66O37858C68O37865C73O37884C81O37884C88O37906C93O37920C95O37926C104O37938C106O37937C111O37934C115O37964C117O37975,,
code-creation,JS,10,11281724,0x3767e54480e,322,removeListener node:events:680:28,0x3fcdef91f70,~
code-source-info,0x3767e54480e
code-creation,JS,10,11282005,0x3767e544b26,77,mark node:internal/perf/performance:118:7,0x13a35fab7e8,~
code-source-info,0x3767e544b26,121,3098,3321,C0O3098C11O3115C18O3136C25O3164C34O3136C39O3218C45O3225C50O3241C60O3247C65O3241C66O3289C71O3296C76O3316,,
code-creation,JS,10,11282133,0x3767e544c6e,40,mark node:internal/perf/usertiming:157:14,0x13a35fa6d98,~
code-source-info,0x3767e544c6e,119,3904,4037,C0O3938C13O3938C19O3977C24O3977C28O3995C33O3995C37O4022C39O4034,,
code-creation,JS,10,11282321,0x3767e544e06,276,PerformanceMark node:internal/perf/usertiming:70:14,0x13a35fa6ed8,~
code-source-info,0x3767e544e06,119,1719,2462,C0O1719C18O1768C24O1775C29O1791C39O1797C44O1791C45O1839C49O1862C54O1895C59O1895C66O1913C79O1919C84O1913C85O1965C90O1995C98O1995C103O2061C110O2068C123O2083C126O2083C130O2095C138O2095C143O2140C144O2154C149O2166C156O2172C161O2166C162O2227C167O2239C172O2239C178O2281C185O2288C193O2303C198O2336C201O2336C209O2382C211O2388C219O2382C246O2382C258O2434C263O2439C268O2448C275O2461,,
code-creation,JS,10,11282567,0x3767e5450de,177, node:internal/validators:175:40,0x3fcdef85540,~
code-source-info,0x3767e5450de,15,4898,5355,C19O4942C25O4978C41O4984C46O4978C47O5038C54O5064C66O5096C83O5144C86O5144C92O5172C110O5243C136O5275C151O5319C169O5178C174O5172C176O5354,,
code-creation,JS,10,11282810,0x3767e5453ce,241,run file:///C:/coding/soodocode/build/statements.js:208:12,0x2c01bf4dad8,~
code-source-info,0x3767e5453ce,113,10317,10893,C0O10365C5O10390C10O10365C16O10440C38O10423C66O10423C69O10481C74O10481C81O10524C92O10541C103O10524C107O10599C112O10599C117O10616C122O10627C129O10667C145O10747C153O10747C165O10810C171O10637C175O10412C240O10892,,
code-creation,JS,10,11282973,0x3767e54563e,36,getCurrentScope file:///C:/coding/soodocode/build/runtime.js:606:28,0xc2df92e5c8,~
code-source-info,0x3767e54563e,111,38676,38759,C0O38709C5O38716C13O38716C22O38726C31O38726C35O38745,,
code-creation,JS,10,11283177,0x3767e5458a6,293,run file:///C:/coding/soodocode/build/statements.js:246:12,0x2c01bf4d3a8,~
code-source-info,0x3767e5458a6,113,12210,12710,C0O12210C8O12246C13O12263C18O12246C25O12286C34O12308C49O12286C53O12372C59O12380C64O12399C69O12380C75O12372C92O12357C129O12363C225O12426C230O12426C235O12443C240O12459C252O12485C258O12648C287O12465C292O12709,,
code-creation,JS,10,11283393,0x3767e545c9e,127,evaluateToken file:///C:/coding/soodocode/build/runtime.js:555:33,0xc2df92e3c0,~
code-source-info,0x3767e545c9e,111,36454,36969,C3O36524C8O36534C13O36548C18O36557C29O36593C39O36553C51O36548C56O36672C68O36741C76O36763C80O36749C85O36803C91O36808C97O36810C102O36816C106O36816C113O36803C120O36927C122O36927C126O36968,,
code-creation,JS,10,11283598,0x3767e54619e,93,getInitValue file:///C:/coding/soodocode/build/runtime-types.js:71:17,0xc2df932e60,~
code-source-info,0x3767e54619e,112,2534,2831,C0O2534C12O2580C15O2588C20O2613C25O2588C30O2580C32O2628C39O2648C41O2637C46O2679C55O2679C59O2737C63O2750C73O2770C86O2750C92O2825,,
new,MemoryChunk,0x2ef6f980000,806912
code-creation,JS,13,11286504,0x7ff64c49c900,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c49c900,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
tick,0x7ff6cc0ee2fc,11296244,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49c997,0x7ff6cc351d3c,0x3767e5461f4,0x3767e545467,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0f379e,11312245,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49c997,0x7ff6cc351d3c,0x3767e5461f4,0x3767e545467,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc14f6ee,11328232,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc11c647,11344229,0,0x0,1
tick,0x7ff66c241c6f,11360267,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb02,11376258,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9d8,11392260,0,0x0,1
tick,0x7ff66c320a19,11408242,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2121ec80000,262144
tick,0x7ff6cbe9a4ff,11424257,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2db47700000,262144
new,MemoryChunk,0x287cb5c0000,262144
new,MemoryChunk,0x1c4ef700000,262144
new,MemoryChunk,0x200fd580000,262144
new,MemoryChunk,0x19f3ce80000,262144
new,MemoryChunk,0x2a2ab380000,262144
new,MemoryChunk,0x77deb00000,262144
new,MemoryChunk,0xf2f2b40000,262144
new,MemoryChunk,0x1658bac0000,262144
tick,0x7ff6cc074104,11440267,0,0x0,1
new,MemoryChunk,0x35357880000,262144
new,MemoryChunk,0xc7be40000,262144
tick,0x7ff64c4a0cac,11456252,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x181448c0000,262144
new,MemoryChunk,0x20d902c0000,262144
new,MemoryChunk,0x3247f4c0000,262144
new,MemoryChunk,0x30120480000,262144
new,MemoryChunk,0x3898b840000,262144
new,MemoryChunk,0x16714b00000,262144
new,MemoryChunk,0x3183fc40000,262144
new,MemoryChunk,0x3bf8440000,262144
new,MemoryChunk,0x1dc9dd00000,262144
new,MemoryChunk,0x19a78500000,262144
tick,0x7ff64c495ab0,11472246,0,0x0,0,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x30e2eb00000,262144
new,MemoryChunk,0x383d3c40000,262144
tick,0x7ff6cc0726ea,11488282,0,0x0,1
new,MemoryChunk,0x20bf6d80000,262144
new,MemoryChunk,0x77b8980000,262144
new,MemoryChunk,0x2c966c80000,262144
new,MemoryChunk,0x27b6ca40000,262144
new,MemoryChunk,0x2d191b00000,262144
new,MemoryChunk,0x2df383c0000,262144
new,MemoryChunk,0x23f0da40000,262144
new,MemoryChunk,0x2186a240000,262144
tick,0x7ff66c2dc0b2,11504278,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xe762740000,262144
new,MemoryChunk,0x39060e80000,262144
new,MemoryChunk,0xf59a380000,262144
new,MemoryChunk,0x35ad08c0000,262144
new,MemoryChunk,0x3880c6c0000,262144
new,MemoryChunk,0xc34e3c0000,262144
new,MemoryChunk,0x1f832b00000,262144
new,MemoryChunk,0x4bc4440000,262144
new,MemoryChunk,0x15257780000,262144
new,MemoryChunk,0x34fd1740000,262144
tick,0x7ff6cbf21625,11520250,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1aa41180000,262144
new,MemoryChunk,0x27449880000,262144
new,MemoryChunk,0x36eb6000000,262144
new,MemoryChunk,0x33a42580000,262144
new,MemoryChunk,0xbea81c0000,262144
new,MemoryChunk,0x3f7dac0000,262144
new,MemoryChunk,0x43f0ec0000,262144
new,MemoryChunk,0x3261eb00000,262144
new,MemoryChunk,0x15849540000,262144
new,MemoryChunk,0xb0b04c0000,262144
tick,0x7ff6cc0736de,11536282,0,0x0,1
delete,MemoryChunk,0x6d67bc0000
delete,MemoryChunk,0x16fe9d00000
delete,MemoryChunk,0x185b0900000
delete,MemoryChunk,0x18e619c0000
delete,MemoryChunk,0xf17b700000
delete,MemoryChunk,0x23e929c0000
delete,MemoryChunk,0x31e87cc0000
delete,MemoryChunk,0x55b4740000
delete,MemoryChunk,0x20728f40000
delete,MemoryChunk,0x1ddab580000
delete,MemoryChunk,0x2ce095c0000
delete,MemoryChunk,0x3910d540000
delete,MemoryChunk,0x21006d40000
delete,MemoryChunk,0x277e8180000
delete,MemoryChunk,0x389a1ec0000
delete,MemoryChunk,0xaefc2c0000
delete,MemoryChunk,0x103a3c80000
delete,MemoryChunk,0x1ce77380000
delete,MemoryChunk,0x17200c80000
delete,MemoryChunk,0x255693c0000
delete,MemoryChunk,0x200fd580000
delete,MemoryChunk,0x16d6bd00000
delete,MemoryChunk,0x287cb5c0000
delete,MemoryChunk,0x2a2ab380000
delete,MemoryChunk,0x3b77f4c0000
delete,MemoryChunk,0x1c4ef700000
delete,MemoryChunk,0x2db47700000
delete,MemoryChunk,0x19f3ce80000
delete,MemoryChunk,0x77deb00000
delete,MemoryChunk,0xf2f2b40000
delete,MemoryChunk,0xc7be40000
delete,MemoryChunk,0x181448c0000
delete,MemoryChunk,0x30120480000
delete,MemoryChunk,0x3183fc40000
delete,MemoryChunk,0x35357880000
delete,MemoryChunk,0x19a78500000
delete,MemoryChunk,0x3bf8440000
delete,MemoryChunk,0x3247f4c0000
delete,MemoryChunk,0x16714b00000
delete,MemoryChunk,0x20d902c0000
delete,MemoryChunk,0x3898b840000
delete,MemoryChunk,0x1dc9dd00000
delete,MemoryChunk,0x2121ec80000
delete,MemoryChunk,0x20bf6d80000
delete,MemoryChunk,0x2c966c80000
delete,MemoryChunk,0x30e2eb00000
delete,MemoryChunk,0x77b8980000
delete,MemoryChunk,0x2d191b00000
delete,MemoryChunk,0x383d3c40000
delete,MemoryChunk,0x27b6ca40000
delete,MemoryChunk,0x23f0da40000
delete,MemoryChunk,0xe762740000
delete,MemoryChunk,0x2df383c0000
delete,MemoryChunk,0x39060e80000
delete,MemoryChunk,0x34fd1740000
delete,MemoryChunk,0x15257780000
delete,MemoryChunk,0x35ad08c0000
delete,MemoryChunk,0xf59a380000
delete,MemoryChunk,0x3880c6c0000
delete,MemoryChunk,0x1f832b00000
delete,MemoryChunk,0x33a42580000
delete,MemoryChunk,0x43f0ec0000
delete,MemoryChunk,0x4bc4440000
delete,MemoryChunk,0x15849540000
delete,MemoryChunk,0x771dc80000
delete,MemoryChunk,0x36eb6000000
delete,MemoryChunk,0x1aa41180000
delete,MemoryChunk,0x2186a240000
delete,MemoryChunk,0x3f7dac0000
delete,MemoryChunk,0xc34e3c0000
delete,MemoryChunk,0x27449880000
delete,MemoryChunk,0x1658bac0000
delete,MemoryChunk,0xbea81c0000
delete,MemoryChunk,0x3261eb00000
tick,0x7ff64c4950c4,11552262,0,0x0,0,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb082c,11568280,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4968f2,11584296,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49bd59,11600239,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc14f98d,11616365,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c30a376,11632255,0,0x0,0,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0726cf,11648292,0,0x0,1
tick,0x7ff66c241c2d,11664231,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9b453,11680342,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf75,11696373,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241bc6,11712231,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2ef191c0000,262144
new,MemoryChunk,0x2a9ecd80000,262144
new,MemoryChunk,0x25f28940000,262144
new,MemoryChunk,0x1c930a40000,262144
new,MemoryChunk,0x18fbf580000,262144
new,MemoryChunk,0x33da71c0000,262144
new,MemoryChunk,0x3c574f00000,262144
new,MemoryChunk,0x8b32e00000,262144
tick,0x7ff6cc2a8b47,11728286,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x43e7300000,262144
new,MemoryChunk,0xd542840000,262144
new,MemoryChunk,0x33dd5bc0000,262144
new,MemoryChunk,0x242e6a80000,262144
new,MemoryChunk,0x3a87acc0000,262144
new,MemoryChunk,0x17149240000,262144
new,MemoryChunk,0x4d93c40000,262144
new,MemoryChunk,0x14b75100000,262144
new,MemoryChunk,0x338d8600000,262144
new,MemoryChunk,0x1d252840000,262144
new,MemoryChunk,0x57dc840000,262144
new,MemoryChunk,0x21feac80000,262144
tick,0x7ff6cbdacadc,11744251,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c299c40,11760265,0,0x0,0,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35ed6800000,262144
new,MemoryChunk,0x24f2bd80000,262144
new,MemoryChunk,0x16d2d680000,262144
new,MemoryChunk,0x2d0d440000,262144
new,MemoryChunk,0x92efa00000,262144
new,MemoryChunk,0x9592640000,262144
new,MemoryChunk,0x3a003240000,262144
new,MemoryChunk,0x348e1a80000,262144
new,MemoryChunk,0x37119700000,262144
tick,0x7ff6cc0ffc9d,11776278,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x248bb400000,262144
new,MemoryChunk,0x6c5d00000,262144
new,MemoryChunk,0x8608880000,262144
new,MemoryChunk,0x5388b00000,262144
new,MemoryChunk,0x19970bc0000,262144
new,MemoryChunk,0x20261940000,262144
new,MemoryChunk,0x29e5d300000,262144
new,MemoryChunk,0x3efbc5c0000,262144
new,MemoryChunk,0x2d4aab00000,262144
new,MemoryChunk,0x2291ea80000,262144
new,MemoryChunk,0x2a078a80000,262144
tick,0x7ff6cbe6bb5c,11792111,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c6ef,11808088,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x32a35080000,262144
new,MemoryChunk,0x251d800000,262144
new,MemoryChunk,0x13be7d00000,262144
new,MemoryChunk,0x2a9fc2c0000,262144
new,MemoryChunk,0x216bff80000,262144
new,MemoryChunk,0x2aa3500000,262144
new,MemoryChunk,0x3f7d31c0000,262144
new,MemoryChunk,0x570be80000,262144
new,MemoryChunk,0x3fca600000,262144
new,MemoryChunk,0x189c6380000,262144
tick,0x7ff6cbf177bd,11824172,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x20c36e40000,262144
new,MemoryChunk,0x3ef81280000,262144
new,MemoryChunk,0x1ea6ac80000,262144
new,MemoryChunk,0x3da905c0000,262144
new,MemoryChunk,0x22a64dc0000,262144
new,MemoryChunk,0x22b27280000,262144
new,MemoryChunk,0x1f9c0840000,262144
new,MemoryChunk,0x187d8dc0000,262144
new,MemoryChunk,0x383f4d80000,262144
tick,0x7ff6cc0726e3,11840134,0,0x0,1
tick,0x7ff66c2bc7e8,11856210,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3f29a280000,262144
new,MemoryChunk,0x26eb5ec0000,262144
new,MemoryChunk,0x1113a0c0000,262144
new,MemoryChunk,0x3b65d700000,262144
new,MemoryChunk,0x145d3f80000,262144
new,MemoryChunk,0x12b013c0000,262144
new,MemoryChunk,0x3f818e40000,262144
new,MemoryChunk,0x83c51c0000,262144
new,MemoryChunk,0x19251740000,262144
new,MemoryChunk,0xc90b380000,262144
tick,0x7ff6cbebc248,11872128,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5c7cb00000,262144
new,MemoryChunk,0xf322280000,262144
new,MemoryChunk,0xf2443c0000,262144
new,MemoryChunk,0x757b100000,262144
new,MemoryChunk,0x29e1cd00000,262144
new,MemoryChunk,0xe987f40000,262144
new,MemoryChunk,0xe421d80000,262144
new,MemoryChunk,0x19fbd9c0000,262144
new,MemoryChunk,0x20f15700000,262144
new,MemoryChunk,0x36a77bc0000,262144
new,MemoryChunk,0x174b9fc0000,262144
tick,0x7ff6cc0908eb,11888105,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
delete,MemoryChunk,0x2a9ecd80000
delete,MemoryChunk,0x1c930a40000
delete,MemoryChunk,0x3c574f00000
delete,MemoryChunk,0x25f28940000
delete,MemoryChunk,0x18fbf580000
delete,MemoryChunk,0x8b32e00000
delete,MemoryChunk,0x2ef191c0000
delete,MemoryChunk,0x33da71c0000
delete,MemoryChunk,0x43e7300000
delete,MemoryChunk,0xd542840000
delete,MemoryChunk,0x4d93c40000
delete,MemoryChunk,0x242e6a80000
delete,MemoryChunk,0x3a87acc0000
delete,MemoryChunk,0x17149240000
delete,MemoryChunk,0x338d8600000
delete,MemoryChunk,0x57dc840000
delete,MemoryChunk,0x33dd5bc0000
delete,MemoryChunk,0x14b75100000
delete,MemoryChunk,0x2d0d440000
delete,MemoryChunk,0xb0b04c0000
delete,MemoryChunk,0x35ed6800000
delete,MemoryChunk,0x21feac80000
delete,MemoryChunk,0x24f2bd80000
delete,MemoryChunk,0x92efa00000
delete,MemoryChunk,0x3a003240000
delete,MemoryChunk,0x16d2d680000
delete,MemoryChunk,0x248bb400000
delete,MemoryChunk,0x8608880000
delete,MemoryChunk,0x29e5d300000
delete,MemoryChunk,0x2d4aab00000
delete,MemoryChunk,0x2a078a80000
delete,MemoryChunk,0x6c5d00000
delete,MemoryChunk,0x5388b00000
delete,MemoryChunk,0x20261940000
delete,MemoryChunk,0x2291ea80000
delete,MemoryChunk,0x19970bc0000
delete,MemoryChunk,0x216bff80000
delete,MemoryChunk,0x1d252840000
delete,MemoryChunk,0x32a35080000
delete,MemoryChunk,0x251d800000
delete,MemoryChunk,0x189c6380000
delete,MemoryChunk,0x13be7d00000
delete,MemoryChunk,0x3f7d31c0000
delete,MemoryChunk,0x2aa3500000
delete,MemoryChunk,0x3da905c0000
delete,MemoryChunk,0x22b27280000
delete,MemoryChunk,0x20c36e40000
delete,MemoryChunk,0x1ea6ac80000
delete,MemoryChunk,0x22a64dc0000
delete,MemoryChunk,0x187d8dc0000
delete,MemoryChunk,0x3ef81280000
delete,MemoryChunk,0x1f9c0840000
delete,MemoryChunk,0x3f29a280000
delete,MemoryChunk,0x145d3f80000
delete,MemoryChunk,0x3b65d700000
delete,MemoryChunk,0x12b013c0000
delete,MemoryChunk,0x1113a0c0000
delete,MemoryChunk,0x3f818e40000
delete,MemoryChunk,0x570be80000
delete,MemoryChunk,0x26eb5ec0000
delete,MemoryChunk,0x83c51c0000
delete,MemoryChunk,0x19251740000
delete,MemoryChunk,0xf2443c0000
delete,MemoryChunk,0xe421d80000
delete,MemoryChunk,0x348e1a80000
delete,MemoryChunk,0x5c7cb00000
delete,MemoryChunk,0x29e1cd00000
delete,MemoryChunk,0x383f4d80000
delete,MemoryChunk,0xf322280000
delete,MemoryChunk,0xe987f40000
delete,MemoryChunk,0x9592640000
delete,MemoryChunk,0x757b100000
delete,MemoryChunk,0x36a77bc0000
delete,MemoryChunk,0x174b9fc0000
delete,MemoryChunk,0x20f15700000
delete,MemoryChunk,0x19fbd9c0000
tick,0x7ff6cbe937d0,11904149,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241bb7,11920089,0,0x0,0,0x7ff64c4968b6,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06dabf,11936127,0,0x0,1
tick,0x7ff66c241b4c,11952177,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe94c37,11968144,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c290085,11984138,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec2847,12000114,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0c1,12016152,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb02,12032095,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb139,12048119,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c3a4,12064315,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x38f82d80000,262144
new,MemoryChunk,0x169a3540000,262144
new,MemoryChunk,0x4e86e80000,262144
new,MemoryChunk,0x18361800000,262144
new,MemoryChunk,0x1503bd40000,262144
new,MemoryChunk,0x312d5d00000,262144
new,MemoryChunk,0x16770c0000,262144
new,MemoryChunk,0x47f0400000,262144
new,MemoryChunk,0x69eec40000,262144
new,MemoryChunk,0x3ca0a140000,262144
new,MemoryChunk,0x3498e680000,262144
tick,0x7ff6cbeb9b03,12080123,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x185b90c0000,262144
new,MemoryChunk,0x8577740000,262144
new,MemoryChunk,0x332a1440000,262144
new,MemoryChunk,0x11d82d40000,262144
new,MemoryChunk,0x358ad980000,262144
tick,0x7ff6cc075bda,12096173,0,0x0,1
new,MemoryChunk,0x323bf980000,262144
new,MemoryChunk,0x2b453bc0000,262144
new,MemoryChunk,0x1c9bc080000,262144
new,MemoryChunk,0x248a4040000,262144
new,MemoryChunk,0x3eef78c0000,262144
tick,0x7ff64c49a292,12112115,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3170fd80000,262144
new,MemoryChunk,0x3ee8c2c0000,262144
new,MemoryChunk,0xead09c0000,262144
new,MemoryChunk,0x32e9e0c0000,262144
new,MemoryChunk,0x3d2100c0000,262144
new,MemoryChunk,0xb564d00000,262144
new,MemoryChunk,0xd012f40000,262144
new,MemoryChunk,0x2ab2900000,262144
new,MemoryChunk,0x2d468940000,262144
tick,0x7ff66c2dc0d1,12128134,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x181d4c80000,262144
new,MemoryChunk,0x3780f1c0000,262144
new,MemoryChunk,0x192f9c0000,262144
new,MemoryChunk,0x1d091bc0000,262144
new,MemoryChunk,0x2ca65e40000,262144
new,MemoryChunk,0x15dc8f80000,262144
new,MemoryChunk,0x16f75f80000,262144
new,MemoryChunk,0xc7a9000000,262144
new,MemoryChunk,0x197c3c0000,262144
new,MemoryChunk,0x1d2d3bc0000,262144
new,MemoryChunk,0x4cae500000,262144
tick,0x7ff64c4968ff,12144091,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf20f86,12160293,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x20662c00000,262144
new,MemoryChunk,0x2c39f640000,262144
new,MemoryChunk,0x1feabd00000,262144
new,MemoryChunk,0x35f19640000,262144
new,MemoryChunk,0x19bb400000,262144
new,MemoryChunk,0x1e08b380000,262144
new,MemoryChunk,0x2e90bc0000,262144
tick,0x7ff6cbe94c4d,12176079,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x28ffb500000,262144
new,MemoryChunk,0x1ae6100000,262144
new,MemoryChunk,0x18c2a040000,262144
new,MemoryChunk,0x31e79600000,262144
new,MemoryChunk,0x2e830540000,262144
new,MemoryChunk,0xaf9ddc0000,262144
new,MemoryChunk,0x3c2c3700000,262144
new,MemoryChunk,0x3ae3eb40000,262144
new,MemoryChunk,0x173f2680000,262144
new,MemoryChunk,0xc06d400000,262144
new,MemoryChunk,0xae65e40000,262144
tick,0x7ff64c49664f,12192057,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeaf8f5,12208042,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x21636640000,262144
new,MemoryChunk,0x2eb82fc0000,262144
new,MemoryChunk,0x2f918080000,262144
new,MemoryChunk,0xa298380000,262144
new,MemoryChunk,0x3d5f8140000,262144
new,MemoryChunk,0xbfd7580000,262144
new,MemoryChunk,0x25cbf140000,262144
new,MemoryChunk,0x230a3c00000,262144
new,MemoryChunk,0x117bdac0000,262144
new,MemoryChunk,0x2d4c6840000,262144
tick,0x7ff6cbebb75c,12224058,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x16881f00000,262144
new,MemoryChunk,0x195dc700000,262144
new,MemoryChunk,0x33094d80000,262144
new,MemoryChunk,0x3b886100000,262144
new,MemoryChunk,0x841de80000,262144
new,MemoryChunk,0x38bb7100000,262144
new,MemoryChunk,0x202bf3c0000,262144
tick,0x7ff6cc06d070,12240064,0,0x0,1
new,MemoryChunk,0x1fb36940000,262144
new,MemoryChunk,0x1a1b6280000,262144
delete,MemoryChunk,0x3efbc5c0000
delete,MemoryChunk,0x3fca600000
delete,MemoryChunk,0xc90b380000
delete,MemoryChunk,0x38f82d80000
delete,MemoryChunk,0x169a3540000
delete,MemoryChunk,0x4e86e80000
delete,MemoryChunk,0x16770c0000
delete,MemoryChunk,0x69eec40000
delete,MemoryChunk,0x1503bd40000
delete,MemoryChunk,0x312d5d00000
delete,MemoryChunk,0x47f0400000
delete,MemoryChunk,0x11d82d40000
delete,MemoryChunk,0x18361800000
delete,MemoryChunk,0x8577740000
delete,MemoryChunk,0x1c9bc080000
delete,MemoryChunk,0x332a1440000
delete,MemoryChunk,0x2b453bc0000
delete,MemoryChunk,0x323bf980000
delete,MemoryChunk,0x185b90c0000
delete,MemoryChunk,0x358ad980000
delete,MemoryChunk,0x248a4040000
delete,MemoryChunk,0x3d2100c0000
delete,MemoryChunk,0x3170fd80000
delete,MemoryChunk,0x32e9e0c0000
delete,MemoryChunk,0x3ee8c2c0000
delete,MemoryChunk,0xb564d00000
delete,MemoryChunk,0x2d468940000
delete,MemoryChunk,0xd012f40000
delete,MemoryChunk,0x2ab2900000
delete,MemoryChunk,0x181d4c80000
delete,MemoryChunk,0x3498e680000
delete,MemoryChunk,0x1d091bc0000
delete,MemoryChunk,0x2ca65e40000
delete,MemoryChunk,0x192f9c0000
delete,MemoryChunk,0x15dc8f80000
delete,MemoryChunk,0x3780f1c0000
delete,MemoryChunk,0x1feabd00000
delete,MemoryChunk,0x2e90bc0000
delete,MemoryChunk,0x16f75f80000
delete,MemoryChunk,0x20662c00000
delete,MemoryChunk,0x35f19640000
delete,MemoryChunk,0x1e08b380000
delete,MemoryChunk,0x28ffb500000
delete,MemoryChunk,0x31e79600000
delete,MemoryChunk,0x3c2c3700000
delete,MemoryChunk,0x18c2a040000
delete,MemoryChunk,0xaf9ddc0000
delete,MemoryChunk,0x3ae3eb40000
delete,MemoryChunk,0x19bb400000
delete,MemoryChunk,0x1ae6100000
delete,MemoryChunk,0x2e830540000
delete,MemoryChunk,0xc7a9000000
delete,MemoryChunk,0x3eef78c0000
delete,MemoryChunk,0xc06d400000
delete,MemoryChunk,0x2eb82fc0000
delete,MemoryChunk,0x25cbf140000
delete,MemoryChunk,0x3d5f8140000
delete,MemoryChunk,0x230a3c00000
delete,MemoryChunk,0xbfd7580000
delete,MemoryChunk,0x2f918080000
delete,MemoryChunk,0x2d4c6840000
delete,MemoryChunk,0x3ca0a140000
delete,MemoryChunk,0x3b886100000
delete,MemoryChunk,0x1fb36940000
delete,MemoryChunk,0xae65e40000
delete,MemoryChunk,0x16881f00000
delete,MemoryChunk,0x4cae500000
delete,MemoryChunk,0x841de80000
delete,MemoryChunk,0x202bf3c0000
delete,MemoryChunk,0xead09c0000
delete,MemoryChunk,0x1d2d3bc0000
delete,MemoryChunk,0x195dc700000
delete,MemoryChunk,0x38bb7100000
delete,MemoryChunk,0x1a1b6280000
delete,MemoryChunk,0x33094d80000
tick,0x7ff6cbec34c2,12256062,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,12272064,0,0x0,1
tick,0x7ff66c241c6b,12288109,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0279,12304063,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0726e3,12320103,0,0x0,1
tick,0x7ff64c496832,12336076,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebdce8,12352073,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0736e7,12368125,0,0x0,1
tick,0x7ff6cbebbb0a,12384107,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0fb603,12400115,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc150a54,12416106,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb083f,12432072,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1250d4c0000,262144
new,MemoryChunk,0x352b6d40000,262144
new,MemoryChunk,0x137ae800000,262144
new,MemoryChunk,0x3fd8d400000,262144
new,MemoryChunk,0x93ec0c0000,262144
new,MemoryChunk,0x60645c0000,262144
new,MemoryChunk,0x281fdc0000,262144
new,MemoryChunk,0xb81d400000,262144
tick,0x7ff6cbba9245,12447114,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x34cd6ac0000,262144
new,MemoryChunk,0x3b8501c0000,262144
new,MemoryChunk,0x237f2500000,262144
new,MemoryChunk,0x29fc4080000,262144
new,MemoryChunk,0x30749680000,262144
new,MemoryChunk,0x31b0eb80000,262144
new,MemoryChunk,0x1fe63f00000,262144
new,MemoryChunk,0x3355d940000,262144
new,MemoryChunk,0x2c113ac0000,262144
tick,0x7ff6cc06e3f0,12463231,0,0x0,1
tick,0x7ff6cbf1ff17,12479077,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x10be6bc0000,262144
new,MemoryChunk,0x37287240000,262144
new,MemoryChunk,0x3512ca00000,262144
new,MemoryChunk,0xacd1240000,262144
new,MemoryChunk,0x3629da80000,262144
new,MemoryChunk,0x208cfe00000,262144
new,MemoryChunk,0x1ef4f040000,262144
new,MemoryChunk,0x17a93380000,262144
new,MemoryChunk,0x20b83740000,262144
new,MemoryChunk,0x1f886ac0000,262144
tick,0x7ff6cbe9b4c1,12495067,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3d245640000,262144
new,MemoryChunk,0x1155cf40000,262144
new,MemoryChunk,0xe6ce640000,262144
new,MemoryChunk,0x3d059940000,262144
new,MemoryChunk,0x8cc4140000,262144
new,MemoryChunk,0x19dc6980000,262144
new,MemoryChunk,0xc2c7240000,262144
new,MemoryChunk,0x171ba600000,262144
new,MemoryChunk,0xb109fc0000,262144
new,MemoryChunk,0x241de1c0000,262144
tick,0x7ff6cbe6baf0,12511108,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebcca2,12527276,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2712a740000,262144
new,MemoryChunk,0x25a41ac0000,262144
new,MemoryChunk,0x90de500000,262144
new,MemoryChunk,0x3ba1f00000,262144
new,MemoryChunk,0x17a0c3c0000,262144
new,MemoryChunk,0x101bd500000,262144
new,MemoryChunk,0x1ab41700000,262144
new,MemoryChunk,0x1404afc0000,262144
new,MemoryChunk,0x22397c80000,262144
tick,0x7ff6cbe6baeb,12543082,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x101f2840000,262144
new,MemoryChunk,0x2516c500000,262144
new,MemoryChunk,0x22412880000,262144
new,MemoryChunk,0x341cefc0000,262144
new,MemoryChunk,0x2604a240000,262144
new,MemoryChunk,0x8da9740000,262144
new,MemoryChunk,0x1e040380000,262144
new,MemoryChunk,0xb0ea300000,262144
new,MemoryChunk,0x865f8c0000,262144
new,MemoryChunk,0x3f0c8000000,262144
tick,0x7ff64c49a305,12559083,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2bb9cb80000,262144
new,MemoryChunk,0x1bac20c0000,262144
new,MemoryChunk,0x3e1c0500000,262144
new,MemoryChunk,0x3430ee40000,262144
new,MemoryChunk,0x82aec00000,262144
new,MemoryChunk,0x3e2c6f00000,262144
new,MemoryChunk,0x19046100000,262144
tick,0x7ff6cc06c1d1,12575122,0,0x0,1
new,MemoryChunk,0x37357dc0000,262144
tick,0x7ff6cbebbad3,12590540,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2e688080000,262144
new,MemoryChunk,0x1f33b140000,262144
new,MemoryChunk,0x29e30240000,262144
new,MemoryChunk,0x19b0c980000,262144
new,MemoryChunk,0x1c24af40000,262144
new,MemoryChunk,0x32bb7200000,262144
new,MemoryChunk,0x344f8ec0000,262144
new,MemoryChunk,0x1114a940000,262144
new,MemoryChunk,0x4bb63c0000,262144
new,MemoryChunk,0x23331840000,262144
new,MemoryChunk,0x2af7c400000,262144
delete,MemoryChunk,0x1f4b16c0000
delete,MemoryChunk,0x2c39f640000
delete,MemoryChunk,0x173f2680000
delete,MemoryChunk,0x21636640000
delete,MemoryChunk,0x117bdac0000
delete,MemoryChunk,0xa298380000
delete,MemoryChunk,0x1250d4c0000
delete,MemoryChunk,0x352b6d40000
delete,MemoryChunk,0xb81d400000
delete,MemoryChunk,0x237f2500000
delete,MemoryChunk,0x93ec0c0000
delete,MemoryChunk,0x29fc4080000
delete,MemoryChunk,0x31b0eb80000
delete,MemoryChunk,0x1fe63f00000
delete,MemoryChunk,0x137ae800000
delete,MemoryChunk,0x34cd6ac0000
delete,MemoryChunk,0x3355d940000
delete,MemoryChunk,0x3512ca00000
delete,MemoryChunk,0x3629da80000
delete,MemoryChunk,0xacd1240000
delete,MemoryChunk,0x60645c0000
delete,MemoryChunk,0x1ef4f040000
delete,MemoryChunk,0x1f886ac0000
delete,MemoryChunk,0x37287240000
delete,MemoryChunk,0x208cfe00000
delete,MemoryChunk,0x10be6bc0000
delete,MemoryChunk,0x19dc6980000
delete,MemoryChunk,0xe6ce640000
delete,MemoryChunk,0x171ba600000
delete,MemoryChunk,0x3d245640000
delete,MemoryChunk,0x3d059940000
delete,MemoryChunk,0x1155cf40000
delete,MemoryChunk,0xc2c7240000
delete,MemoryChunk,0x1ab41700000
delete,MemoryChunk,0x3ba1f00000
delete,MemoryChunk,0x25a41ac0000
delete,MemoryChunk,0x17a0c3c0000
delete,MemoryChunk,0x2712a740000
delete,MemoryChunk,0x101bd500000
delete,MemoryChunk,0x1404afc0000
delete,MemoryChunk,0x341cefc0000
delete,MemoryChunk,0x101f2840000
delete,MemoryChunk,0x30749680000
delete,MemoryChunk,0xb109fc0000
delete,MemoryChunk,0x20b83740000
delete,MemoryChunk,0x8da9740000
delete,MemoryChunk,0x2516c500000
delete,MemoryChunk,0x865f8c0000
delete,MemoryChunk,0x22412880000
delete,MemoryChunk,0x3f0c8000000
delete,MemoryChunk,0x1e040380000
delete,MemoryChunk,0x2604a240000
delete,MemoryChunk,0x3430ee40000
delete,MemoryChunk,0x3e2c6f00000
delete,MemoryChunk,0xb0ea300000
delete,MemoryChunk,0x3e1c0500000
delete,MemoryChunk,0x2bb9cb80000
delete,MemoryChunk,0x82aec00000
delete,MemoryChunk,0x19046100000
delete,MemoryChunk,0x37357dc0000
delete,MemoryChunk,0x19b0c980000
delete,MemoryChunk,0x32bb7200000
delete,MemoryChunk,0x344f8ec0000
delete,MemoryChunk,0x22397c80000
delete,MemoryChunk,0x2af7c400000
delete,MemoryChunk,0x1114a940000
delete,MemoryChunk,0x1f33b140000
delete,MemoryChunk,0x1c24af40000
delete,MemoryChunk,0x23331840000
delete,MemoryChunk,0x4bb63c0000
tick,0x7ff6cbebcca2,12606555,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbb6e8ea,12622561,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0b2,12638627,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0279,12654531,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec699e,12670517,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc3a9,12686574,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2d94bc,12702551,0,0x0,0,0x7ff64c499d09,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06dd39,12718584,0,0x0,1
tick,0x7ff6cbec69e6,12734592,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec6abf,12750548,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec66a5,12766565,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc070130,12782606,0,0x0,1
tick,0x7ff6cbec45ab,12798614,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xe65a1c0000,262144
new,MemoryChunk,0x2c1badc0000,262144
new,MemoryChunk,0x202e1940000,262144
new,MemoryChunk,0x51f83c0000,262144
new,MemoryChunk,0x2a9c8280000,262144
new,MemoryChunk,0x1763d5c0000,262144
new,MemoryChunk,0x9ac59c0000,262144
tick,0x7ff6cc0fd1ec,12814557,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x16208c00000,262144
new,MemoryChunk,0x2ae32d40000,262144
new,MemoryChunk,0x18c3b800000,262144
new,MemoryChunk,0x26c8d2c0000,262144
new,MemoryChunk,0x25c5880000,262144
tick,0x7ff6cc0726e7,12830579,0,0x0,1
new,MemoryChunk,0x2783b7c0000,262144
new,MemoryChunk,0xcfb38c0000,262144
new,MemoryChunk,0x276ade80000,262144
tick,0x7ff6cbf1c85a,12846610,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x740a440000,262144
new,MemoryChunk,0x2d33d40000,262144
new,MemoryChunk,0x11e9e7c0000,262144
new,MemoryChunk,0x386fb440000,262144
new,MemoryChunk,0x32286780000,262144
new,MemoryChunk,0x21852340000,262144
new,MemoryChunk,0x2dbd74c0000,262144
new,MemoryChunk,0xdd6a0c0000,262144
tick,0x7ff64c496090,12862549,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec6620,12878557,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x18fdcf40000,262144
new,MemoryChunk,0xa1d000000,262144
new,MemoryChunk,0x144d2200000,262144
new,MemoryChunk,0x11590b40000,262144
new,MemoryChunk,0x131b7880000,262144
new,MemoryChunk,0x22371380000,262144
new,MemoryChunk,0x20d2fc0000,262144
new,MemoryChunk,0x7268500000,262144
new,MemoryChunk,0x3d30c40000,262144
new,MemoryChunk,0x2b015580000,262144
tick,0x7ff64c497909,12894574,0,0x0,0,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x20b2fe80000,262144
new,MemoryChunk,0x52e6540000,262144
new,MemoryChunk,0x2f2a3000000,262144
new,MemoryChunk,0x113e7bc0000,262144
new,MemoryChunk,0x1b02d080000,262144
new,MemoryChunk,0x3d29c680000,262144
tick,0x7ff6cbec3a2f,12910607,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc075c36,12926554,0,0x0,1
new,MemoryChunk,0x2b356dc0000,262144
new,MemoryChunk,0x33a9bac0000,262144
new,MemoryChunk,0x1728e8c0000,262144
new,MemoryChunk,0x2a9da200000,262144
new,MemoryChunk,0x2e6f5340000,262144
new,MemoryChunk,0x21e42880000,262144
new,MemoryChunk,0x85a7ac0000,262144
new,MemoryChunk,0x30db1940000,262144
new,MemoryChunk,0x1e383180000,262144
tick,0x7ff6cbf1c1b3,12942588,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x40b6f80000,262144
new,MemoryChunk,0x148fef40000,262144
new,MemoryChunk,0x24496500000,262144
new,MemoryChunk,0x513a640000,262144
new,MemoryChunk,0x278e4580000,262144
new,MemoryChunk,0x377e9900000,262144
new,MemoryChunk,0x77b9c80000,262144
tick,0x7ff66c2dc0b2,12958631,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c4a23f1,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bca06,12974620,0,0x0,0,0x7ff64c47e965,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x31a1efc0000,262144
new,MemoryChunk,0x18dcaac0000,262144
new,MemoryChunk,0x4036b80000,262144
new,MemoryChunk,0x1511b6c0000,262144
new,MemoryChunk,0x38b346c0000,262144
new,MemoryChunk,0x9a6cec0000,262144
new,MemoryChunk,0x1dc11880000,262144
tick,0x7ff6cbe9b5c4,12990577,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c309d96,13006563,0,0x0,0,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x218abe00000,262144
new,MemoryChunk,0x147c9ec0000,262144
new,MemoryChunk,0x249eed80000,262144
new,MemoryChunk,0x1c12ce00000,262144
new,MemoryChunk,0x3e742b80000,262144
new,MemoryChunk,0x2eca5240000,262144
new,MemoryChunk,0x3d6dde40000,262144
new,MemoryChunk,0xdfecc40000,262144
delete,MemoryChunk,0x197c3c0000
delete,MemoryChunk,0x8cc4140000
delete,MemoryChunk,0x3fd8d400000
delete,MemoryChunk,0x281fdc0000
delete,MemoryChunk,0x2c113ac0000
delete,MemoryChunk,0x3b8501c0000
delete,MemoryChunk,0x90de500000
delete,MemoryChunk,0x2a9c8280000
delete,MemoryChunk,0x202e1940000
delete,MemoryChunk,0x51f83c0000
delete,MemoryChunk,0x9ac59c0000
delete,MemoryChunk,0x2c1badc0000
delete,MemoryChunk,0x1763d5c0000
delete,MemoryChunk,0xe65a1c0000
delete,MemoryChunk,0x26c8d2c0000
delete,MemoryChunk,0x2ae32d40000
delete,MemoryChunk,0x16208c00000
delete,MemoryChunk,0x25c5880000
delete,MemoryChunk,0x11e9e7c0000
delete,MemoryChunk,0x32286780000
delete,MemoryChunk,0x2dbd74c0000
delete,MemoryChunk,0xdd6a0c0000
delete,MemoryChunk,0x386fb440000
delete,MemoryChunk,0x2d33d40000
delete,MemoryChunk,0xa1d000000
delete,MemoryChunk,0x22371380000
delete,MemoryChunk,0x131b7880000
delete,MemoryChunk,0x3d30c40000
delete,MemoryChunk,0x2b015580000
delete,MemoryChunk,0x18fdcf40000
delete,MemoryChunk,0x3d29c680000
delete,MemoryChunk,0x7268500000
delete,MemoryChunk,0x2f2a3000000
delete,MemoryChunk,0x1b02d080000
delete,MemoryChunk,0x144d2200000
delete,MemoryChunk,0x113e7bc0000
delete,MemoryChunk,0x2b356dc0000
delete,MemoryChunk,0x2a9da200000
delete,MemoryChunk,0x1e383180000
delete,MemoryChunk,0x20d2fc0000
delete,MemoryChunk,0x276ade80000
delete,MemoryChunk,0x2e6f5340000
delete,MemoryChunk,0x33a9bac0000
delete,MemoryChunk,0x1728e8c0000
delete,MemoryChunk,0x513a640000
delete,MemoryChunk,0x24496500000
delete,MemoryChunk,0x377e9900000
delete,MemoryChunk,0x40b6f80000
delete,MemoryChunk,0x278e4580000
delete,MemoryChunk,0x148fef40000
delete,MemoryChunk,0x1511b6c0000
delete,MemoryChunk,0x77b9c80000
delete,MemoryChunk,0x21e42880000
delete,MemoryChunk,0x18dcaac0000
delete,MemoryChunk,0x31a1efc0000
delete,MemoryChunk,0x1dc11880000
delete,MemoryChunk,0x85a7ac0000
delete,MemoryChunk,0x38b346c0000
delete,MemoryChunk,0x218abe00000
delete,MemoryChunk,0x3d6dde40000
delete,MemoryChunk,0x1c12ce00000
delete,MemoryChunk,0x3e742b80000
delete,MemoryChunk,0x249eed80000
delete,MemoryChunk,0xdfecc40000
delete,MemoryChunk,0x2eca5240000
tick,0x7ff66c32f20c,13022561,0,0x0,0,0x7ff64c493727,0x7ff64c496901,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49a047,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c496392,13038571,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf8b,13054550,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0b2,13070620,0,0x0,0,0x7ff64c497a46,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb139,13086596,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c32f20c,13102642,0,0x0,0,0x7ff64c493727,0x7ff64c496901,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49a047,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3f39,13118588,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeba230,13134580,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c320978,13150590,0,0x0,0,0x7ff64c497a46,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497852,13166580,0,0x0,0,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc14fcba,13182625,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06ae9c,13198620,0,0x0,1
tick,0x7ff66c2dbe0e,13214606,0,0x0,0,0x7ff64c497a46,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0e0,13230727,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c85a,13246629,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6bb92,13262573,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0c51b3,13278591,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c495eac,13294648,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc35f,13310627,0,0x0,0,0x7ff64c4a0dd4,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xb474380000,262144
new,MemoryChunk,0x2f4f7640000,806912
code-creation,JS,13,13320162,0x7ff64c49c900,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c49c900,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
new,MemoryChunk,0x1d174c80000,262144
new,MemoryChunk,0x2b411240000,262144
new,MemoryChunk,0x21df29c0000,262144
new,MemoryChunk,0x2416fc80000,262144
new,MemoryChunk,0x2f5671c0000,262144
new,MemoryChunk,0x15ea840000,262144
tick,0x7ff6cc2229cd,13326594,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49c997,0x7ff6cc351d3c,0x3767e5461f4,0x3767e545467,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc687ed3,13342608,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49c997,0x7ff6cc351d3c,0x3767e5461f4,0x3767e545467,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb154,13358630,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b0dc080000,262144
new,MemoryChunk,0x49dce00000,262144
new,MemoryChunk,0x1bf0b000000,262144
new,MemoryChunk,0x12b21f40000,262144
new,MemoryChunk,0x52d5f80000,262144
new,MemoryChunk,0x3e027d40000,262144
tick,0x7ff6cbba9255,13374583,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3fc41480000,262144
new,MemoryChunk,0x3a0d7680000,262144
new,MemoryChunk,0x7b1ddc0000,262144
tick,0x7ff6cc0d891b,13390646,0,0x0,1
new,MemoryChunk,0x3cce8d40000,262144
new,MemoryChunk,0x23138300000,262144
tick,0x7ff6cc29be55,13406604,0,0x0,0,0x7ff64c499d09,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3af09b80000,262144
new,MemoryChunk,0x19257080000,262144
new,MemoryChunk,0x4fb6f80000,262144
new,MemoryChunk,0x21884380000,262144
new,MemoryChunk,0x227063c0000,262144
new,MemoryChunk,0x5921e00000,262144
new,MemoryChunk,0x3e219b80000,262144
new,MemoryChunk,0xf253bc0000,262144
new,MemoryChunk,0x18a875c0000,262144
new,MemoryChunk,0x1a303580000,262144
new,MemoryChunk,0x3ce2fac0000,262144
new,MemoryChunk,0x17589dc0000,262144
tick,0x7ff6cc0fb603,13422653,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1a948200000,262144
new,MemoryChunk,0x27bfa900000,262144
new,MemoryChunk,0x29dcc600000,262144
new,MemoryChunk,0xc1a00000,262144
new,MemoryChunk,0xb472700000,262144
new,MemoryChunk,0x23a0b940000,262144
new,MemoryChunk,0x17648180000,262144
new,MemoryChunk,0x35c5b440000,262144
new,MemoryChunk,0x22e66240000,262144
new,MemoryChunk,0x35cac900000,262144
tick,0x7ff6cc06d07d,13438594,0,0x0,1
tick,0x7ff6cbea1224,13454568,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x393ed40000,262144
new,MemoryChunk,0x77be6c0000,262144
new,MemoryChunk,0x70f91c0000,262144
new,MemoryChunk,0x2c5f3280000,262144
new,MemoryChunk,0x15a6ed40000,262144
new,MemoryChunk,0x1665d040000,262144
new,MemoryChunk,0x356a3400000,262144
new,MemoryChunk,0x923b940000,262144
new,MemoryChunk,0x1a5b5a80000,262144
new,MemoryChunk,0x1be2c240000,262144
tick,0x7ff6cc0eb27b,13470655,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xf74bd40000,262144
new,MemoryChunk,0x87318c0000,262144
new,MemoryChunk,0x2bd0b300000,262144
new,MemoryChunk,0x24d3bf40000,262144
new,MemoryChunk,0x294b2100000,262144
new,MemoryChunk,0x3fa25f00000,262144
new,MemoryChunk,0x3f8858c0000,262144
tick,0x7ff6cc06c1d1,13487003,0,0x0,1
new,MemoryChunk,0x30b6fc0000,262144
new,MemoryChunk,0x654bb40000,262144
new,MemoryChunk,0x35539840000,262144
delete,MemoryChunk,0x2ef6f980000
delete,MemoryChunk,0x1bac20c0000
delete,MemoryChunk,0x18c3b800000
delete,MemoryChunk,0x740a440000
delete,MemoryChunk,0x11590b40000
delete,MemoryChunk,0x147c9ec0000
delete,MemoryChunk,0x4036b80000
delete,MemoryChunk,0x30db1940000
delete,MemoryChunk,0x2e688080000
delete,MemoryChunk,0x2a9fc2c0000
delete,MemoryChunk,0x21852340000
delete,MemoryChunk,0x241de1c0000
delete,MemoryChunk,0x111900000
delete,MemoryChunk,0x2ae05380000
delete,MemoryChunk,0x29e30240000
delete,MemoryChunk,0x3cb00bc0000
delete,MemoryChunk,0x2b411240000
delete,MemoryChunk,0x2416fc80000
delete,MemoryChunk,0x21df29c0000
delete,MemoryChunk,0x2f5671c0000
delete,MemoryChunk,0x9a6cec0000
delete,MemoryChunk,0x1b0dc080000
delete,MemoryChunk,0x1bf0b000000
delete,MemoryChunk,0x3fc41480000
delete,MemoryChunk,0x7b1ddc0000
delete,MemoryChunk,0x3cce8d40000
delete,MemoryChunk,0x3a0d7680000
delete,MemoryChunk,0x23138300000
delete,MemoryChunk,0x21884380000
delete,MemoryChunk,0xf253bc0000
delete,MemoryChunk,0x12b21f40000
delete,MemoryChunk,0x3af09b80000
delete,MemoryChunk,0x1a303580000
delete,MemoryChunk,0x4fb6f80000
delete,MemoryChunk,0x3e219b80000
delete,MemoryChunk,0x227063c0000
delete,MemoryChunk,0x19257080000
delete,MemoryChunk,0x5921e00000
delete,MemoryChunk,0x3ce2fac0000
delete,MemoryChunk,0x27bfa900000
delete,MemoryChunk,0xc1a00000
delete,MemoryChunk,0x23a0b940000
delete,MemoryChunk,0x17589dc0000
delete,MemoryChunk,0x1a948200000
delete,MemoryChunk,0x3e027d40000
delete,MemoryChunk,0x29dcc600000
delete,MemoryChunk,0x22e66240000
delete,MemoryChunk,0x35c5b440000
delete,MemoryChunk,0x17648180000
delete,MemoryChunk,0x70f91c0000
delete,MemoryChunk,0x2c5f3280000
delete,MemoryChunk,0x356a3400000
delete,MemoryChunk,0x77be6c0000
delete,MemoryChunk,0x15a6ed40000
delete,MemoryChunk,0xb472700000
delete,MemoryChunk,0x393ed40000
delete,MemoryChunk,0x1665d040000
delete,MemoryChunk,0x1a5b5a80000
delete,MemoryChunk,0x923b940000
delete,MemoryChunk,0x24d3bf40000
delete,MemoryChunk,0x3fa25f00000
delete,MemoryChunk,0x30b6fc0000
delete,MemoryChunk,0x18a875c0000
delete,MemoryChunk,0xf74bd40000
delete,MemoryChunk,0x294b2100000
delete,MemoryChunk,0x35cac900000
delete,MemoryChunk,0x87318c0000
delete,MemoryChunk,0x2bd0b300000
delete,MemoryChunk,0x3f8858c0000
delete,MemoryChunk,0x35539840000
delete,MemoryChunk,0x654bb40000
tick,0x7ff64c4a0c91,13502618,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a091c,13518680,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8995,13534623,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a28ae,13550630,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2881c8,13566623,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177c6,13582634,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec34c2,13598642,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9a3,13614623,0,0x0,1
tick,0x7ff6cbe94c25,13630677,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebb9f7,13646635,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c495f7a,13661667,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x244c5840000,262144
new,MemoryChunk,0x159b8e40000,262144
new,MemoryChunk,0x33d0a000000,262144
tick,0x7ff66c2dc0e6,13677599,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x398bcbc0000,262144
new,MemoryChunk,0x2d6c6440000,262144
new,MemoryChunk,0x8788a00000,262144
tick,0x7ff6cc0748bb,13692821,0,0x0,1
new,MemoryChunk,0xafbee00000,262144
new,MemoryChunk,0x221cac0000,262144
new,MemoryChunk,0x2a7d9440000,262144
new,MemoryChunk,0x14975080000,262144
new,MemoryChunk,0x19f70300000,262144
new,MemoryChunk,0x36b788c0000,262144
new,MemoryChunk,0x1f1b1740000,262144
tick,0x7ff6cc1d2c40,13708815,0,0x0,0,0x7ff66c30a519,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3c846940000,262144
new,MemoryChunk,0xa5ec480000,262144
new,MemoryChunk,0x2785b2c0000,262144
new,MemoryChunk,0x1a589580000,262144
new,MemoryChunk,0x2181cc00000,262144
new,MemoryChunk,0x39380fc0000,262144
new,MemoryChunk,0x3ae97d00000,262144
new,MemoryChunk,0x15491e80000,262144
new,MemoryChunk,0x34866c0000,262144
new,MemoryChunk,0x76fce80000,262144
new,MemoryChunk,0x1438a180000,262144
tick,0x7ff6cbebcec8,13724830,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xa64b080000,262144
new,MemoryChunk,0x11117d00000,262144
new,MemoryChunk,0x39ae2cc0000,262144
new,MemoryChunk,0x393b4fc0000,262144
new,MemoryChunk,0x2c5b9140000,262144
new,MemoryChunk,0x379f4d80000,262144
new,MemoryChunk,0x219aed80000,262144
new,MemoryChunk,0x11544fc0000,262144
new,MemoryChunk,0x21200a00000,262144
tick,0x7ff6cc06cb59,13740830,0,0x0,1
tick,0x7ff64c490739,13756813,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2188aa80000,262144
new,MemoryChunk,0x276c600000,262144
new,MemoryChunk,0x17e13480000,262144
new,MemoryChunk,0x34f610c0000,262144
new,MemoryChunk,0x3a2b9680000,262144
new,MemoryChunk,0x29ff5740000,262144
new,MemoryChunk,0x19cb4f80000,262144
new,MemoryChunk,0x3885cfc0000,262144
new,MemoryChunk,0x25175d80000,262144
new,MemoryChunk,0xb19840000,262144
new,MemoryChunk,0x1040d0c0000,262144
tick,0x7ff64c4a28b0,13772835,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf85,13789116,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1cda0880000,262144
new,MemoryChunk,0xce45200000,262144
new,MemoryChunk,0x33031300000,262144
new,MemoryChunk,0x27a016c0000,262144
new,MemoryChunk,0x12e3e540000,262144
new,MemoryChunk,0x18f46640000,262144
new,MemoryChunk,0x11940540000,262144
new,MemoryChunk,0x279a98c0000,262144
new,MemoryChunk,0xa256180000,262144
tick,0x7ff64c496886,13803878,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2b6e8540000,262144
new,MemoryChunk,0x118f9540000,262144
new,MemoryChunk,0xf89e680000,262144
new,MemoryChunk,0x248b8bc0000,262144
new,MemoryChunk,0x2e0fc700000,262144
new,MemoryChunk,0x26815e40000,262144
tick,0x7ff6cc06a9d8,13819833,0,0x0,1
new,MemoryChunk,0x119ce340000,262144
new,MemoryChunk,0x346709c0000,262144
new,MemoryChunk,0xc5e44c0000,262144
new,MemoryChunk,0x2e6636c0000,262144
new,MemoryChunk,0x114ec6c0000,262144
tick,0x7ff64c496003,13835950,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5a40a40000,262144
new,MemoryChunk,0x144f7e00000,262144
new,MemoryChunk,0x14b8bc40000,262144
new,MemoryChunk,0xe11fb00000,262144
new,MemoryChunk,0x3b0fcc40000,262144
new,MemoryChunk,0xb1075c0000,262144
new,MemoryChunk,0xa5669c0000,262144
new,MemoryChunk,0xe2073c0000,262144
new,MemoryChunk,0xe5c45c0000,262144
new,MemoryChunk,0x2b86680000,262144
new,MemoryChunk,0x172ee280000,262144
tick,0x7ff6cc097f31,13851805,0,0x0,1
delete,MemoryChunk,0x20b2fe80000
delete,MemoryChunk,0x52e6540000
delete,MemoryChunk,0x2783b7c0000
delete,MemoryChunk,0x37119700000
delete,MemoryChunk,0x1be2c240000
delete,MemoryChunk,0x159b8e40000
delete,MemoryChunk,0x8788a00000
delete,MemoryChunk,0x1f1b1740000
delete,MemoryChunk,0x398bcbc0000
delete,MemoryChunk,0x2a7d9440000
delete,MemoryChunk,0x2d6c6440000
delete,MemoryChunk,0x221cac0000
delete,MemoryChunk,0x14975080000
delete,MemoryChunk,0x19f70300000
delete,MemoryChunk,0x3c846940000
delete,MemoryChunk,0x3ae97d00000
delete,MemoryChunk,0xafbee00000
delete,MemoryChunk,0x1a589580000
delete,MemoryChunk,0x15491e80000
delete,MemoryChunk,0x36b788c0000
delete,MemoryChunk,0x2785b2c0000
delete,MemoryChunk,0x33d0a000000
delete,MemoryChunk,0x39380fc0000
delete,MemoryChunk,0x34866c0000
delete,MemoryChunk,0xa5ec480000
delete,MemoryChunk,0xa64b080000
delete,MemoryChunk,0x11117d00000
delete,MemoryChunk,0x2c5b9140000
delete,MemoryChunk,0x11544fc0000
delete,MemoryChunk,0x39ae2cc0000
delete,MemoryChunk,0x393b4fc0000
delete,MemoryChunk,0x379f4d80000
delete,MemoryChunk,0x276c600000
delete,MemoryChunk,0x3a2b9680000
delete,MemoryChunk,0x2188aa80000
delete,MemoryChunk,0x29ff5740000
delete,MemoryChunk,0x3885cfc0000
delete,MemoryChunk,0x1040d0c0000
delete,MemoryChunk,0xb19840000
delete,MemoryChunk,0x17e13480000
delete,MemoryChunk,0x19cb4f80000
delete,MemoryChunk,0x27a016c0000
delete,MemoryChunk,0x34f610c0000
delete,MemoryChunk,0x33031300000
delete,MemoryChunk,0x18f46640000
delete,MemoryChunk,0xce45200000
delete,MemoryChunk,0x21200a00000
delete,MemoryChunk,0x12e3e540000
delete,MemoryChunk,0xa256180000
delete,MemoryChunk,0x1cda0880000
delete,MemoryChunk,0x2b6e8540000
delete,MemoryChunk,0x279a98c0000
delete,MemoryChunk,0x118f9540000
delete,MemoryChunk,0x219aed80000
delete,MemoryChunk,0x76fce80000
delete,MemoryChunk,0x248b8bc0000
delete,MemoryChunk,0x26815e40000
delete,MemoryChunk,0xc5e44c0000
delete,MemoryChunk,0xf89e680000
delete,MemoryChunk,0x1438a180000
delete,MemoryChunk,0x346709c0000
delete,MemoryChunk,0x2181cc00000
delete,MemoryChunk,0x2e0fc700000
delete,MemoryChunk,0x14b8bc40000
delete,MemoryChunk,0xcfb38c0000
delete,MemoryChunk,0xb1075c0000
delete,MemoryChunk,0xe2073c0000
delete,MemoryChunk,0x114ec6c0000
delete,MemoryChunk,0x5a40a40000
delete,MemoryChunk,0x11940540000
delete,MemoryChunk,0x3b0fcc40000
delete,MemoryChunk,0xa5669c0000
delete,MemoryChunk,0x244c5840000
delete,MemoryChunk,0x25175d80000
delete,MemoryChunk,0x144f7e00000
delete,MemoryChunk,0xe11fb00000
delete,MemoryChunk,0x172ee280000
delete,MemoryChunk,0x2b86680000
delete,MemoryChunk,0xe5c45c0000
tick,0x7ff6cbe8cc03,13867880,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0e6,13883826,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06af88,13899476,0,0x0,1
tick,0x7ff66c2881c8,13915362,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec6730,13931359,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06d7a9,13947404,0,0x0,1
tick,0x7ff6cc3177cc,13963429,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177dd,13979425,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9d8,13995390,0,0x0,1
tick,0x7ff6cbec6b8b,14011363,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x13f5fb40000,262144
new,MemoryChunk,0x3f33300000,262144
new,MemoryChunk,0x133b2b40000,262144
tick,0x7ff66c2dc0b2,14026370,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c418,14042350,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x172c5800000,262144
new,MemoryChunk,0x110f14c0000,262144
new,MemoryChunk,0x200e87c0000,262144
new,MemoryChunk,0x1a77a6c0000,262144
new,MemoryChunk,0x3a9e8200000,262144
new,MemoryChunk,0x38d24b80000,262144
new,MemoryChunk,0x1cc386c0000,262144
new,MemoryChunk,0x3778fe00000,262144
new,MemoryChunk,0x3897e3c0000,262144
tick,0x7ff6cbe6bae8,14058364,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2d822600000,262144
new,MemoryChunk,0x246ff480000,262144
new,MemoryChunk,0x34b68e00000,262144
new,MemoryChunk,0x28db12c0000,262144
new,MemoryChunk,0x5348980000,262144
new,MemoryChunk,0x38351f40000,262144
new,MemoryChunk,0x374c440000,262144
new,MemoryChunk,0x18feb000000,262144
new,MemoryChunk,0x38d66200000,262144
new,MemoryChunk,0xf494880000,262144
tick,0x7ff6cc06ae96,14074384,0,0x0,1
tick,0x7ff6cbdacadc,14090334,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x250ae880000,262144
new,MemoryChunk,0x55a5380000,262144
new,MemoryChunk,0xc1990c0000,262144
new,MemoryChunk,0x147caec0000,262144
new,MemoryChunk,0x20d52d80000,262144
new,MemoryChunk,0x15f75b40000,262144
new,MemoryChunk,0x2700be80000,262144
new,MemoryChunk,0x380b0840000,262144
tick,0x7ff66c244abe,14106371,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x341cdc0000,262144
new,MemoryChunk,0x38edfbc0000,262144
new,MemoryChunk,0x2fa3d9c0000,262144
new,MemoryChunk,0x17946100000,262144
new,MemoryChunk,0x4cda700000,262144
new,MemoryChunk,0x109f2680000,262144
new,MemoryChunk,0x28623fc0000,262144
new,MemoryChunk,0x265cef80000,262144
new,MemoryChunk,0x25889700000,262144
new,MemoryChunk,0x160c480000,262144
new,MemoryChunk,0x2810ee80000,262144
tick,0x7ff6cc06c1d1,14122453,0,0x0,1
tick,0x7ff6cbf1b8df,14138370,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x15b37600000,262144
new,MemoryChunk,0x204d3cc0000,262144
new,MemoryChunk,0x32908900000,262144
new,MemoryChunk,0x1dcb69c0000,262144
new,MemoryChunk,0x243aacc0000,262144
new,MemoryChunk,0xb49afc0000,262144
new,MemoryChunk,0x2e47fdc0000,262144
new,MemoryChunk,0x6fd9240000,262144
tick,0x7ff6cbf1c3f3,14154503,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3dbf72c0000,262144
new,MemoryChunk,0x25187000000,262144
new,MemoryChunk,0x3ef7f240000,262144
new,MemoryChunk,0x1269aa40000,262144
new,MemoryChunk,0x3b3d5c80000,262144
new,MemoryChunk,0x233d0880000,262144
new,MemoryChunk,0x94d0480000,262144
new,MemoryChunk,0x367d19c0000,262144
new,MemoryChunk,0x2f831380000,262144
new,MemoryChunk,0xfcdb00000,262144
new,MemoryChunk,0x3a70b740000,262144
new,MemoryChunk,0x1038cc40000,262144
tick,0x7ff6cbf1c3b0,14169363,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c30a2a4,14184420,0,0x0,0,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1f0bbd00000,262144
new,MemoryChunk,0x325fa9c0000,262144
new,MemoryChunk,0xfe62840000,262144
new,MemoryChunk,0x1b9289c0000,262144
new,MemoryChunk,0x15de7380000,262144
new,MemoryChunk,0xf072b00000,262144
new,MemoryChunk,0x2e99c40000,262144
new,MemoryChunk,0x118dac80000,262144
tick,0x7ff6cbf20f86,14200375,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x37515880000,262144
new,MemoryChunk,0x1b8729c0000,262144
new,MemoryChunk,0x166d6e40000,262144
new,MemoryChunk,0x11cffb80000,262144
new,MemoryChunk,0x18d69d80000,262144
new,MemoryChunk,0x12f45140000,262144
new,MemoryChunk,0x3d12fec0000,262144
new,MemoryChunk,0x37242cc0000,262144
new,MemoryChunk,0x312a7880000,262144
new,MemoryChunk,0x3b4680000,262144
new,MemoryChunk,0x101f6b40000,262144
tick,0x7ff6cbec38c2,14215405,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
delete,MemoryChunk,0x13f5fb40000
delete,MemoryChunk,0x3f33300000
delete,MemoryChunk,0x1a77a6c0000
delete,MemoryChunk,0x200e87c0000
delete,MemoryChunk,0x38d24b80000
delete,MemoryChunk,0x1cc386c0000
delete,MemoryChunk,0x172c5800000
delete,MemoryChunk,0x3a9e8200000
delete,MemoryChunk,0x110f14c0000
delete,MemoryChunk,0x34b68e00000
delete,MemoryChunk,0x133b2b40000
delete,MemoryChunk,0x5348980000
delete,MemoryChunk,0x2d822600000
delete,MemoryChunk,0x38d66200000
delete,MemoryChunk,0x18feb000000
delete,MemoryChunk,0x246ff480000
delete,MemoryChunk,0x374c440000
delete,MemoryChunk,0x28db12c0000
delete,MemoryChunk,0x55a5380000
delete,MemoryChunk,0x250ae880000
delete,MemoryChunk,0x147caec0000
delete,MemoryChunk,0x20d52d80000
delete,MemoryChunk,0x380b0840000
delete,MemoryChunk,0xc1990c0000
delete,MemoryChunk,0xf494880000
delete,MemoryChunk,0x15f75b40000
delete,MemoryChunk,0x341cdc0000
delete,MemoryChunk,0x3897e3c0000
delete,MemoryChunk,0x38edfbc0000
delete,MemoryChunk,0x265cef80000
delete,MemoryChunk,0x2fa3d9c0000
delete,MemoryChunk,0x4cda700000
delete,MemoryChunk,0x109f2680000
delete,MemoryChunk,0x28623fc0000
delete,MemoryChunk,0x1dcb69c0000
delete,MemoryChunk,0x15b37600000
delete,MemoryChunk,0x243aacc0000
delete,MemoryChunk,0x32908900000
delete,MemoryChunk,0xb49afc0000
delete,MemoryChunk,0x6fd9240000
delete,MemoryChunk,0x2e47fdc0000
delete,MemoryChunk,0x204d3cc0000
delete,MemoryChunk,0x3dbf72c0000
delete,MemoryChunk,0x25187000000
delete,MemoryChunk,0x3b3d5c80000
delete,MemoryChunk,0x160c480000
delete,MemoryChunk,0x367d19c0000
delete,MemoryChunk,0x1269aa40000
delete,MemoryChunk,0xfcdb00000
delete,MemoryChunk,0x3ef7f240000
delete,MemoryChunk,0x3778fe00000
delete,MemoryChunk,0x233d0880000
delete,MemoryChunk,0x94d0480000
delete,MemoryChunk,0x1038cc40000
delete,MemoryChunk,0x25889700000
delete,MemoryChunk,0x1b9289c0000
delete,MemoryChunk,0x2e99c40000
delete,MemoryChunk,0x3a70b740000
delete,MemoryChunk,0x1f0bbd00000
delete,MemoryChunk,0xfe62840000
delete,MemoryChunk,0x15de7380000
delete,MemoryChunk,0x325fa9c0000
delete,MemoryChunk,0xf072b00000
delete,MemoryChunk,0x11cffb80000
delete,MemoryChunk,0x3d12fec0000
delete,MemoryChunk,0x312a7880000
delete,MemoryChunk,0x2f831380000
delete,MemoryChunk,0x166d6e40000
delete,MemoryChunk,0x118dac80000
delete,MemoryChunk,0x1b8729c0000
delete,MemoryChunk,0x3b4680000
delete,MemoryChunk,0x18d69d80000
delete,MemoryChunk,0x37242cc0000
delete,MemoryChunk,0x12f45140000
delete,MemoryChunk,0x101f6b40000
tick,0x7ff64c4950e5,14231436,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb823f,14247390,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9d8,14263406,0,0x0,1
tick,0x7ff66c2dc0b2,14278403,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c290e27,14293401,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc09f,14309377,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec5e2b,14325405,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebb75c,14341356,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc09f,14357330,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb02,14373390,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a12d2,14389377,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc09f,14405412,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2487bd80000,262144
new,MemoryChunk,0x2d513400000,262144
new,MemoryChunk,0x31114f00000,262144
new,MemoryChunk,0x33b25580000,262144
new,MemoryChunk,0x23d70400000,262144
new,MemoryChunk,0x28afd4c0000,262144
new,MemoryChunk,0x36409dc0000,262144
tick,0x7ff66c2dc09f,14420368,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x308d3ec0000,262144
new,MemoryChunk,0x2c7d540000,262144
new,MemoryChunk,0x30862600000,262144
new,MemoryChunk,0x148df580000,262144
new,MemoryChunk,0x595b5c0000,262144
new,MemoryChunk,0x3a27f200000,262144
tick,0x7ff6cc069e35,14436386,0,0x0,1
new,MemoryChunk,0x27b05140000,262144
new,MemoryChunk,0xce52c40000,262144
tick,0x7ff6cbf17798,14452394,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x37547540000,262144
new,MemoryChunk,0xf13a040000,262144
new,MemoryChunk,0x98a3340000,262144
new,MemoryChunk,0x3f29e8c0000,262144
new,MemoryChunk,0x1def5000000,262144
new,MemoryChunk,0x1346c900000,262144
new,MemoryChunk,0x1ee6d280000,262144
new,MemoryChunk,0x2a0b4ec0000,262144
new,MemoryChunk,0x244d05c0000,262144
new,MemoryChunk,0x28e140000,262144
new,MemoryChunk,0x19d00600000,262144
tick,0x7ff66c244a50,14468424,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x377c6c40000,262144
new,MemoryChunk,0x2ad07100000,262144
new,MemoryChunk,0xc3c83c0000,262144
new,MemoryChunk,0x32b31240000,262144
new,MemoryChunk,0x6369c0000,262144
new,MemoryChunk,0x9f44c80000,262144
new,MemoryChunk,0xff28a40000,262144
new,MemoryChunk,0x6a27fc0000,262144
new,MemoryChunk,0x1b3b1c0000,262144
tick,0x7ff6cc2a58ab,14484379,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a4ff,14500451,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1e851ac0000,262144
new,MemoryChunk,0x136c9ec0000,262144
new,MemoryChunk,0x1dad7980000,262144
new,MemoryChunk,0x1ad50fc0000,262144
new,MemoryChunk,0x38d2b200000,262144
new,MemoryChunk,0x1b466940000,262144
new,MemoryChunk,0x3bd0f300000,262144
new,MemoryChunk,0x24488300000,262144
new,MemoryChunk,0x37d6c280000,262144
tick,0x7ff6cbdbfda8,14515525,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2e0c4d00000,262144
tick,0x7ff64c49fe53,14531376,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x25174600000,262144
new,MemoryChunk,0x34f8ba80000,262144
new,MemoryChunk,0x1cb48040000,262144
new,MemoryChunk,0x2a78f100000,262144
new,MemoryChunk,0x1f7dd040000,262144
new,MemoryChunk,0x18595880000,262144
new,MemoryChunk,0x3973bd40000,262144
new,MemoryChunk,0x2e16eb80000,262144
new,MemoryChunk,0x3ff6f7c0000,262144
new,MemoryChunk,0x1f18a8c0000,262144
new,MemoryChunk,0xf1c3580000,262144
new,MemoryChunk,0xc233900000,262144
tick,0x7ff6cbda9014,14546410,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x276f0880000,262144
new,MemoryChunk,0x3974340000,262144
new,MemoryChunk,0xb3f2000000,262144
new,MemoryChunk,0x25d9d3c0000,262144
new,MemoryChunk,0x2cae71c0000,262144
new,MemoryChunk,0x1aabf900000,262144
new,MemoryChunk,0x28c9e780000,262144
tick,0x7ff64c49a292,14562420,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb59,14578453,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
delete,MemoryChunk,0x38351f40000
delete,MemoryChunk,0x2700be80000
delete,MemoryChunk,0x17946100000
delete,MemoryChunk,0x2810ee80000
delete,MemoryChunk,0x31114f00000
delete,MemoryChunk,0x37515880000
delete,MemoryChunk,0x2d513400000
delete,MemoryChunk,0x3a27f200000
delete,MemoryChunk,0x595b5c0000
delete,MemoryChunk,0xce52c40000
delete,MemoryChunk,0x308d3ec0000
delete,MemoryChunk,0x2c7d540000
delete,MemoryChunk,0x148df580000
delete,MemoryChunk,0x37547540000
delete,MemoryChunk,0xf13a040000
delete,MemoryChunk,0x98a3340000
delete,MemoryChunk,0x19d00600000
delete,MemoryChunk,0x3f29e8c0000
delete,MemoryChunk,0x33b25580000
delete,MemoryChunk,0x1ee6d280000
delete,MemoryChunk,0x28e140000
delete,MemoryChunk,0x1346c900000
delete,MemoryChunk,0x1def5000000
delete,MemoryChunk,0x377c6c40000
delete,MemoryChunk,0x32b31240000
delete,MemoryChunk,0x2ad07100000
delete,MemoryChunk,0x6369c0000
delete,MemoryChunk,0x1b3b1c0000
delete,MemoryChunk,0xc3c83c0000
delete,MemoryChunk,0x244d05c0000
delete,MemoryChunk,0x9f44c80000
delete,MemoryChunk,0x1dad7980000
delete,MemoryChunk,0x1e851ac0000
delete,MemoryChunk,0x136c9ec0000
delete,MemoryChunk,0x38d2b200000
delete,MemoryChunk,0x1b466940000
delete,MemoryChunk,0x2e0c4d00000
delete,MemoryChunk,0x24488300000
delete,MemoryChunk,0x2a0b4ec0000
delete,MemoryChunk,0x25174600000
delete,MemoryChunk,0x37d6c280000
delete,MemoryChunk,0x3bd0f300000
delete,MemoryChunk,0x6a27fc0000
delete,MemoryChunk,0xff28a40000
delete,MemoryChunk,0x18595880000
delete,MemoryChunk,0x3973bd40000
delete,MemoryChunk,0x34f8ba80000
delete,MemoryChunk,0x2e16eb80000
delete,MemoryChunk,0x1cb48040000
delete,MemoryChunk,0x28afd4c0000
delete,MemoryChunk,0x1f7dd040000
delete,MemoryChunk,0x25d9d3c0000
delete,MemoryChunk,0xf1c3580000
delete,MemoryChunk,0xb3f2000000
delete,MemoryChunk,0x3974340000
delete,MemoryChunk,0x2cae71c0000
delete,MemoryChunk,0x276f0880000
delete,MemoryChunk,0xc233900000
delete,MemoryChunk,0x23d70400000
delete,MemoryChunk,0x28c9e780000
tick,0x7ff66c28bb87,14594490,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06e07f,14610390,0,0x0,1
tick,0x7ff6cbe94c25,14625442,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbe56,14641413,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06d093,14657448,0,0x0,1
tick,0x7ff6cbeb0279,14673436,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc687074,14689400,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc3a9,14705434,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cca9cfe4,14721394,0,0x0,1
tick,0x7ff6cbdaee98,14737396,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c495dbd,14753454,0,0x0,0,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2869f9c0000,262144
new,MemoryChunk,0x2c97c700000,262144
tick,0x7ff6cc29d39a,14769407,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x198b1d00000,262144
new,MemoryChunk,0x3e482c80000,262144
new,MemoryChunk,0x3069c880000,262144
new,MemoryChunk,0x37e95300000,262144
tick,0x7ff6cc0726e7,14785397,0,0x0,1
new,MemoryChunk,0x17c86fc0000,262144
new,MemoryChunk,0x1df50a80000,262144
new,MemoryChunk,0x3c3448c0000,262144
new,MemoryChunk,0x1942a0c0000,262144
new,MemoryChunk,0x38041f00000,262144
tick,0x7ff6cbe6d80d,14801433,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3fc9a280000,262144
new,MemoryChunk,0x36de9900000,262144
new,MemoryChunk,0x2c1d3580000,262144
new,MemoryChunk,0x3ccae6c0000,262144
new,MemoryChunk,0x3c4c8940000,262144
new,MemoryChunk,0x106dc1c0000,262144
new,MemoryChunk,0x33e43f40000,262144
new,MemoryChunk,0x3eba8280000,262144
tick,0x7ff6cbdac86f,14817429,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x385c2600000,262144
new,MemoryChunk,0x104a6880000,262144
new,MemoryChunk,0x3d7b62c0000,262144
new,MemoryChunk,0x21ac8540000,262144
new,MemoryChunk,0x3e9bad00000,262144
new,MemoryChunk,0x47a1d80000,262144
new,MemoryChunk,0x21c90bc0000,262144
new,MemoryChunk,0x2f3d5b40000,262144
new,MemoryChunk,0x371f0440000,262144
new,MemoryChunk,0xfdc9380000,262144
tick,0x7ff64c49bbc4,14833400,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0fd1f0,14849532,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1c7c51c0000,262144
new,MemoryChunk,0x35b93340000,262144
new,MemoryChunk,0x4df4d00000,262144
new,MemoryChunk,0x27b92f00000,262144
new,MemoryChunk,0x21126240000,262144
new,MemoryChunk,0x2ac7c5c0000,262144
new,MemoryChunk,0x1e280e00000,262144
new,MemoryChunk,0xc796dc0000,262144
new,MemoryChunk,0x2c134000000,262144
tick,0x7ff64c497844,14865402,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe94c25,14881471,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x213fed80000,262144
new,MemoryChunk,0xaa90e40000,262144
new,MemoryChunk,0x1562b340000,262144
new,MemoryChunk,0x276d7140000,262144
new,MemoryChunk,0x2cfe9d00000,262144
new,MemoryChunk,0x10eb9b80000,262144
new,MemoryChunk,0x1b01bd80000,262144
new,MemoryChunk,0x29032380000,262144
tick,0x7ff6cbf20c72,14897423,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xa0c1ec0000,262144
new,MemoryChunk,0x329a34c0000,262144
new,MemoryChunk,0x2dfaef00000,262144
new,MemoryChunk,0x15e73840000,262144
new,MemoryChunk,0x216988c0000,262144
new,MemoryChunk,0x1ab5fc00000,262144
new,MemoryChunk,0x1a0c2040000,262144
new,MemoryChunk,0x8daa340000,262144
tick,0x7ff6cbba93ea,14913401,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0e6,14929416,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2c1977c0000,262144
new,MemoryChunk,0x2ef6c700000,262144
new,MemoryChunk,0x2d206280000,262144
new,MemoryChunk,0x1f732980000,262144
new,MemoryChunk,0x216bf100000,262144
new,MemoryChunk,0x39709d40000,262144
new,MemoryChunk,0x28751b40000,262144
new,MemoryChunk,0x21dd2000000,262144
tick,0x7ff6cbf700c2,14945434,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x72647c0000,262144
new,MemoryChunk,0x27d5cfc0000,262144
new,MemoryChunk,0x278a1d00000,262144
new,MemoryChunk,0x333d0f00000,262144
new,MemoryChunk,0x287c5700000,262144
tick,0x7ff6cc06c1d1,14961454,0,0x0,1
new,MemoryChunk,0x1e8f4240000,262144
new,MemoryChunk,0x10f435c0000,262144
delete,MemoryChunk,0x2487bd80000
delete,MemoryChunk,0x1aabf900000
delete,MemoryChunk,0x36409dc0000
delete,MemoryChunk,0x27b05140000
delete,MemoryChunk,0x30862600000
delete,MemoryChunk,0x1ad50fc0000
delete,MemoryChunk,0x3ff6f7c0000
delete,MemoryChunk,0x2a78f100000
delete,MemoryChunk,0x1f18a8c0000
delete,MemoryChunk,0x2c97c700000
delete,MemoryChunk,0x37e95300000
delete,MemoryChunk,0x3c3448c0000
delete,MemoryChunk,0x3069c880000
delete,MemoryChunk,0x1df50a80000
delete,MemoryChunk,0x3fc9a280000
delete,MemoryChunk,0x3ccae6c0000
delete,MemoryChunk,0x36de9900000
delete,MemoryChunk,0x3e482c80000
delete,MemoryChunk,0x198b1d00000
delete,MemoryChunk,0x33e43f40000
delete,MemoryChunk,0x38041f00000
delete,MemoryChunk,0x2869f9c0000
delete,MemoryChunk,0x3eba8280000
delete,MemoryChunk,0x104a6880000
delete,MemoryChunk,0x3e9bad00000
delete,MemoryChunk,0x47a1d80000
delete,MemoryChunk,0xfdc9380000
delete,MemoryChunk,0x385c2600000
delete,MemoryChunk,0x21ac8540000
delete,MemoryChunk,0x21c90bc0000
delete,MemoryChunk,0x2f3d5b40000
delete,MemoryChunk,0x27b92f00000
delete,MemoryChunk,0x35b93340000
delete,MemoryChunk,0x21126240000
delete,MemoryChunk,0x2c134000000
delete,MemoryChunk,0x2ac7c5c0000
delete,MemoryChunk,0x10eb9b80000
delete,MemoryChunk,0x213fed80000
delete,MemoryChunk,0x276d7140000
delete,MemoryChunk,0x29032380000
delete,MemoryChunk,0x1562b340000
delete,MemoryChunk,0x2cfe9d00000
delete,MemoryChunk,0x1b01bd80000
delete,MemoryChunk,0xa0c1ec0000
delete,MemoryChunk,0x2dfaef00000
delete,MemoryChunk,0xc796dc0000
delete,MemoryChunk,0x216988c0000
delete,MemoryChunk,0x1a0c2040000
delete,MemoryChunk,0x329a34c0000
delete,MemoryChunk,0x8daa340000
delete,MemoryChunk,0x1ab5fc00000
delete,MemoryChunk,0x2d206280000
delete,MemoryChunk,0x216bf100000
delete,MemoryChunk,0x15e73840000
delete,MemoryChunk,0x2c1977c0000
delete,MemoryChunk,0x2ef6c700000
delete,MemoryChunk,0x21dd2000000
delete,MemoryChunk,0x27d5cfc0000
delete,MemoryChunk,0x333d0f00000
delete,MemoryChunk,0x10f435c0000
delete,MemoryChunk,0x278a1d00000
delete,MemoryChunk,0x287c5700000
delete,MemoryChunk,0x1e8f4240000
tick,0x7ff6cbe93812,14977483,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0740d0,14993465,0,0x0,1
tick,0x7ff6cc0ffc9d,15009484,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c495f7a,15025432,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0726e3,15041468,0,0x0,1
tick,0x7ff64c49f92f,15057424,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497980,15073466,0,0x0,0,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0748c3,15089496,0,0x0,1
tick,0x7ff64c4963af,15105423,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c490745,15121438,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc9e6,15137496,0,0x0,0,0x7ff64c47e965,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbea7,15152458,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c4a2169,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0d83c2,15168441,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf7a,15184529,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec45a3,15200442,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863b9b7a2,15215513,0,0x0,1
tick,0x7ff6cbda8d81,15231461,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3f490440000,262144
new,MemoryChunk,0x3697d00000,262144
tick,0x7ff6cbf1d23a,15247458,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdac86f,15263464,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2280e000000,262144
new,MemoryChunk,0x2aefef40000,262144
new,MemoryChunk,0x3ab76680000,262144
new,MemoryChunk,0x3ae1da00000,262144
new,MemoryChunk,0x3fecef40000,262144
new,MemoryChunk,0x1398f040000,262144
new,MemoryChunk,0x11429140000,262144
new,MemoryChunk,0x1e83c4c0000,262144
tick,0x7ff64c49fe9f,15279448,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x319ae100000,262144
new,MemoryChunk,0xb0f4c00000,262144
new,MemoryChunk,0x25ee15c0000,262144
new,MemoryChunk,0x349aac0000,262144
new,MemoryChunk,0x36da3780000,262144
new,MemoryChunk,0x18016940000,262144
new,MemoryChunk,0x22031d00000,262144
tick,0x7ff6cbeb1f98,15295501,0,0x0,1
tick,0x7ff6cbdac847,15311445,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x100da80000,262144
new,MemoryChunk,0x20238380000,262144
new,MemoryChunk,0x13eaf1c0000,262144
new,MemoryChunk,0x21212a00000,262144
new,MemoryChunk,0x132c1880000,262144
new,MemoryChunk,0xe86c600000,262144
new,MemoryChunk,0x35f5f380000,262144
new,MemoryChunk,0x2af11480000,262144
tick,0x7ff66c241bf0,15327438,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x231e9f40000,262144
new,MemoryChunk,0x2d216bc0000,262144
new,MemoryChunk,0x220357c0000,262144
new,MemoryChunk,0x3181a700000,262144
new,MemoryChunk,0x7f211c0000,262144
tick,0x7ff6cc06e02b,15342446,0,0x0,1
tick,0x7ff66c245e57,15358459,0,0x0,0,0x7ff64c4a23f1,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x50c8f00000,262144
new,MemoryChunk,0x3faf0900000,262144
new,MemoryChunk,0x1fba4240000,262144
new,MemoryChunk,0x1baa8ec0000,262144
new,MemoryChunk,0x11588c40000,262144
new,MemoryChunk,0x1f7a47c0000,262144
new,MemoryChunk,0x4fcf680000,262144
tick,0x7ff66c2dbe5c,15374452,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x136348c0000,806912
code-creation,JS,13,15389734,0x7ff64c49c900,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c49c900,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
tick,0x7ff6cc22298d,15390418,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49c997,0x7ff6cc351d3c,0x3767e5461f4,0x3767e545467,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2b99a240000,262144
new,MemoryChunk,0x25ebdf40000,262144
new,MemoryChunk,0x1c83eec0000,262144
new,MemoryChunk,0xeeb6480000,262144
new,MemoryChunk,0x31439c40000,262144
new,MemoryChunk,0x11258a40000,262144
new,MemoryChunk,0x1c959600000,262144
tick,0x7ff6cbda7ea7,15406468,0,0x0,0,0x7ff6cbda9ab0,0x7ff6cc351d19,0x3767e5461f4,0x3767e545467,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241bb7,15422471,0,0x0,0,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x9cfe80000,262144
new,MemoryChunk,0x2e0602c0000,262144
new,MemoryChunk,0x15150e80000,262144
new,MemoryChunk,0x4f46340000,262144
new,MemoryChunk,0x29bda600000,262144
new,MemoryChunk,0x25ce9140000,262144
tick,0x7ff6cc3177cc,15438462,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb4e1a,15454463,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x850cdc0000,262144
new,MemoryChunk,0x1bd83080000,262144
new,MemoryChunk,0x2d285ac0000,262144
new,MemoryChunk,0x2fab1b80000,262144
new,MemoryChunk,0x172670c0000,262144
new,MemoryChunk,0x2f914200000,262144
new,MemoryChunk,0x858440000,262144
tick,0x7ff64c49bcc4,15470505,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
delete,MemoryChunk,0x2f4f7640000
delete,MemoryChunk,0xaa90e40000
delete,MemoryChunk,0xb474380000
delete,MemoryChunk,0x106dc1c0000
delete,MemoryChunk,0x1942a0c0000
delete,MemoryChunk,0x1d174c80000
delete,MemoryChunk,0x2c1d3580000
delete,MemoryChunk,0x1c7c51c0000
delete,MemoryChunk,0x15ea840000
delete,MemoryChunk,0x39709d40000
delete,MemoryChunk,0x3f490440000
delete,MemoryChunk,0x2aefef40000
delete,MemoryChunk,0x2280e000000
delete,MemoryChunk,0x2e6636c0000
delete,MemoryChunk,0x11429140000
delete,MemoryChunk,0x3ab76680000
delete,MemoryChunk,0x3fecef40000
delete,MemoryChunk,0x28751b40000
delete,MemoryChunk,0x17a93380000
delete,MemoryChunk,0xb0f4c00000
delete,MemoryChunk,0x319ae100000
delete,MemoryChunk,0x349aac0000
delete,MemoryChunk,0x25ee15c0000
delete,MemoryChunk,0x22031d00000
delete,MemoryChunk,0x1e83c4c0000
delete,MemoryChunk,0x13eaf1c0000
delete,MemoryChunk,0x2af11480000
delete,MemoryChunk,0x35f5f380000
delete,MemoryChunk,0x100da80000
delete,MemoryChunk,0x36da3780000
delete,MemoryChunk,0x21212a00000
delete,MemoryChunk,0x220357c0000
delete,MemoryChunk,0x132c1880000
delete,MemoryChunk,0x2d216bc0000
delete,MemoryChunk,0x3181a700000
delete,MemoryChunk,0x1fba4240000
delete,MemoryChunk,0x11588c40000
delete,MemoryChunk,0x1f7a47c0000
delete,MemoryChunk,0x4fcf680000
delete,MemoryChunk,0x1baa8ec0000
delete,MemoryChunk,0x2b99a240000
delete,MemoryChunk,0xeeb6480000
delete,MemoryChunk,0xe86c600000
delete,MemoryChunk,0x25ebdf40000
delete,MemoryChunk,0x1c959600000
delete,MemoryChunk,0x25ce9140000
delete,MemoryChunk,0x11258a40000
delete,MemoryChunk,0x9cfe80000
delete,MemoryChunk,0x2e0602c0000
delete,MemoryChunk,0x29bda600000
delete,MemoryChunk,0x2d285ac0000
delete,MemoryChunk,0x850cdc0000
delete,MemoryChunk,0x2fab1b80000
delete,MemoryChunk,0x858440000
delete,MemoryChunk,0x172670c0000
delete,MemoryChunk,0x2f914200000
tick,0x7ff6cbe6d783,15486453,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda9272,15502475,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177dd,15518556,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863c16f76,15534452,0,0x0,1
tick,0x7ff64c49bf2c,15550461,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdac86f,15566498,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec6bec,15582532,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb1a6,15598502,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x0,15614436,0,0x0,5
tick,0x7ff6cc06ae32,15630525,0,0x0,1
tick,0x7ff6cc2d8e15,15646517,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c27f162,15662495,0,0x0,0,0x7ff66c30a519,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a89a2,15678510,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbeb6,15694553,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b183840000,262144
new,MemoryChunk,0xf2a4880000,262144
new,MemoryChunk,0x3f7d3dc0000,262144
new,MemoryChunk,0x2800dc80000,262144
new,MemoryChunk,0x3faa5f00000,262144
new,MemoryChunk,0x257fdf80000,262144
new,MemoryChunk,0x2591f00000,262144
new,MemoryChunk,0xdd25280000,262144
new,MemoryChunk,0x1bc0e900000,262144
new,MemoryChunk,0x296f2e00000,262144
tick,0x7ff6cc10e07b,15710447,0,0x0,1
tick,0x7ff6cbf6cc53,15726486,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2d7dd880000,262144
new,MemoryChunk,0x64ae540000,262144
new,MemoryChunk,0x2e55a900000,262144
new,MemoryChunk,0xa246580000,262144
new,MemoryChunk,0x198e980000,262144
new,MemoryChunk,0x1bbe3f40000,262144
new,MemoryChunk,0x7a928c0000,262144
new,MemoryChunk,0x1c455ac0000,262144
new,MemoryChunk,0x2880e9c0000,262144
new,MemoryChunk,0x1304f4c0000,262144
tick,0x7ff66c242244,15742503,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2b687e40000,262144
new,MemoryChunk,0x2f1f3680000,262144
new,MemoryChunk,0x145cda00000,262144
new,MemoryChunk,0x1af43880000,262144
new,MemoryChunk,0x15720340000,262144
tick,0x7ff6cc087ed7,15758530,0,0x0,1
new,MemoryChunk,0x2cf98000000,262144
new,MemoryChunk,0x1c32d200000,262144
new,MemoryChunk,0x1df6c200000,262144
new,MemoryChunk,0x34701000000,262144
new,MemoryChunk,0x1aa212c0000,262144
new,MemoryChunk,0x38256280000,262144
tick,0x7ff6cbf21625,15774505,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2a6ea500000,262144
new,MemoryChunk,0x30d52300000,262144
new,MemoryChunk,0x5541540000,262144
new,MemoryChunk,0x3c469400000,262144
new,MemoryChunk,0x7af1340000,262144
new,MemoryChunk,0x9b95e80000,262144
new,MemoryChunk,0x22e886c0000,262144
new,MemoryChunk,0x367a3140000,262144
new,MemoryChunk,0x18d24d00000,262144
new,MemoryChunk,0x3fa85680000,262144
tick,0x7ff66c241b40,15790465,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6b5b1,15806492,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2d28da00000,262144
new,MemoryChunk,0x38be4f80000,262144
new,MemoryChunk,0x21834500000,262144
new,MemoryChunk,0x28ac8240000,262144
new,MemoryChunk,0x2d215a40000,262144
new,MemoryChunk,0xe2d6480000,262144
new,MemoryChunk,0x30af7040000,262144
new,MemoryChunk,0x8740700000,262144
new,MemoryChunk,0x256d6900000,262144
tick,0x7ff6cbe9553f,15822485,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1eacbac0000,262144
new,MemoryChunk,0x31bc8180000,262144
new,MemoryChunk,0x24528a00000,262144
new,MemoryChunk,0x27182dc0000,262144
new,MemoryChunk,0x33be4e00000,262144
new,MemoryChunk,0x3ab62780000,262144
new,MemoryChunk,0x1434f900000,262144
tick,0x7ff6cbb5635a,15838480,0,0x0,1
new,MemoryChunk,0x11afc0c0000,262144
new,MemoryChunk,0x9037400000,262144
new,MemoryChunk,0x1b1f9f80000,262144
new,MemoryChunk,0x7a7a980000,262144
delete,MemoryChunk,0x1e280e00000
delete,MemoryChunk,0x4df4d00000
delete,MemoryChunk,0x3d7b62c0000
delete,MemoryChunk,0x18016940000
delete,MemoryChunk,0x371f0440000
delete,MemoryChunk,0x17c86fc0000
delete,MemoryChunk,0x20238380000
delete,MemoryChunk,0x3ae1da00000
delete,MemoryChunk,0x1f732980000
delete,MemoryChunk,0x72647c0000
delete,MemoryChunk,0x1398f040000
delete,MemoryChunk,0x3c4c8940000
delete,MemoryChunk,0x3697d00000
delete,MemoryChunk,0x31439c40000
delete,MemoryChunk,0x1b183840000
delete,MemoryChunk,0x3faa5f00000
delete,MemoryChunk,0x1bc0e900000
delete,MemoryChunk,0x3f7d3dc0000
delete,MemoryChunk,0x2591f00000
delete,MemoryChunk,0x7f211c0000
delete,MemoryChunk,0xf2a4880000
delete,MemoryChunk,0x2800dc80000
delete,MemoryChunk,0x257fdf80000
delete,MemoryChunk,0x296f2e00000
delete,MemoryChunk,0xdd25280000
delete,MemoryChunk,0x2e55a900000
delete,MemoryChunk,0x231e9f40000
delete,MemoryChunk,0x198e980000
delete,MemoryChunk,0x1c455ac0000
delete,MemoryChunk,0x1bd83080000
delete,MemoryChunk,0x64ae540000
delete,MemoryChunk,0x7a928c0000
delete,MemoryChunk,0x2d7dd880000
delete,MemoryChunk,0xa246580000
delete,MemoryChunk,0x1bbe3f40000
delete,MemoryChunk,0x1304f4c0000
delete,MemoryChunk,0x1af43880000
delete,MemoryChunk,0x1c32d200000
delete,MemoryChunk,0x38256280000
delete,MemoryChunk,0x145cda00000
delete,MemoryChunk,0x15720340000
delete,MemoryChunk,0x2b687e40000
delete,MemoryChunk,0x2f1f3680000
delete,MemoryChunk,0x2cf98000000
delete,MemoryChunk,0x34701000000
delete,MemoryChunk,0x2a6ea500000
delete,MemoryChunk,0x3c469400000
delete,MemoryChunk,0x9b95e80000
delete,MemoryChunk,0x1df6c200000
delete,MemoryChunk,0x5541540000
delete,MemoryChunk,0x7af1340000
delete,MemoryChunk,0x22e886c0000
delete,MemoryChunk,0x367a3140000
delete,MemoryChunk,0x3fa85680000
delete,MemoryChunk,0xe2d6480000
delete,MemoryChunk,0x38be4f80000
delete,MemoryChunk,0x28ac8240000
delete,MemoryChunk,0x21834500000
delete,MemoryChunk,0x2d215a40000
delete,MemoryChunk,0x2d28da00000
delete,MemoryChunk,0x256d6900000
delete,MemoryChunk,0x31bc8180000
delete,MemoryChunk,0x30d52300000
delete,MemoryChunk,0x3ab62780000
delete,MemoryChunk,0x7a7a980000
delete,MemoryChunk,0x11afc0c0000
delete,MemoryChunk,0x30af7040000
delete,MemoryChunk,0x1aa212c0000
delete,MemoryChunk,0x33be4e00000
delete,MemoryChunk,0x2880e9c0000
delete,MemoryChunk,0x1434f900000
delete,MemoryChunk,0x8740700000
delete,MemoryChunk,0x24528a00000
delete,MemoryChunk,0x9037400000
delete,MemoryChunk,0x18d24d00000
delete,MemoryChunk,0x27182dc0000
delete,MemoryChunk,0x1b1f9f80000
tick,0x7ff66c2bc3d2,15854570,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863c2ed55,15871105,0,0x0,1
tick,0x7ff6cbba9245,15886476,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cca89ee8,15902556,0,0x0,0,0x7ff66c30a519,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec672c,15918547,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49f7c4,15934496,0,0x0,0,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc29da31,15950501,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6bada,15966562,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d211,15982552,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d27e,15998549,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xb2c3940000,262144
new,MemoryChunk,0x2f6f3980000,262144
new,MemoryChunk,0x9dfed00000,262144
tick,0x7ff6cbda8df4,16014505,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497a46,16030547,0,0x0,0,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3841f340000,262144
new,MemoryChunk,0xa2d3cc0000,262144
new,MemoryChunk,0x12b51f00000,262144
new,MemoryChunk,0x113ab980000,262144
new,MemoryChunk,0x1e5c35c0000,262144
new,MemoryChunk,0xbc6840000,262144
new,MemoryChunk,0x1674e5c0000,262144
new,MemoryChunk,0x1bad1c80000,262144
tick,0x7ff6cc687004,16046498,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x6b07500000,262144
new,MemoryChunk,0x2dbe8700000,262144
new,MemoryChunk,0x2a4a6600000,262144
new,MemoryChunk,0x2a89c5c0000,262144
new,MemoryChunk,0x7af3d40000,262144
new,MemoryChunk,0x3cc1d600000,262144
new,MemoryChunk,0x26144000000,262144
new,MemoryChunk,0x4dd1180000,262144
new,MemoryChunk,0x24af9e80000,262144
new,MemoryChunk,0x2aeff980000,262144
new,MemoryChunk,0x3ea59480000,262144
new,MemoryChunk,0x1815e7c0000,262144
tick,0x7ff6cbebba25,16062471,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x302de0c0000,262144
new,MemoryChunk,0x2bbd1300000,262144
tick,0x7ff6cc06d69f,16078589,0,0x0,1
new,MemoryChunk,0x1b90b580000,262144
new,MemoryChunk,0x2f617740000,262144
new,MemoryChunk,0x2ed37c40000,262144
new,MemoryChunk,0x2cfe1080000,262144
new,MemoryChunk,0x1f765480000,262144
new,MemoryChunk,0x2122d740000,262144
new,MemoryChunk,0x159d40000,262144
tick,0x7ff6cbe9b48e,16094570,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3e7d2e00000,262144
new,MemoryChunk,0x258b00c0000,262144
new,MemoryChunk,0x1d9f8580000,262144
new,MemoryChunk,0x2ff75d40000,262144
new,MemoryChunk,0xc91d00000,262144
new,MemoryChunk,0x3c4a1240000,262144
new,MemoryChunk,0x15a8edc0000,262144
new,MemoryChunk,0x9c9fbc0000,262144
new,MemoryChunk,0x2104af00000,262144
tick,0x7ff6cbebdce8,16110508,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb10,16126498,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1b97c8c0000,262144
new,MemoryChunk,0x16b52f80000,262144
new,MemoryChunk,0x2888b400000,262144
new,MemoryChunk,0x2b13be00000,262144
new,MemoryChunk,0x354a1640000,262144
new,MemoryChunk,0x328023c0000,262144
new,MemoryChunk,0xd223000000,262144
new,MemoryChunk,0x29c0e800000,262144
new,MemoryChunk,0x1093080000,262144
new,MemoryChunk,0x5613400000,262144
tick,0x7ff66c2bc7aa,16142516,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb4e1a,16157516,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3e279e80000,262144
new,MemoryChunk,0x22612800000,262144
new,MemoryChunk,0x5a30280000,262144
new,MemoryChunk,0x3a4e8640000,262144
new,MemoryChunk,0x804b980000,262144
new,MemoryChunk,0x2ae4eb80000,262144
new,MemoryChunk,0x11199440000,262144
new,MemoryChunk,0x32f5000000,262144
new,MemoryChunk,0x8352f40000,262144
new,MemoryChunk,0x14be9140000,262144
tick,0x7ff6cbf20eac,16173514,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x37e5fdc0000,262144
new,MemoryChunk,0x23e65800000,262144
new,MemoryChunk,0x466ad40000,262144
new,MemoryChunk,0x1076c00000,262144
new,MemoryChunk,0x287904c0000,262144
new,MemoryChunk,0xce22000000,262144
new,MemoryChunk,0x146a5f40000,262144
new,MemoryChunk,0x11647940000,262144
new,MemoryChunk,0x17cec100000,262144
tick,0x7ff64c49a603,16189520,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x170bb2c0000,262144
new,MemoryChunk,0x12c93800000,262144
new,MemoryChunk,0x5f33700000,262144
new,MemoryChunk,0xcf89bc0000,262144
tick,0x7ff6cc06ae24,16205507,0,0x0,1
new,MemoryChunk,0x21157c00000,262144
new,MemoryChunk,0x38991240000,262144
new,MemoryChunk,0x30bfe740000,262144
new,MemoryChunk,0x2661e2c0000,262144
new,MemoryChunk,0xe072880000,262144
new,MemoryChunk,0x4356200000,262144
new,MemoryChunk,0x3d784bc0000,262144
delete,MemoryChunk,0x119ce340000
delete,MemoryChunk,0xb2c3940000
delete,MemoryChunk,0xa2d3cc0000
delete,MemoryChunk,0x3841f340000
delete,MemoryChunk,0x1bad1c80000
delete,MemoryChunk,0x12b51f00000
delete,MemoryChunk,0x113ab980000
delete,MemoryChunk,0xbc6840000
delete,MemoryChunk,0x6b07500000
delete,MemoryChunk,0x2dbe8700000
delete,MemoryChunk,0x2a4a6600000
delete,MemoryChunk,0x26144000000
delete,MemoryChunk,0x2aeff980000
delete,MemoryChunk,0x3ea59480000
delete,MemoryChunk,0x7af3d40000
delete,MemoryChunk,0x4dd1180000
delete,MemoryChunk,0x2a89c5c0000
delete,MemoryChunk,0x24af9e80000
delete,MemoryChunk,0x2f6f3980000
delete,MemoryChunk,0x1815e7c0000
delete,MemoryChunk,0x3cc1d600000
delete,MemoryChunk,0x9dfed00000
delete,MemoryChunk,0x1b90b580000
delete,MemoryChunk,0x2f617740000
delete,MemoryChunk,0x2bbd1300000
delete,MemoryChunk,0x2ed37c40000
delete,MemoryChunk,0x302de0c0000
delete,MemoryChunk,0x1674e5c0000
delete,MemoryChunk,0x2cfe1080000
delete,MemoryChunk,0x1eacbac0000
delete,MemoryChunk,0x15a8edc0000
delete,MemoryChunk,0x3e7d2e00000
delete,MemoryChunk,0x258b00c0000
delete,MemoryChunk,0x2ff75d40000
delete,MemoryChunk,0x3c4a1240000
delete,MemoryChunk,0x2104af00000
delete,MemoryChunk,0x1d9f8580000
delete,MemoryChunk,0xc91d00000
delete,MemoryChunk,0x9c9fbc0000
delete,MemoryChunk,0x1b97c8c0000
delete,MemoryChunk,0x159d40000
delete,MemoryChunk,0x328023c0000
delete,MemoryChunk,0x29c0e800000
delete,MemoryChunk,0x2122d740000
delete,MemoryChunk,0x16b52f80000
delete,MemoryChunk,0x1e5c35c0000
delete,MemoryChunk,0x354a1640000
delete,MemoryChunk,0x2b13be00000
delete,MemoryChunk,0x2888b400000
delete,MemoryChunk,0xd223000000
delete,MemoryChunk,0x3e279e80000
delete,MemoryChunk,0x3a4e8640000
delete,MemoryChunk,0x22612800000
delete,MemoryChunk,0x2ae4eb80000
delete,MemoryChunk,0x5a30280000
delete,MemoryChunk,0x804b980000
delete,MemoryChunk,0x11199440000
delete,MemoryChunk,0x1076c00000
delete,MemoryChunk,0x146a5f40000
delete,MemoryChunk,0x1f765480000
delete,MemoryChunk,0xce22000000
delete,MemoryChunk,0x37e5fdc0000
delete,MemoryChunk,0x287904c0000
delete,MemoryChunk,0x11647940000
delete,MemoryChunk,0x5f33700000
delete,MemoryChunk,0xcf89bc0000
delete,MemoryChunk,0x38991240000
delete,MemoryChunk,0x30bfe740000
delete,MemoryChunk,0x2661e2c0000
delete,MemoryChunk,0x32f5000000
delete,MemoryChunk,0x170bb2c0000
delete,MemoryChunk,0x14be9140000
delete,MemoryChunk,0x1093080000
delete,MemoryChunk,0x12c93800000
delete,MemoryChunk,0x3d784bc0000
delete,MemoryChunk,0xe072880000
delete,MemoryChunk,0x4356200000
delete,MemoryChunk,0x21157c00000
tick,0x7ff6cbe9a597,16221555,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9d8,16237516,0,0x0,1
tick,0x7ff6cc0d83df,16253689,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc1ab357,16269053,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc087ee5,16285046,0,0x0,1
tick,0x7ff6cc0eb403,16301074,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49f7c8,16317017,0,0x0,0,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06d07d,16333046,0,0x0,1
tick,0x7ff64c49ff35,16349016,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c27ee7e,16365031,0,0x0,0,0x7ff66c30a519,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863c16f3b,16381032,0,0x0,1
tick,0x7ff66c2dbf7a,16397050,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2b4ad1c0000,262144
new,MemoryChunk,0x1c896500000,262144
new,MemoryChunk,0x9225080000,262144
new,MemoryChunk,0x2608c180000,262144
new,MemoryChunk,0x13412900000,262144
new,MemoryChunk,0x3a73e840000,262144
new,MemoryChunk,0x58e78c0000,262144
new,MemoryChunk,0x6c6fac0000,262144
tick,0x7ff66c2dbf75,16413101,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xf349f80000,262144
new,MemoryChunk,0x4df0200000,262144
new,MemoryChunk,0x1c44c800000,262144
new,MemoryChunk,0x25943c00000,262144
new,MemoryChunk,0x370ac940000,262144
new,MemoryChunk,0x3dfcfb40000,262144
new,MemoryChunk,0xf82d280000,262144
new,MemoryChunk,0x2b46b600000,262144
new,MemoryChunk,0x9978c0000,262144
tick,0x7ff66c2bc465,16428023,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb9a99,16444034,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xb2d4b80000,262144
new,MemoryChunk,0x5220840000,262144
new,MemoryChunk,0x9c2380000,262144
new,MemoryChunk,0x3ac28c80000,262144
new,MemoryChunk,0x16557500000,262144
new,MemoryChunk,0xa17ce80000,262144
new,MemoryChunk,0x352cf580000,262144
new,MemoryChunk,0xe8fd340000,262144
new,MemoryChunk,0x36b10900000,262144
new,MemoryChunk,0x2014c500000,262144
tick,0x7ff64c49fb41,16460051,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x22e5b00000,262144
new,MemoryChunk,0x3e0821c0000,262144
new,MemoryChunk,0x2fd66680000,262144
new,MemoryChunk,0xca2c0000,262144
new,MemoryChunk,0x32d6d9c0000,262144
new,MemoryChunk,0x1a742740000,262144
new,MemoryChunk,0x7981200000,262144
new,MemoryChunk,0x32bbb080000,262144
new,MemoryChunk,0x27e315c0000,262144
tick,0x7ff66c289098,16476106,0,0x0,0,0x7ff64c49a341,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a28ac,16492038,0,0x0,0,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xb2fcdc0000,262144
new,MemoryChunk,0x3da3bd80000,262144
new,MemoryChunk,0x4112d40000,262144
new,MemoryChunk,0x9dc1d80000,262144
new,MemoryChunk,0x4cd6200000,262144
new,MemoryChunk,0x1b51fc40000,262144
new,MemoryChunk,0x3b9de040000,262144
new,MemoryChunk,0x12aba280000,262144
new,MemoryChunk,0x2192d800000,262144
new,MemoryChunk,0x21d8ed40000,262144
tick,0x7ff6cbe9a4b7,16508055,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1f0faa40000,262144
new,MemoryChunk,0x107a99c0000,262144
new,MemoryChunk,0x687a080000,262144
new,MemoryChunk,0xda22900000,262144
new,MemoryChunk,0x24f92800000,262144
new,MemoryChunk,0x28aa6d80000,262144
new,MemoryChunk,0x3221b140000,262144
new,MemoryChunk,0x2269d340000,262144
new,MemoryChunk,0x15c603c0000,262144
new,MemoryChunk,0x2345c380000,262144
tick,0x7ff863b94760,16524033,0,0x0,1
tick,0x7ff64c495ff1,16540058,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1e595900000,262144
new,MemoryChunk,0x4aaf240000,262144
new,MemoryChunk,0x3301fdc0000,262144
new,MemoryChunk,0x2bd29400000,262144
new,MemoryChunk,0x13e0200000,262144
new,MemoryChunk,0xef17a40000,262144
new,MemoryChunk,0x2cdea140000,262144
new,MemoryChunk,0x5e79b80000,262144
new,MemoryChunk,0x3eaf1c00000,262144
new,MemoryChunk,0x1d9c4b00000,262144
tick,0x7ff66c2dbf75,16556046,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2486c40000,262144
new,MemoryChunk,0x2e0424c0000,262144
new,MemoryChunk,0x34abfc80000,262144
new,MemoryChunk,0x8ce04c0000,262144
new,MemoryChunk,0xacd9b00000,262144
new,MemoryChunk,0xff02040000,262144
new,MemoryChunk,0x37f7e6c0000,262144
new,MemoryChunk,0x26efd380000,262144
tick,0x7ff6cc06d06a,16571146,0,0x0,1
new,MemoryChunk,0xaaaa740000,262144
delete,MemoryChunk,0x5613400000
delete,MemoryChunk,0x17cec100000
delete,MemoryChunk,0x8352f40000
delete,MemoryChunk,0x466ad40000
delete,MemoryChunk,0x23e65800000
delete,MemoryChunk,0x13412900000
delete,MemoryChunk,0x2b4ad1c0000
delete,MemoryChunk,0x9225080000
delete,MemoryChunk,0x2608c180000
delete,MemoryChunk,0x58e78c0000
delete,MemoryChunk,0x25943c00000
delete,MemoryChunk,0x2b46b600000
delete,MemoryChunk,0xf349f80000
delete,MemoryChunk,0x4df0200000
delete,MemoryChunk,0x9978c0000
delete,MemoryChunk,0x3dfcfb40000
delete,MemoryChunk,0xb2d4b80000
delete,MemoryChunk,0x9c2380000
delete,MemoryChunk,0x2014c500000
delete,MemoryChunk,0x5220840000
delete,MemoryChunk,0xa17ce80000
delete,MemoryChunk,0x352cf580000
delete,MemoryChunk,0xca2c0000
delete,MemoryChunk,0x32bbb080000
delete,MemoryChunk,0x2fd66680000
delete,MemoryChunk,0x7981200000
delete,MemoryChunk,0xf82d280000
delete,MemoryChunk,0x22e5b00000
delete,MemoryChunk,0x3e0821c0000
delete,MemoryChunk,0x32d6d9c0000
delete,MemoryChunk,0xb2fcdc0000
delete,MemoryChunk,0x4cd6200000
delete,MemoryChunk,0xe8fd340000
delete,MemoryChunk,0x12aba280000
delete,MemoryChunk,0x1a742740000
delete,MemoryChunk,0x4112d40000
delete,MemoryChunk,0x1b51fc40000
delete,MemoryChunk,0x3da3bd80000
delete,MemoryChunk,0x3ac28c80000
delete,MemoryChunk,0x21d8ed40000
delete,MemoryChunk,0x1c44c800000
delete,MemoryChunk,0x3b9de040000
delete,MemoryChunk,0x28aa6d80000
delete,MemoryChunk,0x2345c380000
delete,MemoryChunk,0x107a99c0000
delete,MemoryChunk,0x15c603c0000
delete,MemoryChunk,0x1f0faa40000
delete,MemoryChunk,0xda22900000
delete,MemoryChunk,0x24f92800000
delete,MemoryChunk,0x2269d340000
delete,MemoryChunk,0x1e595900000
delete,MemoryChunk,0x2bd29400000
delete,MemoryChunk,0x3a73e840000
delete,MemoryChunk,0x3221b140000
delete,MemoryChunk,0xef17a40000
delete,MemoryChunk,0x3eaf1c00000
delete,MemoryChunk,0x4aaf240000
delete,MemoryChunk,0x13e0200000
delete,MemoryChunk,0x5e79b80000
delete,MemoryChunk,0x37f7e6c0000
delete,MemoryChunk,0x2e0424c0000
delete,MemoryChunk,0xff02040000
delete,MemoryChunk,0x2486c40000
delete,MemoryChunk,0xacd9b00000
delete,MemoryChunk,0xaaaa740000
delete,MemoryChunk,0x34abfc80000
delete,MemoryChunk,0x8ce04c0000
delete,MemoryChunk,0x36b10900000
delete,MemoryChunk,0x16557500000
delete,MemoryChunk,0x1c896500000
delete,MemoryChunk,0x26efd380000
tick,0x7ff64c495130,16587088,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb296,16603065,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0279,16619050,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb4e15,16635082,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c496041,16651059,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a09eb,16667052,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbb6e938,16683076,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06af76,16699115,0,0x0,1
tick,0x7ff6cbda8dcf,16715095,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbea07c2,16731053,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9d8,16747098,0,0x0,1
tick,0x7ff6cbdac86f,16763061,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x42dbb80000,262144
new,MemoryChunk,0x381a8d80000,262144
tick,0x7ff66c299b2f,16779098,0,0x0,0,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xbc47bc0000,262144
new,MemoryChunk,0x11039e80000,262144
new,MemoryChunk,0x2723be80000,262144
new,MemoryChunk,0x36af5400000,262144
new,MemoryChunk,0xaab8800000,262144
new,MemoryChunk,0x39b3a8c0000,262144
new,MemoryChunk,0x24749e00000,262144
new,MemoryChunk,0x1dbcc840000,262144
new,MemoryChunk,0x7a81300000,262144
tick,0x7ff6cc06c1d1,16795058,0,0x0,1
new,MemoryChunk,0x324118c0000,262144
new,MemoryChunk,0x2eb89580000,262144
new,MemoryChunk,0xc7c4200000,262144
tick,0x7ff6cbda9303,16811136,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x9e4d400000,262144
new,MemoryChunk,0x4b71d80000,262144
new,MemoryChunk,0x965f740000,262144
new,MemoryChunk,0x146310c0000,262144
new,MemoryChunk,0x1c764d80000,262144
new,MemoryChunk,0x36cb0ac0000,262144
new,MemoryChunk,0x1b656800000,262144
new,MemoryChunk,0x36560f40000,262144
tick,0x7ff6cbf1d27e,16827083,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x39a9ae40000,262144
new,MemoryChunk,0x119d9cc0000,262144
new,MemoryChunk,0x1abe0c00000,262144
new,MemoryChunk,0xa642d40000,262144
new,MemoryChunk,0x309bac0000,262144
new,MemoryChunk,0x180b9b00000,262144
new,MemoryChunk,0x1d9b2680000,262144
new,MemoryChunk,0x8d5ef40000,262144
new,MemoryChunk,0x26f45940000,262144
tick,0x7ff6cc06a4be,16843069,0,0x0,1
tick,0x7ff6cbeb81c1,16859156,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1288f140000,262144
new,MemoryChunk,0x27314c80000,262144
new,MemoryChunk,0x356a8a40000,262144
new,MemoryChunk,0x3e29ac40000,262144
new,MemoryChunk,0x3cd5d0c0000,262144
new,MemoryChunk,0xbb10ac0000,262144
new,MemoryChunk,0xfac0340000,262144
new,MemoryChunk,0x20ce2700000,262144
new,MemoryChunk,0x941f4c0000,262144
tick,0x7ff6cbf1c418,16875123,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c28bb87,16891078,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x15763c40000,262144
new,MemoryChunk,0x39661d80000,262144
new,MemoryChunk,0x28674a40000,262144
new,MemoryChunk,0x4c4a940000,262144
new,MemoryChunk,0x19e774c0000,262144
new,MemoryChunk,0xbe97600000,262144
new,MemoryChunk,0x3601c640000,262144
new,MemoryChunk,0x3357780000,262144
new,MemoryChunk,0x34428b00000,262144
tick,0x7ff66c2dbf85,16907062,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x6c98500000,262144
new,MemoryChunk,0xa403f00000,262144
new,MemoryChunk,0x31bfa980000,262144
new,MemoryChunk,0x3bc61000000,262144
new,MemoryChunk,0x303de980000,262144
new,MemoryChunk,0x8f4dc00000,262144
new,MemoryChunk,0x3f4081c0000,262144
new,MemoryChunk,0x5ff0dc0000,262144
tick,0x7ff6cc06b777,16923097,0,0x0,1
new,MemoryChunk,0x1c92ed80000,262144
tick,0x7ff863c0d0e4,16939070,0,0x0,1
new,MemoryChunk,0x46515c0000,262144
new,MemoryChunk,0xcf63200000,262144
new,MemoryChunk,0x25c7b580000,262144
new,MemoryChunk,0x2f89100000,262144
new,MemoryChunk,0x297d0200000,262144
new,MemoryChunk,0x2ef8b0c0000,262144
new,MemoryChunk,0x457e980000,262144
new,MemoryChunk,0x27dfcec0000,262144
delete,MemoryChunk,0x50c8f00000
delete,MemoryChunk,0x2cdea140000
delete,MemoryChunk,0x9dc1d80000
delete,MemoryChunk,0x687a080000
delete,MemoryChunk,0x1d9c4b00000
delete,MemoryChunk,0x42dbb80000
delete,MemoryChunk,0x381a8d80000
delete,MemoryChunk,0xbc47bc0000
delete,MemoryChunk,0x11039e80000
delete,MemoryChunk,0x2723be80000
delete,MemoryChunk,0x39b3a8c0000
delete,MemoryChunk,0x36af5400000
delete,MemoryChunk,0x24749e00000
delete,MemoryChunk,0xc7c4200000
delete,MemoryChunk,0x1dbcc840000
delete,MemoryChunk,0x7a81300000
delete,MemoryChunk,0x36cb0ac0000
delete,MemoryChunk,0x36560f40000
delete,MemoryChunk,0x2eb89580000
delete,MemoryChunk,0x4b71d80000
delete,MemoryChunk,0x965f740000
delete,MemoryChunk,0x1c764d80000
delete,MemoryChunk,0x1b656800000
delete,MemoryChunk,0x324118c0000
delete,MemoryChunk,0xaab8800000
delete,MemoryChunk,0x3301fdc0000
delete,MemoryChunk,0x6c6fac0000
delete,MemoryChunk,0x1abe0c00000
delete,MemoryChunk,0x309bac0000
delete,MemoryChunk,0x9e4d400000
delete,MemoryChunk,0x1d9b2680000
delete,MemoryChunk,0x180b9b00000
delete,MemoryChunk,0x39a9ae40000
delete,MemoryChunk,0xa642d40000
delete,MemoryChunk,0x8d5ef40000
delete,MemoryChunk,0x1288f140000
delete,MemoryChunk,0x3cd5d0c0000
delete,MemoryChunk,0x27314c80000
delete,MemoryChunk,0xfac0340000
delete,MemoryChunk,0x941f4c0000
delete,MemoryChunk,0x3e29ac40000
delete,MemoryChunk,0xbb10ac0000
delete,MemoryChunk,0x15763c40000
delete,MemoryChunk,0xbe97600000
delete,MemoryChunk,0x3357780000
delete,MemoryChunk,0x39661d80000
delete,MemoryChunk,0x20ce2700000
delete,MemoryChunk,0x3601c640000
delete,MemoryChunk,0x28674a40000
delete,MemoryChunk,0x19e774c0000
delete,MemoryChunk,0x6c98500000
delete,MemoryChunk,0x31bfa980000
delete,MemoryChunk,0x3bc61000000
delete,MemoryChunk,0x8f4dc00000
delete,MemoryChunk,0x46515c0000
delete,MemoryChunk,0x2f89100000
delete,MemoryChunk,0x27dfcec0000
delete,MemoryChunk,0x303de980000
delete,MemoryChunk,0xcf63200000
delete,MemoryChunk,0x3f4081c0000
delete,MemoryChunk,0x34428b00000
delete,MemoryChunk,0x25c7b580000
delete,MemoryChunk,0x297d0200000
delete,MemoryChunk,0x457e980000
tick,0x7ff66c2881e3,16955052,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a435,16971122,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0bdeb8,16987175,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c29002b,17003166,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc317651,17019090,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c492f84,17035151,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec73f5,17051094,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9a3,17067097,0,0x0,1
tick,0x7ff64c47e644,17083119,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebb6ef,17098664,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241c6f,17114817,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c496041,17130688,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c30b4ae,17146704,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c499c44,17162726,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc687004,17178818,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1d75700000,262144
new,MemoryChunk,0x37926d80000,262144
new,MemoryChunk,0x85f5a40000,262144
new,MemoryChunk,0x2ccfc8c0000,262144
new,MemoryChunk,0x27130e00000,262144
tick,0x7ff863c10a14,17194704,0,0x0,1
tick,0x7ff6cbf1c6c3,17210700,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x84e66c0000,262144
new,MemoryChunk,0xbd8c7c0000,262144
new,MemoryChunk,0x169e040000,262144
new,MemoryChunk,0x21bfea80000,262144
new,MemoryChunk,0x8801300000,262144
tick,0x7ff6cc0c5190,17226707,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x518cf00000,262144
new,MemoryChunk,0x32e18500000,262144
new,MemoryChunk,0x1f866840000,262144
new,MemoryChunk,0x2b5b2fc0000,262144
new,MemoryChunk,0x2644f200000,262144
new,MemoryChunk,0x2ce41ac0000,262144
tick,0x7ff6cc0d88a3,17242669,0,0x0,1
new,MemoryChunk,0x16106ac0000,262144
new,MemoryChunk,0x2d784e40000,262144
new,MemoryChunk,0x117782c0000,262144
new,MemoryChunk,0x27d4ab40000,262144
tick,0x7ff66c2dc0bc,17258792,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3b8a2540000,262144
new,MemoryChunk,0x315c6300000,262144
new,MemoryChunk,0x3a41a580000,262144
new,MemoryChunk,0x4dde300000,262144
new,MemoryChunk,0x8cb4480000,262144
new,MemoryChunk,0x540b00000,262144
new,MemoryChunk,0x1fdf7a00000,262144
tick,0x7ff6cc0fd1ec,17274822,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x15d55340000,262144
new,MemoryChunk,0x17cdb1c0000,262144
new,MemoryChunk,0x36eaf40000,262144
tick,0x7ff6cc06a9a3,17290907,0,0x0,1
new,MemoryChunk,0x362a35c0000,262144
new,MemoryChunk,0x37dc6240000,262144
new,MemoryChunk,0x2209e380000,262144
tick,0x7ff6cbdaee36,17306710,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35014200000,262144
new,MemoryChunk,0x5a3ac40000,262144
new,MemoryChunk,0x37a47e00000,262144
new,MemoryChunk,0x7a77dc0000,262144
new,MemoryChunk,0x35fe7f80000,262144
new,MemoryChunk,0x2211e080000,262144
new,MemoryChunk,0x360d3680000,262144
tick,0x7ff66c244a94,17322673,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbbd2ac7,17338669,0,0x0,1
new,MemoryChunk,0x115fc0c0000,262144
new,MemoryChunk,0x3add3e40000,262144
new,MemoryChunk,0x20dc16c0000,262144
new,MemoryChunk,0x1262f340000,262144
new,MemoryChunk,0x295eac0000,262144
new,MemoryChunk,0x3a8c8700000,262144
new,MemoryChunk,0x268bc2c0000,262144
new,MemoryChunk,0x102d1700000,262144
tick,0x7ff6cbe9553f,17354680,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xe4a8940000,262144
new,MemoryChunk,0x1375a980000,262144
new,MemoryChunk,0xb538d40000,262144
new,MemoryChunk,0x30c49280000,262144
new,MemoryChunk,0x23d58980000,262144
new,MemoryChunk,0xcf78940000,262144
tick,0x7ff64c4a10f6,17370700,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xc5e0680000,262144
new,MemoryChunk,0x2a353400000,262144
new,MemoryChunk,0x1a57e1c0000,262144
new,MemoryChunk,0x1feb6b00000,262144
new,MemoryChunk,0x1ff11140000,262144
tick,0x7ff6cc06b750,17386698,0,0x0,1
new,MemoryChunk,0x3b756340000,262144
new,MemoryChunk,0xc71cc80000,262144
tick,0x7ff6cbeba230,17402695,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xd44bc80000,262144
new,MemoryChunk,0x38ff5000000,262144
new,MemoryChunk,0x19a1cd80000,262144
new,MemoryChunk,0x1de85e00000,262144
new,MemoryChunk,0x3634f740000,262144
new,MemoryChunk,0x3d5aa200000,262144
new,MemoryChunk,0x2d296140000,262144
delete,MemoryChunk,0x5ff0dc0000
delete,MemoryChunk,0x26f45940000
delete,MemoryChunk,0x370ac940000
delete,MemoryChunk,0xa403f00000
delete,MemoryChunk,0x2ef8b0c0000
delete,MemoryChunk,0x1d75700000
delete,MemoryChunk,0x27130e00000
delete,MemoryChunk,0x4c4a940000
delete,MemoryChunk,0x2ccfc8c0000
delete,MemoryChunk,0x37926d80000
delete,MemoryChunk,0xbd8c7c0000
delete,MemoryChunk,0x21bfea80000
delete,MemoryChunk,0x8801300000
delete,MemoryChunk,0x85f5a40000
delete,MemoryChunk,0x518cf00000
delete,MemoryChunk,0x32e18500000
delete,MemoryChunk,0x2b5b2fc0000
delete,MemoryChunk,0x2644f200000
delete,MemoryChunk,0x27d4ab40000
delete,MemoryChunk,0x16106ac0000
delete,MemoryChunk,0x117782c0000
delete,MemoryChunk,0x8cb4480000
delete,MemoryChunk,0x3a41a580000
delete,MemoryChunk,0x315c6300000
delete,MemoryChunk,0x37dc6240000
delete,MemoryChunk,0x1fdf7a00000
delete,MemoryChunk,0x37a47e00000
delete,MemoryChunk,0x362a35c0000
delete,MemoryChunk,0x7a77dc0000
delete,MemoryChunk,0x15d55340000
delete,MemoryChunk,0x5a3ac40000
delete,MemoryChunk,0x115fc0c0000
delete,MemoryChunk,0x3add3e40000
delete,MemoryChunk,0x2d784e40000
delete,MemoryChunk,0x268bc2c0000
delete,MemoryChunk,0x102d1700000
delete,MemoryChunk,0x295eac0000
delete,MemoryChunk,0xb538d40000
delete,MemoryChunk,0x1262f340000
delete,MemoryChunk,0x1375a980000
delete,MemoryChunk,0xe4a8940000
delete,MemoryChunk,0xc5e0680000
delete,MemoryChunk,0x1a57e1c0000
delete,MemoryChunk,0x1feb6b00000
delete,MemoryChunk,0x30c49280000
delete,MemoryChunk,0xcf78940000
delete,MemoryChunk,0x3b756340000
delete,MemoryChunk,0xd44bc80000
delete,MemoryChunk,0xc71cc80000
delete,MemoryChunk,0x38ff5000000
delete,MemoryChunk,0x3634f740000
delete,MemoryChunk,0x19a1cd80000
delete,MemoryChunk,0x3d5aa200000
tick,0x7ff6cc063623,17418662,0,0x0,1
delete,MemoryChunk,0x2d296140000
delete,MemoryChunk,0x1de85e00000
tick,0x7ff6cbe6d7b3,17434714,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497844,17450752,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc070255,17466697,0,0x0,1
code-creation,JS,10,17468040,0x3faf093d2be,113,get node:internal/util:635:17,0x3fcdef88970,~
code-source-info,0x3faf093d2be,16,18163,18397,C0O18175C8O18211C19O18233C22O18211C27O18263C33O18292C37O18305C38O18322C57O18338C60O18330C69O18326C77O18350C89O18360C94O18364C96O18363C102O18356C108O18377C112O18390,,
code-creation,JS,10,17468188,0x3faf093d49e,96,measure node:internal/perf/performance:126:10,0x13a35fab838,~
code-source-info,0x3faf093d49e,121,3334,3618,C0O3334C11O3365C28O3407C35O3435C44O3407C49O3489C55O3496C60O3512C70O3518C75O3512C76O3560C90O3567C95O3613,,
code-creation,JS,10,17468291,0x3faf093d616,46, node:internal/validators:523:47,0x3fcdef85c18,~
code-source-info,0x3faf093d616,15,15257,15471,C0O15295C12O15349C15O15349C22O15405C38O15411C43O15405C45O15470,,
code-creation,JS,10,17468407,0x3faf093d7b6,105,measure node:internal/perf/usertiming:215:17,0x13a35fa6e38,~
code-source-info,0x3faf093d7b6,119,5693,6124,C0O5737C8O5737C13O5812C16O5812C22O5783C27O5795C32O5884C39O5905C47O5918C52O5944C55O5944C63O5995C78O5995C84O6055C89O6055C93O6076C98O6076C102O6106C104O6121,,
code-creation,JS,10,17468639,0x3faf093da9e,292,calculateStartDuration node:internal/perf/usertiming:164:32,0x13a35fa6de8,~
code-source-info,0x3faf093da9e,119,4072,5673,C0O4110C9O4146C11O4160C13O4172C15O4204C17O4214C23O4271C28O4278C33O4283C38O4325C41O4346C47O4367C49O4390C53O4415C57O4451C67O4457C72O4451C73O4559C81O4614C91O4620C96O4614C97O4738C109O4819C119O4928C125O4825C130O4819C131O4987C135O5021C138O5027C145O5055C153O5101C156O5107C163O5131C175O5205C178O5211C186O5228C190O5226C196O5264C201O5270C205O5287C211O5341C214O5349C221O5391C229O5439C232O5447C239O5473C251O5545C254O5559C258O5557C264O5595C266O5616C268O5631C272O5643C279O5652C285O5659C291O5670,,
code-creation,JS,10,17468870,0x3faf093dde6,118,getMark node:internal/perf/usertiming:53:17,0x13a35fa6cf8,~
code-source-info,0x3faf093dde6,119,1202,1652,C0O1214C4O1238C5O1245C6O1249C12O1286C13O1295C18O1307C25O1313C30O1307C31O1363C33O1375C34O1384C39O1405C44O1438C49O1438C56O1454C63O1471C66O1478C67O1493C72O1505C77O1505C83O1519C85O1546C95O1577C109O1552C114O1546C115O1639C117O1649,,
code-creation,JS,10,17469043,0x3faf093e32e,44,createPerformanceMeasure node:internal/perf/usertiming:149:34,0x13a35fa6d48,~
code-source-info,0x3faf093e32e,119,3709,3887,C0O3762C7O3785C24O3762C30O3837C32O3845C37O3854C41O3869C43O3884,,
code-creation,JS,10,17469152,0x3faf093e466,125,PerformanceMeasure node:internal/perf/usertiming:121:14,0x13a35fa6fe8,~
code-source-info,0x3faf093e466,119,3048,3346,C53O3193C55O3217C57O3213C62O3238C67O3244C72O3238C73O3289C109O3289C124O3345,,
code-creation,JS,10,17469252,0x3faf093e5ee,116,PerformanceEntry node:internal/perf/performance_entry:34:14,0x3e4136bf6e0,~
code-source-info,0x3faf093e5ee,116,821,1180,C50O966C52O990C54O986C59O1011C64O1017C69O1011C70O1062C72O1067C77O1074C81O1087C83O1092C88O1104C92O1117C94O1122C99O1134C103O1148C105O1153C110O1164C115O1179,,
code-creation,JS,10,17469377,0x3faf093e806,165,enqueue node:internal/perf/observe:391:17,0x13a35f9f7c0,~
code-source-info,0x3faf093e806,118,10421,10614,C0O10434C5O10439C11O10471C27O10477C32O10471C33O10562C55O10555C83O10555C86O10581C88O10585C90O10584C94O10598C99O10544C164O10613,,
code-creation,JS,10,17469463,0x3faf093e9c6,20,isPerformanceEntry node:internal/perf/performance_entry:29:28,0x3e4136bf5f0,~
code-source-info,0x3faf093e9c6,116,730,778,C0O741C9O754C11O753C18O761C19O775,,
code-creation,JS,10,17469528,0x3faf093eab6,13, node:internal/per_context/primordials:387:32,0x23399f5320,~
code-source-info,0x3faf093eab6,6,11633,11694,C0O11651C7O11658C12O11681,,
code-creation,JS,10,17469683,0x3faf093ed96,204,bufferUserTiming node:internal/perf/observe:403:26,0x13a35f9f810,~
code-source-info,0x3faf093ed96,118,10705,11735,C0O10742C5O10760C7O10771C9O10785C14O10804C21O10840C23O10854C28O10876C35O10922C36O10929C37O10940C42O10940C47O10999C52O11012C54O11024C56O11022C63O11065C66O11083C71O11083C78O11106C83O11124C90O11124C96O11268C106O11353C116O11362C126O11323C132O11403C138O11493C143O11522C153O11463C159O11540C165O11268C171O11594C173O11601C177O11652C179O11664C183O11682C185O11690C189O11704C192O11712C197O11712C203O11734,,
code-creation,JS,10,17469813,0x3faf093efde,29,get entryType node:internal/perf/performance_entry:56:16,0x3e4136bf7b8,~
code-source-info,0x3faf093efde,116,1308,1413,C0O1318C7O1346C16O1318C21O1384C23O1396C25O1395C28O1408,,
code-creation,JS,10,17469887,0x3faf093f10e,29,get duration node:internal/perf/performance_entry:66:15,0x3e4136bf898,~
code-source-info,0x3faf093f10e,116,1555,1658,C0O1565C7O1593C16O1565C21O1630C23O1642C25O1641C28O1653,,
code-creation,JS,10,17469977,0x3faf093f21e,38,log node:internal/console/constructor:378:6,0x3fcdefab810,~
code-source-info,0x3faf093f21e,46,11960,12046,C0O11960C3O11977C5O11982C7O11981C13O11999C18O12016C20O12015C24O12033C30O11998C37O12045,,
code-creation,JS,10,17470063,0x3faf093f366,50,value node:internal/console/constructor:339:20,0x3fcdefab570,~
code-source-info,0x3faf093f366,46,10465,10641,C0O10494C2O10499C4O10498C8O10524C13O10518C19O10541C24O10541C29O10583C36O10603C44O10590C49O10634,,
code-creation,JS,10,17470143,0x3faf093f47e,27,get node:internal/console/constructor:213:14,0x1c66f8cd198,~
code-source-info,0x3faf093f47e,46,6256,6351,C0O6274C6O6287C9O6303C16O6294C22O6324C26O6338,,
code-creation,JS,10,17470242,0x3faf093f5ae,81,value node:internal/console/constructor:319:20,0x3fcdefab4e8,~
code-source-info,0x3faf093f5ae,46,9942,10359,C0O9972C2O9977C4O9976C8O9997C10O10007C15O10030C18O10038C22O10054C27O10055C33O10113C38O10124C43O10124C49O10142C51O10178C57O10213C59O10228C63O10257C65O10272C66O10291C72O10306C78O10329C80O10352,,
code-creation,JS,10,17470340,0x3faf093f736,32,lazyUtilColors node:internal/console/constructor:83:24,0x3fcdefa9a28,~
code-source-info,0x3faf093f736,46,1980,2060,C0O1988C14O2003C21O1999C27O2039C31O2057,,
code-creation,JS,10,17470429,0x3faf093f866,80,shouldColorize node:internal/util/colors:17:17,0x2bcf6ac4110,~
code-source-info,0x3faf093f866,148,274,527,C0O290C3O302C8O306C14O342C17O349C21O366C26O367C33O383C36O387C37O400C44O413C53O447C61O494C66O494C73O510C79O522,,
code-creation,JS,10,17470758,0xbdcae7869e,765,getColorDepth node:internal/tty:106:23,0x385005877c8,~
code-source-info,0xbdcae7869e
code-creation,JS,10,17471064,0xbdcae78be6,38,formatWithOptions node:internal/util/inspect:2158:27,0x3fcdef8eed0,~
code-source-info,0xbdcae78be6,21,74795,74964,C0O74795C8O74826C18O74875C24O74826C29O74906C32O74913C37O74961,,
code-creation,JS,10,17471211,0xbdcae78dae,252, node:internal/validators:235:3,0x3fcdef85630,~
code-source-info,0xbdcae78dae,15,6585,7633,C12O6609C19O6640C21O6656C23O6652C28O6686C34O6708C37O6708C43O6740C59O6746C64O6740C65O6813C71O6855C87O6861C92O6855C95O6964C102O6994C107O7005C111O7021C117O7071C133O7077C138O7071C139O7165C146O7192C151O7203C155O7219C159O7239C162O7239C168O7271C184O7277C189O7271C190O7368C197O7398C202O7409C206O7443C210O7466C212O7482C219O7499C223O7530C228O7558C244O7564C249O7558C251O7632,,
code-creation,JS,10,17471585,0xbdcae7917e,764,formatWithOptionsInternal node:internal/util/inspect:2179:35,0x3fcdef8efc0,~
code-source-info,0xbdcae7917e
code-creation,JS,10,17471978,0xbdcae79886,269,value node:internal/console/constructor:276:20,0x3fcdefab460,~
code-source-info,0xbdcae79886,46,8352,9834,C0O8410C5O8452C7O8457C9O8456C13O8499C15O8516C17O8512C21O8550C23O8567C29O8582C34O8619C38O8645C44O8672C49O8718C55O8725C60O8743C68O8747C75O8799C91O8857C99O8808C106O8893C108O8914C113O8940C123O8965C128O9007C133O9007C138O9021C145O9346C153O9346C160O9369C165O9394C176O9394C182O9433C187O9433C206O9633C216O9637C222O9673C224O9673C238O9781C239O9788C250O9788C268O9833,,
code-creation,JS,10,17472174,0xbdcae79b46,127,listenerCount node:events:852:23,0x3fcdef92190,~
code-source-info,0xbdcae79b46,23,25252,25965,C0O25294C5O25308C7O25360C9O25366C13O25381C17O25428C22O25461C24O25477C29O25519C33O25504C43O25536C44O25555C46O25564C47O25577C51O25616C56O25664C58O25691C60O25709C65O25719C67O25719C72O25742C74O25756C80O25760C87O25786C91O25790C98O25799C103O25828C108O25725C113O25678C117O25875C119O25891C120O25928C124O25935C125O25953C126O25962,,
code-creation,JS,10,17472310,0xbdcae79cee,39,once node:events:651:44,0x3fcdef91ed0,~
code-source-info,0xbdcae79cee,23,19590,19708,C0O19612C3O19612C7O19647C24O19656C30O19647C36O19693C38O19705,,
code-creation,JS,10,17472378,0xbdcae79dfe,15,checkListener node:events:274:23,0x3fcdef90c20,~
code-source-info,0xbdcae79dfe,23,8320,8378,C0O8336C8O8336C14O8377,,
code-creation,JS,10,17472446,0xbdcae79f36,30, node:internal/validators:453:42,0x3fcdef859a0,~
code-source-info,0xbdcae79f36,15,13318,13437,C0O13340C6O13378C22O13384C27O13378C29O13436,,
code-creation,JS,10,17472538,0xbdcae7a106,60,_onceWrap node:events:637:19,0x3fcdef91e80,~
code-source-info,0xbdcae7a106,23,19149,19378,C0O19193C6O19217C12O19228C18O19236C24O19242C31O19273C34O19285C39O19285C45O19301C47O19318C51O19333C53O19346C57O19360C59O19375,,
code-creation,JS,10,17472738,0xbdcae7a5c6,329,Readable.on node:internal/streams/readable:1125:33,0x2bb6ecb6a78,~
code-source-info,0xbdcae7a5c
code-creation,JS,10,17472916,0xbdcae7a886,20,addListener node:events:609:58,0x3fcdef91cd0,~
code-source-info,0xbdcae7a886,23,18372,18446,C0O18394C14O18401C19O18443,,
code-creation,JS,10,17473099,0xbdcae7ab66,371,_addListener node:events:546:22,0x3fcdef917d8,~
code-source-info,0xbdcae7ab
code-creation,JS,10,17473278,0xbdcae7ae66,42,Writable.write node:internal/streams/writable:496:36,0x23f23c7d80,~
code-source-info,0xbdcae7ae66,141,15754,15944,C0O15781C11O15844C14O15864C17O15891C32O15898C41O15941,,
code-creation,JS,10,17473437,0xbdcae7b07e,411,_write node:internal/streams/writable:445:16,0x23f23c72c0,~
code-source-info,0xbdcae7b07e
code-creation,JS,10,17473692,0xbdcae7b50e,461,writeOrBuffer node:internal/streams/writable:540:23,0x23f23c7310,~
code-source-info,0xbdcae7b50e
code-creation,JS,10,17473897,0xbdcae7b8de,61,set node:internal/streams/writable:254:8,0x23f23c79f0,~
code-source-info,0xbdcae7b8de,141,8462,8632,C0O8479C4O8501C6O8506C11O8521C15O8539C17O8544C26O8555C31O8552C37O8590C39O8595C48O8607C50O8606C55O8603C60O8631,,
code-creation,JS,10,17473970,0xbdcae7ba16,26,Socket._write node:net:963:35,0x2bb6ec92a48,~
code-source-info,0xbdcae7ba16,127,25987,26062,C0O26018C19O26018C25O26061,,
code-creation,JS,10,17474085,0xbdcae7bcf6,217,Socket._writeGeneric node:net:921:42,0x2bb6ec92900,~
code-source-info,0xbdcae7bcf6,127,24904,25842,C0O24904C21O25110C37O25129C41O25147C45O25160C49O25182C53O25204C66O25204C72O25437C83O25437C89O25466C90O25473C91O25482C92O25500C96O25511C98O25533C102O25554C108O25570C115O25577C118O25573C124O25570C128O25604C129O25617C130O25633C135O25633C139O25657C141O25665C145O25682C161O25688C169O25732C188O25738C194O25789C200O25801C204O25806C207O25833C211O25827C216O25841,,
code-creation,JS,10,17474184,0xbdcae7bf06,8,get node:net:2341:6,0x2bb6ec932b0,~
code-source-info,0xbdcae7bf06,127,67501,67529,C0O67506C2O67518C4O67517C7O67527,,
code-creation,JS,10,17474257,0xbdcae7c03e,46,_unrefTimer node:net:505:52,0x1760ce83618,~
code-source-info,0xbdcae7c03e,127,14386,14501,C0O14407C5O14415C9O14447C11O14453C13O14452C18O14471C20O14473C22O14472C26O14483C31O14483C35O14431C40O14394C45O14500,,
code-creation,JS,10,17474338,0xbdcae7c176,55,writeGeneric node:internal/stream_base_commons:147:22,0xc2df92fc80,~
code-source-info,0xbdcae7c176,145,3750,3940,C0O3794C5O3815C7O3814C11O3794C17O3845C29O3845C35O3887C47O3887C52O3926C54O3937,,
code-creation,JS,10,17474411,0xbdcae7c2c6,47,createWriteWrap node:internal/stream_base_commons:109:25,0xc2df92fbe0,~
code-source-info,0xbdcae7c2c6,145,2834,3059,C0O2870C5O2870C11O2892C13O2903C17O2916C19O2931C23O2953C24O2963C28O2975C29O2985C33O2993C34O3004C38O3015C40O3028C44O3045C46O3056,,
code-creation,JS,10,17474557,0xbdcae7c636,215,handleWriteReq node:internal/stream_base_commons:45:24,0xc2df92fb40,~
code-source-info,0xbdcae7c636,145,1221,2086,C0O1256C5O1277C80O1350C85O1350C92O1381C99O1401C101O1400C106O1431C108O1442C112O1457C114O1468C115O1537C120O1537C126O1566C127O1625C132O1625C138O1652C139O1693C144O1693C150O1721C151O1823C156O1823C162O1850C163O1894C168O1901C173O1901C180O1949C185O1949C192O1982C199O2002C201O2001C206O2032C208O2043C212O2060C214O2071,,
code-creation,JS,10,17474824,0xbdcae7c87e,94,afterWriteDispatched node:internal/stream_base_commons:155:30,0xc2df92fcd0,~
code-source-info,0xbdcae7c87e,145,3973,4261,C0O3993C2O4005C7O4021C9O4020C12O4003C16O4040C18O4054C23O4070C25O4069C30O4050C34O4096C35O4104C40O4116C42O4130C48O4163C58O4126C64O4123C68O4171C69O4186C75O4206C83O4242C88O4242C93O4260,,
code-creation,JS,10,17475125,0xbdcae7cb66,769,onwrite node:internal/streams/writable:607:17,0x23f23c7400,~
code-source-info,0xbdcae7cb
code-creation,JS,10,17475469,0xbdcae7d13e,118,Readable.removeListener node:internal/streams/readable:1157:45,0x2bb6ecb6b00,~
code-source-info,0xbdcae7d13e,137,37260,37978,C0O37293C5O37326C10O37333C15O37343C20O37358C34O37358C40O37435C42O37442C47O37799C50O37807C58O37807C66O37858C68O37865C73O37884C81O37884C88O37906C93O37920C95O37926C104O37938C106O37937C111O37934C115O37964C117O37975,,
code-creation,JS,10,17475680,0xbdcae7d316,322,removeListener node:events:680:28,0x3fcdef91f70,~
code-source-info,0xbdcae7d
code-creation,JS,10,17475885,0xbdcae7d62e,77,mark node:internal/perf/performance:118:7,0x13a35fab7e8,~
code-source-info,0xbdcae7d62e,121,3098,3321,C0O3098C11O3115C18O3136C25O3164C34O3136C39O3218C45O3225C50O3241C60O3247C65O3241C66O3289C71O3296C76O3316,,
code-creation,JS,10,17475974,0xbdcae7d776,40,mark node:internal/perf/usertiming:157:14,0x13a35fa6d98,~
code-source-info,0xbdcae7d776,119,3904,4037,C0O3938C13O3938C19O3977C24O3977C28O3995C33O3995C37O4022C39O4034,,
code-creation,JS,10,17476114,0xbdcae7d90e,276,PerformanceMark node:internal/perf/usertiming:70:14,0x13a35fa6ed8,~
code-source-info,0xbdcae7d90e,119,1719,2462,C0O1719C18O1768C24O1775C29O1791C39O1797C44O1791C45O1839C49O1862C54O1895C59O1895C66O1913C79O1919C84O1913C85O1965C90O1995C98O1995C103O2061C110O2068C123O2083C126O2083C130O2095C138O2095C143O2140C144O2154C149O2166C156O2172C161O2166C162O2227C167O2239C172O2239C178O2281C185O2288C193O2303C198O2336C201O2336C209O2382C211O2388C219O2382C246O2382C258O2434C263O2439C268O2448C275O2461,,
code-creation,JS,10,17476290,0xbdcae7dbe6,177, node:internal/validators:175:40,0x3fcdef85540,~
code-source-info,0xbdcae7dbe6,15,4898,5355,C19O4942C25O4978C41O4984C46O4978C47O5038C54O5064C66O5096C83O5144C86O5144C92O5172C110O5243C136O5275C151O5319C169O5178C174O5172C176O5354,,
code-creation,JS,10,17476455,0xbdcae7ded6,241,run file:///C:/coding/soodocode/build/statements.js:208:12,0x2c01bf4dad8,~
code-source-info,0xbdcae7ded6,113,10317,10893,C0O10365C5O10390C10O10365C16O10440C38O10423C66O10423C69O10481C74O10481C81O10524C92O10541C103O10524C107O10599C112O10599C117O10616C122O10627C129O10667C145O10747C153O10747C165O10810C171O10637C175O10412C240O10892,,
code-creation,JS,10,17476573,0xbdcae7e146,36,getCurrentScope file:///C:/coding/soodocode/build/runtime.js:606:28,0xc2df92e5c8,~
code-source-info,0xbdcae7e146,111,38676,38759,C0O38709C5O38716C13O38716C22O38726C31O38726C35O38745,,
code-creation,JS,10,17476721,0xbdcae7e3ae,293,run file:///C:/coding/soodocode/build/statements.js:246:12,0x2c01bf4d3a8,~
code-source-info,0xbdcae7e3ae,113,12210,12710,C0O12210C8O12246C13O12263C18O12246C25O12286C34O12308C49O12286C53O12372C59O12380C64O12399C69O12380C75O12372C92O12357C129O12363C225O12426C230O12426C235O12443C240O12459C252O12485C258O12648C287O12465C292O12709,,
code-creation,JS,10,17476866,0xbdcae7e7a6,127,evaluateToken file:///C:/coding/soodocode/build/runtime.js:555:33,0xc2df92e3c0,~
code-source-info,0xbdcae7e7a6,111,36454,36969,C3O36524C8O36534C13O36548C18O36557C29O36593C39O36553C51O36548C56O36672C68O36741C76O36763C80O36749C85O36803C91O36808C97O36810C102O36816C106O36816C113O36803C120O36927C122O36927C126O36968,,
code-creation,JS,10,17477038,0xbdcae7eca6,93,getInitValue file:///C:/coding/soodocode/build/runtime-types.js:71:17,0xc2df932e60,~
code-source-info,0xbdcae7eca6,112,2534,2831,C0O2534C12O2580C15O2588C20O2613C25O2588C30O2580C32O2628C39O2648C41O2637C46O2679C55O2679C59O2737C63O2750C73O2770C86O2750C92O2825,,
new,MemoryChunk,0x1f952240000,806912
code-creation,JS,13,17479132,0x7ff64c49c900,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c49c900,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
tick,0x7ff6cbdc21f7,17482865,0,0x0,0,0x7ff6cc2220d0,0x7ff64c49c997,0x7ff6cc351d3c,0xbdcae7ecfc,0xbdcae7df6f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x0,17497700,0,0x0,5
tick,0x7ff6cc0ffc9d,17513820,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8995,17529766,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb389,17545706,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec5e68,17561723,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c3f3,17577771,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c497889,17593777,0,0x0,0,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec38e7,17609749,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe95122,17625725,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdac825,17641723,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c290cd4,17657735,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc29beaf,17673713,0,0x0,0,0x7ff6cc2d96f9,0x7ff64c499d09,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0d886c,17689786,0,0x0,1
tick,0x7ff66c2dbf85,17705791,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x15a2b000000,262144
new,MemoryChunk,0x1e022100000,262144
new,MemoryChunk,0x5616d80000,262144
new,MemoryChunk,0x300394c0000,262144
new,MemoryChunk,0x340df7c0000,262144
new,MemoryChunk,0x2de9480000,262144
new,MemoryChunk,0x914a180000,262144
new,MemoryChunk,0x388512c0000,262144
new,MemoryChunk,0x189a2900000,262144
new,MemoryChunk,0x15fb580000,262144
new,MemoryChunk,0x2202fd00000,262144
new,MemoryChunk,0x37f7f080000,262144
tick,0x7ff64c496094,17721707,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebd1ba,17737714,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2da5c280000,262144
new,MemoryChunk,0x1f0c3a00000,262144
new,MemoryChunk,0x23e7d140000,262144
new,MemoryChunk,0x16c83e40000,262144
new,MemoryChunk,0x15c7e980000,262144
new,MemoryChunk,0x2fa426c0000,262144
new,MemoryChunk,0x2c08680000,262144
new,MemoryChunk,0x261b12c0000,262144
new,MemoryChunk,0x26e3e880000,262144
new,MemoryChunk,0x30859e80000,262144
tick,0x7ff6cc38fcb5,17753780,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2fc89bc0000,262144
new,MemoryChunk,0xac50c40000,262144
new,MemoryChunk,0x32458100000,262144
new,MemoryChunk,0xbc1c40000,262144
new,MemoryChunk,0x19460800000,262144
new,MemoryChunk,0x10698a00000,262144
new,MemoryChunk,0x1250d5c0000,262144
new,MemoryChunk,0x3a707fc0000,262144
new,MemoryChunk,0x35410200000,262144
new,MemoryChunk,0x34c58f00000,262144
tick,0x7ff6cc10545a,17769728,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec3901,17785737,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3117c2c0000,262144
new,MemoryChunk,0x13c7bec0000,262144
new,MemoryChunk,0x23a6f980000,262144
new,MemoryChunk,0x1239d940000,262144
new,MemoryChunk,0x23585c0000,262144
new,MemoryChunk,0x1eaa4ec0000,262144
new,MemoryChunk,0x21bffb00000,262144
new,MemoryChunk,0xbf4f340000,262144
new,MemoryChunk,0x23cfce80000,262144
tick,0x7ff64c4965d9,17801772,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1d879d40000,262144
new,MemoryChunk,0x2ff09180000,262144
new,MemoryChunk,0x34e67c0000,262144
new,MemoryChunk,0x2167ad40000,262144
new,MemoryChunk,0x15599ac0000,262144
new,MemoryChunk,0x23b6f200000,262144
new,MemoryChunk,0x336fcfc0000,262144
new,MemoryChunk,0x1a31ac40000,262144
new,MemoryChunk,0x3ba37800000,262144
new,MemoryChunk,0x32c8fbc0000,262144
new,MemoryChunk,0x3c6abac0000,262144
delete,MemoryChunk,0x136348c0000
delete,MemoryChunk,0x27e315c0000
delete,MemoryChunk,0x119d9cc0000
delete,MemoryChunk,0x35fe7f80000
delete,MemoryChunk,0x1c92ed80000
delete,MemoryChunk,0x17cdb1c0000
delete,MemoryChunk,0x2ce41ac0000
delete,MemoryChunk,0x169e040000
delete,MemoryChunk,0x3b8a2540000
delete,MemoryChunk,0x2192d800000
delete,MemoryChunk,0x4dde300000
delete,MemoryChunk,0x360d3680000
delete,MemoryChunk,0x2209e380000
delete,MemoryChunk,0x1f866840000
delete,MemoryChunk,0x36eaf40000
delete,MemoryChunk,0x540b00000
delete,MemoryChunk,0x3a8c8700000
delete,MemoryChunk,0x2211e080000
delete,MemoryChunk,0x356a8a40000
delete,MemoryChunk,0x84e66c0000
delete,MemoryChunk,0x15150e80000
delete,MemoryChunk,0x2a353400000
delete,MemoryChunk,0x1ff11140000
delete,MemoryChunk,0x15a2b000000
delete,MemoryChunk,0x1e022100000
delete,MemoryChunk,0x914a180000
delete,MemoryChunk,0x5616d80000
delete,MemoryChunk,0x300394c0000
delete,MemoryChunk,0x2de9480000
delete,MemoryChunk,0x388512c0000
delete,MemoryChunk,0x2202fd00000
delete,MemoryChunk,0x189a2900000
delete,MemoryChunk,0x340df7c0000
delete,MemoryChunk,0x2da5c280000
delete,MemoryChunk,0x16c83e40000
delete,MemoryChunk,0x23e7d140000
delete,MemoryChunk,0x15c7e980000
delete,MemoryChunk,0x261b12c0000
delete,MemoryChunk,0x1f0c3a00000
delete,MemoryChunk,0x2fc89bc0000
delete,MemoryChunk,0x19460800000
delete,MemoryChunk,0x10698a00000
delete,MemoryChunk,0x37f7f080000
delete,MemoryChunk,0xac50c40000
delete,MemoryChunk,0xbc1c40000
delete,MemoryChunk,0x15fb580000
delete,MemoryChunk,0x2fa426c0000
delete,MemoryChunk,0x1250d5c0000
delete,MemoryChunk,0x2c08680000
delete,MemoryChunk,0x32458100000
delete,MemoryChunk,0x26e3e880000
delete,MemoryChunk,0x13c7bec0000
delete,MemoryChunk,0x1239d940000
delete,MemoryChunk,0x30859e80000
delete,MemoryChunk,0x3117c2c0000
delete,MemoryChunk,0x23a6f980000
delete,MemoryChunk,0x3a707fc0000
delete,MemoryChunk,0x34c58f00000
delete,MemoryChunk,0x20dc16c0000
delete,MemoryChunk,0x23cfce80000
delete,MemoryChunk,0x35410200000
delete,MemoryChunk,0x23585c0000
delete,MemoryChunk,0x1d879d40000
delete,MemoryChunk,0x23d58980000
delete,MemoryChunk,0x2167ad40000
delete,MemoryChunk,0x336fcfc0000
delete,MemoryChunk,0x3ba37800000
delete,MemoryChunk,0xbf4f340000
delete,MemoryChunk,0x34e67c0000
delete,MemoryChunk,0x146310c0000
delete,MemoryChunk,0x23b6f200000
delete,MemoryChunk,0x3c6abac0000
delete,MemoryChunk,0x32c8fbc0000
delete,MemoryChunk,0x1eaa4ec0000
delete,MemoryChunk,0x2ff09180000
delete,MemoryChunk,0x15599ac0000
delete,MemoryChunk,0x1a31ac40000
tick,0x7ff64c4a0a04,17817751,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4950c8,17833715,0,0x0,0,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdac86f,17849712,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06dcd9,17865768,0,0x0,1
tick,0x7ff6cbba9245,17881748,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c28822b,17897759,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0c51d3,17913743,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb2f3,17929786,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8995,17945738,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c495fd1,17961741,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6baac,17977830,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x26de9f40000,262144
new,MemoryChunk,0x28bb9540000,262144
new,MemoryChunk,0x3d2f7f40000,262144
new,MemoryChunk,0x2afbecc0000,262144
new,MemoryChunk,0x184f9d80000,262144
new,MemoryChunk,0x16bb9480000,262144
new,MemoryChunk,0x35f55840000,262144
tick,0x7ff6cc2d94ea,17993748,0,0x0,0,0x7ff64c499d09,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf177b9,18009774,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1be15300000,262144
new,MemoryChunk,0x16dfd080000,262144
new,MemoryChunk,0x30a02cc0000,262144
new,MemoryChunk,0xea3b640000,262144
new,MemoryChunk,0x1377ff80000,262144
new,MemoryChunk,0x1242d740000,262144
new,MemoryChunk,0xef25640000,262144
new,MemoryChunk,0x379d2a00000,262144
new,MemoryChunk,0x2c72e900000,262144
new,MemoryChunk,0xa8c7c0000,262144
tick,0x7ff66c2bc7f4,18025750,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3a9f12c0000,262144
new,MemoryChunk,0x38cae880000,262144
new,MemoryChunk,0xfe3fac0000,262144
new,MemoryChunk,0xfa6abc0000,262144
new,MemoryChunk,0x3d633940000,262144
new,MemoryChunk,0x297116c0000,262144
tick,0x7ff6cc06a9d8,18040737,0,0x0,1
new,MemoryChunk,0xa777fc0000,262144
new,MemoryChunk,0x3095d9c0000,262144
new,MemoryChunk,0x2ec1680000,262144
tick,0x7ff66c2dc09f,18056783,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x12cb9f40000,262144
new,MemoryChunk,0xd79a840000,262144
new,MemoryChunk,0x2bb8640000,262144
new,MemoryChunk,0x2fb96600000,262144
new,MemoryChunk,0x13c20900000,262144
new,MemoryChunk,0x395f20c0000,262144
new,MemoryChunk,0x3af89640000,262144
new,MemoryChunk,0x263b2d40000,262144
new,MemoryChunk,0x1b8a75c0000,262144
new,MemoryChunk,0x3488e840000,262144
new,MemoryChunk,0x332db600000,262144
tick,0x7ff6cbebd194,18072750,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x6b55ec0000,262144
new,MemoryChunk,0x10399200000,262144
new,MemoryChunk,0x1f337140000,262144
new,MemoryChunk,0x1d48aac0000,262144
new,MemoryChunk,0x2fe9bb00000,262144
new,MemoryChunk,0x685a4c0000,262144
tick,0x7ff6cc116bef,18088779,0,0x0,1
new,MemoryChunk,0x17c45c00000,262144
new,MemoryChunk,0x37ecb900000,262144
tick,0x7ff66c288231,18104778,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1d948c0000,262144
new,MemoryChunk,0x3b79a980000,262144
new,MemoryChunk,0x25375300000,262144
new,MemoryChunk,0x3f081d80000,262144
new,MemoryChunk,0x31e2e640000,262144
new,MemoryChunk,0x18b9f880000,262144
new,MemoryChunk,0x177606c0000,262144
new,MemoryChunk,0x34a3b700000,262144
new,MemoryChunk,0x1ea63d00000,262144
new,MemoryChunk,0x2924100000,262144
tick,0x7ff64c4a154b,18120770,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x26e5c440000,262144
new,MemoryChunk,0x23529780000,262144
new,MemoryChunk,0xe6c9d40000,262144
new,MemoryChunk,0x38fb4a80000,262144
new,MemoryChunk,0xc98cd40000,262144
new,MemoryChunk,0x18123900000,262144
new,MemoryChunk,0x24267600000,262144
new,MemoryChunk,0xb7f2280000,262144
tick,0x7ff6cc06c1d1,18136841,0,0x0,1
new,MemoryChunk,0x4ebe100000,262144
new,MemoryChunk,0x13bb0fc0000,262144
new,MemoryChunk,0x18a55500000,262144
tick,0x7ff64c49bbc4,18152764,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3009ef00000,262144
new,MemoryChunk,0x2aa8e200000,262144
new,MemoryChunk,0x24ea82c0000,262144
new,MemoryChunk,0x9fba240000,262144
new,MemoryChunk,0x3f3c7a80000,262144
new,MemoryChunk,0x163e5e80000,262144
new,MemoryChunk,0x1c111140000,262144
new,MemoryChunk,0x10d22cc0000,262144
delete,MemoryChunk,0x21bffb00000
delete,MemoryChunk,0x26de9f40000
delete,MemoryChunk,0x28bb9540000
delete,MemoryChunk,0x3d2f7f40000
delete,MemoryChunk,0xea3b640000
delete,MemoryChunk,0x1242d740000
delete,MemoryChunk,0x2c72e900000
delete,MemoryChunk,0x2afbecc0000
delete,MemoryChunk,0xef25640000
delete,MemoryChunk,0x1be15300000
delete,MemoryChunk,0x1377ff80000
delete,MemoryChunk,0x184f9d80000
delete,MemoryChunk,0x3d633940000
delete,MemoryChunk,0x16bb9480000
delete,MemoryChunk,0x38cae880000
delete,MemoryChunk,0x30a02cc0000
delete,MemoryChunk,0xa8c7c0000
delete,MemoryChunk,0x3a9f12c0000
delete,MemoryChunk,0x3095d9c0000
delete,MemoryChunk,0xfe3fac0000
delete,MemoryChunk,0x297116c0000
delete,MemoryChunk,0xfa6abc0000
delete,MemoryChunk,0x2fb96600000
delete,MemoryChunk,0x395f20c0000
delete,MemoryChunk,0x12cb9f40000
delete,MemoryChunk,0xd79a840000
delete,MemoryChunk,0x13c20900000
delete,MemoryChunk,0x1f337140000
delete,MemoryChunk,0x2fe9bb00000
delete,MemoryChunk,0x37ecb900000
delete,MemoryChunk,0x3af89640000
delete,MemoryChunk,0x10399200000
delete,MemoryChunk,0x17c45c00000
delete,MemoryChunk,0x6b55ec0000
delete,MemoryChunk,0x1d948c0000
delete,MemoryChunk,0x18b9f880000
delete,MemoryChunk,0x2bb8640000
delete,MemoryChunk,0x2ec1680000
delete,MemoryChunk,0x3b79a980000
delete,MemoryChunk,0x332db600000
delete,MemoryChunk,0x25375300000
delete,MemoryChunk,0xa777fc0000
delete,MemoryChunk,0x263b2d40000
delete,MemoryChunk,0x3f081d80000
delete,MemoryChunk,0x31e2e640000
delete,MemoryChunk,0x1ea63d00000
delete,MemoryChunk,0x23529780000
delete,MemoryChunk,0xc98cd40000
delete,MemoryChunk,0x34a3b700000
delete,MemoryChunk,0x38fb4a80000
delete,MemoryChunk,0x685a4c0000
delete,MemoryChunk,0x26e5c440000
delete,MemoryChunk,0xb7f2280000
delete,MemoryChunk,0xe6c9d40000
delete,MemoryChunk,0x18123900000
delete,MemoryChunk,0x3488e840000
delete,MemoryChunk,0x4ebe100000
delete,MemoryChunk,0x163e5e80000
delete,MemoryChunk,0x1c111140000
delete,MemoryChunk,0x13bb0fc0000
delete,MemoryChunk,0x24ea82c0000
delete,MemoryChunk,0x24267600000
delete,MemoryChunk,0x177606c0000
delete,MemoryChunk,0x9fba240000
delete,MemoryChunk,0x2924100000
delete,MemoryChunk,0x2aa8e200000
delete,MemoryChunk,0x10d22cc0000
delete,MemoryChunk,0x1b8a75c0000
delete,MemoryChunk,0x3009ef00000
delete,MemoryChunk,0x1d48aac0000
delete,MemoryChunk,0x3f3c7a80000
tick,0x7ff64c49a251,18168760,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49ffd9,18184798,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe937d2,18200150,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc072194,18216129,0,0x0,1
tick,0x7ff66c32094a,18232135,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc09f,18248150,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,18264242,0,0x0,1
tick,0x7ff66c2dc327,18280174,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf13546,18296107,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863b82c7a,18312184,0,0x0,1
tick,0x7ff6cbebd183,18328118,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf85,18344148,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc3f3,18360102,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x7324040000,262144
new,MemoryChunk,0x399e3980000,262144
new,MemoryChunk,0xa199180000,262144
new,MemoryChunk,0x1a100680000,262144
new,MemoryChunk,0x26a32f00000,262144
new,MemoryChunk,0x244d6500000,262144
new,MemoryChunk,0x1c7c2c80000,262144
new,MemoryChunk,0x1e9c5f00000,262144
new,MemoryChunk,0x1ffa3800000,262144
new,MemoryChunk,0x1f8f9d00000,262144
tick,0x7ff66c320e19,18376159,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x202f5e40000,262144
new,MemoryChunk,0x278697c0000,262144
new,MemoryChunk,0x229862c0000,262144
new,MemoryChunk,0x258f1300000,262144
new,MemoryChunk,0x1257df00000,262144
new,MemoryChunk,0x16814f00000,262144
new,MemoryChunk,0x1ff36e40000,262144
new,MemoryChunk,0x198ba800000,262144
new,MemoryChunk,0xa25000000,262144
tick,0x7ff6cc0c5216,18392126,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1c03a540000,262144
new,MemoryChunk,0x69f48c0000,262144
new,MemoryChunk,0x11abf300000,262144
new,MemoryChunk,0x3e7f3ac0000,262144
tick,0x7ff6cc06a9a3,18408098,0,0x0,1
new,MemoryChunk,0x2c216600000,262144
new,MemoryChunk,0x1543b80000,262144
new,MemoryChunk,0x10590480000,262144
new,MemoryChunk,0x233f4c0000,262144
new,MemoryChunk,0x11f5d200000,262144
tick,0x7ff66c2dc0e0,18424156,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x28a13400000,262144
new,MemoryChunk,0x16fa040000,262144
new,MemoryChunk,0x11d29b80000,262144
new,MemoryChunk,0x1d04e40000,262144
new,MemoryChunk,0xcd633c0000,262144
new,MemoryChunk,0x27a01740000,262144
new,MemoryChunk,0x34bedd00000,262144
new,MemoryChunk,0x1b15d280000,262144
new,MemoryChunk,0x1b0c8040000,262144
new,MemoryChunk,0x38ce0280000,262144
new,MemoryChunk,0x921a300000,262144
new,MemoryChunk,0x3ab19e40000,262144
tick,0x7ff6cbf6d2e2,18440097,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x0,18456109,0,0x0,5
new,MemoryChunk,0x1b737940000,262144
new,MemoryChunk,0x38b0afc0000,262144
new,MemoryChunk,0x39054640000,262144
new,MemoryChunk,0x22198dc0000,262144
new,MemoryChunk,0x247bfc40000,262144
new,MemoryChunk,0x10d2a180000,262144
new,MemoryChunk,0x109d8780000,262144
tick,0x7ff64c49fe53,18472155,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1c0bef40000,262144
new,MemoryChunk,0x1aceb4c0000,262144
new,MemoryChunk,0x2cf5c40000,262144
new,MemoryChunk,0x2eaf9380000,262144
new,MemoryChunk,0x8b77200000,262144
new,MemoryChunk,0x20dab180000,262144
new,MemoryChunk,0x38b92900000,262144
new,MemoryChunk,0x33f5e1c0000,262144
new,MemoryChunk,0x1cc90700000,262144
new,MemoryChunk,0x33a536c0000,262144
tick,0x7ff6cc0eb10a,18488145,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8acd,18504146,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x363d85c0000,262144
new,MemoryChunk,0x3eab7fc0000,262144
new,MemoryChunk,0x3aa89ac0000,262144
new,MemoryChunk,0x23f8d600000,262144
new,MemoryChunk,0x173b8f00000,262144
new,MemoryChunk,0x1d5cf740000,262144
new,MemoryChunk,0x16c68700000,262144
new,MemoryChunk,0x2ae84800000,262144
new,MemoryChunk,0x3a6b8780000,262144
new,MemoryChunk,0x3289a740000,262144
new,MemoryChunk,0x3deb4c0000,262144
tick,0x7ff66c2dbf7a,18520124,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x27b350c0000,262144
new,MemoryChunk,0x32366f00000,262144
new,MemoryChunk,0x1fbc8e40000,262144
new,MemoryChunk,0x1d097f80000,262144
new,MemoryChunk,0x39f6700000,262144
new,MemoryChunk,0x8f05880000,262144
new,MemoryChunk,0x54ddb80000,262144
new,MemoryChunk,0x16484280000,262144
new,MemoryChunk,0x1800a440000,262144
tick,0x7ff6cc097a09,18536130,0,0x0,1
delete,MemoryChunk,0x35f55840000
delete,MemoryChunk,0x379d2a00000
delete,MemoryChunk,0x1a100680000
delete,MemoryChunk,0x18a55500000
delete,MemoryChunk,0xa199180000
delete,MemoryChunk,0x7324040000
delete,MemoryChunk,0x26a32f00000
delete,MemoryChunk,0x1c7c2c80000
delete,MemoryChunk,0x399e3980000
delete,MemoryChunk,0x258f1300000
delete,MemoryChunk,0x278697c0000
delete,MemoryChunk,0x16814f00000
delete,MemoryChunk,0x202f5e40000
delete,MemoryChunk,0x1257df00000
delete,MemoryChunk,0x1e9c5f00000
delete,MemoryChunk,0x244d6500000
delete,MemoryChunk,0x229862c0000
delete,MemoryChunk,0x1c03a540000
delete,MemoryChunk,0x11f5d200000
delete,MemoryChunk,0x2c216600000
delete,MemoryChunk,0x69f48c0000
delete,MemoryChunk,0x1543b80000
delete,MemoryChunk,0x11abf300000
delete,MemoryChunk,0x10590480000
delete,MemoryChunk,0x28a13400000
delete,MemoryChunk,0x3e7f3ac0000
delete,MemoryChunk,0x233f4c0000
delete,MemoryChunk,0x1ffa3800000
delete,MemoryChunk,0x16fa040000
delete,MemoryChunk,0x11d29b80000
delete,MemoryChunk,0x27a01740000
delete,MemoryChunk,0x34bedd00000
delete,MemoryChunk,0xcd633c0000
delete,MemoryChunk,0x1ff36e40000
delete,MemoryChunk,0x1f8f9d00000
delete,MemoryChunk,0x1d04e40000
delete,MemoryChunk,0x1b737940000
delete,MemoryChunk,0x22198dc0000
delete,MemoryChunk,0x3ab19e40000
delete,MemoryChunk,0x38ce0280000
delete,MemoryChunk,0x39054640000
delete,MemoryChunk,0x247bfc40000
delete,MemoryChunk,0x109d8780000
delete,MemoryChunk,0x38b0afc0000
delete,MemoryChunk,0x1c0bef40000
delete,MemoryChunk,0x1aceb4c0000
delete,MemoryChunk,0x8b77200000
delete,MemoryChunk,0x33f5e1c0000
delete,MemoryChunk,0x2cf5c40000
delete,MemoryChunk,0x20dab180000
delete,MemoryChunk,0x1cc90700000
delete,MemoryChunk,0x2eaf9380000
delete,MemoryChunk,0x38b92900000
delete,MemoryChunk,0x363d85c0000
delete,MemoryChunk,0x3eab7fc0000
delete,MemoryChunk,0x1b15d280000
delete,MemoryChunk,0x173b8f00000
delete,MemoryChunk,0x3aa89ac0000
delete,MemoryChunk,0x16c68700000
delete,MemoryChunk,0x23f8d600000
delete,MemoryChunk,0x2ae84800000
delete,MemoryChunk,0x3deb4c0000
delete,MemoryChunk,0x3289a740000
delete,MemoryChunk,0x39f6700000
delete,MemoryChunk,0x1800a440000
delete,MemoryChunk,0x1d097f80000
delete,MemoryChunk,0x921a300000
delete,MemoryChunk,0x10d2a180000
delete,MemoryChunk,0x198ba800000
delete,MemoryChunk,0xa25000000
delete,MemoryChunk,0x1b0c8040000
delete,MemoryChunk,0x1fbc8e40000
delete,MemoryChunk,0x27b350c0000
delete,MemoryChunk,0x33a536c0000
delete,MemoryChunk,0x8f05880000
delete,MemoryChunk,0x16484280000
tick,0x7ff6cbeb068a,18552131,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf85,18568147,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf6d33f,18584185,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbee2,18600213,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863b9b8a4,18616163,0,0x0,1
tick,0x7ff6cbdaeeba,18632142,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc14fe33,18648173,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,18664188,0,0x0,1
tick,0x7ff66c2dc389,18680167,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe9a4ff,18696149,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe8cc03,18712197,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d2b6,18728163,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3d946e80000,262144
new,MemoryChunk,0x3f039840000,262144
new,MemoryChunk,0x20cc7ac0000,262144
new,MemoryChunk,0x3ba80c40000,262144
new,MemoryChunk,0x3eadf340000,262144
new,MemoryChunk,0x1297aec0000,262144
new,MemoryChunk,0x1c0e1c80000,262144
new,MemoryChunk,0x12a94280000,262144
new,MemoryChunk,0x36664900000,262144
tick,0x7ff64c4a0bf7,18744174,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1ce1b00000,262144
new,MemoryChunk,0x30e64200000,262144
new,MemoryChunk,0x94be040000,262144
new,MemoryChunk,0x2ae9cc00000,262144
new,MemoryChunk,0x3722dd40000,262144
new,MemoryChunk,0x15f18640000,262144
new,MemoryChunk,0xd241340000,262144
new,MemoryChunk,0x23866f80000,262144
new,MemoryChunk,0x9563080000,262144
new,MemoryChunk,0x38641340000,262144
tick,0x7ff6cbeb4e15,18760157,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb02,18776167,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x359db680000,262144
new,MemoryChunk,0x96ef380000,262144
new,MemoryChunk,0x27854780000,262144
new,MemoryChunk,0x9c6d940000,262144
new,MemoryChunk,0x103ed00000,262144
new,MemoryChunk,0x3a3d4dc0000,262144
new,MemoryChunk,0x286c2400000,262144
new,MemoryChunk,0x2d1f3b00000,262144
tick,0x7ff66c241b4c,18792165,0,0x0,0,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x30963b00000,262144
new,MemoryChunk,0x2e126500000,262144
new,MemoryChunk,0xd06740000,262144
new,MemoryChunk,0x8026580000,262144
new,MemoryChunk,0x3c2c3840000,262144
new,MemoryChunk,0x199bae00000,262144
new,MemoryChunk,0x4ee33c0000,262144
new,MemoryChunk,0x93d8380000,262144
new,MemoryChunk,0x3b39dc40000,262144
new,MemoryChunk,0x28b88880000,262144
new,MemoryChunk,0x3e420640000,262144
new,MemoryChunk,0x4bbd200000,262144
tick,0x7ff6cbebced0,18808179,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3177dd,18824247,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xcd39940000,262144
new,MemoryChunk,0x3f350940000,262144
new,MemoryChunk,0x34bfa700000,262144
new,MemoryChunk,0x2037cdc0000,262144
new,MemoryChunk,0x84af880000,262144
new,MemoryChunk,0x1d4742c0000,262144
new,MemoryChunk,0x11b61400000,262144
new,MemoryChunk,0x161bb640000,262144
tick,0x7ff66c2dc327,18840151,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1d3a1100000,262144
new,MemoryChunk,0x2fe3b840000,262144
new,MemoryChunk,0x13b7f300000,262144
new,MemoryChunk,0x36af8000000,262144
new,MemoryChunk,0x25f589c0000,262144
new,MemoryChunk,0x20b12100000,262144
new,MemoryChunk,0x2de0f440000,262144
new,MemoryChunk,0x1321bdc0000,262144
new,MemoryChunk,0x191b5f80000,262144
tick,0x7ff64c49630e,18856153,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fe70,18872222,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x8c0ce00000,262144
new,MemoryChunk,0x1a296740000,262144
new,MemoryChunk,0x3348f140000,262144
new,MemoryChunk,0x342a2000000,262144
new,MemoryChunk,0x3350c380000,262144
new,MemoryChunk,0x2b06680000,262144
new,MemoryChunk,0x2f3b8080000,262144
new,MemoryChunk,0x783e900000,262144
new,MemoryChunk,0x1de91b40000,262144
new,MemoryChunk,0x35276e00000,262144
tick,0x7ff6cbf1c22f,18888162,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3a0a0e00000,262144
new,MemoryChunk,0xd82af00000,262144
new,MemoryChunk,0x1ad98840000,262144
new,MemoryChunk,0x14ccd3c0000,262144
new,MemoryChunk,0xeeb9300000,262144
new,MemoryChunk,0x2582cb80000,262144
tick,0x7ff6cc0d8997,18904208,0,0x0,1
new,MemoryChunk,0x27a38600000,262144
new,MemoryChunk,0x3a7cdf80000,262144
new,MemoryChunk,0x8fee240000,262144
delete,MemoryChunk,0x32366f00000
delete,MemoryChunk,0x54ddb80000
delete,MemoryChunk,0x3f039840000
delete,MemoryChunk,0x3eadf340000
delete,MemoryChunk,0x3d946e80000
delete,MemoryChunk,0x36664900000
delete,MemoryChunk,0x1297aec0000
delete,MemoryChunk,0x3ba80c40000
delete,MemoryChunk,0x1c0e1c80000
delete,MemoryChunk,0x30e64200000
delete,MemoryChunk,0x2ae9cc00000
delete,MemoryChunk,0x20cc7ac0000
delete,MemoryChunk,0x1ce1b00000
delete,MemoryChunk,0x15f18640000
delete,MemoryChunk,0x38641340000
delete,MemoryChunk,0x23866f80000
delete,MemoryChunk,0x94be040000
delete,MemoryChunk,0x3722dd40000
delete,MemoryChunk,0xd241340000
delete,MemoryChunk,0x27854780000
delete,MemoryChunk,0x9563080000
delete,MemoryChunk,0x359db680000
delete,MemoryChunk,0x103ed00000
delete,MemoryChunk,0x2d1f3b00000
delete,MemoryChunk,0x3a3d4dc0000
delete,MemoryChunk,0x286c2400000
delete,MemoryChunk,0x9c6d940000
delete,MemoryChunk,0xd06740000
delete,MemoryChunk,0x199bae00000
delete,MemoryChunk,0x93d8380000
delete,MemoryChunk,0x2e126500000
delete,MemoryChunk,0x4ee33c0000
delete,MemoryChunk,0x3e420640000
delete,MemoryChunk,0x34bfa700000
delete,MemoryChunk,0x3b39dc40000
delete,MemoryChunk,0x28b88880000
delete,MemoryChunk,0xcd39940000
delete,MemoryChunk,0x2037cdc0000
delete,MemoryChunk,0x11b61400000
delete,MemoryChunk,0x30963b00000
delete,MemoryChunk,0x3f350940000
delete,MemoryChunk,0x2de0f440000
delete,MemoryChunk,0x191b5f80000
delete,MemoryChunk,0x13b7f300000
delete,MemoryChunk,0x25f589c0000
delete,MemoryChunk,0x1321bdc0000
delete,MemoryChunk,0x1d3a1100000
delete,MemoryChunk,0x1d4742c0000
delete,MemoryChunk,0x36af8000000
delete,MemoryChunk,0x3a6b8780000
delete,MemoryChunk,0x3348f140000
delete,MemoryChunk,0x3350c380000
delete,MemoryChunk,0x342a2000000
delete,MemoryChunk,0x2f3b8080000
delete,MemoryChunk,0x1de91b40000
delete,MemoryChunk,0x8c0ce00000
delete,MemoryChunk,0x783e900000
delete,MemoryChunk,0x2b06680000
delete,MemoryChunk,0x35014200000
delete,MemoryChunk,0x1ad98840000
delete,MemoryChunk,0x14ccd3c0000
delete,MemoryChunk,0x3a7cdf80000
delete,MemoryChunk,0x8fee240000
delete,MemoryChunk,0x1a296740000
delete,MemoryChunk,0x3a0a0e00000
delete,MemoryChunk,0xeeb9300000
delete,MemoryChunk,0x84af880000
delete,MemoryChunk,0x3c2c3840000
delete,MemoryChunk,0x2582cb80000
delete,MemoryChunk,0x27a38600000
tick,0x7ff6cc2d8e8a,18920212,0,0x0,0,0x7ff64c499d09,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0726e3,18936185,0,0x0,1
tick,0x7ff6cbf20c72,18952171,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6bbca,18968185,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c495c32,18983705,0,0x0,0,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0e6,18999147,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec28bc,19015126,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06d82e,19031141,0,0x0,1
tick,0x7ff66c3282d9,19047168,0,0x0,0,0x7ff64c47e965,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebcd71,19063118,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06c1d1,19079155,0,0x0,1
tick,0x7ff6cc14f6b2,19095225,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c30a31d,19111140,0,0x0,0,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x318a9a40000,262144
new,MemoryChunk,0x2d983480000,262144
new,MemoryChunk,0x1b164380000,262144
new,MemoryChunk,0x132dd600000,262144
tick,0x7ff6cc06c1d1,19127136,0,0x0,1
new,MemoryChunk,0x1816940000,262144
new,MemoryChunk,0x10b4d880000,262144
tick,0x7ff64c49ff88,19143159,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x132d62c0000,262144
new,MemoryChunk,0x21333780000,262144
new,MemoryChunk,0x240533c0000,262144
new,MemoryChunk,0x2fd952c0000,262144
new,MemoryChunk,0xec53f00000,262144
new,MemoryChunk,0x2cf49d80000,262144
new,MemoryChunk,0x34b1d40000,262144
new,MemoryChunk,0x10897180000,262144
tick,0x7ff6cbf177bd,19159220,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbabc,19175116,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x279f14c0000,262144
new,MemoryChunk,0x2e0e1a40000,262144
new,MemoryChunk,0x2f661640000,262144
new,MemoryChunk,0x335088c0000,262144
new,MemoryChunk,0x5fa5640000,262144
new,MemoryChunk,0x2e9f4f80000,262144
tick,0x7ff6cc686fd5,19191155,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3f8aeb40000,262144
new,MemoryChunk,0x30fd6b00000,262144
new,MemoryChunk,0x189a6f40000,262144
new,MemoryChunk,0x52e0c40000,262144
new,MemoryChunk,0x185c6700000,262144
new,MemoryChunk,0x19aa2fc0000,262144
new,MemoryChunk,0x3d92b4c0000,262144
new,MemoryChunk,0x250e68c0000,262144
tick,0x7ff64c496103,19207149,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0c5195,19223156,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2ada5e00000,262144
new,MemoryChunk,0x90c8e40000,262144
new,MemoryChunk,0x11677840000,262144
new,MemoryChunk,0x21692600000,262144
new,MemoryChunk,0x14fd3900000,262144
new,MemoryChunk,0x34020a40000,262144
new,MemoryChunk,0x2302c8c0000,262144
tick,0x7ff66c2dbe18,19239136,0,0x0,0,0x7ff64c497a46,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2d91be00000,262144
tick,0x7ff6cc088218,19255103,0,0x0,1
new,MemoryChunk,0x187a8b00000,262144
new,MemoryChunk,0x99dc900000,262144
new,MemoryChunk,0x1a543100000,262144
new,MemoryChunk,0x37f829c0000,262144
new,MemoryChunk,0x3819ad00000,262144
new,MemoryChunk,0x3ddac800000,262144
new,MemoryChunk,0x379cf940000,262144
new,MemoryChunk,0x21b71780000,262144
tick,0x7ff6cc0f4e67,19271179,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xbedcfc0000,262144
new,MemoryChunk,0x29a3c5c0000,262144
new,MemoryChunk,0x32f28300000,262144
new,MemoryChunk,0x37205580000,262144
new,MemoryChunk,0x2257b440000,262144
new,MemoryChunk,0xe18c400000,262144
new,MemoryChunk,0xbfe280000,262144
tick,0x7ff66c2dc31c,19287153,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc09f,19303172,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x16e55640000,262144
new,MemoryChunk,0xc6164c0000,262144
new,MemoryChunk,0xdec6300000,262144
new,MemoryChunk,0x68953c0000,262144
new,MemoryChunk,0x20bb3580000,262144
new,MemoryChunk,0xfc8ec80000,262144
new,MemoryChunk,0x13f92d80000,262144
tick,0x7ff6cbea121d,19319161,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x132c6640000,262144
new,MemoryChunk,0x38cca900000,262144
new,MemoryChunk,0x2bb42f00000,262144
new,MemoryChunk,0x134c3300000,262144
new,MemoryChunk,0x174ef340000,262144
new,MemoryChunk,0x274d1600000,262144
new,MemoryChunk,0x19772cc0000,262144
new,MemoryChunk,0xca99380000,262144
tick,0x7ff66c2bc7ff,19335142,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xabbb100000,262144
new,MemoryChunk,0x2b09d5c0000,262144
new,MemoryChunk,0x3f92f240000,262144
new,MemoryChunk,0x38acec0000,262144
new,MemoryChunk,0x4f84600000,262144
new,MemoryChunk,0xe5fd80000,262144
new,MemoryChunk,0x211c41c0000,262144
tick,0x7ff6cc068d31,19351118,0,0x0,1
delete,MemoryChunk,0x1d5cf740000
delete,MemoryChunk,0x161bb640000
delete,MemoryChunk,0x35276e00000
delete,MemoryChunk,0x20b12100000
delete,MemoryChunk,0x12a94280000
delete,MemoryChunk,0x2fe3b840000
delete,MemoryChunk,0x2d983480000
delete,MemoryChunk,0xd82af00000
delete,MemoryChunk,0x318a9a40000
delete,MemoryChunk,0x1816940000
delete,MemoryChunk,0x1b164380000
delete,MemoryChunk,0x240533c0000
delete,MemoryChunk,0x132dd600000
delete,MemoryChunk,0x10897180000
delete,MemoryChunk,0x132d62c0000
delete,MemoryChunk,0xec53f00000
delete,MemoryChunk,0x2e0e1a40000
delete,MemoryChunk,0x335088c0000
delete,MemoryChunk,0x2fd952c0000
delete,MemoryChunk,0x5fa5640000
delete,MemoryChunk,0x2cf49d80000
delete,MemoryChunk,0x4bbd200000
delete,MemoryChunk,0x30fd6b00000
delete,MemoryChunk,0x52e0c40000
delete,MemoryChunk,0x189a6f40000
delete,MemoryChunk,0x185c6700000
delete,MemoryChunk,0x250e68c0000
delete,MemoryChunk,0x2e9f4f80000
delete,MemoryChunk,0x2ada5e00000
delete,MemoryChunk,0x11677840000
delete,MemoryChunk,0x14fd3900000
delete,MemoryChunk,0x2302c8c0000
delete,MemoryChunk,0x2d91be00000
delete,MemoryChunk,0x10b4d880000
delete,MemoryChunk,0x1a543100000
delete,MemoryChunk,0x3ddac800000
delete,MemoryChunk,0x21b71780000
delete,MemoryChunk,0x37f829c0000
delete,MemoryChunk,0x37205580000
delete,MemoryChunk,0x379cf940000
delete,MemoryChunk,0x187a8b00000
delete,MemoryChunk,0x32f28300000
delete,MemoryChunk,0xbfe280000
delete,MemoryChunk,0x2257b440000
delete,MemoryChunk,0xdec6300000
delete,MemoryChunk,0xbedcfc0000
delete,MemoryChunk,0xc6164c0000
delete,MemoryChunk,0xe18c400000
delete,MemoryChunk,0x16e55640000
delete,MemoryChunk,0x2bb42f00000
delete,MemoryChunk,0x38cca900000
delete,MemoryChunk,0x174ef340000
delete,MemoryChunk,0xca99380000
delete,MemoryChunk,0x2b09d5c0000
delete,MemoryChunk,0xabbb100000
delete,MemoryChunk,0x19772cc0000
delete,MemoryChunk,0xfc8ec80000
delete,MemoryChunk,0x132c6640000
delete,MemoryChunk,0x4f84600000
delete,MemoryChunk,0x211c41c0000
delete,MemoryChunk,0xe5fd80000
delete,MemoryChunk,0x38acec0000
tick,0x7ff66c328301,19367157,0,0x0,0,0x7ff64c47e965,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x0,19383174,0,0x0,5
tick,0x7ff66c2dbf68,19399160,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2d96da,19415158,0,0x0,0,0x7ff64c499d09,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2892bf,19431353,0,0x0,0,0x7ff64c4968b6,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbba9255,19447164,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf17798,19463172,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc7b1,19479143,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebc210,19495190,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c292da5,19511170,0,0x0,0,0x7ff64c496479,0x7ff64c49797c,0x7ff64c4a2169,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06b11a,19527161,0,0x0,1
tick,0x7ff6cbebbb02,19543224,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x26b19500000,806912
code-creation,JS,13,19554769,0x7ff64c49c900,512, file:///C:/coding/soodocode/build/runtime-types.js:75:57,0x13a35fbf588,*
code-source-info,0x7ff64c49c900,112,2785,2823,C0O2785C43O2796C105O1101I0C151O1131I0C179O1125I0C198O2823C231O2785C278O1125I0C429O2796,F0O2796,S0xc2df932d20
tick,0x7ff6cc3375f6,19559131,0,0x0,0,0x7ff6cc351d19,0xbdcae7ecfc,0xbdcae7df6f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda9b7d,19575182,0,0x0,0,0x7ff6cbda9ab0,0x7ff6cc351d19,0xbdcae7ecfc,0xbdcae7df6f,0x7ff64c499ee0,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdac86f,19591385,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0b2,19606214,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc10545a,19622160,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c496454,19637184,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0e0,19653228,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf700bb,19669206,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x789c80000,262144
new,MemoryChunk,0x3a704200000,262144
new,MemoryChunk,0x1d317fc0000,262144
new,MemoryChunk,0x25816c0000,262144
tick,0x7ff6cbeb2003,19685210,0,0x0,1
new,MemoryChunk,0x165577c0000,262144
tick,0x7ff6cbeb0c1f,19701196,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x35f347c0000,262144
new,MemoryChunk,0x4796ec0000,262144
new,MemoryChunk,0x3ba4e940000,262144
new,MemoryChunk,0x71b9900000,262144
new,MemoryChunk,0x2c861100000,262144
new,MemoryChunk,0x7823700000,262144
new,MemoryChunk,0x37ea6440000,262144
new,MemoryChunk,0x1dfb0780000,262144
new,MemoryChunk,0x1ae8b880000,262144
new,MemoryChunk,0x823180000,262144
new,MemoryChunk,0x10c8e480000,262144
tick,0x7ff6cbeb9a99,19717215,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x361d7c40000,262144
new,MemoryChunk,0x10e0c900000,262144
new,MemoryChunk,0x16ab1680000,262144
new,MemoryChunk,0x3ed7f580000,262144
new,MemoryChunk,0x2fce4c40000,262144
new,MemoryChunk,0x27f4ad40000,262144
new,MemoryChunk,0x127c78c0000,262144
new,MemoryChunk,0x2cfbd800000,262144
tick,0x7ff6cc06d07d,19733304,0,0x0,1
new,MemoryChunk,0x2cd16d40000,262144
new,MemoryChunk,0x1118bc80000,262144
tick,0x7ff64c4a0c83,19749220,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3723c40000,262144
new,MemoryChunk,0xc9cc900000,262144
new,MemoryChunk,0x33708280000,262144
new,MemoryChunk,0x2ac5bfc0000,262144
new,MemoryChunk,0x15d67cc0000,262144
new,MemoryChunk,0x333d6600000,262144
new,MemoryChunk,0xaba4c40000,262144
new,MemoryChunk,0x513c000000,262144
new,MemoryChunk,0x23e268c0000,262144
new,MemoryChunk,0xa235c00000,262144
tick,0x7ff6cc0ffc9d,19765198,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a153b,19781199,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2a37f580000,262144
new,MemoryChunk,0x3b74980000,262144
new,MemoryChunk,0x356bfb40000,262144
new,MemoryChunk,0x1de06840000,262144
new,MemoryChunk,0x1dc8fa40000,262144
new,MemoryChunk,0x272d1b00000,262144
new,MemoryChunk,0x5745040000,262144
new,MemoryChunk,0xf528900000,262144
new,MemoryChunk,0x375dbf40000,262144
new,MemoryChunk,0x1730a940000,262144
new,MemoryChunk,0x345c5880000,262144
tick,0x7ff6cbf6ff39,19797181,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3f4ffe80000,262144
new,MemoryChunk,0x23d2c000000,262144
new,MemoryChunk,0x29b00cc0000,262144
new,MemoryChunk,0x1fd67280000,262144
new,MemoryChunk,0x32611a40000,262144
new,MemoryChunk,0x320b05c0000,262144
new,MemoryChunk,0x18b29300000,262144
new,MemoryChunk,0x3e3600000,262144
new,MemoryChunk,0x2d37e6c0000,262144
delete,MemoryChunk,0x1f952240000
delete,MemoryChunk,0x21333780000
delete,MemoryChunk,0x20bb3580000
delete,MemoryChunk,0x19aa2fc0000
delete,MemoryChunk,0x2f661640000
delete,MemoryChunk,0x99dc900000
delete,MemoryChunk,0x34b1d40000
delete,MemoryChunk,0x279f14c0000
delete,MemoryChunk,0x34020a40000
delete,MemoryChunk,0x3f8aeb40000
delete,MemoryChunk,0x16dfd080000
delete,MemoryChunk,0x90c8e40000
delete,MemoryChunk,0x274d1600000
delete,MemoryChunk,0x789c80000
delete,MemoryChunk,0x134c3300000
delete,MemoryChunk,0x3a704200000
delete,MemoryChunk,0x25816c0000
delete,MemoryChunk,0x35f347c0000
delete,MemoryChunk,0x4796ec0000
delete,MemoryChunk,0x1dfb0780000
delete,MemoryChunk,0x823180000
delete,MemoryChunk,0x3ba4e940000
delete,MemoryChunk,0x7823700000
delete,MemoryChunk,0x71b9900000
delete,MemoryChunk,0x37ea6440000
delete,MemoryChunk,0x3819ad00000
delete,MemoryChunk,0x2c861100000
delete,MemoryChunk,0x10c8e480000
delete,MemoryChunk,0x361d7c40000
delete,MemoryChunk,0x2fce4c40000
delete,MemoryChunk,0x2cfbd800000
delete,MemoryChunk,0x1118bc80000
delete,MemoryChunk,0x16ab1680000
delete,MemoryChunk,0x10e0c900000
delete,MemoryChunk,0x3ed7f580000
delete,MemoryChunk,0x27f4ad40000
delete,MemoryChunk,0x127c78c0000
delete,MemoryChunk,0x2cd16d40000
delete,MemoryChunk,0x3723c40000
delete,MemoryChunk,0x2ac5bfc0000
delete,MemoryChunk,0xaba4c40000
delete,MemoryChunk,0xc9cc900000
delete,MemoryChunk,0x333d6600000
delete,MemoryChunk,0xa235c00000
delete,MemoryChunk,0x33708280000
delete,MemoryChunk,0x513c000000
delete,MemoryChunk,0x8026580000
delete,MemoryChunk,0x1de06840000
delete,MemoryChunk,0x15d67cc0000
delete,MemoryChunk,0x3f92f240000
delete,MemoryChunk,0x3d92b4c0000
delete,MemoryChunk,0x13f92d80000
delete,MemoryChunk,0x2a37f580000
delete,MemoryChunk,0x1dc8fa40000
delete,MemoryChunk,0x3b74980000
delete,MemoryChunk,0x356bfb40000
delete,MemoryChunk,0x165577c0000
delete,MemoryChunk,0x272d1b00000
delete,MemoryChunk,0x1730a940000
delete,MemoryChunk,0x345c5880000
delete,MemoryChunk,0x23d2c000000
delete,MemoryChunk,0x1ae8b880000
delete,MemoryChunk,0x1fd67280000
delete,MemoryChunk,0x5745040000
delete,MemoryChunk,0x3e3600000
delete,MemoryChunk,0xf528900000
delete,MemoryChunk,0x29b00cc0000
delete,MemoryChunk,0x320b05c0000
delete,MemoryChunk,0x18b29300000
delete,MemoryChunk,0x23e268c0000
delete,MemoryChunk,0x3f4ffe80000
delete,MemoryChunk,0x1d317fc0000
delete,MemoryChunk,0x32611a40000
delete,MemoryChunk,0x2d37e6c0000
tick,0x7ff6cca8a667,19813145,0,0x0,1
tick,0x7ff6cbf1c7f3,19829235,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a1503,19845223,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2892bf,19861175,0,0x0,0,0x7ff64c4968b6,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0bc6,19877211,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb0433,19893211,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6baeb,19909217,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0e6,19925230,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c332c72,19941196,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06dcd9,19957234,0,0x0,1
tick,0x7ff6cbf1c3cc,19973212,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x36bbbd80000,262144
new,MemoryChunk,0x2668400000,262144
new,MemoryChunk,0x356cdd80000,262144
new,MemoryChunk,0x1aa3e100000,262144
tick,0x7ff66c290cae,19989264,0,0x0,0,0x7ff64c496733,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x5ad2100000,262144
new,MemoryChunk,0x205a14c0000,262144
new,MemoryChunk,0x1ee25700000,262144
new,MemoryChunk,0x261c1100000,262144
new,MemoryChunk,0xfad8480000,262144
new,MemoryChunk,0x259b3f40000,262144
new,MemoryChunk,0x20548e40000,262144
tick,0x7ff6cc06d060,20005242,0,0x0,1
new,MemoryChunk,0x1f8adac0000,262144
new,MemoryChunk,0xa648240000,262144
new,MemoryChunk,0x3e0a9200000,262144
tick,0x7ff64c49a603,20021226,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3f4ce3c0000,262144
new,MemoryChunk,0x3472b5c0000,262144
new,MemoryChunk,0x1924a580000,262144
new,MemoryChunk,0x38cc6900000,262144
new,MemoryChunk,0x176b5380000,262144
new,MemoryChunk,0xfe04000000,262144
new,MemoryChunk,0x28ec7880000,262144
new,MemoryChunk,0x2a84fd00000,262144
new,MemoryChunk,0xb49df80000,262144
new,MemoryChunk,0x17cfd500000,262144
tick,0x7ff66c291296,20037180,0,0x0,0,0x7ff64c496552,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3afad7c0000,262144
new,MemoryChunk,0x392ff2c0000,262144
new,MemoryChunk,0x19146480000,262144
new,MemoryChunk,0x39addec0000,262144
tick,0x7ff6cc0726ea,20052379,0,0x0,1
new,MemoryChunk,0x8691940000,262144
new,MemoryChunk,0x37324480000,262144
new,MemoryChunk,0xb561240000,262144
new,MemoryChunk,0xb7bf340000,262144
new,MemoryChunk,0x1fbe7ac0000,262144
new,MemoryChunk,0x3d228e80000,262144
new,MemoryChunk,0x15ed1d40000,262144
tick,0x7ff6cbf1ea65,20068211,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2791e9c0000,262144
new,MemoryChunk,0x30ad1800000,262144
new,MemoryChunk,0x14df3e80000,262144
new,MemoryChunk,0x9ea1e80000,262144
new,MemoryChunk,0x3fc54c80000,262144
new,MemoryChunk,0x3004240000,262144
new,MemoryChunk,0xc1ffc80000,262144
new,MemoryChunk,0x35757ec0000,262144
new,MemoryChunk,0x38b6bac0000,262144
new,MemoryChunk,0x1624d780000,262144
new,MemoryChunk,0x5c355c0000,262144
tick,0x7ff6cbf20ec9,20084190,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbeb9a8e,20100258,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xa172740000,262144
new,MemoryChunk,0x358c4c40000,262144
new,MemoryChunk,0xe7b31c0000,262144
new,MemoryChunk,0x341f540000,262144
new,MemoryChunk,0x2f64fcc0000,262144
new,MemoryChunk,0x83eee00000,262144
new,MemoryChunk,0x3f438c80000,262144
new,MemoryChunk,0x37998240000,262144
new,MemoryChunk,0x2786a2c0000,262144
tick,0x7ff6cbe950b5,20116263,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x20f0a40000,262144
new,MemoryChunk,0xfe157c0000,262144
new,MemoryChunk,0x11ddc0000,262144
new,MemoryChunk,0x1e201680000,262144
new,MemoryChunk,0xf182100000,262144
new,MemoryChunk,0x148b1100000,262144
new,MemoryChunk,0x39af1b00000,262144
new,MemoryChunk,0x159b78c0000,262144
new,MemoryChunk,0xb019e40000,262144
new,MemoryChunk,0x180920c0000,262144
tick,0x7ff66c241b40,20132211,0,0x0,0,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbeb6,20148220,0,0x0,0,0x7ff64c49515a,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1ff3480000,262144
new,MemoryChunk,0x34498780000,262144
new,MemoryChunk,0x1d7e9e40000,262144
new,MemoryChunk,0x20c72d40000,262144
new,MemoryChunk,0x12fda540000,262144
new,MemoryChunk,0x14f22f40000,262144
new,MemoryChunk,0x2e84fe80000,262144
new,MemoryChunk,0x3b3ef640000,262144
new,MemoryChunk,0x2034d940000,262144
delete,MemoryChunk,0x29a3c5c0000
delete,MemoryChunk,0x36bbbd80000
delete,MemoryChunk,0x1aa3e100000
delete,MemoryChunk,0x1ee25700000
delete,MemoryChunk,0x261c1100000
delete,MemoryChunk,0x1f8adac0000
delete,MemoryChunk,0x375dbf40000
delete,MemoryChunk,0xa648240000
delete,MemoryChunk,0x20548e40000
delete,MemoryChunk,0x3472b5c0000
delete,MemoryChunk,0x38cc6900000
delete,MemoryChunk,0x1924a580000
delete,MemoryChunk,0x28ec7880000
delete,MemoryChunk,0x5ad2100000
delete,MemoryChunk,0x2a84fd00000
delete,MemoryChunk,0x205a14c0000
delete,MemoryChunk,0x259b3f40000
delete,MemoryChunk,0xfad8480000
delete,MemoryChunk,0x356cdd80000
delete,MemoryChunk,0x17cfd500000
delete,MemoryChunk,0x8691940000
delete,MemoryChunk,0xb561240000
delete,MemoryChunk,0x3d228e80000
delete,MemoryChunk,0x19146480000
delete,MemoryChunk,0x2668400000
delete,MemoryChunk,0x392ff2c0000
delete,MemoryChunk,0x39addec0000
delete,MemoryChunk,0x3afad7c0000
delete,MemoryChunk,0x14df3e80000
delete,MemoryChunk,0x30ad1800000
delete,MemoryChunk,0x5c355c0000
delete,MemoryChunk,0x176b5380000
delete,MemoryChunk,0x2791e9c0000
delete,MemoryChunk,0xc1ffc80000
delete,MemoryChunk,0x35757ec0000
delete,MemoryChunk,0x3fc54c80000
delete,MemoryChunk,0x37324480000
delete,MemoryChunk,0x3004240000
delete,MemoryChunk,0x1fbe7ac0000
delete,MemoryChunk,0xfe04000000
delete,MemoryChunk,0xb49df80000
delete,MemoryChunk,0x3f4ce3c0000
delete,MemoryChunk,0x2f64fcc0000
delete,MemoryChunk,0x83eee00000
delete,MemoryChunk,0x37998240000
delete,MemoryChunk,0x3e0a9200000
delete,MemoryChunk,0x358c4c40000
delete,MemoryChunk,0x2786a2c0000
delete,MemoryChunk,0xa172740000
delete,MemoryChunk,0xe7b31c0000
delete,MemoryChunk,0x1e201680000
delete,MemoryChunk,0x159b78c0000
delete,MemoryChunk,0x20f0a40000
delete,MemoryChunk,0x148b1100000
delete,MemoryChunk,0xfe157c0000
delete,MemoryChunk,0xf182100000
delete,MemoryChunk,0x11ddc0000
delete,MemoryChunk,0x38b6bac0000
delete,MemoryChunk,0x34498780000
delete,MemoryChunk,0x20c72d40000
delete,MemoryChunk,0x1624d780000
delete,MemoryChunk,0x1d7e9e40000
delete,MemoryChunk,0x12fda540000
delete,MemoryChunk,0x2e84fe80000
delete,MemoryChunk,0x39af1b00000
delete,MemoryChunk,0x1ff3480000
delete,MemoryChunk,0x14f22f40000
delete,MemoryChunk,0x3b3ef640000
delete,MemoryChunk,0x180920c0000
delete,MemoryChunk,0x2034d940000
tick,0x7ff6cbec2a22,20164221,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c245e1c,20180207,0,0x0,0,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec6abf,20196230,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c24ab40,20212287,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff863b990b6,20228239,0,0x0,1
tick,0x7ff66c2dbf7a,20244244,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6bb1f,20260245,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06b0eb,20276245,0,0x0,1
tick,0x7ff66c27be49,20291281,0,0x0,0,0x7ff64c495cb2,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49fdc4,20307227,0,0x0,0,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1c304,20323269,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c320e12,20339232,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x24f77440000,262144
new,MemoryChunk,0x258ec640000,262144
new,MemoryChunk,0x3fe25900000,262144
new,MemoryChunk,0x5cacb40000,262144
new,MemoryChunk,0x2bf2d080000,262144
new,MemoryChunk,0x3472f640000,262144
tick,0x7ff64c49612b,20355228,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc10e07b,20371264,0,0x0,1
new,MemoryChunk,0x3529c100000,262144
new,MemoryChunk,0x24087840000,262144
new,MemoryChunk,0x85ee00000,262144
new,MemoryChunk,0x33966d00000,262144
new,MemoryChunk,0x33f18d80000,262144
new,MemoryChunk,0x130028c0000,262144
new,MemoryChunk,0x37e8c480000,262144
new,MemoryChunk,0x2895d980000,262144
new,MemoryChunk,0x528b380000,262144
new,MemoryChunk,0x4e72480000,262144
tick,0x7ff66c2dc389,20387288,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1d9f9e00000,262144
new,MemoryChunk,0x2c75d400000,262144
new,MemoryChunk,0x2bad3e40000,262144
new,MemoryChunk,0x1f087440000,262144
new,MemoryChunk,0x92120c0000,262144
new,MemoryChunk,0x4b040000,262144
new,MemoryChunk,0x8c24f40000,262144
new,MemoryChunk,0x11c7c9c0000,262144
new,MemoryChunk,0x20afd0c0000,262144
tick,0x7ff66c2dbf85,20403230,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec2847,20419225,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x1a6ebec0000,262144
new,MemoryChunk,0x1b80ef40000,262144
new,MemoryChunk,0x36654b80000,262144
new,MemoryChunk,0x207232c0000,262144
new,MemoryChunk,0x6e7b380000,262144
new,MemoryChunk,0x3a8f8d40000,262144
new,MemoryChunk,0x25824780000,262144
new,MemoryChunk,0x18d087c0000,262144
new,MemoryChunk,0xaca6fc0000,262144
tick,0x7ff6cc0fd1f4,20435308,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xf4ee700000,262144
new,MemoryChunk,0x185497c0000,262144
new,MemoryChunk,0x934bc00000,262144
new,MemoryChunk,0x18e0eac0000,262144
new,MemoryChunk,0x1591bac0000,262144
new,MemoryChunk,0x2329b9c0000,262144
new,MemoryChunk,0x183353c0000,262144
tick,0x7ff6cc06cb55,20451298,0,0x0,1
new,MemoryChunk,0x1db0b440000,262144
new,MemoryChunk,0x1dd83840000,262144
new,MemoryChunk,0x17c6a8c0000,262144
new,MemoryChunk,0x20a19840000,262144
new,MemoryChunk,0x974ca40000,262144
new,MemoryChunk,0xa1c5e00000,262144
tick,0x0,20467288,0,0x0,5
new,MemoryChunk,0x27634b80000,262144
new,MemoryChunk,0x95a680000,262144
new,MemoryChunk,0x2010cd00000,262144
new,MemoryChunk,0xa98b3c0000,262144
new,MemoryChunk,0x91adc00000,262144
new,MemoryChunk,0x34ddbf00000,262144
new,MemoryChunk,0x13a04f40000,262144
tick,0x7ff6cbba9245,20483288,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2221c000000,262144
new,MemoryChunk,0x24263680000,262144
new,MemoryChunk,0x2aa38280000,262144
new,MemoryChunk,0x26be4440000,262144
new,MemoryChunk,0x9315a00000,262144
new,MemoryChunk,0x24c83a00000,262144
new,MemoryChunk,0x15b147c0000,262144
new,MemoryChunk,0x1db9be40000,262144
new,MemoryChunk,0xcebb3c0000,262144
new,MemoryChunk,0x1d5f9b40000,262144
new,MemoryChunk,0xed40c80000,262144
tick,0x7ff6cbf12fbe,20499283,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ffc9d,20515283,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x165f2c0000,262144
new,MemoryChunk,0x23663f80000,262144
new,MemoryChunk,0x2c0f9480000,262144
new,MemoryChunk,0x153b3f80000,262144
new,MemoryChunk,0x3c547d00000,262144
new,MemoryChunk,0x406b180000,262144
new,MemoryChunk,0x3db737c0000,262144
new,MemoryChunk,0x3b63dc0000,262144
delete,MemoryChunk,0xb7bf340000
delete,MemoryChunk,0x9ea1e80000
delete,MemoryChunk,0x3f438c80000
delete,MemoryChunk,0x3472f640000
delete,MemoryChunk,0x24f77440000
delete,MemoryChunk,0x3fe25900000
delete,MemoryChunk,0x258ec640000
delete,MemoryChunk,0x3529c100000
delete,MemoryChunk,0x33f18d80000
delete,MemoryChunk,0xb019e40000
delete,MemoryChunk,0x85ee00000
delete,MemoryChunk,0x33966d00000
delete,MemoryChunk,0x130028c0000
delete,MemoryChunk,0x24087840000
delete,MemoryChunk,0x2895d980000
delete,MemoryChunk,0x5cacb40000
delete,MemoryChunk,0x1f087440000
delete,MemoryChunk,0x4b040000
delete,MemoryChunk,0x2c75d400000
delete,MemoryChunk,0x1d9f9e00000
delete,MemoryChunk,0x2bad3e40000
delete,MemoryChunk,0x2bf2d080000
delete,MemoryChunk,0x92120c0000
delete,MemoryChunk,0x8c24f40000
delete,MemoryChunk,0x36654b80000
delete,MemoryChunk,0x3a8f8d40000
delete,MemoryChunk,0x207232c0000
delete,MemoryChunk,0x528b380000
delete,MemoryChunk,0x6e7b380000
delete,MemoryChunk,0x25824780000
delete,MemoryChunk,0x1b80ef40000
delete,MemoryChunk,0x11c7c9c0000
delete,MemoryChunk,0x1a6ebec0000
delete,MemoryChunk,0x18d087c0000
delete,MemoryChunk,0xf4ee700000
delete,MemoryChunk,0xaca6fc0000
delete,MemoryChunk,0x185497c0000
delete,MemoryChunk,0x1591bac0000
delete,MemoryChunk,0x1db0b440000
delete,MemoryChunk,0x37e8c480000
delete,MemoryChunk,0x934bc00000
delete,MemoryChunk,0x2329b9c0000
delete,MemoryChunk,0x18e0eac0000
delete,MemoryChunk,0x183353c0000
delete,MemoryChunk,0x2010cd00000
delete,MemoryChunk,0x974ca40000
delete,MemoryChunk,0x95a680000
delete,MemoryChunk,0x13a04f40000
delete,MemoryChunk,0x20a19840000
delete,MemoryChunk,0x91adc00000
delete,MemoryChunk,0x27634b80000
delete,MemoryChunk,0xa98b3c0000
delete,MemoryChunk,0x1dd83840000
delete,MemoryChunk,0x2221c000000
delete,MemoryChunk,0x24263680000
delete,MemoryChunk,0x26be4440000
delete,MemoryChunk,0x24c83a00000
delete,MemoryChunk,0x34ddbf00000
delete,MemoryChunk,0x2aa38280000
delete,MemoryChunk,0x9315a00000
delete,MemoryChunk,0x15b147c0000
delete,MemoryChunk,0x17c6a8c0000
delete,MemoryChunk,0x4e72480000
delete,MemoryChunk,0x1d5f9b40000
delete,MemoryChunk,0x165f2c0000
delete,MemoryChunk,0x2c0f9480000
delete,MemoryChunk,0x3c547d00000
delete,MemoryChunk,0x3db737c0000
delete,MemoryChunk,0x20afd0c0000
delete,MemoryChunk,0x3b63dc0000
delete,MemoryChunk,0x406b180000
tick,0x7ff6cbec282c,20531236,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc105457,20547407,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec38e7,20563271,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06b777,20579306,0,0x0,1
tick,0x7ff6cbf1c4a7,20595273,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0eb3fc,20610371,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06d0fa,20626333,0,0x0,1
tick,0x7ff6cbf20f95,20642307,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c496741,20658293,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1ff10,20674310,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbea1261,20690270,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d200,20706300,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0ffc9d,20722330,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x16f6eb00000,262144
new,MemoryChunk,0x28efdc80000,262144
new,MemoryChunk,0xbeca940000,262144
tick,0x7ff66c2dc0c1,20738328,0,0x0,0,0x7ff64c495181,0x7ff64c49797c,0x7ff64c49a401,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x39ebd680000,262144
new,MemoryChunk,0x3d6efd40000,262144
new,MemoryChunk,0x8edf180000,262144
new,MemoryChunk,0x26157240000,262144
new,MemoryChunk,0x27c61340000,262144
new,MemoryChunk,0x1e6bfa40000,262144
new,MemoryChunk,0x24bb3000000,262144
new,MemoryChunk,0xeacd380000,262144
new,MemoryChunk,0x201ab080000,262144
tick,0x7ff6cbeb0c90,20754266,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2bc7f4,20769279,0,0x0,0,0x7ff64c496084,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2671ddc0000,262144
new,MemoryChunk,0x16066140000,262144
new,MemoryChunk,0x35d52780000,262144
new,MemoryChunk,0x3c660100000,262144
new,MemoryChunk,0xdd7d040000,262144
new,MemoryChunk,0x32b61380000,262144
new,MemoryChunk,0x3ff8d2c0000,262144
new,MemoryChunk,0x25b406c0000,262144
new,MemoryChunk,0x1b82580000,262144
new,MemoryChunk,0x3d08e900000,262144
new,MemoryChunk,0x23ed980000,262144
new,MemoryChunk,0x2df1d600000,262144
tick,0x7ff66c30b17b,20784290,0,0x0,0,0x7ff64c49a6c7,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbb6e938,20800361,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x29185800000,262144
new,MemoryChunk,0x13805880000,262144
new,MemoryChunk,0x3306d300000,262144
new,MemoryChunk,0x1d4d1e40000,262144
new,MemoryChunk,0x758fa80000,262144
new,MemoryChunk,0x1b98a400000,262144
new,MemoryChunk,0x38354480000,262144
new,MemoryChunk,0x1acbb300000,262144
new,MemoryChunk,0x2ad22c40000,262144
new,MemoryChunk,0x369ad340000,262144
tick,0x7ff6cbebba6f,20815309,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x38a0a280000,262144
new,MemoryChunk,0x2f5d6680000,262144
new,MemoryChunk,0x258fab80000,262144
new,MemoryChunk,0x21f0c900000,262144
new,MemoryChunk,0x32dabe40000,262144
new,MemoryChunk,0x263f0c0000,262144
new,MemoryChunk,0x3cf24400000,262144
tick,0x7ff6cbf1c418,20831338,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a58a9,20847275,0,0x0,0,0x7ff6cc054640,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x19f0480000,262144
new,MemoryChunk,0x877fa40000,262144
new,MemoryChunk,0xad699c0000,262144
new,MemoryChunk,0xff87200000,262144
new,MemoryChunk,0x8bec940000,262144
new,MemoryChunk,0x10b95080000,262144
new,MemoryChunk,0x2517ee40000,262144
new,MemoryChunk,0x399f09c0000,262144
new,MemoryChunk,0x10659ec0000,262144
new,MemoryChunk,0x21427040000,262144
new,MemoryChunk,0x156ae940000,262144
tick,0x7ff6cbdac825,20863319,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x514d480000,262144
new,MemoryChunk,0x379bb080000,262144
new,MemoryChunk,0x364a1b80000,262144
new,MemoryChunk,0x2e8ac840000,262144
new,MemoryChunk,0x2d766f00000,262144
new,MemoryChunk,0x58a1e00000,262144
new,MemoryChunk,0x136efe00000,262144
new,MemoryChunk,0x3b0b9d00000,262144
new,MemoryChunk,0x3fd02a40000,262144
new,MemoryChunk,0x77b65c0000,262144
tick,0x7ff64c495f43,20879349,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc2a8b04,20895318,0,0x0,0,0x7ff66c2daafa,0x7ff64c49a45c,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x185bf380000,262144
new,MemoryChunk,0x1dcb74c0000,262144
new,MemoryChunk,0x12bb7f40000,262144
new,MemoryChunk,0x1e3f1480000,262144
new,MemoryChunk,0x3e9bfd80000,262144
new,MemoryChunk,0xc056ec0000,262144
new,MemoryChunk,0xc947c0000,262144
new,MemoryChunk,0x3a6fc800000,262144
new,MemoryChunk,0x2bc0b300000,262144
delete,MemoryChunk,0xa1c5e00000
delete,MemoryChunk,0x153b3f80000
delete,MemoryChunk,0xcebb3c0000
delete,MemoryChunk,0x28efdc80000
delete,MemoryChunk,0x23663f80000
delete,MemoryChunk,0xed40c80000
delete,MemoryChunk,0x16f6eb00000
delete,MemoryChunk,0xbeca940000
delete,MemoryChunk,0x39ebd680000
delete,MemoryChunk,0x8edf180000
delete,MemoryChunk,0xeacd380000
delete,MemoryChunk,0x3d6efd40000
delete,MemoryChunk,0x27c61340000
delete,MemoryChunk,0x24bb3000000
delete,MemoryChunk,0x201ab080000
delete,MemoryChunk,0x2671ddc0000
delete,MemoryChunk,0x1b82580000
delete,MemoryChunk,0x16066140000
delete,MemoryChunk,0xdd7d040000
delete,MemoryChunk,0x3ff8d2c0000
delete,MemoryChunk,0x2df1d600000
delete,MemoryChunk,0x3c660100000
delete,MemoryChunk,0x3d08e900000
delete,MemoryChunk,0x32b61380000
delete,MemoryChunk,0x25b406c0000
delete,MemoryChunk,0x1d4d1e40000
delete,MemoryChunk,0x1acbb300000
delete,MemoryChunk,0x758fa80000
delete,MemoryChunk,0x13805880000
delete,MemoryChunk,0x29185800000
delete,MemoryChunk,0x38354480000
delete,MemoryChunk,0x2f5d6680000
delete,MemoryChunk,0x2ad22c40000
delete,MemoryChunk,0x38a0a280000
delete,MemoryChunk,0x26157240000
delete,MemoryChunk,0x21f0c900000
delete,MemoryChunk,0x263f0c0000
delete,MemoryChunk,0x369ad340000
delete,MemoryChunk,0x3cf24400000
delete,MemoryChunk,0x19f0480000
delete,MemoryChunk,0x2517ee40000
delete,MemoryChunk,0x10659ec0000
delete,MemoryChunk,0x156ae940000
delete,MemoryChunk,0x3306d300000
delete,MemoryChunk,0xff87200000
delete,MemoryChunk,0x10b95080000
delete,MemoryChunk,0x399f09c0000
delete,MemoryChunk,0x21427040000
delete,MemoryChunk,0xad699c0000
delete,MemoryChunk,0x8bec940000
delete,MemoryChunk,0x514d480000
delete,MemoryChunk,0x23ed980000
delete,MemoryChunk,0x136efe00000
delete,MemoryChunk,0x364a1b80000
delete,MemoryChunk,0x379bb080000
delete,MemoryChunk,0x3fd02a40000
delete,MemoryChunk,0x58a1e00000
delete,MemoryChunk,0x12bb7f40000
delete,MemoryChunk,0x2e8ac840000
delete,MemoryChunk,0x1dcb74c0000
delete,MemoryChunk,0x77b65c0000
delete,MemoryChunk,0x1e3f1480000
delete,MemoryChunk,0x185bf380000
delete,MemoryChunk,0x32dabe40000
delete,MemoryChunk,0x3e9bfd80000
delete,MemoryChunk,0xc947c0000
delete,MemoryChunk,0x2bc0b300000
delete,MemoryChunk,0x3a6fc800000
tick,0x7ff66c2dc0b2,20911301,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49a2a8,20927314,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe6bae8,20943301,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf70c65,20959286,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb8b,20975314,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebba30,20991307,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c4a28ac,21007317,0,0x0,0,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbf1d200,21023375,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2892b5,21039298,0,0x0,0,0x7ff64c4967e1,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c332aca,21055326,0,0x0,0,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0cb,21071328,0,0x0,0,0x7ff64c495e23,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c49a45c,21087320,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06a9d8,21102500,0,0x0,1
tick,0x7ff6cbf6cc53,21118580,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x354f1e40000,262144
new,MemoryChunk,0x266669c0000,262144
new,MemoryChunk,0x28da800000,262144
new,MemoryChunk,0x7567f80000,262144
new,MemoryChunk,0x2ddff980000,262144
new,MemoryChunk,0x3cc33240000,262144
tick,0x7ff6cbec3a2a,21134470,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebd1ba,21150550,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x27aad380000,262144
new,MemoryChunk,0x263cf700000,262144
new,MemoryChunk,0x71584c0000,262144
new,MemoryChunk,0x16a79580000,262144
new,MemoryChunk,0x3e0f71c0000,262144
new,MemoryChunk,0x9ae5900000,262144
new,MemoryChunk,0x2554700000,262144
new,MemoryChunk,0x3e0ad180000,262144
tick,0x7ff64c497904,21166577,0,0x0,0,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x3ae50500000,262144
new,MemoryChunk,0xdc0c2c0000,262144
new,MemoryChunk,0x33830e80000,262144
new,MemoryChunk,0x2a725e00000,262144
new,MemoryChunk,0x7f02e00000,262144
new,MemoryChunk,0x17ea2940000,262144
new,MemoryChunk,0x283fbb00000,262144
new,MemoryChunk,0x3d12a40000,262144
new,MemoryChunk,0x28e10c40000,262144
tick,0x7ff64c4979fd,21182465,0,0x0,0,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbdaee52,21198469,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2990e300000,262144
new,MemoryChunk,0x2fb31300000,262144
new,MemoryChunk,0x380a9480000,262144
new,MemoryChunk,0x6426bc0000,262144
new,MemoryChunk,0x1f63140000,262144
new,MemoryChunk,0x3b04ea00000,262144
new,MemoryChunk,0xc0a640000,262144
new,MemoryChunk,0x27ab1840000,262144
tick,0x7ff6cbec2a4d,21214525,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x9f7ae80000,262144
new,MemoryChunk,0x3513a1c0000,262144
new,MemoryChunk,0xf660040000,262144
new,MemoryChunk,0x2979a340000,262144
tick,0x7ff6cc06d168,21230500,0,0x0,1
new,MemoryChunk,0x2a31f6c0000,262144
new,MemoryChunk,0x3dd2fe00000,262144
new,MemoryChunk,0x11b05500000,262144
new,MemoryChunk,0x3681bb00000,262144
tick,0x7ff6cbeb5113,21246475,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2ec443c0000,262144
new,MemoryChunk,0x875740000,262144
new,MemoryChunk,0x1f16d880000,262144
new,MemoryChunk,0x1e2d5880000,262144
new,MemoryChunk,0x180b3400000,262144
new,MemoryChunk,0x16049ec0000,262144
new,MemoryChunk,0x22ecfb00000,262144
new,MemoryChunk,0x27b60e80000,262144
tick,0x7ff6cbea07c2,21262482,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x9972880000,262144
new,MemoryChunk,0x5765340000,262144
tick,0x7ff6cc06a9a3,21277487,0,0x0,1
new,MemoryChunk,0x13f1ea80000,262144
new,MemoryChunk,0x1babbb00000,262144
new,MemoryChunk,0x74af400000,262144
new,MemoryChunk,0x1d47b640000,262144
new,MemoryChunk,0x2a93ac80000,262144
tick,0x7ff6cbda9014,21293021,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x2f940cc0000,262144
new,MemoryChunk,0x19109240000,262144
new,MemoryChunk,0x4f021c0000,262144
new,MemoryChunk,0x1c163500000,262144
new,MemoryChunk,0xde55a40000,262144
new,MemoryChunk,0x11aa7940000,262144
delete,MemoryChunk,0x2d766f00000
delete,MemoryChunk,0x35d52780000
delete,MemoryChunk,0x258fab80000
delete,MemoryChunk,0x1db9be40000
delete,MemoryChunk,0x877fa40000
delete,MemoryChunk,0xc056ec0000
delete,MemoryChunk,0x354f1e40000
delete,MemoryChunk,0x2ddff980000
delete,MemoryChunk,0x7567f80000
delete,MemoryChunk,0x3cc33240000
delete,MemoryChunk,0x266669c0000
delete,MemoryChunk,0x27aad380000
delete,MemoryChunk,0x3e0f71c0000
delete,MemoryChunk,0x3b0b9d00000
delete,MemoryChunk,0x3e0ad180000
delete,MemoryChunk,0x2554700000
delete,MemoryChunk,0x263cf700000
delete,MemoryChunk,0x16a79580000
delete,MemoryChunk,0x9ae5900000
delete,MemoryChunk,0x33830e80000
delete,MemoryChunk,0x28e10c40000
delete,MemoryChunk,0x3ae50500000
delete,MemoryChunk,0x7f02e00000
delete,MemoryChunk,0x3d12a40000
delete,MemoryChunk,0x17ea2940000
delete,MemoryChunk,0x2990e300000
delete,MemoryChunk,0x6426bc0000
delete,MemoryChunk,0x283fbb00000
delete,MemoryChunk,0xdc0c2c0000
delete,MemoryChunk,0x1f63140000
delete,MemoryChunk,0x2a725e00000
delete,MemoryChunk,0x2fb31300000
delete,MemoryChunk,0x71584c0000
delete,MemoryChunk,0x3dd2fe00000
delete,MemoryChunk,0x2a31f6c0000
delete,MemoryChunk,0x27ab1840000
delete,MemoryChunk,0xc0a640000
delete,MemoryChunk,0x9f7ae80000
delete,MemoryChunk,0x11b05500000
delete,MemoryChunk,0x3513a1c0000
delete,MemoryChunk,0x2979a340000
delete,MemoryChunk,0x3681bb00000
delete,MemoryChunk,0x1f16d880000
delete,MemoryChunk,0x3b04ea00000
delete,MemoryChunk,0x2ec443c0000
delete,MemoryChunk,0x1e2d5880000
delete,MemoryChunk,0x22ecfb00000
delete,MemoryChunk,0x9972880000
delete,MemoryChunk,0x74af400000
delete,MemoryChunk,0x180b3400000
delete,MemoryChunk,0x13f1ea80000
delete,MemoryChunk,0x1babbb00000
delete,MemoryChunk,0x2a93ac80000
delete,MemoryChunk,0x2f940cc0000
delete,MemoryChunk,0x4f021c0000
delete,MemoryChunk,0x11aa7940000
delete,MemoryChunk,0x19109240000
delete,MemoryChunk,0x27b60e80000
tick,0x7ff6cbf6d335,21309018,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbe94c43,21325011,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241c6f,21341004,0,0x0,0,0x7ff64c4968b6,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbda8de2,21357008,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a1566,0x7ff64c497b4c,0x7ff64c49a24d,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbea121d,21373020,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbebbb02,21388994,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0c1,21404978,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff64c496313,21420994,0,0x0,0,0x7ff64c49797c,0x7ff64c49f96d,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbec2847,21437051,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc0d88a3,21453027,0,0x0,1
tick,0x7ff64c49a6c7,21469027,0,0x0,0,0x7ff64c4a28ae,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dc0b2,21485021,0,0x0,0,0x7ff64c4a0dd4,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc06b716,21501048,0,0x0,1
tick,0x7ff66c2dbf85,21517035,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c4a2169,0x7ff64c49a539,0x7ff64c47e8dc,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c2dbf85,21533020,0,0x0,0,0x7ff64c4967bb,0x7ff64c49797c,0x7ff64c49077c,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cc3176bf,21549076,0,0x0,0,0x7ff64c497a46,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff66c241bd3,21564996,0,0x0,0,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x25f3be80000,262144
new,MemoryChunk,0x29c79d40000,262144
new,MemoryChunk,0x629d680000,262144
tick,0x7ff6cbf20c72,21581057,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0x182d8200000,262144
new,MemoryChunk,0x293350c0000,262144
new,MemoryChunk,0x148d09c0000,262144
new,MemoryChunk,0x24a9fc00000,262144
new,MemoryChunk,0x21f9aa80000,262144
new,MemoryChunk,0xa289b40000,262144
new,MemoryChunk,0x3b1db0c0000,262144
tick,0x7ff6cbf1ff17,21596983,0,0x0,0,0x7ff6cbda8d20,0x7ff64c4a2817,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
tick,0x7ff6cbb6e938,21613047,0,0x0,0,0x7ff6cbda9010,0x7ff64c4a284b,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
new,MemoryChunk,0xac23600000,262144
new,MemoryChunk,0x23f13d80000,262144
new,MemoryChunk,0x244af5c0000,262144
new,MemoryChunk,0x2f99aa00000,262144
new,MemoryChunk,0xd955180000,262144
new,MemoryChunk,0x1e02f180000,262144
new,MemoryChunk,0x60697c0000,262144
new,MemoryChunk,0x31ab6400000,262144
tick,0x7ff66c242252,21629024,0,0x0,0,0x7ff64c49ff35,0x7ff64c497b4c,0x7ff64c47e7c5,0x7ff64c49a539,0x7ff64c4a28ae,0x7ff64c49a539,0x13a35fb81c8,0xc2df91011e,0x7ff6cc2e2d21,0x7ff6cb854c80,0xc2df905cd2,0x7ff6cc2dfcd7
code-creation,JS,10,21640391,0x60697c54ae,381,emit node:events:465:44,0x3fcdef91390,~
code-source-info,0x60697c54ae
code-creation,JS,10,21640702,0x60697c57f6,64,stopListeningIfSignal node:internal/process/signal:43:31,0x3fcdefb2640,~
code-source-info,0x60697c57f6,55,982,1153,C0O1007C5O1019C10O1019C16O1033C21O1067C26O1067C33O1087C38O1106C43O1106C47O1120C52O1132C57O1138C63O1152,,
code-creation,JS,10,21640946,0x60697c59ce,320,processTicksAndRejections node:internal/process/task_queues:67:35,0x3fcdefa4630,~
code-source-info,0x60697c59ce
code-creation,JS,10,21641175,0x60697c5c9e,48,shift node:internal/fixed_queue:108:8,0x3fcdefa5b10,~
code-source-info,0x60697c5c9e,37,4061,4320,C0O4089C5O4118C10O4118C15O4141C20O4141C26O4159C32O4260C36O4253C40O4273C41O4283C45O4303C47O4315,,
code-creation,JS,10,21641298,0x60697c5de6,54,shift node:internal/fixed_queue:80:8,0x3fcdefa58b0,~
code-source-info,0x60697c5de6,37,3379,3596,C0O3411C5O3421C9O3415C13O3435C15O3470C16O3482C17O3493C22O3503C28O3511C32O3549C36O3556C42O3563C44O3561C47O3541C51O3575C53O3591,,
code-creation,JS,10,21641416,0x60697c5f1e,13,isEmpty node:internal/fixed_queue:67:10,0x3fcdefa57c0,~
code-source-info,0x60697c5f1e,37,3150,3197,C0O3172C5O3185C9O3176C12O3192,,
code-creation,JS,10,21641522,0x60697c600e,42,emitBeforeScript node:internal/async_hooks:509:26,0x3fcdef84a70,~
code-source-info,0x60697c600e,14,17423,17579,C0O17464C12O17464C17O17522C22O17535C25O17526C31O17550C36O17550C41O17578,,
code-creation,JS,10,21641665,0x60697c615e,180,pushAsyncContext node:internal/async_hooks:539:26,0x3fcdef84bb0,~
code-source-info,0x60697c615e,14,18097,18652,C0O18153C7O18171C9O18170C13O18189C20O18223C24O18238C26O18249C32O18256C35O18267C40O18283C44O18253C49O18296C54O18303C59O18346C60O18350C65O18361C72O18384C78O18391C83O18407C85O18406C88O18389C92O18430C97O18441C104O18464C107O18468C113O18475C118O18491C120O18490C123O18473C127O18512C134O18530C142O18543C146O18550C153O18566C158O18585C162O18599C169O18615C174O18632C179O18651,,
code-creation,JS,10,21641847,0x60697c6346,16,hasHooks node:internal/async_hooks:470:18,0x3fcdef84840,~
code-source-info,0x60697c6346,14,16582,16630,C0O16593C7O16617C12O16623C15O16627,,
code-creation,JS,10,21641962,0x60697c645e,73,afterWriteTick node:internal/streams/writable:684:24,0x23f23c7450,~
code-source-info,0x60697c645e,141,21707,21875,C0O21710C5O21718C10O21725C15O21732C20O21743C22O21749C31O21761C33O21760C38O21757C42O21785C44O21791C48O21817C52O21828C67O21835C72O21872,,
code-creation,JS,10,21642153,0x60697c65de,214,afterWrite node:internal/streams/writable:690:20,0x23f23c74a0,~
code-source-info,0x60697c65de,141,21898,22408,C0O21930C2O21936C11O21948C13O21947C18O21944C22O21991C24O21998C26O21997C32O22009C37O22019C39O22017C45O22032C47O22030C50O22006C56O22049C58O22045C63O22069C69O22076C73O22086C75O22108C77O22114C86O22126C88O22125C93O22122C97O22150C105O22150C110O22190C120O22190C125O22202C131O22217C135O22226C137O22226C141O22175C145O22246C147O22257C149O22256C155O22267C157O22265C162O22279C167O22293C170O22293C174O22323C176O22334C178O22333C184O22344C186O22342C191O22353C196O22367C207O22367C213O22407,,
code-creation,JS,10,21642374,0x60697c683e,87, node:internal/console/constructor:358:10,0x3fcdefab790,~
code-source-info,0x60697c683e,46,11087,11921,C0O11308C7O11325C9O11321C17O11354C26O11373C31O11387C35O11415C40O11430C46O11832C54O11832C61O11855C66O11880C79O11880C86O11920,,
code-creation,JS,10,21642478,0x60697c698e,13,destroyHooksExist node:internal/async_hooks:486:27,0x3fcdef84980,~
code-source-info,0x60697c698e,14,16849,16886,C0O16857C5O16873C8O16864C12O16883,,
code-creation,JS,10,21642557,0x60697c6a7e,32,emitAfterScript node:internal/async_hooks:517:25,0x3fcdef84ac0,~
code-source-info,0x60697c6a7e,14,17609,17710,C0O17624C5O17637C8O17628C14O17651C19O17651C23O17682C26O17682C31O17709,,
code-creation,JS,10,21642673,0x60697c6be6,167,popAsyncContext node:internal/async_hooks:553:25,0x3fcdef84c00,~
code-source-info,0x60697c6be6,14,18745,19347,C0O18780C7O18798C9O18797C13O18816C14O18832C19O18839C20O18852C21O18858C24O18862C31O18885C36O18901C38O18900C44O18920C49O19004C54O19011C58O19037C59O19063C61O19075C65O19083C72O19099C77O19120C80O19131C87O19149C90O19146C93O19118C97O19163C104O19179C109O19198C112O19209C119O19227C122O19236C125O19224C128O19196C132O19245C137O19271C142O19271C146O19281C153O19299C158O19313C162O19326C163O19340C166O19344,,
code-creation,JS,10,21642796,0x60697c6dc6,13,enabledHooksExist node:internal/async_hooks:474:27,0x3fcdef84890,~
code-source-info,0x60697c6dc6,14,16660,16695,C0O16668C5O16684C8O16675C12O16692,,
code-creation,JS,10,21642871,0x60697c6eb6,15,isEmpty node:internal/fixed_queue:95:10,0x3fcdefa5a70,~
code-source-info,0x60697c6eb6,37,3731,3773,C0O3753C5O3758C10O3758C14O3768,,
code-creation,JS,10,21643176,0x60697c7186,632,processPromiseRejections node:internal/process/promises:221:34,0x3fcdefa5190,~
script-source,36,node:internal/process/promises,'use strict';\x0d\n\x0d\nconst {\x0d\n  ArrayPrototypePush\x2C\x0d\n  ArrayPrototypeShift\x2C\x0d\n  Error\x2C\x0d\n  ObjectDefineProperty\x2C\x0d\n  ObjectPrototypeHasOwnProperty\x2C\x0d\n  SafeWeakMap\x2C\x0d\n} = primordials;\x0d\n\x0d\nconst {\x0d\n  tickInfo\x2C\x0d\n  promiseRejectEvents: {\x0d\n    kPromiseRejectWithNoHandler\x2C\x0d\n    kPromiseHandlerAddedAfterReject\x2C\x0d\n    kPromiseResolveAfterResolved\x2C\x0d\n    kPromiseRejectAfterResolved\x2C\x0d\n  }\x2C\x0d\n  setPromiseRejectCallback\x2C\x0d\n} = internalBinding('task_queue');\x0d\n\x0d\nconst { deprecate } = require('internal/util');\x0d\n\x0d\nconst {\x0d\n  noSideEffectsToString\x2C\x0d\n  triggerUncaughtException\x2C\x0d\n  exitCodes: { kGenericUserError }\x2C\x0d\n} = internalBinding('errors');\x0d\n\x0d\nconst {\x0d\n  pushAsyncContext\x2C\x0d\n  popAsyncContext\x2C\x0d\n  symbols: {\x0d\n    async_id_symbol: kAsyncIdSymbol\x2C\x0d\n    trigger_async_id_symbol: kTriggerAsyncIdSymbol\x2C\x0d\n  }\x2C\x0d\n} = require('internal/async_hooks');\x0d\nconst { isErrorStackTraceLimitWritable } = require('internal/errors');\x0d\n\x0d\n// *Must* match Environment::TickInfo::Fields in src/env.h.\x0d\nconst kHasRejectionToWarn = 1;\x0d\n\x0d\nconst maybeUnhandledPromises = new SafeWeakMap();\x0d\nconst pendingUnhandledRejections = [];\x0d\nconst asyncHandledRejections = [];\x0d\nlet lastPromiseId = 0;\x0d\n\x0d\n// --unhandled-rejections=none:\x0d\n// Emit 'unhandledRejection'\x2C but do not emit any warning.\x0d\nconst kIgnoreUnhandledRejections = 0;\x0d\n\x0d\n// --unhandled-rejections=warn:\x0d\n// Emit 'unhandledRejection'\x2C then emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kAlwaysWarnUnhandledRejections = 1;\x0d\n\x0d\n// --unhandled-rejections=strict:\x0d\n// Emit 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\n// Otherwise\x2C emit 'unhandledRejection'. If 'unhandledRejection' is not\x0d\n// handled\x2C emit 'UnhandledPromiseRejectionWarning'.\x0d\nconst kStrictUnhandledRejections = 2;\x0d\n\x0d\n// --unhandled-rejections=throw:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'uncaughtException'. If it's not handled\x2C print the error to stderr\x0d\n// and exit the process.\x0d\nconst kThrowUnhandledRejections = 3;\x0d\n\x0d\n// --unhandled-rejections=warn-with-error-code:\x0d\n// Emit 'unhandledRejection'\x2C if it's unhandled\x2C emit\x0d\n// 'UnhandledPromiseRejectionWarning'\x2C then set process exit code to 1.\x0d\n\x0d\nconst kWarnWithErrorCodeUnhandledRejections = 4;\x0d\n\x0d\nlet unhandledRejectionsMode;\x0d\n\x0d\nfunction setHasRejectionToWarn(value) {\x0d\n  tickInfo[kHasRejectionToWarn] = value ? 1 : 0;\x0d\n}\x0d\n\x0d\nfunction hasRejectionToWarn() {\x0d\n  return tickInfo[kHasRejectionToWarn] === 1;\x0d\n}\x0d\n\x0d\nfunction isErrorLike(o) {\x0d\n  return typeof o === 'object' &&\x0d\n         o !== null &&\x0d\n         ObjectPrototypeHasOwnProperty(o\x2C 'stack');\x0d\n}\x0d\n\x0d\nfunction getUnhandledRejectionsMode() {\x0d\n  const { getOptionValue } = require('internal/options');\x0d\n  switch (getOptionValue('--unhandled-rejections')) {\x0d\n    case 'none':\x0d\n      return kIgnoreUnhandledRejections;\x0d\n    case 'warn':\x0d\n      return kAlwaysWarnUnhandledRejections;\x0d\n    case 'strict':\x0d\n      return kStrictUnhandledRejections;\x0d\n    case 'throw':\x0d\n      return kThrowUnhandledRejections;\x0d\n    case 'warn-with-error-code':\x0d\n      return kWarnWithErrorCodeUnhandledRejections;\x0d\n    default:\x0d\n      return kThrowUnhandledRejections;\x0d\n  }\x0d\n}\x0d\n\x0d\nfunction promiseRejectHandler(type\x2C promise\x2C reason) {\x0d\n  if (unhandledRejectionsMode === undefined) {\x0d\n    unhandledRejectionsMode = getUnhandledRejectionsMode();\x0d\n  }\x0d\n  switch (type) {\x0d\n    case kPromiseRejectWithNoHandler:\x0d\n      unhandledRejection(promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseHandlerAddedAfterReject:\x0d\n      handledRejection(promise);\x0d\n      break;\x0d\n    case kPromiseResolveAfterResolved:\x0d\n      resolveError('resolve'\x2C promise\x2C reason);\x0d\n      break;\x0d\n    case kPromiseRejectAfterResolved:\x0d\n      resolveError('reject'\x2C promise\x2C reason);\x0d\n      break;\x0d\n  }\x0d\n}\x0d\n\x0d\nconst multipleResolvesDeprecate = deprecate(\x0d\n  () => {}\x2C\x0d\n  'The multipleResolves event has been deprecated.'\x2C\x0d\n  'DEP0160'\x2C\x0d\n);\x0d\nfunction resolveError(type\x2C promise\x2C reason) {\x0d\n  // We have to wrap this in a next tick. Otherwise the error could be caught by\x0d\n  // the executed promise.\x0d\n  process.nextTick(() => {\x0d\n    if (process.emit('multipleResolves'\x2C type\x2C promise\x2C reason)) {\x0d\n      multipleResolvesDeprecate();\x0d\n    }\x0d\n  });\x0d\n}\x0d\n\x0d\nfunction unhandledRejection(promise\x2C reason) {\x0d\n  const emit = (reason\x2C promise\x2C promiseInfo) => {\x0d\n    if (promiseInfo.domain) {\x0d\n      return promiseInfo.domain.emit('error'\x2C reason);\x0d\n    }\x0d\n    return process.emit('unhandledRejection'\x2C reason\x2C promise);\x0d\n  };\x0d\n\x0d\n  maybeUnhandledPromises.set(promise\x2C {\x0d\n    reason\x2C\x0d\n    uid: ++lastPromiseId\x2C\x0d\n    warned: false\x2C\x0d\n    domain: process.domain\x2C\x0d\n    emit\x2C\x0d\n  });\x0d\n  // This causes the promise to be referenced at least for one tick.\x0d\n  ArrayPrototypePush(pendingUnhandledRejections\x2C promise);\x0d\n  setHasRejectionToWarn(true);\x0d\n}\x0d\n\x0d\nfunction handledRejection(promise) {\x0d\n  const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n  if (promiseInfo !== undefined) {\x0d\n    maybeUnhandledPromises.delete(promise);\x0d\n    if (promiseInfo.warned) {\x0d\n      const { uid } = promiseInfo;\x0d\n      // Generate the warning object early to get a good stack trace.\x0d\n      // eslint-disable-next-line no-restricted-syntax\x0d\n      const warning = new Error('Promise rejection was handled ' +\x0d\n                                `asynchronously (rejection id: ${uid})`);\x0d\n      warning.name = 'PromiseRejectionHandledWarning';\x0d\n      warning.id = uid;\x0d\n      ArrayPrototypePush(asyncHandledRejections\x2C { promise\x2C warning });\x0d\n      setHasRejectionToWarn(true);\x0d\n      return;\x0d\n    }\x0d\n  }\x0d\n  if (maybeUnhandledPromises.size === 0 && asyncHandledRejections.length === 0)\x0d\n    setHasRejectionToWarn(false);\x0d\n}\x0d\n\x0d\nconst unhandledRejectionErrName = 'UnhandledPromiseRejectionWarning';\x0d\nfunction emitUnhandledRejectionWarning(uid\x2C reason) {\x0d\n  const warning = getErrorWithoutStack(\x0d\n    unhandledRejectionErrName\x2C\x0d\n    'Unhandled promise rejection. This error originated either by ' +\x0d\n      'throwing inside of an async function without a catch block\x2C ' +\x0d\n      'or by rejecting a promise which was not handled with .catch(). ' +\x0d\n      'To terminate the node process on unhandled promise ' +\x0d\n      'rejection\x2C use the CLI flag `--unhandled-rejections=strict` (see ' +\x0d\n      'https://nodejs.org/api/cli.html#cli_unhandled_rejections_mode). ' +\x0d\n      `(rejection id: ${uid})`\x2C\x0d\n  );\x0d\n  try {\x0d\n    if (isErrorLike(reason)) {\x0d\n      warning.stack = reason.stack;\x0d\n      process.emitWarning(reason.stack\x2C unhandledRejectionErrName);\x0d\n    } else {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    }\x0d\n  } catch {\x0d\n    try {\x0d\n      process.emitWarning(\x0d\n        noSideEffectsToString(reason)\x2C unhandledRejectionErrName);\x0d\n    } catch {\x0d\n      // Ignore.\x0d\n    }\x0d\n  }\x0d\n\x0d\n  process.emitWarning(warning);\x0d\n}\x0d\n\x0d\n// If this method returns true\x2C we've executed user code or triggered\x0d\n// a warning to be emitted which requires the microtask and next tick\x0d\n// queues to be drained again.\x0d\nfunction processPromiseRejections() {\x0d\n  let maybeScheduledTicksOrMicrotasks = asyncHandledRejections.length > 0;\x0d\n\x0d\n  while (asyncHandledRejections.length > 0) {\x0d\n    const { promise\x2C warning } = ArrayPrototypeShift(asyncHandledRejections);\x0d\n    if (!process.emit('rejectionHandled'\x2C promise)) {\x0d\n      process.emitWarning(warning);\x0d\n    }\x0d\n  }\x0d\n\x0d\n  let len = pendingUnhandledRejections.length;\x0d\n  while (len--) {\x0d\n    const promise = ArrayPrototypeShift(pendingUnhandledRejections);\x0d\n    const promiseInfo = maybeUnhandledPromises.get(promise);\x0d\n    if (promiseInfo === undefined) {\x0d\n      continue;\x0d\n    }\x0d\n    promiseInfo.warned = true;\x0d\n    const { reason\x2C uid\x2C emit } = promiseInfo;\x0d\n\x0d\n    let needPop = true;\x0d\n    const {\x0d\n      [kAsyncIdSymbol]: promiseAsyncId\x2C\x0d\n      [kTriggerAsyncIdSymbol]: promiseTriggerAsyncId\x2C\x0d\n    } = promise;\x0d\n    // We need to check if async_hooks are enabled\x0d\n    // don't use enabledHooksExist as a Promise could\x0d\n    // come from a vm.* context and not have an async id\x0d\n    if (typeof promiseAsyncId !== 'undefined') {\x0d\n      pushAsyncContext(\x0d\n        promiseAsyncId\x2C\x0d\n        promiseTriggerAsyncId\x2C\x0d\n        promise\x2C\x0d\n      );\x0d\n    }\x0d\n    try {\x0d\n      switch (unhandledRejectionsMode) {\x0d\n        case kStrictUnhandledRejections: {\x0d\n          const err = isErrorLike(reason) ?\x0d\n            reason : generateUnhandledRejectionError(reason);\x0d\n          // This destroys the async stack\x2C don't clear it after\x0d\n          triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n          if (typeof promiseAsyncId !== 'undefined') {\x0d\n            pushAsyncContext(\x0d\n              promise[kAsyncIdSymbol]\x2C\x0d\n              promise[kTriggerAsyncIdSymbol]\x2C\x0d\n              promise\x2C\x0d\n            );\x0d\n          }\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kIgnoreUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          break;\x0d\n        }\x0d\n        case kAlwaysWarnUnhandledRejections: {\x0d\n          emit(reason\x2C promise\x2C promiseInfo);\x0d\n          emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n          break;\x0d\n        }\x0d\n        case kThrowUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            const err = isErrorLike(reason) ?\x0d\n              reason : generateUnhandledRejectionError(reason);\x0d\n              // This destroys the async stack\x2C don't clear it after\x0d\n            triggerUncaughtException(err\x2C true /* fromPromise */);\x0d\n            needPop = false;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n        case kWarnWithErrorCodeUnhandledRejections: {\x0d\n          const handled = emit(reason\x2C promise\x2C promiseInfo);\x0d\n          if (!handled) {\x0d\n            emitUnhandledRejectionWarning(uid\x2C reason);\x0d\n            process.exitCode = kGenericUserError;\x0d\n          }\x0d\n          break;\x0d\n        }\x0d\n      }\x0d\n    } finally {\x0d\n      if (needPop) {\x0d\n        if (typeof promiseAsyncId !== 'undefined') {\x0d\n          popAsyncContext(promiseAsyncId);\x0d\n        }\x0d\n      }\x0d\n    }\x0d\n    maybeScheduledTicksOrMicrotasks = true;\x0d\n  }\x0d\n  return maybeScheduledTicksOrMicrotasks ||\x0d\n         pendingUnhandledRejections.length !== 0;\x0d\n}\x0d\n\x0d\nfunction getErrorWithoutStack(name\x2C message) {\x0d\n  // Reset the stack to prevent any overhead.\x0d\n  const tmp = Error.stackTraceLimit;\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = 0;\x0d\n  // eslint-disable-next-line no-restricted-syntax\x0d\n  const err = new Error(message);\x0d\n  if (isErrorStackTraceLimitWritable()) Error.stackTraceLimit = tmp;\x0d\n  ObjectDefineProperty(err\x2C 'name'\x2C {\x0d\n    __proto__: null\x2C\x0d\n    value: name\x2C\x0d\n    enumerable: false\x2C\x0d\n    writable: true\x2C\x0d\n    configurable: true\x2C\x0d\n  });\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction generateUnhandledRejectionError(reason) {\x0d\n  const message =\x0d\n    'This error originated either by ' +\x0d\n    'throwing inside of an async function without a catch block\x2C ' +\x0d\n    'or by rejecting a promise which was not handled with .catch().' +\x0d\n    ' The promise rejected with the reason ' +\x0d\n    `"${noSideEffectsToString(reason)}".`;\x0d\n\x0d\n  const err = getErrorWithoutStack('UnhandledPromiseRejection'\x2C message);\x0d\n  err.code = 'ERR_UNHANDLED_REJECTION';\x0d\n  return err;\x0d\n}\x0d\n\x0d\nfunction listenForRejections() {\x0d\n  setPromiseRejectCallback(promiseRejectHandler);\x0d\n}\x0d\nmodule.exports = {\x0d\n  hasRejectionToWarn\x2C\x0d\n  setHasRejectionToWarn\x2C\x0d\n  listenForRejections\x2C\x0d\n  processPromiseRejections\x2C\x0d\n};\x0d\n
code-source-info,0x60697c
code-creation,JS,10,21644443,0x60697c8136,25,setHasTickScheduled node:internal/process/task_queues:51:29,0x3fcdefa4590,~
code-source-info,0x60697c8136,35,1137,1197,C0O1150C7O1159C12O1180C19O1178C24O1196,,
code-creation,JS,10,21644522,0x60697c822e,25,setHasRejectionToWarn node:internal/process/promises:78:31,0x3fcdefa4b68,~
code-source-info,0x60697c822e,36,2262,2324,C0O2275C7O2284C12O2307C19O2305C24O2323,,
tick,0x7ff6cc0c4914,21644992,0,0x0,1
delete,MemoryChunk,0x26b19500000
delete,MemoryChunk,0x341f540000
delete,MemoryChunk,0x1e6bfa40000
delete,MemoryChunk,0xde55a40000
delete,MemoryChunk,0x5765340000
delete,MemoryChunk,0x16049ec0000
delete,MemoryChunk,0x28da800000
delete,MemoryChunk,0x21692600000
delete,MemoryChunk,0x1d47b640000
delete,MemoryChunk,0x1c163500000
delete,MemoryChunk,0x29c79d40000
delete,MemoryChunk,0x182d8200000
delete,MemoryChunk,0x1b98a400000
delete,MemoryChunk,0x148d09c0000
delete,MemoryChunk,0x24a9fc00000
delete,MemoryChunk,0xa289b40000
delete,MemoryChunk,0x21f9aa80000
delete,MemoryChunk,0x31ab6400000
delete,MemoryChunk,0x629d680000
delete,MemoryChunk,0xf660040000
delete,MemoryChunk,0x244af5c0000
delete,MemoryChunk,0x2f99aa00000
delete,MemoryChunk,0x3b1db0c0000
delete,MemoryChunk,0xd955180000
delete,MemoryChunk,0xac23600000
delete,MemoryChunk,0x25f3be80000
delete,MemoryChunk,0x1e02f180000
profiler,end
delete,MemoryChunk,0xa2188c0000
delete,MemoryChunk,0x9162000000
delete,MemoryChunk,0x29f5c000000
delete,MemoryChunk,0x3a24d9c0000
delete,MemoryChunk,0x17e1ea40000
delete,MemoryChunk,0x3d34b340000
delete,MemoryChunk,0xdb561c0000
delete,MemoryChunk,0x3f000580000
delete,MemoryChunk,0x14731b00000
delete,MemoryChunk,0x3300b500000
delete,MemoryChunk,0x2ddd9400000
delete,MemoryChunk,0x6c22e80000
delete,MemoryChunk,0x15384000000
delete,MemoryChunk,0x296ee880000
delete,MemoryChunk,0x8ce9e40000
delete,MemoryChunk,0x335abe00000
delete,MemoryChunk,0x3bfa9840000
delete,MemoryChunk,0x1840fa00000
delete,MemoryChunk,0x383d0800000
delete,MemoryChunk,0x634e200000
delete,MemoryChunk,0x2b790500000
delete,MemoryChunk,0x320dfd40000
delete,MemoryChunk,0x1f9a2c00000
delete,MemoryChunk,0x10229cc0000
delete,MemoryChunk,0x3d595980000
delete,MemoryChunk,0x39005e80000
delete,MemoryChunk,0x24c7ec00000
delete,MemoryChunk,0x36b9dac0000
delete,MemoryChunk,0x20630a40000
delete,MemoryChunk,0x2afed00000
delete,MemoryChunk,0x31431e00000
delete,MemoryChunk,0xc26e600000
delete,MemoryChunk,0x29030780000
delete,MemoryChunk,0x3f14c440000
delete,MemoryChunk,0x29b61180000
delete,MemoryChunk,0x31d2e6c0000
delete,MemoryChunk,0x2f804f40000
delete,MemoryChunk,0x16f76dc0000
delete,MemoryChunk,0x28289600000
delete,MemoryChunk,0x37bb9c80000
delete,MemoryChunk,0x9368400000
delete,MemoryChunk,0x390e1300000
delete,MemoryChunk,0x19c5eac0000
delete,MemoryChunk,0x14b27bc0000
delete,MemoryChunk,0x316a2540000
delete,MemoryChunk,0x1b749dc0000
delete,MemoryChunk,0x22391700000
delete,MemoryChunk,0x310b2cc0000
delete,MemoryChunk,0x3a305a40000
delete,MemoryChunk,0x3c6123c0000
delete,MemoryChunk,0x1be00cc0000
delete,MemoryChunk,0x1dc46380000
delete,MemoryChunk,0x21cfbe80000
delete,MemoryChunk,0x383f5b40000
delete,MemoryChunk,0x1c467680000
delete,MemoryChunk,0x3101dc0000
delete,MemoryChunk,0x22e2cd80000
delete,MemoryChunk,0x3eaee240000
delete,MemoryChunk,0x3670f3c0000
delete,MemoryChunk,0x1cde6840000
delete,MemoryChunk,0x3d6034c0000
delete,MemoryChunk,0x2aac2a40000
delete,MemoryChunk,0x7521200000
delete,MemoryChunk,0xadca00000
delete,MemoryChunk,0x18122800000
delete,MemoryChunk,0x31013100000
delete,MemoryChunk,0x999ce80000
delete,MemoryChunk,0x10d2e80000
delete,MemoryChunk,0x198e40000
delete,MemoryChunk,0x77e2f40000
delete,MemoryChunk,0x2fc10980000
delete,MemoryChunk,0x1adbca00000
delete,MemoryChunk,0x3a575a80000
delete,MemoryChunk,0x215c2600000
delete,MemoryChunk,0xbaab300000
delete,MemoryChunk,0x28743b00000
delete,MemoryChunk,0x37ede800000
delete,MemoryChunk,0x14eeab40000
delete,MemoryChunk,0x38843200000
delete,MemoryChunk,0x21a0e280000
delete,MemoryChunk,0x32cc7380000
delete,MemoryChunk,0x3ede0a40000
delete,MemoryChunk,0x3003ff00000
delete,MemoryChunk,0x57dfa40000
delete,MemoryChunk,0x235ace40000
delete,MemoryChunk,0x2188d080000
delete,MemoryChunk,0x1f28bc00000
delete,MemoryChunk,0x259c64c0000
delete,MemoryChunk,0x305cffc0000
delete,MemoryChunk,0x35b32c0000
delete,MemoryChunk,0x12bf2240000
delete,MemoryChunk,0x1b57c540000
delete,MemoryChunk,0x6e72dc0000
delete,MemoryChunk,0x3cee040000
delete,MemoryChunk,0x37780ec0000
delete,MemoryChunk,0x1e800780000
delete,MemoryChunk,0x27948a40000
delete,MemoryChunk,0x36f3e340000
delete,MemoryChunk,0x31055500000
delete,MemoryChunk,0x2f8d1900000
delete,MemoryChunk,0x36f717c0000
delete,MemoryChunk,0xc7f8e00000
delete,MemoryChunk,0x3e479bc0000
delete,MemoryChunk,0x30013680000
delete,MemoryChunk,0x39ddffc0000
delete,MemoryChunk,0x1c5ee00000
delete,MemoryChunk,0xc49ac80000
delete,MemoryChunk,0x68554c0000
delete,MemoryChunk,0x39441c0000
delete,MemoryChunk,0x19e8cbc0000
delete,MemoryChunk,0x26346380000
delete,MemoryChunk,0x13572f40000
delete,MemoryChunk,0x375f9400000
delete,MemoryChunk,0x397fc9c0000
delete,MemoryChunk,0x33933900000
delete,MemoryChunk,0x318dfb80000
delete,MemoryChunk,0x3c1d0a00000
delete,MemoryChunk,0x10fc5140000
delete,MemoryChunk,0x7bc4340000
delete,MemoryChunk,0x24130780000
delete,MemoryChunk,0x22fea700000
delete,MemoryChunk,0xd26a680000
delete,MemoryChunk,0x108cc080000
delete,MemoryChunk,0x2d5dcc0000
delete,MemoryChunk,0x2d1b2cc0000
delete,MemoryChunk,0x3c84ad80000
delete,MemoryChunk,0x18da7780000
delete,MemoryChunk,0x2b20bd00000
delete,MemoryChunk,0xdde06c0000
delete,MemoryChunk,0x2252e240000
delete,MemoryChunk,0x1760ce80000
delete,MemoryChunk,0x2d712d40000
delete,MemoryChunk,0x13927880000
delete,MemoryChunk,0x23399c0000
delete,MemoryChunk,0xea2f00000
delete,MemoryChunk,0x2334a1c0000
delete,MemoryChunk,0x213166c0000
delete,MemoryChunk,0x23fb6a00000
delete,MemoryChunk,0x220dba80000
delete,MemoryChunk,0x1c66f8c0000
delete,MemoryChunk,0x1cc93540000
delete,MemoryChunk,0x13efe1c0000
delete,MemoryChunk,0x23f23c0000
delete,MemoryChunk,0xcb002c0000
delete,MemoryChunk,0x8c1d140000
delete,MemoryChunk,0x2c208080000
delete,MemoryChunk,0x15d1f040000
delete,MemoryChunk,0x3faf0900000
delete,MemoryChunk,0x2975e1c0000
delete,MemoryChunk,0x65ef40000
delete,MemoryChunk,0x2a7bd7c0000
delete,MemoryChunk,0x26a07600000
delete,MemoryChunk,0xc2df900000
delete,MemoryChunk,0x1b9edf40000
delete,MemoryChunk,0x3e413680000
delete,MemoryChunk,0x17139680000
delete,MemoryChunk,0x3a93f640000
delete,MemoryChunk,0x6687140000
delete,MemoryChunk,0x2b9baa40000
delete,MemoryChunk,0x68953c0000
delete,MemoryChunk,0x1c83eec0000
delete,MemoryChunk,0x52d5f80000
delete,MemoryChunk,0xa4044c0000
delete,MemoryChunk,0x33c6bf40000
delete,MemoryChunk,0x2fce8840000
delete,MemoryChunk,0x335fdf00000
delete,MemoryChunk,0x2d88a9c0000
delete,MemoryChunk,0x61c51c0000
delete,MemoryChunk,0x320a6e40000
delete,MemoryChunk,0x3767e540000
delete,MemoryChunk,0x5018180000
delete,MemoryChunk,0x4f46340000
delete,MemoryChunk,0xc170300000
delete,MemoryChunk,0x1e184c00000
delete,MemoryChunk,0x13a35f80000
delete,MemoryChunk,0x26aa5700000
delete,MemoryChunk,0x2c01bf40000
delete,MemoryChunk,0x3fcdef80000
delete,MemoryChunk,0x1b80ee40000
delete,MemoryChunk,0x2bcf6ac0000
delete,MemoryChunk,0x5a5b6c0000
delete,MemoryChunk,0x1d0aa00000
delete,MemoryChunk,0x1a22b40000
delete,MemoryChunk,0x7be7f40000
delete,MemoryChunk,0x2bb6ec80000
delete,MemoryChunk,0x5c3c40000
delete,MemoryChunk,0x49dce00000
delete,MemoryChunk,0xbdcae40000
delete,MemoryChunk,0x294ddc40000
delete,MemoryChunk,0xb401c40000
delete,MemoryChunk,0x1bc61600000
delete,MemoryChunk,0x24f91a00000
delete,MemoryChunk,0x39135980000
delete,MemoryChunk,0x38500580000
delete,MemoryChunk,0x39c990c0000
delete,MemoryChunk,0x15ed1d40000
delete,MemoryChunk,0x15cef7c0000
delete,MemoryChunk,0x380a9480000
delete,MemoryChunk,0x10f5b140000
delete,MemoryChunk,0x32273800000
delete,MemoryChunk,0x96ef380000
delete,MemoryChunk,0xbf51f40000
delete,MemoryChunk,0x3730d640000
delete,MemoryChunk,0x2f856c00000
delete,MemoryChunk,0x293350c0000
delete,MemoryChunk,0x23f13d80000
delete,MemoryChunk,0x875740000
delete,MemoryChunk,0x60697c0000
delete,MemoryChunk,0x2a8f2680000
delete,MemoryChunk,0x20659680000
delete,MemoryChunk,0x191d4280000
delete,MemoryChunk,0x37e19f00000
delete,MemoryChunk,0x2c3cdb80000
delete,MemoryChunk,0x7ff64c440000
delete,MemoryChunk,0x7ff64c480000
delete,LargeObjectChunk,0x1b932840000
delete,MemoryChunk,0x1b932840000
